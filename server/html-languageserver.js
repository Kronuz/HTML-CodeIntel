module.exports = function(e) {
 var t = {};
 function n(e) {
  return "" + ({
   0: "html-languageserver"
  }[e] || e) + ".js";
 }
 function r(t) {
  var r = n(t);
  var i = require(__dirname + "/" + r);
  var a = i.modules, o = i.ids;
  for (var s in a) {
   e[s] = a[s];
  }
 }
 var i = [ [ "taON" ] ];
 for (var a = 0; a < i.length; ++a) {
  var o = i[a];
  for (var s = 1; s < o.length; ++s) {
   var c = o[s];
   r(c);
  }
 }
 function u(n) {
  if (t[n]) {
   return t[n].exports;
  }
  var r = t[n] = {
   i: n,
   l: false,
   exports: {}
  };
  e[n].call(r.exports, r, r.exports, u);
  r.l = true;
  return r.exports;
 }
 u.m = e;
 u.c = t;
 u.d = function(e, t, n) {
  if (!u.o(e, t)) {
   Object.defineProperty(e, t, {
    enumerable: true,
    get: n
   });
  }
 };
 u.r = function(e) {
  if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
   Object.defineProperty(e, Symbol.toStringTag, {
    value: "Module"
   });
  }
  Object.defineProperty(e, "__esModule", {
   value: true
  });
 };
 u.t = function(e, t) {
  if (t & 1) e = u(e);
  if (t & 8) return e;
  if (t & 4 && typeof e === "object" && e && e.__esModule) return e;
  var n = Object.create(null);
  u.r(n);
  Object.defineProperty(n, "default", {
   enumerable: true,
   value: e
  });
  if (t & 2 && typeof e != "string") for (var r in e) u.d(n, r, function(t) {
   return e[t];
  }.bind(null, r));
  return n;
 };
 u.n = function(e) {
  var t = e && e.__esModule ? function t() {
   return e["default"];
  } : function t() {
   return e;
  };
  u.d(t, "a", t);
  return t;
 };
 u.o = function(e, t) {
  return Object.prototype.hasOwnProperty.call(e, t);
 };
 u.p = "";
 return u(u.s = "taON");
}({
 "+OJx": function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  function r(e, t, n) {
   var r = t;
   while (r > 0 && !f(e.charCodeAt(r - 1))) {
    r--;
   }
   var i = t - r;
   var a = e.substr(r);
   var o = n.ignoreCase ? "gi" : "g";
   n = new RegExp(n.source, o);
   var s = n.exec(a);
   while (s && s.index + s[0].length < i) {
    s = n.exec(a);
   }
   if (s && s.index <= i) {
    return {
     start: s.index + r,
     length: s[0].length
    };
   }
   return {
    start: t,
    length: 0
   };
  }
  t.getWordAtText = r;
  function i(e, t) {
   if (e.length < t.length) {
    return false;
   }
   for (var n = 0; n < t.length; n++) {
    if (e[n] !== t[n]) {
     return false;
    }
   }
   return true;
  }
  t.startsWith = i;
  function a(e, t) {
   var n = e.length - t.length;
   if (n > 0) {
    return e.indexOf(t, n) === n;
   } else if (n === 0) {
    return e === t;
   } else {
    return false;
   }
  }
  t.endsWith = a;
  function o(e, t) {
   var n = "";
   while (t > 0) {
    if ((t & 1) === 1) {
     n += e;
    }
    e += e;
    t = t >>> 1;
   }
   return n;
  }
  t.repeat = o;
  function s(e) {
   return /^\s*$/.test(e);
  }
  t.isWhitespaceOnly = s;
  function c(e, t) {
   return f(e.charCodeAt(t));
  }
  t.isEOL = c;
  var u = "\r".charCodeAt(0);
  var l = "\n".charCodeAt(0);
  function f(e) {
   return e === u || e === l;
  }
  t.isNewlineCharacter = f;
 },
 "+cRy": function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  const r = n("owkM");
  const i = n("C+6V");
  const a = n("CcFB");
  t.ImplementationRequest = a.ImplementationRequest;
  const o = n("8ahE");
  t.TypeDefinitionRequest = o.TypeDefinitionRequest;
  const s = n("VqZt");
  t.WorkspaceFoldersRequest = s.WorkspaceFoldersRequest;
  t.DidChangeWorkspaceFoldersNotification = s.DidChangeWorkspaceFoldersNotification;
  const c = n("sKb1");
  t.ConfigurationRequest = c.ConfigurationRequest;
  const u = n("zZpG");
  t.DocumentColorRequest = u.DocumentColorRequest;
  t.ColorPresentationRequest = u.ColorPresentationRequest;
  var l;
  (function(e) {
   function t(e) {
    let t = e;
    return r.string(t.language) || r.string(t.scheme) || r.string(t.pattern);
   }
   e.is = t;
  })(l = t.DocumentFilter || (t.DocumentFilter = {}));
  var f;
  (function(e) {
   e.type = new i.RequestType("client/registerCapability");
  })(f = t.RegistrationRequest || (t.RegistrationRequest = {}));
  var d;
  (function(e) {
   e.type = new i.RequestType("client/unregisterCapability");
  })(d = t.UnregistrationRequest || (t.UnregistrationRequest = {}));
  var p;
  (function(e) {
   e.None = 0;
   e.Full = 1;
   e.Incremental = 2;
  })(p = t.TextDocumentSyncKind || (t.TextDocumentSyncKind = {}));
  var m;
  (function(e) {
   e.type = new i.RequestType("initialize");
  })(m = t.InitializeRequest || (t.InitializeRequest = {}));
  var _;
  (function(e) {
   e.unknownProtocolVersion = 1;
  })(_ = t.InitializeError || (t.InitializeError = {}));
  var g;
  (function(e) {
   e.type = new i.NotificationType("initialized");
  })(g = t.InitializedNotification || (t.InitializedNotification = {}));
  var h;
  (function(e) {
   e.type = new i.RequestType0("shutdown");
  })(h = t.ShutdownRequest || (t.ShutdownRequest = {}));
  var v;
  (function(e) {
   e.type = new i.NotificationType0("exit");
  })(v = t.ExitNotification || (t.ExitNotification = {}));
  var y;
  (function(e) {
   e.type = new i.NotificationType("workspace/didChangeConfiguration");
  })(y = t.DidChangeConfigurationNotification || (t.DidChangeConfigurationNotification = {}));
  var b;
  (function(e) {
   e.Error = 1;
   e.Warning = 2;
   e.Info = 3;
   e.Log = 4;
  })(b = t.MessageType || (t.MessageType = {}));
  var x;
  (function(e) {
   e.type = new i.NotificationType("window/showMessage");
  })(x = t.ShowMessageNotification || (t.ShowMessageNotification = {}));
  var k;
  (function(e) {
   e.type = new i.RequestType("window/showMessageRequest");
  })(k = t.ShowMessageRequest || (t.ShowMessageRequest = {}));
  var S;
  (function(e) {
   e.type = new i.NotificationType("window/logMessage");
  })(S = t.LogMessageNotification || (t.LogMessageNotification = {}));
  var w;
  (function(e) {
   e.type = new i.NotificationType("telemetry/event");
  })(w = t.TelemetryEventNotification || (t.TelemetryEventNotification = {}));
  var C;
  (function(e) {
   e.type = new i.NotificationType("textDocument/didOpen");
  })(C = t.DidOpenTextDocumentNotification || (t.DidOpenTextDocumentNotification = {}));
  var D;
  (function(e) {
   e.type = new i.NotificationType("textDocument/didChange");
  })(D = t.DidChangeTextDocumentNotification || (t.DidChangeTextDocumentNotification = {}));
  var T;
  (function(e) {
   e.type = new i.NotificationType("textDocument/didClose");
  })(T = t.DidCloseTextDocumentNotification || (t.DidCloseTextDocumentNotification = {}));
  var E;
  (function(e) {
   e.type = new i.NotificationType("textDocument/didSave");
  })(E = t.DidSaveTextDocumentNotification || (t.DidSaveTextDocumentNotification = {}));
  var N;
  (function(e) {
   e.type = new i.NotificationType("textDocument/willSave");
  })(N = t.WillSaveTextDocumentNotification || (t.WillSaveTextDocumentNotification = {}));
  var A;
  (function(e) {
   e.type = new i.RequestType("textDocument/willSaveWaitUntil");
  })(A = t.WillSaveTextDocumentWaitUntilRequest || (t.WillSaveTextDocumentWaitUntilRequest = {}));
  var F;
  (function(e) {
   e.type = new i.NotificationType("workspace/didChangeWatchedFiles");
  })(F = t.DidChangeWatchedFilesNotification || (t.DidChangeWatchedFilesNotification = {}));
  var P;
  (function(e) {
   e.Created = 1;
   e.Changed = 2;
   e.Deleted = 3;
  })(P = t.FileChangeType || (t.FileChangeType = {}));
  var I;
  (function(e) {
   e.Create = 1;
   e.Change = 2;
   e.Delete = 4;
  })(I = t.WatchKind || (t.WatchKind = {}));
  var O;
  (function(e) {
   e.type = new i.NotificationType("textDocument/publishDiagnostics");
  })(O = t.PublishDiagnosticsNotification || (t.PublishDiagnosticsNotification = {}));
  var M;
  (function(e) {
   e.Invoked = 1;
   e.TriggerCharacter = 2;
   e.TriggerForIncompleteCompletions = 3;
  })(M = t.CompletionTriggerKind || (t.CompletionTriggerKind = {}));
  var L;
  (function(e) {
   e.type = new i.RequestType("textDocument/completion");
  })(L = t.CompletionRequest || (t.CompletionRequest = {}));
  var R;
  (function(e) {
   e.type = new i.RequestType("completionItem/resolve");
  })(R = t.CompletionResolveRequest || (t.CompletionResolveRequest = {}));
  var B;
  (function(e) {
   e.type = new i.RequestType("textDocument/hover");
  })(B = t.HoverRequest || (t.HoverRequest = {}));
  var z;
  (function(e) {
   e.type = new i.RequestType("textDocument/signatureHelp");
  })(z = t.SignatureHelpRequest || (t.SignatureHelpRequest = {}));
  var j;
  (function(e) {
   e.type = new i.RequestType("textDocument/definition");
  })(j = t.DefinitionRequest || (t.DefinitionRequest = {}));
  var q;
  (function(e) {
   e.type = new i.RequestType("textDocument/references");
  })(q = t.ReferencesRequest || (t.ReferencesRequest = {}));
  var U;
  (function(e) {
   e.type = new i.RequestType("textDocument/documentHighlight");
  })(U = t.DocumentHighlightRequest || (t.DocumentHighlightRequest = {}));
  var J;
  (function(e) {
   e.type = new i.RequestType("textDocument/documentSymbol");
  })(J = t.DocumentSymbolRequest || (t.DocumentSymbolRequest = {}));
  var K;
  (function(e) {
   e.type = new i.RequestType("workspace/symbol");
  })(K = t.WorkspaceSymbolRequest || (t.WorkspaceSymbolRequest = {}));
  var V;
  (function(e) {
   e.type = new i.RequestType("textDocument/codeAction");
  })(V = t.CodeActionRequest || (t.CodeActionRequest = {}));
  var W;
  (function(e) {
   e.type = new i.RequestType("textDocument/codeLens");
  })(W = t.CodeLensRequest || (t.CodeLensRequest = {}));
  var H;
  (function(e) {
   e.type = new i.RequestType("codeLens/resolve");
  })(H = t.CodeLensResolveRequest || (t.CodeLensResolveRequest = {}));
  var G;
  (function(e) {
   e.type = new i.RequestType("textDocument/formatting");
  })(G = t.DocumentFormattingRequest || (t.DocumentFormattingRequest = {}));
  var $;
  (function(e) {
   e.type = new i.RequestType("textDocument/rangeFormatting");
  })($ = t.DocumentRangeFormattingRequest || (t.DocumentRangeFormattingRequest = {}));
  var X;
  (function(e) {
   e.type = new i.RequestType("textDocument/onTypeFormatting");
  })(X = t.DocumentOnTypeFormattingRequest || (t.DocumentOnTypeFormattingRequest = {}));
  var Q;
  (function(e) {
   e.type = new i.RequestType("textDocument/rename");
  })(Q = t.RenameRequest || (t.RenameRequest = {}));
  var Y;
  (function(e) {
   e.type = new i.RequestType("textDocument/documentLink");
  })(Y = t.DocumentLinkRequest || (t.DocumentLinkRequest = {}));
  var Z;
  (function(e) {
   e.type = new i.RequestType("documentLink/resolve");
  })(Z = t.DocumentLinkResolveRequest || (t.DocumentLinkResolveRequest = {}));
  var ee;
  (function(e) {
   e.type = new i.RequestType("workspace/executeCommand");
  })(ee = t.ExecuteCommandRequest || (t.ExecuteCommandRequest = {}));
  var te;
  (function(e) {
   e.type = new i.RequestType("workspace/applyEdit");
  })(te = t.ApplyWorkspaceEditRequest || (t.ApplyWorkspaceEditRequest = {}));
 },
 "/7TX": function(e, t, n) {
  "use strict";
  var r = this && this.__extends || function() {
   var e = Object.setPrototypeOf || {
    __proto__: []
   } instanceof Array && function(e, t) {
    e.__proto__ = t;
   } || function(e, t) {
    for (var n in t) if (t.hasOwnProperty(n)) e[n] = t[n];
   };
   return function(t, n) {
    e(t, n);
    function r() {
     this.constructor = t;
    }
    t.prototype = n === null ? Object.create(n) : (r.prototype = n.prototype, new r());
   };
  }();
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  var i = n("1vg8");
  var a;
  (function(e) {
   e.ParseError = -32700;
   e.InvalidRequest = -32600;
   e.MethodNotFound = -32601;
   e.InvalidParams = -32602;
   e.InternalError = -32603;
   e.serverErrorStart = -32099;
   e.serverErrorEnd = -32e3;
   e.ServerNotInitialized = -32002;
   e.UnknownErrorCode = -32001;
   e.RequestCancelled = -32800;
   e.MessageWriteError = 1;
   e.MessageReadError = 2;
  })(a = t.ErrorCodes || (t.ErrorCodes = {}));
  var o = function(e) {
   r(t, e);
   function t(n, r, o) {
    var s = e.call(this, r) || this;
    s.code = i.number(n) ? n : a.UnknownErrorCode;
    s.data = o;
    Object.setPrototypeOf(s, t.prototype);
    return s;
   }
   t.prototype.toJson = function() {
    return {
     code: this.code,
     message: this.message,
     data: this.data
    };
   };
   return t;
  }(Error);
  t.ResponseError = o;
  var s = function() {
   function e(e, t) {
    this._method = e;
    this._numberOfParams = t;
   }
   Object.defineProperty(e.prototype, "method", {
    get: function() {
     return this._method;
    },
    enumerable: true,
    configurable: true
   });
   Object.defineProperty(e.prototype, "numberOfParams", {
    get: function() {
     return this._numberOfParams;
    },
    enumerable: true,
    configurable: true
   });
   return e;
  }();
  t.AbstractMessageType = s;
  var c = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 0) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(s);
  t.RequestType0 = c;
  var u = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 1) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(s);
  t.RequestType = u;
  var l = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 1) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(s);
  t.RequestType1 = l;
  var f = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 2) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(s);
  t.RequestType2 = f;
  var d = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 3) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(s);
  t.RequestType3 = d;
  var p = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 4) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(s);
  t.RequestType4 = p;
  var m = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 5) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(s);
  t.RequestType5 = m;
  var _ = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 6) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(s);
  t.RequestType6 = _;
  var g = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 7) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(s);
  t.RequestType7 = g;
  var h = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 8) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(s);
  t.RequestType8 = h;
  var v = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 9) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(s);
  t.RequestType9 = v;
  var y = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 1) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(s);
  t.NotificationType = y;
  var b = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 0) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(s);
  t.NotificationType0 = b;
  var x = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 1) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(s);
  t.NotificationType1 = x;
  var k = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 2) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(s);
  t.NotificationType2 = k;
  var S = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 3) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(s);
  t.NotificationType3 = S;
  var w = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 4) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(s);
  t.NotificationType4 = w;
  var C = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 5) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(s);
  t.NotificationType5 = C;
  var D = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 6) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(s);
  t.NotificationType6 = D;
  var T = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 7) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(s);
  t.NotificationType7 = T;
  var E = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 8) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(s);
  t.NotificationType8 = E;
  var N = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 9) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(s);
  t.NotificationType9 = N;
  function A(e) {
   var t = e;
   return t && i.string(t.method) && (i.string(t.id) || i.number(t.id));
  }
  t.isRequestMessage = A;
  function F(e) {
   var t = e;
   return t && i.string(t.method) && e.id === void 0;
  }
  t.isNotificationMessage = F;
  function P(e) {
   var t = e;
   return t && (t.result !== void 0 || !!t.error) && (i.string(t.id) || i.number(t.id) || t.id === null);
  }
  t.isResponseMessage = P;
 },
 "0kUd": function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  function r(e, t, n) {
   var r = {};
   var i = 0;
   var a = void 0;
   if (t > 0) {
    a = setInterval(function() {
     var e = Date.now() - t * 1e3;
     var n = Object.keys(r);
     for (var a = 0, o = n; a < o.length; a++) {
      var s = o[a];
      var c = r[s];
      if (c.cTime < e) {
       delete r[s];
       i--;
      }
     }
    }, t * 1e3);
   }
   return {
    get: function(t) {
     var a = t.version;
     var o = t.languageId;
     var s = r[t.uri];
     if (s && s.version === a && s.languageId === o) {
      s.cTime = Date.now();
      return s.languageModel;
     }
     var c = n(t);
     r[t.uri] = {
      languageModel: c,
      version: a,
      languageId: o,
      cTime: Date.now()
     };
     if (!s) {
      i++;
     }
     if (i === e) {
      var u = Number.MAX_VALUE;
      var l = null;
      for (var f in r) {
       var d = r[f];
       if (d.cTime < u) {
        l = f;
        u = d.cTime;
       }
      }
      if (l) {
       delete r[l];
       i--;
      }
     }
     return c;
    },
    onDocumentRemoved: function(e) {
     var t = e.uri;
     if (r[t]) {
      delete r[t];
      i--;
     }
    },
    dispose: function() {
     if (typeof a !== "undefined") {
      clearInterval(a);
      a = void 0;
      r = {};
      i = 0;
     }
    }
   };
  }
  t.getLanguageModelCache = r;
 },
 "1Ap1": function(e, t, n) {
  var r = n("yyD5").SourceMapConsumer;
  var i = n("oyvS");
  var a;
  try {
   a = n("mw/K");
   if (!a.existsSync || !a.readFileSync) {
    a = null;
   }
  } catch (e) {}
  var o = n("ZTxy");
  var s = false;
  var c = false;
  var u = false;
  var l = "auto";
  var f = {};
  var d = {};
  var p = /^data:application\/json[^,]+base64,/;
  var m = [];
  var _ = [];
  function g() {
   if (l === "browser") return true;
   if (l === "node") return false;
   return typeof window !== "undefined" && typeof XMLHttpRequest === "function" && !(window.require && window.module && window.process && window.process.type === "renderer");
  }
  function h() {
   return typeof process === "object" && process !== null && typeof process.on === "function";
  }
  function v(e) {
   return function(t) {
    for (var n = 0; n < e.length; n++) {
     var r = e[n](t);
     if (r) {
      return r;
     }
    }
    return null;
   };
  }
  var y = v(m);
  m.push(function(e) {
   e = e.trim();
   if (/^file:/.test(e)) {
    e = e.replace(/file:\/\/\/(\w:)?/, function(e, t) {
     return t ? "" : "/";
    });
   }
   if (e in f) {
    return f[e];
   }
   var t = null;
   if (!a) {
    var n = new XMLHttpRequest();
    n.open("GET", e, false);
    n.send(null);
    var t = null;
    if (n.readyState === 4 && n.status === 200) {
     t = n.responseText;
    }
   } else if (a.existsSync(e)) {
    try {
     t = a.readFileSync(e, "utf8");
    } catch (e) {
     t = "";
    }
   }
   return f[e] = t;
  });
  function b(e, t) {
   if (!e) return t;
   var n = i.dirname(e);
   var r = /^\w+:\/\/[^\/]*/.exec(n);
   var a = r ? r[0] : "";
   var o = n.slice(a.length);
   if (a && /^\/\w\:/.test(o)) {
    a += "/";
    return a + i.resolve(n.slice(a.length), t).replace(/\\/g, "/");
   }
   return a + i.resolve(n.slice(a.length), t);
  }
  function x(e) {
   var t;
   if (g()) {
    try {
     var n = new XMLHttpRequest();
     n.open("GET", e, false);
     n.send(null);
     t = n.readyState === 4 ? n.responseText : null;
     var r = n.getResponseHeader("SourceMap") || n.getResponseHeader("X-SourceMap");
     if (r) {
      return r;
     }
    } catch (e) {}
   }
   t = y(e);
   var i = /(?:\/\/[@#][ \t]+sourceMappingURL=([^\s'"]+?)[ \t]*$)|(?:\/\*[@#][ \t]+sourceMappingURL=([^\*]+?)[ \t]*(?:\*\/)[ \t]*$)/gm;
   var a, o;
   while (o = i.exec(t)) a = o;
   if (!a) return null;
   return a[1];
  }
  var k = v(_);
  _.push(function(e) {
   var t = x(e);
   if (!t) return null;
   var n;
   if (p.test(t)) {
    var r = t.slice(t.indexOf(",") + 1);
    n = o(r, "base64").toString();
    t = e;
   } else {
    t = b(e, t);
    n = y(t);
   }
   if (!n) {
    return null;
   }
   return {
    url: t,
    map: n
   };
  });
  function S(e) {
   var t = d[e.source];
   if (!t) {
    var n = k(e.source);
    if (n) {
     t = d[e.source] = {
      url: n.url,
      map: new r(n.map)
     };
     if (t.map.sourcesContent) {
      t.map.sources.forEach(function(e, n) {
       var r = t.map.sourcesContent[n];
       if (r) {
        var i = b(t.url, e);
        f[i] = r;
       }
      });
     }
    } else {
     t = d[e.source] = {
      url: null,
      map: null
     };
    }
   }
   if (t && t.map) {
    var i = t.map.originalPositionFor(e);
    if (i.source !== null) {
     i.source = b(t.url, i.source);
     return i;
    }
   }
   return e;
  }
  function w(e) {
   var t = /^eval at ([^(]+) \((.+):(\d+):(\d+)\)$/.exec(e);
   if (t) {
    var n = S({
     source: t[2],
     line: +t[3],
     column: t[4] - 1
    });
    return "eval at " + t[1] + " (" + n.source + ":" + n.line + ":" + (n.column + 1) + ")";
   }
   t = /^eval at ([^(]+) \((.+)\)$/.exec(e);
   if (t) {
    return "eval at " + t[1] + " (" + w(t[2]) + ")";
   }
   return e;
  }
  function C() {
   var e;
   var t = "";
   if (this.isNative()) {
    t = "native";
   } else {
    e = this.getScriptNameOrSourceURL();
    if (!e && this.isEval()) {
     t = this.getEvalOrigin();
     t += ", ";
    }
    if (e) {
     t += e;
    } else {
     t += "<anonymous>";
    }
    var n = this.getLineNumber();
    if (n != null) {
     t += ":" + n;
     var r = this.getColumnNumber();
     if (r) {
      t += ":" + r;
     }
    }
   }
   var i = "";
   var a = this.getFunctionName();
   var o = true;
   var s = this.isConstructor();
   var c = !(this.isToplevel() || s);
   if (c) {
    var u = this.getTypeName();
    if (u === "[object Object]") {
     u = "null";
    }
    var l = this.getMethodName();
    if (a) {
     if (u && a.indexOf(u) != 0) {
      i += u + ".";
     }
     i += a;
     if (l && a.indexOf("." + l) != a.length - l.length - 1) {
      i += " [as " + l + "]";
     }
    } else {
     i += u + "." + (l || "<anonymous>");
    }
   } else if (s) {
    i += "new " + (a || "<anonymous>");
   } else if (a) {
    i += a;
   } else {
    i += t;
    o = false;
   }
   if (o) {
    i += " (" + t + ")";
   }
   return i;
  }
  function D(e) {
   var t = {};
   Object.getOwnPropertyNames(Object.getPrototypeOf(e)).forEach(function(n) {
    t[n] = /^(?:is|get)/.test(n) ? function() {
     return e[n].call(e);
    } : e[n];
   });
   t.toString = C;
   return t;
  }
  function T(e) {
   if (e.isNative()) {
    return e;
   }
   var t = e.getFileName() || e.getScriptNameOrSourceURL();
   if (t) {
    var n = e.getLineNumber();
    var r = e.getColumnNumber() - 1;
    var i = 62;
    if (n === 1 && r > i && !g() && !e.isEval()) {
     r -= i;
    }
    var a = S({
     source: t,
     line: n,
     column: r
    });
    e = D(e);
    e.getFileName = function() {
     return a.source;
    };
    e.getLineNumber = function() {
     return a.line;
    };
    e.getColumnNumber = function() {
     return a.column + 1;
    };
    e.getScriptNameOrSourceURL = function() {
     return a.source;
    };
    return e;
   }
   var o = e.isEval() && e.getEvalOrigin();
   if (o) {
    o = w(o);
    e = D(e);
    e.getEvalOrigin = function() {
     return o;
    };
    return e;
   }
   return e;
  }
  function E(e, t) {
   if (u) {
    f = {};
    d = {};
   }
   return e + t.map(function(e) {
    return "\n    at " + T(e);
   }).join("");
  }
  function N(e) {
   var t = /\n    at [^(]+ \((.*):(\d+):(\d+)\)/.exec(e.stack);
   if (t) {
    var n = t[1];
    var r = +t[2];
    var i = +t[3];
    var o = f[n];
    if (!o && a && a.existsSync(n)) {
     try {
      o = a.readFileSync(n, "utf8");
     } catch (e) {
      o = "";
     }
    }
    if (o) {
     var s = o.split(/(?:\r\n|\r|\n)/)[r - 1];
     if (s) {
      return n + ":" + r + "\n" + s + "\n" + new Array(i).join(" ") + "^";
     }
    }
   }
   return null;
  }
  function A(e) {
   var t = N(e);
   if (t) {
    a.writeSync(2, "\n" + t + "\n");
   }
   a.writeSync(2, e.stack + "\n");
   process.exit(1);
  }
  function F() {
   var e = process.emit;
   process.emit = function(t) {
    if (t === "uncaughtException") {
     var n = arguments[1] && arguments[1].stack;
     var r = this.listeners(t).length > 0;
     if (n && !r) {
      return A(arguments[1]);
     }
    }
    return e.apply(this, arguments);
   };
  }
  var P = m.slice(0);
  var I = _.slice(0);
  t.wrapCallSite = T;
  t.getErrorSource = N;
  t.mapSourcePosition = S;
  t.retrieveSourceMap = k;
  t.install = function(e) {
   e = e || {};
   if (e.environment) {
    l = e.environment;
    if ([ "node", "browser", "auto" ].indexOf(l) === -1) {
     throw new Error("environment " + l + " was unknown. Available options are {auto, browser, node}");
    }
   }
   if (e.retrieveFile) {
    if (e.overrideRetrieveFile) {
     m.length = 0;
    }
    m.unshift(e.retrieveFile);
   }
   if (e.retrieveSourceMap) {
    if (e.overrideRetrieveSourceMap) {
     _.length = 0;
    }
    _.unshift(e.retrieveSourceMap);
   }
   if (e.hookRequire && !g()) {
    var t;
    try {
     t = n("yLgJ");
    } catch (e) {}
    var r = t.prototype._compile;
    if (!r.__sourceMapSupport) {
     t.prototype._compile = function(e, t) {
      f[t] = e;
      d[t] = undefined;
      return r.call(this, e, t);
     };
     t.prototype._compile.__sourceMapSupport = true;
    }
   }
   if (!u) {
    u = "emptyCacheBetweenOperations" in e ? e.emptyCacheBetweenOperations : false;
   }
   if (!s) {
    s = true;
    Error.prepareStackTrace = E;
   }
   if (!c) {
    var i = "handleUncaughtExceptions" in e ? e.handleUncaughtExceptions : true;
    if (i && h()) {
     c = true;
     F();
    }
   }
  };
  t.resetRetrieveHandlers = function() {
   m.length = 0;
   _.length = 0;
   m = P.slice(0);
   _ = I.slice(0);
  };
 },
 "1nW0": function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  var r = n("t2vm");
  var i = n("0kUd");
  var a = n("ElcG");
  var o = n("Z/sS");
  var s = n("bc5S");
  var c = n("tNlX");
  function u(e, t) {
   var n = r.getLanguageService();
   var u = i.getLanguageModelCache(10, 60, function(e) {
    return a.getDocumentRegions(n, e);
   });
   var l = [];
   l.push(u);
   var f = Object.create(null);
   f["html"] = c.getHTMLMode(n, t);
   if (e["css"]) {
    f["css"] = o.getCSSMode(u, t);
   }
   if (e["javascript"]) {
    f["javascript"] = s.getJavaScriptMode(u, t);
   }
   return {
    getModeAtPosition: function(e, t) {
     var n = u.get(e).getLanguageAtPosition(t);
     if (n) {
      return f[n];
     }
     return void 0;
    },
    getModesInRange: function(e, t) {
     return u.get(e).getLanguageRanges(t).map(function(e) {
      return {
       start: e.start,
       end: e.end,
       mode: e.languageId && f[e.languageId],
       attributeValue: e.attributeValue
      };
     });
    },
    getAllModesInDocument: function(e) {
     var t = [];
     for (var n = 0, r = u.get(e).getLanguagesInDocument(); n < r.length; n++) {
      var i = r[n];
      var a = f[i];
      if (a) {
       t.push(a);
      }
     }
     return t;
    },
    getAllModes: function() {
     var e = [];
     for (var t in f) {
      var n = f[t];
      if (n) {
       e.push(n);
      }
     }
     return e;
    },
    getMode: function(e) {
     return f[e];
    },
    onDocumentRemoved: function(e) {
     l.forEach(function(t) {
      return t.onDocumentRemoved(e);
     });
     for (var t in f) {
      f[t].onDocumentRemoved(e);
     }
    },
    dispose: function() {
     l.forEach(function(e) {
      return e.dispose();
     });
     l = [];
     for (var e in f) {
      f[e].dispose();
     }
     f = {};
    }
   };
  }
  t.getLanguageModes = u;
 },
 "1vg8": function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  var r = Object.prototype.toString;
  function i(e) {
   return e === true || e === false;
  }
  t.boolean = i;
  function a(e) {
   return r.call(e) === "[object String]";
  }
  t.string = a;
  function o(e) {
   return r.call(e) === "[object Number]";
  }
  t.number = o;
  function s(e) {
   return r.call(e) === "[object Error]";
  }
  t.error = s;
  function c(e) {
   return r.call(e) === "[object Function]";
  }
  t.func = c;
  function u(e) {
   return Array.isArray(e);
  }
  t.array = u;
  function l(e) {
   return u(e) && e.every(function(e) {
    return a(e);
   });
  }
  t.stringArray = l;
 },
 "2kav": function(e, t, n) {
  var r = n("RSSt");
  var i = 5;
  var a = 1 << i;
  var o = a - 1;
  var s = a;
  function c(e) {
   return e < 0 ? (-e << 1) + 1 : (e << 1) + 0;
  }
  function u(e) {
   var t = (e & 1) === 1;
   var n = e >> 1;
   return t ? -n : n;
  }
  t.encode = function e(t) {
   var n = "";
   var a;
   var u = c(t);
   do {
    a = u & o;
    u >>>= i;
    if (u > 0) {
     a |= s;
    }
    n += r.encode(a);
   } while (u > 0);
   return n;
  };
  t.decode = function e(t, n, a) {
   var c = t.length;
   var l = 0;
   var f = 0;
   var d, p;
   do {
    if (n >= c) {
     throw new Error("Expected more digits in base 64 VLQ value.");
    }
    p = r.decode(t.charCodeAt(n++));
    if (p === -1) {
     throw new Error("Invalid base64 digit: " + t.charAt(n - 1));
    }
    d = !!(p & s);
    p &= o;
    l = l + (p << f);
    f += i;
   } while (d);
   a.value = u(l);
   a.rest = n;
  };
 },
 "4Wfv": function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  var r;
  (function(e) {
   e.None = 0;
   e.First = 1;
   e.Last = 2;
  })(r = t.Touch || (t.Touch = {}));
  var i = function() {
   function e() {
    this._map = new Map();
    this._head = undefined;
    this._tail = undefined;
    this._size = 0;
   }
   e.prototype.clear = function() {
    this._map.clear();
    this._head = undefined;
    this._tail = undefined;
    this._size = 0;
   };
   e.prototype.isEmpty = function() {
    return !this._head && !this._tail;
   };
   Object.defineProperty(e.prototype, "size", {
    get: function() {
     return this._size;
    },
    enumerable: true,
    configurable: true
   });
   e.prototype.has = function(e) {
    return this._map.has(e);
   };
   e.prototype.get = function(e) {
    var t = this._map.get(e);
    if (!t) {
     return undefined;
    }
    return t.value;
   };
   e.prototype.set = function(e, t, n) {
    if (n === void 0) {
     n = r.None;
    }
    var i = this._map.get(e);
    if (i) {
     i.value = t;
     if (n !== r.None) {
      this.touch(i, n);
     }
    } else {
     i = {
      key: e,
      value: t,
      next: undefined,
      previous: undefined
     };
     switch (n) {
     case r.None:
      this.addItemLast(i);
      break;

     case r.First:
      this.addItemFirst(i);
      break;

     case r.Last:
      this.addItemLast(i);
      break;

     default:
      this.addItemLast(i);
      break;
     }
     this._map.set(e, i);
     this._size++;
    }
   };
   e.prototype.delete = function(e) {
    var t = this._map.get(e);
    if (!t) {
     return false;
    }
    this._map.delete(e);
    this.removeItem(t);
    this._size--;
    return true;
   };
   e.prototype.shift = function() {
    if (!this._head && !this._tail) {
     return undefined;
    }
    if (!this._head || !this._tail) {
     throw new Error("Invalid list");
    }
    var e = this._head;
    this._map.delete(e.key);
    this.removeItem(e);
    this._size--;
    return e.value;
   };
   e.prototype.forEach = function(e, t) {
    var n = this._head;
    while (n) {
     if (t) {
      e.bind(t)(n.value, n.key, this);
     } else {
      e(n.value, n.key, this);
     }
     n = n.next;
    }
   };
   e.prototype.forEachReverse = function(e, t) {
    var n = this._tail;
    while (n) {
     if (t) {
      e.bind(t)(n.value, n.key, this);
     } else {
      e(n.value, n.key, this);
     }
     n = n.previous;
    }
   };
   e.prototype.values = function() {
    var e = [];
    var t = this._head;
    while (t) {
     e.push(t.value);
     t = t.next;
    }
    return e;
   };
   e.prototype.keys = function() {
    var e = [];
    var t = this._head;
    while (t) {
     e.push(t.key);
     t = t.next;
    }
    return e;
   };
   e.prototype.addItemFirst = function(e) {
    if (!this._head && !this._tail) {
     this._tail = e;
    } else if (!this._head) {
     throw new Error("Invalid list");
    } else {
     e.next = this._head;
     this._head.previous = e;
    }
    this._head = e;
   };
   e.prototype.addItemLast = function(e) {
    if (!this._head && !this._tail) {
     this._head = e;
    } else if (!this._tail) {
     throw new Error("Invalid list");
    } else {
     e.previous = this._tail;
     this._tail.next = e;
    }
    this._tail = e;
   };
   e.prototype.removeItem = function(e) {
    if (e === this._head && e === this._tail) {
     this._head = undefined;
     this._tail = undefined;
    } else if (e === this._head) {
     this._head = e.next;
    } else if (e === this._tail) {
     this._tail = e.previous;
    } else {
     var t = e.next;
     var n = e.previous;
     if (!t || !n) {
      throw new Error("Invalid list");
     }
     t.previous = n;
     n.next = t;
    }
   };
   e.prototype.touch = function(e, t) {
    if (!this._head || !this._tail) {
     throw new Error("Invalid list");
    }
    if (t !== r.First && t !== r.Last) {
     return;
    }
    if (t === r.First) {
     if (e === this._head) {
      return;
     }
     var n = e.next;
     var i = e.previous;
     if (e === this._tail) {
      i.next = undefined;
      this._tail = i;
     } else {
      n.previous = i;
      i.next = n;
     }
     e.previous = undefined;
     e.next = this._head;
     this._head.previous = e;
     this._head = e;
    } else if (t === r.Last) {
     if (e === this._tail) {
      return;
     }
     var n = e.next;
     var i = e.previous;
     if (e === this._head) {
      n.previous = undefined;
      this._head = n;
     } else {
      n.previous = i;
      i.next = n;
     }
     e.next = undefined;
     e.previous = this._tail;
     this._tail.next = e;
     this._tail = e;
    }
   };
   return e;
  }();
  t.LinkedMap = i;
 },
 "5TYg": function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  function r(e, t) {
   if (t) {
    for (var n = 0; n < t.length; n++) {
     e.push(t[n]);
    }
   }
  }
  t.pushAll = r;
  function i(e, t) {
   return e.indexOf(t) !== -1;
  }
  t.contains = i;
  function a(e, t) {
   o(e, t);
   return e;
  }
  t.mergeSort = a;
  function o(e, t) {
   if (e.length <= 1) {
    return;
   }
   var n = e.length / 2 | 0;
   var r = e.slice(0, n);
   var i = e.slice(n);
   o(r, t);
   o(i, t);
   var a = 0;
   var s = 0;
   var c = 0;
   while (a < r.length && s < i.length) {
    var u = t(r[a], i[s]);
    if (u <= 0) {
     e[c++] = r[a++];
    } else {
     e[c++] = i[s++];
    }
   }
   while (a < r.length) {
    e[c++] = r[a++];
   }
   while (s < i.length) {
    e[c++] = i[s++];
   }
  }
  function s(e, t, n) {
   var r = 0, i = e.length - 1;
   while (r <= i) {
    var a = (r + i) / 2 | 0;
    var o = n(e[a], t);
    if (o < 0) {
     r = a + 1;
    } else if (o > 0) {
     i = a - 1;
    } else {
     return a;
    }
   }
   return -(r + 1);
  }
  t.binarySearch = s;
 },
 "60ax": function(e, t) {
  function n(e, t, n) {
   var r = e[t];
   e[t] = e[n];
   e[n] = r;
  }
  function r(e, t) {
   return Math.round(e + Math.random() * (t - e));
  }
  function i(e, t, a, o) {
   if (a < o) {
    var s = r(a, o);
    var c = a - 1;
    n(e, s, o);
    var u = e[o];
    for (var l = a; l < o; l++) {
     if (t(e[l], u) <= 0) {
      c += 1;
      n(e, c, l);
     }
    }
    n(e, c + 1, l);
    var f = c + 1;
    i(e, t, a, f - 1);
    i(e, t, f + 1, o);
   }
  }
  t.quickSort = function(e, t) {
   i(e, t, 0, e.length - 1);
  };
 },
 "8ahE": function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  const r = n("C+6V");
  var i;
  (function(e) {
   e.type = new r.RequestType("textDocument/typeDefinition");
  })(i = t.TypeDefinitionRequest || (t.TypeDefinitionRequest = {}));
 },
 "8gE4": function(e, t, n) {
  var r = n("toBv");
  function i(e, t) {
   var n = e.generatedLine;
   var i = t.generatedLine;
   var a = e.generatedColumn;
   var o = t.generatedColumn;
   return i > n || i == n && o >= a || r.compareByGeneratedPositionsInflated(e, t) <= 0;
  }
  function a() {
   this._array = [];
   this._sorted = true;
   this._last = {
    generatedLine: -1,
    generatedColumn: 0
   };
  }
  a.prototype.unsortedForEach = function e(t, n) {
   this._array.forEach(t, n);
  };
  a.prototype.add = function e(t) {
   if (i(this._last, t)) {
    this._last = t;
    this._array.push(t);
   } else {
    this._sorted = false;
    this._array.push(t);
   }
  };
  a.prototype.toArray = function e() {
   if (!this._sorted) {
    this._array.sort(r.compareByGeneratedPositionsInflated);
    this._sorted = true;
   }
   return this._array;
  };
  t.MappingList = a;
 },
 "9i2F": function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  var r = n("COhr");
  function i(e, t, n, i) {
   var o = e.getMode("html");
   var s = r.Range.create(r.Position.create(0, 0), r.Position.create(t.lineCount, 0));
   var c = [];
   if (o && o.getFoldingRanges) {
    c.push.apply(c, o.getFoldingRanges(t, s));
   }
   var u = e.getModesInRange(t, s);
   for (var l = 0, f = u; l < f.length; l++) {
    var d = f[l];
    var p = d.mode;
    if (p && p !== o && p.getFoldingRanges && !d.attributeValue) {
     c.push.apply(c, p.getFoldingRanges(t, d));
    }
   }
   if (n && c.length > n) {
    c = a(c, n);
   }
   return c;
  }
  t.getFoldingRanges = i;
  function a(e, t) {
   e = e.sort(function(e, t) {
    var n = e.startLine - t.startLine;
    if (n === 0) {
     n = e.endLine - t.endLine;
    }
    return n;
   });
   var n = void 0;
   var r = [];
   var i = [];
   var a = [];
   var o = function(e, t) {
    i[e] = t;
    if (t < 30) {
     a[t] = (a[t] || 0) + 1;
    }
   };
   for (var s = 0; s < e.length; s++) {
    var c = e[s];
    if (!n) {
     n = c;
     o(s, 0);
    } else {
     if (c.startLine > n.startLine) {
      if (c.endLine <= n.endLine) {
       r.push(n);
       n = c;
       o(s, r.length);
      } else if (c.startLine > n.endLine) {
       do {
        n = r.pop();
       } while (n && c.startLine > n.endLine);
       if (n) {
        r.push(n);
       }
       n = c;
       o(s, r.length);
      }
     }
    }
   }
   var u = 0;
   var l = 0;
   for (var s = 0; s < a.length; s++) {
    var f = a[s];
    if (f) {
     if (f + u > t) {
      l = s;
      break;
     }
     u += f;
    }
   }
   var d = [];
   for (var s = 0; s < e.length; s++) {
    var p = i[s];
    if (typeof p === "number") {
     if (p < l || p === l && u++ < t) {
      d.push(e[s]);
     }
    }
   }
   return d;
  }
 },
 "9o2r": function(e, t, n) {
  var r = n("2kav");
  var i = n("toBv");
  var a = n("a2YK").ArraySet;
  var o = n("8gE4").MappingList;
  function s(e) {
   if (!e) {
    e = {};
   }
   this._file = i.getArg(e, "file", null);
   this._sourceRoot = i.getArg(e, "sourceRoot", null);
   this._skipValidation = i.getArg(e, "skipValidation", false);
   this._sources = new a();
   this._names = new a();
   this._mappings = new o();
   this._sourcesContents = null;
  }
  s.prototype._version = 3;
  s.fromSourceMap = function e(t) {
   var n = t.sourceRoot;
   var r = new s({
    file: t.file,
    sourceRoot: n
   });
   t.eachMapping(function(e) {
    var t = {
     generated: {
      line: e.generatedLine,
      column: e.generatedColumn
     }
    };
    if (e.source != null) {
     t.source = e.source;
     if (n != null) {
      t.source = i.relative(n, t.source);
     }
     t.original = {
      line: e.originalLine,
      column: e.originalColumn
     };
     if (e.name != null) {
      t.name = e.name;
     }
    }
    r.addMapping(t);
   });
   t.sources.forEach(function(e) {
    var a = e;
    if (n !== null) {
     a = i.relative(n, e);
    }
    if (!r._sources.has(a)) {
     r._sources.add(a);
    }
    var o = t.sourceContentFor(e);
    if (o != null) {
     r.setSourceContent(e, o);
    }
   });
   return r;
  };
  s.prototype.addMapping = function e(t) {
   var n = i.getArg(t, "generated");
   var r = i.getArg(t, "original", null);
   var a = i.getArg(t, "source", null);
   var o = i.getArg(t, "name", null);
   if (!this._skipValidation) {
    this._validateMapping(n, r, a, o);
   }
   if (a != null) {
    a = String(a);
    if (!this._sources.has(a)) {
     this._sources.add(a);
    }
   }
   if (o != null) {
    o = String(o);
    if (!this._names.has(o)) {
     this._names.add(o);
    }
   }
   this._mappings.add({
    generatedLine: n.line,
    generatedColumn: n.column,
    originalLine: r != null && r.line,
    originalColumn: r != null && r.column,
    source: a,
    name: o
   });
  };
  s.prototype.setSourceContent = function e(t, n) {
   var r = t;
   if (this._sourceRoot != null) {
    r = i.relative(this._sourceRoot, r);
   }
   if (n != null) {
    if (!this._sourcesContents) {
     this._sourcesContents = Object.create(null);
    }
    this._sourcesContents[i.toSetString(r)] = n;
   } else if (this._sourcesContents) {
    delete this._sourcesContents[i.toSetString(r)];
    if (Object.keys(this._sourcesContents).length === 0) {
     this._sourcesContents = null;
    }
   }
  };
  s.prototype.applySourceMap = function e(t, n, r) {
   var o = n;
   if (n == null) {
    if (t.file == null) {
     throw new Error("SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, " + 'or the source map\'s "file" property. Both were omitted.');
    }
    o = t.file;
   }
   var s = this._sourceRoot;
   if (s != null) {
    o = i.relative(s, o);
   }
   var c = new a();
   var u = new a();
   this._mappings.unsortedForEach(function(e) {
    if (e.source === o && e.originalLine != null) {
     var n = t.originalPositionFor({
      line: e.originalLine,
      column: e.originalColumn
     });
     if (n.source != null) {
      e.source = n.source;
      if (r != null) {
       e.source = i.join(r, e.source);
      }
      if (s != null) {
       e.source = i.relative(s, e.source);
      }
      e.originalLine = n.line;
      e.originalColumn = n.column;
      if (n.name != null) {
       e.name = n.name;
      }
     }
    }
    var a = e.source;
    if (a != null && !c.has(a)) {
     c.add(a);
    }
    var l = e.name;
    if (l != null && !u.has(l)) {
     u.add(l);
    }
   }, this);
   this._sources = c;
   this._names = u;
   t.sources.forEach(function(e) {
    var n = t.sourceContentFor(e);
    if (n != null) {
     if (r != null) {
      e = i.join(r, e);
     }
     if (s != null) {
      e = i.relative(s, e);
     }
     this.setSourceContent(e, n);
    }
   }, this);
  };
  s.prototype._validateMapping = function e(t, n, r, i) {
   if (n && typeof n.line !== "number" && typeof n.column !== "number") {
    throw new Error("original.line and original.column are not numbers -- you probably meant to omit " + "the original mapping entirely and only map the generated position. If so, pass " + "null for the original mapping instead of an object with empty or null values.");
   }
   if (t && "line" in t && "column" in t && t.line > 0 && t.column >= 0 && !n && !r && !i) {
    return;
   } else if (t && "line" in t && "column" in t && n && "line" in n && "column" in n && t.line > 0 && t.column >= 0 && n.line > 0 && n.column >= 0 && r) {
    return;
   } else {
    throw new Error("Invalid mapping: " + JSON.stringify({
     generated: t,
     source: r,
     original: n,
     name: i
    }));
   }
  };
  s.prototype._serializeMappings = function e() {
   var t = 0;
   var n = 1;
   var a = 0;
   var o = 0;
   var s = 0;
   var c = 0;
   var u = "";
   var l;
   var f;
   var d;
   var p;
   var m = this._mappings.toArray();
   for (var _ = 0, g = m.length; _ < g; _++) {
    f = m[_];
    l = "";
    if (f.generatedLine !== n) {
     t = 0;
     while (f.generatedLine !== n) {
      l += ";";
      n++;
     }
    } else {
     if (_ > 0) {
      if (!i.compareByGeneratedPositionsInflated(f, m[_ - 1])) {
       continue;
      }
      l += ",";
     }
    }
    l += r.encode(f.generatedColumn - t);
    t = f.generatedColumn;
    if (f.source != null) {
     p = this._sources.indexOf(f.source);
     l += r.encode(p - c);
     c = p;
     l += r.encode(f.originalLine - 1 - o);
     o = f.originalLine - 1;
     l += r.encode(f.originalColumn - a);
     a = f.originalColumn;
     if (f.name != null) {
      d = this._names.indexOf(f.name);
      l += r.encode(d - s);
      s = d;
     }
    }
    u += l;
   }
   return u;
  };
  s.prototype._generateSourcesContent = function e(t, n) {
   return t.map(function(e) {
    if (!this._sourcesContents) {
     return null;
    }
    if (n != null) {
     e = i.relative(n, e);
    }
    var t = i.toSetString(e);
    return Object.prototype.hasOwnProperty.call(this._sourcesContents, t) ? this._sourcesContents[t] : null;
   }, this);
  };
  s.prototype.toJSON = function e() {
   var t = {
    version: this._version,
    sources: this._sources.toArray(),
    names: this._names.toArray(),
    mappings: this._serializeMappings()
   };
   if (this._file != null) {
    t.file = this._file;
   }
   if (this._sourceRoot != null) {
    t.sourceRoot = this._sourceRoot;
   }
   if (this._sourcesContents) {
    t.sourcesContent = this._generateSourcesContent(t.sources, t.sourceRoot);
   }
   return t;
  };
  s.prototype.toString = function e() {
   return JSON.stringify(this.toJSON());
  };
  t.SourceMapGenerator = s;
 },
 ALIN: function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  var r = n("Qs2e");
  var i = n("uWpP");
  var a = n("vIUA");
  function o(e, t) {
   if (t === void 0) {
    t = "utf-8";
   }
   var n;
   var o = new Promise(function(e, t) {
    n = e;
   });
   return new Promise(function(s, c) {
    var u = r.createServer(function(e) {
     u.close();
     n([ new i.SocketMessageReader(e, t), new a.SocketMessageWriter(e, t) ]);
    });
    u.on("error", c);
    u.listen(e, "127.0.0.1", function() {
     u.removeListener("error", c);
     s({
      onConnected: function() {
       return o;
      }
     });
    });
   });
  }
  t.createClientSocketTransport = o;
  function s(e, t) {
   if (t === void 0) {
    t = "utf-8";
   }
   var n = r.createConnection(e, "127.0.0.1");
   return [ new i.SocketMessageReader(n, t), new a.SocketMessageWriter(n, t) ];
  }
  t.createServerSocketTransport = s;
 },
 BOov: function(e, t, n) {
  "use strict";
  function r(e) {
   for (var n in e) if (!t.hasOwnProperty(n)) t[n] = e[n];
  }
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  const i = n("C+6V");
  t.ErrorCodes = i.ErrorCodes;
  t.ResponseError = i.ResponseError;
  t.CancellationToken = i.CancellationToken;
  t.CancellationTokenSource = i.CancellationTokenSource;
  t.Disposable = i.Disposable;
  t.Event = i.Event;
  t.Emitter = i.Emitter;
  t.Trace = i.Trace;
  t.SetTraceNotification = i.SetTraceNotification;
  t.LogTraceNotification = i.LogTraceNotification;
  t.RequestType = i.RequestType;
  t.RequestType0 = i.RequestType0;
  t.NotificationType = i.NotificationType;
  t.NotificationType0 = i.NotificationType0;
  t.MessageReader = i.MessageReader;
  t.MessageWriter = i.MessageWriter;
  t.ConnectionStrategy = i.ConnectionStrategy;
  t.StreamMessageReader = i.StreamMessageReader;
  t.StreamMessageWriter = i.StreamMessageWriter;
  t.IPCMessageReader = i.IPCMessageReader;
  t.IPCMessageWriter = i.IPCMessageWriter;
  t.createClientPipeTransport = i.createClientPipeTransport;
  t.createServerPipeTransport = i.createServerPipeTransport;
  t.generateRandomPipeName = i.generateRandomPipeName;
  t.createClientSocketTransport = i.createClientSocketTransport;
  t.createServerSocketTransport = i.createServerSocketTransport;
  r(n("kmEW"));
  r(n("+cRy"));
  function a(e, t, n, r) {
   return i.createMessageConnection(e, t, n, r);
  }
  t.createProtocolConnection = a;
 },
 "C+6V": function(e, t, n) {
  "use strict";
  var r = this && this.__extends || function() {
   var e = Object.setPrototypeOf || {
    __proto__: []
   } instanceof Array && function(e, t) {
    e.__proto__ = t;
   } || function(e, t) {
    for (var n in t) if (t.hasOwnProperty(n)) e[n] = t[n];
   };
   return function(t, n) {
    e(t, n);
    function r() {
     this.constructor = t;
    }
    t.prototype = n === null ? Object.create(n) : (r.prototype = n.prototype, new r());
   };
  }();
  function i(e) {
   for (var n in e) if (!t.hasOwnProperty(n)) t[n] = e[n];
  }
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  var a = n("1vg8");
  var o = n("/7TX");
  t.RequestType = o.RequestType;
  t.RequestType0 = o.RequestType0;
  t.RequestType1 = o.RequestType1;
  t.RequestType2 = o.RequestType2;
  t.RequestType3 = o.RequestType3;
  t.RequestType4 = o.RequestType4;
  t.RequestType5 = o.RequestType5;
  t.RequestType6 = o.RequestType6;
  t.RequestType7 = o.RequestType7;
  t.RequestType8 = o.RequestType8;
  t.RequestType9 = o.RequestType9;
  t.ResponseError = o.ResponseError;
  t.ErrorCodes = o.ErrorCodes;
  t.NotificationType = o.NotificationType;
  t.NotificationType0 = o.NotificationType0;
  t.NotificationType1 = o.NotificationType1;
  t.NotificationType2 = o.NotificationType2;
  t.NotificationType3 = o.NotificationType3;
  t.NotificationType4 = o.NotificationType4;
  t.NotificationType5 = o.NotificationType5;
  t.NotificationType6 = o.NotificationType6;
  t.NotificationType7 = o.NotificationType7;
  t.NotificationType8 = o.NotificationType8;
  t.NotificationType9 = o.NotificationType9;
  var s = n("uWpP");
  t.MessageReader = s.MessageReader;
  t.StreamMessageReader = s.StreamMessageReader;
  t.IPCMessageReader = s.IPCMessageReader;
  t.SocketMessageReader = s.SocketMessageReader;
  var c = n("vIUA");
  t.MessageWriter = c.MessageWriter;
  t.StreamMessageWriter = c.StreamMessageWriter;
  t.IPCMessageWriter = c.IPCMessageWriter;
  t.SocketMessageWriter = c.SocketMessageWriter;
  var u = n("Z5Ki");
  t.Disposable = u.Disposable;
  t.Event = u.Event;
  t.Emitter = u.Emitter;
  var l = n("Ff8q");
  t.CancellationTokenSource = l.CancellationTokenSource;
  t.CancellationToken = l.CancellationToken;
  var f = n("4Wfv");
  i(n("qL5x"));
  i(n("ALIN"));
  var d;
  (function(e) {
   e.type = new o.NotificationType("$/cancelRequest");
  })(d || (d = {}));
  t.NullLogger = Object.freeze({
   error: function() {},
   warn: function() {},
   info: function() {},
   log: function() {}
  });
  var p;
  (function(e) {
   e[e["Off"] = 0] = "Off";
   e[e["Messages"] = 1] = "Messages";
   e[e["Verbose"] = 2] = "Verbose";
  })(p = t.Trace || (t.Trace = {}));
  (function(e) {
   function t(t) {
    t = t.toLowerCase();
    switch (t) {
    case "off":
     return e.Off;

    case "messages":
     return e.Messages;

    case "verbose":
     return e.Verbose;

    default:
     return e.Off;
    }
   }
   e.fromString = t;
   function n(t) {
    switch (t) {
    case e.Off:
     return "off";

    case e.Messages:
     return "messages";

    case e.Verbose:
     return "verbose";

    default:
     return "off";
    }
   }
   e.toString = n;
  })(p = t.Trace || (t.Trace = {}));
  var m;
  (function(e) {
   e.type = new o.NotificationType("$/setTraceNotification");
  })(m = t.SetTraceNotification || (t.SetTraceNotification = {}));
  var _;
  (function(e) {
   e.type = new o.NotificationType("$/logTraceNotification");
  })(_ = t.LogTraceNotification || (t.LogTraceNotification = {}));
  var g;
  (function(e) {
   e[e["Closed"] = 1] = "Closed";
   e[e["Disposed"] = 2] = "Disposed";
   e[e["AlreadyListening"] = 3] = "AlreadyListening";
  })(g = t.ConnectionErrors || (t.ConnectionErrors = {}));
  var h = function(e) {
   r(t, e);
   function t(n, r) {
    var i = e.call(this, r) || this;
    i.code = n;
    Object.setPrototypeOf(i, t.prototype);
    return i;
   }
   return t;
  }(Error);
  t.ConnectionError = h;
  var v;
  (function(e) {
   function t(e) {
    var t = e;
    return t && a.func(t.cancelUndispatched);
   }
   e.is = t;
  })(v = t.ConnectionStrategy || (t.ConnectionStrategy = {}));
  var y;
  (function(e) {
   e[e["New"] = 1] = "New";
   e[e["Listening"] = 2] = "Listening";
   e[e["Closed"] = 3] = "Closed";
   e[e["Disposed"] = 4] = "Disposed";
  })(y || (y = {}));
  function b(e, t, n, r) {
   var i = 0;
   var s = 0;
   var c = 0;
   var v = "2.0";
   var b = undefined;
   var x = Object.create(null);
   var k = undefined;
   var S = Object.create(null);
   var w;
   var C = new f.LinkedMap();
   var D = Object.create(null);
   var T = Object.create(null);
   var E = p.Off;
   var N;
   var A = y.New;
   var F = new u.Emitter();
   var P = new u.Emitter();
   var I = new u.Emitter();
   var O = new u.Emitter();
   function M(e) {
    return "req-" + e.toString();
   }
   function L(e) {
    if (e === null) {
     return "res-unknown-" + (++c).toString();
    } else {
     return "res-" + e.toString();
    }
   }
   function R() {
    return "not-" + (++s).toString();
   }
   function B(e, t) {
    if (o.isRequestMessage(t)) {
     e.set(M(t.id), t);
    } else if (o.isResponseMessage(t)) {
     e.set(L(t.id), t);
    } else {
     e.set(R(), t);
    }
   }
   function z(e) {
    return undefined;
   }
   function j() {
    return A === y.Listening;
   }
   function q() {
    return A === y.Closed;
   }
   function U() {
    return A === y.Disposed;
   }
   function J() {
    if (A === y.New || A === y.Listening) {
     A = y.Closed;
     P.fire(undefined);
    }
   }
   function K(e) {
    F.fire([ e, undefined, undefined ]);
   }
   function V(e) {
    F.fire(e);
   }
   e.onClose(J);
   e.onError(K);
   t.onClose(J);
   t.onError(V);
   function W() {
    if (w || C.size === 0) {
     return;
    }
    w = setImmediate(function() {
     w = undefined;
     H();
    });
   }
   function H() {
    if (C.size === 0) {
     return;
    }
    var e = C.shift();
    try {
     if (o.isRequestMessage(e)) {
      $(e);
     } else if (o.isNotificationMessage(e)) {
      Q(e);
     } else if (o.isResponseMessage(e)) {
      X(e);
     } else {
      Y(e);
     }
    } finally {
     W();
    }
   }
   var G = function(e) {
    try {
     if (o.isNotificationMessage(e) && e.method === d.type.method) {
      var n = M(e.params.id);
      var i = C.get(n);
      if (o.isRequestMessage(i)) {
       var a = r && r.cancelUndispatched ? r.cancelUndispatched(i, z) : z(i);
       if (a && (a.error !== void 0 || a.result !== void 0)) {
        C.delete(n);
        a.id = i.id;
        te(a, e.method, Date.now());
        t.write(a);
        return;
       }
      }
     }
     B(C, e);
    } finally {
     W();
    }
   };
   function $(e) {
    if (U()) {
     return;
    }
    function n(n, r, i) {
     var a = {
      jsonrpc: v,
      id: e.id
     };
     if (n instanceof o.ResponseError) {
      a.error = n.toJson();
     } else {
      a.result = n === void 0 ? null : n;
     }
     te(a, r, i);
     t.write(a);
    }
    function r(n, r, i) {
     var a = {
      jsonrpc: v,
      id: e.id,
      error: n.toJson()
     };
     te(a, r, i);
     t.write(a);
    }
    function i(n, r, i) {
     if (n === void 0) {
      n = null;
     }
     var a = {
      jsonrpc: v,
      id: e.id,
      result: n
     };
     te(a, r, i);
     t.write(a);
    }
    ne(e);
    var s = x[e.method];
    var c;
    var u;
    if (s) {
     c = s.type;
     u = s.handler;
    }
    var f = Date.now();
    if (u || b) {
     var d = new l.CancellationTokenSource();
     var p = String(e.id);
     T[p] = d;
     try {
      var m = void 0;
      if (e.params === void 0 || c !== void 0 && c.numberOfParams === 0) {
       m = u ? u(d.token) : b(e.method, d.token);
      } else if (a.array(e.params) && (c === void 0 || c.numberOfParams > 1)) {
       m = u ? u.apply(void 0, e.params.concat([ d.token ])) : b.apply(void 0, [ e.method ].concat(e.params, [ d.token ]));
      } else {
       m = u ? u(e.params, d.token) : b(e.method, e.params, d.token);
      }
      var _ = m;
      if (!m) {
       delete T[p];
       i(m, e.method, f);
      } else if (_.then) {
       _.then(function(t) {
        delete T[p];
        n(t, e.method, f);
       }, function(t) {
        delete T[p];
        if (t instanceof o.ResponseError) {
         r(t, e.method, f);
        } else if (t && a.string(t.message)) {
         r(new o.ResponseError(o.ErrorCodes.InternalError, "Request " + e.method + " failed with message: " + t.message), e.method, f);
        } else {
         r(new o.ResponseError(o.ErrorCodes.InternalError, "Request " + e.method + " failed unexpectedly without providing any details."), e.method, f);
        }
       });
      } else {
       delete T[p];
       n(m, e.method, f);
      }
     } catch (t) {
      delete T[p];
      if (t instanceof o.ResponseError) {
       n(t, e.method, f);
      } else if (t && a.string(t.message)) {
       r(new o.ResponseError(o.ErrorCodes.InternalError, "Request " + e.method + " failed with message: " + t.message), e.method, f);
      } else {
       r(new o.ResponseError(o.ErrorCodes.InternalError, "Request " + e.method + " failed unexpectedly without providing any details."), e.method, f);
      }
     }
    } else {
     r(new o.ResponseError(o.ErrorCodes.MethodNotFound, "Unhandled method " + e.method), e.method, f);
    }
   }
   function X(e) {
    if (U()) {
     return;
    }
    if (e.id === null) {
     if (e.error) {
      n.error("Received response message without id: Error is: \n" + JSON.stringify(e.error, undefined, 4));
     } else {
      n.error("Received response message without id. No further error information provided.");
     }
    } else {
     var t = String(e.id);
     var r = D[t];
     ie(e, r);
     if (r) {
      delete D[t];
      try {
       if (e.error) {
        var i = e.error;
        r.reject(new o.ResponseError(i.code, i.message, i.data));
       } else if (e.result !== void 0) {
        r.resolve(e.result);
       } else {
        throw new Error("Should never happen.");
       }
      } catch (i) {
       if (i.message) {
        n.error("Response handler '" + r.method + "' failed with message: " + i.message);
       } else {
        n.error("Response handler '" + r.method + "' failed unexpectedly.");
       }
      }
     }
    }
   }
   function Q(e) {
    if (U()) {
     return;
    }
    var t = undefined;
    var r;
    if (e.method === d.type.method) {
     r = function(e) {
      var t = e.id;
      var n = T[String(t)];
      if (n) {
       n.cancel();
      }
     };
    } else {
     var i = S[e.method];
     if (i) {
      r = i.handler;
      t = i.type;
     }
    }
    if (r || k) {
     try {
      re(e);
      if (e.params === void 0 || t !== void 0 && t.numberOfParams === 0) {
       r ? r() : k(e.method);
      } else if (a.array(e.params) && (t === void 0 || t.numberOfParams > 1)) {
       r ? r.apply(void 0, e.params) : k.apply(void 0, [ e.method ].concat(e.params));
      } else {
       r ? r(e.params) : k(e.method, e.params);
      }
     } catch (t) {
      if (t.message) {
       n.error("Notification handler '" + e.method + "' failed with message: " + t.message);
      } else {
       n.error("Notification handler '" + e.method + "' failed unexpectedly.");
      }
     }
    } else {
     I.fire(e);
    }
   }
   function Y(e) {
    if (!e) {
     n.error("Received empty message.");
     return;
    }
    n.error("Received message which is neither a response nor a notification message:\n" + JSON.stringify(e, null, 4));
    var t = e;
    if (a.string(t.id) || a.number(t.id)) {
     var r = String(t.id);
     var i = D[r];
     if (i) {
      i.reject(new Error("The received response has neither a result nor an error property."));
     }
    }
   }
   function Z(e) {
    if (E === p.Off || !N) {
     return;
    }
    var t = undefined;
    if (E === p.Verbose && e.params) {
     t = "Params: " + JSON.stringify(e.params, null, 4) + "\n\n";
    }
    N.log("Sending request '" + e.method + " - (" + e.id + ")'.", t);
   }
   function ee(e) {
    if (E === p.Off || !N) {
     return;
    }
    var t = undefined;
    if (E === p.Verbose) {
     if (e.params) {
      t = "Params: " + JSON.stringify(e.params, null, 4) + "\n\n";
     } else {
      t = "No parameters provided.\n\n";
     }
    }
    N.log("Sending notification '" + e.method + "'.", t);
   }
   function te(e, t, n) {
    if (E === p.Off || !N) {
     return;
    }
    var r = undefined;
    if (E === p.Verbose) {
     if (e.error && e.error.data) {
      r = "Error data: " + JSON.stringify(e.error.data, null, 4) + "\n\n";
     } else {
      if (e.result) {
       r = "Result: " + JSON.stringify(e.result, null, 4) + "\n\n";
      } else if (e.error === void 0) {
       r = "No result returned.\n\n";
      }
     }
    }
    N.log("Sending response '" + t + " - (" + e.id + ")'. Processing request took " + (Date.now() - n) + "ms", r);
   }
   function ne(e) {
    if (E === p.Off || !N) {
     return;
    }
    var t = undefined;
    if (E === p.Verbose && e.params) {
     t = "Params: " + JSON.stringify(e.params, null, 4) + "\n\n";
    }
    N.log("Received request '" + e.method + " - (" + e.id + ")'.", t);
   }
   function re(e) {
    if (E === p.Off || !N || e.method === _.type.method) {
     return;
    }
    var t = undefined;
    if (E === p.Verbose) {
     if (e.params) {
      t = "Params: " + JSON.stringify(e.params, null, 4) + "\n\n";
     } else {
      t = "No parameters provided.\n\n";
     }
    }
    N.log("Received notification '" + e.method + "'.", t);
   }
   function ie(e, t) {
    if (E === p.Off || !N) {
     return;
    }
    var n = undefined;
    if (E === p.Verbose) {
     if (e.error && e.error.data) {
      n = "Error data: " + JSON.stringify(e.error.data, null, 4) + "\n\n";
     } else {
      if (e.result) {
       n = "Result: " + JSON.stringify(e.result, null, 4) + "\n\n";
      } else if (e.error === void 0) {
       n = "No result returned.\n\n";
      }
     }
    }
    if (t) {
     var r = e.error ? " Request failed: " + e.error.message + " (" + e.error.code + ")." : "";
     N.log("Received response '" + t.method + " - (" + e.id + ")' in " + (Date.now() - t.timerStart) + "ms." + r, n);
    } else {
     N.log("Received response " + e.id + " without active response promise.", n);
    }
   }
   function ae() {
    if (q()) {
     throw new h(g.Closed, "Connection is closed.");
    }
    if (U()) {
     throw new h(g.Disposed, "Connection is disposed.");
    }
   }
   function oe() {
    if (j()) {
     throw new h(g.AlreadyListening, "Connection is already listening");
    }
   }
   function se() {
    if (!j()) {
     throw new Error("Call listen() first.");
    }
   }
   function ce(e) {
    if (e === void 0) {
     return null;
    } else {
     return e;
    }
   }
   function ue(e, t) {
    var n;
    var r = e.numberOfParams;
    switch (r) {
    case 0:
     n = null;
     break;

    case 1:
     n = ce(t[0]);
     break;

    default:
     n = [];
     for (var i = 0; i < t.length && i < r; i++) {
      n.push(ce(t[i]));
     }
     if (t.length < r) {
      for (var i = t.length; i < r; i++) {
       n.push(null);
      }
     }
     break;
    }
    return n;
   }
   var le = {
    sendNotification: function(e) {
     var n = [];
     for (var r = 1; r < arguments.length; r++) {
      n[r - 1] = arguments[r];
     }
     ae();
     var i;
     var o;
     if (a.string(e)) {
      i = e;
      switch (n.length) {
      case 0:
       o = null;
       break;

      case 1:
       o = n[0];
       break;

      default:
       o = n;
       break;
      }
     } else {
      i = e.method;
      o = ue(e, n);
     }
     var s = {
      jsonrpc: v,
      method: i,
      params: o
     };
     ee(s);
     t.write(s);
    },
    onNotification: function(e, t) {
     ae();
     if (a.func(e)) {
      k = e;
     } else if (t) {
      if (a.string(e)) {
       S[e] = {
        type: undefined,
        handler: t
       };
      } else {
       S[e.method] = {
        type: e,
        handler: t
       };
      }
     }
    },
    sendRequest: function(e) {
     var n = [];
     for (var r = 1; r < arguments.length; r++) {
      n[r - 1] = arguments[r];
     }
     ae();
     se();
     var s;
     var c;
     var u = undefined;
     if (a.string(e)) {
      s = e;
      switch (n.length) {
      case 0:
       c = null;
       break;

      case 1:
       if (l.CancellationToken.is(n[0])) {
        c = null;
        u = n[0];
       } else {
        c = ce(n[0]);
       }
       break;

      default:
       var f = n.length - 1;
       if (l.CancellationToken.is(n[f])) {
        u = n[f];
        if (n.length === 2) {
         c = ce(n[0]);
        } else {
         c = n.slice(0, f).map(function(e) {
          return ce(e);
         });
        }
       } else {
        c = n.map(function(e) {
         return ce(e);
        });
       }
       break;
      }
     } else {
      s = e.method;
      c = ue(e, n);
      var p = e.numberOfParams;
      u = l.CancellationToken.is(n[p]) ? n[p] : undefined;
     }
     var m = i++;
     var _ = new Promise(function(e, n) {
      var r = {
       jsonrpc: v,
       id: m,
       method: s,
       params: c
      };
      var i = {
       method: s,
       timerStart: Date.now(),
       resolve: e,
       reject: n
      };
      Z(r);
      try {
       t.write(r);
      } catch (e) {
       i.reject(new o.ResponseError(o.ErrorCodes.MessageWriteError, e.message ? e.message : "Unknown reason"));
       i = null;
      }
      if (i) {
       D[String(m)] = i;
      }
     });
     if (u) {
      u.onCancellationRequested(function() {
       le.sendNotification(d.type, {
        id: m
       });
      });
     }
     return _;
    },
    onRequest: function(e, t) {
     ae();
     if (a.func(e)) {
      b = e;
     } else if (t) {
      if (a.string(e)) {
       x[e] = {
        type: undefined,
        handler: t
       };
      } else {
       x[e.method] = {
        type: e,
        handler: t
       };
      }
     }
    },
    trace: function(e, t, n) {
     if (n === void 0) {
      n = false;
     }
     E = e;
     if (E === p.Off) {
      N = undefined;
     } else {
      N = t;
     }
     if (n && !q() && !U()) {
      le.sendNotification(m.type, {
       value: p.toString(e)
      });
     }
    },
    onError: F.event,
    onClose: P.event,
    onUnhandledNotification: I.event,
    onDispose: O.event,
    dispose: function() {
     if (U()) {
      return;
     }
     A = y.Disposed;
     O.fire(undefined);
     var n = new Error("Connection got disposed.");
     Object.keys(D).forEach(function(e) {
      D[e].reject(n);
     });
     D = Object.create(null);
     T = Object.create(null);
     C = new f.LinkedMap();
     if (a.func(t.dispose)) {
      t.dispose();
     }
     if (a.func(e.dispose)) {
      e.dispose();
     }
    },
    listen: function() {
     ae();
     oe();
     A = y.Listening;
     e.listen(G);
    },
    inspect: function() {
     console.log("inspect");
    }
   };
   le.onNotification(_.type, function(e) {
    if (E === p.Off || !N) {
     return;
    }
    N.log(e.message, E === p.Verbose ? e.verbose : undefined);
   });
   return le;
  }
  function x(e) {
   return e.listen !== void 0 && e.read === void 0;
  }
  function k(e) {
   return e.write !== void 0 && e.end === void 0;
  }
  function S(e, n, r, i) {
   if (!r) {
    r = t.NullLogger;
   }
   var a = x(e) ? e : new s.StreamMessageReader(e);
   var o = k(n) ? n : new c.StreamMessageWriter(n);
   return b(a, o, r, i);
  }
  t.createMessageConnection = S;
 },
 COhr: function(e, t, n) {
  "use strict";
  function r(e) {
   for (var n in e) if (!t.hasOwnProperty(n)) t[n] = e[n];
  }
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  const i = n("BOov");
  t.Event = i.Event;
  const a = n("Qhc/");
  const o = n("Jf2r");
  const s = n("Krw1");
  const c = n("mz6j");
  r(n("BOov"));
  const u = n("tGke");
  var l;
  (function(e) {
   e.uriToFilePath = u.uriToFilePath;
   e.resolveGlobalNodePath = u.resolveGlobalNodePath;
   e.resolveGlobalYarnPath = u.resolveGlobalYarnPath;
   e.resolve = u.resolve;
   e.resolveModule = u.resolveModule;
   e.resolveModule2 = u.resolveModule2;
   e.resolveModulePath = u.resolveModulePath;
  })(l = t.Files || (t.Files = {}));
  let f = false;
  let d = undefined;
  function p() {
   const e = "--clientProcessId";
   function t(e) {
    try {
     let t = parseInt(e);
     if (!isNaN(t)) {
      d = setInterval(() => {
       try {
        process.kill(t, 0);
       } catch (e) {
        process.exit(f ? 0 : 1);
       }
      }, 3e3);
     }
    } catch (e) {}
   }
   for (let n = 2; n < process.argv.length; n++) {
    let r = process.argv[n];
    if (r === e && n + 1 < process.argv.length) {
     t(process.argv[n + 1]);
     return;
    } else {
     let n = r.split("=");
     if (n[0] === e) {
      t(n[1]);
     }
    }
   }
  }
  p();
  function m(e) {
   if (e === null) {
    return void 0;
   }
   return e;
  }
  class _ {
   constructor() {
    this._documents = Object.create(null);
    this._onDidChangeContent = new i.Emitter();
    this._onDidOpen = new i.Emitter();
    this._onDidClose = new i.Emitter();
    this._onDidSave = new i.Emitter();
    this._onWillSave = new i.Emitter();
   }
   get syncKind() {
    return i.TextDocumentSyncKind.Full;
   }
   get onDidChangeContent() {
    return this._onDidChangeContent.event;
   }
   get onDidOpen() {
    return this._onDidOpen.event;
   }
   get onWillSave() {
    return this._onWillSave.event;
   }
   onWillSaveWaitUntil(e) {
    this._willSaveWaitUntil = e;
   }
   get onDidSave() {
    return this._onDidSave.event;
   }
   get onDidClose() {
    return this._onDidClose.event;
   }
   get(e) {
    return this._documents[e];
   }
   all() {
    return Object.keys(this._documents).map(e => this._documents[e]);
   }
   keys() {
    return Object.keys(this._documents);
   }
   listen(e) {
    function t(e) {
     return s.func(e.update);
    }
    e.__textDocumentSync = i.TextDocumentSyncKind.Full;
    e.onDidOpenTextDocument(e => {
     let t = e.textDocument;
     let n = i.TextDocument.create(t.uri, t.languageId, t.version, t.text);
     this._documents[t.uri] = n;
     let r = Object.freeze({
      document: n
     });
     this._onDidOpen.fire(r);
     this._onDidChangeContent.fire(r);
    });
    e.onDidChangeTextDocument(e => {
     let n = e.textDocument;
     let r = e.contentChanges;
     let i = r.length > 0 ? r[r.length - 1] : undefined;
     if (i) {
      let e = this._documents[n.uri];
      if (e && t(e)) {
       if (n.version === null || n.version === void 0) {
        throw new Error(`Recevied document change event for ${n.uri} without valid version identifier`);
       }
       e.update(i, n.version);
       this._onDidChangeContent.fire(Object.freeze({
        document: e
       }));
      }
     }
    });
    e.onDidCloseTextDocument(e => {
     let t = this._documents[e.textDocument.uri];
     if (t) {
      delete this._documents[e.textDocument.uri];
      this._onDidClose.fire(Object.freeze({
       document: t
      }));
     }
    });
    e.onWillSaveTextDocument(e => {
     let t = this._documents[e.textDocument.uri];
     if (t) {
      this._onWillSave.fire(Object.freeze({
       document: t,
       reason: e.reason
      }));
     }
    });
    e.onWillSaveTextDocumentWaitUntil((e, t) => {
     let n = this._documents[e.textDocument.uri];
     if (n && this._willSaveWaitUntil) {
      return this._willSaveWaitUntil(Object.freeze({
       document: n,
       reason: e.reason
      }), t);
     } else {
      return [];
     }
    });
    e.onDidSaveTextDocument(e => {
     let t = this._documents[e.textDocument.uri];
     if (t) {
      this._onDidSave.fire(Object.freeze({
       document: t
      }));
     }
    });
   }
  }
  t.TextDocuments = _;
  class g {
   constructor() {
    this._messages = Object.create(null);
   }
   add(e) {
    let t = this._messages[e];
    if (!t) {
     t = 0;
    }
    t++;
    this._messages[e] = t;
   }
   sendErrors(e) {
    Object.keys(this._messages).forEach(t => {
     e.window.showErrorMessage(t);
    });
   }
  }
  t.ErrorMessageTracker = g;
  var h;
  (function(e) {
   function t() {
    return new v();
   }
   e.create = t;
  })(h = t.BulkRegistration || (t.BulkRegistration = {}));
  class v {
   constructor() {
    this._registrations = [];
    this._registered = new Set();
   }
   add(e, t) {
    const n = s.string(e) ? e : e.method;
    if (this._registered.has(n)) {
     throw new Error(`${n} is already added to this registration`);
    }
    const r = c.generateUuid();
    this._registrations.push({
     id: r,
     method: n,
     registerOptions: t || {}
    });
    this._registered.add(n);
   }
   asRegistrationParams() {
    return {
     registrations: this._registrations
    };
   }
  }
  var y;
  (function(e) {
   function t() {
    return new b(undefined, []);
   }
   e.create = t;
  })(y = t.BulkUnregistration || (t.BulkUnregistration = {}));
  class b {
   constructor(e, t) {
    this._connection = e;
    this._unregistrations = new Map();
    t.forEach(e => {
     this._unregistrations.set(e.method, e);
    });
   }
   get isAttached() {
    return !!this._connection;
   }
   attach(e) {
    this._connection = e;
   }
   add(e) {
    this._unregistrations.set(e.method, e);
   }
   dispose() {
    let e = [];
    for (let t of this._unregistrations.values()) {
     e.push(t);
    }
    let t = {
     unregisterations: e
    };
    this._connection.sendRequest(i.UnregistrationRequest.type, t).then(undefined, e => {
     this._connection.console.info(`Bulk unregistration failed.`);
    });
   }
   disposeSingle(e) {
    const t = s.string(e) ? e : e.method;
    const n = this._unregistrations.get(t);
    if (!n) {
     return false;
    }
    let r = {
     unregisterations: [ n ]
    };
    this._connection.sendRequest(i.UnregistrationRequest.type, r).then(() => {
     this._unregistrations.delete(t);
    }, e => {
     this._connection.console.info(`Unregistering request handler for ${n.id} failed.`);
    });
    return true;
   }
  }
  class x {
   constructor() {}
   rawAttach(e) {
    this._rawConnection = e;
   }
   attach(e) {
    this._connection = e;
   }
   get connection() {
    if (!this._connection) {
     throw new Error("Remote is not attached to a connection yet.");
    }
    return this._connection;
   }
   fillServerCapabilities(e) {}
   initialize(e) {}
   error(e) {
    this.send(i.MessageType.Error, e);
   }
   warn(e) {
    this.send(i.MessageType.Warning, e);
   }
   info(e) {
    this.send(i.MessageType.Info, e);
   }
   log(e) {
    this.send(i.MessageType.Log, e);
   }
   send(e, t) {
    if (this._rawConnection) {
     this._rawConnection.sendNotification(i.LogMessageNotification.type, {
      type: e,
      message: t
     });
    }
   }
  }
  class k {
   constructor() {}
   attach(e) {
    this._connection = e;
   }
   get connection() {
    if (!this._connection) {
     throw new Error("Remote is not attached to a connection yet.");
    }
    return this._connection;
   }
   initialize(e) {}
   fillServerCapabilities(e) {}
   showErrorMessage(e, ...t) {
    let n = {
     type: i.MessageType.Error,
     message: e,
     actions: t
    };
    return this._connection.sendRequest(i.ShowMessageRequest.type, n).then(m);
   }
   showWarningMessage(e, ...t) {
    let n = {
     type: i.MessageType.Warning,
     message: e,
     actions: t
    };
    return this._connection.sendRequest(i.ShowMessageRequest.type, n).then(m);
   }
   showInformationMessage(e, ...t) {
    let n = {
     type: i.MessageType.Info,
     message: e,
     actions: t
    };
    return this._connection.sendRequest(i.ShowMessageRequest.type, n).then(m);
   }
  }
  class S {
   attach(e) {
    this._connection = e;
   }
   get connection() {
    if (!this._connection) {
     throw new Error("Remote is not attached to a connection yet.");
    }
    return this._connection;
   }
   initialize(e) {}
   fillServerCapabilities(e) {}
   register(e, t, n) {
    if (e instanceof v) {
     return this.registerMany(e);
    } else if (e instanceof b) {
     return this.registerSingle1(e, t, n);
    } else {
     return this.registerSingle2(e, t);
    }
   }
   registerSingle1(e, t, n) {
    const r = s.string(t) ? t : t.method;
    const a = c.generateUuid();
    let o = {
     registrations: [ {
      id: a,
      method: r,
      registerOptions: n || {}
     } ]
    };
    if (!e.isAttached) {
     e.attach(this._connection);
    }
    return this._connection.sendRequest(i.RegistrationRequest.type, o).then(t => {
     e.add({
      id: a,
      method: r
     });
     return e;
    }, e => {
     this.connection.console.info(`Registering request handler for ${r} failed.`);
     return Promise.reject(e);
    });
   }
   registerSingle2(e, t) {
    const n = s.string(e) ? e : e.method;
    const r = c.generateUuid();
    let a = {
     registrations: [ {
      id: r,
      method: n,
      registerOptions: t || {}
     } ]
    };
    return this._connection.sendRequest(i.RegistrationRequest.type, a).then(e => {
     return i.Disposable.create(() => {
      this.unregisterSingle(r, n);
     });
    }, e => {
     this.connection.console.info(`Registering request handler for ${n} failed.`);
     return Promise.reject(e);
    });
   }
   unregisterSingle(e, t) {
    let n = {
     unregisterations: [ {
      id: e,
      method: t
     } ]
    };
    return this._connection.sendRequest(i.UnregistrationRequest.type, n).then(undefined, t => {
     this.connection.console.info(`Unregistering request handler for ${e} failed.`);
    });
   }
   registerMany(e) {
    let t = e.asRegistrationParams();
    return this._connection.sendRequest(i.RegistrationRequest.type, t).then(() => {
     return new b(this._connection, t.registrations.map(e => {
      return {
       id: e.id,
       method: e.method
      };
     }));
    }, e => {
     this.connection.console.info(`Bulk registration failed.`);
     return Promise.reject(e);
    });
   }
  }
  class w {
   constructor() {}
   attach(e) {
    this._connection = e;
   }
   get connection() {
    if (!this._connection) {
     throw new Error("Remote is not attached to a connection yet.");
    }
    return this._connection;
   }
   initialize(e) {}
   fillServerCapabilities(e) {}
   applyEdit(e) {
    function t(e) {
     return e && !!e.edit;
    }
    let n = t(e) ? e : {
     edit: e
    };
    return this._connection.sendRequest(i.ApplyWorkspaceEditRequest.type, n);
   }
  }
  const C = o.WorkspaceFoldersFeature(a.ConfigurationFeature(w));
  class D {
   constructor() {
    this._trace = i.Trace.Off;
   }
   attach(e) {
    this._connection = e;
   }
   get connection() {
    if (!this._connection) {
     throw new Error("Remote is not attached to a connection yet.");
    }
    return this._connection;
   }
   initialize(e) {}
   fillServerCapabilities(e) {}
   set trace(e) {
    this._trace = e;
   }
   log(e, t) {
    if (this._trace === i.Trace.Off) {
     return;
    }
    this._connection.sendNotification(i.LogTraceNotification.type, {
     message: e,
     verbose: this._trace === i.Trace.Verbose ? t : undefined
    });
   }
  }
  class T {
   constructor() {}
   attach(e) {
    this._connection = e;
   }
   get connection() {
    if (!this._connection) {
     throw new Error("Remote is not attached to a connection yet.");
    }
    return this._connection;
   }
   initialize(e) {}
   fillServerCapabilities(e) {}
   logEvent(e) {
    this._connection.sendNotification(i.TelemetryEventNotification.type, e);
   }
  }
  function E(e, t) {
   return function(n) {
    return t(e(n));
   };
  }
  t.combineConsoleFeatures = E;
  function N(e, t) {
   return function(n) {
    return t(e(n));
   };
  }
  t.combineTelemetryFeatures = N;
  function A(e, t) {
   return function(n) {
    return t(e(n));
   };
  }
  t.combineTracerFeatures = A;
  function F(e, t) {
   return function(n) {
    return t(e(n));
   };
  }
  t.combineClientFeatures = F;
  function P(e, t) {
   return function(n) {
    return t(e(n));
   };
  }
  t.combineWindowFeatures = P;
  function I(e, t) {
   return function(n) {
    return t(e(n));
   };
  }
  t.combineWorkspaceFeatures = I;
  function O(e, t) {
   function n(e, t, n) {
    if (e && t) {
     return n(e, t);
    } else if (e) {
     return e;
    } else {
     return t;
    }
   }
   let r = {
    __brand: "features",
    console: n(e.console, t.console, E),
    tracer: n(e.tracer, t.tracer, A),
    telemetry: n(e.telemetry, t.telemetry, N),
    client: n(e.client, t.client, F),
    window: n(e.window, t.window, P),
    workspace: n(e.workspace, t.workspace, I)
   };
   return r;
  }
  t.combineFeatures = O;
  function M(e, t, n, r) {
   let a;
   let o;
   let s;
   let c;
   if (e !== void 0 && e.__brand === "features") {
    a = e;
    e = t;
    t = n;
    n = r;
   }
   if (i.ConnectionStrategy.is(e)) {
    c = e;
   } else {
    o = e;
    s = t;
    c = n;
   }
   return L(o, s, c, a);
  }
  t.createConnection = M;
  function L(e, t, n, r) {
   if (!e && !t && process.argv.length > 2) {
    let n = void 0;
    let r = void 0;
    let o = process.argv.slice(2);
    for (let s = 0; s < o.length; s++) {
     let c = o[s];
     if (c === "--node-ipc") {
      e = new i.IPCMessageReader(process);
      t = new i.IPCMessageWriter(process);
      break;
     } else if (c === "--stdio") {
      e = process.stdin;
      t = process.stdout;
      break;
     } else if (c === "--socket") {
      n = parseInt(o[s + 1]);
      break;
     } else if (c === "--pipe") {
      r = o[s + 1];
      break;
     } else {
      var a = c.split("=");
      if (a[0] === "--socket") {
       n = parseInt(a[1]);
       break;
      } else if (a[0] === "--pipe") {
       r = a[1];
       break;
      }
     }
    }
    if (n) {
     let r = i.createServerSocketTransport(n);
     e = r[0];
     t = r[1];
    } else if (r) {
     let n = i.createServerPipeTransport(r);
     e = n[0];
     t = n[1];
    }
   }
   var o = "Use arguments of createConnection or set command line parameters: '--node-ipc', '--stdio' or '--socket={number}'";
   if (!e) {
    throw new Error("Connection input stream is not set. " + o);
   }
   if (!t) {
    throw new Error("Connection output stream is not set. " + o);
   }
   if (s.func(e.read) && s.func(e.on)) {
    let t = e;
    t.on("end", () => {
     process.exit(f ? 0 : 1);
    });
    t.on("close", () => {
     process.exit(f ? 0 : 1);
    });
   }
   const c = r && r.console ? new (r.console(x))() : new x();
   const u = i.createProtocolConnection(e, t, c, n);
   c.rawAttach(u);
   const l = r && r.tracer ? new (r.tracer(D))() : new D();
   const p = r && r.telemetry ? new (r.telemetry(T))() : new T();
   const m = r && r.client ? new (r.client(S))() : new S();
   const _ = r && r.window ? new (r.window(k))() : new k();
   const g = r && r.workspace ? new (r.workspace(C))() : new C();
   const h = [ c, l, p, m, _, g ];
   function v(e) {
    if (s.thenable(e)) {
     return e;
    } else {
     return Promise.resolve(e);
    }
   }
   let y = undefined;
   let b = undefined;
   let w = undefined;
   let E = {
    listen: () => u.listen(),
    sendRequest: (e, ...t) => u.sendRequest(s.string(e) ? e : e.method, ...t),
    onRequest: (e, t) => u.onRequest(e, t),
    sendNotification: (e, t) => {
     const n = s.string(e) ? e : e.method;
     if (arguments.length === 1) {
      u.sendNotification(n);
     } else {
      u.sendNotification(n, t);
     }
    },
    onNotification: (e, t) => u.onNotification(e, t),
    onInitialize: e => b = e,
    onInitialized: e => u.onNotification(i.InitializedNotification.type, e),
    onShutdown: e => y = e,
    onExit: e => w = e,
    get console() {
     return c;
    },
    get telemetry() {
     return p;
    },
    get tracer() {
     return l;
    },
    get client() {
     return m;
    },
    get window() {
     return _;
    },
    get workspace() {
     return g;
    },
    onDidChangeConfiguration: e => u.onNotification(i.DidChangeConfigurationNotification.type, e),
    onDidChangeWatchedFiles: e => u.onNotification(i.DidChangeWatchedFilesNotification.type, e),
    __textDocumentSync: undefined,
    onDidOpenTextDocument: e => u.onNotification(i.DidOpenTextDocumentNotification.type, e),
    onDidChangeTextDocument: e => u.onNotification(i.DidChangeTextDocumentNotification.type, e),
    onDidCloseTextDocument: e => u.onNotification(i.DidCloseTextDocumentNotification.type, e),
    onWillSaveTextDocument: e => u.onNotification(i.WillSaveTextDocumentNotification.type, e),
    onWillSaveTextDocumentWaitUntil: e => u.onRequest(i.WillSaveTextDocumentWaitUntilRequest.type, e),
    onDidSaveTextDocument: e => u.onNotification(i.DidSaveTextDocumentNotification.type, e),
    sendDiagnostics: e => u.sendNotification(i.PublishDiagnosticsNotification.type, e),
    onHover: e => u.onRequest(i.HoverRequest.type, e),
    onCompletion: e => u.onRequest(i.CompletionRequest.type, e),
    onCompletionResolve: e => u.onRequest(i.CompletionResolveRequest.type, e),
    onSignatureHelp: e => u.onRequest(i.SignatureHelpRequest.type, e),
    onDefinition: e => u.onRequest(i.DefinitionRequest.type, e),
    onTypeDefinition: e => u.onRequest(i.TypeDefinitionRequest.type, e),
    onImplementation: e => u.onRequest(i.ImplementationRequest.type, e),
    onReferences: e => u.onRequest(i.ReferencesRequest.type, e),
    onDocumentHighlight: e => u.onRequest(i.DocumentHighlightRequest.type, e),
    onDocumentSymbol: e => u.onRequest(i.DocumentSymbolRequest.type, e),
    onWorkspaceSymbol: e => u.onRequest(i.WorkspaceSymbolRequest.type, e),
    onCodeAction: e => u.onRequest(i.CodeActionRequest.type, e),
    onCodeLens: e => u.onRequest(i.CodeLensRequest.type, e),
    onCodeLensResolve: e => u.onRequest(i.CodeLensResolveRequest.type, e),
    onDocumentFormatting: e => u.onRequest(i.DocumentFormattingRequest.type, e),
    onDocumentRangeFormatting: e => u.onRequest(i.DocumentRangeFormattingRequest.type, e),
    onDocumentOnTypeFormatting: e => u.onRequest(i.DocumentOnTypeFormattingRequest.type, e),
    onRenameRequest: e => u.onRequest(i.RenameRequest.type, e),
    onDocumentLinks: e => u.onRequest(i.DocumentLinkRequest.type, e),
    onDocumentLinkResolve: e => u.onRequest(i.DocumentLinkResolveRequest.type, e),
    onDocumentColor: e => u.onRequest(i.DocumentColorRequest.type, e),
    onColorPresentation: e => u.onRequest(i.ColorPresentationRequest.type, e),
    onExecuteCommand: e => u.onRequest(i.ExecuteCommandRequest.type, e),
    dispose: () => u.dispose()
   };
   for (let e of h) {
    e.attach(E);
   }
   u.onRequest(i.InitializeRequest.type, e => {
    if (s.number(e.processId) && d === void 0) {
     setInterval(() => {
      try {
       process.kill(e.processId, 0);
      } catch (e) {
       process.exit(f ? 0 : 1);
      }
     }, 3e3);
    }
    if (s.string(e.trace)) {
     l.trace = i.Trace.fromString(e.trace);
    }
    for (let t of h) {
     t.initialize(e.capabilities);
    }
    if (b) {
     let t = b(e, new i.CancellationTokenSource().token);
     return v(t).then(e => {
      if (e instanceof i.ResponseError) {
       return e;
      }
      let t = e;
      if (!t) {
       t = {
        capabilities: {}
       };
      }
      let n = t.capabilities;
      if (!n) {
       n = {};
       t.capabilities = n;
      }
      if (!n.textDocumentSync) {
       n.textDocumentSync = s.number(E.__textDocumentSync) ? E.__textDocumentSync : i.TextDocumentSyncKind.None;
      } else if (!s.number(n.textDocumentSync) && !s.number(n.textDocumentSync.change)) {
       n.textDocumentSync.change = s.number(E.__textDocumentSync) ? E.__textDocumentSync : i.TextDocumentSyncKind.None;
      }
      for (let e of h) {
       e.fillServerCapabilities(n);
      }
      return t;
     });
    } else {
     let e = {
      capabilities: {
       textDocumentSync: i.TextDocumentSyncKind.None
      }
     };
     for (let t of h) {
      t.fillServerCapabilities(e.capabilities);
     }
     return e;
    }
   });
   u.onRequest(i.ShutdownRequest.type, () => {
    f = true;
    if (y) {
     return y(new i.CancellationTokenSource().token);
    } else {
     return undefined;
    }
   });
   u.onNotification(i.ExitNotification.type, () => {
    try {
     if (w) {
      w();
     }
    } finally {
     if (f) {
      process.exit(0);
     } else {
      process.exit(1);
     }
    }
   });
   u.onNotification(i.SetTraceNotification.type, e => {
    l.trace = i.Trace.fromString(e.value);
   });
   return E;
  }
  var R;
  (function(e) {
   e.all = {
    __brand: "features"
   };
  })(R = t.ProposedFeatures || (t.ProposedFeatures = {}));
 },
 CcFB: function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  const r = n("C+6V");
  var i;
  (function(e) {
   e.type = new r.RequestType("textDocument/implementation");
  })(i = t.ImplementationRequest || (t.ImplementationRequest = {}));
 },
 D7GY: function(e, t, n) {
  "use strict";
  n.r(t);
  var r;
  (function(e) {
   e[e["Ident"] = 0] = "Ident";
   e[e["AtKeyword"] = 1] = "AtKeyword";
   e[e["String"] = 2] = "String";
   e[e["BadString"] = 3] = "BadString";
   e[e["UnquotedString"] = 4] = "UnquotedString";
   e[e["Hash"] = 5] = "Hash";
   e[e["Num"] = 6] = "Num";
   e[e["Percentage"] = 7] = "Percentage";
   e[e["Dimension"] = 8] = "Dimension";
   e[e["UnicodeRange"] = 9] = "UnicodeRange";
   e[e["CDO"] = 10] = "CDO";
   e[e["CDC"] = 11] = "CDC";
   e[e["Colon"] = 12] = "Colon";
   e[e["SemiColon"] = 13] = "SemiColon";
   e[e["CurlyL"] = 14] = "CurlyL";
   e[e["CurlyR"] = 15] = "CurlyR";
   e[e["ParenthesisL"] = 16] = "ParenthesisL";
   e[e["ParenthesisR"] = 17] = "ParenthesisR";
   e[e["BracketL"] = 18] = "BracketL";
   e[e["BracketR"] = 19] = "BracketR";
   e[e["Whitespace"] = 20] = "Whitespace";
   e[e["Includes"] = 21] = "Includes";
   e[e["Dashmatch"] = 22] = "Dashmatch";
   e[e["SubstringOperator"] = 23] = "SubstringOperator";
   e[e["PrefixOperator"] = 24] = "PrefixOperator";
   e[e["SuffixOperator"] = 25] = "SuffixOperator";
   e[e["Delim"] = 26] = "Delim";
   e[e["EMS"] = 27] = "EMS";
   e[e["EXS"] = 28] = "EXS";
   e[e["Length"] = 29] = "Length";
   e[e["Angle"] = 30] = "Angle";
   e[e["Time"] = 31] = "Time";
   e[e["Freq"] = 32] = "Freq";
   e[e["Exclamation"] = 33] = "Exclamation";
   e[e["Resolution"] = 34] = "Resolution";
   e[e["Comma"] = 35] = "Comma";
   e[e["Charset"] = 36] = "Charset";
   e[e["EscapedJavaScript"] = 37] = "EscapedJavaScript";
   e[e["BadEscapedJavaScript"] = 38] = "BadEscapedJavaScript";
   e[e["Comment"] = 39] = "Comment";
   e[e["SingleLineComment"] = 40] = "SingleLineComment";
   e[e["EOF"] = 41] = "EOF";
   e[e["CustomToken"] = 42] = "CustomToken";
  })(r || (r = {}));
  var i = function() {
   function e(e) {
    this.source = e;
    this.len = e.length;
    this.position = 0;
   }
   e.prototype.substring = function(e, t) {
    if (t === void 0) {
     t = this.position;
    }
    return this.source.substring(e, t);
   };
   e.prototype.eos = function() {
    return this.len <= this.position;
   };
   e.prototype.pos = function() {
    return this.position;
   };
   e.prototype.goBackTo = function(e) {
    this.position = e;
   };
   e.prototype.goBack = function(e) {
    this.position -= e;
   };
   e.prototype.advance = function(e) {
    this.position += e;
   };
   e.prototype.nextChar = function() {
    return this.source.charCodeAt(this.position++) || 0;
   };
   e.prototype.peekChar = function(e) {
    if (e === void 0) {
     e = 0;
    }
    return this.source.charCodeAt(this.position + e) || 0;
   };
   e.prototype.lookbackChar = function(e) {
    if (e === void 0) {
     e = 0;
    }
    return this.source.charCodeAt(this.position - e) || 0;
   };
   e.prototype.advanceIfChar = function(e) {
    if (e === this.source.charCodeAt(this.position)) {
     this.position++;
     return true;
    }
    return false;
   };
   e.prototype.advanceIfChars = function(e) {
    var t;
    if (this.position + e.length > this.source.length) {
     return false;
    }
    for (t = 0; t < e.length; t++) {
     if (this.source.charCodeAt(this.position + t) !== e[t]) {
      return false;
     }
    }
    this.advance(t);
    return true;
   };
   e.prototype.advanceWhileChar = function(e) {
    var t = this.position;
    while (this.position < this.len && e(this.source.charCodeAt(this.position))) {
     this.position++;
    }
    return this.position - t;
   };
   return e;
  }();
  var a = "a".charCodeAt(0);
  var o = "f".charCodeAt(0);
  var s = "z".charCodeAt(0);
  var c = "A".charCodeAt(0);
  var u = "F".charCodeAt(0);
  var l = "Z".charCodeAt(0);
  var f = "0".charCodeAt(0);
  var d = "9".charCodeAt(0);
  var p = "~".charCodeAt(0);
  var m = "^".charCodeAt(0);
  var _ = "=".charCodeAt(0);
  var g = "|".charCodeAt(0);
  var h = "-".charCodeAt(0);
  var v = "_".charCodeAt(0);
  var y = "%".charCodeAt(0);
  var b = "*".charCodeAt(0);
  var x = "(".charCodeAt(0);
  var k = ")".charCodeAt(0);
  var S = "<".charCodeAt(0);
  var w = ">".charCodeAt(0);
  var C = "@".charCodeAt(0);
  var D = "#".charCodeAt(0);
  var T = "$".charCodeAt(0);
  var E = "\\".charCodeAt(0);
  var N = "/".charCodeAt(0);
  var A = "\n".charCodeAt(0);
  var F = "\r".charCodeAt(0);
  var P = "\f".charCodeAt(0);
  var I = '"'.charCodeAt(0);
  var O = "'".charCodeAt(0);
  var M = " ".charCodeAt(0);
  var L = "\t".charCodeAt(0);
  var R = ";".charCodeAt(0);
  var B = ":".charCodeAt(0);
  var z = "{".charCodeAt(0);
  var j = "}".charCodeAt(0);
  var q = "[".charCodeAt(0);
  var U = "]".charCodeAt(0);
  var J = ",".charCodeAt(0);
  var K = ".".charCodeAt(0);
  var V = "!".charCodeAt(0);
  var W = {};
  W[R] = r.SemiColon;
  W[B] = r.Colon;
  W[z] = r.CurlyL;
  W[j] = r.CurlyR;
  W[U] = r.BracketR;
  W[q] = r.BracketL;
  W[x] = r.ParenthesisL;
  W[k] = r.ParenthesisR;
  W[J] = r.Comma;
  var H = {};
  H["em"] = r.EMS;
  H["ex"] = r.EXS;
  H["px"] = r.Length;
  H["cm"] = r.Length;
  H["mm"] = r.Length;
  H["in"] = r.Length;
  H["pt"] = r.Length;
  H["pc"] = r.Length;
  H["deg"] = r.Angle;
  H["rad"] = r.Angle;
  H["grad"] = r.Angle;
  H["ms"] = r.Time;
  H["s"] = r.Time;
  H["hz"] = r.Freq;
  H["khz"] = r.Freq;
  H["%"] = r.Percentage;
  H["fr"] = r.Percentage;
  H["dpi"] = r.Resolution;
  H["dpcm"] = r.Resolution;
  var G = function() {
   function e() {
    this.stream = new i("");
    this.ignoreComment = true;
    this.ignoreWhitespace = true;
    this.inURL = false;
   }
   e.prototype.setSource = function(e) {
    this.stream = new i(e);
   };
   e.prototype.finishToken = function(e, t, n) {
    return {
     offset: e,
     len: this.stream.pos() - e,
     type: t,
     text: n || this.stream.substring(e)
    };
   };
   e.prototype.substring = function(e, t) {
    return this.stream.substring(e, e + t);
   };
   e.prototype.pos = function() {
    return this.stream.pos();
   };
   e.prototype.goBackTo = function(e) {
    this.stream.goBackTo(e);
   };
   e.prototype.scanUnquotedString = function() {
    var e = this.stream.pos();
    var t = [];
    if (this._unquotedString(t)) {
     return this.finishToken(e, r.UnquotedString, t.join(""));
    }
    return null;
   };
   e.prototype.scan = function() {
    var e = this.trivia();
    if (e !== null) {
     return e;
    }
    var t = this.stream.pos();
    if (this.stream.eos()) {
     return this.finishToken(t, r.EOF);
    }
    return this.scanNext(t);
   };
   e.prototype.scanNext = function(e) {
    if (this.stream.advanceIfChars([ S, V, h, h ])) {
     return this.finishToken(e, r.CDO);
    }
    if (this.stream.advanceIfChars([ h, h, w ])) {
     return this.finishToken(e, r.CDC);
    }
    var t = [];
    if (this.ident(t)) {
     return this.finishToken(e, r.Ident, t.join(""));
    }
    if (this.stream.advanceIfChar(C)) {
     t = [ "@" ];
     if (this._name(t)) {
      var n = t.join("");
      if (n === "@charset") {
       return this.finishToken(e, r.Charset, n);
      }
      return this.finishToken(e, r.AtKeyword, n);
     } else {
      return this.finishToken(e, r.Delim);
     }
    }
    if (this.stream.advanceIfChar(D)) {
     t = [ "#" ];
     if (this._name(t)) {
      return this.finishToken(e, r.Hash, t.join(""));
     } else {
      return this.finishToken(e, r.Delim);
     }
    }
    if (this.stream.advanceIfChar(V)) {
     return this.finishToken(e, r.Exclamation);
    }
    if (this._number()) {
     var i = this.stream.pos();
     t = [ this.stream.substring(e, i) ];
     if (this.stream.advanceIfChar(y)) {
      return this.finishToken(e, r.Percentage);
     } else if (this.ident(t)) {
      var a = this.stream.substring(i).toLowerCase();
      var o = H[a];
      if (typeof o !== "undefined") {
       return this.finishToken(e, o, t.join(""));
      } else {
       return this.finishToken(e, r.Dimension, t.join(""));
      }
     }
     return this.finishToken(e, r.Num);
    }
    t = [];
    var s = this._string(t);
    if (s !== null) {
     return this.finishToken(e, s, t.join(""));
    }
    s = W[this.stream.peekChar()];
    if (typeof s !== "undefined") {
     this.stream.advance(1);
     return this.finishToken(e, s);
    }
    if (this.stream.peekChar(0) === p && this.stream.peekChar(1) === _) {
     this.stream.advance(2);
     return this.finishToken(e, r.Includes);
    }
    if (this.stream.peekChar(0) === g && this.stream.peekChar(1) === _) {
     this.stream.advance(2);
     return this.finishToken(e, r.Dashmatch);
    }
    if (this.stream.peekChar(0) === b && this.stream.peekChar(1) === _) {
     this.stream.advance(2);
     return this.finishToken(e, r.SubstringOperator);
    }
    if (this.stream.peekChar(0) === m && this.stream.peekChar(1) === _) {
     this.stream.advance(2);
     return this.finishToken(e, r.PrefixOperator);
    }
    if (this.stream.peekChar(0) === T && this.stream.peekChar(1) === _) {
     this.stream.advance(2);
     return this.finishToken(e, r.SuffixOperator);
    }
    this.stream.nextChar();
    return this.finishToken(e, r.Delim);
   };
   e.prototype._matchWordAnyCase = function(e) {
    var t = 0;
    this.stream.advanceWhileChar(function(n) {
     var r = e[t] === n || e[t + 1] === n;
     if (r) {
      t += 2;
     }
     return r;
    });
    if (t === e.length) {
     return true;
    } else {
     this.stream.goBack(t / 2);
     return false;
    }
   };
   e.prototype.trivia = function() {
    while (true) {
     var e = this.stream.pos();
     if (this._whitespace()) {
      if (!this.ignoreWhitespace) {
       return this.finishToken(e, r.Whitespace);
      }
     } else if (this.comment()) {
      if (!this.ignoreComment) {
       return this.finishToken(e, r.Comment);
      }
     } else {
      return null;
     }
    }
   };
   e.prototype.comment = function() {
    if (this.stream.advanceIfChars([ N, b ])) {
     var e = false, t = false;
     this.stream.advanceWhileChar(function(n) {
      if (t && n === N) {
       e = true;
       return false;
      }
      t = n === b;
      return true;
     });
     if (e) {
      this.stream.advance(1);
     }
     return true;
    }
    return false;
   };
   e.prototype._number = function() {
    var e = 0, t;
    if (this.stream.peekChar() === K) {
     e = 1;
    }
    t = this.stream.peekChar(e);
    if (t >= f && t <= d) {
     this.stream.advance(e + 1);
     this.stream.advanceWhileChar(function(t) {
      return t >= f && t <= d || e === 0 && t === K;
     });
     return true;
    }
    return false;
   };
   e.prototype._newline = function(e) {
    var t = this.stream.peekChar();
    switch (t) {
    case F:
    case P:
    case A:
     this.stream.advance(1);
     e.push(String.fromCharCode(t));
     if (t === F && this.stream.advanceIfChar(A)) {
      e.push("\n");
     }
     return true;
    }
    return false;
   };
   e.prototype._escape = function(e, t) {
    var n = this.stream.peekChar();
    if (n === E) {
     this.stream.advance(1);
     n = this.stream.peekChar();
     var r = 0;
     while (r < 6 && (n >= f && n <= d || n >= a && n <= o || n >= c && n <= u)) {
      this.stream.advance(1);
      n = this.stream.peekChar();
      r++;
     }
     if (r > 0) {
      try {
       var i = parseInt(this.stream.substring(this.stream.pos() - r), 16);
       if (i) {
        e.push(String.fromCharCode(i));
       }
      } catch (e) {}
      if (n === M || n === L) {
       this.stream.advance(1);
      } else {
       this._newline([]);
      }
      return true;
     }
     if (n !== F && n !== P && n !== A) {
      this.stream.advance(1);
      e.push(String.fromCharCode(n));
      return true;
     } else if (t) {
      return this._newline(e);
     }
    }
    return false;
   };
   e.prototype._stringChar = function(e, t) {
    var n = this.stream.peekChar();
    if (n !== 0 && n !== e && n !== E && n !== F && n !== P && n !== A) {
     this.stream.advance(1);
     t.push(String.fromCharCode(n));
     return true;
    }
    return false;
   };
   e.prototype._string = function(e) {
    if (this.stream.peekChar() === O || this.stream.peekChar() === I) {
     var t = this.stream.nextChar();
     e.push(String.fromCharCode(t));
     while (this._stringChar(t, e) || this._escape(e, true)) {}
     if (this.stream.peekChar() === t) {
      this.stream.nextChar();
      e.push(String.fromCharCode(t));
      return r.String;
     } else {
      return r.BadString;
     }
    }
    return null;
   };
   e.prototype._unquotedChar = function(e) {
    var t = this.stream.peekChar();
    if (t !== 0 && t !== E && t !== O && t !== I && t !== x && t !== k && t !== M && t !== L && t !== A && t !== P && t !== F) {
     this.stream.advance(1);
     e.push(String.fromCharCode(t));
     return true;
    }
    return false;
   };
   e.prototype._unquotedString = function(e) {
    var t = false;
    while (this._unquotedChar(e) || this._escape(e)) {
     t = true;
    }
    return t;
   };
   e.prototype._whitespace = function() {
    var e = this.stream.advanceWhileChar(function(e) {
     return e === M || e === L || e === A || e === P || e === F;
    });
    return e > 0;
   };
   e.prototype._name = function(e) {
    var t = false;
    while (this._identChar(e) || this._escape(e)) {
     t = true;
    }
    return t;
   };
   e.prototype.ident = function(e) {
    var t = this.stream.pos();
    var n = this._minus(e);
    if (n && this._minus(e)) {
     if (this._identFirstChar(e) || this._escape(e)) {
      while (this._identChar(e) || this._escape(e)) {}
      return true;
     }
    } else if (this._identFirstChar(e) || this._escape(e)) {
     while (this._identChar(e) || this._escape(e)) {}
     return true;
    }
    this.stream.goBackTo(t);
    return false;
   };
   e.prototype._identFirstChar = function(e) {
    var t = this.stream.peekChar();
    if (t === v || t >= a && t <= s || t >= c && t <= l || t >= 128 && t <= 65535) {
     this.stream.advance(1);
     e.push(String.fromCharCode(t));
     return true;
    }
    return false;
   };
   e.prototype._minus = function(e) {
    var t = this.stream.peekChar();
    if (t === h) {
     this.stream.advance(1);
     e.push(String.fromCharCode(t));
     return true;
    }
    return false;
   };
   e.prototype._identChar = function(e) {
    var t = this.stream.peekChar();
    if (t === v || t === h || t >= a && t <= s || t >= c && t <= l || t >= f && t <= d || t >= 128 && t <= 65535) {
     this.stream.advance(1);
     e.push(String.fromCharCode(t));
     return true;
    }
    return false;
   };
   return e;
  }();
  var $ = undefined && undefined.__extends || function() {
   var e = Object.setPrototypeOf || {
    __proto__: []
   } instanceof Array && function(e, t) {
    e.__proto__ = t;
   } || function(e, t) {
    for (var n in t) if (t.hasOwnProperty(n)) e[n] = t[n];
   };
   return function(t, n) {
    e(t, n);
    function r() {
     this.constructor = t;
    }
    t.prototype = n === null ? Object.create(n) : (r.prototype = n.prototype, new r());
   };
  }();
  var X;
  (function(e) {
   e[e["Undefined"] = 0] = "Undefined";
   e[e["Identifier"] = 1] = "Identifier";
   e[e["Stylesheet"] = 2] = "Stylesheet";
   e[e["Ruleset"] = 3] = "Ruleset";
   e[e["Selector"] = 4] = "Selector";
   e[e["SimpleSelector"] = 5] = "SimpleSelector";
   e[e["SelectorInterpolation"] = 6] = "SelectorInterpolation";
   e[e["SelectorCombinator"] = 7] = "SelectorCombinator";
   e[e["SelectorCombinatorParent"] = 8] = "SelectorCombinatorParent";
   e[e["SelectorCombinatorSibling"] = 9] = "SelectorCombinatorSibling";
   e[e["SelectorCombinatorAllSiblings"] = 10] = "SelectorCombinatorAllSiblings";
   e[e["SelectorCombinatorShadowPiercingDescendant"] = 11] = "SelectorCombinatorShadowPiercingDescendant";
   e[e["Page"] = 12] = "Page";
   e[e["PageBoxMarginBox"] = 13] = "PageBoxMarginBox";
   e[e["ClassSelector"] = 14] = "ClassSelector";
   e[e["IdentifierSelector"] = 15] = "IdentifierSelector";
   e[e["ElementNameSelector"] = 16] = "ElementNameSelector";
   e[e["PseudoSelector"] = 17] = "PseudoSelector";
   e[e["AttributeSelector"] = 18] = "AttributeSelector";
   e[e["Declaration"] = 19] = "Declaration";
   e[e["Declarations"] = 20] = "Declarations";
   e[e["Property"] = 21] = "Property";
   e[e["Expression"] = 22] = "Expression";
   e[e["BinaryExpression"] = 23] = "BinaryExpression";
   e[e["Term"] = 24] = "Term";
   e[e["Operator"] = 25] = "Operator";
   e[e["Value"] = 26] = "Value";
   e[e["StringLiteral"] = 27] = "StringLiteral";
   e[e["URILiteral"] = 28] = "URILiteral";
   e[e["EscapedValue"] = 29] = "EscapedValue";
   e[e["Function"] = 30] = "Function";
   e[e["NumericValue"] = 31] = "NumericValue";
   e[e["HexColorValue"] = 32] = "HexColorValue";
   e[e["MixinDeclaration"] = 33] = "MixinDeclaration";
   e[e["MixinReference"] = 34] = "MixinReference";
   e[e["VariableName"] = 35] = "VariableName";
   e[e["VariableDeclaration"] = 36] = "VariableDeclaration";
   e[e["Prio"] = 37] = "Prio";
   e[e["Interpolation"] = 38] = "Interpolation";
   e[e["NestedProperties"] = 39] = "NestedProperties";
   e[e["ExtendsReference"] = 40] = "ExtendsReference";
   e[e["SelectorPlaceholder"] = 41] = "SelectorPlaceholder";
   e[e["Debug"] = 42] = "Debug";
   e[e["If"] = 43] = "If";
   e[e["Else"] = 44] = "Else";
   e[e["For"] = 45] = "For";
   e[e["Each"] = 46] = "Each";
   e[e["While"] = 47] = "While";
   e[e["MixinContent"] = 48] = "MixinContent";
   e[e["Media"] = 49] = "Media";
   e[e["Keyframe"] = 50] = "Keyframe";
   e[e["FontFace"] = 51] = "FontFace";
   e[e["Import"] = 52] = "Import";
   e[e["Namespace"] = 53] = "Namespace";
   e[e["Invocation"] = 54] = "Invocation";
   e[e["FunctionDeclaration"] = 55] = "FunctionDeclaration";
   e[e["ReturnStatement"] = 56] = "ReturnStatement";
   e[e["MediaQuery"] = 57] = "MediaQuery";
   e[e["FunctionParameter"] = 58] = "FunctionParameter";
   e[e["FunctionArgument"] = 59] = "FunctionArgument";
   e[e["KeyframeSelector"] = 60] = "KeyframeSelector";
   e[e["ViewPort"] = 61] = "ViewPort";
   e[e["Document"] = 62] = "Document";
   e[e["AtApplyRule"] = 63] = "AtApplyRule";
   e[e["CustomPropertyDeclaration"] = 64] = "CustomPropertyDeclaration";
   e[e["CustomPropertySet"] = 65] = "CustomPropertySet";
   e[e["ListEntry"] = 66] = "ListEntry";
   e[e["Supports"] = 67] = "Supports";
   e[e["SupportsCondition"] = 68] = "SupportsCondition";
   e[e["NamespacePrefix"] = 69] = "NamespacePrefix";
   e[e["GridLine"] = 70] = "GridLine";
   e[e["Plugin"] = 71] = "Plugin";
  })(X || (X = {}));
  var Q;
  (function(e) {
   e[e["Mixin"] = 0] = "Mixin";
   e[e["Rule"] = 1] = "Rule";
   e[e["Variable"] = 2] = "Variable";
   e[e["Function"] = 3] = "Function";
   e[e["Keyframe"] = 4] = "Keyframe";
   e[e["Unknown"] = 5] = "Unknown";
  })(Q || (Q = {}));
  function Y(e, t) {
   var n = null;
   if (!e || t < e.offset || t > e.end) {
    return null;
   }
   e.accept(function(e) {
    if (e.offset === -1 && e.length === -1) {
     return true;
    }
    if (e.offset <= t && e.end >= t) {
     if (!n) {
      n = e;
     } else if (e.length <= n.length) {
      n = e;
     }
     return true;
    }
    return false;
   });
   return n;
  }
  function Z(e, t) {
   var n = Y(e, t);
   var r = [];
   while (n) {
    r.unshift(n);
    n = n.parent;
   }
   return r;
  }
  function ee(e) {
   var t = e.findParent(X.Declaration);
   if (t && t.getValue() && t.getValue().encloses(e)) {
    return t;
   }
   return null;
  }
  var te = function() {
   function e(e, t, n) {
    if (e === void 0) {
     e = -1;
    }
    if (t === void 0) {
     t = -1;
    }
    this.parent = null;
    this.offset = e;
    this.length = t;
    if (n) {
     this.nodeType = n;
    }
   }
   Object.defineProperty(e.prototype, "end", {
    get: function() {
     return this.offset + this.length;
    },
    enumerable: true,
    configurable: true
   });
   Object.defineProperty(e.prototype, "type", {
    get: function() {
     return this.nodeType || X.Undefined;
    },
    set: function(e) {
     this.nodeType = e;
    },
    enumerable: true,
    configurable: true
   });
   e.prototype.getTextProvider = function() {
    var e = this;
    while (e && !e.textProvider) {
     e = e.parent;
    }
    if (e) {
     return e.textProvider;
    }
    return function() {
     return "unknown";
    };
   };
   e.prototype.getText = function() {
    return this.getTextProvider()(this.offset, this.length);
   };
   e.prototype.matches = function(e) {
    return this.length === e.length && this.getTextProvider()(this.offset, this.length) === e;
   };
   e.prototype.startsWith = function(e) {
    return this.length >= e.length && this.getTextProvider()(this.offset, e.length) === e;
   };
   e.prototype.endsWith = function(e) {
    return this.length >= e.length && this.getTextProvider()(this.end - e.length, e.length) === e;
   };
   e.prototype.accept = function(e) {
    if (e(this) && this.children) {
     for (var t = 0, n = this.children; t < n.length; t++) {
      var r = n[t];
      r.accept(e);
     }
    }
   };
   e.prototype.acceptVisitor = function(e) {
    this.accept(e.visitNode.bind(e));
   };
   e.prototype.adoptChild = function(e, t) {
    if (t === void 0) {
     t = -1;
    }
    if (e.parent && e.parent.children) {
     var n = e.parent.children.indexOf(e);
     if (n >= 0) {
      e.parent.children.splice(n, 1);
     }
    }
    e.parent = this;
    var r = this.children;
    if (!r) {
     r = this.children = [];
    }
    if (t !== -1) {
     r.splice(t, 0, e);
    } else {
     r.push(e);
    }
    return e;
   };
   e.prototype.attachTo = function(e, t) {
    if (t === void 0) {
     t = -1;
    }
    if (e) {
     e.adoptChild(this, t);
    }
    return this;
   };
   e.prototype.collectIssues = function(e) {
    if (this.issues) {
     e.push.apply(e, this.issues);
    }
   };
   e.prototype.addIssue = function(e) {
    if (!this.issues) {
     this.issues = [];
    }
    this.issues.push(e);
   };
   e.prototype.hasIssue = function(e) {
    return Array.isArray(this.issues) && this.issues.some(function(t) {
     return t.getRule() === e;
    });
   };
   e.prototype.isErroneous = function(e) {
    if (e === void 0) {
     e = false;
    }
    if (this.issues && this.issues.length > 0) {
     return true;
    }
    return e && Array.isArray(this.children) && this.children.some(function(e) {
     return e.isErroneous(true);
    });
   };
   e.prototype.setNode = function(e, t, n) {
    if (n === void 0) {
     n = -1;
    }
    if (t) {
     t.attachTo(this, n);
     this[e] = t;
     return true;
    }
    return false;
   };
   e.prototype.addChild = function(e) {
    if (e) {
     if (!this.children) {
      this.children = [];
     }
     e.attachTo(this);
     this.updateOffsetAndLength(e);
     return true;
    }
    return false;
   };
   e.prototype.updateOffsetAndLength = function(e) {
    if (e.offset < this.offset || this.offset === -1) {
     this.offset = e.offset;
    }
    var t = e.end;
    if (t > this.end || this.length === -1) {
     this.length = t - this.offset;
    }
   };
   e.prototype.hasChildren = function() {
    return this.children && this.children.length > 0;
   };
   e.prototype.getChildren = function() {
    return this.children ? this.children.slice(0) : [];
   };
   e.prototype.getChild = function(e) {
    if (this.children && e < this.children.length) {
     return this.children[e];
    }
    return null;
   };
   e.prototype.addChildren = function(e) {
    for (var t = 0, n = e; t < n.length; t++) {
     var r = n[t];
     this.addChild(r);
    }
   };
   e.prototype.findFirstChildBeforeOffset = function(e) {
    if (this.children) {
     var t = null;
     for (var n = this.children.length - 1; n >= 0; n--) {
      t = this.children[n];
      if (t.offset <= e) {
       return t;
      }
     }
    }
    return null;
   };
   e.prototype.findChildAtOffset = function(e, t) {
    var n = this.findFirstChildBeforeOffset(e);
    if (n && n.end >= e) {
     if (t) {
      return n.findChildAtOffset(e, true) || n;
     }
     return n;
    }
    return null;
   };
   e.prototype.encloses = function(e) {
    return this.offset <= e.offset && this.offset + this.length >= e.offset + e.length;
   };
   e.prototype.getParent = function() {
    var e = this.parent;
    while (e instanceof ne) {
     e = e.parent;
    }
    return e;
   };
   e.prototype.findParent = function(e) {
    var t = this;
    while (t && t.type !== e) {
     t = t.parent;
    }
    return t;
   };
   e.prototype.setData = function(e, t) {
    if (!this.options) {
     this.options = {};
    }
    this.options[e] = t;
   };
   e.prototype.getData = function(e) {
    if (!this.options || !this.options.hasOwnProperty(e)) {
     return null;
    }
    return this.options[e];
   };
   return e;
  }();
  var ne = function(e) {
   $(t, e);
   function t(t, n) {
    if (n === void 0) {
     n = -1;
    }
    var r = e.call(this, -1, -1) || this;
    r.attachTo(t, n);
    r.offset = -1;
    r.length = -1;
    return r;
   }
   return t;
  }(te);
  var re = function(e) {
   $(t, e);
   function t(t, n) {
    var r = e.call(this, t, n) || this;
    r.isCustomProperty = false;
    return r;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.Identifier;
    },
    enumerable: true,
    configurable: true
   });
   t.prototype.containsInterpolation = function() {
    return this.hasChildren();
   };
   return t;
  }(te);
  var ie = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.Stylesheet;
    },
    enumerable: true,
    configurable: true
   });
   t.prototype.setName = function(e) {
    this.name = e;
   };
   return t;
  }(te);
  var ae = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.Declarations;
    },
    enumerable: true,
    configurable: true
   });
   return t;
  }(te);
  var oe = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   t.prototype.getDeclarations = function() {
    return this.declarations;
   };
   t.prototype.setDeclarations = function(e) {
    return this.setNode("declarations", e);
   };
   return t;
  }(te);
  var se = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.Ruleset;
    },
    enumerable: true,
    configurable: true
   });
   t.prototype.getSelectors = function() {
    if (!this.selectors) {
     this.selectors = new ne(this);
    }
    return this.selectors;
   };
   t.prototype.isNested = function() {
    return !!this.parent && this.parent.findParent(X.Declarations) !== null;
   };
   return t;
  }(oe);
  var ce = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.Selector;
    },
    enumerable: true,
    configurable: true
   });
   return t;
  }(te);
  var ue = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.SimpleSelector;
    },
    enumerable: true,
    configurable: true
   });
   return t;
  }(te);
  var le = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.AtApplyRule;
    },
    enumerable: true,
    configurable: true
   });
   t.prototype.setIdentifier = function(e) {
    return this.setNode("identifier", e, 0);
   };
   t.prototype.getIdentifier = function() {
    return this.identifier;
   };
   t.prototype.getName = function() {
    return this.identifier ? this.identifier.getText() : "";
   };
   return t;
  }(te);
  var fe = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   return t;
  }(te);
  var de = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.CustomPropertyDeclaration;
    },
    enumerable: true,
    configurable: true
   });
   t.prototype.setProperty = function(e) {
    return this.setNode("property", e);
   };
   t.prototype.getProperty = function() {
    return this.property;
   };
   t.prototype.setValue = function(e) {
    return this.setNode("value", e);
   };
   t.prototype.getValue = function() {
    return this.value;
   };
   t.prototype.setPropertySet = function(e) {
    return this.setNode("propertySet", e);
   };
   t.prototype.getPropertySet = function() {
    return this.propertySet;
   };
   return t;
  }(fe);
  var pe = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.CustomPropertySet;
    },
    enumerable: true,
    configurable: true
   });
   return t;
  }(oe);
  var me = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.Declaration;
    },
    enumerable: true,
    configurable: true
   });
   t.prototype.setProperty = function(e) {
    return this.setNode("property", e);
   };
   t.prototype.getProperty = function() {
    return this.property;
   };
   t.prototype.getFullPropertyName = function() {
    var e = this.property ? this.property.getName() : "unknown";
    if (this.parent instanceof ae && this.parent.getParent() instanceof Ee) {
     var n = this.parent.getParent().getParent();
     if (n instanceof t) {
      return n.getFullPropertyName() + e;
     }
    }
    return e;
   };
   t.prototype.getNonPrefixedPropertyName = function() {
    var e = this.getFullPropertyName();
    if (e && e.charAt(0) === "-") {
     var t = e.indexOf("-", 1);
     if (t !== -1) {
      return e.substring(t + 1);
     }
    }
    return e;
   };
   t.prototype.setValue = function(e) {
    return this.setNode("value", e);
   };
   t.prototype.getValue = function() {
    return this.value;
   };
   t.prototype.setNestedProperties = function(e) {
    return this.setNode("nestedProprties", e);
   };
   t.prototype.getNestedProperties = function() {
    return this.nestedProprties;
   };
   return t;
  }(fe);
  var _e = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.Property;
    },
    enumerable: true,
    configurable: true
   });
   t.prototype.setIdentifier = function(e) {
    return this.setNode("identifier", e);
   };
   t.prototype.getIdentifier = function() {
    return this.identifier;
   };
   t.prototype.getName = function() {
    return this.getText();
   };
   t.prototype.isCustomProperty = function() {
    return this.identifier.isCustomProperty;
   };
   return t;
  }(te);
  var ge = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.Invocation;
    },
    enumerable: true,
    configurable: true
   });
   t.prototype.getArguments = function() {
    if (!this.arguments) {
     this.arguments = new ne(this);
    }
    return this.arguments;
   };
   return t;
  }(te);
  var he = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.Function;
    },
    enumerable: true,
    configurable: true
   });
   t.prototype.setIdentifier = function(e) {
    return this.setNode("identifier", e, 0);
   };
   t.prototype.getIdentifier = function() {
    return this.identifier;
   };
   t.prototype.getName = function() {
    return this.identifier ? this.identifier.getText() : "";
   };
   return t;
  }(ge);
  var ve = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.FunctionParameter;
    },
    enumerable: true,
    configurable: true
   });
   t.prototype.setIdentifier = function(e) {
    return this.setNode("identifier", e, 0);
   };
   t.prototype.getIdentifier = function() {
    return this.identifier;
   };
   t.prototype.getName = function() {
    return this.identifier ? this.identifier.getText() : "";
   };
   t.prototype.setDefaultValue = function(e) {
    return this.setNode("defaultValue", e, 0);
   };
   t.prototype.getDefaultValue = function() {
    return this.defaultValue;
   };
   return t;
  }(te);
  var ye = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.FunctionArgument;
    },
    enumerable: true,
    configurable: true
   });
   t.prototype.setIdentifier = function(e) {
    return this.setNode("identifier", e, 0);
   };
   t.prototype.getIdentifier = function() {
    return this.identifier;
   };
   t.prototype.getName = function() {
    return this.identifier ? this.identifier.getText() : "";
   };
   t.prototype.setValue = function(e) {
    return this.setNode("value", e, 0);
   };
   t.prototype.getValue = function() {
    return this.value;
   };
   return t;
  }(te);
  var be = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.If;
    },
    enumerable: true,
    configurable: true
   });
   t.prototype.setExpression = function(e) {
    return this.setNode("expression", e, 0);
   };
   t.prototype.setElseClause = function(e) {
    return this.setNode("elseClause", e);
   };
   return t;
  }(oe);
  var xe = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.For;
    },
    enumerable: true,
    configurable: true
   });
   t.prototype.setVariable = function(e) {
    return this.setNode("variable", e, 0);
   };
   return t;
  }(oe);
  var ke = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.Each;
    },
    enumerable: true,
    configurable: true
   });
   t.prototype.getVariables = function() {
    if (!this.variables) {
     this.variables = new ne(this);
    }
    return this.variables;
   };
   return t;
  }(oe);
  var Se = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.While;
    },
    enumerable: true,
    configurable: true
   });
   return t;
  }(oe);
  var we = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.Else;
    },
    enumerable: true,
    configurable: true
   });
   return t;
  }(oe);
  var Ce = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.FunctionDeclaration;
    },
    enumerable: true,
    configurable: true
   });
   t.prototype.setIdentifier = function(e) {
    return this.setNode("identifier", e, 0);
   };
   t.prototype.getIdentifier = function() {
    return this.identifier;
   };
   t.prototype.getName = function() {
    return this.identifier ? this.identifier.getText() : "";
   };
   t.prototype.getParameters = function() {
    if (!this.parameters) {
     this.parameters = new ne(this);
    }
    return this.parameters;
   };
   return t;
  }(oe);
  var De = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.ViewPort;
    },
    enumerable: true,
    configurable: true
   });
   return t;
  }(oe);
  var Te = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.FontFace;
    },
    enumerable: true,
    configurable: true
   });
   return t;
  }(oe);
  var Ee = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.NestedProperties;
    },
    enumerable: true,
    configurable: true
   });
   return t;
  }(oe);
  var Ne = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.Keyframe;
    },
    enumerable: true,
    configurable: true
   });
   t.prototype.setKeyword = function(e) {
    return this.setNode("keyword", e, 0);
   };
   t.prototype.getKeyword = function() {
    return this.keyword;
   };
   t.prototype.setIdentifier = function(e) {
    return this.setNode("identifier", e, 0);
   };
   t.prototype.getIdentifier = function() {
    return this.identifier;
   };
   t.prototype.getName = function() {
    return this.identifier ? this.identifier.getText() : "";
   };
   return t;
  }(oe);
  var Ae = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.KeyframeSelector;
    },
    enumerable: true,
    configurable: true
   });
   return t;
  }(oe);
  var Fe = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.Import;
    },
    enumerable: true,
    configurable: true
   });
   t.prototype.setMedialist = function(e) {
    if (e) {
     e.attachTo(this);
     this.medialist = e;
     return true;
    }
    return false;
   };
   return t;
  }(te);
  var Pe = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.Namespace;
    },
    enumerable: true,
    configurable: true
   });
   return t;
  }(te);
  var Ie = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.Media;
    },
    enumerable: true,
    configurable: true
   });
   return t;
  }(oe);
  var Oe = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.Supports;
    },
    enumerable: true,
    configurable: true
   });
   return t;
  }(oe);
  var Me = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.Document;
    },
    enumerable: true,
    configurable: true
   });
   return t;
  }(oe);
  var Le = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   t.prototype.getMediums = function() {
    if (!this.mediums) {
     this.mediums = new ne(this);
    }
    return this.mediums;
   };
   return t;
  }(te);
  var Re = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.MediaQuery;
    },
    enumerable: true,
    configurable: true
   });
   return t;
  }(te);
  var Be = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.SupportsCondition;
    },
    enumerable: true,
    configurable: true
   });
   return t;
  }(te);
  var ze = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.Page;
    },
    enumerable: true,
    configurable: true
   });
   return t;
  }(oe);
  var je = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.PageBoxMarginBox;
    },
    enumerable: true,
    configurable: true
   });
   return t;
  }(oe);
  var qe = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.Expression;
    },
    enumerable: true,
    configurable: true
   });
   return t;
  }(te);
  var Ue = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.BinaryExpression;
    },
    enumerable: true,
    configurable: true
   });
   t.prototype.setLeft = function(e) {
    return this.setNode("left", e);
   };
   t.prototype.getLeft = function() {
    return this.left;
   };
   t.prototype.setRight = function(e) {
    return this.setNode("right", e);
   };
   t.prototype.getRight = function() {
    return this.right;
   };
   t.prototype.setOperator = function(e) {
    return this.setNode("operator", e);
   };
   t.prototype.getOperator = function() {
    return this.operator;
   };
   return t;
  }(te);
  var Je = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.Term;
    },
    enumerable: true,
    configurable: true
   });
   t.prototype.setOperator = function(e) {
    return this.setNode("operator", e);
   };
   t.prototype.getOperator = function() {
    return this.operator;
   };
   t.prototype.setExpression = function(e) {
    return this.setNode("expression", e);
   };
   t.prototype.getExpression = function() {
    return this.expression;
   };
   return t;
  }(te);
  var Ke = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.AttributeSelector;
    },
    enumerable: true,
    configurable: true
   });
   t.prototype.setNamespacePrefix = function(e) {
    return this.setNode("namespacePrefix", e);
   };
   t.prototype.getNamespacePrefix = function() {
    return this.namespacePrefix;
   };
   t.prototype.setIdentifier = function(e) {
    return this.setNode("identifier", e);
   };
   t.prototype.getIdentifier = function() {
    return this.identifier;
   };
   t.prototype.setOperator = function(e) {
    return this.setNode("operator", e);
   };
   t.prototype.getOperator = function() {
    return this.operator;
   };
   t.prototype.setValue = function(e) {
    return this.setNode("value", e);
   };
   t.prototype.getValue = function() {
    return this.value;
   };
   return t;
  }(te);
  var Ve = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.Operator;
    },
    enumerable: true,
    configurable: true
   });
   return t;
  }(te);
  var We = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.HexColorValue;
    },
    enumerable: true,
    configurable: true
   });
   return t;
  }(te);
  var He = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.NumericValue;
    },
    enumerable: true,
    configurable: true
   });
   t.prototype.getValue = function() {
    var e = this.getText();
    var t = 0, n, r = ".".charCodeAt(0), i = "0".charCodeAt(0), a = "9".charCodeAt(0);
    for (var o = 0, s = e.length; o < s; o++) {
     n = e.charCodeAt(o);
     if (!(i <= n && n <= a || n === r)) {
      break;
     }
     t += 1;
    }
    return {
     value: e.substring(0, t),
     unit: t < e.length ? e.substring(t) : undefined
    };
   };
   return t;
  }(te);
  var Ge = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.VariableDeclaration;
    },
    enumerable: true,
    configurable: true
   });
   t.prototype.setVariable = function(e) {
    if (e) {
     e.attachTo(this);
     this.variable = e;
     return true;
    }
    return false;
   };
   t.prototype.getVariable = function() {
    return this.variable;
   };
   t.prototype.getName = function() {
    return this.variable ? this.variable.getName() : "";
   };
   t.prototype.setValue = function(e) {
    if (e) {
     e.attachTo(this);
     this.value = e;
     return true;
    }
    return false;
   };
   t.prototype.getValue = function() {
    return this.value;
   };
   return t;
  }(fe);
  var $e = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.Interpolation;
    },
    enumerable: true,
    configurable: true
   });
   return t;
  }(te);
  var Xe = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.VariableName;
    },
    enumerable: true,
    configurable: true
   });
   t.prototype.getName = function() {
    return this.getText();
   };
   return t;
  }(te);
  var Qe = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.ExtendsReference;
    },
    enumerable: true,
    configurable: true
   });
   t.prototype.getSelectors = function() {
    if (!this.selectors) {
     this.selectors = new ne(this);
    }
    return this.selectors;
   };
   return t;
  }(te);
  var Ye = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.MixinReference;
    },
    enumerable: true,
    configurable: true
   });
   t.prototype.getNamespaces = function() {
    if (!this.namespaces) {
     this.namespaces = new ne(this);
    }
    return this.namespaces;
   };
   t.prototype.setIdentifier = function(e) {
    return this.setNode("identifier", e, 0);
   };
   t.prototype.getIdentifier = function() {
    return this.identifier;
   };
   t.prototype.getName = function() {
    return this.identifier ? this.identifier.getText() : "";
   };
   t.prototype.getArguments = function() {
    if (!this.arguments) {
     this.arguments = new ne(this);
    }
    return this.arguments;
   };
   t.prototype.setContent = function(e) {
    return this.setNode("content", e);
   };
   t.prototype.getContent = function() {
    return this.content;
   };
   return t;
  }(te);
  var Ze = function(e) {
   $(t, e);
   function t(t, n) {
    return e.call(this, t, n) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.MixinDeclaration;
    },
    enumerable: true,
    configurable: true
   });
   t.prototype.setIdentifier = function(e) {
    return this.setNode("identifier", e, 0);
   };
   t.prototype.getIdentifier = function() {
    return this.identifier;
   };
   t.prototype.getName = function() {
    return this.identifier ? this.identifier.getText() : "";
   };
   t.prototype.getParameters = function() {
    if (!this.parameters) {
     this.parameters = new ne(this);
    }
    return this.parameters;
   };
   t.prototype.setGuard = function(e) {
    if (e) {
     e.attachTo(this);
     this.guard = e;
    }
    return false;
   };
   return t;
  }(oe);
  var et = function(e) {
   $(t, e);
   function t() {
    return e !== null && e.apply(this, arguments) || this;
   }
   Object.defineProperty(t.prototype, "type", {
    get: function() {
     return X.ListEntry;
    },
    enumerable: true,
    configurable: true
   });
   t.prototype.setKey = function(e) {
    return this.setNode("key", e, 0);
   };
   t.prototype.setValue = function(e) {
    return this.setNode("value", e, 1);
   };
   return t;
  }(te);
  var tt = function(e) {
   $(t, e);
   function t() {
    return e !== null && e.apply(this, arguments) || this;
   }
   t.prototype.getConditions = function() {
    if (!this.conditions) {
     this.conditions = new ne(this);
    }
    return this.conditions;
   };
   return t;
  }(te);
  var nt = function(e) {
   $(t, e);
   function t() {
    return e !== null && e.apply(this, arguments) || this;
   }
   t.prototype.setVariable = function(e) {
    return this.setNode("variable", e);
   };
   return t;
  }(te);
  var rt;
  (function(e) {
   e[e["Ignore"] = 1] = "Ignore";
   e[e["Warning"] = 2] = "Warning";
   e[e["Error"] = 4] = "Error";
  })(rt || (rt = {}));
  var it = function() {
   function e(e, t, n, r, i, a) {
    if (i === void 0) {
     i = e.offset;
    }
    if (a === void 0) {
     a = e.length;
    }
    this.node = e;
    this.rule = t;
    this.level = n;
    this.message = r || t.message;
    this.offset = i;
    this.length = a;
   }
   e.prototype.getRule = function() {
    return this.rule;
   };
   e.prototype.getLevel = function() {
    return this.level;
   };
   e.prototype.getOffset = function() {
    return this.offset;
   };
   e.prototype.getLength = function() {
    return this.length;
   };
   e.prototype.getNode = function() {
    return this.node;
   };
   e.prototype.getMessage = function() {
    return this.message;
   };
   return e;
  }();
  var at = function() {
   function e() {
    this.entries = [];
   }
   e.entries = function(t) {
    var n = new e();
    t.acceptVisitor(n);
    return n.entries;
   };
   e.prototype.visitNode = function(e) {
    if (e.isErroneous()) {
     e.collectIssues(this.entries);
    }
    return true;
   };
   return e;
  }();
  var ot = n("wpTr");
  var st = ot["loadMessageBundle"]();
  var ct = function() {
   function e(e, t) {
    this.id = e;
    this.message = t;
   }
   return e;
  }();
  var ut = {
   NumberExpected: new ct("css-numberexpected", st("expected.number", "number expected")),
   ConditionExpected: new ct("css-conditionexpected", st("expected.condt", "condition expected")),
   RuleOrSelectorExpected: new ct("css-ruleorselectorexpected", st("expected.ruleorselector", "at-rule or selector expected")),
   DotExpected: new ct("css-dotexpected", st("expected.dot", "dot expected")),
   ColonExpected: new ct("css-colonexpected", st("expected.colon", "colon expected")),
   SemiColonExpected: new ct("css-semicolonexpected", st("expected.semicolon", "semi-colon expected")),
   TermExpected: new ct("css-termexpected", st("expected.term", "term expected")),
   ExpressionExpected: new ct("css-expressionexpected", st("expected.expression", "expression expected")),
   OperatorExpected: new ct("css-operatorexpected", st("expected.operator", "operator expected")),
   IdentifierExpected: new ct("css-identifierexpected", st("expected.ident", "identifier expected")),
   PercentageExpected: new ct("css-percentageexpected", st("expected.percentage", "percentage expected")),
   URIOrStringExpected: new ct("css-uriorstringexpected", st("expected.uriorstring", "uri or string expected")),
   URIExpected: new ct("css-uriexpected", st("expected.uri", "URI expected")),
   VariableNameExpected: new ct("css-varnameexpected", st("expected.varname", "variable name expected")),
   VariableValueExpected: new ct("css-varvalueexpected", st("expected.varvalue", "variable value expected")),
   PropertyValueExpected: new ct("css-propertyvalueexpected", st("expected.propvalue", "property value expected")),
   LeftCurlyExpected: new ct("css-lcurlyexpected", st("expected.lcurly", "{ expected")),
   RightCurlyExpected: new ct("css-rcurlyexpected", st("expected.rcurly", "} expected")),
   LeftSquareBracketExpected: new ct("css-rbracketexpected", st("expected.lsquare", "[ expected")),
   RightSquareBracketExpected: new ct("css-lbracketexpected", st("expected.rsquare", "] expected")),
   LeftParenthesisExpected: new ct("css-lparentexpected", st("expected.lparen", "( expected")),
   RightParenthesisExpected: new ct("css-rparentexpected", st("expected.rparent", ") expected")),
   CommaExpected: new ct("css-commaexpected", st("expected.comma", "comma expected")),
   PageDirectiveOrDeclarationExpected: new ct("css-pagedirordeclexpected", st("expected.pagedirordecl", "page directive or declaraton expected")),
   UnknownAtRule: new ct("css-unknownatrule", st("unknown.atrule", "at-rule unknown")),
   UnknownKeyword: new ct("css-unknownkeyword", st("unknown.keyword", "unknown keyword")),
   SelectorExpected: new ct("css-selectorexpected", st("expected.selector", "selector expected")),
   StringLiteralExpected: new ct("css-stringliteralexpected", st("expected.stringliteral", "string literal expected")),
   WhitespaceExpected: new ct("css-whitespaceexpected", st("expected.whitespace", "whitespace expected")),
   MediaQueryExpected: new ct("css-mediaqueryexpected", st("expected.mediaquery", "media query expected"))
  };
  var lt = {
   css: {
    atdirectives: [ {
     name: "@charset",
     desc: "Defines character set of the document."
    }, {
     name: "@counter-style",
     desc: "Defines a custom counter style.",
     browsers: "FF33"
    }, {
     name: "@font-face",
     desc: "Allows for linking to fonts that are automatically activated when needed. This permits authors to work around the limitation of 'web-safe' fonts, allowing for consistent rendering independent of the fonts available in a given user's environment."
    }, {
     name: "@font-feature-values",
     desc: "Defines named values for the indices used to select alternate glyphs for a given font family.",
     browsers: "FF34"
    }, {
     name: "@import",
     desc: "Includes content of another file."
    }, {
     name: "@keyframes",
     desc: "Defines set of animation key frames.",
     browsers: "E,C43,FF16,IE10,O30,S9"
    }, {
     name: "@media",
     desc: "Defines a stylesheet for a particular media type."
    }, {
     name: "@-moz-document",
     desc: "Gecko-specific at-rule that restricts the style rules contained within it based on the URL of the document.",
     browsers: "FF1.8"
    }, {
     name: "@-moz-keyframes",
     desc: "Defines set of animation key frames.",
     browsers: "FF5"
    }, {
     name: "@-ms-viewport",
     desc: "Specifies the size, zoom factor, and orientation of the viewport.",
     browsers: "E,IE10"
    }, {
     name: "@namespace",
     desc: "Declares a prefix and associates it with a namespace name.",
     browsers: "E,C,FF1,IE9,O8,S1"
    }, {
     name: "@-o-keyframes",
     desc: "Defines set of animation key frames.",
     browsers: "O12"
    }, {
     name: "@-o-viewport",
     desc: "Specifies the size, zoom factor, and orientation of the viewport.",
     browsers: "O11"
    }, {
     name: "@page",
     desc: "Directive defines various page parameters."
    }, {
     name: "@supports",
     desc: "A conditional group rule whose condition tests whether the user agent supports CSS property:value pairs.",
     browsers: "E,C28,FF22,O12.1,S9"
    }, {
     name: "@-webkit-keyframes",
     desc: "Defines set of animation key frames.",
     browsers: "C,S4"
    } ],
    pseudoclasses: [ {
     name: ":active",
     desc: "Applies while an element is being activated by the user. For example, between the times the user presses the mouse button and releases it."
    }, {
     name: ":any-link",
     desc: "Represents an element that acts as the source anchor of a hyperlink. Applies to both visited and unvisited links.",
     browsers: "S9"
    }, {
     name: ":checked",
     desc: "Radio and checkbox elements can be toggled by the user. Some menu items are 'checked' when the user selects them. When such elements are toggled 'on' the :checked pseudo-class applies.",
     browsers: "E,C,FF1,IE9,O9,S3.13"
    }, {
     name: ":corner-present",
     desc: "Non-standard. Indicates whether or not a scrollbar corner is present.",
     browsers: "C,S5"
    }, {
     name: ":decrement",
     desc: "Non-standard. Applies to buttons and track pieces. Indicates whether or not the button or track piece will decrement the view’s position when used.",
     browsers: "C,S5"
    }, {
     name: ":default",
     desc: "Applies to the one or more UI elements that are the default among a set of similar elements. Typically applies to context menu items, buttons, and select lists/menus.",
     browsers: "C,FF3,O10,S5"
    }, {
     name: ":disabled",
     desc: "Represents user interface elements that are in a disabled state; such elements have a corresponding enabled state.",
     browsers: "E,C,FF1.5,IE9,O9,S3.1"
    }, {
     name: ":double-button",
     desc: "Non-standard. Applies to buttons and track pieces. Applies when both buttons are displayed together at the same end of the scrollbar.",
     browsers: "C,S5"
    }, {
     name: ":empty",
     desc: "Represents an element that has no children at all.",
     browsers: "E,C,FF1.5,IE9,O9,S3.1"
    }, {
     name: ":enabled",
     desc: "Represents user interface elements that are in an enabled state; such elements have a corresponding disabled state.",
     browsers: "E,C,FF1.5,IE9,O9,S3.1"
    }, {
     name: ":end",
     desc: "Non-standard. Applies to buttons and track pieces. Indicates whether the object is placed after the thumb.",
     browsers: "C,S5"
    }, {
     name: ":first",
     desc: "When printing double-sided documents, the page boxes on left and right pages may be different. This can be expressed through CSS pseudo-classes defined in the  page context."
    }, {
     name: ":first-child",
     desc: "Same as :nth-child(1). Represents an element that is the first child of some other element.",
     browsers: "E,C,FF3,IE7,O9.5,S3.1"
    }, {
     name: ":first-of-type",
     desc: "Same as :nth-of-type(1). Represents an element that is the first sibling of its type in the list of children of its parent element.",
     browsers: "E,C,FF3.5,IE9,O9.5,S3.2"
    }, {
     name: ":focus",
     desc: "Applies while an element has the focus (accepts keyboard or mouse events, or other forms of input)."
    }, {
     name: ":fullscreen",
     desc: "Matches any element that has its fullscreen flag set.",
     browsers: "E"
    }, {
     name: ":future",
     desc: "Represents any element that is defined to occur entirely after a :current element.",
     browsers: "C,O16,S6"
    }, {
     name: ":horizontal",
     desc: "Non-standard. Applies to any scrollbar pieces that have a horizontal orientation.",
     browsers: "C,S5"
    }, {
     name: ":host",
     desc: "When evaluated in the context of a shadow tree, matches the shadow tree’s host element.",
     browsers: "C35,O22"
    }, {
     name: ":host()",
     desc: "When evaluated in the context of a shadow tree, it matches the shadow tree’s host element if the host element, in its normal context, matches the selector argument.",
     browsers: "C35,O22"
    }, {
     name: ":host-context()",
     desc: "Tests whether there is an ancestor, outside the shadow tree, which matches a particular selector.",
     browsers: "C35,O22"
    }, {
     name: ":hover",
     desc: "Applies while the user designates an element with a pointing device, but does not necessarily activate it. For example, a visual user agent could apply this pseudo-class when the cursor (mouse pointer) hovers over a box generated by the element."
    }, {
     name: ":increment",
     desc: "Non-standard. Applies to buttons and track pieces. Indicates whether or not the button or track piece will increment the view’s position when used.",
     browsers: "C,S5"
    }, {
     name: ":indeterminate",
     desc: "Applies to UI elements whose value is in an indeterminate state.",
     browsers: "E,C,FF3.6,IE9,O10.6,S3"
    }, {
     name: ":in-range",
     desc: "Used in conjunction with the min and max attributes, whether on a range input, a number field, or any other types that accept those attributes.",
     browsers: "E13,C,FF10,O9.6,S5.1"
    }, {
     name: ":invalid",
     desc: "An element is :valid or :invalid when it is, respectively, valid or invalid with respect to data validity semantics defined by a different specification.",
     browsers: "E,C,FF4,IE10,O10,S5"
    }, {
     name: ":lang()",
     desc: "Represents an element that is in language specified.",
     browsers: "E,C,FF1,IE8,O8,S3"
    }, {
     name: ":last-child",
     desc: "Same as :nth-last-child(1). Represents an element that is the last child of some other element.",
     browsers: "E,C,FF1,IE9,O9.5,S3.1"
    }, {
     name: ":last-of-type",
     desc: "Same as :nth-last-of-type(1). Represents an element that is the last sibling of its type in the list of children of its parent element.",
     browsers: "E,C,FF3.5,IE9,O9.5,S3.1"
    }, {
     name: ":left",
     desc: "When printing double-sided documents, the page boxes on left and right pages may be different. This can be expressed through CSS pseudo-classes defined in the  page context."
    }, {
     name: ":link",
     desc: "Applies to links that have not yet been visited."
    }, {
     name: ":matches()",
     desc: "Takes a selector list as its argument. It represents an element that is represented by its argument.",
     browsers: "S9"
    }, {
     name: ":-moz-any()",
     desc: "Represents an element that is represented by the selector list passed as its argument. Standardized as :matches().",
     browsers: "FF4"
    }, {
     name: ":-moz-any-link",
     desc: "Represents an element that acts as the source anchor of a hyperlink. Applies to both visited and unvisited links.",
     browsers: "FF1"
    }, {
     name: ":-moz-broken",
     desc: "Non-standard. Matches elements representing broken images.",
     browsers: "FF3"
    }, {
     name: ":-moz-drag-over",
     desc: "Non-standard. Matches elements when a drag-over event applies to it.",
     browsers: "FF1"
    }, {
     name: ":-moz-first-node",
     desc: "Non-standard. Represents an element that is the first child node of some other element.",
     browsers: "FF1"
    }, {
     name: ":-moz-focusring",
     desc: "Non-standard. Matches an element that has focus and focus ring drawing is enabled in the browser.",
     browsers: "FF4"
    }, {
     name: ":-moz-full-screen",
     desc: "Matches any element that has its fullscreen flag set. Standardized as :fullscreen.",
     browsers: "FF9"
    }, {
     name: ":-moz-last-node",
     desc: "Non-standard. Represents an element that is the last child node of some other element.",
     browsers: "FF1"
    }, {
     name: ":-moz-loading",
     desc: "Non-standard. Matches elements, such as images, that haven’t started loading yet.",
     browsers: "FF3"
    }, {
     name: ":-moz-only-whitespace",
     desc: "The same as :empty, except that it additionally matches elements that only contain code points affected by whitespace processing. Standardized as :blank.",
     browsers: "FF1.5"
    }, {
     name: ":-moz-placeholder",
     desc: "Deprecated. Represents placeholder text in an input field. Use ::-moz-placeholder for Firefox 19+.",
     browsers: "FF4"
    }, {
     name: ":-moz-submit-invalid",
     desc: "Non-standard. Represents any submit button when the contents of the associated form are not valid.",
     browsers: "FF4"
    }, {
     name: ":-moz-suppressed",
     desc: "Non-standard. Matches elements representing images that have been blocked from loading.",
     browsers: "FF3"
    }, {
     name: ":-moz-ui-invalid",
     desc: "Non-standard. Represents any validated form element whose value isn't valid ",
     browsers: "FF4"
    }, {
     name: ":-moz-ui-valid",
     desc: "Non-standard. Represents any validated form element whose value is valid ",
     browsers: "FF4"
    }, {
     name: ":-moz-user-disabled",
     desc: "Non-standard. Matches elements representing images that have been disabled due to the user’s preferences.",
     browsers: "FF3"
    }, {
     name: ":-moz-window-inactive",
     desc: "Non-standard. Matches elements in an inactive window.",
     browsers: "FF4"
    }, {
     name: ":-ms-fullscreen",
     desc: "Matches any element that has its fullscreen flag set.",
     browsers: "IE11"
    }, {
     name: ":-ms-input-placeholder",
     desc: "Represents placeholder text in an input field. Note: for Edge use the pseudo-element ::-ms-input-placeholder. Standardized as ::placeholder.",
     browsers: "IE10"
    }, {
     name: ":-ms-keyboard-active",
     desc: "Windows Store apps only. Applies one or more styles to an element when it has focus and the user presses the space bar.",
     browsers: "IE10"
    }, {
     name: ":-ms-lang()",
     desc: "Represents an element that is in the language specified. Accepts a comma seperated list of language tokens.",
     browsers: "E,IE10"
    }, {
     name: ":no-button",
     desc: "Non-standard. Applies to track pieces. Applies when there is no button at that end of the track.",
     browsers: "C,S5"
    }, {
     name: ":not()",
     desc: "The negation pseudo-class, :not(X), is a functional notation taking a simple selector (excluding the negation pseudo-class itself) as an argument. It represents an element that is not represented by its argument.",
     browsers: "E,C,FF1,IE9,O9.5,S2"
    }, {
     name: ":nth-child()",
     desc: "Represents an element that has an+b-1 siblings before it in the document tree, for any positive integer or zero value of n, and has a parent element.",
     browsers: "E,C,FF3.5,IE9,O9.5,S3.1"
    }, {
     name: ":nth-last-child()",
     desc: "Represents an element that has an+b-1 siblings after it in the document tree, for any positive integer or zero value of n, and has a parent element.",
     browsers: "E,C,FF3.5,IE9,O9.5,S3.1"
    }, {
     name: ":nth-last-of-type()",
     desc: "Represents an element that has an+b-1 siblings with the same expanded element name after it in the document tree, for any zero or positive integer value of n, and has a parent element.",
     browsers: "E,C,FF3.5,IE9,O9.5,S3.1"
    }, {
     name: ":nth-of-type()",
     desc: "Represents an element that has an+b-1 siblings with the same expanded element name before it in the document tree, for any zero or positive integer value of n, and has a parent element.",
     browsers: "E,C,FF3.5,IE9,O9.5,S3.1"
    }, {
     name: ":only-child",
     desc: "Represents an element that has a parent element and whose parent element has no other element children. Same as :first-child:last-child or :nth-child(1):nth-last-child(1), but with a lower specificity.",
     browsers: "E,C,FF1.5,IE9,O9.5,S3.1"
    }, {
     name: ":only-of-type",
     desc: "Matches every element that is the only child of its type, of its parent. Same as :first-of-type:last-of-type or :nth-of-type(1):nth-last-of-type(1), but with a lower specificity.",
     browsers: "E,C,FF3.5,IE9,O9.5,S3.2"
    }, {
     name: ":optional",
     desc: "A form element is :required or :optional if a value for it is, respectively, required or optional before the form it belongs to is submitted. Elements that are not form elements are neither required nor optional.",
     browsers: "E,C,FF4,IE10,O10,S5"
    }, {
     name: ":out-of-range",
     desc: "Used in conjunction with the min and max attributes, whether on a range input, a number field, or any other types that accept those attributes.",
     browsers: "E13,C,FF10,O9.6,S5.1"
    }, {
     name: ":past",
     desc: "Represents any element that is defined to occur entirely prior to a :current element.",
     browsers: "C,O16,S6"
    }, {
     name: ":read-only",
     desc: "An element whose contents are not user-alterable is :read-only. However, elements whose contents are user-alterable (such as text input fields) are considered to be in a :read-write state. In typical documents, most elements are :read-only.",
     browsers: "E13,C,FF10,O9,S4"
    }, {
     name: ":read-write",
     desc: "An element whose contents are not user-alterable is :read-only. However, elements whose contents are user-alterable (such as text input fields) are considered to be in a :read-write state. In typical documents, most elements are :read-only.",
     browsers: "E13,C,FF10,O9,S4"
    }, {
     name: ":required",
     desc: "A form element is :required or :optional if a value for it is, respectively, required or optional before the form it belongs to is submitted. Elements that are not form elements are neither required nor optional.",
     browsers: "E,C,FF4,IE10,O10,S5"
    }, {
     name: ":right",
     desc: "When printing double-sided documents, the page boxes on left and right pages may be different. This can be expressed through CSS pseudo-classes defined in the  page context."
    }, {
     name: ":root",
     desc: "Represents an element that is the root of the document. In HTML 4, this is always the HTML element.",
     browsers: "E,C,FF1,IE9,O9.5,S1"
    }, {
     name: ":scope",
     desc: "Represents any element that is in the contextual reference element set.",
     browsers: "FF32,S6"
    }, {
     name: ":single-button",
     desc: "Non-standard. Applies to buttons and track pieces. Applies when both buttons are displayed separately at either end of the scrollbar.",
     browsers: "C,S5"
    }, {
     name: ":start",
     desc: "Non-standard. Applies to buttons and track pieces. Indicates whether the object is placed before the thumb.",
     browsers: "C,S5"
    }, {
     name: ":target",
     desc: "Some URIs refer to a location within a resource. This kind of URI ends with a 'number sign' (#) followed by an anchor identifier (called the fragment identifier).",
     browsers: "E,C,FF1,IE9,O9.5,S1"
    }, {
     name: ":valid",
     desc: "An element is :valid or :invalid when it is, respectively, valid or invalid with respect to data validity semantics defined by a different specification.",
     browsers: "E,C,FF4,IE10,O10,S5"
    }, {
     name: ":vertical",
     desc: "Non-standard. Applies to any scrollbar pieces that have a vertical orientation.",
     browsers: "C,S5"
    }, {
     name: ":visited",
     desc: "Applies once the link has been visited by the user."
    }, {
     name: ":-webkit-any()",
     desc: "Represents an element that is represented by the selector list passed as its argument. Standardized as :matches().",
     browsers: "C,S5"
    }, {
     name: ":-webkit-full-screen",
     desc: "Matches any element that has its fullscreen flag set. Standardized as :fullscreen.",
     browsers: "C,S6"
    }, {
     name: ":window-inactive",
     desc: "Non-standard. Applies to all scrollbar pieces. Indicates whether or not the window containing the scrollbar is currently active.",
     browsers: "C,S3"
    } ],
    pseudoelements: [ {
     name: "::after",
     desc: "Represents a styleable child pseudo-element immediately after the originating element’s actual content.",
     browsers: "E,C,FF1.5,IE9,O9,S4"
    }, {
     name: "::backdrop",
     desc: "Used to create a backdrop that hides the underlying document for an element in a top layer (such as an element that is displayed fullscreen).",
     browsers: "E"
    }, {
     name: "::before",
     desc: "Represents a styleable child pseudo-element immediately before the originating element’s actual content.",
     browsers: "E,C,FF1.5,IE9,O9,S4"
    }, {
     name: "::content",
     desc: "Deprecated. Matches the distribution list itself, on elements that have one. Use ::slotted for forward compatibility.",
     browsers: "C35,O22"
    }, {
     name: "::cue",
     browsers: "C,O16,S6"
    }, {
     name: "::cue()",
     browsers: "C,O16,S6"
    }, {
     name: "::cue-region",
     browsers: "C,O16,S6"
    }, {
     name: "::cue-region()",
     browsers: "C,O16,S6"
    }, {
     name: "::first-letter",
     desc: "Represents the first letter of an element, if it is not preceded by any other content (such as images or inline tables) on its line.",
     browsers: "E,C,FF1.5,IE9,O7,S1"
    }, {
     name: "::first-line",
     desc: "Describes the contents of the first formatted line of its originating element.",
     browsers: "E,C,FF1.5,IE9,O7,S1"
    }, {
     name: "::-moz-focus-inner",
     browsers: "FF4"
    }, {
     name: "::-moz-focus-outer",
     browsers: "FF4"
    }, {
     name: "::-moz-list-bullet",
     desc: "Used to style the bullet of a list element. Similar to the standardized ::marker.",
     browsers: "FF1"
    }, {
     name: "::-moz-list-number",
     desc: "Used to style the numbers of a list element. Similar to the standardized ::marker.",
     browsers: "FF1"
    }, {
     name: "::-moz-placeholder",
     desc: "Represents placeholder text in an input field",
     browsers: "FF19"
    }, {
     name: "::-moz-progress-bar",
     desc: "Represents the bar portion of a progress bar.",
     browsers: "FF9"
    }, {
     name: "::-moz-selection",
     desc: "Represents the portion of a document that has been highlighted by the user.",
     browsers: "FF1"
    }, {
     name: "::-ms-backdrop",
     desc: "Used to create a backdrop that hides the underlying document for an element in a top layer (such as an element that is displayed fullscreen).",
     browsers: "IE11"
    }, {
     name: "::-ms-browse",
     desc: "Represents the browse button of an input type=file control.",
     browsers: "E,IE10"
    }, {
     name: "::-ms-check",
     desc: "Represents the check of a checkbox or radio button input control.",
     browsers: "E,IE10"
    }, {
     name: "::-ms-clear",
     desc: "Represents the clear button of a text input control",
     browsers: "E,IE10"
    }, {
     name: "::-ms-expand",
     desc: "Represents the drop-down button of a select control.",
     browsers: "E,IE10"
    }, {
     name: "::-ms-fill",
     desc: "Represents the bar portion of a progress bar.",
     browsers: "E,IE10"
    }, {
     name: "::-ms-fill-lower",
     desc: "Represents the portion of the slider track from its smallest value up to the value currently selected by the thumb. In a left-to-right layout, this is the portion of the slider track to the left of the thumb.",
     browsers: "E,IE10"
    }, {
     name: "::-ms-fill-upper",
     desc: "Represents the portion of the slider track from the value currently selected by the thumb up to the slider's largest value. In a left-to-right layout, this is the portion of the slider track to the right of the thumb.",
     browsers: "E,IE10"
    }, {
     name: "::-ms-reveal",
     desc: "Represents the password reveal button of an input type=password control.",
     browsers: "E,IE10"
    }, {
     name: "::-ms-thumb",
     desc: "Represents the portion of range input control (also known as a slider control) that the user drags.",
     browsers: "E,IE10"
    }, {
     name: "::-ms-ticks-after",
     desc: "Represents the tick marks of a slider that begin just after the thumb and continue up to the slider's largest value. In a left-to-right layout, these are the ticks to the right of the thumb.",
     browsers: "E,IE10"
    }, {
     name: "::-ms-ticks-before",
     desc: "Represents the tick marks of a slider that represent its smallest values up to the value currently selected by the thumb. In a left-to-right layout, these are the ticks to the left of the thumb.",
     browsers: "E,IE10"
    }, {
     name: "::-ms-tooltip",
     desc: "Represents the tooltip of a slider (input type=range).",
     browsers: "E,IE10"
    }, {
     name: "::-ms-track",
     desc: "Represents the track of a slider.",
     browsers: "E,IE10"
    }, {
     name: "::-ms-value",
     desc: "Represents the content of a text or password input control, or a select control.",
     browsers: "E,IE10"
    }, {
     name: "::selection",
     desc: "Represents the portion of a document that has been highlighted by the user.",
     browsers: "E,C,IE9,O9.5,S1.1"
    }, {
     name: "::shadow",
     desc: "Matches the shadow root if an element has a shadow tree.",
     browsers: "C35,O22"
    }, {
     name: "::-webkit-file-upload-button",
     browsers: "C,O,S6"
    }, {
     name: "::-webkit-inner-spin-button",
     browsers: "C,O,S6"
    }, {
     name: "::-webkit-input-placeholder",
     browsers: "C,S4"
    }, {
     name: "::-webkit-keygen-select",
     browsers: "C,O,S6"
    }, {
     name: "::-webkit-meter-bar",
     browsers: "E13,C,O15,S6"
    }, {
     name: "::-webkit-meter-even-less-good-value",
     browsers: "E13,C,O15,S6"
    }, {
     name: "::-webkit-meter-optimum-value",
     browsers: "E13,C,O15,S6"
    }, {
     name: "::-webkit-meter-suboptimal-value",
     browsers: "E13,C,O15,S6"
    }, {
     name: "::-webkit-outer-spin-button",
     browsers: "C,O,S6"
    }, {
     name: "::-webkit-progress-bar",
     browsers: "C,S3"
    }, {
     name: "::-webkit-progress-inner-element",
     browsers: "C,S3"
    }, {
     name: "::-webkit-progress-value",
     browsers: "C,S3"
    }, {
     name: "::-webkit-resizer",
     browsers: "C,S5"
    }, {
     name: "::-webkit-scrollbar",
     browsers: "C,S5"
    }, {
     name: "::-webkit-scrollbar-button",
     browsers: "C,S5"
    }, {
     name: "::-webkit-scrollbar-corner",
     browsers: "C,S5"
    }, {
     name: "::-webkit-scrollbar-thumb",
     browsers: "C,S5"
    }, {
     name: "::-webkit-scrollbar-track",
     browsers: "C,S5"
    }, {
     name: "::-webkit-scrollbar-track-piece",
     browsers: "C,S5"
    }, {
     name: "::-webkit-search-cancel-button",
     browsers: "C,S4"
    }, {
     name: "::-webkit-search-decoration",
     browsers: "C,S4"
    }, {
     name: "::-webkit-search-results-button",
     browsers: "C,S4"
    }, {
     name: "::-webkit-search-results-decoration",
     browsers: "C,S4"
    }, {
     name: "::-webkit-slider-runnable-track",
     browsers: "C,O,S6"
    }, {
     name: "::-webkit-slider-thumb",
     browsers: "C,O,S6"
    }, {
     name: "::-webkit-textfield-decoration-container",
     browsers: "C,O,S6"
    }, {
     name: "::-webkit-validation-bubble",
     browsers: "C,O,S6"
    }, {
     name: "::-webkit-validation-bubble-arrow",
     browsers: "C,O,S6"
    }, {
     name: "::-webkit-validation-bubble-arrow-clipper",
     browsers: "C,O,S6"
    }, {
     name: "::-webkit-validation-bubble-heading",
     browsers: "C,O,S6"
    }, {
     name: "::-webkit-validation-bubble-message",
     browsers: "C,O,S6"
    }, {
     name: "::-webkit-validation-bubble-text-block",
     browsers: "C,O,S6"
    } ],
    properties: [ {
     name: "additive-symbols",
     desc: "@counter-style descriptor. Specifies the symbols used by the marker-construction algorithm specified by the system descriptor. Needs to be specified if the counter system is 'additive'.",
     browsers: "FF33",
     restriction: "integer, string, image, identifier",
     syntax: "[ <integer> && <symbol> ]#"
    }, {
     name: "align-content",
     desc: "Aligns a flex container’s lines within the flex container when there is extra space in the cross-axis, similar to how 'justify-content' aligns individual items within the main-axis.",
     browsers: "E,C29,FF22,IE11,O12.1,S9",
     restriction: "enum",
     values: [ {
      name: "center",
      desc: "Lines are packed toward the center of the flex container."
     }, {
      name: "flex-end",
      desc: "Lines are packed toward the end of the flex container."
     }, {
      name: "flex-start",
      desc: "Lines are packed toward the start of the flex container."
     }, {
      name: "space-around",
      desc: "Lines are evenly distributed in the flex container, with half-size spaces on either end."
     }, {
      name: "space-between",
      desc: "Lines are evenly distributed in the flex container."
     }, {
      name: "stretch",
      desc: "Lines stretch to take up the remaining space."
     } ],
     syntax: "normal | <baseline-position> | <content-distribution> | <overflow-position>? <content-position>"
    }, {
     name: "align-items",
     desc: "Aligns flex items along the cross axis of the current line of the flex container.",
     browsers: "E,C29,FF22,IE11,O12.1,S9",
     restriction: "enum",
     values: [ {
      name: "baseline",
      desc: "If the flex item’s inline axis is the same as the cross axis, this value is identical to 'flex-start'. Otherwise, it participates in baseline alignment."
     }, {
      name: "center",
      desc: "The flex item’s margin box is centered in the cross axis within the line."
     }, {
      name: "flex-end",
      desc: "The cross-end margin edge of the flex item is placed flush with the cross-end edge of the line."
     }, {
      name: "flex-start",
      desc: "The cross-start margin edge of the flex item is placed flush with the cross-start edge of the line."
     }, {
      name: "stretch",
      desc: "If the cross size property of the flex item computes to auto, and neither of the cross-axis margins are auto, the flex item is stretched."
     } ],
     syntax: "normal | stretch | <baseline-position> | [ <overflow-position>? <self-position> ]"
    }, {
     name: "justify-items",
     desc: "Defines the default justify-self for all items of the box, given them the default way of justifying each box along the appropriate axi",
     browsers: "FF45",
     restriction: "enum",
     values: [ {
      name: "auto"
     }, {
      name: "normal"
     }, {
      name: "end"
     }, {
      name: "start"
     }, {
      name: "flex-end",
      desc: '"Flex items are packed toward the end of the line."'
     }, {
      name: "flex-start",
      desc: '"Flex items are packed toward the start of the line."'
     }, {
      name: "self-end"
     }, {
      name: "self-start"
     }, {
      name: "center",
      desc: "The items are packed flush to each other toward the center of the of the alignment container."
     }, {
      name: "left"
     }, {
      name: "right"
     }, {
      name: "baseline"
     }, {
      name: "first baseline"
     }, {
      name: "last baseline"
     }, {
      name: "stretch",
      desc: "If the cross size property of the flex item computes to auto, and neither of the cross-axis margins are auto, the flex item is stretched."
     }, {
      name: "save"
     }, {
      name: "unsave"
     }, {
      name: "legacy"
     } ],
     syntax: "normal | stretch | <baseline-position> | <overflow-position>? [ <self-position> | left | right ] | legacy | legacy && [ left | right | center ]"
    }, {
     name: "justify-self",
     desc: "Defines the way of justifying a box inside its container along the appropriate axis.",
     browsers: "FF45",
     restriction: "enum",
     values: [ {
      name: "auto"
     }, {
      name: "normal"
     }, {
      name: "end"
     }, {
      name: "start"
     }, {
      name: "flex-end",
      desc: '"Flex items are packed toward the end of the line."'
     }, {
      name: "flex-start",
      desc: '"Flex items are packed toward the start of the line."'
     }, {
      name: "self-end"
     }, {
      name: "self-start"
     }, {
      name: "center",
      desc: "The items are packed flush to each other toward the center of the of the alignment container."
     }, {
      name: "left"
     }, {
      name: "right"
     }, {
      name: "baseline"
     }, {
      name: "first baseline"
     }, {
      name: "last baseline"
     }, {
      name: "stretch",
      desc: "If the cross size property of the flex item computes to auto, and neither of the cross-axis margins are auto, the flex item is stretched."
     }, {
      name: "save"
     }, {
      name: "unsave"
     } ],
     syntax: "auto | normal | stretch | <baseline-position> | <overflow-position>? [ <self-position> | left | right ]"
    }, {
     name: "align-self",
     desc: "Allows the default alignment along the cross axis to be overridden for individual flex items.",
     browsers: "E,C29,FF22,IE11,O12.1,S9",
     restriction: "enum",
     values: [ {
      name: "auto",
      desc: "Computes to the value of 'align-items' on the element’s parent, or 'stretch' if the element has no parent. On absolutely positioned elements, it computes to itself."
     }, {
      name: "baseline",
      desc: "If the flex item’s inline axis is the same as the cross axis, this value is identical to 'flex-start'. Otherwise, it participates in baseline alignment."
     }, {
      name: "center",
      desc: "The flex item’s margin box is centered in the cross axis within the line."
     }, {
      name: "flex-end",
      desc: "The cross-end margin edge of the flex item is placed flush with the cross-end edge of the line."
     }, {
      name: "flex-start",
      desc: "The cross-start margin edge of the flex item is placed flush with the cross-start edge of the line."
     }, {
      name: "stretch",
      desc: "If the cross size property of the flex item computes to auto, and neither of the cross-axis margins are auto, the flex item is stretched."
     } ],
     syntax: "auto | normal | stretch | <baseline-position> | <overflow-position>? <self-position>"
    }, {
     name: "all",
     desc: "Shorthand that resets all properties except 'direction' and 'unicode-bidi'.",
     browsers: "C37,FF27,O24",
     restriction: "enum",
     values: [],
     syntax: "initial | inherit | unset | revert"
    }, {
     name: "alt",
     desc: "Provides alternative text for assistive technology to replace the genenerated content of a ::before or ::after element.",
     browsers: "S9",
     restriction: "string, enum",
     values: []
    }, {
     name: "animation",
     desc: "Shorthand property combines six of the animation properties into a single property.",
     browsers: "E,C43,FF16,IE10,O12.1,S9",
     restriction: "time, timing-function, enum, identifier, number",
     values: [ {
      name: "alternate"
     }, {
      name: "alternate-reverse"
     }, {
      name: "backwards"
     }, {
      name: "both",
      desc: "Both forwards and backwards fill modes are applied."
     }, {
      name: "forwards"
     }, {
      name: "infinite",
      desc: "Causes the animation to repeat forever."
     }, {
      name: "none",
      desc: "No animation is performed"
     }, {
      name: "normal",
      desc: "Normal playback."
     }, {
      name: "reverse",
      desc: "All iterations of the animation are played in the reverse direction from the way they were specified."
     } ],
     syntax: "<single-animation>#"
    }, {
     name: "animation-delay",
     desc: "Defines when the animation will start.",
     browsers: "E,C43,FF16,IE10,O12.1,S9",
     restriction: "time",
     syntax: "<time>#"
    }, {
     name: "animation-direction",
     desc: "Defines whether or not the animation should play in reverse on alternate cycles.",
     browsers: "E,C43,FF16,IE10,O12.1,S9",
     restriction: "enum",
     values: [ {
      name: "alternate"
     }, {
      name: "alternate-reverse"
     }, {
      name: "normal",
      desc: "Normal playback."
     }, {
      name: "reverse",
      desc: "All iterations of the animation are played in the reverse direction from the way they were specified."
     } ],
     syntax: "<single-animation-direction>#"
    }, {
     name: "animation-duration",
     desc: "Defines the length of time that an animation takes to complete one cycle.",
     browsers: "E,C43,FF16,IE10,O12.1,S9",
     restriction: "time",
     syntax: "<time>#"
    }, {
     name: "animation-fill-mode",
     desc: "Defines what values are applied by the animation outside the time it is executing.",
     browsers: "E,C43,FF16,IE10,O12.1,S9",
     restriction: "enum",
     values: [ {
      name: "backwards"
     }, {
      name: "both",
      desc: "Both forwards and backwards fill modes are applied."
     }, {
      name: "forwards"
     }, {
      name: "none",
      desc: "There is no change to the property value between the time the animation is applied and the time the animation begins playing or after the animation completes."
     } ],
     syntax: "<single-animation-fill-mode>#"
    }, {
     name: "animation-iteration-count",
     desc: "Defines the number of times an animation cycle is played. The default value is one, meaning the animation will play from beginning to end once.",
     browsers: "E,C43,FF16,IE10,O12.1,S9",
     restriction: "number, enum",
     values: [ {
      name: "infinite",
      desc: "Causes the animation to repeat forever."
     } ],
     syntax: "<single-animation-iteration-count>#"
    }, {
     name: "animation-name",
     desc: "Defines a list of animations that apply. Each name is used to select the keyframe at-rule that provides the property values for the animation.",
     browsers: "E,C43,FF16,IE10,O12.1,S9",
     restriction: "identifier, enum",
     values: [ {
      name: "none",
      desc: "No animation is performed"
     } ],
     syntax: "[ none | <keyframes-name> ]#"
    }, {
     name: "animation-play-state",
     desc: "Defines whether the animation is running or paused.",
     browsers: "E,C43,FF16,IE10,O12.1,S9",
     restriction: "enum",
     values: [ {
      name: "paused"
     }, {
      name: "running"
     } ],
     syntax: "<single-animation-play-state>#"
    }, {
     name: "animation-timing-function",
     desc: "Describes how the animation will progress over one cycle of its duration.",
     browsers: "E,C43,FF16,IE10,O12.1,S9",
     restriction: "timing-function",
     syntax: "<single-timing-function>#"
    }, {
     name: "backface-visibility",
     desc: "Determines whether or not the 'back' side of a transformed element is visible when facing the viewer. With an identity transform, the front side of an element faces the viewer.",
     browsers: "E,C36,FF16,IE10,O23",
     restriction: "enum",
     values: [ {
      name: "hidden",
      desc: "Back side is hidden."
     }, {
      name: "visible",
      desc: "Back side is visible."
     } ],
     syntax: "visible | hidden"
    }, {
     name: "background",
     desc: "Shorthand property for setting most background properties at the same place in the style sheet.",
     restriction: "enum, image, color, position, length, repeat, percentage, box",
     values: [ {
      name: "fixed",
      desc: "The background is fixed with regard to the viewport. In paged media where there is no viewport, a 'fixed' background is fixed with respect to the page box and therefore replicated on every page."
     }, {
      name: "local",
      desc: "The background is fixed with regard to the element's contents: if the element has a scrolling mechanism, the background scrolls with the element's contents."
     }, {
      name: "scroll",
      desc: "The background is fixed with regard to the element itself and does not scroll with its contents. (It is effectively attached to the element's border.)"
     } ],
     syntax: "[ <bg-layer> , ]* <final-bg-layer>"
    }, {
     name: "background-attachment",
     desc: "Specifies whether the background images are fixed with regard to the viewport ('fixed') or scroll along with the element ('scroll') or its contents ('local').",
     restriction: "enum",
     values: [ {
      name: "fixed",
      desc: "The background is fixed with regard to the viewport. In paged media where there is no viewport, a 'fixed' background is fixed with respect to the page box and therefore replicated on every page."
     }, {
      name: "local",
      desc: "The background is fixed with regard to the element’s contents: if the element has a scrolling mechanism, the background scrolls with the element’s contents.",
      browsers: "E,C,FF25,IE9,O11.5,S5"
     }, {
      name: "scroll",
      desc: "The background is fixed with regard to the element itself and does not scroll with its contents. (It is effectively attached to the element’s border.)"
     } ],
     syntax: "<attachment>#"
    }, {
     name: "background-blend-mode",
     desc: "Defines the blending mode of each background layer.",
     browsers: "C35,FF30,O22,S7.1",
     restriction: "enum",
     values: [ {
      name: "normal",
      desc: "Default attribute which specifies no blending"
     }, {
      name: "multiply"
     }, {
      name: "screen"
     }, {
      name: "overlay"
     }, {
      name: "darken"
     }, {
      name: "lighten"
     }, {
      name: "color-dodge"
     }, {
      name: "color-burn"
     }, {
      name: "hard-light"
     }, {
      name: "soft-light"
     }, {
      name: "difference"
     }, {
      name: "exclusion"
     }, {
      name: "hue",
      browsers: "C35,FF30,O22"
     }, {
      name: "saturation",
      browsers: "C35,FF30,O22"
     }, {
      name: "color",
      browsers: "C35,FF30,O22"
     }, {
      name: "luminosity",
      browsers: "C35,FF30,O22"
     } ],
     syntax: "<blend-mode>#"
    }, {
     name: "background-clip",
     desc: "Determines the background painting area.",
     browsers: "E,C,FF4,IE9,O10.5,S3",
     restriction: "box",
     syntax: "<box>#"
    }, {
     name: "background-color",
     desc: "Sets the background color of an element.",
     restriction: "color",
     syntax: "<color>"
    }, {
     name: "background-image",
     desc: "Sets the background image(s) of an element.",
     restriction: "image, enum",
     values: [ {
      name: "none",
      desc: "Counts as an image layer but draws nothing."
     } ],
     syntax: "<bg-image>#"
    }, {
     name: "background-origin",
     desc: "For elements rendered as a single box, specifies the background positioning area. For elements rendered as multiple boxes (e.g., inline boxes on several lines, boxes on several pages) specifies which boxes 'box-decoration-break' operates on to determine the background positioning area(s).",
     browsers: "E,C,FF4,IE9,O10.5,S3",
     restriction: "box",
     syntax: "<box>#"
    }, {
     name: "background-position",
     desc: "Specifies the initial position of the background image(s) (after any resizing) within their corresponding background positioning area.",
     restriction: "position, length, percentage",
     syntax: "<bg-position>#"
    }, {
     name: "background-position-x",
     desc: "If background images have been specified, this property specifies their initial position (after any resizing) within their corresponding background positioning area.",
     browsers: "E,IE6",
     restriction: "length, percentage",
     values: [ {
      name: "center",
      desc: "Equivalent to '50%' ('left 50%') for the horizontal position if the horizontal position is not otherwise specified, or '50%' ('top 50%') for the vertical position if it is."
     }, {
      name: "left",
      desc: "Equivalent to '0%' for the horizontal position if one or two values are given, otherwise specifies the left edge as the origin for the next offset."
     }, {
      name: "right",
      desc: "Equivalent to '100%' for the horizontal position if one or two values are given, otherwise specifies the right edge as the origin for the next offset."
     } ],
     status: "e",
     syntax: "[ center | [ left | right | x-start | x-end ]? <length-percentage>? ]#"
    }, {
     name: "background-position-y",
     desc: "If background images have been specified, this property specifies their initial position (after any resizing) within their corresponding background positioning area.",
     browsers: "E,IE6",
     restriction: "length, percentage",
     values: [ {
      name: "bottom",
      desc: "Equivalent to '100%' for the vertical position if one or two values are given, otherwise specifies the bottom edge as the origin for the next offset."
     }, {
      name: "center",
      desc: "Equivalent to '50%' ('left 50%') for the horizontal position if the horizontal position is not otherwise specified, or '50%' ('top 50%') for the vertical position if it is."
     }, {
      name: "top",
      desc: "Equivalent to '0%' for the vertical position if one or two values are given, otherwise specifies the top edge as the origin for the next offset."
     } ],
     status: "e",
     syntax: "[ center | [ top | bottom | y-start | y-end ]? <length-percentage>? ]#"
    }, {
     name: "background-repeat",
     desc: "Specifies how background images are tiled after they have been sized and positioned.",
     restriction: "repeat",
     values: [],
     syntax: "<repeat-style>#"
    }, {
     name: "background-size",
     desc: "Specifies the size of the background images.",
     browsers: "E,C,FF4,IE9,O10,S4.1",
     restriction: "length, percentage",
     values: [ {
      name: "auto",
      desc: "Resolved by using the image’s intrinsic ratio and the size of the other dimension, or failing that, using the image’s intrinsic size, or failing that, treating it as 100%."
     }, {
      name: "contain",
      desc: "Scale the image, while preserving its intrinsic aspect ratio (if any), to the largest size such that both its width and its height can fit inside the background positioning area."
     }, {
      name: "cover",
      desc: "Scale the image, while preserving its intrinsic aspect ratio (if any), to the smallest size such that both its width and its height can completely cover the background positioning area."
     } ],
     syntax: "<bg-size>#"
    }, {
     name: "behavior",
     desc: "IE only. Used to extend behaviors of the browser.",
     browsers: "IE6",
     restriction: "url"
    }, {
     name: "block-size",
     desc: "Logical 'width'. Mapping depends on the element’s 'writing-mode'.",
     browsers: "FF41",
     restriction: "length, percentage",
     values: [ {
      name: "auto",
      desc: "Depends on the values of other properties."
     } ],
     syntax: "<'width'>"
    }, {
     name: "border",
     desc: "Shorthand property for setting border width, style, and color.",
     restriction: "length, line-width, line-style, color",
     syntax: "<br-width> || <br-style> || <color>"
    }, {
     name: "border-block-end",
     desc: "Logical 'border-bottom'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.",
     browsers: "FF41",
     restriction: "length, line-width, line-style, color",
     syntax: "<'border-width'> || <'border-style'> || <'color'>"
    }, {
     name: "border-block-start",
     desc: "Logical 'border-top'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.",
     browsers: "FF41",
     restriction: "length, line-width, line-style, color",
     syntax: "<'border-width'> || <'border-style'> || <'color'>"
    }, {
     name: "border-block-end-color",
     desc: "Logical 'border-bottom-color'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.",
     browsers: "FF41",
     restriction: "color",
     syntax: "<'color'>"
    }, {
     name: "border-block-start-color",
     desc: "Logical 'border-top-color'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.",
     browsers: "FF41",
     restriction: "color",
     syntax: "<'color'>"
    }, {
     name: "border-block-end-style",
     desc: "Logical 'border-bottom-style'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.",
     browsers: "FF41",
     restriction: "line-style",
     syntax: "<'border-style'>"
    }, {
     name: "border-block-start-style",
     desc: "Logical 'border-top-style'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.",
     browsers: "FF41",
     restriction: "lline-style",
     syntax: "<'border-style'>"
    }, {
     name: "border-block-end-width",
     desc: "Logical 'border-bottom-width'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.",
     browsers: "FF41",
     restriction: "length, line-width",
     syntax: "<'border-width'>"
    }, {
     name: "border-block-start-width",
     desc: "Logical 'border-top-width'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.",
     browsers: "FF41",
     restriction: "length, line-width",
     syntax: "<'border-width'>"
    }, {
     name: "border-bottom",
     desc: "Shorthand property for setting border width, style and color.",
     restriction: "length, line-width, line-style, color",
     syntax: "<br-width> || <br-style> || <color>"
    }, {
     name: "border-bottom-color",
     desc: "Sets the color of the bottom border.",
     restriction: "color",
     syntax: "<color>"
    }, {
     name: "border-bottom-left-radius",
     desc: "Defines the radii of the bottom left outer border edge.",
     browsers: "E,C,FF4,IE9,O10.5,S5",
     restriction: "length, percentage",
     syntax: "<length-percentage>{1,2}"
    }, {
     name: "border-bottom-right-radius",
     desc: "Defines the radii of the bottom right outer border edge.",
     browsers: "E,C,FF4,IE9,O10.5,S5",
     restriction: "length, percentage",
     syntax: "<length-percentage>{1,2}"
    }, {
     name: "border-bottom-style",
     desc: "Sets the style of the bottom border.",
     restriction: "line-style",
     syntax: "<br-style>"
    }, {
     name: "border-bottom-width",
     desc: "Sets the thickness of the bottom border.",
     restriction: "length, line-width",
     syntax: "<br-width>"
    }, {
     name: "border-collapse",
     desc: "Selects a table's border model.",
     restriction: "enum",
     values: [ {
      name: "collapse",
      desc: "Selects the collapsing borders model."
     }, {
      name: "separate",
      desc: "Selects the separated borders border model."
     } ],
     syntax: "collapse | separate"
    }, {
     name: "border-color",
     desc: "The color of the border around all four edges of an element.",
     restriction: "color",
     values: [],
     syntax: "<color>{1,4}"
    }, {
     name: "border-image",
     desc: "Shorthand property for setting 'border-image-source', 'border-image-slice', 'border-image-width', 'border-image-outset' and 'border-image-repeat'. Omitted values are set to their initial values.",
     browsers: "E,C16,FF15,IE11,O15,S6",
     restriction: "length, percentage, number, url, enum",
     values: [ {
      name: "auto",
      desc: "If 'auto' is specified then the border image width is the intrinsic width or height (whichever is applicable) of the corresponding image slice. If the image does not have the required intrinsic dimension then the corresponding border-width is used instead."
     }, {
      name: "fill",
      desc: "Causes the middle part of the border-image to be preserved."
     }, {
      name: "none",
      desc: "Use the border styles."
     }, {
      name: "repeat"
     }, {
      name: "round",
      desc: "The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the image is rescaled so that it does."
     }, {
      name: "space",
      desc: "The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the extra space is distributed around the tiles."
     }, {
      name: "stretch",
      desc: "The image is stretched to fill the area."
     }, {
      name: "url()"
     } ],
     syntax: "<'border-image-source'> || <'border-image-slice'> [ / <'border-image-width'> | / <'border-image-width'>? / <'border-image-outset'> ]? || <'border-image-repeat'>"
    }, {
     name: "border-image-outset",
     desc: "The values specify the amount by which the border image area extends beyond the border box on the top, right, bottom, and left sides respectively. If the fourth value is absent, it is the same as the second. If the third one is also absent, it is the same as the first. If the second one is also absent, it is the same as the first. Numbers represent multiples of the corresponding border-width.",
     browsers: "E,C16,FF15,IE11,O15,S6",
     restriction: "length, number",
     syntax: "[ <length> | <number> ]{1,4}"
    }, {
     name: "border-image-repeat",
     desc: "Specifies how the images for the sides and the middle part of the border image are scaled and tiled. If the second keyword is absent, it is assumed to be the same as the first.",
     browsers: "E,C16,FF15,IE11,O15,S6",
     restriction: "enum",
     values: [ {
      name: "repeat"
     }, {
      name: "round",
      desc: "The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the image is rescaled so that it does."
     }, {
      name: "space",
      desc: "The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the extra space is distributed around the tiles."
     }, {
      name: "stretch",
      desc: "The image is stretched to fill the area."
     } ],
     syntax: "[ stretch | repeat | round | space ]{1,2}"
    }, {
     name: "border-image-slice",
     desc: "Specifies inward offsets from the top, right, bottom, and left edges of the image, dividing it into nine regions: four corners, four edges and a middle.",
     browsers: "E,C16,FF15,IE11,O15,S6",
     restriction: "number, percentage",
     values: [ {
      name: "fill",
      desc: "Causes the middle part of the border-image to be preserved."
     } ],
     syntax: "<number-percentage>{1,4} && fill?"
    }, {
     name: "border-image-source",
     desc: "Specifies an image to use instead of the border styles given by the 'border-style' properties and as an additional background layer for the element. If the value is 'none' or if the image cannot be displayed, the border styles will be used.",
     browsers: "E,C16,FF15,IE11,O15,S6",
     restriction: "image",
     values: [ {
      name: "none",
      desc: "Use the border styles."
     } ],
     syntax: "none | <image>"
    }, {
     name: "border-image-width",
     desc: "The four values of 'border-image-width' specify offsets that are used to divide the border image area into nine parts. They represent inward distances from the top, right, bottom, and left sides of the area, respectively.",
     browsers: "E,C16,FF15,IE11,O15,S6",
     restriction: "length, percentage, number",
     values: [ {
      name: "auto",
      desc: "The border image width is the intrinsic width or height (whichever is applicable) of the corresponding image slice. If the image does not have the required intrinsic dimension then the corresponding border-width is used instead."
     } ],
     syntax: "[ <length-percentage> | <number> | auto ]{1,4}"
    }, {
     name: "border-inline-end",
     desc: "Logical 'border-right'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.",
     browsers: "FF41",
     restriction: "length, line-width, line-style, color",
     syntax: "<'border-width'> || <'border-style'> || <'color'>"
    }, {
     name: "border-inline-start",
     desc: "Logical 'border-left'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.",
     browsers: "FF41",
     restriction: "length, line-width, line-style, color",
     syntax: "<'border-width'> || <'border-style'> || <'color'>"
    }, {
     name: "border-inline-end-color",
     desc: "Logical 'border-right-color'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.",
     browsers: "FF41",
     restriction: "color",
     syntax: "<'color'>"
    }, {
     name: "border-inline-start-color",
     desc: "Logical 'border-left-color'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.",
     browsers: "FF41",
     restriction: "color",
     syntax: "<'color'>"
    }, {
     name: "border-inline-end-style",
     desc: "Logical 'border-right-style'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.",
     browsers: "FF41",
     restriction: "line-style",
     syntax: "<'border-style'>"
    }, {
     name: "border-inline-start-style",
     desc: "Logical 'border-left-style'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.",
     browsers: "FF41",
     restriction: "lline-style",
     syntax: "<'border-style'>"
    }, {
     name: "border-inline-end-width",
     desc: "Logical 'border-right-width'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.",
     browsers: "FF41",
     restriction: "length, line-width",
     syntax: "<'border-width'>"
    }, {
     name: "border-inline-start-width",
     desc: "Logical 'border-left-width'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.",
     browsers: "FF41",
     restriction: "length, line-width",
     syntax: "<'border-width'>"
    }, {
     name: "border-left",
     desc: "Shorthand property for setting border width, style and color",
     restriction: "length, line-width, line-style, color",
     syntax: "<br-width> || <br-style> || <color>"
    }, {
     name: "border-left-color",
     desc: "Sets the color of the left border.",
     restriction: "color",
     syntax: "<color>"
    }, {
     name: "border-left-style",
     desc: "Sets the style of the left border.",
     restriction: "line-style",
     syntax: "<br-style>"
    }, {
     name: "border-left-width",
     desc: "Sets the thickness of the left border.",
     restriction: "length, line-width",
     syntax: "<br-width>"
    }, {
     name: "border-radius",
     desc: "Defines the radii of the outer border edge.",
     browsers: "E,C,FF4,IE9,O10.5,S5",
     restriction: "length, percentage",
     syntax: "<length-percentage>{1,4} [ / <length-percentage>{1,4} ]?"
    }, {
     name: "border-right",
     desc: "Shorthand property for setting border width, style and color",
     restriction: "length, line-width, line-style, color",
     syntax: "<br-width> || <br-style> || <color>"
    }, {
     name: "border-right-color",
     desc: "Sets the color of the right border.",
     restriction: "color",
     syntax: "<color>"
    }, {
     name: "border-right-style",
     desc: "Sets the style of the right border.",
     restriction: "line-style",
     syntax: "<br-style>"
    }, {
     name: "border-right-width",
     desc: "Sets the thickness of the right border.",
     restriction: "length, line-width",
     syntax: "<br-width>"
    }, {
     name: "border-spacing",
     desc: "The lengths specify the distance that separates adjoining cell borders. If one length is specified, it gives both the horizontal and vertical spacing. If two are specified, the first gives the horizontal spacing and the second the vertical spacing. Lengths may not be negative.",
     browsers: "E,C,FF1,IE8,O7,S1.2",
     restriction: "length",
     syntax: "<length> <length>?"
    }, {
     name: "border-style",
     desc: "The style of the border around edges of an element.",
     restriction: "line-style",
     values: [],
     syntax: "<br-style>{1,4}"
    }, {
     name: "border-top",
     desc: "Shorthand property for setting border width, style and color",
     restriction: "length, line-width, line-style, color",
     syntax: "<br-width> || <br-style> || <color>"
    }, {
     name: "border-top-color",
     desc: "Sets the color of the top border.",
     restriction: "color",
     syntax: "<color>"
    }, {
     name: "border-top-left-radius",
     desc: "Defines the radii of the top left outer border edge.",
     browsers: "E,C,FF4,IE9,O10.5,S5",
     restriction: "length, percentage",
     syntax: "<length-percentage>{1,2}"
    }, {
     name: "border-top-right-radius",
     desc: "Defines the radii of the top right outer border edge.",
     browsers: "E,C,FF4,IE9,O10.5,S5",
     restriction: "length, percentage",
     syntax: "<length-percentage>{1,2}"
    }, {
     name: "border-top-style",
     desc: "Sets the style of the top border.",
     restriction: "line-style",
     syntax: "<br-style>"
    }, {
     name: "border-top-width",
     desc: "Sets the thickness of the top border.",
     restriction: "length, line-width",
     syntax: "<br-width>"
    }, {
     name: "border-width",
     desc: "Shorthand that sets the four 'border-*-width' properties. If it has four values, they set top, right, bottom and left in that order. If left is missing, it is the same as right; if bottom is missing, it is the same as top; if right is missing, it is the same as top.",
     restriction: "length, line-width",
     values: [],
     syntax: "<br-width>{1,4}"
    }, {
     name: "bottom",
     desc: "Specifies how far an absolutely positioned box's bottom margin edge is offset above the bottom edge of the box's 'containing block'.",
     restriction: "length, percentage",
     values: [ {
      name: "auto",
      desc: "For non-replaced elements, the effect of this value depends on which of related properties have the value 'auto' as well"
     } ],
     syntax: "<length> | <percentage> | auto"
    }, {
     name: "box-decoration-break",
     desc: "Specifies whether individual boxes are treated as broken pieces of one continuous box, or whether each box is individually wrapped with the border and padding.",
     browsers: "FF32,O11",
     restriction: "enum",
     values: [ {
      name: "clone"
     }, {
      name: "slice"
     } ],
     syntax: "slice | clone"
    }, {
     name: "box-shadow",
     desc: "Attaches one or more drop-shadows to the box. The property is a comma-separated list of shadows, each specified by 2-4 length values, an optional color, and an optional 'inset' keyword. Omitted lengths are 0; omitted colors are a user agent chosen color.",
     browsers: "E,C,FF4,IE9,O11.5,S5.1",
     restriction: "length, color, enum",
     values: [ {
      name: "inset"
     } ],
     syntax: "none | <shadow>#"
    }, {
     name: "box-sizing",
     desc: "Specifies the behavior of the 'width' and 'height' properties.",
     browsers: "E,C10,FF29,IE8,O8,S5.1",
     restriction: "enum",
     values: [ {
      name: "border-box"
     }, {
      name: "content-box"
     } ],
     syntax: "content-box | border-box"
    }, {
     name: "break-after",
     desc: "Describes the page/column/region break behavior after the generated box.",
     browsers: "E,IE10,O11.5",
     restriction: "enum",
     values: [ {
      name: "always",
      desc: "Always force a page break before/after the generated box."
     }, {
      name: "auto",
      desc: "Neither force nor forbid a page/column break before/after the principal box."
     }, {
      name: "avoid",
      desc: "Avoid a break before/after the principal box."
     }, {
      name: "avoid-column",
      desc: "Avoid a column break before/after the principal box."
     }, {
      name: "avoid-page",
      desc: "Avoid a page break before/after the principal box."
     }, {
      name: "column",
      desc: "Always force a column break before/after the principal box."
     }, {
      name: "left",
      desc: "Force one or two page breaks before/after the generated box so that the next page is formatted as a left page."
     }, {
      name: "page",
      desc: "Always force a page break before/after the principal box."
     }, {
      name: "right",
      desc: "Force one or two page breaks before/after the generated box so that the next page is formatted as a right page."
     } ],
     syntax: "auto | avoid | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region"
    }, {
     name: "break-before",
     desc: "Describes the page/column/region break behavior before the generated box.",
     browsers: "E,IE10,O11.5",
     restriction: "enum",
     values: [ {
      name: "always",
      desc: "Always force a page break before/after the generated box."
     }, {
      name: "auto",
      desc: "Neither force nor forbid a page/column break before/after the principal box."
     }, {
      name: "avoid",
      desc: "Avoid a break before/after the principal box."
     }, {
      name: "avoid-column",
      desc: "Avoid a column break before/after the principal box."
     }, {
      name: "avoid-page",
      desc: "Avoid a page break before/after the principal box."
     }, {
      name: "column",
      desc: "Always force a column break before/after the principal box."
     }, {
      name: "left",
      desc: "Force one or two page breaks before/after the generated box so that the next page is formatted as a left page."
     }, {
      name: "page",
      desc: "Always force a page break before/after the principal box."
     }, {
      name: "right",
      desc: "Force one or two page breaks before/after the generated box so that the next page is formatted as a right page."
     } ],
     syntax: "auto | avoid | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region"
    }, {
     name: "break-inside",
     desc: "Describes the page/column/region break behavior inside the principal box.",
     browsers: "E,IE10,O11.5",
     restriction: "enum",
     values: [ {
      name: "auto",
      desc: "Impose no additional breaking constraints within the box."
     }, {
      name: "avoid",
      desc: "Avoid breaks within the box."
     }, {
      name: "avoid-column",
      desc: "Avoid a column break within the box."
     }, {
      name: "avoid-page",
      desc: "Avoid a page break within the box."
     } ],
     syntax: "auto | avoid | avoid-page | avoid-column | avoid-region"
    }, {
     name: "caption-side",
     desc: "Specifies the position of the caption box with respect to the table box.",
     browsers: "E,C,FF,IE8,O,S",
     restriction: "enum",
     values: [ {
      name: "bottom",
      desc: "Positions the caption box below the table box."
     }, {
      name: "top",
      desc: "Positions the caption box above the table box."
     } ],
     syntax: "top | bottom | block-start | block-end | inline-start | inline-end"
    }, {
     name: "caret-color",
     desc: "Controls the color of the text insertion indicator.",
     browsers: "C60,FF55,O46",
     restriction: "color, enum",
     values: [ {
      name: "auto",
      desc: "The user agent selects an appropriate color for the caret. This is generally currentcolor, but the user agent may choose a different color to ensure good visibility and contrast with the surrounding content, taking into account the value of currentcolor, the background, shadows, and other factors."
     } ],
     syntax: "auto | <color>"
    }, {
     name: "clear",
     desc: "Indicates which sides of an element's box(es) may not be adjacent to an earlier floating box. The 'clear' property does not consider floats inside the element itself or in other block formatting contexts.",
     restriction: "enum",
     values: [ {
      name: "both",
      desc: "The clearance of the generated box is set to the amount necessary to place the top border edge below the bottom outer edge of any right-floating and left-floating boxes that resulted from elements earlier in the source document."
     }, {
      name: "left",
      desc: "The clearance of the generated box is set to the amount necessary to place the top border edge below the bottom outer edge of any left-floating boxes that resulted from elements earlier in the source document."
     }, {
      name: "none",
      desc: "No constraint on the box's position with respect to floats."
     }, {
      name: "right",
      desc: "The clearance of the generated box is set to the amount necessary to place the top border edge below the bottom outer edge of any right-floating boxes that resulted from elements earlier in the source document."
     } ],
     syntax: "none | left | right | both | inline-start | inline-end"
    }, {
     name: "clip",
     desc: "Deprecated. Use the 'clip-path' property when support allows. Defines the visible portion of an element’s box.",
     restriction: "enum",
     values: [ {
      name: "auto",
      desc: "The element does not clip."
     }, {
      name: "rect()"
     } ],
     syntax: "<shape> | auto"
    }, {
     name: "clip-path",
     desc: "Specifies a clipping path where everything inside the path is visable and everything outside is clipped out.",
     browsers: "FF3.5",
     restriction: "url, shape, geometry-box, enum",
     values: [ {
      name: "none",
      desc: "No clipping path gets created."
     }, {
      name: "url()",
      desc: "References a <clipPath> element to create a clipping path."
     } ],
     syntax: "<clip-source> | [ <basic-shape> || <geometry-box> ] | none"
    }, {
     name: "clip-rule",
     desc: "Indicates the algorithm which is to be used to determine what parts of the canvas are included inside the shape.",
     browsers: "E,C5,FF3,IE10,O9,S6",
     restriction: "enum",
     values: [ {
      name: "evenodd"
     }, {
      name: "nonzero"
     } ]
    }, {
     name: "color",
     desc: "Color of an element's text",
     restriction: "color",
     syntax: "<color>"
    }, {
     name: "color-interpolation-filters",
     desc: "Specifies the color space for imaging operations performed via filter effects.",
     browsers: "E,C5,FF3,IE10,O9,S6",
     restriction: "enum",
     values: [ {
      name: "auto",
      desc: "Color operations are not required to occur in a particular color space."
     }, {
      name: "linearRGB"
     }, {
      name: "sRGB"
     } ]
    }, {
     name: "column-count",
     desc: "Describes the optimal number of columns into which the content of the element will be flowed.",
     browsers: "E,IE10,O11.5,S9",
     restriction: "integer, enum",
     values: [ {
      name: "auto",
      desc: "Determines the number of columns by the 'column-width' property and the element width."
     } ],
     syntax: "<integer> | auto"
    }, {
     name: "column-fill",
     desc: "In continuous media, this property will only be consulted if the length of columns has been constrained. Otherwise, columns will automatically be balanced.",
     browsers: "E,IE10,O11.5,S9",
     restriction: "enum",
     values: [ {
      name: "auto",
      desc: "Fills columns sequentially."
     }, {
      name: "balance"
     } ],
     syntax: "auto | balance | balance-all"
    }, {
     name: "column-gap",
     desc: "Sets the gap between columns. If there is a column rule between columns, it will appear in the middle of the gap.",
     browsers: "E,IE10,O11.5,S9",
     restriction: "length, enum",
     values: [ {
      name: "normal",
      desc: "User agent specific and typically equivalent to 1em."
     } ],
     syntax: "normal | <length-percentage>"
    }, {
     name: "column-rule",
     desc: "Shorthand for setting 'column-rule-width', 'column-rule-style', and 'column-rule-color' at the same place in the style sheet. Omitted values are set to their initial values.",
     browsers: "E,IE10,O11.5,S9",
     restriction: "length, line-width, line-style, color",
     syntax: "<'column-rule-width'> || <'column-rule-style'> || <'column-rule-color'>"
    }, {
     name: "column-rule-color",
     desc: "Sets the color of the column rule",
     browsers: "E,IE10,O11.6",
     restriction: "color",
     syntax: "<color>"
    }, {
     name: "column-rule-style",
     desc: "Sets the style of the rule between columns of an element.",
     browsers: "E,IE10,O11.5,S6",
     restriction: "line-style",
     syntax: "<'border-style'>"
    }, {
     name: "column-rule-width",
     desc: "Sets the width of the rule between columns. Negative values are not allowed.",
     browsers: "E,IE10,O11.5,S9",
     restriction: "length, line-width",
     syntax: "<'border-width'>"
    }, {
     name: "columns",
     desc: "A shorthand property which sets both 'column-width' and 'column-count'.",
     browsers: "E,IE10,O11.5,S9",
     restriction: "length, integer, enum",
     values: [ {
      name: "auto",
      desc: "The width depends on the values of other properties."
     } ],
     syntax: "<'column-width'> || <'column-count'>"
    }, {
     name: "column-span",
     desc: "Describes the page/column break behavior after the generated box.",
     browsers: "E,IE10,O11.5,S9",
     restriction: "enum",
     values: [ {
      name: "all",
      desc: "The element spans across all columns. Content in the normal flow that appears before the element is automatically balanced across all columns before the element appear."
     }, {
      name: "none",
      desc: "The element does not span multiple columns."
     } ],
     syntax: "none | all"
    }, {
     name: "column-width",
     desc: "Describes the width of columns in multicol elements.",
     browsers: "E,IE10,O11.5,S9",
     restriction: "length, enum",
     values: [ {
      name: "auto",
      desc: "The width depends on the values of other properties."
     } ],
     syntax: "<length> | auto"
    }, {
     name: "contain",
     desc: "Indicates that an element and its contents are, as much as possible, independent of the rest of the document tree.",
     browsers: "C52,O40",
     restriction: "enum",
     values: [ {
      name: "none",
      desc: "Indicates that the property has no effect."
     }, {
      name: "strict",
      desc: "Turns on all forms of containment for the element."
     }, {
      name: "content",
      desc: "All containment rules except size are applied to the element."
     }, {
      name: "size"
     }, {
      name: "layout"
     }, {
      name: "style",
      desc: "Turns on style containment for the element."
     }, {
      name: "paint"
     } ],
     status: "e",
     syntax: "none | strict | content | [ size || layout || style || paint ]"
    }, {
     name: "content",
     desc: "Determines which page-based occurrence of a given element is applied to a counter or string value.",
     browsers: "E,C,FF1,IE8,O4,S1",
     restriction: "string, url",
     values: [ {
      name: "attr()"
     }, {
      name: "counter(name)"
     }, {
      name: "icon",
      desc: "The (pseudo-)element is replaced in its entirety by the resource referenced by its 'icon' property, and treated as a replaced element."
     }, {
      name: "none",
      desc: "On elements, this inhibits the children of the element from being rendered as children of this element, as if the element was empty. On pseudo-elements it causes the pseudo-element to have no content."
     }, {
      name: "normal",
      desc: "See http://www.w3.org/TR/css3-content/#content for computation rules."
     }, {
      name: "url()"
     } ],
     syntax: "normal | none | [ <content-replacement> | <content-list> ] [/ <string> ]?"
    }, {
     name: "counter-increment",
     desc: "Manipulate the value of existing counters.",
     browsers: "E,C,FF1.5,IE8,O10.5,S3",
     restriction: "identifier, integer",
     values: [ {
      name: "none",
      desc: "This element does not alter the value of any counters."
     } ],
     syntax: "[ <custom-ident> <integer>? ]+ | none"
    }, {
     name: "counter-reset",
     desc: "Property accepts one or more names of counters (identifiers), each one optionally followed by an integer. The integer gives the value that the counter is set to on each occurrence of the element.",
     browsers: "E,C,FF1.5,IE8,O10.5,S3",
     restriction: "identifier, integer",
     values: [ {
      name: "none",
      desc: "The counter is not modified."
     } ],
     syntax: "[ <custom-ident> <integer>? ]+ | none"
    }, {
     name: "cursor",
     desc: "Allows control over cursor appearance in an element",
     restriction: "url, number, enum",
     values: [ {
      name: "alias"
     }, {
      name: "all-scroll"
     }, {
      name: "auto",
      desc: "The UA determines the cursor to display based on the current context."
     }, {
      name: "cell"
     }, {
      name: "col-resize"
     }, {
      name: "context-menu"
     }, {
      name: "copy"
     }, {
      name: "crosshair"
     }, {
      name: "default",
      desc: "The platform-dependent default cursor. Often rendered as an arrow."
     }, {
      name: "e-resize"
     }, {
      name: "ew-resize"
     }, {
      name: "grab",
      browsers: "FF27"
     }, {
      name: "grabbing",
      browsers: "FF27"
     }, {
      name: "help"
     }, {
      name: "move"
     }, {
      name: "-moz-grab",
      browsers: "FF1.5"
     }, {
      name: "-moz-grabbing",
      browsers: "FF1.5"
     }, {
      name: "-moz-zoom-in",
      browsers: "FF"
     }, {
      name: "-moz-zoom-out",
      browsers: "FF"
     }, {
      name: "ne-resize"
     }, {
      name: "nesw-resize"
     }, {
      name: "no-drop"
     }, {
      name: "none",
      desc: "No cursor is rendered for the element."
     }, {
      name: "not-allowed"
     }, {
      name: "n-resize"
     }, {
      name: "ns-resize"
     }, {
      name: "nw-resize"
     }, {
      name: "nwse-resize"
     }, {
      name: "pointer"
     }, {
      name: "progress"
     }, {
      name: "row-resize"
     }, {
      name: "se-resize"
     }, {
      name: "s-resize"
     }, {
      name: "sw-resize"
     }, {
      name: "text",
      desc: "Indicates text that may be selected. Often rendered as a vertical I-beam."
     }, {
      name: "vertical-text"
     }, {
      name: "wait"
     }, {
      name: "-webkit-grab",
      browsers: "C,S4"
     }, {
      name: "-webkit-grabbing",
      browsers: "C,S4"
     }, {
      name: "-webkit-zoom-in",
      browsers: "C,S1.2"
     }, {
      name: "-webkit-zoom-out",
      browsers: "C,S1.2"
     }, {
      name: "w-resize"
     }, {
      name: "zoom-in",
      browsers: "E,C37,FF24,O12.1,S9"
     }, {
      name: "zoom-out",
      browsers: "E,C37,FF24,O12.1,S9"
     } ],
     syntax: "[ [ <url> [ <x> <y> ]? , ]* [ auto | default | none | context-menu | help | pointer | progress | wait | cell | crosshair | text | vertical-text | alias | copy | move | no-drop | not-allowed | e-resize | n-resize | ne-resize | nw-resize | s-resize | se-resize | sw-resize | w-resize | ew-resize | ns-resize | nesw-resize | nwse-resize | col-resize | row-resize | all-scroll | zoom-in | zoom-out | grab | grabbing ] ]"
    }, {
     name: "direction",
     desc: "Specifies the inline base direction or directionality of any bidi paragraph, embedding, isolate, or override established by the box. Note: for HTML content use the 'dir' attribute and 'bdo' element rather than this property.",
     restriction: "enum",
     values: [ {
      name: "ltr"
     }, {
      name: "rtl"
     } ],
     syntax: "ltr | rtl"
    }, {
     name: "display",
     desc: "In combination with 'float' and 'position', determines the type of box or boxes that are generated for an element.",
     restriction: "enum",
     values: [ {
      name: "block"
     }, {
      name: "contents",
      desc: "The element itself does not generate any boxes, but its children and pseudo-elements still generate boxes as normal.",
      browsers: "FF37"
     }, {
      name: "flex",
      browsers: "E,C29,FF22,IE11,O12.1,S9"
     }, {
      name: "flexbox",
      browsers: "O12.1"
     }, {
      name: "flow-root",
      browsers: "C58,FF53,O45"
     }, {
      name: "grid",
      browsers: "FF52,C57,S10.1,O44"
     }, {
      name: "inline",
      desc: "The element generates an inline-level box."
     }, {
      name: "inline-block"
     }, {
      name: "inline-flex",
      browsers: "E,C29,FF22,IE11,O12.1,S9"
     }, {
      name: "inline-flexbox",
      browsers: "O12.1"
     }, {
      name: "inline-table"
     }, {
      name: "list-item"
     }, {
      name: "-moz-box",
      browsers: "FF"
     }, {
      name: "-moz-deck",
      browsers: "FF"
     }, {
      name: "-moz-grid",
      browsers: "FF"
     }, {
      name: "-moz-grid-group",
      browsers: "FF"
     }, {
      name: "-moz-grid-line",
      browsers: "FF"
     }, {
      name: "-moz-groupbox",
      browsers: "FF"
     }, {
      name: "-moz-inline-box",
      browsers: "FF"
     }, {
      name: "-moz-inline-grid",
      browsers: "FF"
     }, {
      name: "-moz-inline-stack",
      browsers: "FF"
     }, {
      name: "-moz-marker",
      browsers: "FF"
     }, {
      name: "-moz-popup",
      browsers: "FF"
     }, {
      name: "-moz-stack",
      browsers: "FF"
     }, {
      name: "-ms-flexbox",
      browsers: "IE10"
     }, {
      name: "-ms-grid",
      browsers: "E,IE10"
     }, {
      name: "-ms-inline-flexbox",
      browsers: "IE10"
     }, {
      name: "-ms-inline-grid",
      browsers: "E,IE10"
     }, {
      name: "none",
      desc: "The element and its descendants generates no boxes."
     }, {
      name: "ruby",
      desc: "The element generates a principal ruby container box, and establishes a ruby formatting context."
     }, {
      name: "ruby-base"
     }, {
      name: "ruby-base-container"
     }, {
      name: "ruby-text"
     }, {
      name: "ruby-text-container"
     }, {
      name: "run-in",
      browsers: "IE8"
     }, {
      name: "table"
     }, {
      name: "table-caption"
     }, {
      name: "table-cell"
     }, {
      name: "table-column"
     }, {
      name: "table-column-group"
     }, {
      name: "table-footer-group"
     }, {
      name: "table-header-group"
     }, {
      name: "table-row"
     }, {
      name: "table-row-group"
     }, {
      name: "-webkit-box",
      browsers: "C,S1"
     }, {
      name: "-webkit-flex",
      browsers: "C21,O15,S6.1"
     }, {
      name: "-webkit-inline-box",
      browsers: "C,S1"
     }, {
      name: "-webkit-inline-flex",
      browsers: "C21,O15,S6.1"
     } ],
     syntax: "[ <display-outside> || <display-inside> ] | <display-listitem> | <display-internal> | <display-box> | <display-legacy>"
    }, {
     name: "empty-cells",
     desc: "In the separated borders model, this property controls the rendering of borders and backgrounds around cells that have no visible content.",
     browsers: "E,C,FF1,IE7,O4,S1.2",
     restriction: "enum",
     values: [ {
      name: "hide"
     }, {
      name: "-moz-show-background",
      browsers: "FF"
     }, {
      name: "show"
     } ],
     syntax: "show | hide"
    }, {
     name: "enable-background",
     desc: "Deprecated. Use 'isolation' property instead when support allows. Specifies how the accumulation of the background image is managed.",
     restriction: "integer, length, percentage, enum",
     values: [ {
      name: "accumulate"
     }, {
      name: "new"
     } ]
    }, {
     name: "fallback",
     desc: "@counter-style descriptor. Specifies a fallback counter style to be used when the current counter style can’t create a representation for a given counter value.",
     browsers: "FF33",
     restriction: "identifier",
     syntax: "<counter-style-name>"
    }, {
     name: "fill",
     desc: "Paints the interior of the given graphical element.",
     restriction: "color, enum, url",
     values: [ {
      name: "url()",
      desc: "A URL reference to a paint server element, which is an element that defines a paint server: ‘hatch’, ‘linearGradient’, ‘mesh’, ‘pattern’, ‘radialGradient’ and ‘solidcolor’."
     } ]
    }, {
     name: "fill-opacity",
     desc: "Specifies the opacity of the painting operation used to paint the interior the current object.",
     restriction: "number(0-1)"
    }, {
     name: "fill-rule",
     desc: "Indicates the algorithm (or winding rule) which is to be used to determine what parts of the canvas are included inside the shape.",
     restriction: "enum",
     values: [ {
      name: "evenodd"
     }, {
      name: "nonzero"
     } ]
    }, {
     name: "filter",
     desc: "Processes an element’s rendering before it is displayed in the document, by applying one or more filter effects.",
     browsers: "E13,FF35",
     restriction: "enum, url",
     values: [ {
      name: "none",
      desc: "No filter effects are applied."
     }, {
      name: "blur()"
     }, {
      name: "brightness()"
     }, {
      name: "contrast()"
     }, {
      name: "drop-shadow()"
     }, {
      name: "grayscale()"
     }, {
      name: "hue-rotate()"
     }, {
      name: "invert()"
     }, {
      name: "opacity()"
     }, {
      name: "saturate()"
     }, {
      name: "sepia()"
     }, {
      name: "url()",
      desc: "A filter reference to a <filter> element.",
      browsers: "FF3.6"
     } ],
     syntax: "none | <filter-function-list>"
    }, {
     name: "flex",
     desc: "Specifies the components of a flexible length: the flex grow factor and flex shrink factor, and the flex basis.",
     browsers: "E,C29,FF22,IE11,O12.1,S9",
     restriction: "length, number, percentage",
     values: [ {
      name: "auto",
      desc: "Retrieves the value of the main size property as the used 'flex-basis'."
     }, {
      name: "content",
      desc: "Indicates automatic sizing, based on the flex item’s content.",
      browsers: "E,IE11"
     }, {
      name: "none",
      desc: "Expands to '0 0 auto'."
     } ],
     syntax: "none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]"
    }, {
     name: "flex-basis",
     desc: "Sets the flex basis.",
     browsers: "E,C29,FF22,IE11,O12.1,S9",
     restriction: "length, number, percentage",
     values: [ {
      name: "auto",
      desc: "Retrieves the value of the main size property as the used 'flex-basis'."
     }, {
      name: "content",
      desc: "Indicates automatic sizing, based on the flex item’s content.",
      browsers: "E,IE11"
     } ],
     syntax: "content | <'width'>"
    }, {
     name: "flex-direction",
     desc: "Specifies how flex items are placed in the flex container, by setting the direction of the flex container’s main axis.",
     browsers: "E,C29,FF22,IE11,O12.1,S9",
     restriction: "enum",
     values: [ {
      name: "column",
      desc: "The flex container’s main axis has the same orientation as the block axis of the current writing mode."
     }, {
      name: "column-reverse"
     }, {
      name: "row",
      desc: "The flex container’s main axis has the same orientation as the inline axis of the current writing mode."
     }, {
      name: "row-reverse"
     } ],
     syntax: "row | row-reverse | column | column-reverse"
    }, {
     name: "flex-flow",
     desc: "Specifies how flexbox items are placed in the flexbox.",
     browsers: "E,C29,FF28,IE11,O12.1,S9",
     restriction: "enum",
     values: [ {
      name: "column",
      desc: "The flex container’s main axis has the same orientation as the block axis of the current writing mode."
     }, {
      name: "column-reverse"
     }, {
      name: "nowrap",
      desc: "The flex container is single-line."
     }, {
      name: "row",
      desc: "The flex container’s main axis has the same orientation as the inline axis of the current writing mode."
     }, {
      name: "row-reverse"
     }, {
      name: "wrap",
      desc: "The flexbox is multi-line."
     }, {
      name: "wrap-reverse"
     } ],
     syntax: "<'flex-direction'> || <'flex-wrap'>"
    }, {
     name: "flex-grow",
     desc: "Sets the flex grow factor. Negative numbers are invalid.",
     browsers: "E,C29,FF22,IE11,O12.1,S9",
     restriction: "number",
     syntax: "<number>"
    }, {
     name: "flex-shrink",
     desc: "Sets the flex shrink factor. Negative numbers are invalid.",
     browsers: "E,C29,FF22,IE11,O12.1,S9",
     restriction: "number",
     syntax: "<number>"
    }, {
     name: "flex-wrap",
     desc: "Controls whether the flex container is single-line or multi-line, and the direction of the cross-axis, which determines the direction new lines are stacked in.",
     browsers: "E,C29,FF28,IE11,O12.1,S9",
     restriction: "enum",
     values: [ {
      name: "nowrap",
      desc: "The flex container is single-line."
     }, {
      name: "wrap",
      desc: "The flexbox is multi-line."
     }, {
      name: "wrap-reverse"
     } ],
     syntax: "nowrap | wrap | wrap-reverse"
    }, {
     name: "float",
     desc: "Specifies how a box should be floated. It may be set for any element, but only applies to elements that generate boxes that are not absolutely positioned.",
     restriction: "enum",
     values: [ {
      name: "inline-end",
      browsers: "FF55"
     }, {
      name: "inline-start",
      browsers: "FF55"
     }, {
      name: "left",
      desc: "The element generates a block box that is floated to the left. Content flows on the right side of the box, starting at the top (subject to the 'clear' property)."
     }, {
      name: "none",
      desc: "The box is not floated."
     }, {
      name: "right",
      desc: "Similar to 'left', except the box is floated to the right, and content flows on the left side of the box, starting at the top."
     } ],
     syntax: "left | right | none | inline-start | inline-end"
    }, {
     name: "flood-color",
     desc: "Indicates what color to use to flood the current filter primitive subregion.",
     browsers: "E,C5,FF3,IE10,O9,S6",
     restriction: "color"
    }, {
     name: "flood-opacity",
     desc: "Indicates what opacity to use to flood the current filter primitive subregion.",
     browsers: "E,C5,FF3,IE10,O9,S6",
     restriction: "number(0-1), percentage"
    }, {
     name: "font",
     desc: "Shorthand property for setting 'font-style', 'font-variant', 'font-weight', 'font-size', 'line-height', and 'font-family', at the same place in the style sheet. The syntax of this property is based on a traditional typographical shorthand notation to set multiple properties related to fonts.",
     restriction: "font",
     values: [ {
      name: "100"
     }, {
      name: "200"
     }, {
      name: "300"
     }, {
      name: "400"
     }, {
      name: "500"
     }, {
      name: "600"
     }, {
      name: "700"
     }, {
      name: "800"
     }, {
      name: "900"
     }, {
      name: "bold"
     }, {
      name: "bolder"
     }, {
      name: "caption"
     }, {
      name: "icon",
      desc: "The font used to label icons."
     }, {
      name: "italic",
      desc: "Selects a font that is labeled 'italic', or, if that is not available, one labeled 'oblique'."
     }, {
      name: "large"
     }, {
      name: "larger"
     }, {
      name: "lighter"
     }, {
      name: "medium"
     }, {
      name: "menu"
     }, {
      name: "message-box"
     }, {
      name: "normal",
      desc: "Specifies a face that is not labeled as a small-caps font."
     }, {
      name: "oblique",
      desc: "Selects a font that is labeled 'oblique'."
     }, {
      name: "small"
     }, {
      name: "small-caps",
      desc: "Specifies a font that is labeled as a small-caps font. If a genuine small-caps font is not available, user agents should simulate a small-caps font."
     }, {
      name: "small-caption"
     }, {
      name: "smaller"
     }, {
      name: "status-bar"
     }, {
      name: "x-large"
     }, {
      name: "x-small"
     }, {
      name: "xx-large"
     }, {
      name: "xx-small"
     } ],
     syntax: "[ [ <'font-style'> || <font-variant-css21> || <'font-weight'> || <'font-stretch'> ]? <'font-size'> [ / <'line-height'> ]? <'font-family'> ] | caption | icon | menu | message-box | small-caption | status-bar"
    }, {
     name: "font-family",
     desc: "Specifies a prioritized list of font family names or generic family names. A user agent iterates through the list of family names until it matches an available font that contains a glyph for the character to be rendered.",
     restriction: "font",
     values: [ {
      name: "-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif"
     }, {
      name: "Arial, Helvetica, sans-serif"
     }, {
      name: "Cambria, Cochin, Georgia, Times, 'Times New Roman', serif"
     }, {
      name: "'Courier New', Courier, monospace"
     }, {
      name: "cursive"
     }, {
      name: "fantasy"
     }, {
      name: "'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif"
     }, {
      name: "Georgia, 'Times New Roman', Times, serif"
     }, {
      name: "'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif"
     }, {
      name: "Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif"
     }, {
      name: "'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif"
     }, {
      name: "monospace"
     }, {
      name: "sans-serif"
     }, {
      name: "'Segoe UI', Tahoma, Geneva, Verdana, sans-serif"
     }, {
      name: "serif"
     }, {
      name: "'Times New Roman', Times, serif"
     }, {
      name: "'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif"
     }, {
      name: "Verdana, Geneva, Tahoma, sans-serif"
     } ],
     syntax: "<family-name>"
    }, {
     name: "font-feature-settings",
     desc: "Provides low-level control over OpenType font features. It is intended as a way of providing access to font features that are not widely used but are needed for a particular use case.",
     browsers: "E,FF34,IE10",
     restriction: "string, integer",
     values: [ {
      name: '"aalt"'
     }, {
      name: '"abvf"'
     }, {
      name: '"abvm"'
     }, {
      name: '"abvs"'
     }, {
      name: '"afrc"'
     }, {
      name: '"akhn"'
     }, {
      name: '"blwf"'
     }, {
      name: '"blwm"'
     }, {
      name: '"blws"'
     }, {
      name: '"calt"'
     }, {
      name: '"case"'
     }, {
      name: '"ccmp"'
     }, {
      name: '"cfar"'
     }, {
      name: '"cjct"'
     }, {
      name: '"clig"'
     }, {
      name: '"cpct"'
     }, {
      name: '"cpsp"'
     }, {
      name: '"cswh"'
     }, {
      name: '"curs"'
     }, {
      name: '"c2pc"'
     }, {
      name: '"c2cs"',
      desc: "Small Capitals From Capitals. Applies only to bicameral scripts."
     }, {
      name: '"dist"'
     }, {
      name: '"dlig"',
      desc: "Discretionary ligatures."
     }, {
      name: '"dnom"'
     }, {
      name: '"dtls"'
     }, {
      name: '"expt"'
     }, {
      name: '"falt"'
     }, {
      name: '"fin2"'
     }, {
      name: '"fin3"'
     }, {
      name: '"fina"'
     }, {
      name: '"flac"'
     }, {
      name: '"frac"'
     }, {
      name: '"fwid"'
     }, {
      name: '"half"'
     }, {
      name: '"haln"'
     }, {
      name: '"halt"'
     }, {
      name: '"hist"'
     }, {
      name: '"hkna"'
     }, {
      name: '"hlig"'
     }, {
      name: '"hngl"'
     }, {
      name: '"hojo"'
     }, {
      name: '"hwid"'
     }, {
      name: '"init"'
     }, {
      name: '"isol"'
     }, {
      name: '"ital"'
     }, {
      name: '"jalt"'
     }, {
      name: '"jp78"'
     }, {
      name: '"jp83"'
     }, {
      name: '"jp90"'
     }, {
      name: '"jp04"'
     }, {
      name: '"kern"',
      desc: "Kerning."
     }, {
      name: '"lfbd"'
     }, {
      name: '"liga"',
      desc: "Standard Ligatures."
     }, {
      name: '"ljmo"'
     }, {
      name: '"lnum"',
      desc: "Lining Figures."
     }, {
      name: '"locl"'
     }, {
      name: '"ltra"'
     }, {
      name: '"ltrm"'
     }, {
      name: '"mark"'
     }, {
      name: '"med2"'
     }, {
      name: '"medi"'
     }, {
      name: '"mgrk"'
     }, {
      name: '"mkmk"'
     }, {
      name: '"nalt"'
     }, {
      name: '"nlck"'
     }, {
      name: '"nukt"'
     }, {
      name: '"numr"'
     }, {
      name: '"onum"',
      desc: "Oldstyle Figures."
     }, {
      name: '"opbd"'
     }, {
      name: '"ordn"'
     }, {
      name: '"ornm"'
     }, {
      name: '"palt"'
     }, {
      name: '"pcap"'
     }, {
      name: '"pkna"'
     }, {
      name: '"pnum"'
     }, {
      name: '"pref"'
     }, {
      name: '"pres"'
     }, {
      name: '"pstf"'
     }, {
      name: '"psts"'
     }, {
      name: '"pwid"'
     }, {
      name: '"qwid"'
     }, {
      name: '"rand"'
     }, {
      name: '"rclt"'
     }, {
      name: '"rlig"'
     }, {
      name: '"rkrf"'
     }, {
      name: '"rphf"'
     }, {
      name: '"rtbd"'
     }, {
      name: '"rtla"'
     }, {
      name: '"rtlm"'
     }, {
      name: '"ruby"'
     }, {
      name: '"salt"'
     }, {
      name: '"sinf"'
     }, {
      name: '"size"'
     }, {
      name: '"smcp"',
      desc: "Small Capitals. Applies only to bicameral scripts."
     }, {
      name: '"smpl"'
     }, {
      name: '"ssty"'
     }, {
      name: '"stch"'
     }, {
      name: '"subs"'
     }, {
      name: '"sups"'
     }, {
      name: '"swsh"',
      desc: "Swash. Does not apply to ideographic scripts."
     }, {
      name: '"titl"'
     }, {
      name: '"tjmo"'
     }, {
      name: '"tnam"'
     }, {
      name: '"tnum"',
      desc: "Tabular Figures."
     }, {
      name: '"trad"'
     }, {
      name: '"twid"'
     }, {
      name: '"unic"'
     }, {
      name: '"valt"'
     }, {
      name: '"vatu"'
     }, {
      name: '"vert"'
     }, {
      name: '"vhal"'
     }, {
      name: '"vjmo"'
     }, {
      name: '"vkna"'
     }, {
      name: '"vkrn"'
     }, {
      name: '"vpal"'
     }, {
      name: '"vrt2"'
     }, {
      name: '"zero"'
     }, {
      name: "normal",
      desc: "No change in glyph substitution or positioning occurs."
     }, {
      name: "off",
      desc: "Disable feature."
     }, {
      name: "on",
      desc: "Enable feature."
     } ],
     syntax: "normal | <feature-tag-value>#"
    }, {
     name: "font-kerning",
     desc: "Kerning is the contextual adjustment of inter-glyph spacing. This property controls metric kerning, kerning that utilizes adjustment data contained in the font.",
     browsers: "C33,FF34,O20",
     restriction: "enum",
     values: [ {
      name: "auto",
      desc: "Specifies that kerning is applied at the discretion of the user agent."
     }, {
      name: "none",
      desc: "Specifies that kerning is not applied."
     }, {
      name: "normal",
      desc: "Specifies that kerning is applied."
     } ],
     syntax: "auto | normal | none"
    }, {
     name: "font-language-override",
     desc: "The value of 'normal' implies that when rendering with OpenType fonts the language of the document is used to infer the OpenType language system, used to select language specific features when rendering.",
     browsers: "FF34",
     restriction: "string",
     values: [ {
      name: "normal",
      desc: "Implies that when rendering with OpenType fonts the language of the document is used to infer the OpenType language system, used to select language specific features when rendering."
     } ],
     syntax: "normal | <string>"
    }, {
     name: "font-size",
     desc: "Indicates the desired height of glyphs from the font. For scalable fonts, the font-size is a scale factor applied to the EM unit of the font. (Note that certain glyphs may bleed outside their EM box.) For non-scalable fonts, the font-size is converted into absolute units and matched against the declared font-size of the font, using the same absolute coordinate space for both of the matched values.",
     restriction: "length, percentage",
     values: [ {
      name: "large"
     }, {
      name: "larger"
     }, {
      name: "medium"
     }, {
      name: "small"
     }, {
      name: "smaller"
     }, {
      name: "x-large"
     }, {
      name: "x-small"
     }, {
      name: "xx-large"
     }, {
      name: "xx-small"
     } ],
     syntax: "<absolute-size> | <relative-size> | <length-percentage>"
    }, {
     name: "font-size-adjust",
     desc: "Preserves the readability of text when font fallback occurs by adjusting the font-size so that the x-height is the same irregardless of the font used.",
     browsers: "E,FF3,IE10",
     restriction: "number",
     values: [ {
      name: "none",
      desc: "Do not preserve the font’s x-height."
     } ],
     syntax: "none | <number>"
    }, {
     name: "font-stretch",
     desc: "Selects a normal, condensed, or expanded face from a font family.",
     browsers: "E,FF9,IE9",
     restriction: "enum",
     values: [ {
      name: "condensed"
     }, {
      name: "expanded"
     }, {
      name: "extra-condensed"
     }, {
      name: "extra-expanded"
     }, {
      name: "narrower",
      browsers: "E,IE10"
     }, {
      name: "normal"
     }, {
      name: "semi-condensed"
     }, {
      name: "semi-expanded"
     }, {
      name: "ultra-condensed"
     }, {
      name: "ultra-expanded"
     }, {
      name: "wider",
      browsers: "E,IE10"
     } ],
     syntax: "normal | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded"
    }, {
     name: "font-style",
     desc: "Allows italic or oblique faces to be selected. Italic forms are generally cursive in nature while oblique faces are typically sloped versions of the regular face.",
     restriction: "enum",
     values: [ {
      name: "italic",
      desc: "Selects a font that is labeled as an 'italic' face, or an 'oblique' face if one is not"
     }, {
      name: "normal",
      desc: "Selects a face that is classified as 'normal'."
     }, {
      name: "oblique",
      desc: "Selects a font that is labeled as an 'oblique' face, or an 'italic' face if one is not."
     } ],
     syntax: "normal | italic | oblique"
    }, {
     name: "font-synthesis",
     desc: "Controls whether user agents are allowed to synthesize bold or oblique font faces when a font family lacks bold or italic faces.",
     browsers: "FF34,S9",
     restriction: "enum",
     values: [ {
      name: "none",
      desc: "Disallow all synthetic faces."
     }, {
      name: "style",
      desc: "Allow synthetic italic faces."
     }, {
      name: "weight"
     } ],
     syntax: "none | [ weight || style ]"
    }, {
     name: "font-variant",
     desc: "Specifies variant representations of the font",
     restriction: "enum",
     values: [ {
      name: "normal",
      desc: "Specifies a face that is not labeled as a small-caps font."
     }, {
      name: "small-caps",
      desc: "Specifies a font that is labeled as a small-caps font. If a genuine small-caps font is not available, user agents should simulate a small-caps font."
     } ],
     syntax: "normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> || stylistic(<feature-value-name>) || historical-forms || styleset(<feature-value-name>#) || character-variant(<feature-value-name>#) || swash(<feature-value-name>) || ornaments(<feature-value-name>) || annotation(<feature-value-name>) || [ small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps ] || <numeric-figure-values> || <numeric-spacing-values> || <numeric-fraction-values> || ordinal || slashed-zero || <east-asian-variant-values> || <east-asian-width-values> || ruby ]"
    }, {
     name: "font-variant-alternates",
     desc: "For any given character, fonts can provide a variety of alternate glyphs in addition to the default glyph for that character. This property provides control over the selection of these alternate glyphs.",
     browsers: "FF34",
     restriction: "enum",
     values: [ {
      name: "annotation()"
     }, {
      name: "character-variant()"
     }, {
      name: "historical-forms"
     }, {
      name: "normal",
      desc: "None of the features are enabled."
     }, {
      name: "ornaments()"
     }, {
      name: "styleset()"
     }, {
      name: "stylistic()"
     }, {
      name: "swash()"
     } ],
     syntax: "normal | [ stylistic( <feature-value-name> ) || historical-forms || styleset( <feature-value-name># ) || character-variant( <feature-value-name># ) || swash( <feature-value-name> ) || ornaments( <feature-value-name> ) || annotation( <feature-value-name> ) ]"
    }, {
     name: "font-variant-caps",
     desc: "Specifies control over capitalized forms.",
     browsers: "FF34",
     restriction: "enum",
     values: [ {
      name: "all-petite-caps"
     }, {
      name: "all-small-caps"
     }, {
      name: "normal",
      desc: "None of the features are enabled."
     }, {
      name: "petite-caps"
     }, {
      name: "small-caps",
      desc: "Enables display of small capitals. Small-caps glyphs typically use the form of uppercase letters but are reduced to the size of lowercase letters."
     }, {
      name: "titling-caps"
     }, {
      name: "unicase"
     } ],
     syntax: "normal | small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps"
    }, {
     name: "font-variant-east-asian",
     desc: "Allows control of glyph substitute and positioning in East Asian text.",
     browsers: "FF34",
     restriction: "enum",
     values: [ {
      name: "full-width"
     }, {
      name: "jis04"
     }, {
      name: "jis78"
     }, {
      name: "jis83"
     }, {
      name: "jis90"
     }, {
      name: "normal",
      desc: "None of the features are enabled."
     }, {
      name: "proportional-width"
     }, {
      name: "ruby",
      desc: "Enables display of ruby variant glyphs."
     }, {
      name: "simplified"
     }, {
      name: "traditional"
     } ],
     syntax: "normal | [ <east-asian-variant-values> || <east-asian-width-values> || ruby ]"
    }, {
     name: "font-variant-ligatures",
     desc: "Specifies control over which ligatures are enabled or disabled. A value of ‘normal’ implies that the defaults set by the font are used.",
     browsers: "C18,FF34,O15,S6",
     restriction: "enum",
     values: [ {
      name: "additional-ligatures"
     }, {
      name: "common-ligatures"
     }, {
      name: "contextual",
      browsers: "C35,F34,O22"
     }, {
      name: "discretionary-ligatures"
     }, {
      name: "historical-ligatures"
     }, {
      name: "no-additional-ligatures"
     }, {
      name: "no-common-ligatures"
     }, {
      name: "no-contextual",
      browsers: "C35,F34,O22"
     }, {
      name: "no-discretionary-ligatures"
     }, {
      name: "no-historical-ligatures"
     }, {
      name: "none",
      desc: "Disables all ligatures.",
      browsers: "FF34"
     }, {
      name: "normal",
      desc: "Implies that the defaults set by the font are used."
     } ],
     syntax: "normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> ]"
    }, {
     name: "font-variant-numeric",
     desc: "Specifies control over numerical forms.",
     browsers: "FF34",
     restriction: "enum",
     values: [ {
      name: "diagonal-fractions"
     }, {
      name: "lining-nums"
     }, {
      name: "normal",
      desc: "None of the features are enabled."
     }, {
      name: "oldstyle-nums"
     }, {
      name: "ordinal"
     }, {
      name: "proportional-nums"
     }, {
      name: "slashed-zero"
     }, {
      name: "stacked-fractions"
     }, {
      name: "tabular-nums"
     } ],
     syntax: "normal | [ <numeric-figure-values> || <numeric-spacing-values> || <numeric-fraction-values> || ordinal || slashed-zero ]"
    }, {
     name: "font-variant-position",
     desc: "Specifies the vertical position",
     browsers: "FF34",
     restriction: "enum",
     values: [ {
      name: "normal",
      desc: "None of the features are enabled."
     }, {
      name: "sub",
      desc: "Enables display of subscript variants (OpenType feature: subs)."
     }, {
      name: "super",
      desc: "Enables display of superscript variants (OpenType feature: sups)."
     } ],
     syntax: "normal | sub | super"
    }, {
     name: "font-weight",
     desc: "Specifies weight of glyphs in the font, their degree of blackness or stroke thickness.",
     restriction: "enum",
     values: [ {
      name: "100"
     }, {
      name: "200"
     }, {
      name: "300"
     }, {
      name: "400"
     }, {
      name: "500"
     }, {
      name: "600"
     }, {
      name: "700"
     }, {
      name: "800"
     }, {
      name: "900"
     }, {
      name: "bold"
     }, {
      name: "bolder"
     }, {
      name: "lighter"
     }, {
      name: "normal",
      desc: "Same as 400"
     } ],
     syntax: "normal | bold | 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900"
    }, {
     name: "glyph-orientation-horizontal",
     desc: "Controls glyph orientation when the inline-progression-direction is horizontal.",
     restriction: "angle, number"
    }, {
     name: "glyph-orientation-vertical",
     desc: "Controls glyph orientation when the inline-progression-direction is vertical.",
     restriction: "angle, number, enum",
     values: [ {
      name: "auto",
      desc: "Sets the orientation based on the fullwidth or non-fullwidth characters and the most common orientation."
     } ]
    }, {
     name: "grid-area",
     desc: "Determine a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement. Shorthand for 'grid-row-start', 'grid-column-start', 'grid-row-end', and 'grid-column-end'.",
     browsers: "FF52,C57,S10.1,O44",
     restriction: "identifier, integer",
     values: [ {
      name: "auto",
      desc: "The property contributes nothing to the grid item’s placement, indicating auto-placement, an automatic span, or a default span of one."
     }, {
      name: "span"
     } ],
     syntax: "<grid-line> [ / <grid-line> ]{0,3}"
    }, {
     name: "grid",
     desc: "The grid CSS property is a shorthand property that sets all of the explicit grid properties ('grid-template-rows', 'grid-template-columns', and 'grid-template-areas'), and all the implicit grid properties ('grid-auto-rows', 'grid-auto-columns', and 'grid-auto-flow'), in a single declaration.",
     browsers: "FF52,C57,E16,S10.1,O44",
     restriction: "identifier, length, percentage, string, enum",
     syntax: "<'grid-template'> | <'grid-template-rows'> / [ auto-flow && dense? ] <'grid-auto-columns'>? | [ auto-flow && dense? ] <'grid-auto-rows'>? / <'grid-template-columns'>"
    }, {
     name: "grid-auto-columns",
     desc: "Specifies the size of implicitly created columns.",
     browsers: "FF52,C57,S10.1,O44",
     restriction: "length, percentage",
     values: [ {
      name: "min-content",
      desc: "Represents the largest min-content contribution of the grid items occupying the grid track."
     }, {
      name: "max-content",
      desc: "Represents the largest max-content contribution of the grid items occupying the grid track."
     }, {
      name: "auto",
      desc: "As a maximum, identical to 'max-content'. As a minimum, represents the largest minimum size (as specified by min-width/min-height) of the grid items occupying the grid track."
     }, {
      name: "minmax()"
     } ],
     syntax: "<track-size>+"
    }, {
     name: "grid-auto-flow",
     desc: "Controls how the auto-placement algorithm works, specifying exactly how auto-placed items get flowed into the grid.",
     browsers: "FF52,C57,S10.1,O44",
     restriction: "enum",
     values: [ {
      name: "row",
      desc: "The auto-placement algorithm places items by filling each row in turn, adding new rows as necessary."
     }, {
      name: "column",
      desc: "The auto-placement algorithm places items by filling each column in turn, adding new columns as necessary."
     }, {
      name: "dense"
     } ],
     syntax: "[ row | column ] || dense"
    }, {
     name: "grid-auto-rows",
     desc: "Specifies the size of implicitly created rows.",
     browsers: "FF52,C57,S10.1,O44",
     restriction: "length, percentage",
     values: [ {
      name: "min-content",
      desc: "Represents the largest min-content contribution of the grid items occupying the grid track."
     }, {
      name: "max-content",
      desc: "Represents the largest max-content contribution of the grid items occupying the grid track."
     }, {
      name: "auto",
      desc: "As a maximum, identical to 'max-content'. As a minimum, represents the largest minimum size (as specified by min-width/min-height) of the grid items occupying the grid track."
     }, {
      name: "minmax()"
     } ],
     syntax: "<track-size>+"
    }, {
     name: "grid-column",
     desc: "Shorthand for 'grid-column-start' and 'grid-column-end'.",
     browsers: "FF52,C57,S10.1,O44",
     restriction: "identifier, integer, enum",
     values: [ {
      name: "auto",
      desc: "The property contributes nothing to the grid item’s placement, indicating auto-placement, an automatic span, or a default span of one."
     }, {
      name: "span"
     } ],
     syntax: "<grid-line> [ / <grid-line> ]?"
    }, {
     name: "grid-column-end",
     desc: "Determine a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement.",
     browsers: "FF52,C57,S10.1,O44",
     restriction: "identifier, integer, enum",
     values: [ {
      name: "auto",
      desc: "The property contributes nothing to the grid item’s placement, indicating auto-placement, an automatic span, or a default span of one."
     }, {
      name: "span"
     } ],
     syntax: "<grid-line>"
    }, {
     name: "grid-column-gap",
     desc: "Specifies the gutters between grid columns.",
     browsers: "FF52,C57,S10.1,O44",
     restriction: "length",
     status: "o",
     syntax: "<length-percentage>"
    }, {
     name: "grid-column-start",
     desc: "Determine a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement.",
     browsers: "FF52,C57,S10.1,O44",
     restriction: "identifier, integer, enum",
     values: [ {
      name: "auto",
      desc: "The property contributes nothing to the grid item’s placement, indicating auto-placement, an automatic span, or a default span of one."
     }, {
      name: "span"
     } ],
     syntax: "<grid-line>"
    }, {
     name: "grid-gap",
     desc: "Shorthand that specifies the gutters between grid columns and grid rows in one declaration.",
     browsers: "FF52,C57,S10.1,O44",
     restriction: "length",
     status: "o",
     syntax: "<'grid-row-gap'> <'grid-column-gap'>?"
    }, {
     name: "grid-row",
     desc: "Shorthand for 'grid-row-start' and 'grid-row-end'.",
     browsers: "FF52,C57,S10.1,O44",
     restriction: "identifier, integer, enum",
     values: [ {
      name: "auto",
      desc: "The property contributes nothing to the grid item’s placement, indicating auto-placement, an automatic span, or a default span of one."
     }, {
      name: "span"
     } ],
     syntax: "<grid-line> [ / <grid-line> ]?"
    }, {
     name: "grid-row-end",
     desc: "Determine a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement.",
     browsers: "FF52,C57,S10.1,O44",
     restriction: "identifier, integer, enum",
     values: [ {
      name: "auto",
      desc: "The property contributes nothing to the grid item’s placement, indicating auto-placement, an automatic span, or a default span of one."
     }, {
      name: "span"
     } ],
     syntax: "<grid-line>"
    }, {
     name: "grid-row-gap",
     desc: "Specifies the gutters between grid rows.",
     browsers: "FF52,C57,S10.1,O44",
     restriction: "length",
     status: "o",
     syntax: "<length-percentage>"
    }, {
     name: "grid-row-start",
     desc: "Determine a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement.",
     browsers: "FF52,C57,S10.1,O44",
     restriction: "identifier, integer, enum",
     values: [ {
      name: "auto",
      desc: "The property contributes nothing to the grid item’s placement, indicating auto-placement, an automatic span, or a default span of one."
     }, {
      name: "span"
     } ],
     syntax: "<grid-line>"
    }, {
     name: "grid-template",
     desc: "Shorthand for setting grid-template-columns, grid-template-rows, and grid-template-areas in a single declaration.",
     browsers: "FF52,C57,S10.1,O44",
     restriction: "identifier, length, percentage, string, enum",
     values: [ {
      name: "none",
      desc: "Sets all three properties to their initial values."
     }, {
      name: "min-content",
      desc: "Represents the largest min-content contribution of the grid items occupying the grid track."
     }, {
      name: "max-content",
      desc: "Represents the largest max-content contribution of the grid items occupying the grid track."
     }, {
      name: "auto",
      desc: "As a maximum, identical to 'max-content'. As a minimum, represents the largest minimum size (as specified by min-width/min-height) of the grid items occupying the grid track."
     }, {
      name: "subgrid",
      desc: "Sets 'grid-template-rows' and 'grid-template-columns' to 'subgrid', and 'grid-template-areas' to its initial value."
     }, {
      name: "minmax()"
     }, {
      name: "repeat()",
      desc: "Represents a repeated fragment of the track list, allowing a large number of columns or rows that exhibit a recurring pattern to be written in a more compact form."
     } ],
     syntax: "none | [ <'grid-template-rows'> / <'grid-template-columns'> ] | [ <line-names>? <string> <track-size>? <line-names>? ]+ [ / <explicit-track-list> ]?"
    }, {
     name: "grid-template-areas",
     desc: "Specifies named grid areas, which are not associated with any particular grid item, but can be referenced from the grid-placement properties.",
     browsers: "FF52,C57,S10.1,O44",
     restriction: "string",
     values: [ {
      name: "none",
      desc: "The grid container doesn’t define any named grid areas."
     } ],
     syntax: "none | <string>+"
    }, {
     name: "grid-template-columns",
     desc: "specifies, as a space-separated track list, the line names and track sizing functions of the grid.",
     browsers: "FF52,C57,S10.1,O44",
     restriction: "identifier, length, percentage, enum",
     values: [ {
      name: "none",
      desc: "There is no explicit grid; any rows/columns will be implicitly generated."
     }, {
      name: "min-content",
      desc: "Represents the largest min-content contribution of the grid items occupying the grid track."
     }, {
      name: "max-content",
      desc: "Represents the largest max-content contribution of the grid items occupying the grid track."
     }, {
      name: "auto",
      desc: "As a maximum, identical to 'max-content'. As a minimum, represents the largest minimum size (as specified by min-width/min-height) of the grid items occupying the grid track."
     }, {
      name: "subgrid",
      desc: "Indicates that the grid will align to its parent grid in that axis."
     }, {
      name: "minmax()"
     }, {
      name: "repeat()",
      desc: "Represents a repeated fragment of the track list, allowing a large number of columns or rows that exhibit a recurring pattern to be written in a more compact form."
     } ],
     syntax: "none | <track-list> | <auto-track-list>"
    }, {
     name: "grid-template-rows",
     desc: "specifies, as a space-separated track list, the line names and track sizing functions of the grid.",
     browsers: "FF52,C57,S10.1,O44",
     restriction: "identifier, length, percentage, string, enum",
     values: [ {
      name: "none",
      desc: "There is no explicit grid; any rows/columns will be implicitly generated."
     }, {
      name: "min-content",
      desc: "Represents the largest min-content contribution of the grid items occupying the grid track."
     }, {
      name: "max-content",
      desc: "Represents the largest max-content contribution of the grid items occupying the grid track."
     }, {
      name: "auto",
      desc: "As a maximum, identical to 'max-content'. As a minimum, represents the largest minimum size (as specified by min-width/min-height) of the grid items occupying the grid track."
     }, {
      name: "subgrid",
      desc: "Indicates that the grid will align to its parent grid in that axis."
     }, {
      name: "minmax()"
     }, {
      name: "repeat()",
      desc: "Represents a repeated fragment of the track list, allowing a large number of columns or rows that exhibit a recurring pattern to be written in a more compact form."
     } ],
     syntax: "none | <track-list> | <auto-track-list>"
    }, {
     name: "height",
     desc: "Specifies the height of the content area, padding area or border area (depending on 'box-sizing') of certain boxes.",
     restriction: "length, percentage",
     values: [ {
      name: "auto",
      desc: "The height depends on the values of other properties."
     }, {
      name: "fit-content",
      browsers: "C46,O33"
     }, {
      name: "max-content",
      desc: "Use the max-content inline size or max-content block size, as appropriate to the writing mode.",
      browsers: "C46,O33"
     }, {
      name: "min-content",
      desc: "Use the min-content inline size or min-content block size, as appropriate to the writing mode.",
      browsers: "C46,O33"
     } ],
     syntax: "<viewport-length>{1,2}"
    }, {
     name: "hyphens",
     desc: "Controls whether hyphenation is allowed to create more break opportunities within a line of text.",
     browsers: "C55,FF43,O44",
     restriction: "enum",
     values: [ {
      name: "auto",
      desc: "Conditional hyphenation characters inside a word, if present, take priority over automatic resources when determining hyphenation points within the word."
     }, {
      name: "manual"
     }, {
      name: "none",
      desc: "Words are not broken at line breaks, even if characters inside the word suggest line break points."
     } ],
     syntax: "none | manual | auto"
    }, {
     name: "image-orientation",
     desc: "Specifies an orthogonal rotation to be applied to an image before it is laid out.",
     browsers: "FF26",
     restriction: "angle",
     values: [ {
      name: "flip"
     }, {
      name: "from-image"
     } ],
     syntax: "from-image | <angle> | [ <angle>? flip ]"
    }, {
     name: "image-rendering",
     desc: "Provides a hint to the user-agent about what aspects of an image are most important to preserve when the image is scaled, to aid the user-agent in the choice of an appropriate scaling algorithm.",
     browsers: "C,FF3.6,O11.6,S",
     restriction: "enum",
     values: [ {
      name: "auto",
      desc: "The image should be scaled with an algorithm that maximizes the appearance of the image."
     }, {
      name: "crisp-edges"
     }, {
      name: "-moz-crisp-edges",
      browsers: "FF"
     }, {
      name: "optimizeQuality"
     }, {
      name: "optimizeSpeed",
      desc: "Deprecated."
     }, {
      name: "pixelated"
     } ],
     syntax: "auto | crisp-edges | pixelated"
    }, {
     name: "ime-mode",
     desc: "Controls the state of the input method editor for text fields.",
     browsers: "E,FF3,IE5",
     restriction: "enum",
     values: [ {
      name: "active"
     }, {
      name: "auto",
      desc: "No change is made to the current input method editor state. This is the default."
     }, {
      name: "disabled"
     }, {
      name: "inactive"
     }, {
      name: "normal",
      desc: "The IME state should be normal; this value can be used in a user style sheet to override the page setting."
     } ],
     status: "o",
     syntax: "auto | normal | active | inactive | disabled"
    }, {
     name: "inline-size",
     desc: "Logical 'height'. Mapping depends on the element’s 'writing-mode'.",
     browsers: "FF41",
     restriction: "length, percentage",
     values: [ {
      name: "auto",
      desc: "Depends on the values of other properties."
     } ],
     syntax: "<'width'>"
    }, {
     name: "isolation",
     desc: "In CSS setting to 'isolate' will turn the element into a stacking context. In SVG, it defines whether an element is isolated or not.",
     browsers: "C,FF,O,S",
     restriction: "enum",
     values: [ {
      name: "auto",
      desc: "Elements are not isolated unless an operation is applied that causes the creation of a stacking context."
     }, {
      name: "isolate",
      desc: "In CSS will turn the element into a stacking context."
     } ],
     syntax: "auto | isolate"
    }, {
     name: "justify-content",
     desc: "Aligns flex items along the main axis of the current line of the flex container.",
     browsers: "E,C29,FF22,IE11,O12.1,S9",
     restriction: "enum",
     values: [ {
      name: "center",
      desc: "Flex items are packed toward the center of the line."
     }, {
      name: "start",
      desc: "The items are packed flush to each other toward the start edge of the alignment container in the main axis."
     }, {
      name: "end",
      desc: "The items are packed flush to each other toward the end edge of the alignment container in the main axis."
     }, {
      name: "left",
      desc: "The items are packed flush to each other toward the left edge of the alignment container in the main axis."
     }, {
      name: "right",
      desc: "The items are packed flush to each other toward the right edge of the alignment container in the main axis."
     }, {
      name: "safe"
     }, {
      name: "unsafe"
     }, {
      name: "stretch",
      desc: "If the combined size of the alignment subjects is less than the size of the alignment container, any auto-sized alignment subjects have their size increased equally (not proportionally), while still respecting the constraints imposed by max-height/max-width (or equivalent functionality), so that the combined size exactly fills the alignment container."
     }, {
      name: "space-evenly"
     }, {
      name: "flex-end",
      desc: "Flex items are packed toward the end of the line."
     }, {
      name: "flex-start",
      desc: "Flex items are packed toward the start of the line."
     }, {
      name: "space-around",
      desc: "Flex items are evenly distributed in the line, with half-size spaces on either end."
     }, {
      name: "space-between",
      desc: "Flex items are evenly distributed in the line."
     }, {
      name: "baseline",
      desc: "Specifies participation in first-baseline alignment."
     }, {
      name: "first baseline",
      desc: "Specifies participation in first-baseline alignment."
     }, {
      name: "last baseline",
      desc: "Specifies participation in last-baseline alignment."
     } ],
     syntax: "normal | <content-distribution> | <overflow-position>? [ <content-position> | left | right ]"
    }, {
     name: "kerning",
     desc: "Indicates whether the user agent should adjust inter-glyph spacing based on kerning tables that are included in the relevant font or instead disable auto-kerning and set inter-character spacing to a specific length.",
     restriction: "length, enum",
     values: [ {
      name: "auto",
      desc: "Indicates that the user agent should adjust inter-glyph spacing based on kerning tables that are included in the font that will be used."
     } ]
    }, {
     name: "left",
     desc: "Specifies how far an absolutely positioned box's left margin edge is offset to the right of the left edge of the box's 'containing block'.",
     restriction: "length, percentage",
     values: [ {
      name: "auto",
      desc: "For non-replaced elements, the effect of this value depends on which of related properties have the value 'auto' as well"
     } ],
     syntax: "<length> | <percentage> | auto"
    }, {
     name: "letter-spacing",
     desc: "Specifies the minimum, maximum, and optimal spacing between grapheme clusters.",
     restriction: "length",
     values: [ {
      name: "normal",
      desc: "The spacing is the normal spacing for the current font. It is typically zero-length."
     } ],
     syntax: "normal | <length>"
    }, {
     name: "lighting-color",
     desc: "Defines the color of the light source for filter primitives 'feDiffuseLighting' and 'feSpecularLighting'.",
     browsers: "E,C5,FF3,IE10,O9,S6",
     restriction: "color"
    }, {
     name: "line-break",
     desc: "Specifies what set of line breaking restrictions are in effect within the element.",
     browsers: "E,IE5.5,C58,O45,S",
     restriction: "enum",
     values: [ {
      name: "auto",
      desc: "The UA determines the set of line-breaking restrictions to use for CJK scripts, and it may vary the restrictions based on the length of the line; e.g., use a less restrictive set of line-break rules for short lines."
     }, {
      name: "loose",
      desc: "Breaks text using the least restrictive set of line-breaking rules. Typically used for short lines, such as in newspapers."
     }, {
      name: "normal",
      desc: "Breaks text using the most common set of line-breaking rules."
     }, {
      name: "strict",
      desc: "Breaks CJK scripts using a more restrictive set of line-breaking rules than 'normal'."
     } ],
     syntax: "auto | loose | normal | strict"
    }, {
     name: "line-height",
     desc: "Determines the block-progression dimension of the text content area of an inline box.",
     restriction: "number, length, percentage",
     values: [ {
      name: "normal",
      desc: "Tells user agents to set the computed value to a 'reasonable' value based on the font size of the element."
     } ],
     syntax: "normal | <number> | <length> | <percentage>"
    }, {
     name: "list-style",
     desc: "Shorthand for setting 'list-style-type', 'list-style-position' and 'list-style-image'",
     restriction: "image, enum, url",
     values: [ {
      name: "armenian"
     }, {
      name: "circle"
     }, {
      name: "decimal"
     }, {
      name: "decimal-leading-zero"
     }, {
      name: "disc"
     }, {
      name: "georgian"
     }, {
      name: "inside"
     }, {
      name: "lower-alpha"
     }, {
      name: "lower-greek"
     }, {
      name: "lower-latin"
     }, {
      name: "lower-roman"
     }, {
      name: "none"
     }, {
      name: "outside"
     }, {
      name: "square",
      desc: "A filled square."
     }, {
      name: "symbols()",
      browsers: "FF35"
     }, {
      name: "upper-alpha"
     }, {
      name: "upper-latin"
     }, {
      name: "upper-roman"
     }, {
      name: "url()"
     } ],
     syntax: "<'list-style-type'> || <'list-style-position'> || <'list-style-image'>"
    }, {
     name: "list-style-image",
     desc: "Sets the image that will be used as the list item marker. When the image is available, it will replace the marker set with the 'list-style-type' marker.",
     restriction: "image",
     values: [ {
      name: "none",
      desc: "The default contents of the of the list item’s marker are given by 'list-style-type' instead."
     } ],
     syntax: "<url> | none"
    }, {
     name: "list-style-position",
     desc: "Specifies the position of the '::marker' pseudo-element's box in the list item.",
     restriction: "enum",
     values: [ {
      name: "inside"
     }, {
      name: "outside"
     } ],
     syntax: "inside | outside"
    }, {
     name: "list-style-type",
     desc: "Used to construct the default contents of a list item’s marker",
     restriction: "enum, string",
     values: [ {
      name: "armenian",
      desc: "Traditional uppercase Armenian numbering."
     }, {
      name: "circle"
     }, {
      name: "decimal",
      desc: "Western decimal numbers."
     }, {
      name: "decimal-leading-zero",
      desc: "Decimal numbers padded by initial zeros."
     }, {
      name: "disc"
     }, {
      name: "georgian",
      desc: "Traditional Georgian numbering."
     }, {
      name: "lower-alpha",
      desc: "Lowercase ASCII letters."
     }, {
      name: "lower-greek",
      desc: "Lowercase classical Greek."
     }, {
      name: "lower-latin",
      desc: "Lowercase ASCII letters."
     }, {
      name: "lower-roman",
      desc: "Lowercase ASCII Roman numerals."
     }, {
      name: "none",
      desc: "No marker"
     }, {
      name: "square",
      desc: "A filled square."
     }, {
      name: "symbols()",
      browsers: "FF35"
     }, {
      name: "upper-alpha",
      desc: "Uppercase ASCII letters."
     }, {
      name: "upper-latin",
      desc: "Uppercase ASCII letters."
     }, {
      name: "upper-roman",
      desc: "Uppercase ASCII Roman numerals."
     } ],
     syntax: "<counter-style> | <string> | none"
    }, {
     name: "margin",
     desc: "Shorthand property to set values the thickness of the margin area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. Negative values for margin properties are allowed, but there may be implementation-specific limits.",
     restriction: "length, percentage",
     values: [ {
      name: "auto"
     } ],
     syntax: "[ <length> | <percentage> | auto ]{1,4}"
    }, {
     name: "margin-block-end",
     desc: "Logical 'margin-bottom'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.",
     browsers: "FF41",
     restriction: "length, percentage",
     values: [ {
      name: "auto"
     } ],
     syntax: "<'margin-left'>"
    }, {
     name: "margin-block-start",
     desc: "Logical 'margin-top'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.",
     browsers: "FF41",
     restriction: "length, percentage",
     values: [ {
      name: "auto"
     } ],
     syntax: "<'margin-left'>"
    }, {
     name: "margin-bottom",
     desc: "Shorthand property to set values the thickness of the margin area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. Negative values for margin properties are allowed, but there may be implementation-specific limits..",
     restriction: "length, percentage",
     values: [ {
      name: "auto"
     } ],
     syntax: "<length> | <percentage> | auto"
    }, {
     name: "margin-inline-end",
     desc: "Logical 'margin-right'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.",
     browsers: "FF41",
     restriction: "length, percentage",
     values: [ {
      name: "auto"
     } ],
     syntax: "<'margin-left'>"
    }, {
     name: "margin-inline-start",
     desc: "Logical 'margin-left'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.",
     browsers: "FF41",
     restriction: "length, percentage",
     values: [ {
      name: "auto"
     } ],
     syntax: "<'margin-left'>"
    }, {
     name: "margin-left",
     desc: "Shorthand property to set values the thickness of the margin area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. Negative values for margin properties are allowed, but there may be implementation-specific limits..",
     restriction: "length, percentage",
     values: [ {
      name: "auto"
     } ],
     syntax: "<length> | <percentage> | auto"
    }, {
     name: "margin-right",
     desc: "Shorthand property to set values the thickness of the margin area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. Negative values for margin properties are allowed, but there may be implementation-specific limits..",
     restriction: "length, percentage",
     values: [ {
      name: "auto"
     } ],
     syntax: "<length> | <percentage> | auto"
    }, {
     name: "margin-top",
     desc: "Shorthand property to set values the thickness of the margin area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. Negative values for margin properties are allowed, but there may be implementation-specific limits..",
     restriction: "length, percentage",
     values: [ {
      name: "auto"
     } ],
     syntax: "<length> | <percentage> | auto"
    }, {
     name: "marker",
     desc: "Specifies the marker symbol that shall be used for all points on the sets the value for all vertices on the given ‘path’ element or basic shape.",
     restriction: "url",
     values: [ {
      name: "none",
      desc: "Indicates that no marker symbol will be drawn at the given vertex or vertices."
     }, {
      name: "url()",
      desc: "Indicates that the <marker> element referenced will be used."
     } ]
    }, {
     name: "marker-end",
     desc: "Specifies the marker that will be drawn at the last vertices of the given markable element.",
     restriction: "url",
     values: [ {
      name: "none",
      desc: "Indicates that no marker symbol will be drawn at the given vertex or vertices."
     }, {
      name: "url()",
      desc: "Indicates that the <marker> element referenced will be used."
     } ]
    }, {
     name: "marker-mid",
     desc: "Specifies the marker that will be drawn at all vertices except the first and last.",
     restriction: "url",
     values: [ {
      name: "none",
      desc: "Indicates that no marker symbol will be drawn at the given vertex or vertices."
     }, {
      name: "url()",
      desc: "Indicates that the <marker> element referenced will be used."
     } ]
    }, {
     name: "marker-start",
     desc: "Specifies the marker that will be drawn at the first vertices of the given markable element.",
     restriction: "url",
     values: [ {
      name: "none",
      desc: "Indicates that no marker symbol will be drawn at the given vertex or vertices."
     }, {
      name: "url()",
      desc: "Indicates that the <marker> element referenced will be used."
     } ]
    }, {
     name: "mask-image",
     desc: "Sets the mask layer image of an element.",
     browsers: "E,FF53",
     restriction: "url, image, enum",
     values: [ {
      name: "none",
      desc: "Counts as a transparent black image layer."
     }, {
      name: "url()",
      desc: "Reference to a <mask element or to a CSS image."
     } ],
     syntax: "<mask-reference>#"
    }, {
     name: "mask-mode",
     desc: "Indicates whether the mask layer image is treated as luminance mask or alpha mask.",
     browsers: "FF53",
     restriction: "url, image, enum",
     values: [ {
      name: "alpha",
      desc: "Alpha values of the mask layer image should be used as the mask values."
     }, {
      name: "auto",
      desc: "Use alpha values if 'mask-image' is an image, luminance if a <mask> element or a CSS image."
     }, {
      name: "luminance",
      desc: "Luminance values of the mask layer image should be used as the mask values."
     } ],
     syntax: "<masking-mode>#"
    }, {
     name: "mask-origin",
     desc: "Specifies the mask positioning area.",
     browsers: "FF53",
     restriction: "geometry-box, enum",
     syntax: "<geometry-box>#"
    }, {
     name: "mask-position",
     desc: "Specifies how mask layer images are positioned.",
     browsers: "FF53",
     restriction: "position, length, percentage",
     syntax: "<position>#"
    }, {
     name: "mask-repeat",
     desc: "Specifies how mask layer images are tiled after they have been sized and positioned.",
     browsers: "FF53",
     restriction: "repeat",
     syntax: "<repeat-style>#"
    }, {
     name: "mask-size",
     desc: "Specifies the size of the mask layer images.",
     browsers: "F53",
     restriction: "length, percentage, enum",
     values: [ {
      name: "auto",
      desc: "Resolved by using the image’s intrinsic ratio and the size of the other dimension, or failing that, using the image’s intrinsic size, or failing that, treating it as 100%."
     }, {
      name: "contain",
      desc: "Scale the image, while preserving its intrinsic aspect ratio (if any), to the largest size such that both its width and its height can fit inside the background positioning area."
     }, {
      name: "cover",
      desc: "Scale the image, while preserving its intrinsic aspect ratio (if any), to the smallest size such that both its width and its height can completely cover the background positioning area."
     } ],
     syntax: "<bg-size>#"
    }, {
     name: "mask-type",
     desc: "Defines whether the content of the <mask> element is treated as as luminance mask or alpha mask.",
     browsers: "C24,FF35,O15,S7",
     restriction: "enum",
     values: [ {
      name: "alpha",
      desc: "Indicates that the alpha values of the mask should be used."
     }, {
      name: "luminance",
      desc: "Indicates that the luminance values of the mask should be used."
     } ],
     syntax: "luminance | alpha"
    }, {
     name: "max-block-size",
     desc: "Logical 'max-width'. Mapping depends on the element’s 'writing-mode'.",
     browsers: "FF41",
     restriction: "length, percentage",
     values: [ {
      name: "none",
      desc: "No limit on the width of the box."
     } ],
     status: "e",
     syntax: "<'max-width'>"
    }, {
     name: "max-height",
     desc: "Allows authors to constrain content height to a certain range.",
     browsers: "E,C,FF1,IE7,O7,S1",
     restriction: "length, percentage",
     values: [ {
      name: "none",
      desc: "No limit on the height of the box."
     }, {
      name: "fit-content",
      browsers: "C46,O33"
     }, {
      name: "max-content",
      desc: "Use the max-content inline size or max-content block size, as appropriate to the writing mode.",
      browsers: "C46,O33"
     }, {
      name: "min-content",
      desc: "Use the min-content inline size or min-content block size, as appropriate to the writing mode.",
      browsers: "C46,O33"
     } ],
     syntax: "<viewport-length>"
    }, {
     name: "max-inline-size",
     desc: "Logical 'max-height'. Mapping depends on the element’s 'writing-mode'.",
     browsers: "FF41",
     restriction: "length, percentage",
     values: [ {
      name: "none",
      desc: "No limit on the height of the box."
     } ],
     status: "e",
     syntax: "<'max-width'>"
    }, {
     name: "max-width",
     desc: "Allows authors to constrain content width to a certain range.",
     browsers: "E,C,FF1,IE7,O7,S1",
     restriction: "length, percentage",
     values: [ {
      name: "none",
      desc: "No limit on the width of the box."
     }, {
      name: "fit-content",
      browsers: "C46,O33"
     }, {
      name: "max-content",
      desc: "Use the max-content inline size or max-content block size, as appropriate to the writing mode.",
      browsers: "C46,O33"
     }, {
      name: "min-content",
      desc: "Use the min-content inline size or min-content block size, as appropriate to the writing mode.",
      browsers: "C46,O33"
     } ],
     syntax: "<viewport-length>"
    }, {
     name: "min-block-size",
     desc: "Logical 'min-width'. Mapping depends on the element’s 'writing-mode'.",
     browsers: "FF41",
     restriction: "length, percentage",
     syntax: "<'min-width'>"
    }, {
     name: "min-height",
     desc: "Allows authors to constrain content height to a certain range.",
     browsers: "E,C,FF1,IE7,O7,S1",
     restriction: "length, percentage",
     values: [ {
      name: "auto",
      browsers: "E,IE11"
     }, {
      name: "fit-content",
      browsers: "C46,O33"
     }, {
      name: "max-content",
      desc: "Use the max-content inline size or max-content block size, as appropriate to the writing mode.",
      browsers: "C46,O33"
     }, {
      name: "min-content",
      desc: "Use the min-content inline size or min-content block size, as appropriate to the writing mode.",
      browsers: "C46,O33"
     } ],
     syntax: "<viewport-length>"
    }, {
     name: "min-inline-size",
     desc: "Logical 'min-height'. Mapping depends on the element’s 'writing-mode'.",
     browsers: "FF41",
     restriction: "length, percentage",
     syntax: "<'min-width'>"
    }, {
     name: "min-width",
     desc: "Allows authors to constrain content width to a certain range.",
     browsers: "E,C,FF1,IE7,O7,S1",
     restriction: "length, percentage",
     values: [ {
      name: "auto",
      browsers: "E,IE11"
     }, {
      name: "fit-content",
      browsers: "C46,O33"
     }, {
      name: "max-content",
      desc: "Use the max-content inline size or max-content block size, as appropriate to the writing mode.",
      browsers: "C46,O33"
     }, {
      name: "min-content",
      desc: "Use the min-content inline size or min-content block size, as appropriate to the writing mode.",
      browsers: "C46,O33"
     } ],
     syntax: "<viewport-length>"
    }, {
     name: "mix-blend-mode",
     desc: "Defines the formula that must be used to mix the colors with the backdrop.",
     browsers: "C41,FF32,O29,S7.1",
     restriction: "enum",
     values: [ {
      name: "normal",
      desc: "Default attribute which specifies no blending"
     }, {
      name: "multiply"
     }, {
      name: "screen"
     }, {
      name: "overlay"
     }, {
      name: "darken"
     }, {
      name: "lighten"
     }, {
      name: "color-dodge"
     }, {
      name: "color-burn"
     }, {
      name: "hard-light"
     }, {
      name: "soft-light"
     }, {
      name: "difference"
     }, {
      name: "exclusion"
     }, {
      name: "hue",
      browsers: "C41,FF32,O29"
     }, {
      name: "saturation",
      browsers: "C41,FF32,O29"
     }, {
      name: "color",
      browsers: "C41,FF32,O29"
     }, {
      name: "luminosity",
      browsers: "C41,FF32,O29"
     } ],
     syntax: "<blend-mode>"
    }, {
     name: "motion",
     desc: "Shorthand property for setting 'motion-path', 'motion-offset' and 'motion-rotation'.",
     browsers: "C46,O33",
     restriction: "url, length, percentage, angle, shape, geometry-box, enum",
     values: [ {
      name: "none",
      desc: "No motion path gets created."
     }, {
      name: "path()"
     }, {
      name: "auto",
      desc: "Indicates that the object is rotated by the angle of the direction of the motion path."
     }, {
      name: "reverse",
      desc: "Indicates that the object is rotated by the angle of the direction of the motion path plus 180 degrees."
     } ]
    }, {
     name: "motion-offset",
     desc: "A distance that describes the position along the specified motion path.",
     browsers: "C46,O33",
     restriction: "length, percentage"
    }, {
     name: "motion-path",
     desc: "Specifies the motion path the element gets positioned at.",
     browsers: "C46,O33",
     restriction: "url, shape, geometry-box, enum",
     values: [ {
      name: "none",
      desc: "No motion path gets created."
     }, {
      name: "path()"
     } ]
    }, {
     name: "motion-rotation",
     desc: "Defines the direction of the element while positioning along the motion path.",
     browsers: "C46,O33",
     restriction: "angle",
     values: [ {
      name: "auto",
      desc: "Indicates that the object is rotated by the angle of the direction of the motion path."
     }, {
      name: "reverse",
      desc: "Indicates that the object is rotated by the angle of the direction of the motion path plus 180 degrees."
     } ]
    }, {
     name: "-moz-animation",
     desc: "Shorthand property combines six of the animation properties into a single property.",
     browsers: "FF9",
     restriction: "time, enum, timing-function, identifier, number",
     values: [ {
      name: "alternate"
     }, {
      name: "alternate-reverse"
     }, {
      name: "backwards"
     }, {
      name: "both",
      desc: "Both forwards and backwards fill modes are applied."
     }, {
      name: "forwards"
     }, {
      name: "infinite",
      desc: "Causes the animation to repeat forever."
     }, {
      name: "none",
      desc: "No animation is performed"
     }, {
      name: "normal",
      desc: "Normal playback."
     }, {
      name: "reverse",
      desc: "All iterations of the animation are played in the reverse direction from the way they were specified."
     } ]
    }, {
     name: "-moz-animation-delay",
     desc: "Defines when the animation will start.",
     browsers: "FF9",
     restriction: "time"
    }, {
     name: "-moz-animation-direction",
     desc: "Defines whether or not the animation should play in reverse on alternate cycles.",
     browsers: "FF9",
     restriction: "enum",
     values: [ {
      name: "alternate"
     }, {
      name: "alternate-reverse"
     }, {
      name: "normal",
      desc: "Normal playback."
     }, {
      name: "reverse",
      desc: "All iterations of the animation are played in the reverse direction from the way they were specified."
     } ]
    }, {
     name: "-moz-animation-duration",
     desc: "Defines the length of time that an animation takes to complete one cycle.",
     browsers: "FF9",
     restriction: "time"
    }, {
     name: "-moz-animation-iteration-count",
     desc: "Defines the number of times an animation cycle is played. The default value is one, meaning the animation will play from beginning to end once.",
     browsers: "FF9",
     restriction: "number, enum",
     values: [ {
      name: "infinite",
      desc: "Causes the animation to repeat forever."
     } ]
    }, {
     name: "-moz-animation-name",
     desc: "Defines a list of animations that apply. Each name is used to select the keyframe at-rule that provides the property values for the animation.",
     browsers: "FF9",
     restriction: "identifier, enum",
     values: [ {
      name: "none",
      desc: "No animation is performed"
     } ]
    }, {
     name: "-moz-animation-play-state",
     desc: "Defines whether the animation is running or paused.",
     browsers: "FF9",
     restriction: "enum",
     values: [ {
      name: "paused"
     }, {
      name: "running"
     } ]
    }, {
     name: "-moz-animation-timing-function",
     desc: "Describes how the animation will progress over one cycle of its duration. See the 'transition-timing-function'.",
     browsers: "FF9",
     restriction: "timing-function"
    }, {
     name: "-moz-appearance",
     desc: "Used in Gecko (Firefox) to display an element using a platform-native styling based on the operating system's theme.",
     browsers: "FF1",
     restriction: "enum",
     values: [ {
      name: "button"
     }, {
      name: "button-arrow-down"
     }, {
      name: "button-arrow-next"
     }, {
      name: "button-arrow-previous"
     }, {
      name: "button-arrow-up"
     }, {
      name: "button-bevel"
     }, {
      name: "checkbox"
     }, {
      name: "checkbox-container"
     }, {
      name: "checkbox-label"
     }, {
      name: "dialog"
     }, {
      name: "groupbox"
     }, {
      name: "listbox"
     }, {
      name: "menuarrow"
     }, {
      name: "menuimage"
     }, {
      name: "menuitem"
     }, {
      name: "menuitemtext"
     }, {
      name: "menulist"
     }, {
      name: "menulist-button"
     }, {
      name: "menulist-text"
     }, {
      name: "menulist-textfield"
     }, {
      name: "menupopup"
     }, {
      name: "menuradio"
     }, {
      name: "menuseparator"
     }, {
      name: "-moz-mac-unified-toolbar"
     }, {
      name: "-moz-win-borderless-glass"
     }, {
      name: "-moz-win-browsertabbar-toolbox"
     }, {
      name: "-moz-win-communications-toolbox"
     }, {
      name: "-moz-win-glass"
     }, {
      name: "-moz-win-media-toolbox"
     }, {
      name: "none"
     }, {
      name: "progressbar"
     }, {
      name: "progresschunk"
     }, {
      name: "radio"
     }, {
      name: "radio-container"
     }, {
      name: "radio-label"
     }, {
      name: "radiomenuitem"
     }, {
      name: "resizer"
     }, {
      name: "resizerpanel"
     }, {
      name: "scrollbarbutton-down"
     }, {
      name: "scrollbarbutton-left"
     }, {
      name: "scrollbarbutton-right"
     }, {
      name: "scrollbarbutton-up"
     }, {
      name: "scrollbar-small"
     }, {
      name: "scrollbartrack-horizontal"
     }, {
      name: "scrollbartrack-vertical"
     }, {
      name: "separator"
     }, {
      name: "spinner"
     }, {
      name: "spinner-downbutton"
     }, {
      name: "spinner-textfield"
     }, {
      name: "spinner-upbutton"
     }, {
      name: "statusbar"
     }, {
      name: "statusbarpanel"
     }, {
      name: "tab"
     }, {
      name: "tabpanels"
     }, {
      name: "tab-scroll-arrow-back"
     }, {
      name: "tab-scroll-arrow-forward"
     }, {
      name: "textfield"
     }, {
      name: "textfield-multiline"
     }, {
      name: "toolbar"
     }, {
      name: "toolbox"
     }, {
      name: "tooltip"
     }, {
      name: "treeheadercell"
     }, {
      name: "treeheadersortarrow"
     }, {
      name: "treeitem"
     }, {
      name: "treetwistyopen"
     }, {
      name: "treeview"
     }, {
      name: "treewisty"
     }, {
      name: "window"
     } ],
     status: "n",
     syntax: "none | button | button-arrow-down | button-arrow-next | button-arrow-previous | button-arrow-up | button-bevel | button-focus | caret | checkbox | checkbox-container | checkbox-label | checkmenuitem | dualbutton | groupbox | listbox | listitem | menuarrow | menubar | menucheckbox | menuimage | menuitem | menuitemtext | menulist | menulist-button | menulist-text | menulist-textfield | menupopup | menuradio | menuseparator | meterbar | meterchunk | progressbar | progressbar-vertical | progresschunk | progresschunk-vertical | radio | radio-container | radio-label | radiomenuitem | range | range-thumb | resizer | resizerpanel | scale-horizontal | scalethumbend | scalethumb-horizontal | scalethumbstart | scalethumbtick | scalethumb-vertical | scale-vertical | scrollbarbutton-down | scrollbarbutton-left | scrollbarbutton-right | scrollbarbutton-up | scrollbarthumb-horizontal | scrollbarthumb-vertical | scrollbartrack-horizontal | scrollbartrack-vertical | searchfield | separator | sheet | spinner | spinner-downbutton | spinner-textfield | spinner-upbutton | splitter | statusbar | statusbarpanel | tab | tabpanel | tabpanels | tab-scroll-arrow-back | tab-scroll-arrow-forward | textfield | textfield-multiline | toolbar | toolbarbutton | toolbarbutton-dropdown | toolbargripper | toolbox | tooltip | treeheader | treeheadercell | treeheadersortarrow | treeitem | treeline | treetwisty | treetwistyopen | treeview | -moz-mac-unified-toolbar | -moz-win-borderless-glass | -moz-win-browsertabbar-toolbox | -moz-win-communicationstext | -moz-win-communications-toolbox | -moz-win-exclude-glass | -moz-win-glass | -moz-win-mediatext | -moz-win-media-toolbox | -moz-window-button-box | -moz-window-button-box-maximized | -moz-window-button-close | -moz-window-button-maximize | -moz-window-button-minimize | -moz-window-button-restore | -moz-window-frame-bottom | -moz-window-frame-left | -moz-window-frame-right | -moz-window-titlebar | -moz-window-titlebar-maximized"
    }, {
     name: "-moz-backface-visibility",
     desc: "Determines whether or not the 'back' side of a transformed element is visible when facing the viewer. With an identity transform, the front side of an element faces the viewer.",
     browsers: "FF10",
     restriction: "enum",
     values: [ {
      name: "hidden"
     }, {
      name: "visible"
     } ]
    }, {
     name: "-moz-background-clip",
     desc: "Determines the background painting area.",
     browsers: "FF1-3.6",
     restriction: "box, enum",
     values: [ {
      name: "padding"
     } ]
    }, {
     name: "-moz-background-inline-policy",
     desc: "In Gecko-based applications like Firefox, the -moz-background-inline-policy CSS property specifies how the background image of an inline element is determined when the content of the inline element wraps onto multiple lines. The choice of position has significant effects on repetition.",
     browsers: "FF1",
     restriction: "enum",
     values: [ {
      name: "bounding-box"
     }, {
      name: "continuous"
     }, {
      name: "each-box"
     } ]
    }, {
     name: "-moz-background-origin",
     desc: "For elements rendered as a single box, specifies the background positioning area. For elements rendered as multiple boxes (e.g., inline boxes on several lines, boxes on several pages) specifies which boxes 'box-decoration-break' operates on to determine the background positioning area(s).",
     browsers: "FF1",
     restriction: "box"
    }, {
     name: "-moz-border-bottom-colors",
     desc: "Sets a list of colors for the bottom border.",
     browsers: "FF1",
     restriction: "color",
     status: "n",
     syntax: "[ <color> ]* <color> | none"
    }, {
     name: "-moz-border-image",
     desc: "Shorthand property for setting 'border-image-source', 'border-image-slice', 'border-image-width', 'border-image-outset' and 'border-image-repeat'. Omitted values are set to their initial values.",
     browsers: "FF3.6",
     restriction: "length, percentage, number, url, enum",
     values: [ {
      name: "auto",
      desc: "If 'auto' is specified then the border image width is the intrinsic width or height (whichever is applicable) of the corresponding image slice. If the image does not have the required intrinsic dimension then the corresponding border-width is used instead."
     }, {
      name: "fill",
      desc: "Causes the middle part of the border-image to be preserved."
     }, {
      name: "none"
     }, {
      name: "repeat"
     }, {
      name: "round",
      desc: "The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the image is rescaled so that it does."
     }, {
      name: "space",
      desc: "The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the extra space is distributed around the tiles."
     }, {
      name: "stretch",
      desc: "The image is stretched to fill the area."
     }, {
      name: "url()"
     } ]
    }, {
     name: "-moz-border-left-colors",
     desc: "Sets a list of colors for the bottom border.",
     browsers: "FF1",
     restriction: "color",
     status: "n",
     syntax: "[ <color> ]* <color> | none"
    }, {
     name: "-moz-border-right-colors",
     desc: "Sets a list of colors for the bottom border.",
     browsers: "FF1",
     restriction: "color",
     status: "n",
     syntax: "[ <color> ]* <color> | none"
    }, {
     name: "-moz-border-top-colors",
     desc: "Ske Firefox, -moz-border-bottom-colors sets a list of colors for the bottom border.",
     browsers: "FF1",
     restriction: "color",
     status: "n",
     syntax: "[ <color> ]* <color> | none"
    }, {
     name: "-moz-box-align",
     desc: "Specifies how a XUL box aligns its contents across (perpendicular to) the direction of its layout. The effect of this is only visible if there is extra space in the box.",
     browsers: "FF1",
     restriction: "enum",
     values: [ {
      name: "baseline",
      desc: "If this box orientation is inline-axis or horizontal, all children are placed with their baselines aligned, and extra space placed before or after as necessary. For block flows, the baseline of the first non-empty line box located within the element is used. For tables, the baseline of the first cell is used."
     }, {
      name: "center",
      desc: "Any extra space is divided evenly, with half placed above the child and the other half placed after the child."
     }, {
      name: "end",
      desc: "For normal direction boxes, the bottom edge of each child is placed along the bottom of the box. Extra space is placed above the element. For reverse direction boxes, the top edge of each child is placed along the top of the box. Extra space is placed below the element."
     }, {
      name: "start",
      desc: "For normal direction boxes, the top edge of each child is placed along the top of the box. Extra space is placed below the element. For reverse direction boxes, the bottom edge of each child is placed along the bottom of the box. Extra space is placed above the element."
     }, {
      name: "stretch",
      desc: "The height of each child is adjusted to that of the containing block."
     } ]
    }, {
     name: "-moz-box-direction",
     desc: "Specifies whether a box lays out its contents normally (from the top or left edge), or in reverse (from the bottom or right edge).",
     browsers: "FF1",
     restriction: "enum",
     values: [ {
      name: "normal",
      desc: "A box with a computed value of horizontal for box-orient displays its children from left to right. A box with a computed value of vertical displays its children from top to bottom."
     }, {
      name: "reverse",
      desc: "A box with a computed value of horizontal for box-orient displays its children from right to left. A box with a computed value of vertical displays its children from bottom to top."
     } ]
    }, {
     name: "-moz-box-flex",
     desc: "Specifies how a box grows to fill the box that contains it, in the direction of the containing box's layout.",
     browsers: "FF1",
     restriction: "number"
    }, {
     name: "-moz-box-flexgroup",
     desc: "Flexible elements can be assigned to flex groups using the 'box-flex-group' property.",
     browsers: "FF1",
     restriction: "integer"
    }, {
     name: "-moz-box-ordinal-group",
     desc: "Indicates the ordinal group the element belongs to. Elements with a lower ordinal group are displayed before those with a higher ordinal group.",
     browsers: "FF1",
     restriction: "integer"
    }, {
     name: "-moz-box-orient",
     desc: "In Mozilla applications, -moz-box-orient specifies whether a box lays out its contents horizontally or vertically.",
     browsers: "FF1",
     restriction: "enum",
     values: [ {
      name: "block-axis"
     }, {
      name: "horizontal",
      desc: "The box displays its children from left to right in a horizontal line."
     }, {
      name: "inline-axis"
     }, {
      name: "vertical",
      desc: "The box displays its children from stacked from top to bottom vertically."
     } ]
    }, {
     name: "-moz-box-pack",
     desc: "Specifies how a box packs its contents in the direction of its layout. The effect of this is only visible if there is extra space in the box.",
     browsers: "FF1",
     restriction: "enum",
     values: [ {
      name: "center",
      desc: "The extra space is divided evenly, with half placed before the first child and the other half placed after the last child."
     }, {
      name: "end",
      desc: "For normal direction boxes, the right edge of the last child is placed at the right side, with all extra space placed before the first child. For reverse direction boxes, the left edge of the first child is placed at the left side, with all extra space placed after the last child."
     }, {
      name: "justify",
      desc: "The space is divided evenly in-between each child, with none of the extra space placed before the first child or after the last child. If there is only one child, treat the pack value as if it were start."
     }, {
      name: "start",
      desc: "For normal direction boxes, the left edge of the first child is placed at the left side, with all extra space placed after the last child. For reverse direction boxes, the right edge of the last child is placed at the right side, with all extra space placed before the first child."
     } ]
    }, {
     name: "-moz-box-sizing",
     desc: "Box Model addition in CSS3.",
     browsers: "FF1",
     restriction: "enum",
     values: [ {
      name: "border-box"
     }, {
      name: "content-box"
     }, {
      name: "padding-box"
     } ]
    }, {
     name: "-moz-column-count",
     desc: "Describes the optimal number of columns into which the content of the element will be flowed.",
     browsers: "FF3.5",
     restriction: "integer",
     values: [ {
      name: "auto",
      desc: "Determines the number of columns by the 'column-width' property and the element width."
     } ]
    }, {
     name: "-moz-column-gap",
     desc: "Sets the gap between columns. If there is a column rule between columns, it will appear in the middle of the gap.",
     browsers: "FF3.5",
     restriction: "length",
     values: [ {
      name: "normal",
      desc: "User agent specific and typically equivalent to 1em."
     } ]
    }, {
     name: "-moz-column-rule",
     desc: "Shorthand for setting 'column-rule-width', 'column-rule-style', and 'column-rule-color' at the same place in the style sheet. Omitted values are set to their initial values.",
     browsers: "FF3.5",
     restriction: "length, line-width, line-style, color"
    }, {
     name: "-moz-column-rule-color",
     desc: "Sets the color of the column rule",
     browsers: "FF3.5",
     restriction: "color"
    }, {
     name: "-moz-column-rule-style",
     desc: "Sets the style of the rule between columns of an element.",
     browsers: "FF3.5",
     restriction: "line-style"
    }, {
     name: "-moz-column-rule-width",
     desc: "Sets the width of the rule between columns. Negative values are not allowed.",
     browsers: "FF3.5",
     restriction: "length, line-width"
    }, {
     name: "-moz-columns",
     desc: "A shorthand property which sets both 'column-width' and 'column-count'.",
     browsers: "FF9",
     restriction: "length, integer",
     values: [ {
      name: "auto",
      desc: "The width depends on the values of other properties."
     } ]
    }, {
     name: "-moz-column-width",
     desc: "This property describes the width of columns in multicol elements.",
     browsers: "FF3.5",
     restriction: "length",
     values: [ {
      name: "auto",
      desc: "The width depends on the values of other properties."
     } ]
    }, {
     name: "-moz-font-feature-settings",
     desc: "Provides low-level control over OpenType font features. It is intended as a way of providing access to font features that are not widely used but are needed for a particular use case.",
     browsers: "FF4",
     restriction: "string, integer",
     values: [ {
      name: '"c2cs"'
     }, {
      name: '"dlig"'
     }, {
      name: '"kern"'
     }, {
      name: '"liga"'
     }, {
      name: '"lnum"'
     }, {
      name: '"onum"'
     }, {
      name: '"smcp"'
     }, {
      name: '"swsh"'
     }, {
      name: '"tnum"'
     }, {
      name: "normal",
      desc: "No change in glyph substitution or positioning occurs."
     }, {
      name: "off",
      browsers: "FF15"
     }, {
      name: "on",
      browsers: "FF15"
     } ]
    }, {
     name: "-moz-hyphens",
     desc: "Controls whether hyphenation is allowed to create more break opportunities within a line of text.",
     browsers: "FF9",
     restriction: "enum",
     values: [ {
      name: "auto",
      desc: "Conditional hyphenation characters inside a word, if present, take priority over automatic resources when determining hyphenation points within the word."
     }, {
      name: "manual"
     }, {
      name: "none",
      desc: "Words are not broken at line breaks, even if characters inside the word suggest line break points."
     } ]
    }, {
     name: "-moz-perspective",
     desc: "Applies the same transform as the perspective(<number>) transform function, except that it applies only to the positioned or transformed children of the element, not to the transform on the element itself.",
     browsers: "FF10",
     restriction: "length",
     values: [ {
      name: "none",
      desc: "No perspective transform is applied."
     } ]
    }, {
     name: "-moz-perspective-origin",
     desc: "Establishes the origin for the perspective property. It effectively sets the X and Y position at which the viewer appears to be looking at the children of the element.",
     browsers: "FF10",
     restriction: "position, percentage, length"
    }, {
     name: "-moz-text-align-last",
     desc: "Describes how the last line of a block or a line right before a forced line break is aligned when 'text-align' is set to 'justify'.",
     browsers: "FF12",
     restriction: "enum",
     values: [ {
      name: "auto"
     }, {
      name: "center",
      desc: "The inline contents are centered within the line box."
     }, {
      name: "justify",
      desc: "The text is justified according to the method specified by the 'text-justify' property."
     }, {
      name: "left",
      desc: "The inline contents are aligned to the left edge of the line box. In vertical text, 'left' aligns to the edge of the line box that would be the start edge for left-to-right text."
     }, {
      name: "right",
      desc: "The inline contents are aligned to the right edge of the line box. In vertical text, 'right' aligns to the edge of the line box that would be the end edge for left-to-right text."
     } ]
    }, {
     name: "-moz-text-decoration-color",
     desc: "Specifies the color of text decoration (underlines overlines, and line-throughs) set on the element with text-decoration-line.",
     browsers: "FF6",
     restriction: "color"
    }, {
     name: "-moz-text-decoration-line",
     desc: "Specifies what line decorations, if any, are added to the element.",
     browsers: "FF6",
     restriction: "enum",
     values: [ {
      name: "line-through"
     }, {
      name: "none",
      desc: "Neither produces nor inhibits text decoration."
     }, {
      name: "overline"
     }, {
      name: "underline"
     } ]
    }, {
     name: "-moz-text-decoration-style",
     desc: "Specifies the line style for underline, line-through and overline text decoration.",
     browsers: "FF6",
     restriction: "enum",
     values: [ {
      name: "dashed"
     }, {
      name: "dotted"
     }, {
      name: "double"
     }, {
      name: "none",
      desc: "Produces no line."
     }, {
      name: "solid"
     }, {
      name: "wavy"
     } ]
    }, {
     name: "-moz-text-size-adjust",
     desc: "Specifies a size adjustment for displaying text content in mobile browsers.",
     browsers: "FF",
     restriction: "enum, percentage",
     values: [ {
      name: "auto",
      desc: "Renderers must use the default size adjustment when displaying on a small device."
     }, {
      name: "none",
      desc: "Renderers must not do size adjustment when displaying on a small device."
     } ]
    }, {
     name: "-moz-transform",
     desc: "A two-dimensional transformation is applied to an element through the 'transform' property. This property contains a list of transform functions similar to those allowed by SVG.",
     browsers: "FF3.5",
     restriction: "enum",
     values: [ {
      name: "matrix()"
     }, {
      name: "matrix3d()"
     }, {
      name: "none"
     }, {
      name: "perspective"
     }, {
      name: "rotate()"
     }, {
      name: "rotate3d()"
     }, {
      name: "rotateX('angle')"
     }, {
      name: "rotateY('angle')"
     }, {
      name: "rotateZ('angle')"
     }, {
      name: "scale()"
     }, {
      name: "scale3d()"
     }, {
      name: "scaleX()"
     }, {
      name: "scaleY()"
     }, {
      name: "scaleZ()"
     }, {
      name: "skew()"
     }, {
      name: "skewX()"
     }, {
      name: "skewY()"
     }, {
      name: "translate()"
     }, {
      name: "translate3d()"
     }, {
      name: "translateX()"
     }, {
      name: "translateY()"
     }, {
      name: "translateZ()"
     } ]
    }, {
     name: "-moz-transform-origin",
     desc: "Establishes the origin of transformation for an element.",
     browsers: "FF3.5",
     restriction: "position, length, percentage"
    }, {
     name: "-moz-transition",
     desc: "Shorthand property combines four of the transition properties into a single property.",
     browsers: "FF4",
     restriction: "time, property, timing-function, enum",
     values: [ {
      name: "all",
      desc: "Every property that is able to undergo a transition will do so."
     }, {
      name: "none",
      desc: "No property will transition."
     } ]
    }, {
     name: "-moz-transition-delay",
     desc: "Defines when the transition will start. It allows a transition to begin execution some period of time from when it is applied.",
     browsers: "FF4",
     restriction: "time"
    }, {
     name: "-moz-transition-duration",
     desc: "Specifies how long the transition from the old value to the new value should take.",
     browsers: "FF4",
     restriction: "time"
    }, {
     name: "-moz-transition-property",
     desc: "Specifies the name of the CSS property to which the transition is applied.",
     browsers: "FF4",
     restriction: "property",
     values: [ {
      name: "all",
      desc: "Every property that is able to undergo a transition will do so."
     }, {
      name: "none",
      desc: "No property will transition."
     } ]
    }, {
     name: "-moz-transition-timing-function",
     desc: "Describes how the intermediate values used during a transition will be calculated.",
     browsers: "FF4",
     restriction: "timing-function"
    }, {
     name: "-moz-user-focus",
     desc: "Used to indicate whether the element can have focus.",
     browsers: "FF1.5",
     values: [ {
      name: "ignore"
     }, {
      name: "normal"
     } ],
     status: "n",
     syntax: "ignore | normal | select-after | select-before | select-menu | select-same | select-all | none"
    }, {
     name: "-moz-user-select",
     desc: "Controls the appearance of selection.",
     browsers: "FF1.5",
     restriction: "enum",
     values: [ {
      name: "all"
     }, {
      name: "element"
     }, {
      name: "elements"
     }, {
      name: "-moz-all"
     }, {
      name: "-moz-none"
     }, {
      name: "none"
     }, {
      name: "text"
     }, {
      name: "toggle"
     } ]
    }, {
     name: "-ms-accelerator",
     desc: "IE only. Has the ability to turn off its system underlines for accelerator keys until the ALT key is pressed",
     browsers: "E,IE10",
     restriction: "enum",
     values: [ {
      name: "false"
     }, {
      name: "true"
     } ],
     status: "n",
     syntax: "false | true"
    }, {
     name: "-ms-behavior",
     desc: "IE only. Used to extend behaviors of the browser",
     browsers: "IE8",
     restriction: "url"
    }, {
     name: "-ms-block-progression",
     desc: "Sets the block-progression value and the flow orientation",
     browsers: "IE8",
     restriction: "enum",
     values: [ {
      name: "bt"
     }, {
      name: "lr"
     }, {
      name: "rl"
     }, {
      name: "tb"
     } ],
     status: "n",
     syntax: "tb | rl | bt | lr"
    }, {
     name: "-ms-content-zoom-chaining",
     desc: "Specifies the zoom behavior that occurs when a user hits the zoom limit during a manipulation.",
     browsers: "E,IE10",
     values: [ {
      name: "chained",
      desc: "The nearest zoomable parent element begins zooming when the user hits a zoom limit during a manipulation. No bounce effect is shown."
     }, {
      name: "none",
      desc: "A bounce effect is shown when the user hits a zoom limit during a manipulation."
     } ],
     status: "n",
     syntax: "none | chained"
    }, {
     name: "-ms-content-zooming",
     desc: "Specifies whether zooming is enabled.",
     browsers: "E,IE10",
     restriction: "enum",
     values: [ {
      name: "none",
      desc: "The element is not zoomable."
     }, {
      name: "zoom"
     } ],
     status: "n",
     syntax: "none | zoom"
    }, {
     name: "-ms-content-zoom-limit",
     desc: "Shorthand property for the -ms-content-zoom-limit-min and -ms-content-zoom-limit-max properties.",
     browsers: "E,IE10",
     restriction: "percentage",
     status: "n",
     syntax: "<'-ms-content-zoom-limit-min'> <'-ms-content-zoom-limit-max'>"
    }, {
     name: "-ms-content-zoom-limit-max",
     desc: "Specifies the maximum zoom factor.",
     browsers: "E,IE10",
     restriction: "percentage",
     status: "n",
     syntax: "<percentage>"
    }, {
     name: "-ms-content-zoom-limit-min",
     desc: "Specifies the minimum zoom factor.",
     browsers: "E,IE10",
     restriction: "percentage",
     status: "n",
     syntax: "<percentage>"
    }, {
     name: "-ms-content-zoom-snap",
     desc: "Shorthand property for the -ms-content-zoom-snap-type and -ms-content-zoom-snap-points properties.",
     browsers: "E,IE10",
     values: [ {
      name: "mandatory",
      desc: "Indicates that the motion of the content after the contact is picked up is always adjusted so that it lands on a snap-point."
     }, {
      name: "none",
      desc: "Indicates that zooming is unaffected by any defined snap-points."
     }, {
      name: "proximity",
      desc: 'Indicates that the motion of the content after the contact is picked up may be adjusted if the content would normally stop "close enough" to a snap-point.'
     }, {
      name: "snapInterval(100%, 100%)",
      desc: "Specifies where the snap-points will be placed."
     }, {
      name: "snapList()",
      desc: "Specifies the position of individual snap-points as a comma-separated list of zoom factors."
     } ],
     status: "n",
     syntax: "<'-ms-content-zoom-snap-type'> || <'-ms-content-zoom-snap-points'>"
    }, {
     name: "-ms-content-zoom-snap-points",
     desc: "Defines where zoom snap-points are located.",
     browsers: "E,IE10",
     values: [ {
      name: "snapInterval(100%, 100%)",
      desc: "Specifies where the snap-points will be placed."
     }, {
      name: "snapList()",
      desc: "Specifies the position of individual snap-points as a comma-separated list of zoom factors."
     } ],
     status: "n",
     syntax: "snapInterval( <percentage>, <percentage> ) | snapList( <percentage># )"
    }, {
     name: "-ms-content-zoom-snap-type",
     desc: "Specifies how zooming is affected by defined snap-points.",
     browsers: "E,IE10",
     restriction: "enum",
     values: [ {
      name: "mandatory",
      desc: "Indicates that the motion of the content after the contact is picked up is always adjusted so that it lands on a snap-point."
     }, {
      name: "none",
      desc: "Indicates that zooming is unaffected by any defined snap-points."
     }, {
      name: "proximity",
      desc: 'Indicates that the motion of the content after the contact is picked up may be adjusted if the content would normally stop "close enough" to a snap-point.'
     } ],
     status: "n",
     syntax: "none | proximity | mandatory"
    }, {
     name: "-ms-filter",
     desc: "IE only. Used to produce visual effects.",
     browsers: "IE8-9",
     restriction: "string",
     status: "n",
     syntax: "<string>"
    }, {
     name: "-ms-flex",
     desc: "specifies the parameters of a flexible length: the positive and negative flexibility, and the preferred size.",
     browsers: "IE10",
     restriction: "length, number, percentage",
     values: [ {
      name: "auto",
      desc: "Retrieves the value of the main size property as the used 'flex-basis'."
     }, {
      name: "none",
      desc: "Expands to '0 0 auto'."
     } ]
    }, {
     name: "-ms-flex-align",
     desc: "Aligns flex items along the cross axis of the current line of the flex container.",
     browsers: "IE10",
     restriction: "enum",
     values: [ {
      name: "baseline",
      desc: "If the flex item’s inline axis is the same as the cross axis, this value is identical to 'flex-start'. Otherwise, it participates in baseline alignment."
     }, {
      name: "center",
      desc: "The flex item’s margin box is centered in the cross axis within the line."
     }, {
      name: "end",
      desc: "The cross-end margin edge of the flex item is placed flush with the cross-end edge of the line."
     }, {
      name: "start",
      desc: "The cross-start margin edge of the flexbox item is placed flush with the cross-start edge of the line."
     }, {
      name: "stretch",
      desc: "If the cross size property of the flexbox item is anything other than 'auto', this value is identical to 'start'."
     } ]
    }, {
     name: "-ms-flex-direction",
     desc: "Specifies how flex items are placed in the flex container, by setting the direction of the flex container’s main axis.",
     browsers: "IE10",
     restriction: "enum",
     values: [ {
      name: "column",
      desc: "The flex container’s main axis has the same orientation as the block axis of the current writing mode."
     }, {
      name: "column-reverse"
     }, {
      name: "row",
      desc: "The flex container’s main axis has the same orientation as the inline axis of the current writing mode."
     }, {
      name: "row-reverse"
     } ]
    }, {
     name: "-ms-flex-flow",
     desc: "Specifies how flexbox items are placed in the flexbox.",
     browsers: "IE10",
     restriction: "enum",
     values: [ {
      name: "column",
      desc: "The flex container’s main axis has the same orientation as the block axis of the current writing mode."
     }, {
      name: "column-reverse"
     }, {
      name: "nowrap",
      desc: "The flex container is single-line."
     }, {
      name: "row",
      desc: "The flex container’s main axis has the same orientation as the inline axis of the current writing mode."
     }, {
      name: "wrap",
      desc: "The flexbox is multi-line."
     }, {
      name: "wrap-reverse"
     } ]
    }, {
     name: "-ms-flex-item-align",
     desc: "Allows the default alignment along the cross axis to be overridden for individual flex items.",
     browsers: "IE10",
     restriction: "enum",
     values: [ {
      name: "auto",
      desc: "Computes to the value of 'align-items' on the element’s parent, or 'stretch' if the element has no parent. On absolutely positioned elements, it computes to itself."
     }, {
      name: "baseline",
      desc: "If the flex item’s inline axis is the same as the cross axis, this value is identical to 'flex-start'. Otherwise, it participates in baseline alignment."
     }, {
      name: "center",
      desc: "The flex item’s margin box is centered in the cross axis within the line."
     }, {
      name: "end",
      desc: "The cross-end margin edge of the flex item is placed flush with the cross-end edge of the line."
     }, {
      name: "start",
      desc: "The cross-start margin edge of the flex item is placed flush with the cross-start edge of the line."
     }, {
      name: "stretch",
      desc: "If the cross size property of the flex item computes to auto, and neither of the cross-axis margins are auto, the flex item is stretched."
     } ]
    }, {
     name: "-ms-flex-line-pack",
     desc: "Aligns a flex container’s lines within the flex container when there is extra space in the cross-axis, similar to how 'justify-content' aligns individual items within the main-axis.",
     browsers: "IE10",
     restriction: "enum",
     values: [ {
      name: "center",
      desc: "Lines are packed toward the center of the flex container."
     }, {
      name: "distribute",
      desc: "Lines are evenly distributed in the flex container, with half-size spaces on either end."
     }, {
      name: "end",
      desc: "Lines are packed toward the end of the flex container."
     }, {
      name: "justify",
      desc: "Lines are evenly distributed in the flex container."
     }, {
      name: "start",
      desc: "Lines are packed toward the start of the flex container."
     }, {
      name: "stretch",
      desc: "Lines stretch to take up the remaining space."
     } ]
    }, {
     name: "-ms-flex-order",
     desc: "Controls the order in which children of a flex container appear within the flex container, by assigning them to ordinal groups.",
     browsers: "IE10",
     restriction: "integer"
    }, {
     name: "-ms-flex-pack",
     desc: "Aligns flex items along the main axis of the current line of the flex container.",
     browsers: "IE10",
     restriction: "enum",
     values: [ {
      name: "center",
      desc: "Flex items are packed toward the center of the line."
     }, {
      name: "distribute",
      desc: "Flex items are evenly distributed in the line, with half-size spaces on either end."
     }, {
      name: "end",
      desc: "Flex items are packed toward the end of the line."
     }, {
      name: "justify",
      desc: "Flex items are evenly distributed in the line."
     }, {
      name: "start",
      desc: "Flex items are packed toward the start of the line."
     } ]
    }, {
     name: "-ms-flex-wrap",
     desc: "Controls whether the flex container is single-line or multi-line, and the direction of the cross-axis, which determines the direction new lines are stacked in.",
     browsers: "IE10",
     restriction: "enum",
     values: [ {
      name: "nowrap",
      desc: "The flex container is single-line."
     }, {
      name: "wrap",
      desc: "The flexbox is multi-line."
     }, {
      name: "wrap-reverse"
     } ]
    }, {
     name: "-ms-flow-from",
     desc: "Makes a block container a region and associates it with a named flow.",
     browsers: "E,IE10",
     restriction: "identifier",
     values: [ {
      name: "none",
      desc: "The block container is not a CSS Region."
     } ],
     status: "n",
     syntax: "[ none | <custom-ident> ]#"
    }, {
     name: "-ms-flow-into",
     desc: "Places an element or its contents into a named flow.",
     browsers: "E,IE10",
     restriction: "identifier",
     values: [ {
      name: "none",
      desc: "The element is not moved to a named flow and normal CSS processing takes place."
     } ],
     status: "n",
     syntax: "[ none | <custom-ident> ]#"
    }, {
     name: "-ms-grid-column",
     desc: "Used to place grid items and explicitly defined grid cells in the Grid.",
     browsers: "E,IE10",
     restriction: "integer, string, enum",
     values: [ {
      name: "auto"
     }, {
      name: "end"
     }, {
      name: "start"
     } ]
    }, {
     name: "-ms-grid-column-align",
     desc: "Aligns the columns in a grid.",
     browsers: "E,IE10",
     restriction: "enum",
     values: [ {
      name: "center",
      desc: "Places the center of the Grid Item's margin box at the center of the Grid Item's column."
     }, {
      name: "end",
      desc: "Aligns the end edge of the Grid Item's margin box to the end edge of the Grid Item's column."
     }, {
      name: "start",
      desc: "Aligns the starting edge of the Grid Item's margin box to the starting edge of the Grid Item's column."
     }, {
      name: "stretch",
      desc: "Ensures that the Grid Item's margin box is equal to the size of the Grid Item's column."
     } ]
    }, {
     name: "-ms-grid-columns",
     desc: "Lays out the columns of the grid.",
     browsers: "E,IE10"
    }, {
     name: "-ms-grid-column-span",
     desc: "Specifies the number of columns to span.",
     browsers: "E,IE10",
     restriction: "integer"
    }, {
     name: "-ms-grid-layer",
     desc: "Grid-layer is similar in concept to z-index, but avoids overloading the meaning of the z-index property, which is applicable only to positioned elements.",
     browsers: "E,IE10",
     restriction: "integer"
    }, {
     name: "-ms-grid-row",
     desc: "grid-row is used to place grid items and explicitly defined grid cells in the Grid.",
     browsers: "E,IE10",
     restriction: "integer, string, enum",
     values: [ {
      name: "auto"
     }, {
      name: "end"
     }, {
      name: "start"
     } ]
    }, {
     name: "-ms-grid-row-align",
     desc: "Aligns the rows in a grid.",
     browsers: "E,IE10",
     restriction: "enum",
     values: [ {
      name: "center",
      desc: "Places the center of the Grid Item's margin box at the center of the Grid Item's row."
     }, {
      name: "end",
      desc: "Aligns the end edge of the Grid Item's margin box to the end edge of the Grid Item's row."
     }, {
      name: "start",
      desc: "Aligns the starting edge of the Grid Item's margin box to the starting edge of the Grid Item's row."
     }, {
      name: "stretch",
      desc: "Ensures that the Grid Item's margin box is equal to the size of the Grid Item's row."
     } ]
    }, {
     name: "-ms-grid-rows",
     desc: "Lays out the columns of the grid.",
     browsers: "E,IE10"
    }, {
     name: "-ms-grid-row-span",
     desc: "Specifies the number of rows to span.",
     browsers: "E,IE10",
     restriction: "integer"
    }, {
     name: "-ms-high-contrast-adjust",
     desc: "Specifies if properties should be adjusted in high contrast mode.",
     browsers: "E,IE10",
     restriction: "enum",
     values: [ {
      name: "auto",
      desc: "Properties will be adjusted as applicable."
     }, {
      name: "none",
      desc: "No adjustments will be applied."
     } ],
     status: "n",
     syntax: "auto | none"
    }, {
     name: "-ms-hyphenate-limit-chars",
     desc: "Specifies the minimum number of characters in a hyphenated word.",
     browsers: "E,IE10",
     restriction: "integer",
     values: [ {
      name: "auto",
      desc: "The user agent chooses a value that adapts to the current layout."
     } ],
     status: "n",
     syntax: "auto | <integer>{1,3}"
    }, {
     name: "-ms-hyphenate-limit-lines",
     desc: "Indicates the maximum number of successive hyphenated lines in an element.",
     browsers: "E,IE10",
     restriction: "integer",
     values: [ {
      name: "no-limit"
     } ],
     status: "n",
     syntax: "no-limit | <integer>"
    }, {
     name: "-ms-hyphenate-limit-zone",
     desc: "Specifies the maximum amount of unfilled space (before justification) that may be left in the line box before hyphenation is triggered to pull part of a word from the next line back up into the current line.",
     browsers: "E,IE10",
     restriction: "percentage, length",
     status: "n",
     syntax: "<percentage> | <length>"
    }, {
     name: "-ms-hyphens",
     desc: "Controls whether hyphenation is allowed to create more break opportunities within a line of text.",
     browsers: "E,IE10",
     restriction: "enum",
     values: [ {
      name: "auto",
      desc: "Conditional hyphenation characters inside a word, if present, take priority over automatic resources when determining hyphenation points within the word."
     }, {
      name: "manual"
     }, {
      name: "none",
      desc: "Words are not broken at line breaks, even if characters inside the word suggest line break points."
     } ]
    }, {
     name: "-ms-ime-mode",
     desc: "Controls the state of the input method editor for text fields.",
     browsers: "IE10",
     restriction: "enum",
     values: [ {
      name: "active"
     }, {
      name: "auto",
      desc: "No change is made to the current input method editor state. This is the default."
     }, {
      name: "disabled"
     }, {
      name: "inactive"
     }, {
      name: "normal",
      desc: "The IME state should be normal; this value can be used in a user style sheet to override the page setting."
     } ]
    }, {
     name: "-ms-interpolation-mode",
     desc: "Gets or sets the interpolation (resampling) method used to stretch images.",
     browsers: "IE7",
     restriction: "enum",
     values: [ {
      name: "bicubic"
     }, {
      name: "nearest-neighbor"
     } ]
    }, {
     name: "-ms-layout-grid",
     desc: "Sets or retrieves the composite document grid properties that specify the layout of text characters.",
     browsers: "E,IE10",
     values: [ {
      name: "char",
      desc: "Any of the range of character values available to the -ms-layout-grid-char property."
     }, {
      name: "line",
      desc: "Any of the range of line values available to the -ms-layout-grid-line property."
     }, {
      name: "mode"
     }, {
      name: "type"
     } ]
    }, {
     name: "-ms-layout-grid-char",
     desc: "Sets or retrieves the size of the character grid used for rendering the text content of an element.",
     browsers: "E,IE10",
     restriction: "enum, length, percentage",
     values: [ {
      name: "auto",
      desc: "Largest character in the font of the element is used to set the character grid."
     }, {
      name: "none",
      desc: "Default. No character grid is set."
     } ]
    }, {
     name: "-ms-layout-grid-line",
     desc: "Sets or retrieves the gridline value used for rendering the text content of an element.",
     browsers: "E,IE10",
     restriction: "length",
     values: [ {
      name: "auto",
      desc: "Largest character in the font of the element is used to set the character grid."
     }, {
      name: "none",
      desc: "Default. No grid line is set."
     } ]
    }, {
     name: "-ms-layout-grid-mode",
     desc: "Gets or sets whether the text layout grid uses two dimensions.",
     browsers: "E,IE10",
     restriction: "enum",
     values: [ {
      name: "both",
      desc: "Default. Both the char and line grid modes are enabled. This setting is necessary to fully enable the layout grid on an element."
     }, {
      name: "char",
      desc: "Only a character grid is used. This is recommended for use with block-level elements, such as a blockquote, where the line grid is intended to be disabled."
     }, {
      name: "line",
      desc: "Only a line grid is used. This is recommended for use with inline elements, such as a span, to disable the horizontal grid on runs of text that act as a single entity in the grid layout."
     }, {
      name: "none",
      desc: "No grid is used."
     } ]
    }, {
     name: "-ms-layout-grid-type",
     desc: "Sets or retrieves the type of grid used for rendering the text content of an element.",
     browsers: "E,IE10",
     restriction: "enum",
     values: [ {
      name: "fixed",
      desc: "Grid used for monospaced layout. All noncursive characters are treated as equal; every character is centered within a single grid space by default."
     }, {
      name: "loose",
      desc: "Default. Grid used for Japanese and Korean characters."
     }, {
      name: "strict",
      desc: "Grid used for Chinese, as well as Japanese (Genko) and Korean characters. Only the ideographs, kanas, and wide characters are snapped to the grid."
     } ]
    }, {
     name: "-ms-line-break",
     desc: "Specifies what set of line breaking restrictions are in effect within the element.",
     browsers: "E,IE10",
     restriction: "enum",
     values: [ {
      name: "auto",
      desc: "The UA determines the set of line-breaking restrictions to use for CJK scripts, and it may vary the restrictions based on the length of the line; e.g., use a less restrictive set of line-break rules for short lines."
     }, {
      name: "keep-all",
      desc: "Sequences of CJK characters can no longer break on implied break points. This option should only be used where the presence of word separator characters still creates line-breaking opportunities, as in Korean."
     }, {
      name: "newspaper",
      desc: "Breaks CJK scripts using the least restrictive set of line-breaking rules. Typically used for short lines, such as in newspapers."
     }, {
      name: "normal",
      desc: "Breaks CJK scripts using a normal set of line-breaking rules."
     }, {
      name: "strict",
      desc: "Breaks CJK scripts using a more restrictive set of line-breaking rules than 'normal'."
     } ]
    }, {
     name: "-ms-overflow-style",
     desc: "Specify whether content is clipped when it overflows the element's content area.",
     browsers: "E,IE10",
     restriction: "enum",
     values: [ {
      name: "auto",
      desc: "No preference, UA should use the first scrolling method in the list that it supports."
     }, {
      name: "-ms-autohiding-scrollbar"
     }, {
      name: "none",
      desc: "Indicates the element does not display scrollbars or panning indicators, even when its content overflows."
     }, {
      name: "scrollbar"
     } ],
     status: "n",
     syntax: "auto | none | scrollbar | -ms-autohiding-scrollbar"
    }, {
     name: "-ms-perspective",
     desc: "Applies the same transform as the perspective(<number>) transform function, except that it applies only to the positioned or transformed children of the element, not to the transform on the element itself.",
     browsers: "IE10",
     restriction: "length",
     values: [ {
      name: "none",
      desc: "No perspective transform is applied."
     } ]
    }, {
     name: "-ms-perspective-origin",
     desc: "Establishes the origin for the perspective property. It effectively sets the X and Y position at which the viewer appears to be looking at the children of the element.",
     browsers: "IE10",
     restriction: "position, percentage, length"
    }, {
     name: "-ms-perspective-origin-x",
     desc: "Establishes the origin for the perspective property. It effectively sets the X  position at which the viewer appears to be looking at the children of the element.",
     browsers: "IE10",
     restriction: "position, percentage, length"
    }, {
     name: "-ms-perspective-origin-y",
     desc: "Establishes the origin for the perspective property. It effectively sets the Y position at which the viewer appears to be looking at the children of the element.",
     browsers: "IE10",
     restriction: "position, percentage, length"
    }, {
     name: "-ms-progress-appearance",
     desc: "Gets or sets a value that specifies whether a progress control displays as a bar or a ring.",
     browsers: "IE10",
     restriction: "enum",
     values: [ {
      name: "bar"
     }, {
      name: "ring"
     } ]
    }, {
     name: "-ms-scrollbar-3dlight-color",
     desc: "Determines the color of the top and left edges of the scroll box and scroll arrows of a scroll bar.",
     browsers: "IE8",
     restriction: "color",
     status: "n",
     syntax: "<color>"
    }, {
     name: "-ms-scrollbar-arrow-color",
     desc: "Determines the color of the arrow elements of a scroll arrow.",
     browsers: "IE8",
     restriction: "color",
     status: "n",
     syntax: "<color>"
    }, {
     name: "-ms-scrollbar-base-color",
     desc: "Determines the color of the main elements of a scroll bar, which include the scroll box, track, and scroll arrows.",
     browsers: "IE8",
     restriction: "color",
     status: "n",
     syntax: "<color>"
    }, {
     name: "-ms-scrollbar-darkshadow-color",
     desc: "Determines the color of the gutter of a scroll bar.",
     browsers: "IE8",
     restriction: "color",
     status: "n",
     syntax: "<color>"
    }, {
     name: "-ms-scrollbar-face-color",
     desc: "Determines the color of the scroll box and scroll arrows of a scroll bar.",
     browsers: "IE8",
     restriction: "color",
     status: "n",
     syntax: "<color>"
    }, {
     name: "-ms-scrollbar-highlight-color",
     desc: "Determines the color of the top and left edges of the scroll box and scroll arrows of a scroll bar.",
     browsers: "IE8",
     restriction: "color",
     status: "n",
     syntax: "<color>"
    }, {
     name: "-ms-scrollbar-shadow-color",
     desc: "Determines the color of the bottom and right edges of the scroll box and scroll arrows of a scroll bar.",
     browsers: "IE8",
     restriction: "color",
     status: "n",
     syntax: "<color>"
    }, {
     name: "-ms-scrollbar-track-color",
     desc: "Determines the color of the track element of a scroll bar.",
     browsers: "IE8",
     restriction: "color",
     status: "n",
     syntax: "<color>"
    }, {
     name: "-ms-scroll-chaining",
     desc: "Gets or sets a value that indicates the scrolling behavior that occurs when a user hits the content boundary during a manipulation.",
     browsers: "E,IE10",
     restriction: "enum, length",
     values: [ {
      name: "chained"
     }, {
      name: "none"
     } ],
     status: "n",
     syntax: "chained | none"
    }, {
     name: "-ms-scroll-limit",
     desc: "Gets or sets a shorthand value that sets values for the -ms-scroll-limit-x-min, -ms-scroll-limit-y-min, -ms-scroll-limit-x-max, and -ms-scroll-limit-y-max properties.",
     browsers: "E,IE10",
     restriction: "length",
     values: [ {
      name: "auto"
     } ],
     status: "n",
     syntax: "<'-ms-scroll-limit-x-min'> <'-ms-scroll-limit-y-min'> <'-ms-scroll-limit-x-max'> <'-ms-scroll-limit-y-max'>"
    }, {
     name: "-ms-scroll-limit-x-max",
     desc: "Gets or sets a value that specifies the maximum value for the scrollLeft property.",
     browsers: "E,IE10",
     restriction: "length",
     values: [ {
      name: "auto"
     } ],
     status: "n",
     syntax: "auto | <length>"
    }, {
     name: "-ms-scroll-limit-x-min",
     desc: "Gets or sets a value that specifies the minimum value for the scrollLeft property.",
     browsers: "E,IE10",
     restriction: "length",
     status: "n",
     syntax: "<length>"
    }, {
     name: "-ms-scroll-limit-y-max",
     desc: "Gets or sets a value that specifies the maximum value for the scrollTop property.",
     browsers: "E,IE10",
     restriction: "length",
     values: [ {
      name: "auto"
     } ],
     status: "n",
     syntax: "auto | <length>"
    }, {
     name: "-ms-scroll-limit-y-min",
     desc: "Gets or sets a value that specifies the minimum value for the scrollTop property.",
     browsers: "E,IE10",
     restriction: "length",
     status: "n",
     syntax: "<length>"
    }, {
     name: "-ms-scroll-rails",
     desc: "Gets or sets a value that indicates whether or not small motions perpendicular to the primary axis of motion will result in either changes to both the scrollTop and scrollLeft properties or a change to the primary axis (for instance, either the scrollTop or scrollLeft properties will change, but not both).",
     browsers: "E,IE10",
     restriction: "enum, length",
     values: [ {
      name: "none"
     }, {
      name: "railed"
     } ],
     status: "n",
     syntax: "none | railed"
    }, {
     name: "-ms-scroll-snap-points-x",
     desc: "Gets or sets a value that defines where snap-points will be located along the x-axis.",
     browsers: "E,IE10",
     restriction: "enum",
     values: [ {
      name: "snapInterval(100%, 100%)"
     }, {
      name: "snapList()"
     } ],
     status: "n",
     syntax: "snapInterval( <length-percentage>, <length-percentage> ) | snapList( <length-percentage># )"
    }, {
     name: "-ms-scroll-snap-points-y",
     desc: "Gets or sets a value that defines where snap-points will be located along the y-axis.",
     browsers: "E,IE10",
     restriction: "enum",
     values: [ {
      name: "snapInterval(100%, 100%)"
     }, {
      name: "snapList()"
     } ],
     status: "n",
     syntax: "snapInterval( <length-percentage>, <length-percentage> ) | snapList( <length-percentage># )"
    }, {
     name: "-ms-scroll-snap-type",
     desc: "Gets or sets a value that defines what type of snap-point should be used for the current element. There are two type of snap-points, with the primary difference being whether or not the user is guaranteed to always stop on a snap-point.",
     browsers: "E,IE10",
     restriction: "enum",
     values: [ {
      name: "none",
      desc: "The visual viewport of this scroll container must ignore snap points, if any, when scrolled."
     }, {
      name: "mandatory",
      desc: "The visual viewport of this scroll container is guaranteed to rest on a snap point when there are no active scrolling operations."
     }, {
      name: "proximity",
      desc: "The visual viewport of this scroll container may come to rest on a snap point at the termination of a scroll at the discretion of the UA given the parameters of the scroll."
     } ],
     status: "n",
     syntax: "none | proximity | mandatory"
    }, {
     name: "-ms-scroll-snap-x",
     desc: "Gets or sets a shorthand value that sets values for the -ms-scroll-snap-type and -ms-scroll-snap-points-x properties.",
     browsers: "E,IE10",
     restriction: "enum",
     values: [ {
      name: "mandatory"
     }, {
      name: "none"
     }, {
      name: "proximity"
     }, {
      name: "snapInterval(100%, 100%)"
     }, {
      name: "snapList()"
     } ],
     status: "n",
     syntax: "<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-x'>"
    }, {
     name: "-ms-scroll-snap-y",
     desc: "Gets or sets a shorthand value that sets values for the -ms-scroll-snap-type and -ms-scroll-snap-points-y properties.",
     browsers: "E,IE10",
     restriction: "enum",
     values: [ {
      name: "mandatory"
     }, {
      name: "none"
     }, {
      name: "proximity"
     }, {
      name: "snapInterval(100%, 100%)"
     }, {
      name: "snapList()"
     } ],
     status: "n",
     syntax: "<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-y'>"
    }, {
     name: "-ms-scroll-translation",
     desc: "Gets or sets a value that specifies whether vertical-to-horizontal scroll wheel translation occurs on the specified element.",
     browsers: "E,IE10",
     restriction: "enum",
     values: [ {
      name: "none"
     }, {
      name: "vertical-to-horizontal"
     } ],
     status: "n",
     syntax: "none | vertical-to-horizontal"
    }, {
     name: "-ms-text-align-last",
     desc: "Describes how the last line of a block or a line right before a forced line break is aligned when 'text-align' is set to 'justify'.",
     browsers: "E,IE8",
     restriction: "enum",
     values: [ {
      name: "auto"
     }, {
      name: "center",
      desc: "The inline contents are centered within the line box."
     }, {
      name: "justify",
      desc: "The text is justified according to the method specified by the 'text-justify' property."
     }, {
      name: "left",
      desc: "The inline contents are aligned to the left edge of the line box. In vertical text, 'left' aligns to the edge of the line box that would be the start edge for left-to-right text."
     }, {
      name: "right",
      desc: "The inline contents are aligned to the right edge of the line box. In vertical text, 'right' aligns to the edge of the line box that would be the end edge for left-to-right text."
     } ]
    }, {
     name: "-ms-text-autospace",
     desc: "Determines whether or not a full-width punctuation mark character should be trimmed if it appears at the beginning of a line, so that its 'ink' lines up with the first glyph in the line above and below.",
     browsers: "E,IE8",
     restriction: "enum",
     values: [ {
      name: "ideograph-alpha"
     }, {
      name: "ideograph-numeric"
     }, {
      name: "ideograph-parenthesis"
     }, {
      name: "ideograph-space"
     }, {
      name: "none",
      desc: "No extra space is created."
     }, {
      name: "punctuation"
     } ],
     status: "n",
     syntax: "none | ideograph-alpha | ideograph-numeric | ideograph-parenthesis | ideograph-space"
    }, {
     name: "-ms-text-combine-horizontal",
     desc: "This property specifies the combination of multiple characters into the space of a single character.",
     browsers: "E,IE11",
     restriction: "enum, integer",
     values: [ {
      name: "all",
      desc: "Attempt to typeset horizontally all consecutive characters within the box such that they take up the space of a single character within the vertical line box."
     }, {
      name: "digits"
     }, {
      name: "none",
      desc: "No special processing."
     } ]
    }, {
     name: "-ms-text-justify",
     desc: "Selects the justification algorithm used when 'text-align' is set to 'justify'. The property applies to block containers, but the UA may (but is not required to) also support it on inline elements.",
     browsers: "E,IE8",
     restriction: "enum",
     values: [ {
      name: "auto",
      desc: "The UA determines the justification algorithm to follow, based on a balance between performance and adequate presentation quality."
     }, {
      name: "distribute",
      desc: "Justification primarily changes spacing both at word separators and at grapheme cluster boundaries in all scripts except those in the connected and cursive groups. This value is sometimes used in e.g. Japanese, often with the 'text-align-last' property."
     }, {
      name: "inter-cluster"
     }, {
      name: "inter-ideograph"
     }, {
      name: "inter-word"
     }, {
      name: "kashida"
     } ]
    }, {
     name: "-ms-text-kashida-space",
     desc: "Sets or retrieves the ratio of kashida expansion to white space expansion when justifying lines of text in the object.",
     browsers: "E,IE10",
     restriction: "percentage"
    }, {
     name: "-ms-text-overflow",
     desc: "Text can overflow for example when it is prevented from wrapping",
     browsers: "IE10",
     restriction: "enum",
     values: [ {
      name: "clip"
     }, {
      name: "ellipsis"
     } ]
    }, {
     name: "-ms-text-size-adjust",
     desc: "Specifies a size adjustment for displaying text content in mobile browsers.",
     browsers: "E,IE10",
     restriction: "enum, percentage",
     values: [ {
      name: "auto",
      desc: "Renderers must use the default size adjustment when displaying on a small device."
     }, {
      name: "none",
      desc: "Renderers must not do size adjustment when displaying on a small device."
     } ]
    }, {
     name: "-ms-text-underline-position",
     desc: "Sets the position of an underline specified on the same element: it does not affect underlines specified by ancestor elements.This property is typically used in vertical writing contexts such as in Japanese documents where it often desired to have the underline appear 'over' (to the right of) the affected run of text",
     browsers: "E,IE10",
     restriction: "enum",
     values: [ {
      name: "alphabetic",
      desc: "The underline is aligned with the alphabetic baseline. In this case the underline is likely to cross some descenders."
     }, {
      name: "auto",
      desc: "The user agent may use any algorithm to determine the underline's position. In horizontal line layout, the underline should be aligned as for alphabetic. In vertical line layout, if the language is set to Japanese or Korean, the underline should be aligned as for over."
     }, {
      name: "over"
     }, {
      name: "under"
     } ]
    }, {
     name: "-ms-touch-action",
     desc: "Gets or sets a value that indicates whether and how a given region can be manipulated by the user.",
     browsers: "IE10",
     restriction: "enum",
     values: [ {
      name: "auto",
      desc: "The element is a passive element, with several exceptions."
     }, {
      name: "double-tap-zoom",
      desc: "The element will zoom on double-tap."
     }, {
      name: "manipulation",
      desc: "The element is a manipulation-causing element."
     }, {
      name: "none",
      desc: "The element is a manipulation-blocking element."
     }, {
      name: "pan-x",
      desc: "The element permits touch-driven panning on the horizontal axis. The touch pan is performed on the nearest ancestor with horizontally scrollable content."
     }, {
      name: "pan-y",
      desc: "The element permits touch-driven panning on the vertical axis. The touch pan is performed on the nearest ancestor with vertically scrollable content."
     }, {
      name: "pinch-zoom",
      desc: "The element permits pinch-zooming. The pinch-zoom is performed on the nearest ancestor with zoomable content."
     } ]
    }, {
     name: "-ms-touch-select",
     desc: "Gets or sets a value that toggles the 'gripper' visual elements that enable touch text selection.",
     browsers: "E,IE10",
     restriction: "enum",
     values: [ {
      name: "grippers"
     }, {
      name: "none",
      desc: "Grippers are always off."
     } ],
     status: "n",
     syntax: "grippers | none"
    }, {
     name: "-ms-transform",
     desc: "A two-dimensional transformation is applied to an element through the 'transform' property. This property contains a list of transform functions similar to those allowed by SVG.",
     browsers: "IE9-9",
     restriction: "enum",
     values: [ {
      name: "matrix()"
     }, {
      name: "matrix3d()"
     }, {
      name: "none"
     }, {
      name: "rotate()"
     }, {
      name: "rotate3d()"
     }, {
      name: "rotateX('angle')"
     }, {
      name: "rotateY('angle')"
     }, {
      name: "rotateZ('angle')"
     }, {
      name: "scale()"
     }, {
      name: "scale3d()"
     }, {
      name: "scaleX()"
     }, {
      name: "scaleY()"
     }, {
      name: "scaleZ()"
     }, {
      name: "skew()"
     }, {
      name: "skewX()"
     }, {
      name: "skewY()"
     }, {
      name: "translate()"
     }, {
      name: "translate3d()"
     }, {
      name: "translateX()"
     }, {
      name: "translateY()"
     }, {
      name: "translateZ()"
     } ]
    }, {
     name: "-ms-transform-origin",
     desc: "Establishes the origin of transformation for an element.",
     browsers: "IE9-9",
     restriction: "position, length, percentage"
    }, {
     name: "-ms-transform-origin-x",
     desc: "The x coordinate of the origin for transforms applied to an element with respect to its border box.",
     browsers: "IE10",
     restriction: "length, percentage"
    }, {
     name: "-ms-transform-origin-y",
     desc: "The y coordinate of the origin for transforms applied to an element with respect to its border box.",
     browsers: "IE10",
     restriction: "length, percentage"
    }, {
     name: "-ms-transform-origin-z",
     desc: "The z coordinate of the origin for transforms applied to an element with respect to its border box.",
     browsers: "IE10",
     restriction: "length, percentage"
    }, {
     name: "-ms-user-select",
     desc: "Controls the appearance of selection.",
     browsers: "E,IE10",
     restriction: "enum",
     values: [ {
      name: "element"
     }, {
      name: "none"
     }, {
      name: "text"
     } ],
     status: "n",
     syntax: "none | element | text"
    }, {
     name: "-ms-word-break",
     desc: "Specifies line break opportunities for non-CJK scripts.",
     browsers: "IE8",
     restriction: "enum",
     values: [ {
      name: "break-all"
     }, {
      name: "keep-all",
      desc: "Block characters can no longer create implied break points."
     }, {
      name: "normal",
      desc: "Breaks non-CJK scripts according to their own rules."
     } ]
    }, {
     name: "-ms-word-wrap",
     desc: "Specifies whether the UA may break within a word to prevent overflow when an otherwise-unbreakable string is too long to fit.",
     browsers: "IE8",
     restriction: "enum",
     values: [ {
      name: "break-word",
      desc: "An unbreakable 'word' may be broken at an arbitrary point if there are no otherwise-acceptable break points in the line."
     }, {
      name: "normal",
      desc: "Lines may break only at allowed break points."
     } ]
    }, {
     name: "-ms-wrap-flow",
     desc: "An element becomes an exclusion when its 'wrap-flow' property has a computed value other than 'auto'.",
     browsers: "E,IE10",
     restriction: "enum",
     values: [ {
      name: "auto",
      desc: "For floats an exclusion is created, for all other elements an exclusion is not created."
     }, {
      name: "both",
      desc: "Inline flow content can flow on all sides of the exclusion."
     }, {
      name: "clear"
     }, {
      name: "end",
      desc: "Inline flow content can wrap on the end side of the exclusion area but must leave the area to the start edge of the exclusion area empty."
     }, {
      name: "maximum"
     }, {
      name: "minimum"
     }, {
      name: "start",
      desc: "Inline flow content can wrap on the start edge of the exclusion area but must leave the area to end edge of the exclusion area empty."
     } ],
     status: "n",
     syntax: "auto | both | start | end | maximum | clear"
    }, {
     name: "-ms-wrap-margin",
     desc: "Gets or sets a value that is used to offset the inner wrap shape from other shapes.",
     browsers: "E,IE10",
     restriction: "length, percentage",
     status: "n",
     syntax: "<length>"
    }, {
     name: "-ms-wrap-through",
     desc: "Specifies if an element inherits its parent wrapping context. In other words if it is subject to the exclusions defined outside the element.",
     browsers: "E,IE10",
     restriction: "enum",
     values: [ {
      name: "none",
      desc: "The exclusion element does not inherit its parent node's wrapping context. Its descendants are only subject to exclusion shapes defined inside the element."
     }, {
      name: "wrap",
      desc: "The exclusion element inherits its parent node's wrapping context. Its descendant inline content wraps around exclusions defined outside the element."
     } ],
     status: "n",
     syntax: "wrap | none"
    }, {
     name: "-ms-writing-mode",
     desc: "Shorthand property for both 'direction' and 'block-progression'.",
     browsers: "IE8",
     restriction: "enum",
     values: [ {
      name: "bt-lr"
     }, {
      name: "bt-rl"
     }, {
      name: "lr-bt"
     }, {
      name: "lr-tb"
     }, {
      name: "rl-bt"
     }, {
      name: "rl-tb"
     }, {
      name: "tb-lr"
     }, {
      name: "tb-rl"
     } ]
    }, {
     name: "-ms-zoom",
     desc: "Sets or retrieves the magnification scale of the object.",
     browsers: "IE8",
     restriction: "enum, integer, number, percentage",
     values: [ {
      name: "normal"
     } ]
    }, {
     name: "-ms-zoom-animation",
     desc: "Gets or sets a value that indicates whether an animation is used when zooming.",
     browsers: "IE10",
     restriction: "enum",
     values: [ {
      name: "default"
     }, {
      name: "none"
     } ]
    }, {
     name: "nav-down",
     desc: "Provides an way to control directional focus navigation.",
     browsers: "O9.5",
     restriction: "enum, identifier, string",
     values: [ {
      name: "auto",
      desc: "The user agent automatically determines which element to navigate the focus to in response to directional navigational input."
     }, {
      name: "current"
     }, {
      name: "root"
     } ]
    }, {
     name: "nav-index",
     desc: "Provides an input-method-neutral way of specifying the sequential navigation order (also known as 'tabbing order').",
     browsers: "O9.5",
     restriction: "number",
     values: [ {
      name: "auto",
      desc: "The element's sequential navigation order is assigned automatically by the user agent."
     } ]
    }, {
     name: "nav-left",
     desc: "Provides an way to control directional focus navigation.",
     browsers: "O9.5",
     restriction: "enum, identifier, string",
     values: [ {
      name: "auto",
      desc: "The user agent automatically determines which element to navigate the focus to in response to directional navigational input."
     }, {
      name: "current"
     }, {
      name: "root"
     } ]
    }, {
     name: "nav-right",
     desc: "Provides an way to control directional focus navigation.",
     browsers: "O9.5",
     restriction: "enum, identifier, string",
     values: [ {
      name: "auto",
      desc: "The user agent automatically determines which element to navigate the focus to in response to directional navigational input."
     }, {
      name: "current"
     }, {
      name: "root"
     } ]
    }, {
     name: "nav-up",
     desc: "Provides an way to control directional focus navigation.",
     browsers: "O9.5",
     restriction: "enum, identifier, string",
     values: [ {
      name: "auto",
      desc: "The user agent automatically determines which element to navigate the focus to in response to directional navigational input."
     }, {
      name: "current"
     }, {
      name: "root"
     } ]
    }, {
     name: "negative",
     desc: "@counter-style descriptor. Defines how to alter the representation when the counter value is negative.",
     browsers: "FF33",
     restriction: "image, identifier, string",
     syntax: "<symbol> <symbol>?"
    }, {
     name: "-o-animation",
     desc: "Shorthand property combines six of the animation properties into a single property.",
     browsers: "O12",
     restriction: "time, enum, timing-function, identifier, number",
     values: [ {
      name: "alternate"
     }, {
      name: "alternate-reverse"
     }, {
      name: "backwards"
     }, {
      name: "both",
      desc: "Both forwards and backwards fill modes are applied."
     }, {
      name: "forwards"
     }, {
      name: "infinite",
      desc: "Causes the animation to repeat forever."
     }, {
      name: "none",
      desc: "No animation is performed"
     }, {
      name: "normal",
      desc: "Normal playback."
     }, {
      name: "reverse",
      desc: "All iterations of the animation are played in the reverse direction from the way they were specified."
     } ]
    }, {
     name: "-o-animation-delay",
     desc: "Defines when the animation will start.",
     browsers: "O12",
     restriction: "time"
    }, {
     name: "-o-animation-direction",
     desc: "Defines whether or not the animation should play in reverse on alternate cycles.",
     browsers: "O12",
     restriction: "enum",
     values: [ {
      name: "alternate"
     }, {
      name: "alternate-reverse"
     }, {
      name: "normal",
      desc: "Normal playback."
     }, {
      name: "reverse",
      desc: "All iterations of the animation are played in the reverse direction from the way they were specified."
     } ]
    }, {
     name: "-o-animation-duration",
     desc: "Defines the length of time that an animation takes to complete one cycle.",
     browsers: "O12",
     restriction: "time"
    }, {
     name: "-o-animation-fill-mode",
     desc: "Defines what values are applied by the animation outside the time it is executing.",
     browsers: "O12",
     restriction: "enum",
     values: [ {
      name: "backwards"
     }, {
      name: "both",
      desc: "Both forwards and backwards fill modes are applied."
     }, {
      name: "forwards"
     }, {
      name: "none",
      desc: "There is no change to the property value between the time the animation is applied and the time the animation begins playing or after the animation completes."
     } ]
    }, {
     name: "-o-animation-iteration-count",
     desc: "Defines the number of times an animation cycle is played. The default value is one, meaning the animation will play from beginning to end once.",
     browsers: "O12",
     restriction: "number, enum",
     values: [ {
      name: "infinite",
      desc: "Causes the animation to repeat forever."
     } ]
    }, {
     name: "-o-animation-name",
     desc: "Defines a list of animations that apply. Each name is used to select the keyframe at-rule that provides the property values for the animation.",
     browsers: "O12",
     restriction: "identifier, enum",
     values: [ {
      name: "none",
      desc: "No animation is performed"
     } ]
    }, {
     name: "-o-animation-play-state",
     desc: "Defines whether the animation is running or paused.",
     browsers: "O12",
     restriction: "enum",
     values: [ {
      name: "paused"
     }, {
      name: "running"
     } ]
    }, {
     name: "-o-animation-timing-function",
     desc: "Describes how the animation will progress over one cycle of its duration. See the 'transition-timing-function'.",
     browsers: "O12",
     restriction: "timing-function"
    }, {
     name: "object-fit",
     desc: "Specifies how the contents of a replaced element should be scaled relative to the box established by its used height and width.",
     browsers: "C32,FF36,O19,S7.1",
     restriction: "enum",
     values: [ {
      name: "contain",
      desc: "The replaced content is sized to maintain its aspect ratio while fitting within the element’s content box: its concrete object size is resolved as a contain constraint against the element's used width and height."
     }, {
      name: "cover",
      desc: "The replaced content is sized to maintain its aspect ratio while filling the element's entire content box: its concrete object size is resolved as a cover constraint against the element’s used width and height."
     }, {
      name: "fill",
      desc: "The replaced content is sized to fill the element’s content box: the object's concrete object size is the element's used width and height."
     }, {
      name: "none",
      desc: "The replaced content is not resized to fit inside the element's content box"
     }, {
      name: "scale-down"
     } ],
     syntax: "fill | contain | cover | none | scale-down"
    }, {
     name: "object-position",
     desc: "Determines the alignment of the replaced element inside its box.",
     browsers: "C32,FF36,O19",
     restriction: "position, length, percentage",
     syntax: "<position>"
    }, {
     name: "-o-border-image",
     desc: "Shorthand property for setting 'border-image-source', 'border-image-slice', 'border-image-width', 'border-image-outset' and 'border-image-repeat'. Omitted values are set to their initial values.",
     browsers: "O11.6",
     restriction: "length, percentage, number, image, enum",
     values: [ {
      name: "auto",
      desc: "If 'auto' is specified then the border image width is the intrinsic width or height (whichever is applicable) of the corresponding image slice. If the image does not have the required intrinsic dimension then the corresponding border-width is used instead."
     }, {
      name: "fill",
      desc: "Causes the middle part of the border-image to be preserved."
     }, {
      name: "none"
     }, {
      name: "repeat"
     }, {
      name: "round",
      desc: "The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the image is rescaled so that it does."
     }, {
      name: "space",
      desc: "The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the extra space is distributed around the tiles."
     }, {
      name: "stretch",
      desc: "The image is stretched to fill the area."
     } ]
    }, {
     name: "-o-object-fit",
     desc: "Specifies how the contents of a replaced element should be scaled relative to the box established by its used height and width.",
     browsers: "O10.6",
     restriction: "enum",
     values: [ {
      name: "contain",
      desc: "The replaced content is sized to maintain its aspect ratio while fitting within the element’s content box: its concrete object size is resolved as a contain constraint against the element's used width and height."
     }, {
      name: "cover",
      desc: "The replaced content is sized to maintain its aspect ratio while filling the element's entire content box: its concrete object size is resolved as a cover constraint against the element’s used width and height."
     }, {
      name: "fill",
      desc: "The replaced content is sized to fill the element’s content box: the object's concrete object size is the element's used width and height."
     }, {
      name: "none",
      desc: "The replaced content is not resized to fit inside the element's content box"
     }, {
      name: "scale-down"
     } ]
    }, {
     name: "-o-object-position",
     desc: "Determines the alignment of the replaced element inside its box.",
     browsers: "O10.6",
     restriction: "position, length, percentage"
    }, {
     name: "opacity",
     desc: "Opacity of an element's text, where 1 is opaque and 0 is entirely transparent.",
     browsers: "C,FF3.6,IE9,O9,S1.2",
     restriction: "number(0-1)",
     syntax: "<number>"
    }, {
     name: "order",
     desc: "Controls the order in which children of a flex container appear within the flex container, by assigning them to ordinal groups.",
     browsers: "E,C29,FF22,IE11,O12.1,S9",
     restriction: "integer",
     syntax: "<integer>"
    }, {
     name: "orphans",
     desc: "Specifies the minimum number of line boxes in a block container that must be left in a fragment before a fragmentation break.",
     browsers: "C,IE8,O7,S1.3",
     restriction: "integer",
     syntax: "<integer>"
    }, {
     name: "-o-table-baseline",
     desc: "Determines which row of a inline-table should be used as baseline of inline-table.",
     browsers: "O9.6",
     restriction: "integer"
    }, {
     name: "-o-tab-size",
     desc: "This property determines the width of the tab character (U+0009), in space characters (U+0020), when rendered.",
     browsers: "O10.6",
     restriction: "integer, length"
    }, {
     name: "-o-text-overflow",
     desc: "Text can overflow for example when it is prevented from wrapping",
     browsers: "O10",
     restriction: "enum",
     values: [ {
      name: "clip"
     }, {
      name: "ellipsis"
     } ]
    }, {
     name: "-o-transform",
     desc: "A two-dimensional transformation is applied to an element through the 'transform' property. This property contains a list of transform functions similar to those allowed by SVG.",
     browsers: "O10.5",
     restriction: "enum",
     values: [ {
      name: "matrix()"
     }, {
      name: "matrix3d()"
     }, {
      name: "none"
     }, {
      name: "rotate()"
     }, {
      name: "rotate3d()"
     }, {
      name: "rotateX('angle')"
     }, {
      name: "rotateY('angle')"
     }, {
      name: "rotateZ('angle')"
     }, {
      name: "scale()"
     }, {
      name: "scale3d()"
     }, {
      name: "scaleX()"
     }, {
      name: "scaleY()"
     }, {
      name: "scaleZ()"
     }, {
      name: "skew()"
     }, {
      name: "skewX()"
     }, {
      name: "skewY()"
     }, {
      name: "translate()"
     }, {
      name: "translate3d()"
     }, {
      name: "translateX()"
     }, {
      name: "translateY()"
     }, {
      name: "translateZ()"
     } ]
    }, {
     name: "-o-transform-origin",
     desc: "Establishes the origin of transformation for an element.",
     browsers: "O10.5",
     restriction: "positon, length, percentage"
    }, {
     name: "-o-transition",
     desc: "Shorthand property combines four of the transition properties into a single property.",
     browsers: "O11.5",
     restriction: "time, property, timing-function, enum",
     values: [ {
      name: "all",
      desc: "Every property that is able to undergo a transition will do so."
     }, {
      name: "none",
      desc: "No property will transition."
     } ]
    }, {
     name: "-o-transition-delay",
     desc: "Defines when the transition will start. It allows a transition to begin execution some period of time from when it is applied.",
     browsers: "O11.5",
     restriction: "time"
    }, {
     name: "-o-transition-duration",
     desc: "Specifies how long the transition from the old value to the new value should take.",
     browsers: "O11.5",
     restriction: "time"
    }, {
     name: "-o-transition-property",
     desc: "Specifies the name of the CSS property to which the transition is applied.",
     browsers: "O11.5",
     restriction: "property",
     values: [ {
      name: "all",
      desc: "Every property that is able to undergo a transition will do so."
     }, {
      name: "none",
      desc: "No property will transition."
     } ]
    }, {
     name: "-o-transition-timing-function",
     desc: "Describes how the intermediate values used during a transition will be calculated.",
     browsers: "O11.5",
     restriction: "timing-function"
    }, {
     name: "offset-block-end",
     desc: "Logical 'bottom'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.",
     browsers: "FF41",
     restriction: "length, percentage",
     values: [ {
      name: "auto",
      desc: "For non-replaced elements, the effect of this value depends on which of related properties have the value 'auto' as well."
     } ],
     syntax: "<'left'>"
    }, {
     name: "offset-block-start",
     desc: "Logical 'top'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.",
     browsers: "FF41",
     restriction: "length, percentage",
     values: [ {
      name: "auto",
      desc: "For non-replaced elements, the effect of this value depends on which of related properties have the value 'auto' as well."
     } ],
     syntax: "<'left'>"
    }, {
     name: "offset-inline-end",
     desc: "Logical 'right'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.",
     browsers: "FF41",
     restriction: "length, percentage",
     values: [ {
      name: "auto",
      desc: "For non-replaced elements, the effect of this value depends on which of related properties have the value 'auto' as well."
     } ],
     syntax: "<'left'>"
    }, {
     name: "offset-inline-start",
     desc: "Logical 'left'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.",
     browsers: "FF41",
     restriction: "length, percentage",
     values: [ {
      name: "auto",
      desc: "For non-replaced elements, the effect of this value depends on which of related properties have the value 'auto' as well."
     } ],
     syntax: "<'left'>"
    }, {
     name: "outline",
     desc: "Shorthand property for 'outline-style', 'outline-width', and 'outline-color'.",
     browsers: "E,C,FF1.5,IE8,O8,S1.2",
     restriction: "length, line-width, line-style, color, enum",
     values: [ {
      name: "auto",
      desc: "Permits the user agent to render a custom outline style, typically the default platform style."
     }, {
      name: "invert",
      browsers: "E,IE8,O"
     } ],
     syntax: "[ <'outline-color'> || <'outline-style'> || <'outline-width'> ]"
    }, {
     name: "outline-color",
     desc: "The color of the outline.",
     browsers: "E,C,FF1.5,IE8,O8,S1.2",
     restriction: "enum, color",
     values: [ {
      name: "invert",
      browsers: "E,IE8,O"
     } ],
     syntax: "<color> | invert"
    }, {
     name: "outline-offset",
     desc: "Offset the outline and draw it beyond the border edge.",
     browsers: "C,FF1.5,O9.5,S1.2",
     restriction: "length",
     syntax: "<length>"
    }, {
     name: "outline-style",
     desc: "Style of the outline.",
     browsers: "E,C,FF1.5,IE8,O8,S1.2",
     restriction: "line-style, enum",
     values: [ {
      name: "auto",
      desc: "Permits the user agent to render a custom outline style, typically the default platform style."
     } ],
     syntax: "auto | <br-style>"
    }, {
     name: "outline-width",
     desc: "Width of the outline.",
     browsers: "E,C,FF1.5,IE8,O8,S1.2",
     restriction: "length, line-width",
     syntax: "<br-width>"
    }, {
     name: "overflow",
     desc: "Shorthand for setting 'overflow-x' and 'overflow-y'.",
     restriction: "enum",
     values: [ {
      name: "auto",
      desc: "The behavior of the 'auto' value is UA-dependent, but should cause a scrolling mechanism to be provided for overflowing boxes."
     }, {
      name: "hidden",
      desc: "Content is clipped and no scrolling mechanism should be provided to view the content outside the clipping region."
     }, {
      name: "-moz-hidden-unscrollable",
      browsers: "FF"
     }, {
      name: "scroll",
      desc: "Content is clipped and if the user agent uses a scrolling mechanism that is visible on the screen (such as a scroll bar or a panner), that mechanism should be displayed for a box whether or not any of its content is clipped."
     }, {
      name: "visible",
      desc: "Content is not clipped, i.e., it may be rendered outside the content box."
     } ],
     syntax: "[ visible | hidden | clip | scroll | auto ]{1,2}"
    }, {
     name: "overflow-wrap",
     desc: "Specifies whether the UA may break within a word to prevent overflow when an otherwise-unbreakable string is too long to fit within the line box.",
     browsers: "C23,O12.1,S6.1",
     restriction: "enum",
     values: [ {
      name: "break-word",
      desc: "An otherwise unbreakable sequence of characters may be broken at an arbitrary point if there are no otherwise-acceptable break points in the line."
     }, {
      name: "normal",
      desc: "Lines may break only at allowed break points."
     } ],
     syntax: "normal | break-word"
    }, {
     name: "overflow-x",
     desc: "Specifies the handling of overflow in the horizontal direction.",
     browsers: "E,C,FF1.5,IE5,O9.5,S3",
     restriction: "enum",
     values: [ {
      name: "auto",
      desc: "The behavior of the 'auto' value is UA-dependent, but should cause a scrolling mechanism to be provided for overflowing boxes."
     }, {
      name: "hidden",
      desc: "Content is clipped and no scrolling mechanism should be provided to view the content outside the clipping region."
     }, {
      name: "scroll",
      desc: "Content is clipped and if the user agent uses a scrolling mechanism that is visible on the screen (such as a scroll bar or a panner), that mechanism should be displayed for a box whether or not any of its content is clipped."
     }, {
      name: "visible",
      desc: "Content is not clipped, i.e., it may be rendered outside the content box."
     } ],
     syntax: "visible | hidden | clip | scroll | auto"
    }, {
     name: "overflow-y",
     desc: "Specifies the handling of overflow in the vertical direction.",
     browsers: "E,C,FF1.5,IE5,O9.5,S3",
     restriction: "enum",
     values: [ {
      name: "auto",
      desc: "The behavior of the 'auto' value is UA-dependent, but should cause a scrolling mechanism to be provided for overflowing boxes."
     }, {
      name: "hidden",
      desc: "Content is clipped and no scrolling mechanism should be provided to view the content outside the clipping region."
     }, {
      name: "scroll",
      desc: "Content is clipped and if the user agent uses a scrolling mechanism that is visible on the screen (such as a scroll bar or a panner), that mechanism should be displayed for a box whether or not any of its content is clipped."
     }, {
      name: "visible",
      desc: "Content is not clipped, i.e., it may be rendered outside the content box."
     } ],
     syntax: "visible | hidden | clip | scroll | auto"
    }, {
     name: "pad",
     desc: "@counter-style descriptor. Specifies a “fixed-width” counter style, where representations shorter than the pad value are padded with a particular <symbol>",
     browsers: "FF33",
     restriction: "integer, image, string, identifier",
     syntax: "<integer> && <symbol>"
    }, {
     name: "padding",
     desc: "Shorthand property to set values the thickness of the padding area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. The value may not be negative.",
     restriction: "length, percentage",
     values: [],
     syntax: "[ <length> | <percentage> ]{1,4}"
    }, {
     name: "padding-bottom",
     desc: "Shorthand property to set values the thickness of the padding area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. The value may not be negative.",
     restriction: "length, percentage",
     syntax: "<length> | <percentage>"
    }, {
     name: "padding-block-end",
     desc: "Logical 'padding-bottom'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.",
     browsers: "FF41",
     restriction: "length, percentage",
     syntax: "<'padding-left'>"
    }, {
     name: "padding-block-start",
     desc: "Logical 'padding-top'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.",
     browsers: "FF41",
     restriction: "length, percentage",
     syntax: "<'padding-left'>"
    }, {
     name: "padding-inline-end",
     desc: "Logical 'padding-right'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.",
     browsers: "FF41",
     restriction: "length, percentage",
     syntax: "<'padding-left'>"
    }, {
     name: "padding-inline-start",
     desc: "Logical 'padding-left'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.",
     browsers: "FF41",
     restriction: "length, percentage",
     syntax: "<'padding-left'>"
    }, {
     name: "padding-left",
     desc: "Shorthand property to set values the thickness of the padding area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. The value may not be negative.",
     restriction: "length, percentage",
     syntax: "<length> | <percentage>"
    }, {
     name: "padding-right",
     desc: "Shorthand property to set values the thickness of the padding area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. The value may not be negative.",
     restriction: "length, percentage",
     syntax: "<length> | <percentage>"
    }, {
     name: "padding-top",
     desc: "Shorthand property to set values the thickness of the padding area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. The value may not be negative.",
     restriction: "length, percentage",
     syntax: "<length> | <percentage>"
    }, {
     name: "page-break-after",
     desc: "Defines rules for page breaks after an element.",
     restriction: "enum",
     values: [ {
      name: "always",
      desc: "Always force a page break after the generated box."
     }, {
      name: "auto",
      desc: "Neither force nor forbid a page break after generated box."
     }, {
      name: "avoid",
      desc: "Avoid a page break after the generated box."
     }, {
      name: "left",
      desc: "Force one or two page breaks after the generated box so that the next page is formatted as a left page."
     }, {
      name: "right",
      desc: "Force one or two page breaks after the generated box so that the next page is formatted as a right page."
     } ],
     syntax: "auto | always | avoid | left | right | recto | verso"
    }, {
     name: "page-break-before",
     desc: "Defines rules for page breaks before an element.",
     restriction: "enum",
     values: [ {
      name: "always",
      desc: "Always force a page break before the generated box."
     }, {
      name: "auto",
      desc: "Neither force nor forbid a page break before the generated box."
     }, {
      name: "avoid",
      desc: "Avoid a page break before the generated box."
     }, {
      name: "left",
      desc: "Force one or two page breaks before the generated box so that the next page is formatted as a left page."
     }, {
      name: "right",
      desc: "Force one or two page breaks before the generated box so that the next page is formatted as a right page."
     } ],
     syntax: "auto | always | avoid | left | right | recto | verso"
    }, {
     name: "page-break-inside",
     desc: "Defines rules for page breaks inside an element.",
     browsers: "C,IE8,O7,S1.3",
     restriction: "enum",
     values: [ {
      name: "auto",
      desc: "Neither force nor forbid a page break inside the generated box."
     }, {
      name: "avoid",
      desc: "Avoid a page break inside the generated box."
     } ],
     syntax: "auto | avoid"
    }, {
     name: "paint-order",
     desc: "Controls the order that the three paint operations that shapes and text are rendered with: their fill, their stroke and any markers they might have.",
     browsers: "C35,FF31,O22,S7.1",
     restriction: "enum",
     values: [ {
      name: "fill"
     }, {
      name: "markers"
     }, {
      name: "normal",
      desc: "The element is painted with the standard order of painting operations: the 'fill' is painted first, then its 'stroke' and finally its markers."
     }, {
      name: "stroke"
     } ],
     status: "e",
     syntax: "normal | [ fill || stroke || markers ]"
    }, {
     name: "perspective",
     desc: "Applies the same transform as the perspective(<number>) transform function, except that it applies only to the positioned or transformed children of the element, not to the transform on the element itself.",
     browsers: "E,C36,FF16,IE10,O23,S9",
     restriction: "length, enum",
     values: [ {
      name: "none",
      desc: "No perspective transform is applied."
     } ],
     syntax: "none | <length>"
    }, {
     name: "perspective-origin",
     desc: "Establishes the origin for the perspective property. It effectively sets the X and Y position at which the viewer appears to be looking at the children of the element.",
     browsers: "E,C36,FF16,IE10,O23,S9",
     restriction: "position, percentage, length",
     syntax: "<position>"
    }, {
     name: "pointer-events",
     desc: "Specifies under what circumstances a given element can be the target element for a pointer event.",
     restriction: "enum",
     values: [ {
      name: "all",
      desc: "The given element can be the target element for pointer events whenever the pointer is over either the interior or the perimeter of the element."
     }, {
      name: "fill",
      desc: "The given element can be the target element for pointer events whenever the pointer is over the interior of the element."
     }, {
      name: "none",
      desc: "The given element does not receive pointer events."
     }, {
      name: "painted"
     }, {
      name: "stroke",
      desc: "The given element can be the target element for pointer events whenever the pointer is over the perimeter of the element."
     }, {
      name: "visible",
      desc: "The given element can be the target element for pointer events when the ‘visibility’ property is set to visible and the pointer is over either the interior or the perimete of the element."
     }, {
      name: "visibleFill"
     }, {
      name: "visiblePainted"
     }, {
      name: "visibleStroke"
     } ],
     syntax: "auto | none | visiblePainted | visibleFill | visibleStroke | visible | painted | fill | stroke | all | inherit"
    }, {
     name: "position",
     restriction: "enum",
     values: [ {
      name: "absolute"
     }, {
      name: "fixed",
      desc: "The box's position is calculated according to the 'absolute' model, but in addition, the box is fixed with respect to some reference. As with the 'absolute' model, the box's margins do not collapse with any other margins."
     }, {
      name: "-ms-page",
      browsers: "E,IE10"
     }, {
      name: "relative"
     }, {
      name: "static"
     }, {
      name: "sticky",
      browsers: "C56,FF32"
     }, {
      name: "-webkit-sticky",
      browsers: "S6.1"
     } ],
     syntax: "static | relative | absolute | sticky | fixed"
    }, {
     name: "prefix",
     desc: "@counter-style descriptor. Specifies a <symbol> that is prepended to the marker representation.",
     browsers: "FF33",
     restriction: "image, string, identifier",
     syntax: "<symbol>"
    }, {
     name: "quotes",
     desc: "Specifies quotation marks for any number of embedded quotations.",
     browsers: "E,C,FF1.5,IE8,O8,S5.1",
     restriction: "string",
     values: [ {
      name: "none",
      desc: "The 'open-quote' and 'close-quote' values of the 'content' property produce no quotations marks, as if they were 'no-open-quote' and 'no-close-quote' respectively."
     } ],
     syntax: "none | [ <string> <string> ]+"
    }, {
     name: "range",
     desc: "@counter-style descriptor. Defines the ranges over which the counter style is defined.",
     browsers: "FF33",
     restriction: "integer, enum",
     values: [ {
      name: "auto",
      desc: "The range depends on the counter system."
     }, {
      name: "infinite",
      desc: "If used as the first value in a range, it represents negative infinity; if used as the second value, it represents positive infinity."
     } ],
     syntax: "[ [ <integer> | infinite ]{2} ]# | auto"
    }, {
     name: "resize",
     desc: "Specifies whether or not an element is resizable by the user, and if so, along which axis/axes.",
     browsers: "C,FF4,O15,S3",
     restriction: "enum",
     values: [ {
      name: "both",
      desc: "The UA presents a bidirectional resizing mechanism to allow the user to adjust both the height and the width of the element."
     }, {
      name: "horizontal",
      desc: "The UA presents a unidirectional horizontal resizing mechanism to allow the user to adjust only the width of the element."
     }, {
      name: "none",
      desc: "The UA does not present a resizing mechanism on the element, and the user is given no direct manipulation mechanism to resize the element."
     }, {
      name: "vertical",
      desc: "The UA presents a unidirectional vertical resizing mechanism to allow the user to adjust only the height of the element."
     } ],
     syntax: "none | both | horizontal | vertical"
    }, {
     name: "right",
     desc: "Specifies how far an absolutely positioned box's right margin edge is offset to the left of the right edge of the box's 'containing block'.",
     restriction: "length, percentage",
     values: [ {
      name: "auto",
      desc: "For non-replaced elements, the effect of this value depends on which of related properties have the value 'auto' as well"
     } ],
     syntax: "<length> | <percentage> | auto"
    }, {
     name: "ruby-align",
     desc: "Specifies how text is distributed within the various ruby boxes when their contents do not exactly fill their respective boxes.",
     browsers: "FF10,IE5",
     restriction: "enum",
     values: [ {
      name: "auto",
      desc: "The user agent determines how the ruby contents are aligned. This is the initial value.",
      browsers: "E,IE5"
     }, {
      name: "center",
      desc: "The ruby content is centered within its box."
     }, {
      name: "distribute-letter",
      browsers: "E,IE5"
     }, {
      name: "distribute-space",
      browsers: "E,IE5"
     }, {
      name: "left",
      desc: "The ruby text content is aligned with the start edge of the base."
     }, {
      name: "line-edge",
      browsers: "E,IE5"
     }, {
      name: "right",
      desc: "The ruby text content is aligned with the end edge of the base.",
      browsers: "E,IE5"
     }, {
      name: "start",
      desc: "The ruby text content is aligned with the start edge of the base.",
      browsers: "FF10"
     }, {
      name: "space-between",
      desc: "The ruby content expands as defined for normal text justification (as defined by 'text-justify'),",
      browsers: "FF10"
     }, {
      name: "space-around",
      desc: "As for 'space-between' except that there exists an extra justification opportunities whose space is distributed half before and half after the ruby content.",
      browsers: "FF10"
     } ],
     syntax: "start | center | space-between | space-around"
    }, {
     name: "ruby-overhang",
     desc: "Determines whether, and on which side, ruby text is allowed to partially overhang any adjacent text in addition to its own base, when the ruby text is wider than the ruby base.",
     browsers: "FF10,IE5",
     restriction: "enum",
     values: [ {
      name: "auto",
      desc: "The ruby text can overhang text adjacent to the base on either side. This is the initial value."
     }, {
      name: "end",
      desc: "The ruby text can overhang the text that follows it."
     }, {
      name: "none",
      desc: "The ruby text cannot overhang any text adjacent to its base, only its own base."
     }, {
      name: "start",
      desc: "The ruby text can overhang the text that precedes it."
     } ]
    }, {
     name: "ruby-position",
     desc: "Used by the parent of elements with display: ruby-text to control the position of the ruby text with respect to its base.",
     browsers: "FF10,IE5",
     restriction: "enum",
     values: [ {
      name: "after"
     }, {
      name: "before"
     }, {
      name: "inline"
     }, {
      name: "right",
      desc: "The ruby text appears on the right of the base. Unlike 'before' and 'after', this value is not relative to the text flow direction."
     } ],
     syntax: "over | under | inter-character"
    }, {
     name: "ruby-span",
     desc: "Determines whether, and on which side, ruby text is allowed to partially overhang any adjacent text in addition to its own base, when the ruby text is wider than the ruby base.",
     browsers: "FF10",
     restriction: "enum",
     values: [ {
      name: "attr(x)"
     }, {
      name: "none",
      desc: "No spanning. The computed value is '1'."
     } ]
    }, {
     name: "scrollbar-3dlight-color",
     desc: "Determines the color of the top and left edges of the scroll box and scroll arrows of a scroll bar.",
     browsers: "IE6",
     restriction: "color"
    }, {
     name: "scrollbar-arrow-color",
     desc: "Determines the color of the arrow elements of a scroll arrow.",
     browsers: "IE6",
     restriction: "color"
    }, {
     name: "scrollbar-base-color",
     desc: "Determines the color of the main elements of a scroll bar, which include the scroll box, track, and scroll arrows.",
     browsers: "IE6",
     restriction: "color"
    }, {
     name: "scrollbar-darkshadow-color",
     desc: "Determines the color of the gutter of a scroll bar.",
     browsers: "IE6",
     restriction: "color"
    }, {
     name: "scrollbar-face-color",
     desc: "Determines the color of the scroll box and scroll arrows of a scroll bar.",
     browsers: "IE6",
     restriction: "color"
    }, {
     name: "scrollbar-highlight-color",
     desc: "Determines the color of the top and left edges of the scroll box and scroll arrows of a scroll bar.",
     browsers: "IE6",
     restriction: "color"
    }, {
     name: "scrollbar-shadow-color",
     desc: "Determines the color of the bottom and right edges of the scroll box and scroll arrows of a scroll bar.",
     browsers: "IE6",
     restriction: "color"
    }, {
     name: "scrollbar-track-color",
     desc: "Determines the color of the track element of a scroll bar.",
     browsers: "IE6",
     restriction: "color"
    }, {
     name: "scroll-behavior",
     desc: "Specifies the scrolling behavior for a scrolling box, when scrolling happens due to navigation or CSSOM scrolling APIs.",
     browsers: "FF36",
     restriction: "enum",
     values: [ {
      name: "auto",
      desc: "Scrolls in an instant fashion."
     }, {
      name: "smooth"
     } ],
     syntax: "auto | smooth"
    }, {
     name: "scroll-snap-coordinate",
     desc: "Defines the x and y coordinate within the element which will align with the nearest ancestor scroll container’s snap-destination for the respective axis.",
     browsers: "FF39",
     restriction: "position, length, percentage, enum",
     values: [ {
      name: "none",
      desc: "Specifies that this element does not contribute a snap point."
     } ],
     syntax: "none | <position>#"
    }, {
     name: "scroll-snap-destination",
     desc: "Define the x and y coordinate within the scroll container’s visual viewport which element snap points will align with.",
     browsers: "FF39",
     restriction: "position, length, percentage",
     syntax: "<position>"
    }, {
     name: "scroll-snap-points-x",
     desc: "Defines the positioning of snap points along the x axis of the scroll container it is applied to.",
     browsers: "FF39",
     restriction: "enum",
     values: [ {
      name: "none",
      desc: "No snap points are defined by this scroll container."
     }, {
      name: "repeat()",
      desc: "Defines an interval at which snap points are defined, starting from the container’s relevant start edge."
     } ],
     status: "o",
     syntax: "none | repeat( <length-percentage> )"
    }, {
     name: "scroll-snap-points-y",
     desc: "Defines the positioning of snap points alobg the y axis of the scroll container it is applied to.",
     browsers: "FF39",
     restriction: "enum",
     values: [ {
      name: "none",
      desc: "No snap points are defined by this scroll container."
     }, {
      name: "repeat()",
      desc: "Defines an interval at which snap points are defined, starting from the container’s relevant start edge."
     } ],
     status: "o",
     syntax: "none | repeat( <length-percentage> )"
    }, {
     name: "scroll-snap-type",
     desc: "Defines how strictly snap points are enforced on the scroll container.",
     browsers: "FF39",
     restriction: "enum",
     values: [ {
      name: "none",
      desc: "The visual viewport of this scroll container must ignore snap points, if any, when scrolled."
     }, {
      name: "mandatory",
      desc: "The visual viewport of this scroll container is guaranteed to rest on a snap point when there are no active scrolling operations."
     }, {
      name: "proximity",
      desc: "The visual viewport of this scroll container may come to rest on a snap point at the termination of a scroll at the discretion of the UA given the parameters of the scroll."
     } ],
     syntax: "none | mandatory | proximity"
    }, {
     name: "shape-image-threshold",
     desc: "Defines the alpha channel threshold used to extract the shape using an image. A value of 0.5 means that the shape will enclose all the pixels that are more than 50% opaque.",
     browsers: "C37,O24",
     restriction: "number",
     syntax: "<number>"
    }, {
     name: "shape-margin",
     desc: "Adds a margin to a 'shape-outside'. This defines a new shape that is the smallest contour that includes all the points that are the 'shape-margin' distance outward in the perpendicular direction from a point on the underlying shape.",
     browsers: "C37,O24",
     restriction: "url, length, percentage",
     syntax: "<length-percentage>"
    }, {
     name: "shape-outside",
     desc: "Specifies an orthogonal rotation to be applied to an image before it is laid out.",
     browsers: "C37,O24",
     restriction: "image, box, shape, enum",
     values: [ {
      name: "margin-box"
     }, {
      name: "none",
      desc: "The float area is unaffected."
     } ],
     syntax: "none | <shape-box> || <basic-shape> | <image>"
    }, {
     name: "shape-rendering",
     desc: "Provides hints about what tradeoffs to make as it renders vector graphics elements such as <path> elements and basic shapes such as circles and rectangles.",
     restriction: "enum",
     values: [ {
      name: "auto",
      desc: "Suppresses aural rendering."
     }, {
      name: "crispEdges"
     }, {
      name: "geometricPrecision",
      desc: "Emphasize geometric precision over speed and crisp edges."
     }, {
      name: "optimizeSpeed",
      desc: "Emphasize rendering speed over geometric precision and crisp edges."
     } ]
    }, {
     name: "size",
     browsers: "C,O8",
     restriction: "length"
    }, {
     name: "src",
     desc: "@font-face descriptor. Specifies the resource containing font data. It is required, whether the font is downloadable or locally installed.",
     restriction: "enum, url, identifier",
     values: [ {
      name: "url()",
      desc: "Reference font by URL"
     }, {
      name: "format()"
     }, {
      name: "local()"
     } ],
     syntax: "[ <url> format(<string>#)? | local(<family-name>) ]#"
    }, {
     name: "stop-color",
     desc: "Indicates what color to use at that gradient stop.",
     restriction: "color"
    }, {
     name: "stop-opacity",
     desc: "Defines the opacity of a given gradient stop.",
     restriction: "number(0-1)"
    }, {
     name: "stroke",
     desc: "Paints along the outline of the given graphical element.",
     restriction: "color, enum, url",
     values: [ {
      name: "url()",
      desc: "A URL reference to a paint server element, which is an element that defines a paint server: ‘hatch’, ‘linearGradient’, ‘mesh’, ‘pattern’, ‘radialGradient’ and ‘solidcolor’."
     } ]
    }, {
     name: "stroke-dasharray",
     desc: "Controls the pattern of dashes and gaps used to stroke paths.",
     restriction: "length, percentage, number, enum",
     values: [ {
      name: "none",
      desc: "Indicates that no dashing is used."
     } ]
    }, {
     name: "stroke-dashoffset",
     desc: "Specifies the distance into the dash pattern to start the dash.",
     restriction: "percentage, length"
    }, {
     name: "stroke-linecap",
     desc: "Specifies the shape to be used at the end of open subpaths when they are stroked.",
     restriction: "enum",
     values: [ {
      name: "butt"
     }, {
      name: "round",
      desc: "Indicates that at each end of each subpath, the shape representing the stroke will be extended by a half circle with a radius equal to the stroke width."
     }, {
      name: "square",
      desc: "Indicates that at the end of each subpath, the shape representing the stroke will be extended by a rectangle with the same width as the stroke width and whose length is half of the stroke width."
     } ]
    }, {
     name: "stroke-linejoin",
     desc: "Specifies the shape to be used at the corners of paths or basic shapes when they are stroked.",
     restriction: "enum",
     values: [ {
      name: "bevel"
     }, {
      name: "miter"
     }, {
      name: "round",
      desc: "Indicates that a round corner is to be used to join path segments."
     } ]
    }, {
     name: "stroke-miterlimit",
     desc: "When two line segments meet at a sharp angle and miter joins have been specified for 'stroke-linejoin', it is possible for the miter to extend far beyond the thickness of the line stroking the path.",
     restriction: "number"
    }, {
     name: "stroke-opacity",
     desc: "Specifies the opacity of the painting operation used to stroke the current object.",
     restriction: "number(0-1)"
    }, {
     name: "stroke-width",
     desc: "Specifies the width of the stroke on the current object.",
     restriction: "percentage, length"
    }, {
     name: "suffix",
     desc: "@counter-style descriptor. Specifies a <symbol> that is appended to the marker representation.",
     browsers: "FF33",
     restriction: "image, string, identifier",
     syntax: "<symbol>"
    }, {
     name: "system",
     desc: "@counter-style descriptor. Specifies which algorithm will be used to construct the counter’s representation based on the counter value.",
     browsers: "FF33",
     restriction: "enum, integer",
     values: [ {
      name: "additive"
     }, {
      name: "alphabetic",
      desc: 'Interprets the list of counter symbols as digits to an alphabetic numbering system, similar to the default lower-alpha counter style, which wraps from "a", "b", "c", to "aa", "ab", "ac".'
     }, {
      name: "cyclic"
     }, {
      name: "extends"
     }, {
      name: "fixed",
      desc: "Runs through its list of counter symbols once, then falls back."
     }, {
      name: "numeric"
     }, {
      name: "symbolic"
     } ],
     syntax: "cyclic | numeric | alphabetic | symbolic | additive | [ fixed <integer>? ] | [ extends <counter-style-name> ]"
    }, {
     name: "symbols",
     desc: "@counter-style descriptor. Specifies the symbols used by the marker-construction algorithm specified by the system descriptor.",
     browsers: "FF33",
     restriction: "image, string, identifier",
     syntax: "<symbol>+"
    }, {
     name: "table-layout",
     desc: "Controls the algorithm used to lay out the table cells, rows, and columns.",
     restriction: "enum",
     values: [ {
      name: "auto",
      desc: "Use any automatic table layout algorithm."
     }, {
      name: "fixed",
      desc: "Use the fixed table layout algorithm."
     } ],
     syntax: "auto | fixed"
    }, {
     name: "tab-size",
     desc: "Determines the width of the tab character (U+0009), in space characters (U+0020), when rendered.",
     browsers: "C21,O15,S6.1",
     restriction: "integer, length",
     syntax: "<integer> | <length>"
    }, {
     name: "text-align",
     desc: "Describes how inline contents of a block are horizontally aligned if the contents do not completely fill the line box.",
     restriction: "string",
     values: [ {
      name: "center",
      desc: "The inline contents are centered within the line box."
     }, {
      name: "end",
      desc: "The inline contents are aligned to the end edge of the line box.",
      browsers: "C,FF3.6,O15,S3.1"
     }, {
      name: "justify",
      desc: "The text is justified according to the method specified by the 'text-justify' property."
     }, {
      name: "left",
      desc: "The inline contents are aligned to the left edge of the line box. In vertical text, 'left' aligns to the edge of the line box that would be the start edge for left-to-right text."
     }, {
      name: "right",
      desc: "The inline contents are aligned to the right edge of the line box. In vertical text, 'right' aligns to the edge of the line box that would be the end edge for left-to-right text."
     }, {
      name: "start",
      desc: "The inline contents are aligned to the start edge of the line box.",
      browsers: "C,FF1,O15,S3.1"
     } ],
     syntax: "start | end | left | right | center | justify | match-parent"
    }, {
     name: "text-align-last",
     desc: "Describes how the last line of a block or a line right before a forced line break is aligned when 'text-align' is set to 'justify'.",
     browsers: "E,FF12,IE5",
     restriction: "enum",
     values: [ {
      name: "auto",
      desc: "Content on the affected line is aligned per 'text-align' unless 'text-align' is set to 'justify', in which case it is 'start-aligned'."
     }, {
      name: "center",
      desc: "The inline contents are centered within the line box."
     }, {
      name: "justify",
      desc: "The text is justified according to the method specified by the 'text-justify' property."
     }, {
      name: "left",
      desc: "The inline contents are aligned to the left edge of the line box. In vertical text, 'left' aligns to the edge of the line box that would be the start edge for left-to-right text."
     }, {
      name: "right",
      desc: "The inline contents are aligned to the right edge of the line box. In vertical text, 'right' aligns to the edge of the line box that would be the end edge for left-to-right text."
     } ],
     syntax: "auto | start | end | left | right | center | justify"
    }, {
     name: "text-anchor",
     desc: "Used to align (start-, middle- or end-alignment) a string of text relative to a given point.",
     restriction: "enum",
     values: [ {
      name: "end",
      desc: "The rendered characters are aligned such that the end of the resulting rendered text is at the initial current text position."
     }, {
      name: "middle",
      desc: "The rendered characters are aligned such that the geometric middle of the resulting rendered text is at the initial current text position."
     }, {
      name: "start",
      desc: "The rendered characters are aligned such that the start of the resulting rendered text is at the initial current text position."
     } ]
    }, {
     name: "text-decoration",
     desc: "Decorations applied to font used for an element's text.",
     restriction: "enum, color",
     values: [ {
      name: "dashed"
     }, {
      name: "dotted"
     }, {
      name: "double"
     }, {
      name: "line-through"
     }, {
      name: "overline"
     }, {
      name: "solid"
     }, {
      name: "underline"
     }, {
      name: "wavy"
     } ],
     syntax: "<'text-decoration-line'> || <'text-decoration-style'> || <'text-decoration-color'>"
    }, {
     name: "text-decoration-color",
     desc: "Specifies the color of text decoration (underlines overlines, and line-throughs) set on the element with text-decoration-line.",
     browsers: "FF36,C57,O44",
     restriction: "color",
     syntax: "<color>"
    }, {
     name: "text-decoration-line",
     desc: "Specifies what line decorations, if any, are added to the element.",
     browsers: "FF36",
     restriction: "enum",
     values: [ {
      name: "line-through"
     }, {
      name: "none",
      desc: "Neither produces nor inhibits text decoration."
     }, {
      name: "overline"
     }, {
      name: "underline"
     } ],
     syntax: "none | [ underline || overline || line-through || blink ]"
    }, {
     name: "text-decoration-style",
     desc: "Specifies the line style for underline, line-through and overline text decoration.",
     browsers: "FF36",
     restriction: "enum",
     values: [ {
      name: "dashed"
     }, {
      name: "dotted"
     }, {
      name: "double"
     }, {
      name: "none",
      desc: "Produces no line."
     }, {
      name: "solid"
     }, {
      name: "wavy"
     } ],
     syntax: "solid | double | dotted | dashed | wavy"
    }, {
     name: "text-indent",
     desc: "Specifies the indentation applied to lines of inline content in a block. The indentation only affects the first line of inline content in the block unless the 'hanging' keyword is specified, in which case it affects all lines except the first.",
     restriction: "percentage, length",
     values: [],
     syntax: "<length-percentage> && hanging? && each-line?"
    }, {
     name: "text-justify",
     desc: "Selects the justification algorithm used when 'text-align' is set to 'justify'. The property applies to block containers, but the UA may (but is not required to) also support it on inline elements.",
     browsers: "E,IE5.5",
     restriction: "enum",
     values: [ {
      name: "auto",
      desc: "The UA determines the justification algorithm to follow, based on a balance between performance and adequate presentation quality."
     }, {
      name: "distribute",
      desc: "Justification primarily changes spacing both at word separators and at grapheme cluster boundaries in all scripts except those in the connected and cursive groups. This value is sometimes used in e.g. Japanese, often with the 'text-align-last' property."
     }, {
      name: "distribute-all-lines"
     }, {
      name: "inter-cluster"
     }, {
      name: "inter-ideograph"
     }, {
      name: "inter-word"
     }, {
      name: "kashida"
     }, {
      name: "newspaper"
     } ],
     syntax: "auto | inter-character | inter-word | none"
    }, {
     name: "text-orientation",
     desc: "Specifies the orientation of text within a line.",
     browsers: "C,O15,S5.1",
     restriction: "enum",
     values: [ {
      name: "sideways",
      browsers: "C25,O15,S6.1"
     }, {
      name: "sideways-right",
      browsers: "C25,O15,S6.1"
     }, {
      name: "upright"
     } ],
     syntax: "mixed | upright | sideways"
    }, {
     name: "text-overflow",
     desc: "Text can overflow for example when it is prevented from wrapping.",
     browsers: "E,C,FF9,IE5.5,O11.6,S2",
     restriction: "enum, string",
     values: [ {
      name: "clip"
     }, {
      name: "ellipsis"
     } ],
     syntax: "[ clip | ellipsis | <string> ]{1,2}"
    }, {
     name: "text-rendering",
     desc: "The creator of SVG content might want to provide a hint to the implementation about what tradeoffs to make as it renders text. The ‘text-rendering’ property provides these hints.",
     browsers: "C,FF3,O9,S5",
     restriction: "enum",
     values: [ {
      name: "auto"
     }, {
      name: "geometricPrecision",
      desc: "Indicates that the user agent shall emphasize geometric precision over legibility and rendering speed."
     }, {
      name: "optimizeLegibility"
     }, {
      name: "optimizeSpeed",
      desc: "Indicates that the user agent shall emphasize rendering speed over legibility and geometric precision."
     } ],
     syntax: "auto | optimizeSpeed | optimizeLegibility | geometricPrecision"
    }, {
     name: "text-shadow",
     desc: "Enables shadow effects to be applied to the text of the element.",
     browsers: "E,C,FF3.6,IE10,O9.5,S1.1",
     restriction: "length, color",
     values: [],
     syntax: "none | <shadow-t>#"
    }, {
     name: "text-transform",
     desc: "Controls capitalization effects of an element’s text.",
     restriction: "enum",
     values: [ {
      name: "capitalize"
     }, {
      name: "lowercase"
     }, {
      name: "none",
      desc: "No effects."
     }, {
      name: "uppercase"
     } ],
     syntax: "none | capitalize | uppercase | lowercase | full-width"
    }, {
     name: "text-underline-position",
     desc: "Sets the position of an underline specified on the same element: it does not affect underlines specified by ancestor elements. This property is typically used in vertical writing contexts such as in Japanese documents where it often desired to have the underline appear 'over' (to the right of) the affected run of text",
     browsers: "E,IE10",
     restriction: "enum",
     values: [ {
      name: "above"
     }, {
      name: "auto",
      desc: "The user agent may use any algorithm to determine the underline’s position. In horizontal line layout, the underline should be aligned as for alphabetic. In vertical line layout, if the language is set to Japanese or Korean, the underline should be aligned as for over."
     }, {
      name: "below",
      desc: "The underline is aligned with the under edge of the element’s content box."
     } ],
     syntax: "auto | [ under || [ left | right ] ]"
    }, {
     name: "top",
     desc: "Specifies how far an absolutely positioned box's top margin edge is offset below the top edge of the box's 'containing block'.",
     restriction: "length, percentage",
     values: [ {
      name: "auto",
      desc: "For non-replaced elements, the effect of this value depends on which of related properties have the value 'auto' as well"
     } ],
     syntax: "<length> | <percentage> | auto"
    }, {
     name: "touch-action",
     desc: "Determines whether touch input may trigger default behavior supplied by user agent.",
     browsers: "E,C36,IE11,O23",
     restriction: "enum",
     values: [ {
      name: "auto",
      desc: "The user agent may determine any permitted touch behaviors for touches that begin on the element."
     }, {
      name: "cross-slide-x",
      browsers: "E,IE11"
     }, {
      name: "cross-slide-y",
      browsers: "E,IE11"
     }, {
      name: "double-tap-zoom",
      browsers: "E,IE11"
     }, {
      name: "manipulation",
      desc: "The user agent may consider touches that begin on the element only for the purposes of scrolling and continuous zooming."
     }, {
      name: "none",
      desc: "Touches that begin on the element must not trigger default touch behaviors."
     }, {
      name: "pan-x",
      desc: "The user agent may consider touches that begin on the element only for the purposes of horizontally scrolling the element’s nearest ancestor with horizontally scrollable content."
     }, {
      name: "pan-y",
      desc: "The user agent may consider touches that begin on the element only for the purposes of vertically scrolling the element’s nearest ancestor with vertically scrollable content."
     }, {
      name: "pinch-zoom",
      browsers: "E,IE11"
     } ],
     syntax: "auto | none | [ [ pan-x | pan-left | pan-right ] || [ pan-y | pan-up | pan-down ] || pinch-zoom ] | manipulation"
    }, {
     name: "transform",
     desc: "A two-dimensional transformation is applied to an element through the 'transform' property. This property contains a list of transform functions similar to those allowed by SVG.",
     browsers: "E,C36,FF16,IE10,O12.1,S9",
     restriction: "enum",
     values: [ {
      name: "matrix()"
     }, {
      name: "matrix3d()"
     }, {
      name: "none"
     }, {
      name: "perspective()"
     }, {
      name: "rotate()"
     }, {
      name: "rotate3d()"
     }, {
      name: "rotateX('angle')"
     }, {
      name: "rotateY('angle')"
     }, {
      name: "rotateZ('angle')"
     }, {
      name: "scale()"
     }, {
      name: "scale3d()"
     }, {
      name: "scaleX()"
     }, {
      name: "scaleY()"
     }, {
      name: "scaleZ()"
     }, {
      name: "skew()"
     }, {
      name: "skewX()"
     }, {
      name: "skewY()"
     }, {
      name: "translate()"
     }, {
      name: "translate3d()"
     }, {
      name: "translateX()"
     }, {
      name: "translateY()"
     }, {
      name: "translateZ()"
     } ],
     syntax: "none | <transform-list>"
    }, {
     name: "transform-origin",
     desc: "Establishes the origin of transformation for an element.",
     browsers: "E,C36,FF16,IE10,O12.1,S9",
     restriction: "position, length, percentage",
     syntax: "[ <length-percentage> | left | center | right | top | bottom ] | [ [ <length-percentage> | left | center | right ] && [ <length-percentage> | top | center | bottom ] ] <length>?"
    }, {
     name: "transform-style",
     desc: "Defines how nested elements are rendered in 3D space.",
     browsers: "E,C36,FF16,IE10,O23,S9",
     restriction: "enum",
     values: [ {
      name: "flat"
     }, {
      name: "preserve-3d",
      browsers: "E,C36,FF16,O23,S9"
     } ],
     syntax: "flat | preserve-3d"
    }, {
     name: "transition",
     desc: "Shorthand property combines four of the transition properties into a single property.",
     browsers: "E,FF16,IE10,O12.5",
     restriction: "time, property, timing-function, enum",
     values: [ {
      name: "all",
      desc: "Every property that is able to undergo a transition will do so."
     }, {
      name: "none",
      desc: "No property will transition."
     } ],
     syntax: "<single-transition>#"
    }, {
     name: "transition-delay",
     desc: "Defines when the transition will start. It allows a transition to begin execution some period of time from when it is applied.",
     browsers: "E,FF16,IE10,O12.5",
     restriction: "time",
     syntax: "<time>#"
    }, {
     name: "transition-duration",
     desc: "Specifies how long the transition from the old value to the new value should take.",
     browsers: "E,FF16,IE10,O12.5",
     restriction: "time",
     syntax: "<time>#"
    }, {
     name: "transition-property",
     desc: "Specifies the name of the CSS property to which the transition is applied.",
     browsers: "E,FF16,IE10,O12.5",
     restriction: "property",
     values: [ {
      name: "all",
      desc: "Every property that is able to undergo a transition will do so."
     }, {
      name: "none",
      desc: "No property will transition."
     } ],
     syntax: "none | <single-transition-property>#"
    }, {
     name: "transition-timing-function",
     desc: "Describes how the intermediate values used during a transition will be calculated.",
     browsers: "E,FF16,IE10,O12.5",
     restriction: "timing-function",
     syntax: "<single-transition-timing-function>#"
    }, {
     name: "unicode-bidi",
     desc: "The level of embedding with respect to the bidirectional algorithm.",
     restriction: "enum",
     values: [ {
      name: "bidi-override"
     }, {
      name: "embed"
     }, {
      name: "isolate",
      desc: "The contents of the element are considered to be inside a separate, independent paragraph.",
      browsers: "C,FF10,O15,S5.1"
     }, {
      name: "isolate-override",
      browsers: "C,FF17,O15,S6.1"
     }, {
      name: "normal",
      desc: "The element does not open an additional level of embedding with respect to the bidirectional algorithm. For inline-level elements, implicit reordering works across element boundaries."
     }, {
      name: "plaintext",
      browsers: "C,FF10,O15,S6"
     } ],
     syntax: "normal | embed | isolate | bidi-override | isolate-override | plaintext"
    }, {
     name: "unicode-range",
     desc: "@font-face descriptor. Defines the set of Unicode codepoints that may be supported by the font face for which it is declared.",
     restriction: "unicode-range",
     values: [ {
      name: "U+26"
     }, {
      name: "U+20-24F, U+2B0-2FF, U+370-4FF, U+1E00-1EFF, U+2000-20CF, U+2100-23FF, U+2500-26FF, U+E000-F8FF, U+FB00–FB4F"
     }, {
      name: "U+20-17F, U+2B0-2FF, U+2000-206F, U+20A0-20CF, U+2100-21FF, U+2600-26FF"
     }, {
      name: "U+20-2FF, U+370-4FF, U+1E00-20CF, U+2100-23FF, U+2500-26FF, U+FB00-FB4F, U+FFF0-FFFD"
     }, {
      name: "U+20-4FF, U+530-58F, U+10D0-10FF, U+1E00-23FF, U+2440-245F, U+2500-26FF, U+FB00-FB4F, U+FE20-FE2F, U+FFF0-FFFD"
     }, {
      name: "U+00-7F"
     }, {
      name: "U+80-FF"
     }, {
      name: "U+100-17F"
     }, {
      name: "U+180-24F"
     }, {
      name: "U+1E00-1EFF"
     }, {
      name: "U+250-2AF"
     }, {
      name: "U+370-3FF"
     }, {
      name: "U+1F00-1FFF"
     }, {
      name: "U+400-4FF"
     }, {
      name: "U+500-52F"
     }, {
      name: "U+00-52F, U+1E00-1FFF, U+2200–22FF"
     }, {
      name: "U+530–58F"
     }, {
      name: "U+590–5FF"
     }, {
      name: "U+600–6FF"
     }, {
      name: "U+750–77F"
     }, {
      name: "U+8A0–8FF"
     }, {
      name: "U+700–74F"
     }, {
      name: "U+900–97F"
     }, {
      name: "U+980–9FF"
     }, {
      name: "U+A00–A7F"
     }, {
      name: "U+A80–AFF"
     }, {
      name: "U+B00–B7F"
     }, {
      name: "U+B80–BFF"
     }, {
      name: "U+C00–C7F"
     }, {
      name: "U+C80–CFF"
     }, {
      name: "U+D00–D7F"
     }, {
      name: "U+D80–DFF"
     }, {
      name: "U+118A0–118FF"
     }, {
      name: "U+E00–E7F"
     }, {
      name: "U+1A20–1AAF"
     }, {
      name: "U+AA80–AADF"
     }, {
      name: "U+E80–EFF"
     }, {
      name: "U+F00–FFF"
     }, {
      name: "U+1000–109F"
     }, {
      name: "U+10A0–10FF"
     }, {
      name: "U+1200–137F"
     }, {
      name: "U+1380–139F"
     }, {
      name: "U+2D80–2DDF"
     }, {
      name: "U+AB00–AB2F"
     }, {
      name: "U+1780–17FF"
     }, {
      name: "U+1800–18AF"
     }, {
      name: "U+1B80–1BBF"
     }, {
      name: "U+1CC0–1CCF"
     }, {
      name: "U+4E00–9FD5"
     }, {
      name: "U+3400–4DB5"
     }, {
      name: "U+2F00–2FDF"
     }, {
      name: "U+2E80–2EFF"
     }, {
      name: "U+1100–11FF"
     }, {
      name: "U+AC00–D7AF"
     }, {
      name: "U+3040–309F"
     }, {
      name: "U+30A0–30FF"
     }, {
      name: "U+A5, U+4E00-9FFF, U+30??, U+FF00-FF9F"
     }, {
      name: "U+A4D0–A4FF"
     }, {
      name: "U+A000–A48F"
     }, {
      name: "U+A490–A4CF"
     }, {
      name: "U+2000-206F"
     }, {
      name: "U+3000–303F"
     }, {
      name: "U+2070–209F"
     }, {
      name: "U+20A0–20CF"
     }, {
      name: "U+2100–214F"
     }, {
      name: "U+2150–218F"
     }, {
      name: "U+2190–21FF"
     }, {
      name: "U+2200–22FF"
     }, {
      name: "U+2300–23FF"
     }, {
      name: "U+E000-F8FF"
     }, {
      name: "U+FB00–FB4F"
     }, {
      name: "U+FB50–FDFF"
     }, {
      name: "U+1F600–1F64F"
     }, {
      name: "U+2600–26FF"
     }, {
      name: "U+1F300–1F5FF"
     }, {
      name: "U+1F900–1F9FF"
     }, {
      name: "U+1F680–1F6FF"
     } ],
     syntax: "<unicode-range>#"
    }, {
     name: "user-select",
     desc: "Controls the appearance of selection.",
     restriction: "enum",
     values: [ {
      name: "all",
      desc: "The content of the element must be selected atomically"
     }, {
      name: "auto"
     }, {
      name: "contain",
      desc: "UAs must not allow a selection which is started in this element to be extended outside of this element."
     }, {
      name: "none",
      desc: "The UA must not allow selections to be started in this element."
     }, {
      name: "text",
      desc: "The element imposes no constraint on the selection."
     } ],
     status: "n",
     syntax: "auto | text | none | contain | all"
    }, {
     name: "vertical-align",
     desc: "Affects the vertical positioning of the inline boxes generated by an inline-level element inside a line box.",
     restriction: "percentage, length",
     values: [ {
      name: "auto",
      desc: "Align the dominant baseline of the parent box with the equivalent, or heuristically reconstructed, baseline of the element inline box."
     }, {
      name: "baseline",
      desc: "Align the 'alphabetic' baseline of the element with the 'alphabetic' baseline of the parent element."
     }, {
      name: "bottom",
      desc: "Align the after edge of the extended inline box with the after-edge of the line box."
     }, {
      name: "middle",
      desc: "Align the 'middle' baseline of the inline element with the middle baseline of the parent."
     }, {
      name: "sub",
      desc: "Lower the baseline of the box to the proper position for subscripts of the parent's box. (This value has no effect on the font size of the element's text.)"
     }, {
      name: "super",
      desc: "Raise the baseline of the box to the proper position for superscripts of the parent's box. (This value has no effect on the font size of the element's text.)"
     }, {
      name: "text-bottom"
     }, {
      name: "text-top"
     }, {
      name: "top",
      desc: "Align the before edge of the extended inline box with the before-edge of the line box."
     }, {
      name: "-webkit-baseline-middle",
      browsers: "C,S1"
     } ],
     syntax: "baseline | sub | super | text-top | text-bottom | middle | top | bottom | <percentage> | <length>"
    }, {
     name: "visibility",
     desc: "Specifies whether the boxes generated by an element are rendered. Invisible boxes still affect layout (set the ‘display’ property to ‘none’ to suppress box generation altogether).",
     restriction: "enum",
     values: [ {
      name: "collapse",
      desc: "Table-specific. If used on elements other than rows, row groups, columns, or column groups, 'collapse' has the same meaning as 'hidden'."
     }, {
      name: "hidden",
      desc: "The generated box is invisible (fully transparent, nothing is drawn), but still affects layout."
     }, {
      name: "visible",
      desc: "The generated box is visible."
     } ],
     syntax: "visible | hidden | collapse"
    }, {
     name: "-webkit-animation",
     desc: "Shorthand property combines six of the animation properties into a single property.",
     browsers: "C,S5",
     restriction: "time, enum, timing-function, identifier, number",
     values: [ {
      name: "alternate"
     }, {
      name: "alternate-reverse"
     }, {
      name: "backwards"
     }, {
      name: "both",
      desc: "Both forwards and backwards fill modes are applied."
     }, {
      name: "forwards"
     }, {
      name: "infinite",
      desc: "Causes the animation to repeat forever."
     }, {
      name: "none",
      desc: "No animation is performed"
     }, {
      name: "normal",
      desc: "Normal playback."
     }, {
      name: "reverse",
      desc: "All iterations of the animation are played in the reverse direction from the way they were specified."
     } ]
    }, {
     name: "-webkit-animation-delay",
     desc: "Defines when the animation will start.",
     browsers: "C,S5",
     restriction: "time"
    }, {
     name: "-webkit-animation-direction",
     desc: "Defines whether or not the animation should play in reverse on alternate cycles.",
     browsers: "C,S5",
     restriction: "enum",
     values: [ {
      name: "alternate"
     }, {
      name: "alternate-reverse"
     }, {
      name: "normal",
      desc: "Normal playback."
     }, {
      name: "reverse",
      desc: "All iterations of the animation are played in the reverse direction from the way they were specified."
     } ]
    }, {
     name: "-webkit-animation-duration",
     desc: "Defines the length of time that an animation takes to complete one cycle.",
     browsers: "C,S5",
     restriction: "time"
    }, {
     name: "-webkit-animation-fill-mode",
     desc: "Defines what values are applied by the animation outside the time it is executing.",
     browsers: "C,S5",
     restriction: "enum",
     values: [ {
      name: "backwards"
     }, {
      name: "both",
      desc: "Both forwards and backwards fill modes are applied."
     }, {
      name: "forwards"
     }, {
      name: "none",
      desc: "There is no change to the property value between the time the animation is applied and the time the animation begins playing or after the animation completes."
     } ]
    }, {
     name: "-webkit-animation-iteration-count",
     desc: "Defines the number of times an animation cycle is played. The default value is one, meaning the animation will play from beginning to end once.",
     browsers: "C,S5",
     restriction: "number, enum",
     values: [ {
      name: "infinite",
      desc: "Causes the animation to repeat forever."
     } ]
    }, {
     name: "-webkit-animation-name",
     desc: "Defines a list of animations that apply. Each name is used to select the keyframe at-rule that provides the property values for the animation.",
     browsers: "C,S5",
     restriction: "identifier, enum",
     values: [ {
      name: "none",
      desc: "No animation is performed"
     } ]
    }, {
     name: "-webkit-animation-play-state",
     desc: "Defines whether the animation is running or paused.",
     browsers: "C,S5",
     restriction: "enum",
     values: [ {
      name: "paused"
     }, {
      name: "running"
     } ]
    }, {
     name: "-webkit-animation-timing-function",
     desc: "Describes how the animation will progress over one cycle of its duration. See the 'transition-timing-function'.",
     browsers: "C,S5",
     restriction: "timing-function"
    }, {
     name: "-webkit-appearance",
     desc: "Changes the appearance of buttons and other controls to resemble native controls.",
     browsers: "C,S3",
     restriction: "enum",
     values: [ {
      name: "button"
     }, {
      name: "button-bevel"
     }, {
      name: "caps-lock-indicator"
     }, {
      name: "caret"
     }, {
      name: "checkbox"
     }, {
      name: "default-button"
     }, {
      name: "listbox"
     }, {
      name: "listitem"
     }, {
      name: "media-fullscreen-button"
     }, {
      name: "media-mute-button"
     }, {
      name: "media-play-button"
     }, {
      name: "media-seek-back-button"
     }, {
      name: "media-seek-forward-button"
     }, {
      name: "media-slider"
     }, {
      name: "media-sliderthumb"
     }, {
      name: "menulist"
     }, {
      name: "menulist-button"
     }, {
      name: "menulist-text"
     }, {
      name: "menulist-textfield"
     }, {
      name: "none"
     }, {
      name: "push-button"
     }, {
      name: "radio"
     }, {
      name: "scrollbarbutton-down"
     }, {
      name: "scrollbarbutton-left"
     }, {
      name: "scrollbarbutton-right"
     }, {
      name: "scrollbarbutton-up"
     }, {
      name: "scrollbargripper-horizontal"
     }, {
      name: "scrollbargripper-vertical"
     }, {
      name: "scrollbarthumb-horizontal"
     }, {
      name: "scrollbarthumb-vertical"
     }, {
      name: "scrollbartrack-horizontal"
     }, {
      name: "scrollbartrack-vertical"
     }, {
      name: "searchfield"
     }, {
      name: "searchfield-cancel-button"
     }, {
      name: "searchfield-decoration"
     }, {
      name: "searchfield-results-button"
     }, {
      name: "searchfield-results-decoration"
     }, {
      name: "slider-horizontal"
     }, {
      name: "sliderthumb-horizontal"
     }, {
      name: "sliderthumb-vertical"
     }, {
      name: "slider-vertical"
     }, {
      name: "square-button"
     }, {
      name: "textarea"
     }, {
      name: "textfield"
     } ]
    }, {
     name: "-webkit-backdrop-filter",
     desc: "Applies a filter effect where the first filter in the list takes the element's background image as the input image.",
     browsers: "S9",
     restriction: "enum, url",
     values: [ {
      name: "none",
      desc: "No filter effects are applied."
     }, {
      name: "blur()"
     }, {
      name: "brightness()"
     }, {
      name: "contrast()"
     }, {
      name: "drop-shadow()"
     }, {
      name: "grayscale()"
     }, {
      name: "hue-rotate()"
     }, {
      name: "invert()"
     }, {
      name: "opacity()"
     }, {
      name: "saturate()"
     }, {
      name: "sepia()"
     }, {
      name: "url()",
      desc: "A filter reference to a <filter> element."
     } ]
    }, {
     name: "-webkit-backface-visibility",
     desc: "Determines whether or not the 'back' side of a transformed element is visible when facing the viewer. With an identity transform, the front side of an element faces the viewer.",
     browsers: "C,S5",
     restriction: "enum",
     values: [ {
      name: "hidden"
     }, {
      name: "visible"
     } ]
    }, {
     name: "-webkit-background-clip",
     desc: "Determines the background painting area.",
     browsers: "C,S3",
     restriction: "box"
    }, {
     name: "-webkit-background-composite",
     browsers: "C,S3",
     restriction: "enum",
     values: [ {
      name: "border"
     }, {
      name: "padding"
     } ]
    }, {
     name: "-webkit-background-origin",
     desc: "For elements rendered as a single box, specifies the background positioning area. For elements rendered as multiple boxes (e.g., inline boxes on several lines, boxes on several pages) specifies which boxes 'box-decoration-break' operates on to determine the background positioning area(s).",
     browsers: "C,S3",
     restriction: "box"
    }, {
     name: "-webkit-border-image",
     desc: "Shorthand property for setting 'border-image-source', 'border-image-slice', 'border-image-width', 'border-image-outset' and 'border-image-repeat'. Omitted values are set to their initial values.",
     browsers: "C,S5",
     restriction: "length, percentage, number, url, enum",
     values: [ {
      name: "auto",
      desc: "If 'auto' is specified then the border image width is the intrinsic width or height (whichever is applicable) of the corresponding image slice. If the image does not have the required intrinsic dimension then the corresponding border-width is used instead."
     }, {
      name: "fill",
      desc: "Causes the middle part of the border-image to be preserved."
     }, {
      name: "none"
     }, {
      name: "repeat"
     }, {
      name: "round",
      desc: "The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the image is rescaled so that it does."
     }, {
      name: "space",
      desc: "The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the extra space is distributed around the tiles."
     }, {
      name: "stretch",
      desc: "The image is stretched to fill the area."
     }, {
      name: "url()"
     } ]
    }, {
     name: "-webkit-box-align",
     desc: "Specifies the alignment of nested elements within an outer flexible box element.",
     browsers: "C,S3",
     restriction: "enum",
     values: [ {
      name: "baseline",
      desc: "If this box orientation is inline-axis or horizontal, all children are placed with their baselines aligned, and extra space placed before or after as necessary. For block flows, the baseline of the first non-empty line box located within the element is used. For tables, the baseline of the first cell is used."
     }, {
      name: "center",
      desc: "Any extra space is divided evenly, with half placed above the child and the other half placed after the child."
     }, {
      name: "end",
      desc: "For normal direction boxes, the bottom edge of each child is placed along the bottom of the box. Extra space is placed above the element. For reverse direction boxes, the top edge of each child is placed along the top of the box. Extra space is placed below the element."
     }, {
      name: "start",
      desc: "For normal direction boxes, the top edge of each child is placed along the top of the box. Extra space is placed below the element. For reverse direction boxes, the bottom edge of each child is placed along the bottom of the box. Extra space is placed above the element."
     }, {
      name: "stretch",
      desc: "The height of each child is adjusted to that of the containing block."
     } ]
    }, {
     name: "-webkit-box-direction",
     desc: "In webkit applications, -webkit-box-direction specifies whether a box lays out its contents normally (from the top or left edge), or in reverse (from the bottom or right edge).",
     browsers: "C,S3",
     restriction: "enum",
     values: [ {
      name: "normal",
      desc: "A box with a computed value of horizontal for box-orient displays its children from left to right. A box with a computed value of vertical displays its children from top to bottom."
     }, {
      name: "reverse",
      desc: "A box with a computed value of horizontal for box-orient displays its children from right to left. A box with a computed value of vertical displays its children from bottom to top."
     } ]
    }, {
     name: "-webkit-box-flex",
     desc: "Specifies an element's flexibility.",
     browsers: "C,S3",
     restriction: "number"
    }, {
     name: "-webkit-box-flex-group",
     desc: "Flexible elements can be assigned to flex groups using the 'box-flex-group' property.",
     browsers: "C,S3",
     restriction: "integer"
    }, {
     name: "-webkit-box-ordinal-group",
     desc: "Indicates the ordinal group the element belongs to. Elements with a lower ordinal group are displayed before those with a higher ordinal group.",
     browsers: "C,S3",
     restriction: "integer"
    }, {
     name: "-webkit-box-orient",
     desc: "In webkit applications, -webkit-box-orient specifies whether a box lays out its contents horizontally or vertically.",
     browsers: "C,S3",
     restriction: "enum",
     values: [ {
      name: "block-axis"
     }, {
      name: "horizontal",
      desc: "The box displays its children from left to right in a horizontal line."
     }, {
      name: "inline-axis"
     }, {
      name: "vertical",
      desc: "The box displays its children from stacked from top to bottom vertically."
     } ]
    }, {
     name: "-webkit-box-pack",
     desc: "Specifies alignment of child elements within the current element in the direction of orientation.",
     browsers: "C,S3",
     restriction: "enum",
     values: [ {
      name: "center",
      desc: "The extra space is divided evenly, with half placed before the first child and the other half placed after the last child."
     }, {
      name: "end",
      desc: "For normal direction boxes, the right edge of the last child is placed at the right side, with all extra space placed before the first child. For reverse direction boxes, the left edge of the first child is placed at the left side, with all extra space placed after the last child."
     }, {
      name: "justify",
      desc: "The space is divided evenly in-between each child, with none of the extra space placed before the first child or after the last child. If there is only one child, treat the pack value as if it were start."
     }, {
      name: "start",
      desc: "For normal direction boxes, the left edge of the first child is placed at the left side, with all extra space placed after the last child. For reverse direction boxes, the right edge of the last child is placed at the right side, with all extra space placed before the first child."
     } ]
    }, {
     name: "-webkit-box-reflect",
     desc: "Defines a reflection of a border box.",
     browsers: "C,S4",
     values: [ {
      name: "above",
      desc: "The reflection appears above the border box."
     }, {
      name: "below",
      desc: "The reflection appears below the border box."
     }, {
      name: "left",
      desc: "The reflection appears to the left of the border box."
     }, {
      name: "right",
      desc: "The reflection appears to the right of the border box."
     } ],
     status: "n",
     syntax: "[ above | below | right | left ]? <length>? <image>?"
    }, {
     name: "-webkit-box-sizing",
     desc: "Box Model addition in CSS3.",
     browsers: "C,S3",
     restriction: "enum",
     values: [ {
      name: "border-box"
     }, {
      name: "content-box"
     } ]
    }, {
     name: "-webkit-break-after",
     desc: "Describes the page/column break behavior before the generated box.",
     browsers: "S7",
     restriction: "enum",
     values: [ {
      name: "always",
      desc: "Always force a page break before/after the generated box."
     }, {
      name: "auto",
      desc: "Neither force nor forbid a page/column break before/after the generated box."
     }, {
      name: "avoid",
      desc: "Avoid a page/column break before/after the generated box."
     }, {
      name: "avoid-column",
      desc: "Avoid a column break before/after the generated box."
     }, {
      name: "avoid-page",
      desc: "Avoid a page break before/after the generated box."
     }, {
      name: "avoid-region"
     }, {
      name: "column",
      desc: "Always force a column break before/after the generated box."
     }, {
      name: "left",
      desc: "Force one or two page breaks before/after the generated box so that the next page is formatted as a left page."
     }, {
      name: "page",
      desc: "Always force a page break before/after the generated box."
     }, {
      name: "region"
     }, {
      name: "right",
      desc: "Force one or two page breaks before/after the generated box so that the next page is formatted as a right page."
     } ]
    }, {
     name: "-webkit-break-before",
     desc: "Describes the page/column break behavior before the generated box.",
     browsers: "S7",
     restriction: "enum",
     values: [ {
      name: "always",
      desc: "Always force a page break before/after the generated box."
     }, {
      name: "auto",
      desc: "Neither force nor forbid a page/column break before/after the generated box."
     }, {
      name: "avoid",
      desc: "Avoid a page/column break before/after the generated box."
     }, {
      name: "avoid-column",
      desc: "Avoid a column break before/after the generated box."
     }, {
      name: "avoid-page",
      desc: "Avoid a page break before/after the generated box."
     }, {
      name: "avoid-region"
     }, {
      name: "column",
      desc: "Always force a column break before/after the generated box."
     }, {
      name: "left",
      desc: "Force one or two page breaks before/after the generated box so that the next page is formatted as a left page."
     }, {
      name: "page",
      desc: "Always force a page break before/after the generated box."
     }, {
      name: "region"
     }, {
      name: "right",
      desc: "Force one or two page breaks before/after the generated box so that the next page is formatted as a right page."
     } ]
    }, {
     name: "-webkit-break-inside",
     desc: "Describes the page/column break behavior inside the generated box.",
     browsers: "S7",
     restriction: "enum",
     values: [ {
      name: "auto",
      desc: "Neither force nor forbid a page/column break inside the generated box."
     }, {
      name: "avoid",
      desc: "Avoid a page/column break inside the generated box."
     }, {
      name: "avoid-column",
      desc: "Avoid a column break inside the generated box."
     }, {
      name: "avoid-page",
      desc: "Avoid a page break inside the generated box."
     }, {
      name: "avoid-region"
     } ]
    }, {
     name: "-webkit-column-break-after",
     desc: "Describes the page/column break behavior before the generated box.",
     browsers: "C,S3",
     restriction: "enum",
     values: [ {
      name: "always",
      desc: "Always force a page break before/after the generated box."
     }, {
      name: "auto",
      desc: "Neither force nor forbid a page/column break before/after the generated box."
     }, {
      name: "avoid",
      desc: "Avoid a page/column break before/after the generated box."
     }, {
      name: "avoid-column",
      desc: "Avoid a column break before/after the generated box."
     }, {
      name: "avoid-page",
      desc: "Avoid a page break before/after the generated box."
     }, {
      name: "avoid-region"
     }, {
      name: "column",
      desc: "Always force a column break before/after the generated box."
     }, {
      name: "left",
      desc: "Force one or two page breaks before/after the generated box so that the next page is formatted as a left page."
     }, {
      name: "page",
      desc: "Always force a page break before/after the generated box."
     }, {
      name: "region"
     }, {
      name: "right",
      desc: "Force one or two page breaks before/after the generated box so that the next page is formatted as a right page."
     } ]
    }, {
     name: "-webkit-column-break-before",
     desc: "Describes the page/column break behavior before the generated box.",
     browsers: "C,S3",
     restriction: "enum",
     values: [ {
      name: "always",
      desc: "Always force a page break before/after the generated box."
     }, {
      name: "auto",
      desc: "Neither force nor forbid a page/column break before/after the generated box."
     }, {
      name: "avoid",
      desc: "Avoid a page/column break before/after the generated box."
     }, {
      name: "avoid-column",
      desc: "Avoid a column break before/after the generated box."
     }, {
      name: "avoid-page",
      desc: "Avoid a page break before/after the generated box."
     }, {
      name: "avoid-region"
     }, {
      name: "column",
      desc: "Always force a column break before/after the generated box."
     }, {
      name: "left",
      desc: "Force one or two page breaks before/after the generated box so that the next page is formatted as a left page."
     }, {
      name: "page",
      desc: "Always force a page break before/after the generated box."
     }, {
      name: "region"
     }, {
      name: "right",
      desc: "Force one or two page breaks before/after the generated box so that the next page is formatted as a right page."
     } ]
    }, {
     name: "-webkit-column-break-inside",
     desc: "Describes the page/column break behavior inside the generated box.",
     browsers: "C,S3",
     restriction: "enum",
     values: [ {
      name: "auto",
      desc: "Neither force nor forbid a page/column break inside the generated box."
     }, {
      name: "avoid",
      desc: "Avoid a page/column break inside the generated box."
     }, {
      name: "avoid-column",
      desc: "Avoid a column break inside the generated box."
     }, {
      name: "avoid-page",
      desc: "Avoid a page break inside the generated box."
     }, {
      name: "avoid-region"
     } ]
    }, {
     name: "-webkit-column-count",
     desc: "Describes the optimal number of columns into which the content of the element will be flowed.",
     browsers: "C,S3",
     restriction: "integer",
     values: [ {
      name: "auto",
      desc: "Determines the number of columns by the 'column-width' property and the element width."
     } ]
    }, {
     name: "-webkit-column-gap",
     desc: "Sets the gap between columns. If there is a column rule between columns, it will appear in the middle of the gap.",
     browsers: "C,S3",
     restriction: "length",
     values: [ {
      name: "normal",
      desc: "User agent specific and typically equivalent to 1em."
     } ]
    }, {
     name: "-webkit-column-rule",
     desc: "This property is a shorthand for setting 'column-rule-width', 'column-rule-style', and 'column-rule-color' at the same place in the style sheet. Omitted values are set to their initial values.",
     browsers: "C,S3",
     restriction: "length, line-width, line-style, color"
    }, {
     name: "-webkit-column-rule-color",
     desc: "Sets the color of the column rule",
     browsers: "C,S3",
     restriction: "color"
    }, {
     name: "-webkit-column-rule-style",
     desc: "Sets the style of the rule between columns of an element.",
     browsers: "C,S3",
     restriction: "line-style"
    }, {
     name: "-webkit-column-rule-width",
     desc: "Sets the width of the rule between columns. Negative values are not allowed.",
     browsers: "C,S3",
     restriction: "length, line-width"
    }, {
     name: "-webkit-columns",
     desc: "A shorthand property which sets both 'column-width' and 'column-count'.",
     browsers: "C,S3",
     restriction: "length, integer",
     values: [ {
      name: "auto",
      desc: "The width depends on the values of other properties."
     } ]
    }, {
     name: "-webkit-column-span",
     desc: "Describes the page/column break behavior after the generated box.",
     browsers: "C,S3",
     restriction: "enum",
     values: [ {
      name: "all",
      desc: "The element spans across all columns. Content in the normal flow that appears before the element is automatically balanced across all columns before the element appear."
     }, {
      name: "none",
      desc: "The element does not span multiple columns."
     } ]
    }, {
     name: "-webkit-column-width",
     desc: "This property describes the width of columns in multicol elements.",
     browsers: "C,S3",
     restriction: "length",
     values: [ {
      name: "auto",
      desc: "The width depends on the values of other properties."
     } ]
    }, {
     name: "-webkit-filter",
     desc: "Processes an element’s rendering before it is displayed in the document, by applying one or more filter effects.",
     browsers: "C18,O15,S6",
     restriction: "enum, url",
     values: [ {
      name: "none",
      desc: "No filter effects are applied."
     }, {
      name: "blur()"
     }, {
      name: "brightness()"
     }, {
      name: "contrast()"
     }, {
      name: "drop-shadow()"
     }, {
      name: "grayscale()"
     }, {
      name: "hue-rotate()"
     }, {
      name: "invert()"
     }, {
      name: "opacity()"
     }, {
      name: "saturate()"
     }, {
      name: "sepia()"
     }, {
      name: "url()",
      desc: "A filter reference to a <filter> element."
     } ]
    }, {
     name: "-webkit-flow-from",
     desc: "Makes a block container a region and associates it with a named flow.",
     browsers: "S6.1",
     restriction: "identifier",
     values: [ {
      name: "none",
      desc: "The block container is not a CSS Region."
     } ]
    }, {
     name: "-webkit-flow-into",
     desc: "Places an element or its contents into a named flow.",
     browsers: "S6.1",
     restriction: "identifier",
     values: [ {
      name: "none",
      desc: "The element is not moved to a named flow and normal CSS processing takes place."
     } ]
    }, {
     name: "-webkit-font-feature-settings",
     desc: "This property provides low-level control over OpenType font features. It is intended as a way of providing access to font features that are not widely used but are needed for a particular use case.",
     browsers: "C16",
     restriction: "string, integer",
     values: [ {
      name: '"c2cs"'
     }, {
      name: '"dlig"'
     }, {
      name: '"kern"'
     }, {
      name: '"liga"'
     }, {
      name: '"lnum"'
     }, {
      name: '"onum"'
     }, {
      name: '"smcp"'
     }, {
      name: '"swsh"'
     }, {
      name: '"tnum"'
     }, {
      name: "normal",
      desc: "No change in glyph substitution or positioning occurs."
     }, {
      name: "off"
     }, {
      name: "on"
     } ]
    }, {
     name: "-webkit-hyphens",
     desc: "Controls whether hyphenation is allowed to create more break opportunities within a line of text.",
     browsers: "S5.1",
     restriction: "enum",
     values: [ {
      name: "auto",
      desc: "Conditional hyphenation characters inside a word, if present, take priority over automatic resources when determining hyphenation points within the word."
     }, {
      name: "manual"
     }, {
      name: "none",
      desc: "Words are not broken at line breaks, even if characters inside the word suggest line break points."
     } ]
    }, {
     name: "-webkit-line-break",
     desc: "Specifies line-breaking rules for CJK (Chinese, Japanese, and Korean) text.",
     browsers: "C,S3",
     values: [ {
      name: "after-white-space"
     }, {
      name: "normal"
     } ]
    }, {
     name: "-webkit-margin-bottom-collapse",
     browsers: "C,S3",
     restriction: "enum",
     values: [ {
      name: "collapse"
     }, {
      name: "discard"
     }, {
      name: "separate"
     } ]
    }, {
     name: "-webkit-margin-collapse",
     browsers: "C,S3",
     restriction: "enum",
     values: [ {
      name: "collapse"
     }, {
      name: "discard"
     }, {
      name: "separate"
     } ]
    }, {
     name: "-webkit-margin-start",
     browsers: "C,S3",
     restriction: "percentage, length",
     values: [ {
      name: "auto"
     } ]
    }, {
     name: "-webkit-margin-top-collapse",
     browsers: "C,S3",
     restriction: "enum",
     values: [ {
      name: "collapse"
     }, {
      name: "discard"
     }, {
      name: "separate"
     } ]
    }, {
     name: "-webkit-mask-clip",
     desc: "Determines the mask painting area, which determines the area that is affected by the mask.",
     browsers: "C,O15,S4",
     restriction: "box",
     status: "n",
     syntax: "[ border | border-box | padding | padding-box | content | content-box | text ]#"
    }, {
     name: "-webkit-mask-image",
     desc: "Sets the mask layer image of an element.",
     browsers: "C,O15,S4",
     restriction: "url, image, enum",
     values: [ {
      name: "none",
      desc: "Counts as a transparent black image layer."
     }, {
      name: "url()",
      desc: "Reference to a <mask element or to a CSS image."
     } ],
     status: "n",
     syntax: "<mask-image> [, <mask-image> ]*"
    }, {
     name: "-webkit-mask-origin",
     desc: "Specifies the mask positioning area.",
     browsers: "C,O15,S4",
     restriction: "box",
     status: "n",
     syntax: "[ padding | border | content ] [, [ border | padding | content ] ]*"
    }, {
     name: "-webkit-mask-repeat",
     desc: "Specifies how mask layer images are tiled after they have been sized and positioned.",
     browsers: "C,O15,S4",
     restriction: "repeat",
     status: "n",
     syntax: "<repeat-style> [, <repeat-style> ]*"
    }, {
     name: "-webkit-mask-size",
     desc: "Specifies the size of the mask layer images.",
     browsers: "C,O15,S4",
     restriction: "length, percentage, enum",
     values: [ {
      name: "auto",
      desc: "Resolved by using the image’s intrinsic ratio and the size of the other dimension, or failing that, using the image’s intrinsic size, or failing that, treating it as 100%."
     }, {
      name: "contain",
      desc: "Scale the image, while preserving its intrinsic aspect ratio (if any), to the largest size such that both its width and its height can fit inside the background positioning area."
     }, {
      name: "cover",
      desc: "Scale the image, while preserving its intrinsic aspect ratio (if any), to the smallest size such that both its width and its height can completely cover the background positioning area."
     } ]
    }, {
     name: "-webkit-nbsp-mode",
     desc: "Defines the behavior of nonbreaking spaces within text.",
     browsers: "C,S3",
     values: [ {
      name: "normal"
     }, {
      name: "space"
     } ]
    }, {
     name: "-webkit-overflow-scrolling",
     desc: "Specifies whether to use native-style scrolling in an overflow:scroll element.",
     browsers: "C,S5",
     values: [ {
      name: "auto"
     }, {
      name: "touch"
     } ],
     status: "n",
     syntax: "auto | touch"
    }, {
     name: "-webkit-padding-start",
     browsers: "C,S3",
     restriction: "percentage, length"
    }, {
     name: "-webkit-perspective",
     desc: "Applies the same transform as the perspective(<number>) transform function, except that it applies only to the positioned or transformed children of the element, not to the transform on the element itself.",
     browsers: "C,S4",
     restriction: "length",
     values: [ {
      name: "none",
      desc: "No perspective transform is applied."
     } ]
    }, {
     name: "-webkit-perspective-origin",
     desc: "Establishes the origin for the perspective property. It effectively sets the X and Y position at which the viewer appears to be looking at the children of the element.",
     browsers: "C,S4",
     restriction: "position, percentage, length"
    }, {
     name: "-webkit-region-fragment",
     desc: "The 'region-fragment' property controls the behavior of the last region associated with a named flow.",
     browsers: "S7",
     restriction: "enum",
     values: [ {
      name: "auto",
      desc: "Content flows as it would in a regular content box."
     }, {
      name: "break"
     } ]
    }, {
     name: "-webkit-tap-highlight-color",
     browsers: "E,C,S3.1",
     restriction: "color",
     status: "n",
     syntax: "<color>"
    }, {
     name: "-webkit-text-fill-color",
     browsers: "E,C,S3",
     restriction: "color",
     status: "n",
     syntax: "<color>"
    }, {
     name: "-webkit-text-size-adjust",
     desc: "Specifies a size adjustment for displaying text content in mobile browsers.",
     browsers: "E,C,S3",
     restriction: "percentage",
     values: [ {
      name: "auto",
      desc: "Renderers must use the default size adjustment when displaying on a small device."
     }, {
      name: "none",
      desc: "Renderers must not do size adjustment when displaying on a small device."
     } ]
    }, {
     name: "-webkit-text-stroke",
     browsers: "S3",
     restriction: "length, line-width, color, percentage",
     status: "n",
     syntax: "<length> || <color>"
    }, {
     name: "-webkit-text-stroke-color",
     browsers: "S3",
     restriction: "color",
     status: "n",
     syntax: "<color>"
    }, {
     name: "-webkit-text-stroke-width",
     browsers: "S3",
     restriction: "length, line-width, percentage",
     status: "n",
     syntax: "<length>"
    }, {
     name: "-webkit-touch-callout",
     browsers: "S3",
     restriction: "enum",
     values: [ {
      name: "none"
     } ],
     status: "n",
     syntax: "default | none"
    }, {
     name: "-webkit-transform",
     desc: "A two-dimensional transformation is applied to an element through the 'transform' property. This property contains a list of transform functions similar to those allowed by SVG.",
     browsers: "C,O12,S3.1",
     restriction: "enum",
     values: [ {
      name: "matrix()"
     }, {
      name: "matrix3d()"
     }, {
      name: "none"
     }, {
      name: "perspective()"
     }, {
      name: "rotate()"
     }, {
      name: "rotate3d()"
     }, {
      name: "rotateX('angle')"
     }, {
      name: "rotateY('angle')"
     }, {
      name: "rotateZ('angle')"
     }, {
      name: "scale()"
     }, {
      name: "scale3d()"
     }, {
      name: "scaleX()"
     }, {
      name: "scaleY()"
     }, {
      name: "scaleZ()"
     }, {
      name: "skew()"
     }, {
      name: "skewX()"
     }, {
      name: "skewY()"
     }, {
      name: "translate()"
     }, {
      name: "translate3d()"
     }, {
      name: "translateX()"
     }, {
      name: "translateY()"
     }, {
      name: "translateZ()"
     } ]
    }, {
     name: "-webkit-transform-origin",
     desc: "Establishes the origin of transformation for an element.",
     browsers: "C,O15,S3.1",
     restriction: "position, length, percentage"
    }, {
     name: "-webkit-transform-origin-x",
     desc: "The x coordinate of the origin for transforms applied to an element with respect to its border box.",
     browsers: "C,S3.1",
     restriction: "length, percentage"
    }, {
     name: "-webkit-transform-origin-y",
     desc: "The y coordinate of the origin for transforms applied to an element with respect to its border box.",
     browsers: "C,S3.1",
     restriction: "length, percentage"
    }, {
     name: "-webkit-transform-origin-z",
     desc: "The z coordinate of the origin for transforms applied to an element with respect to its border box.",
     browsers: "C,S4",
     restriction: "length, percentage"
    }, {
     name: "-webkit-transform-style",
     desc: "Defines how nested elements are rendered in 3D space.",
     browsers: "C,S4",
     restriction: "enum",
     values: [ {
      name: "flat"
     } ]
    }, {
     name: "-webkit-transition",
     desc: "Shorthand property combines four of the transition properties into a single property.",
     browsers: "C,O12,S5",
     restriction: "time, property, timing-function, enum",
     values: [ {
      name: "all",
      desc: "Every property that is able to undergo a transition will do so."
     }, {
      name: "none",
      desc: "No property will transition."
     } ]
    }, {
     name: "-webkit-transition-delay",
     desc: "Defines when the transition will start. It allows a transition to begin execution some period of time from when it is applied.",
     browsers: "C,O12,S5",
     restriction: "time"
    }, {
     name: "-webkit-transition-duration",
     desc: "Specifies how long the transition from the old value to the new value should take.",
     browsers: "C,O12,S5",
     restriction: "time"
    }, {
     name: "-webkit-transition-property",
     desc: "Specifies the name of the CSS property to which the transition is applied.",
     browsers: "C,O12,S5",
     restriction: "property",
     values: [ {
      name: "all",
      desc: "Every property that is able to undergo a transition will do so."
     }, {
      name: "none",
      desc: "No property will transition."
     } ]
    }, {
     name: "-webkit-transition-timing-function",
     desc: "Describes how the intermediate values used during a transition will be calculated.",
     browsers: "C,O12,S5",
     restriction: "timing-function"
    }, {
     name: "-webkit-user-drag",
     browsers: "S3",
     restriction: "enum",
     values: [ {
      name: "auto"
     }, {
      name: "element"
     }, {
      name: "none"
     } ]
    }, {
     name: "-webkit-user-modify",
     desc: "Determines whether a user can edit the content of an element.",
     browsers: "C,S3",
     restriction: "enum",
     values: [ {
      name: "read-only"
     }, {
      name: "read-write"
     }, {
      name: "read-write-plaintext-only"
     } ],
     status: "n",
     syntax: "read-only | read-write | read-write-plaintext-only"
    }, {
     name: "-webkit-user-select",
     desc: "Controls the appearance of selection.",
     browsers: "C,S3",
     restriction: "enum",
     values: [ {
      name: "auto"
     }, {
      name: "none"
     }, {
      name: "text"
     } ]
    }, {
     name: "white-space",
     desc: "Shorthand property for the 'white-space-collapsing' and 'text-wrap' properties.",
     restriction: "enum",
     values: [ {
      name: "normal",
      desc: "Sets 'white-space-collapsing' to 'collapse' and 'text-wrap' to 'normal'."
     }, {
      name: "nowrap",
      desc: "Sets 'white-space-collapsing' to 'collapse' and 'text-wrap' to 'none'."
     }, {
      name: "pre"
     }, {
      name: "pre-line"
     }, {
      name: "pre-wrap"
     } ],
     syntax: "normal | pre | nowrap | pre-wrap | pre-line"
    }, {
     name: "widows",
     desc: "Specifies the minimum number of line boxes of a block container that must be left in a fragment after a break.",
     browsers: "C,IE8,O9.5,S1",
     restriction: "integer",
     syntax: "<integer>"
    }, {
     name: "width",
     desc: "Specifies the width of the content area, padding area or border area (depending on 'box-sizing') of certain boxes.",
     restriction: "length, percentage",
     values: [ {
      name: "auto",
      desc: "The width depends on the values of other properties."
     }, {
      name: "fit-content",
      browsers: "C46,O33"
     }, {
      name: "max-content",
      desc: "Use the max-content inline size or max-content block size, as appropriate to the writing mode.",
      browsers: "C46,O33"
     }, {
      name: "min-content",
      desc: "Use the min-content inline size or min-content block size, as appropriate to the writing mode.",
      browsers: "C46,O33"
     } ],
     syntax: "<viewport-length>{1,2}"
    }, {
     name: "will-change",
     desc: "Provides a rendering hint to the user agent, stating what kinds of changes the author expects to perform on the element.",
     browsers: "C36,FF36,O24",
     restriction: "enum, identifier",
     values: [ {
      name: "auto",
      desc: "Expresses no particular intent."
     }, {
      name: "contents",
      desc: "Indicates that the author expects to animate or change something about the element’s contents in the near future."
     }, {
      name: "scroll-position"
     } ],
     syntax: "auto | <animateable-feature>#"
    }, {
     name: "word-break",
     desc: "Specifies line break opportunities for non-CJK scripts.",
     browsers: "E,C,FF15,IE5,S3",
     restriction: "enum",
     values: [ {
      name: "break-all"
     }, {
      name: "keep-all",
      desc: "Block characters can no longer create implied break points."
     }, {
      name: "normal",
      desc: "Breaks non-CJK scripts according to their own rules."
     } ],
     syntax: "normal | break-all | keep-all | break-word"
    }, {
     name: "word-spacing",
     desc: "Specifies additional spacing between “words”.",
     restriction: "length, percentage",
     values: [ {
      name: "normal",
      desc: "No additional spacing is applied. Computes to zero."
     } ],
     syntax: "normal | <length-percentage>"
    }, {
     name: "word-wrap",
     desc: "Specifies whether the UA may break within a word to prevent overflow when an otherwise-unbreakable string is too long to fit.",
     restriction: "enum",
     values: [ {
      name: "break-word",
      desc: "An otherwise unbreakable sequence of characters may be broken at an arbitrary point if there are no otherwise-acceptable break points in the line."
     }, {
      name: "normal",
      desc: "Lines may break only at allowed break points."
     } ],
     syntax: "normal | break-word"
    }, {
     name: "writing-mode",
     desc: "This is a shorthand property for both 'direction' and 'block-progression'.",
     browsers: "E,FF41",
     restriction: "enum",
     values: [ {
      name: "horizontal-tb"
     }, {
      name: "sideways-lr",
      browsers: "FF43"
     }, {
      name: "sideways-rl",
      browsers: "FF43"
     }, {
      name: "vertical-lr"
     }, {
      name: "vertical-rl"
     } ],
     syntax: "horizontal-tb | vertical-rl | vertical-lr | sideways-rl | sideways-lr"
    }, {
     name: "z-index",
     desc: "For a positioned box, the 'z-index' property specifies the stack level of the box in the current stacking context and whether the box establishes a local stacking context.",
     restriction: "integer",
     values: [ {
      name: "auto",
      desc: "The stack level of the generated box in the current stacking context is 0. The box does not establish a new stacking context unless it is the root element."
     } ],
     syntax: "auto | <integer>"
    }, {
     name: "zoom",
     desc: "Non-standard. Specifies the magnification scale of the object. See 'transform: scale()' for a standards-based alternative.",
     browsers: "E,C,IE6,O15,S4",
     restriction: "enum, integer, number, percentage",
     values: [ {
      name: "normal"
     } ],
     syntax: "auto | <number> | <percentage>"
    }, {
     name: "-ms-ime-align",
     desc: "Aligns the Input Method Editor (IME) candidate window box relative to the element on which the IME composition is active.",
     restriction: "none",
     status: "n",
     syntax: "auto | after"
    }, {
     name: "-moz-binding",
     desc: "The -moz-binding CSS property is used by Mozilla-based applications to attach an XBL binding to a DOM element.",
     restriction: "none",
     status: "n",
     syntax: "<url> | none"
    }, {
     name: "-moz-context-properties",
     desc: "If you reference an SVG image in a webpage (such as with the <img> element or as a background image), the SVG image can coordinate with the embedding element (its context) to have the image adopt property values set on the embedding element. To do this the embedding element needs to list the properties that are to be made available to the image by listing them as values of the -moz-context-properties property, and the image needs to opt in to using those properties by using values such as the context-fill value.\n\nThis feature is available since Firefox 55, but is only currently supported with SVG images loaded via chrome:// or resource:// URLs. To experiment with the feature in SVG on the Web it is necessary to set the svg.context-properties.content.enabled pref to true.",
     restriction: "none",
     status: "n",
     syntax: "none | [ fill | fill-opacity | stroke | stroke-opacity ]#"
    }, {
     name: "-moz-float-edge",
     desc: "The non-standard -moz-float-edge CSS property specifies whether the height and width properties of the element include the margin, border, or padding thickness.",
     restriction: "none",
     status: "n",
     syntax: "border-box | content-box | margin-box | padding-box"
    }, {
     name: "-moz-force-broken-image-icon",
     desc: "The -moz-force-broken-image-icon extended CSS property can be used to force the broken image icon to be shown even when a broken image has an alt attribute.",
     restriction: "none",
     status: "n",
     syntax: "<integer>"
    }, {
     name: "-moz-image-region",
     desc: "For certain XUL elements and pseudo-elements that use an image from the list-style-image property, this property specifies a region of the image that is used in place of the whole image. This allows elements to use different pieces of the same image to improve performance.",
     restriction: "none",
     status: "n",
     syntax: "<shape> | auto"
    }, {
     name: "-moz-orient",
     desc: "The -moz-orient CSS property specifies the orientation of the element to which it's applied.",
     restriction: "none",
     status: "n",
     syntax: "inline | block | horizontal | vertical"
    }, {
     name: "-moz-outline-radius",
     desc: "In Mozilla applications like Firefox, the -moz-outline-radius CSS property can be used to give an element's outline rounded corners.",
     restriction: "none",
     status: "n",
     syntax: "<outline-radius>{1,4} [ / <outline-radius>{1,4} ]?"
    }, {
     name: "-moz-outline-radius-bottomleft",
     desc: "In Mozilla applications, the -moz-outline-radius-bottomleft CSS property can be used to round the bottom-left corner of an element's outline.",
     restriction: "none",
     status: "n",
     syntax: "<outline-radius>"
    }, {
     name: "-moz-outline-radius-bottomright",
     desc: "In Mozilla applications, the -moz-outline-radius-bottomright CSS property can be used to round the bottom-right corner of an element's outline.",
     restriction: "none",
     status: "n",
     syntax: "<outline-radius>"
    }, {
     name: "-moz-outline-radius-topleft",
     desc: "In Mozilla applications, the -moz-outline-radius-topleft CSS property can be used to round the top-left corner of an element's outline.",
     restriction: "none",
     status: "n",
     syntax: "<outline-radius>"
    }, {
     name: "-moz-outline-radius-topright",
     desc: "In Mozilla applications, the -moz-outline-radius-topright CSS property can be used to round the top-right corner of an element's outline.",
     restriction: "none",
     status: "n",
     syntax: "<outline-radius>"
    }, {
     name: "-moz-stack-sizing",
     desc: "-moz-stack-sizing is an extended CSS property. Normally, a stack will change its size so that all of its child elements are completely visible. For example, moving a child of the stack far to the right will widen the stack so the child remains visible.",
     restriction: "none",
     status: "n",
     syntax: "ignore | stretch-to-fit"
    }, {
     name: "-moz-text-blink",
     desc: "The -moz-text-blink non-standard Mozilla CSS extension specifies the blink mode.",
     restriction: "none",
     status: "n",
     syntax: "none | blink"
    }, {
     name: "-moz-user-input",
     desc: "In Mozilla applications, -moz-user-input determines if an element will accept user input.",
     restriction: "none",
     status: "n",
     syntax: "auto | none | enabled | disabled"
    }, {
     name: "-moz-user-modify",
     desc: "The -moz-user-modify property has no effect. It was originally planned to determine whether or not the content of an element can be edited by a user.",
     restriction: "none",
     status: "n",
     syntax: "read-only | read-write | write-only"
    }, {
     name: "-moz-window-dragging",
     desc: "The -moz-window-dragging CSS property specifies whether a window is draggable or not. It only works in Chrome code, and only on Mac OS X.",
     restriction: "none",
     status: "n",
     syntax: "drag | no-drag"
    }, {
     name: "-moz-window-shadow",
     desc: "The -moz-window-shadow CSS property specifies whether a window will have a shadow. It only works on Mac OS X.",
     restriction: "none",
     status: "n",
     syntax: "default | menu | tooltip | sheet | none"
    }, {
     name: "-webkit-border-before",
     desc: "The -webkit-border-before CSS property is a shorthand property for setting the individual logical block start border property values in a single place in the style sheet.",
     restriction: "none",
     status: "n",
     syntax: "<'border-width'> || <'border-style'> || <'color'>"
    }, {
     name: "-webkit-border-before-color",
     desc: "The -webkit-border-before-color CSS property sets the color of the individual logical block start border in a single place in the style sheet.",
     restriction: "none",
     status: "n",
     syntax: "<'color'>"
    }, {
     name: "-webkit-border-before-style",
     desc: "The -webkit-border-before-style CSS property sets the style of the individual logical block start border in a single place in the style sheet.",
     restriction: "none",
     status: "n",
     syntax: "<'border-style'>"
    }, {
     name: "-webkit-border-before-width",
     desc: "The -webkit-border-before-width CSS property sets the width of the individual logical block start border in a single place in the style sheet.",
     restriction: "none",
     status: "n",
     syntax: "<'border-width'>"
    }, {
     name: "-webkit-mask",
     desc: "The mask CSS property alters the visibility of an element by either partially or fully hiding it. This is accomplished by either masking or clipping the image at specific points.",
     restriction: "none",
     status: "n",
     syntax: "<mask-image> [ <'-webkit-mask-repeat'> || <'-webkit-mask-attachment'> || <'-webkit-mask-position'> || <'-webkit-mask-origin'> || <'-webkit-mask-clip'> ]*"
    }, {
     name: "-webkit-mask-attachment",
     desc: "If a -webkit-mask-image is specified, -webkit-mask-attachment determines whether the mask image's position is fixed within the viewport, or scrolls along with its containing block.",
     restriction: "none",
     status: "n",
     syntax: "<attachment> [, <attachment> ]*"
    }, {
     name: "-webkit-mask-composite",
     desc: "The -webkit-mask-composite property specifies the manner in which multiple mask images applied to the same element are composited with one another. Mask images are composited in the opposite order that they are declared with the -webkit-mask-image property.",
     restriction: "none",
     status: "n",
     syntax: "<composite-style> [, <composite-style> ]*"
    }, {
     name: "-webkit-mask-position",
     desc: "The mask-position CSS property sets the initial position, relative to the mask position layer defined by mask-origin, for each defined mask image.",
     restriction: "none",
     status: "n",
     syntax: "<mask-position>#"
    }, {
     name: "-webkit-mask-position-x",
     desc: "The -webkit-mask-position-x CSS property sets the initial horizontal position of a mask image.",
     restriction: "none",
     status: "n",
     syntax: "[ <length-percentage> | left | center | right ]#"
    }, {
     name: "-webkit-mask-position-y",
     desc: "The -webkit-mask-position-y CSS property sets the initial vertical position of a mask image.",
     restriction: "none",
     status: "n",
     syntax: "[ <length-percentage> | top | center | bottom ]#"
    }, {
     name: "-webkit-mask-repeat-x",
     desc: "The -webkit-mask-repeat-x property specifies whether and how a mask image is repeated (tiled) horizontally.",
     restriction: "none",
     status: "n",
     syntax: "repeat | no-repeat | space | round"
    }, {
     name: "-webkit-mask-repeat-y",
     desc: "The -webkit-mask-repeat-y property specifies whether and how a mask image is repeated (tiled) vertically.",
     restriction: "none",
     status: "n",
     syntax: "repeat | no-repeat | space | round"
    }, {
     name: "appearance",
     desc: "Changes the appearance of buttons and other controls to resemble native controls.",
     restriction: "none",
     status: "e",
     syntax: "auto | none"
    }, {
     name: "azimuth",
     desc: "In combination with elevation, the azimuth CSS property enables different audio sources to be positioned spatially for aural presentation. This is important in that it provides a natural way to tell several voices apart, as each can be positioned to originate at a different location on the sound stage. Stereo output produce a lateral sound stage, while binaural headphones and multi-speaker setups allow for a fully three-dimensional stage.",
     restriction: "none",
     status: "o",
     syntax: "<angle> | [ [ left-side | far-left | left | center-left | center | center-right | right | far-right | right-side ] || behind ] | leftwards | rightwards"
    }, {
     name: "backdrop-filter",
     desc: "The backdrop-filter CSS property lets you apply graphical effects such as blurring or color shifting to the area behind an element. Because it applies to everything behind the element, to see the effect you must make the element or its background at least partially transparent.",
     restriction: "none",
     status: "e",
     syntax: "none | <filter-function-list>"
    }, {
     name: "block-overflow",
     desc: "",
     restriction: "none",
     status: "e",
     syntax: "clip | ellipsis | <string>"
    }, {
     name: "box-align",
     desc: "The box-align CSS property specifies how an element aligns its contents across its layout in a perpendicular direction. The effect of the property is only visible if there is extra space in the box.",
     restriction: "none",
     status: "n",
     syntax: "start | center | end | baseline | stretch"
    }, {
     name: "box-direction",
     desc: "The box-direction CSS property specifies whether a box lays out its contents normally (from the top or left edge), or in reverse (from the bottom or right edge).",
     restriction: "none",
     status: "n",
     syntax: "normal | reverse | inherit"
    }, {
     name: "box-flex",
     desc: "The -moz-box-flex and -webkit-box-flex CSS properties specify how a -moz-box or -webkit-box grows to fill the box that contains it, in the direction of the containing box's layout.",
     restriction: "none",
     status: "n",
     syntax: "<number>"
    }, {
     name: "box-flex-group",
     desc: "The box-flex-group CSS property assigns the flexbox's child elements to a flex group.",
     restriction: "none",
     status: "n",
     syntax: "<integer>"
    }, {
     name: "box-lines",
     desc: "The box-lines CSS property determines whether the box may have a single or multiple lines (rows for horizontally oriented boxes, columns for vertically oriented boxes).",
     restriction: "none",
     status: "n",
     syntax: "single | multiple"
    }, {
     name: "box-ordinal-group",
     desc: "The box-ordinal-group CSS property assigns the flexbox's child elements to an ordinal group.",
     restriction: "none",
     status: "n",
     syntax: "<integer>"
    }, {
     name: "box-orient",
     desc: "The box-orient CSS property specifies whether an element lays out its contents horizontally or vertically.",
     restriction: "none",
     status: "n",
     syntax: "horizontal | vertical | inline-axis | block-axis | inherit"
    }, {
     name: "box-pack",
     desc: "The -moz-box-pack and -webkit-box-pack CSS properties specify how a -moz-box or -webkit-box packs its contents in the direction of its layout. The effect of this is only visible if there is extra space in the box.",
     restriction: "none",
     status: "n",
     syntax: "start | center | end | justify"
    }, {
     name: "color-adjust",
     desc: "The color-adjust property is a non-standard CSS extension that can be used to force printing of background colors and images in browsers based on the WebKit engine.",
     restriction: "none",
     syntax: "economy | exact"
    }, {
     name: "font-variation-settings",
     desc: "The font-variation-settings CSS property provides low-level control over OpenType or TrueType font variations, by specifying the four letter axis names of the features you want to vary, along with their variation values.",
     restriction: "none",
     syntax: "normal | [ <string> <number>] #"
    }, {
     name: "gap",
     desc: "The gap CSS property is a shorthand property for row-gap and column-gap specifying the gutters between grid rows and columns.",
     restriction: "none",
     syntax: "<'row-gap'> <'column-gap'>?"
    }, {
     name: "hanging-punctuation",
     desc: "The hanging-punctuation CSS property specifies whether a punctuation mark should hang at the start or end of a line of text. Hanging punctuation may be placed outside the line box.",
     restriction: "none",
     syntax: "none | [ first || [ force-end | allow-end ] || last ]"
    }, {
     name: "image-resolution",
     desc: "The image-resolution property specifies the intrinsic resolution of all raster images used in or on the element. It affects both content images (e.g. replaced elements and generated content) and decorative images (such as background-image). The intrinsic resolution of an image is used to determine the image’s intrinsic dimensions.",
     restriction: "none",
     status: "e",
     syntax: "[ from-image || <resolution> ] && snap?"
    }, {
     name: "initial-letter",
     desc: "The initial-letter CSS property specifies styling for dropped, raised, and sunken initial letters.",
     restriction: "none",
     status: "e",
     syntax: "normal | [ <number> <integer>? ]"
    }, {
     name: "initial-letter-align",
     desc: "The initial-letter-align CSS property specifies the alignment of initial letters within a paragraph.",
     restriction: "none",
     status: "e",
     syntax: "[ auto | alphabetic | hanging | ideographic ]"
    }, {
     name: "line-clamp",
     desc: "",
     restriction: "none",
     status: "e",
     syntax: "none | <integer>"
    }, {
     name: "line-height-step",
     desc: "The line-height-step CSS property defines the step units for line box heights. When the step unit is positive, line box heights are rounded up to the closest multiple of the unit. Negative values are invalid.",
     restriction: "none",
     status: "e",
     syntax: "none | <length>"
    }, {
     name: "mask",
     desc: "The mask CSS property alters the visibility of an element by either partially or fully hiding it. This is accomplished by either masking or clipping the image at specific points.",
     restriction: "none",
     syntax: "<mask-layer>#"
    }, {
     name: "mask-border",
     desc: "The mask-border CSS property lets you create a mask along the edge of an element's border.\n\nThis property is a shorthand for mask-border-source, mask-border-slice, mask-border-width, mask-border-outset, mask-border-repeat, and mask-border-mode. As with all shorthand properties, any omitted sub-values will be set to their initial value.",
     restriction: "none",
     status: "e",
     syntax: "<'mask-border-source'> || <'mask-border-slice'> [ / <'mask-border-width'>? [ / <'mask-border-outset'> ]? ]? || <'mask-border-repeat'> || <'mask-border-mode'>"
    }, {
     name: "mask-border-mode",
     desc: "The mask-border-mode CSS property specifies the blending mode used in a mask border.",
     restriction: "none",
     status: "e",
     syntax: "luminance | alpha"
    }, {
     name: "mask-border-outset",
     desc: "The mask-border-outset CSS property specifies the distance by which an element's mask border is set out from its border box.",
     restriction: "none",
     status: "e",
     syntax: "[ <length> | <number> ]{1,4}"
    }, {
     name: "mask-border-repeat",
     desc: "The mask-border-repeat CSS property defines how the edge regions of a source image are adjusted to fit the dimensions of an element's mask border.",
     restriction: "none",
     status: "e",
     syntax: "[ stretch | repeat | round | space ]{1,2}"
    }, {
     name: "mask-border-slice",
     desc: "The mask-border-slice CSS property divides the image specified by mask-border-source into regions. These regions are used to form the components of an element's mask border.",
     restriction: "none",
     status: "e",
     syntax: "<number-percentage>{1,4} fill?"
    }, {
     name: "mask-border-source",
     desc: "The mask-border-source CSS property specifies the source image used to create an element's mask border.\n\nThe mask-border-slice property is used to divide the source image into regions, which are then dynamically applied to the final mask border.",
     restriction: "none",
     status: "e",
     syntax: "none | <image>"
    }, {
     name: "mask-border-width",
     desc: "The mask-border-width CSS property specifies the width of an element's mask border.",
     restriction: "none",
     status: "e",
     syntax: "[ <length-percentage> | <number> | auto ]{1,4}"
    }, {
     name: "mask-clip",
     desc: "The mask-clip CSS property determines the area, which is affected by a mask. The painted content of an element must be restricted to this area.",
     restriction: "none",
     syntax: "[ <geometry-box> | no-clip ]#"
    }, {
     name: "mask-composite",
     desc: "The mask-composite CSS property represents a compositing operation used on the current mask layer with the mask layers below it.",
     restriction: "none",
     syntax: "<compositing-operator>#"
    }, {
     name: "max-lines",
     desc: "",
     restriction: "none",
     status: "e",
     syntax: "none | <integer>"
    }, {
     name: "offset",
     desc: "The offset CSS property is a shorthand property for animating an element along a defined path.",
     restriction: "none",
     status: "e",
     syntax: "[ <'offset-position'>? [ <'offset-path'> [ <'offset-distance'> || <'offset-rotate'> ]? ]? ]! [ / <'offset-anchor'> ]?"
    }, {
     name: "offset-anchor",
     desc: "Defines an anchor point of the box positioned along the path. The anchor point specifies the point of the box which is to be considered as the point that is moved along the path.",
     restriction: "none",
     status: "e",
     syntax: "auto | <position>"
    }, {
     name: "offset-distance",
     desc: "The offset-distance CSS property specifies a position along an offset-path.",
     restriction: "none",
     status: "e",
     syntax: "<length-percentage>"
    }, {
     name: "offset-path",
     desc: 'The offset-path CSS property specifies the offset path where the element gets positioned. The exact element’s position on the offset path is determined by the offset-distance property. An offset path is either a specified path with one or multiple sub-paths or the geometry of a not-styled basic shape. Each shape or path must define an initial position for the computed value of "0" for offset-distance and an initial direction which specifies the rotation of the object to the initial position.\n\nIn this specification, a direction (or rotation) of 0 degrees is equivalent to the direction of the positive x-axis in the object’s local coordinate system. In other words, a rotation of 0 degree points to the right side of the UA if the object and its ancestors have no transformation applied.',
     restriction: "none",
     status: "e",
     syntax: "none | ray( [ <angle> && <size>? && contain? ] ) | <path()> | <url> | [ <basic-shape> || <geometry-box> ]"
    }, {
     name: "offset-position",
     desc: "Specifies the initial position of the offset path. If position is specified with static, offset-position would be ignored.",
     restriction: "none",
     status: "e",
     syntax: "auto | <position>"
    }, {
     name: "offset-rotate",
     desc: "The offset-rotate CSS property defines the direction of the element while positioning along the offset path.",
     restriction: "none",
     status: "e",
     syntax: "[ auto | reverse ] || <angle>"
    }, {
     name: "overflow-anchor",
     desc: "",
     restriction: "none",
     status: "e",
     syntax: "auto | none"
    }, {
     name: "overflow-block",
     desc: "",
     restriction: "none",
     status: "e",
     syntax: "<'overflow'>"
    }, {
     name: "overflow-clip-box",
     desc: "The overflow-clip-box CSS property specifies relative to which box the clipping happens when there is an overflow. It is short hand for the overflow-clip-box-inline and overflow-clip-box-block properties.",
     restriction: "none",
     status: "n",
     syntax: "padding-box | content-box"
    }, {
     name: "overflow-inline",
     desc: "",
     restriction: "none",
     status: "e",
     syntax: "<'overflow'>"
    }, {
     name: "overscroll-behavior",
     desc: "The overscroll-behavior CSS property is shorthand for the overscroll-behavior-x and overscroll-behavior-y properties, which allow you to control the browser's scroll overflow behavior — what happens when the boundary of a scrolling area is reached.",
     restriction: "none",
     status: "n",
     syntax: "[ contain | none | auto ]{1,2}"
    }, {
     name: "overscroll-behavior-x",
     desc: "The overscroll-behavior-x CSS property is allows you to control the browser's scroll overflow behavior — what happens when the boundary of a scrolling area is reached — in the x axis direction.",
     restriction: "none",
     status: "n",
     syntax: "contain | none | auto"
    }, {
     name: "overscroll-behavior-y",
     desc: "The overscroll-behavior-y CSS property is allows you to control the browser's scroll overflow behavior — what happens when the boundary of a scrolling area is reached — in the y axis direction.",
     restriction: "none",
     status: "n",
     syntax: "contain | none | auto"
    }, {
     name: "place-content",
     desc: "The place-content CSS shorthand property sets both the align-content and justify-content properties.",
     restriction: "none",
     syntax: "<'align-content'> <'justify-content'>?"
    }, {
     name: "rotate",
     desc: "The rotate CSS property allows you to specify rotation transforms individually and independantly of the transform property. This maps better to typical user interface usage, and saves having to remember the exact order of transform functions to specify in the transform value.",
     restriction: "none",
     syntax: "none | [ x | y | z | <number>{3} ]? && <angle>"
    }, {
     name: "row-gap",
     desc: "The row-gap CSS property specifies the gutter between grid rows.",
     restriction: "none",
     syntax: "normal | <length-percentage>"
    }, {
     name: "ruby-merge",
     desc: "This property controls how ruby annotation boxes should be rendered when there are more than one in a ruby container box: whether each pair should be kept separate, the annotations should be collapsed and rendered as a group, or the separation should be determined based on the space available.",
     restriction: "none",
     syntax: "separate | collapse | auto"
    }, {
     name: "scale",
     desc: "The scale CSS property allows you to specify scale transforms individually and independantly of the transform property. This maps better to typical user interface usage, and saves having to remember the exact order of transform functions to specify in the transform value.",
     restriction: "none",
     syntax: "none | <number>{1,3}"
    }, {
     name: "scroll-snap-type-x",
     desc: "The scroll-snap-type-x CSS property defines how strictly snap points are enforced on the horizontal axis of the scroll container in case there is one.\n\nSpecifying any precise animations or physics used to enforce those snap points is not covered by this property but instead left up to the user agent.",
     restriction: "none",
     status: "n",
     syntax: "none | mandatory | proximity"
    }, {
     name: "scroll-snap-type-y",
     desc: "The scroll-snap-type-y CSS property defines how strictly snap points are enforced on the vertical axis of the scroll container in case there is one.\n\nSpecifying any precise animations or physics used to enforce those snap points is not covered by this property but instead left up to the user agent.",
     restriction: "none",
     status: "n",
     syntax: "none | mandatory | proximity"
    }, {
     name: "text-combine-upright",
     desc: "The text-combine-upright CSS property specifies the combination of multiple characters into the space of a single character. If the combined text is wider than 1em, the user agent must fit the contents within 1em. The resulting composition is treated as a single upright glyph for layout and decoration. This property only has an effect in vertical writing modes.\n\nThis is used to produce an effect that is known as tate-chū-yoko (縦中横) in Japanese, or as 直書橫向 in Chinese.",
     restriction: "none",
     syntax: "none | all | [ digits <integer>? ]"
    }, {
     name: "text-decoration-skip",
     desc: "The text-decoration-skip CSS property specifies what parts of the element’s content any text decoration affecting the element must skip over. It controls all text decoration lines drawn by the element and also any text decoration lines drawn by its ancestors.",
     restriction: "none",
     status: "e",
     syntax: "none | [ objects || [ spaces | [ leading-spaces || trailing-spaces ] ] || edges || box-decoration ]"
    }, {
     name: "text-decoration-skip-ink",
     desc: "The text-decoration-skip-ink CSS property specifies how overlines and underlines are drawn when they pass over glyph ascenders and descenders.",
     restriction: "none",
     status: "e",
     syntax: "auto | none"
    }, {
     name: "text-emphasis",
     desc: "The text-emphasis CSS property is a shorthand property for setting text-emphasis-style and text-emphasis-color in one declaration. This property will apply the specified emphasis mark to each character of the element's text, except separator characters, like spaces,  and control characters.",
     restriction: "none",
     syntax: "<'text-emphasis-style'> || <'text-emphasis-color'>"
    }, {
     name: "text-emphasis-color",
     desc: "The text-emphasis-color CSS property defines the color used to draw emphasis marks on text being rendered in the HTML document. This value can also be set and reset using the text-emphasis shorthand.",
     restriction: "none",
     syntax: "<color>"
    }, {
     name: "text-emphasis-position",
     desc: "The text-emphasis-position CSS property describes where emphasis marks are drawn at. The effect of emphasis marks on the line height is the same as for ruby text: if there isn't enough place, the line height is increased.",
     restriction: "none",
     syntax: "[ over | under ] && [ right | left ]"
    }, {
     name: "text-emphasis-style",
     desc: "The text-emphasis-style CSS property defines the type of emphasis used. It can also be set, and reset, using the text-emphasis shorthand.",
     restriction: "none",
     syntax: "none | [ [ filled | open ] || [ dot | circle | double-circle | triangle | sesame ] ] | <string>"
    }, {
     name: "text-size-adjust",
     desc: "The text-size-adjust CSS property controls the text inflation algorithm used on some smartphones and tablets. Other browsers will ignore this property.",
     restriction: "none",
     status: "e",
     syntax: "none | auto | <percentage>"
    }, {
     name: "transform-box",
     desc: "The transform-box CSS property defines the layout box to which the transform and transform-origin properties relate.",
     restriction: "none",
     syntax: "border-box | fill-box | view-box"
    }, {
     name: "translate",
     desc: "The translate CSS property allows you to specify translation transforms individually and independantly of the transform property. This maps better to typical user interface usage, and saves having to remember the exact order of transform functions to specify in the transform value.",
     restriction: "none",
     syntax: "none | <length-percentage> [ <length-percentage> <length>? ]?"
    }, {
     name: "speak-as",
     desc: "The speak-as descriptor specifies how a counter symbol constructed with a given @counter-style will be represented in the spoken form. For example, an author can specify a counter symbol to be either spoken as its numerical value or just represented with an audio cue.",
     restriction: "none",
     syntax: "auto | bullets | numbers | words | spell-out | <counter-style-name>"
    }, {
     name: "font-display",
     desc: "The font-display descriptor determines how a font face is displayed based on whether and when it is downloaded and ready to use.",
     restriction: "none",
     status: "e",
     syntax: "[ auto | block | swap | fallback | optional ]"
    }, {
     name: "bleed",
     desc: "The bleed CSS at-rule descriptor, used with the @page at-rule, specifies the extent of the page bleed area outside the page box. This property only has effect if crop marks are enabled using the marks property.",
     restriction: "none",
     status: "e",
     syntax: "auto | <length>"
    }, {
     name: "marks",
     desc: "The marks CSS at-rule descriptor, used with the @page at-rule, adds crop and/or cross marks to the presentation of the document. Crop marks indicate where the page should be cut. Cross marks are used to align sheets.",
     restriction: "none",
     status: "e",
     syntax: "none | [ crop || cross ]"
    }, {
     name: "max-zoom",
     desc: "The max-zoom CSS descriptor sets the maximum zoom factor of a document defined by the @viewport at-rule. The browser will not zoom in any further than this, whether automatically or at the user's request.\n\nA zoom factor of 1.0 or 100% corresponds to no zooming. Larger values are zoomed in. Smaller values are zoomed out.",
     restriction: "none",
     syntax: "auto | <number> | <percentage>"
    }, {
     name: "min-zoom",
     desc: "The min-zoom CSS descriptor sets the minimum zoom factor of a document defined by the @viewport at-rule. The browser will not zoom out any further than this, whether automatically or at the user's request.\n\nA zoom factor of 1.0 or 100% corresponds to no zooming. Larger values are zoomed in. Smaller values are zoomed out.",
     restriction: "none",
     syntax: "auto | <number> | <percentage>"
    }, {
     name: "orientation",
     desc: "The orientation CSS @media media feature can be used to apply styles based on the orientation of the viewport (or the page box, for paged media).",
     restriction: "none",
     syntax: "auto | portrait | landscape"
    }, {
     name: "user-zoom",
     desc: "The user-zoom CSS descriptor controls whether or not the user can change the zoom factor of a document defined by @viewport.",
     restriction: "none",
     syntax: "zoom | fixed"
    } ]
   }
  };
  var ft = {
   100: "Thin",
   200: "Extra Light (Ultra Light)",
   300: "Light",
   400: "Normal",
   500: "Medium",
   600: "Semi Bold (Demi Bold)",
   700: "Bold",
   800: "Extra Bold (Ultra Bold)",
   900: "Black (Heavy)",
   "self-end": "The item is packed flush to the edge of the alignment container of the end side of the item, in the appropriate axis.",
   "self-start": "The item is packed flush to the edge of the alignment container of the start side of the item, in the appropriate axis..",
   alternate: "The animation cycle iterations that are odd counts are played in the normal direction, and the animation cycle iterations that are even counts are played in a reverse direction.",
   "alternate-reverse": "The animation cycle iterations that are odd counts are played in the reverse direction, and the animation cycle iterations that are even counts are played in a normal direction.",
   backwards: "The beginning property value (as defined in the first @keyframes at-rule) is applied before the animation is displayed, during the period defined by 'animation-delay'.",
   forwards: "The final property value (as defined in the last @keyframes at-rule) is maintained after the animation completes.",
   paused: "A running animation will be paused.",
   running: "Resume playback of a paused animation.",
   multiply: "The source color is multiplied by the destination color and replaces the destination.",
   screen: "Multiplies the complements of the backdrop and source color values, then complements the result.",
   overlay: "Multiplies or screens the colors, depending on the backdrop color value.",
   darken: "Selects the darker of the backdrop and source colors.",
   lighten: "Selects the lighter of the backdrop and source colors.",
   "color-dodge": "Brightens the backdrop color to reflect the source color.",
   "color-burn": "Darkens the backdrop color to reflect the source color.",
   "hard-light": "Multiplies or screens the colors, depending on the source color value.",
   "soft-light": "Darkens or lightens the colors, depending on the source color value.",
   difference: "Subtracts the darker of the two constituent colors from the lighter color..",
   exclusion: "Produces an effect similar to that of the Difference mode but lower in contrast.",
   hue: "Creates a color with the hue of the source color and the saturation and luminosity of the backdrop color.",
   saturation: "Creates a color with the saturation of the source color and the hue and luminosity of the backdrop color.",
   color: "Creates a color with the hue and saturation of the source color and the luminosity of the backdrop color.",
   luminosity: "Creates a color with the luminosity of the source color and the hue and saturation of the backdrop color.",
   repeat: "The image is tiled (repeated) to fill the area.",
   clone: "Each box is independently wrapped with the border and padding.",
   slice: "The effect is as though the element were rendered with no breaks present, and then sliced by the breaks afterward.",
   inset: "Changes the drop shadow from an outer shadow (one that shadows the box onto the canvas, as if it were lifted above the canvas) to an inner shadow (one that shadows the canvas onto the box, as if the box were cut out of the canvas and shifted behind it).",
   "border-box": "The specified width and height (and respective min/max properties) on this element determine the border box of the element.",
   "content-box": "Behavior of width and height as specified by CSS2.1. The specified width and height (and respective min/max properties) apply to the width and height respectively of the content box of the element.",
   "rect()": "Specifies offsets from the edges of the border box.",
   evenodd: "Determines the ‘insideness’ of a point on the canvas by drawing a ray from that point to infinity in any direction and counting the number of path segments from the given shape that the ray crosses.",
   nonzero: "Determines the ‘insideness’ of a point on the canvas by drawing a ray from that point to infinity in any direction and then examining the places where a segment of the shape crosses the ray.",
   linearRGB: "Color operations should occur in the linearized RGB color space.",
   sRGB: "Color operations should occur in the sRGB color space.",
   balance: "Balance content equally between columns, if possible.",
   size: "For properties that can have effects on more than just an element and its descendants, those effects don't escape the containing element.",
   layout: "Turns on layout containment for the element.",
   paint: "Turns on paint containment for the element.",
   "attr()": "The attr(n) function returns as a string the value of attribute n for the subject of the selector.",
   "counter(name)": "Counters are denoted by identifiers (see the 'counter-increment' and 'counter-reset' properties).",
   alias: "Indicates an alias of/shortcut to something is to be created. Often rendered as an arrow with a small curved arrow next to it.",
   "all-scroll": "Indicates that the something can be scrolled in any direction. Often rendered as arrows pointing up, down, left, and right with a dot in the middle.",
   cell: "Indicates that a cell or set of cells may be selected. Often rendered as a thick plus-sign with a dot in the middle.",
   "col-resize": "Indicates that the item/column can be resized horizontally. Often rendered as arrows pointing left and right with a vertical bar separating them.",
   "context-menu": "A context menu is available for the object under the cursor. Often rendered as an arrow with a small menu-like graphic next to it.",
   copy: "Indicates something is to be copied. Often rendered as an arrow with a small plus sign next to it.",
   crosshair: "A simple crosshair (e.g., short line segments resembling a '+' sign). Often used to indicate a two dimensional bitmap selection mode.",
   "e-resize": "Indicates that east edge is to be moved.",
   "ew-resize": "Indicates a bidirectional east-west resize cursor.",
   grab: "Indicates that something can be grabbed.",
   grabbing: "Indicates that something is being grabbed.",
   help: "Help is available for the object under the cursor. Often rendered as a question mark or a balloon.",
   move: "Indicates something is to be moved.",
   "-moz-grab": "Indicates that something can be grabbed.",
   "-moz-grabbing": "Indicates that something is being grabbed.",
   "-moz-zoom-in": "Indicates that something can be zoomed (magnified) in.",
   "-moz-zoom-out": "Indicates that something can be zoomed (magnified) out.",
   "ne-resize": "Indicates that movement starts from north-east corner.",
   "nesw-resize": "Indicates a bidirectional north-east/south-west cursor.",
   "no-drop": "Indicates that the dragged item cannot be dropped at the current cursor location. Often rendered as a hand or pointer with a small circle with a line through it.",
   "not-allowed": "Indicates that the requested action will not be carried out. Often rendered as a circle with a line through it.",
   "n-resize": "Indicates that north edge is to be moved.",
   "ns-resize": "Indicates a bidirectional north-south cursor.",
   "nw-resize": "Indicates that movement starts from north-west corner.",
   "nwse-resize": "Indicates a bidirectional north-west/south-east cursor.",
   pointer: "The cursor is a pointer that indicates a link.",
   progress: "A progress indicator. The program is performing some processing, but is different from 'wait' in that the user may still interact with the program. Often rendered as a spinning beach ball, or an arrow with a watch or hourglass.",
   "row-resize": "Indicates that the item/row can be resized vertically. Often rendered as arrows pointing up and down with a horizontal bar separating them.",
   "se-resize": "Indicates that movement starts from south-east corner.",
   "s-resize": "Indicates that south edge is to be moved.",
   "sw-resize": "Indicates that movement starts from south-west corner.",
   "vertical-text": "Indicates vertical-text that may be selected. Often rendered as a horizontal I-beam.",
   wait: "Indicates that the program is busy and the user should wait. Often rendered as a watch or hourglass.",
   "-webkit-grab": "Indicates that something can be grabbed.",
   "-webkit-grabbing": "Indicates that something is being grabbed.",
   "-webkit-zoom-in": "Indicates that something can be zoomed (magnified) in.",
   "-webkit-zoom-out": "Indicates that something can be zoomed (magnified) out.",
   "w-resize": "Indicates that west edge is to be moved.",
   "zoom-in": "Indicates that something can be zoomed (magnified) in.",
   "zoom-out": "Indicates that something can be zoomed (magnified) out.",
   ltr: "Left-to-right direction.",
   rtl: "Right-to-left direction.",
   block: "The element generates a block-level box",
   flex: "The element generates a principal flex container box and establishes a flex formatting context.",
   flexbox: "The element lays out its contents using flow layout (block-and-inline layout). Standardized as 'flex'.",
   "flow-root": "The element generates a block container box, and lays out its contents using flow layout.",
   grid: "The element generates a principal grid container box, and establishes a grid formatting context.",
   "inline-block": "A block box, which itself is flowed as a single inline box, similar to a replaced element. The inside of an inline-block is formatted as a block box, and the box itself is formatted as an inline box.",
   "inline-flex": "Inline-level flex container.",
   "inline-flexbox": "Inline-level flex container. Standardized as 'inline-flex'",
   "inline-table": "Inline-level table wrapper box containing table box.",
   "list-item": "One or more block boxes and one marker box.",
   "-moz-box": "The element lays out its contents using flow layout (block-and-inline layout). Standardized as 'flex'.",
   "-moz-inline-box": "Inline-level flex container. Standardized as 'inline-flex'",
   "-ms-flexbox": "The element lays out its contents using flow layout (block-and-inline layout). Standardized as 'flex'.",
   "-ms-grid": "The element generates a principal grid container box, and establishes a grid formatting context.",
   "-ms-inline-flexbox": "Inline-level flex container. Standardized as 'inline-flex'",
   "-ms-inline-grid": "Inline-level grid container.",
   "run-in": "The element generates a run-in box. Run-in elements act like inlines or blocks, depending on the surrounding elements.",
   table: "The element generates a principal table wrapper box containing an additionally-generated table box, and establishes a table formatting context.",
   "-webkit-box": "The element lays out its contents using flow layout (block-and-inline layout). Standardized as 'flex'.",
   "-webkit-flex": "The element lays out its contents using flow layout (block-and-inline layout).",
   "-webkit-inline-box": "Inline-level flex container. Standardized as 'inline-flex'",
   "-webkit-inline-flex": "Inline-level flex container.",
   hide: "No borders or backgrounds are drawn around/behind empty cells.",
   show: "Borders and backgrounds are drawn around/behind empty cells (like normal cells).",
   accumulate: "If the ancestor container element has a property of new, then all graphics elements within the current container are rendered both on the parent's background image and onto the target.",
   new: "Create a new background image canvas. All children of the current container element can access the background, and they will be rendered onto both the parent's background image canvas in addition to the target device.",
   "blur()": "Applies a Gaussian blur to the input image.",
   "brightness()": "Applies a linear multiplier to input image, making it appear more or less bright.",
   "contrast()": "Adjusts the contrast of the input.",
   "drop-shadow()": "Applies a drop shadow effect to the input image.",
   "grayscale()": "Converts the input image to grayscale.",
   "hue-rotate()": "Applies a hue rotation on the input image. ",
   "invert()": "Inverts the samples in the input image.",
   "opacity()": "Applies transparency to the samples in the input image.",
   "saturate()": "Saturates the input image.",
   "sepia()": "Converts the input image to sepia.",
   "column-reverse": "Same as 'column', except the main-start and main-end directions are swapped.",
   "row-reverse": "Same as 'row', except the main-start and main-end directions are swapped.",
   "wrap-reverse": "Same as 'wrap', except the cross-start and cross-end directions are swapped.",
   "inline-end": "A keyword indicating that the element must float on the end side of its containing block. That is the right side with ltr scripts, and the left side with rtl scripts.",
   "inline-start": "A keyword indicating that the element must float on the start side of its containing block. That is the left side with ltr scripts, and the right side with rtl scripts.",
   bold: "Same as 700",
   bolder: "Specifies the weight of the face bolder than the inherited value.",
   caption: "The font used for captioned controls (e.g., buttons, drop-downs, etc.).",
   lighter: "Specifies the weight of the face lighter than the inherited value.",
   menu: "The font used in menus (e.g., dropdown menus and menu lists).",
   "message-box": "The font used in dialog boxes.",
   "small-caption": "The font used for labeling small controls.",
   "status-bar": "The font used in window status bars.",
   '"aalt"': "Access All Alternates.",
   '"abvf"': "Above-base Forms. Required in Khmer script.",
   '"abvm"': "Above-base Mark Positioning. Required in Indic scripts.",
   '"abvs"': "Above-base Substitutions. Required in Indic scripts.",
   '"afrc"': "Alternative Fractions.",
   '"akhn"': "Akhand. Required in most Indic scripts.",
   '"blwf"': "Below-base Form. Required in a number of Indic scripts.",
   '"blwm"': "Below-base Mark Positioning. Required in Indic scripts.",
   '"blws"': "Below-base Substitutions. Required in Indic scripts.",
   '"calt"': "Contextual Alternates.",
   '"case"': "Case-Sensitive Forms. Applies only to European scripts; particularly prominent in Spanish-language setting.",
   '"ccmp"': "Glyph Composition/Decomposition.",
   '"cfar"': "Conjunct Form After Ro. Required in Khmer scripts.",
   '"cjct"': "Conjunct Forms. Required in Indic scripts that show similarity to Devanagari.",
   '"clig"': "Contextual Ligatures.",
   '"cpct"': "Centered CJK Punctuation. Used primarily in Chinese fonts.",
   '"cpsp"': "Capital Spacing. Should not be used in connecting scripts (e.g. most Arabic).",
   '"cswh"': "Contextual Swash.",
   '"curs"': "Cursive Positioning. Can be used in any cursive script.",
   '"c2pc"': "Petite Capitals From Capitals. Applies only to bicameral scripts.",
   '"dist"': "Distances. Required in Indic scripts.",
   '"dnom"': "Denominators.",
   '"dtls"': "Dotless Forms. Applied to math formula layout.",
   '"expt"': "Expert Forms. Applies only to Japanese.",
   '"falt"': "Final Glyph on Line Alternates. Can be used in any cursive script.",
   '"fin2"': "Terminal Form #2. Used only with the Syriac script.",
   '"fin3"': "Terminal Form #3. Used only with the Syriac script.",
   '"fina"': "Terminal Forms. Can be used in any alphabetic script.",
   '"flac"': "Flattened ascent forms. Applied to math formula layout.",
   '"frac"': "Fractions.",
   '"fwid"': "Full Widths. Applies to any script which can use monospaced forms.",
   '"half"': "Half Forms. Required in Indic scripts that show similarity to Devanagari.",
   '"haln"': "Halant Forms. Required in Indic scripts.",
   '"halt"': "Alternate Half Widths. Used only in CJKV fonts.",
   '"hist"': "Historical Forms.",
   '"hkna"': "Horizontal Kana Alternates. Applies only to fonts that support kana (hiragana and katakana).",
   '"hlig"': "Historical Ligatures.",
   '"hngl"': "Hangul. Korean only.",
   '"hojo"': "Hojo Kanji Forms (JIS X 0212-1990 Kanji Forms). Used only with Kanji script.",
   '"hwid"': "Half Widths. Generally used only in CJKV fonts.",
   '"init"': "Initial Forms. Can be used in any alphabetic script.",
   '"isol"': "Isolated Forms. Can be used in any cursive script.",
   '"ital"': "Italics. Applies mostly to Latin; note that many non-Latin fonts contain Latin as well.",
   '"jalt"': "Justification Alternates. Can be used in any cursive script.",
   '"jp78"': "JIS78 Forms. Applies only to Japanese.",
   '"jp83"': "JIS83 Forms. Applies only to Japanese.",
   '"jp90"': "JIS90 Forms. Applies only to Japanese.",
   '"jp04"': "JIS2004 Forms. Applies only to Japanese.",
   '"lfbd"': "Left Bounds.",
   '"ljmo"': "Leading Jamo Forms. Required for Hangul script when Ancient Hangul writing system is supported.",
   '"locl"': "Localized Forms.",
   '"ltra"': "Left-to-right glyph alternates.",
   '"ltrm"': "Left-to-right mirrored forms.",
   '"mark"': "Mark Positioning.",
   '"med2"': "Medial Form #2. Used only with the Syriac script.",
   '"medi"': "Medial Forms.",
   '"mgrk"': "Mathematical Greek.",
   '"mkmk"': "Mark to Mark Positioning.",
   '"nalt"': "Alternate Annotation Forms.",
   '"nlck"': "NLC Kanji Forms. Used only with Kanji script.",
   '"nukt"': "Nukta Forms. Required in Indic scripts..",
   '"numr"': "Numerators.",
   '"opbd"': "Optical Bounds.",
   '"ordn"': "Ordinals. Applies mostly to Latin script.",
   '"ornm"': "Ornaments.",
   '"palt"': "Proportional Alternate Widths. Used mostly in CJKV fonts.",
   '"pcap"': "Petite Capitals.",
   '"pkna"': "Proportional Kana. Generally used only in Japanese fonts.",
   '"pnum"': "Proportional Figures.",
   '"pref"': "Pre-base Forms. Required in Khmer and Myanmar (Burmese) scripts and southern Indic scripts that may display a pre-base form of Ra.",
   '"pres"': "Pre-base Substitutions. Required in Indic scripts.",
   '"pstf"': "Post-base Forms. Required in scripts of south and southeast Asia that have post-base forms for consonants eg: Gurmukhi, Malayalam, Khmer.",
   '"psts"': "Post-base Substitutions.",
   '"pwid"': "Proportional Widths.",
   '"qwid"': "Quarter Widths. Generally used only in CJKV fonts.",
   '"rand"': "Randomize.",
   '"rclt"': "Required Contextual Alternates. May apply to any script, but is especially important for many styles of Arabic.",
   '"rlig"': "Required Ligatures. Applies to Arabic and Syriac. May apply to some other scripts.",
   '"rkrf"': "Rakar Forms. Required in Devanagari and Gujarati scripts.",
   '"rphf"': "Reph Form. Required in Indic scripts. E.g. Devanagari, Kannada.",
   '"rtbd"': "Right Bounds.",
   '"rtla"': "Right-to-left alternates.",
   '"rtlm"': "Right-to-left mirrored forms.",
   '"ruby"': "Ruby Notation Forms. Applies only to Japanese.",
   '"salt"': "Stylistic Alternates.",
   '"sinf"': "Scientific Inferiors.",
   '"size"': "Optical size.",
   '"smpl"': "Simplified Forms. Applies only to Chinese and Japanese.",
   '"ssty"': "Math script style alternates.",
   '"stch"': "Stretching Glyph Decomposition.",
   '"subs"': "Subscript.",
   '"sups"': "Superscript.",
   '"titl"': "Titling.",
   '"tjmo"': "Trailing Jamo Forms. Required for Hangul script when Ancient Hangul writing system is supported.",
   '"tnam"': "Traditional Name Forms. Applies only to Japanese.",
   '"trad"': "Traditional Forms. Applies only to Chinese and Japanese.",
   '"twid"': "Third Widths. Generally used only in CJKV fonts.",
   '"unic"': "Unicase.",
   '"valt"': "Alternate Vertical Metrics. Applies only to scripts with vertical writing modes.",
   '"vatu"': "Vattu Variants. Used for Indic scripts. E.g. Devanagari.",
   '"vert"': "Vertical Alternates. Applies only to scripts with vertical writing modes.",
   '"vhal"': "Alternate Vertical Half Metrics. Used only in CJKV fonts.",
   '"vjmo"': "Vowel Jamo Forms. Required for Hangul script when Ancient Hangul writing system is supported.",
   '"vkna"': "Vertical Kana Alternates. Applies only to fonts that support kana (hiragana and katakana).",
   '"vkrn"': "Vertical Kerning.",
   '"vpal"': "Proportional Alternate Vertical Metrics. Used mostly in CJKV fonts.",
   '"vrt2"': "Vertical Alternates and Rotation. Applies only to scripts with vertical writing modes.",
   '"zero"': "Slashed Zero.",
   narrower: "Indicates a narrower value relative to the width of the parent element.",
   wider: "Indicates a wider value relative to the width of the parent element.",
   weight: "Allow synthetic bold faces.",
   "annotation()": "Enables display of alternate annotation forms.",
   "character-variant()": "Enables display of specific character variants.",
   "historical-forms": "Enables display of historical forms.",
   "ornaments()": "Enables replacement of default glyphs with ornaments, if provided in the font.",
   "styleset()": "Enables display with stylistic sets.",
   "stylistic()": "Enables display of stylistic alternates.",
   "swash()": "Enables display of swash glyphs.",
   "all-petite-caps": "Enables display of petite capitals for both upper and lowercase letters.",
   "all-small-caps": "Enables display of small capitals for both upper and lowercase letters.",
   "petite-caps": "Enables display of petite capitals.",
   "titling-caps": "Enables display of titling capitals.",
   unicase: "Enables display of mixture of small capitals for uppercase letters with normal lowercase letters.",
   "full-width": "Enables rendering of full-width variants.",
   jis04: "Enables rendering of JIS04 forms.",
   jis78: "Enables rendering of JIS78 forms.",
   jis83: "Enables rendering of JIS83 forms.",
   jis90: "Enables rendering of JIS90 forms.",
   "proportional-width": "Enables rendering of proportionally-spaced variants.",
   simplified: "Enables rendering of simplified forms.",
   traditional: "Enables rendering of traditional forms.",
   "additional-ligatures": "Enables display of additional ligatures.",
   "common-ligatures": "Enables display of common ligatures.",
   contextual: "Enables display of contextual alternates.",
   "discretionary-ligatures": "Enables display of discretionary ligatures.",
   "historical-ligatures": "Enables display of historical ligatures.",
   "no-additional-ligatures": "Disables display of additional ligatures.",
   "no-common-ligatures": "Disables display of common ligatures.",
   "no-contextual": "Disables display of contextual alternates.",
   "no-discretionary-ligatures": "Disables display of discretionary ligatures.",
   "no-historical-ligatures": "Disables display of historical ligatures.",
   "diagonal-fractions": "Enables display of lining diagonal fractions.",
   "lining-nums": "Enables display of lining numerals.",
   "oldstyle-nums": "Enables display of old-style numerals.",
   ordinal: "Enables display of letter forms used with ordinal numbers.",
   "proportional-nums": "Enables display of proportional numerals.",
   "slashed-zero": "Enables display of slashed zeros.",
   "stacked-fractions": "Enables display of lining stacked fractions.",
   "tabular-nums": "Enables display of tabular numerals.",
   span: "Contributes a grid span to the grid item’s placement such that the corresponding edge of the grid item’s grid area is N lines from its opposite edge.",
   "minmax()": "Defines a size range greater than or equal to min and less than or equal to max.",
   dense: "If specified, the auto-placement algorithm uses a “dense” packing algorithm, which attempts to fill in holes earlier in the grid if smaller items come up later.",
   "fit-content": "Use the fit-content inline size or fit-content block size, as appropriate to the writing mode.",
   manual: "Words are only broken at line breaks where there are characters inside the word that suggest line break opportunities",
   flip: "After rotating by the precededing angle, the image is flipped horizontally. Defaults to 0deg if the angle is ommitted.",
   "from-image": "If the image has an orientation specified in its metadata, such as EXIF, this value computes to the angle that the metadata specifies is necessary to correctly orient the image.",
   "crisp-edges": "The image must be scaled with an algorithm that preserves contrast and edges in the image, and which does not smooth colors or introduce blur to the image in the process.",
   optimizeQuality: "Deprecated.",
   pixelated: "When scaling the image up, the 'nearest neighbor' or similar algorithm must be used, so that the image appears to be simply composed of very large pixels.",
   active: "The input method editor is initially active; text entry is performed using it unless the user specifically dismisses it.",
   disabled: "The input method editor is disabled and may not be activated by the user.",
   inactive: "The input method editor is initially inactive, but the user may activate it if they wish.",
   safe: "If the size of the item overflows the alignment container, the item is instead aligned as if the alignment mode were start.",
   unsafe: "Regardless of the relative sizes of the item and alignment container, the given alignment value is honored.",
   "space-evenly": "The items are evenly distributed within the alignment container along the main axis.",
   circle: "A hollow circle.",
   disc: "A filled circle.",
   inside: "The marker box is outside the principal block box, as described in the section on the ::marker pseudo-element below.",
   outside: "The ::marker pseudo-element is an inline element placed immediately before all ::before pseudo-elements in the principal block box, after which the element's content flows.",
   "symbols()": "Allows a counter style to be defined inline.",
   "path()": "Defines an SVG path as a string, with optional 'fill-rule' as the first argument.",
   "block-axis": "Elements are oriented along the box's axis.",
   "inline-axis": "Elements are oriented vertically.",
   "padding-box": "The specified width and height (and respective min/max properties) on this element determine the padding box of the element.",
   "line-through": "Each line of text has a line through the middle.",
   overline: "Each line of text has a line above it.",
   underline: "Each line of text is underlined.",
   dashed: "Produces a dashed line style.",
   dotted: "Produces a dotted line.",
   double: "Produces a double line.",
   solid: "Produces a solid line.",
   wavy: "Produces a wavy line.",
   "matrix()": "Specifies a 2D transformation in the form of a transformation matrix of six values. matrix(a,b,c,d,e,f) is equivalent to applying the transformation matrix [a b c d e f]",
   "matrix3d()": "Specifies a 3D transformation as a 4x4 homogeneous matrix of 16 values in column-major order.",
   perspective: "Specifies a perspective projection matrix.",
   "rotate()": "Specifies a 2D rotation by the angle specified in the parameter about the origin of the element, as defined by the transform-origin property.",
   "rotate3d()": "Specifies a clockwise 3D rotation by the angle specified in last parameter about the [x,y,z] direction vector described by the first 3 parameters.",
   "rotateX('angle')": "Specifies a clockwise rotation by the given angle about the X axis.",
   "rotateY('angle')": "Specifies a clockwise rotation by the given angle about the Y axis.",
   "rotateZ('angle')": "Specifies a clockwise rotation by the given angle about the Z axis.",
   "scale()": "Specifies a 2D scale operation by the [sx,sy] scaling vector described by the 2 parameters. If the second parameter is not provided, it is takes a value equal to the first.",
   "scale3d()": "Specifies a 3D scale operation by the [sx,sy,sz] scaling vector described by the 3 parameters.",
   "scaleX()": "Specifies a scale operation using the [sx,1] scaling vector, where sx is given as the parameter.",
   "scaleY()": "Specifies a scale operation using the [sy,1] scaling vector, where sy is given as the parameter.",
   "scaleZ()": "Specifies a scale operation using the [1,1,sz] scaling vector, where sz is given as the parameter.",
   "skew()": "Specifies a skew transformation along the X and Y axes. The first angle parameter specifies the skew on the X axis. The second angle parameter specifies the skew on the Y axis. If the second parameter is not given then a value of 0 is used for the Y angle (ie: no skew on the Y axis).",
   "skewX()": "Specifies a skew transformation along the X axis by the given angle.",
   "skewY()": "Specifies a skew transformation along the Y axis by the given angle.",
   "translate()": "Specifies a 2D translation by the vector [tx, ty], where tx is the first translation-value parameter and ty is the optional second translation-value parameter.",
   "translate3d()": "Specifies a 3D translation by the vector [tx,ty,tz], with tx, ty and tz being the first, second and third translation-value parameters respectively.",
   "translateX()": "Specifies a translation by the given amount in the X direction.",
   "translateY()": "Specifies a translation by the given amount in the Y direction.",
   "translateZ()": "Specifies a translation by the given amount in the Z direction. Note that percentage values are not allowed in the translateZ translation-value, and if present are evaluated as 0.",
   false: "The element does not contain an accelerator key sequence.",
   true: "The element contains an accelerator key sequence.",
   bt: "Bottom-to-top block flow. Layout is horizontal.",
   lr: "Left-to-right direction. The flow orientation is vertical.",
   rl: "Right-to-left direction. The flow orientation is vertical.",
   tb: "Top-to-bottom direction. The flow orientation is horizontal.",
   zoom: "The element is zoomable.",
   "no-limit": "There is no limit.",
   mode: "Any of the range of mode values available to the -ms-layout-grid-mode property.",
   type: "Any of the range of type values available to the -ms-layout-grid-type property.",
   "-ms-autohiding-scrollbar": "Indicates the element displays auto-hiding scrollbars during mouse interactions and panning indicators during touch and keyboard interactions.",
   scrollbar: 'Scrollbars are typically narrow strips inserted on one or two edges of an element and which often have arrows to click on and a "thumb" to drag up and down (or left and right) to move the contents of the element.',
   "ideograph-alpha": "Creates 1/4em extra spacing between runs of ideographic letters and non-ideographic letters, such as Latin-based, Cyrillic, Greek, Arabic or Hebrew.",
   "ideograph-numeric": "Creates 1/4em extra spacing between runs of ideographic letters and numeric glyphs.",
   "ideograph-parenthesis": "Creates extra spacing between normal (non wide) parenthesis and ideographs.",
   "ideograph-space": "Extends the width of the space character while surrounded by ideographs.",
   punctuation: "Creates extra non-breaking spacing around punctuation as required by language-specific typographic conventions.",
   digits: "Attempt to typeset horizontally each maximal sequence of consecutive ASCII digits (U+0030–U+0039) that has as many or fewer characters than the specified integer such that it takes up the space of a single character within the vertical line box.",
   "inter-cluster": "Justification primarily changes spacing at word separators and at grapheme cluster boundaries in clustered scripts. This value is typically used for Southeast Asian scripts such as Thai.",
   "inter-ideograph": "Justification primarily changes spacing at word separators and at inter-graphemic boundaries in scripts that use no word spaces. This value is typically used for CJK languages.",
   "inter-word": "Justification primarily changes spacing at word separators. This value is typically used for languages that separate words using spaces, like English or (sometimes) Korean.",
   kashida: "Justification primarily stretches Arabic and related scripts through the use of kashida or other calligraphic elongation.",
   clip: "Clip inline content that overflows. Characters may be only partially rendered.",
   ellipsis: "Render an ellipsis character (U+2026) to represent clipped inline content.",
   over: "The underline is aligned with the 'top' (right in vertical writing) edge of the element's em-box. In this mode, an overline also switches sides.",
   under: "The underline is aligned with the 'bottom' (left in vertical writing) edge of the element's em-box. In this case the underline usually does not cross the descenders. This is sometimes called 'accounting' underline.",
   grippers: "Grippers are always on.",
   "break-all": "Lines may break between any two grapheme clusters for non-CJK scripts.",
   clear: "Inline flow content can only wrap on top and bottom of the exclusion and must leave the areas to the start and end edges of the exclusion box empty.",
   maximum: "Inline flow content can wrap on the side of the exclusion with the largest available space for the given line, and must leave the other side of the exclusion empty.",
   minimum: "Inline flow content can flow around the edge of the exclusion with the smallest available space within the flow content’s containing block, and must leave the other edge of the exclusion empty.",
   current: "Indicates that the user agent should target the frame that the element is in.",
   root: "Indicates that the user agent should target the full window.",
   "scale-down": "Size the content as if ‘none’ or ‘contain’ were specified, whichever would result in a smaller concrete object size.",
   invert: "Performs a color inversion on the pixels on the screen.",
   "-moz-hidden-unscrollable": "Same as the standardized 'clip', except doesn’t establish a block formatting context.",
   painted: 'The given element can be the target element for pointer events when the pointer is over a "painted" area. ',
   visibleFill: "The given element can be the target element for pointer events when the ‘visibility’ property is set to visible and when the pointer is over the interior of the element.",
   visiblePainted: "The given element can be the target element for pointer events when the ‘visibility’ property is set to visible and when the pointer is over a ‘painted’ area.",
   visibleStroke: "The given element can be the target element for pointer events when the ‘visibility’ property is set to visible and when the pointer is over the perimeter of the element.",
   absolute: "The box's position (and possibly size) is specified with the 'top', 'right', 'bottom', and 'left' properties. These properties specify offsets with respect to the box's 'containing block'.",
   "-ms-page": "The box's position is calculated according to the 'absolute' model.",
   relative: "The box's position is calculated according to the normal flow (this is called the position in normal flow). Then the box is offset relative to its normal position.",
   static: "The box is a normal box, laid out according to the normal flow. The 'top', 'right', 'bottom', and 'left' properties do not apply.",
   sticky: "The box's position is calculated according to the normal flow. Then the box is offset relative to its flow root and containing block and in all cases, including table elements, does not affect the position of any following boxes.",
   "-webkit-sticky": "The box's position is calculated according to the normal flow. Then the box is offset relative to its flow root and containing block and in all cases, including table elements, does not affect the position of any following boxes.",
   "distribute-letter": "If the width of the ruby text is smaller than that of the base, then the ruby text contents are evenly distributed across the width of the base, with the first and last ruby text glyphs lining up with the corresponding first and last base glyphs. If the width of the ruby text is at least the width of the base, then the letters of the base are evenly distributed across the width of the ruby text.",
   "distribute-space": "If the width of the ruby text is smaller than that of the base, then the ruby text contents are evenly distributed across the width of the base, with a certain amount of white space preceding the first and following the last character in the ruby text. That amount of white space is normally equal to half the amount of inter-character space of the ruby text.",
   "line-edge": "If the ruby text is not adjacent to a line edge, it is aligned as in 'auto'. If it is adjacent to a line edge, then it is still aligned as in auto, but the side of the ruby text that touches the end of the line is lined up with the corresponding edge of the base.",
   after: "The ruby text appears after the base. This is a relatively rare setting used in ideographic East Asian writing systems, most easily found in educational text.",
   before: "The ruby text appears before the base. This is the most common setting used in ideographic East Asian writing systems.",
   "attr(x)": "The value of attribute 'x' is a string value. The string value is evaluated as a <number> to determine the number of ruby base elements to be spanned by the annotation element.",
   smooth: "Scrolls in a smooth fashion using a user-agent-defined timing function and time period.",
   "margin-box": "The background is painted within (clipped to) the margin box.",
   crispEdges: "Emphasize the contrast between clean edges of artwork over rendering speed and geometric precision.",
   "format()": "Optional hint describing the format of the font resource.",
   "local()": "Format-specific string that identifies a locally available copy of a given font.",
   butt: "Indicates that the stroke for each subpath does not extend beyond its two endpoints.",
   bevel: "Indicates that a bevelled corner is to be used to join path segments.",
   miter: "Indicates that a sharp corner is to be used to join path segments.",
   additive: "Represents “sign-value” numbering systems, which, rather than using reusing digits in different positions to change their value, define additional digits with much larger values, so that the value of the number can be obtained by adding all the digits together.",
   cyclic: "Cycles repeatedly through its provided symbols, looping back to the beginning when it reaches the end of the list.",
   extends: "Use the algorithm of another counter style, but alter other aspects.",
   numeric: "interprets the list of counter symbols as digits to a \"place-value\" numbering system, similar to the default 'decimal' counter style.",
   symbolic: "Cycles repeatedly through its provided symbols, doubling, tripling, etc. the symbols on each successive pass through the list.",
   sideways: "This value is equivalent to 'sideways-right' in 'vertical-rl' writing mode and equivalent to 'sideways-left' in 'vertical-lr' writing mode.",
   "sideways-right": "In vertical writing modes, this causes text to be set as if in a horizontal layout, but rotated 90° clockwise.",
   upright: "In vertical writing modes, characters from horizontal-only scripts are rendered upright, i.e. in their standard horizontal orientation.",
   optimizeLegibility: "Indicates that the user agent shall emphasize legibility over rendering speed and geometric precision.",
   capitalize: "Puts the first typographic letter unit of each word in titlecase.",
   lowercase: "Puts all letters in lowercase.",
   uppercase: "Puts all letters in uppercase.",
   "perspective()": "Specifies a perspective projection matrix.",
   flat: "All children of this element are rendered flattened into the 2D plane of the element.",
   "preserve-3d": "Flattening is not performed, so children maintain their position in 3D space.",
   "bidi-override": "Inside the element, reordering is strictly in sequence according to the 'direction' property; the implicit part of the bidirectional algorithm is ignored.",
   embed: "If the element is inline-level, this value opens an additional level of embedding with respect to the bidirectional algorithm. The direction of this embedding level is given by the 'direction' property.",
   "isolate-override": "This combines the isolation behavior of 'isolate' with the directional override behavior of 'bidi-override'",
   plaintext: "For the purposes of the Unicode bidirectional algorithm, the base directionality of each bidi paragraph for which the element forms the containing block is determined not by the element's computed 'direction'.",
   "U+26": "Ampersand.",
   "U+20-24F, U+2B0-2FF, U+370-4FF, U+1E00-1EFF, U+2000-20CF, U+2100-23FF, U+2500-26FF, U+E000-F8FF, U+FB00–FB4F": "WGL4 character set (Pan-European).",
   "U+20-17F, U+2B0-2FF, U+2000-206F, U+20A0-20CF, U+2100-21FF, U+2600-26FF": "The Multilingual European Subset No. 1. Latin. Covers ~44 languages.",
   "U+20-2FF, U+370-4FF, U+1E00-20CF, U+2100-23FF, U+2500-26FF, U+FB00-FB4F, U+FFF0-FFFD": "The Multilingual European Subset No. 2. Latin, Greek, and Cyrillic. Covers ~128 language.",
   "U+20-4FF, U+530-58F, U+10D0-10FF, U+1E00-23FF, U+2440-245F, U+2500-26FF, U+FB00-FB4F, U+FE20-FE2F, U+FFF0-FFFD": "The Multilingual European Subset No. 3. Covers all characters belonging to European scripts.",
   "U+00-7F": "Basic Latin (ASCII).",
   "U+80-FF": "Latin-1 Supplement. Accented characters for Western European languages, common punctuation characters, multiplication and division signs.",
   "U+100-17F": "Latin Extended-A. Accented characters for for Czech, Dutch, Polish, and Turkish.",
   "U+180-24F": "Latin Extended-B. Croatian, Slovenian, Romanian, Non-European and historic latin, Khoisan, Pinyin, Livonian, Sinology.",
   "U+1E00-1EFF": "Latin Extended Additional. Vietnamese, German captial sharp s, Medievalist, Latin general use.",
   "U+250-2AF": "International Phonetic Alphabet Extensions.",
   "U+370-3FF": "Greek and Coptic.",
   "U+1F00-1FFF": "Greek Extended. Accented characters for polytonic Greek.",
   "U+400-4FF": "Cyrillic.",
   "U+500-52F": "Cyrillic Supplement. Extra letters for Komi, Khanty, Chukchi, Mordvin, Kurdish, Aleut, Chuvash, Abkhaz, Azerbaijani, and Orok.",
   "U+00-52F, U+1E00-1FFF, U+2200–22FF": "Latin, Greek, Cyrillic, some punctuation and symbols.",
   "U+530–58F": "Armenian.",
   "U+590–5FF": "Hebrew.",
   "U+600–6FF": "Arabic.",
   "U+750–77F": "Arabic Supplement. Additional letters for African languages, Khowar, Torwali, Burushaski, and early Persian.",
   "U+8A0–8FF": "Arabic Extended-A. Additional letters for African languages, European and Central Asian languages, Rohingya, Tamazight, Arwi, and Koranic annotation signs.",
   "U+700–74F": "Syriac.",
   "U+900–97F": "Devanagari.",
   "U+980–9FF": "Bengali.",
   "U+A00–A7F": "Gurmukhi.",
   "U+A80–AFF": "Gujarati.",
   "U+B00–B7F": "Oriya.",
   "U+B80–BFF": "Tamil.",
   "U+C00–C7F": "Telugu.",
   "U+C80–CFF": "Kannada.",
   "U+D00–D7F": "Malayalam.",
   "U+D80–DFF": "Sinhala.",
   "U+118A0–118FF": "Warang Citi.",
   "U+E00–E7F": "Thai.",
   "U+1A20–1AAF": "Tai Tham.",
   "U+AA80–AADF": "Tai Viet.",
   "U+E80–EFF": "Lao.",
   "U+F00–FFF": "Tibetan.",
   "U+1000–109F": "Myanmar (Burmese).",
   "U+10A0–10FF": "Georgian.",
   "U+1200–137F": "Ethiopic.",
   "U+1380–139F": "Ethiopic Supplement. Extra Syllables for Sebatbeit, and Tonal marks",
   "U+2D80–2DDF": "Ethiopic Extended. Extra Syllables for Me'en, Blin, and Sebatbeit.",
   "U+AB00–AB2F": "Ethiopic Extended-A. Extra characters for Gamo-Gofa-Dawro, Basketo, and Gumuz.",
   "U+1780–17FF": "Khmer.",
   "U+1800–18AF": "Mongolian.",
   "U+1B80–1BBF": "Sundanese.",
   "U+1CC0–1CCF": "Sundanese Supplement. Punctuation.",
   "U+4E00–9FD5": "CJK (Chinese, Japanese, Korean) Unified Ideographs. Most common ideographs for modern Chinese and Japanese.",
   "U+3400–4DB5": "CJK Unified Ideographs Extension A. Rare ideographs.",
   "U+2F00–2FDF": "Kangxi Radicals.",
   "U+2E80–2EFF": "CJK Radicals Supplement. Alternative forms of Kangxi Radicals.",
   "U+1100–11FF": "Hangul Jamo.",
   "U+AC00–D7AF": "Hangul Syllables.",
   "U+3040–309F": "Hiragana.",
   "U+30A0–30FF": "Katakana.",
   "U+A5, U+4E00-9FFF, U+30??, U+FF00-FF9F": "Japanese Kanji, Hiragana and Katakana characters plus Yen/Yuan symbol.",
   "U+A4D0–A4FF": "Lisu.",
   "U+A000–A48F": "Yi Syllables.",
   "U+A490–A4CF": "Yi Radicals.",
   "U+2000-206F": "General Punctuation.",
   "U+3000–303F": "CJK Symbols and Punctuation.",
   "U+2070–209F": "Superscripts and Subscripts.",
   "U+20A0–20CF": "Currency Symbols.",
   "U+2100–214F": "Letterlike Symbols.",
   "U+2150–218F": "Number Forms.",
   "U+2190–21FF": "Arrows.",
   "U+2200–22FF": "Mathematical Operators.",
   "U+2300–23FF": "Miscellaneous Technical.",
   "U+E000-F8FF": "Private Use Area.",
   "U+FB00–FB4F": "Alphabetic Presentation Forms. Ligatures for latin, Armenian, and Hebrew.",
   "U+FB50–FDFF": "Arabic Presentation Forms-A. Contextual forms / ligatures for Persian, Urdu, Sindhi, Central Asian languages, etc, Arabic pedagogical symbols, word ligatures.",
   "U+1F600–1F64F": "Emoji: Emoticons.",
   "U+2600–26FF": "Emoji: Miscellaneous Symbols.",
   "U+1F300–1F5FF": "Emoji: Miscellaneous Symbols and Pictographs.",
   "U+1F900–1F9FF": "Emoji: Supplemental Symbols and Pictographs.",
   "U+1F680–1F6FF": "Emoji: Transport and Map Symbols.",
   "text-bottom": "Align the bottom of the box with the after-edge of the parent element's font.",
   "text-top": "Align the top of the box with the before-edge of the parent element's font.",
   break: "If the content fits within the CSS Region, then this property has no effect.",
   pre: "Sets 'white-space-collapsing' to 'preserve' and 'text-wrap' to 'none'.",
   "pre-line": "Sets 'white-space-collapsing' to 'preserve-breaks' and 'text-wrap' to 'normal'.",
   "pre-wrap": "Sets 'white-space-collapsing' to 'preserve' and 'text-wrap' to 'normal'.",
   "scroll-position": "Indicates that the author expects to animate or change the scroll position of the element in the near future.",
   "horizontal-tb": "Top-to-bottom block flow direction. The writing mode is horizontal.",
   "sideways-lr": "Left-to-right block flow direction. The writing mode is vertical, while the typographic mode is horizontal.",
   "sideways-rl": "Right-to-left block flow direction. The writing mode is vertical, while the typographic mode is horizontal.",
   "vertical-lr": "Left-to-right block flow direction. The writing mode is vertical.",
   "vertical-rl": "Right-to-left block flow direction. The writing mode is vertical."
  };
  var dt = ot["loadMessageBundle"]();
  var pt = {
   aliceblue: "#f0f8ff",
   antiquewhite: "#faebd7",
   aqua: "#00ffff",
   aquamarine: "#7fffd4",
   azure: "#f0ffff",
   beige: "#f5f5dc",
   bisque: "#ffe4c4",
   black: "#000000",
   blanchedalmond: "#ffebcd",
   blue: "#0000ff",
   blueviolet: "#8a2be2",
   brown: "#a52a2a",
   burlywood: "#deb887",
   cadetblue: "#5f9ea0",
   chartreuse: "#7fff00",
   chocolate: "#d2691e",
   coral: "#ff7f50",
   cornflowerblue: "#6495ed",
   cornsilk: "#fff8dc",
   crimson: "#dc143c",
   cyan: "#00ffff",
   darkblue: "#00008b",
   darkcyan: "#008b8b",
   darkgoldenrod: "#b8860b",
   darkgray: "#a9a9a9",
   darkgrey: "#a9a9a9",
   darkgreen: "#006400",
   darkkhaki: "#bdb76b",
   darkmagenta: "#8b008b",
   darkolivegreen: "#556b2f",
   darkorange: "#ff8c00",
   darkorchid: "#9932cc",
   darkred: "#8b0000",
   darksalmon: "#e9967a",
   darkseagreen: "#8fbc8f",
   darkslateblue: "#483d8b",
   darkslategray: "#2f4f4f",
   darkslategrey: "#2f4f4f",
   darkturquoise: "#00ced1",
   darkviolet: "#9400d3",
   deeppink: "#ff1493",
   deepskyblue: "#00bfff",
   dimgray: "#696969",
   dimgrey: "#696969",
   dodgerblue: "#1e90ff",
   firebrick: "#b22222",
   floralwhite: "#fffaf0",
   forestgreen: "#228b22",
   fuchsia: "#ff00ff",
   gainsboro: "#dcdcdc",
   ghostwhite: "#f8f8ff",
   gold: "#ffd700",
   goldenrod: "#daa520",
   gray: "#808080",
   grey: "#808080",
   green: "#008000",
   greenyellow: "#adff2f",
   honeydew: "#f0fff0",
   hotpink: "#ff69b4",
   indianred: "#cd5c5c",
   indigo: "#4b0082",
   ivory: "#fffff0",
   khaki: "#f0e68c",
   lavender: "#e6e6fa",
   lavenderblush: "#fff0f5",
   lawngreen: "#7cfc00",
   lemonchiffon: "#fffacd",
   lightblue: "#add8e6",
   lightcoral: "#f08080",
   lightcyan: "#e0ffff",
   lightgoldenrodyellow: "#fafad2",
   lightgray: "#d3d3d3",
   lightgrey: "#d3d3d3",
   lightgreen: "#90ee90",
   lightpink: "#ffb6c1",
   lightsalmon: "#ffa07a",
   lightseagreen: "#20b2aa",
   lightskyblue: "#87cefa",
   lightslategray: "#778899",
   lightslategrey: "#778899",
   lightsteelblue: "#b0c4de",
   lightyellow: "#ffffe0",
   lime: "#00ff00",
   limegreen: "#32cd32",
   linen: "#faf0e6",
   magenta: "#ff00ff",
   maroon: "#800000",
   mediumaquamarine: "#66cdaa",
   mediumblue: "#0000cd",
   mediumorchid: "#ba55d3",
   mediumpurple: "#9370d8",
   mediumseagreen: "#3cb371",
   mediumslateblue: "#7b68ee",
   mediumspringgreen: "#00fa9a",
   mediumturquoise: "#48d1cc",
   mediumvioletred: "#c71585",
   midnightblue: "#191970",
   mintcream: "#f5fffa",
   mistyrose: "#ffe4e1",
   moccasin: "#ffe4b5",
   navajowhite: "#ffdead",
   navy: "#000080",
   oldlace: "#fdf5e6",
   olive: "#808000",
   olivedrab: "#6b8e23",
   orange: "#ffa500",
   orangered: "#ff4500",
   orchid: "#da70d6",
   palegoldenrod: "#eee8aa",
   palegreen: "#98fb98",
   paleturquoise: "#afeeee",
   palevioletred: "#d87093",
   papayawhip: "#ffefd5",
   peachpuff: "#ffdab9",
   peru: "#cd853f",
   pink: "#ffc0cb",
   plum: "#dda0dd",
   powderblue: "#b0e0e6",
   purple: "#800080",
   red: "#ff0000",
   rebeccapurple: "#663399",
   rosybrown: "#bc8f8f",
   royalblue: "#4169e1",
   saddlebrown: "#8b4513",
   salmon: "#fa8072",
   sandybrown: "#f4a460",
   seagreen: "#2e8b57",
   seashell: "#fff5ee",
   sienna: "#a0522d",
   silver: "#c0c0c0",
   skyblue: "#87ceeb",
   slateblue: "#6a5acd",
   slategray: "#708090",
   slategrey: "#708090",
   snow: "#fffafa",
   springgreen: "#00ff7f",
   steelblue: "#4682b4",
   tan: "#d2b48c",
   teal: "#008080",
   thistle: "#d8bfd8",
   tomato: "#ff6347",
   turquoise: "#40e0d0",
   violet: "#ee82ee",
   wheat: "#f5deb3",
   white: "#ffffff",
   whitesmoke: "#f5f5f5",
   yellow: "#ffff00",
   yellowgreen: "#9acd32"
  };
  var mt = {
   currentColor: "The value of the 'color' property. The computed value of the 'currentColor' keyword is the computed value of the 'color' property. If the 'currentColor' keyword is set on the 'color' property itself, it is treated as 'color:inherit' at parse time.",
   transparent: "Fully transparent. This keyword can be considered a shorthand for rgba(0,0,0,0) which is its computed value."
  };
  var _t = {
   bottom: "Computes to ‘100%’ for the vertical position if one or two values are given, otherwise specifies the bottom edge as the origin for the next offset.",
   center: "Computes to ‘50%’ (‘left 50%’) for the horizontal position if the horizontal position is not otherwise specified, or ‘50%’ (‘top 50%’) for the vertical position if it is.",
   left: "Computes to ‘0%’ for the horizontal position if one or two values are given, otherwise specifies the left edge as the origin for the next offset.",
   right: "Computes to ‘100%’ for the horizontal position if one or two values are given, otherwise specifies the right edge as the origin for the next offset.",
   top: "Computes to ‘0%’ for the vertical position if one or two values are given, otherwise specifies the top edge as the origin for the next offset."
  };
  var gt = {
   "no-repeat": "Placed once and not repeated in this direction.",
   repeat: "Repeated in this direction as often as needed to cover the background painting area.",
   "repeat-x": "Computes to ‘repeat no-repeat’.",
   "repeat-y": "Computes to ‘no-repeat repeat’.",
   round: "Repeated as often as will fit within the background positioning area. If it doesn’t fit a whole number of times, it is rescaled so that it does.",
   space: "Repeated as often as will fit within the background positioning area without being clipped and then the images are spaced out to fill the area."
  };
  var ht = {
   dashed: "A series of square-ended dashes.",
   dotted: "A series of round dots.",
   double: "Two parallel solid lines with some space between them.",
   groove: "Looks as if it were carved in the canvas.",
   hidden: "Same as ‘none’, but has different behavior in the border conflict resolution rules for border-collapsed tables.",
   inset: "Looks as if the content on the inside of the border is sunken into the canvas.",
   none: "No border. Color and width are ignored.",
   outset: "Looks as if the content on the inside of the border is coming out of the canvas.",
   ridge: "Looks as if it were coming out of the canvas.",
   solid: "A single line segment."
  };
  var vt = [ "medium", "thick", "thin" ];
  var yt = {
   "border-box": "The background is painted within (clipped to) the border box.",
   "content-box": "The background is painted within (clipped to) the content box.",
   "padding-box": "The background is painted within (clipped to) the padding box."
  };
  var bt = {
   "margin-box": "Uses the margin box as reference box.",
   "fill-box": "Uses the object bounding box as reference box.",
   "stroke-box": "Uses the stroke bounding box as reference box.",
   "view-box": "Uses the nearest SVG viewport as reference box."
  };
  var xt = {
   initial: "Represents the value specified as the property’s initial value.",
   inherit: "Represents the computed value of the property on the element’s parent.",
   unset: "Acts as either `inherit` or `initial`, depending on whether the property is inherited or not."
  };
  var kt = [ {
   func: "rgb($red, $green, $blue)",
   desc: dt("css.builtin.rgb", "Creates a Color from red, green, and blue values.")
  }, {
   func: "rgba($red, $green, $blue, $alpha)",
   desc: dt("css.builtin.rgba", "Creates a Color from red, green, blue, and alpha values.")
  }, {
   func: "hsl($hue, $saturation, $lightness)",
   desc: dt("css.builtin.hsl", "Creates a Color from hue, saturation, and lightness values.")
  }, {
   func: "hsla($hue, $saturation, $lightness, $alpha)",
   desc: dt("css.builtin.hsla", "Creates a Color from hue, saturation, lightness, and alpha values.")
  } ];
  var St = {
   "url()": "Reference an image file by URL",
   "image()": "Provide image fallbacks and annotations.",
   "-webkit-image-set()": "Provide multiple resolutions. Remember to use unprefixed image-set() in addition.",
   "image-set()": "Provide multiple resolutions of an image and let the UA decide which is most appropriate in a given situation.",
   "-moz-element()": "Use an element in the document as an image. Remember to use unprefixed element() in addition.",
   "element()": "Use an element in the document as an image.",
   "cross-fade()": "Indicates the two images to be combined and how far along in the transition the combination is.",
   "-webkit-gradient()": "Deprecated. Use modern linear-gradient() or radial-gradient() instead.",
   "-webkit-linear-gradient()": "Linear gradient. Remember to use unprefixed version in addition.",
   "-moz-linear-gradient()": "Linear gradient. Remember to use unprefixed version in addition.",
   "-o-linear-gradient()": "Linear gradient. Remember to use unprefixed version in addition.",
   "linear-gradient()": "A linear gradient is created by specifying a straight gradient line, and then several colors placed along that line.",
   "-webkit-repeating-linear-gradient()": "Repeating Linear gradient. Remember to use unprefixed version in addition.",
   "-moz-repeating-linear-gradient()": "Repeating Linear gradient. Remember to use unprefixed version in addition.",
   "-o-repeating-linear-gradient()": "RepeatingLinear gradient. Remember to use unprefixed version in addition.",
   "repeating-linear-gradient()": "Same as linear-gradient, except the color-stops are repeated infinitely in both directions, with their positions shifted by multiples of the difference between the last specified color-stop’s position and the first specified color-stop’s position.",
   "-webkit-radial-gradient()": "Radial gradient. Remember to use unprefixed version in addition.",
   "-moz-radial-gradient()": "Radial gradient. Remember to use unprefixed version in addition.",
   "radial-gradient()": "Colors emerge from a single point and smoothly spread outward in a circular or elliptical shape.",
   "-webkit-repeating-radial-gradient()": "Repeating radial gradient. Remember to use unprefixed version in addition.",
   "-moz-repeating-radial-gradient()": "Repeating radial gradient. Remember to use unprefixed version in addition.",
   "repeating-radial-gradient()": "Same as radial-gradient, except the color-stops are repeated infinitely in both directions, with their positions shifted by multiples of the difference between the last specified color-stop’s position and the first specified color-stop’s position."
  };
  var wt = {
   ease: "Equivalent to cubic-bezier(0.25, 0.1, 0.25, 1.0).",
   "ease-in": "Equivalent to cubic-bezier(0.42, 0, 1.0, 1.0).",
   "ease-in-out": "Equivalent to cubic-bezier(0.42, 0, 0.58, 1.0).",
   "ease-out": "Equivalent to cubic-bezier(0, 0, 0.58, 1.0).",
   linear: "Equivalent to cubic-bezier(0.0, 0.0, 1.0, 1.0).",
   "step-end": "Equivalent to steps(1, end).",
   "step-start": "Equivalent to steps(1, start).",
   "steps()": "The first parameter specifies the number of intervals in the function. The second parameter, which is optional, is either the value “start” or “end”.",
   "cubic-bezier()": "Specifies a cubic-bezier curve. The four values specify points P1 and P2  of the curve as (x1, y1, x2, y2).",
   "cubic-bezier(0.6, -0.28, 0.735, 0.045)": "Ease-in Back. Overshoots.",
   "cubic-bezier(0.68, -0.55, 0.265, 1.55)": "Ease-in-out Back. Overshoots.",
   "cubic-bezier(0.175, 0.885, 0.32, 1.275)": "Ease-out Back. Overshoots.",
   "cubic-bezier(0.6, 0.04, 0.98, 0.335)": "Ease-in Circular. Based on half circle.",
   "cubic-bezier(0.785, 0.135, 0.15, 0.86)": "Ease-in-out Circular. Based on half circle.",
   "cubic-bezier(0.075, 0.82, 0.165, 1)": "Ease-out Circular. Based on half circle.",
   "cubic-bezier(0.55, 0.055, 0.675, 0.19)": "Ease-in Cubic. Based on power of three.",
   "cubic-bezier(0.645, 0.045, 0.355, 1)": "Ease-in-out Cubic. Based on power of three.",
   "cubic-bezier(0.215, 0.610, 0.355, 1)": "Ease-out Cubic. Based on power of three.",
   "cubic-bezier(0.95, 0.05, 0.795, 0.035)": "Ease-in Exponential. Based on two to the power ten.",
   "cubic-bezier(1, 0, 0, 1)": "Ease-in-out Exponential. Based on two to the power ten.",
   "cubic-bezier(0.19, 1, 0.22, 1)": "Ease-out Exponential. Based on two to the power ten.",
   "cubic-bezier(0.47, 0, 0.745, 0.715)": "Ease-in Sine.",
   "cubic-bezier(0.445, 0.05, 0.55, 0.95)": "Ease-in-out Sine.",
   "cubic-bezier(0.39, 0.575, 0.565, 1)": "Ease-out Sine.",
   "cubic-bezier(0.55, 0.085, 0.68, 0.53)": "Ease-in Quadratic. Based on power of two.",
   "cubic-bezier(0.455, 0.03, 0.515, 0.955)": "Ease-in-out Quadratic. Based on power of two.",
   "cubic-bezier(0.25, 0.46, 0.45, 0.94)": "Ease-out Quadratic. Based on power of two.",
   "cubic-bezier(0.895, 0.03, 0.685, 0.22)": "Ease-in Quartic. Based on power of four.",
   "cubic-bezier(0.77, 0, 0.175, 1)": "Ease-in-out Quartic. Based on power of four.",
   "cubic-bezier(0.165, 0.84, 0.44, 1)": "Ease-out Quartic. Based on power of four.",
   "cubic-bezier(0.755, 0.05, 0.855, 0.06)": "Ease-in Quintic. Based on power of five.",
   "cubic-bezier(0.86, 0, 0.07, 1)": "Ease-in-out Quintic. Based on power of five.",
   "cubic-bezier(0.23, 1, 0.320, 1)": "Ease-out Quintic. Based on power of five."
  };
  var Ct = {
   "circle()": "Defines a circle.",
   "ellipse()": "Defines an ellipse.",
   "inset()": "Defines an inset rectangle.",
   "polygon()": "Defines a polygon."
  };
  var Dt = {
   length: [ "em", "rem", "ex", "px", "cm", "mm", "in", "pt", "pc", "ch", "vw", "vh", "vmin", "vmax" ],
   angle: [ "deg", "rad", "grad", "turn" ],
   time: [ "ms", "s" ],
   frequency: [ "Hz", "kHz" ],
   resolution: [ "dpi", "dpcm", "dppx" ],
   percentage: [ "%", "fr" ]
  };
  var Tt = [ "a", "abbr", "address", "area", "article", "aside", "audio", "b", "base", "bdi", "bdo", "blockquote", "body", "br", "button", "canvas", "caption", "cite", "code", "col", "colgroup", "data", "datalist", "dd", "del", "details", "dfn", "dialog", "div", "dl", "dt", "em", "embed", "fieldset", "figcaption", "figure", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "iframe", "img", "input", "ins", "kbd", "keygen", "label", "legend", "li", "link", "main", "map", "mark", "menu", "menuitem", "meta", "meter", "nav", "noscript", "object", "ol", "optgroup", "option", "output", "p", "param", "picture", "pre", "progress", "q", "rb", "rp", "rt", "rtc", "ruby", "s", "samp", "script", "section", "select", "small", "source", "span", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "time", "title", "tr", "track", "u", "ul", "let", "video", "wbr" ];
  var Et = [ "circle", "clipPath", "cursor", "defs", "desc", "ellipse", "feBlend", "feColorMatrix", "feComponentTransfer", "feComposite", "feConvolveMatrix", "feDiffuseLighting", "feDisplacementMap", "feDistantLight", "feDropShadow", "feFlood", "feFuncA", "feFuncB", "feFuncG", "feFuncR", "feGaussianBlur", "feImage", "feMerge", "feMergeNode", "feMorphology", "feOffset", "fePointLight", "feSpecularLighting", "feSpotLight", "feTile", "feTurbulence", "filter", "foreignObject", "g", "hatch", "hatchpath", "image", "line", "linearGradient", "marker", "mask", "mesh", "meshpatch", "meshrow", "metadata", "mpath", "path", "pattern", "polygon", "polyline", "radialGradient", "rect", "set", "solidcolor", "stop", "svg", "switch", "symbol", "text", "textPath", "tspan", "use", "view" ];
  function Nt(e) {
   var t = e.getName();
   if (!t) {
    return false;
   }
   return /^(rgb|rgba|hsl|hsla)$/gi.test(t);
  }
  function At(e) {
   if (e.type === X.HexColorValue) {
    return true;
   } else if (e.type === X.Function) {
    return Nt(e);
   } else if (e.type === X.Identifier) {
    if (e.parent && e.parent.type !== X.Term) {
     return false;
    }
    var t = e.getText().toLowerCase();
    if (t === "none") {
     return false;
    }
    if (pt[t]) {
     return true;
    }
   }
   return false;
  }
  var Ft = 48;
  var Pt = 57;
  var It = 65;
  var Ot = 70;
  var Mt = 97;
  var Lt = 102;
  function Rt(e) {
   if (e < Ft) {
    return 0;
   }
   if (e <= Pt) {
    return e - Ft;
   }
   if (e < Mt) {
    e += Mt - It;
   }
   if (e >= Mt && e <= Lt) {
    return e - Mt + 10;
   }
   return 0;
  }
  function Bt(e) {
   if (e[0] !== "#") {
    return null;
   }
   switch (e.length) {
   case 4:
    return {
     red: Rt(e.charCodeAt(1)) * 17 / 255,
     green: Rt(e.charCodeAt(2)) * 17 / 255,
     blue: Rt(e.charCodeAt(3)) * 17 / 255,
     alpha: 1
    };

   case 5:
    return {
     red: Rt(e.charCodeAt(1)) * 17 / 255,
     green: Rt(e.charCodeAt(2)) * 17 / 255,
     blue: Rt(e.charCodeAt(3)) * 17 / 255,
     alpha: Rt(e.charCodeAt(4)) * 17 / 255
    };

   case 7:
    return {
     red: (Rt(e.charCodeAt(1)) * 16 + Rt(e.charCodeAt(2))) / 255,
     green: (Rt(e.charCodeAt(3)) * 16 + Rt(e.charCodeAt(4))) / 255,
     blue: (Rt(e.charCodeAt(5)) * 16 + Rt(e.charCodeAt(6))) / 255,
     alpha: 1
    };

   case 9:
    return {
     red: (Rt(e.charCodeAt(1)) * 16 + Rt(e.charCodeAt(2))) / 255,
     green: (Rt(e.charCodeAt(3)) * 16 + Rt(e.charCodeAt(4))) / 255,
     blue: (Rt(e.charCodeAt(5)) * 16 + Rt(e.charCodeAt(6))) / 255,
     alpha: (Rt(e.charCodeAt(7)) * 16 + Rt(e.charCodeAt(8))) / 255
    };
   }
   return null;
  }
  function zt(e, t, n, r) {
   if (r === void 0) {
    r = 1;
   }
   return {
    red: e / 255,
    green: t / 255,
    blue: n / 255,
    alpha: r
   };
  }
  function jt(e, t, n, r) {
   if (r === void 0) {
    r = 1;
   }
   e = e / 60;
   if (t === 0) {
    return {
     red: n,
     green: n,
     blue: n,
     alpha: r
    };
   } else {
    var i = function(e, t, n) {
     while (n < 0) {
      n += 6;
     }
     while (n >= 6) {
      n -= 6;
     }
     if (n < 1) {
      return (t - e) * n + e;
     }
     if (n < 3) {
      return t;
     }
     if (n < 4) {
      return (t - e) * (4 - n) + e;
     }
     return e;
    };
    var a = n <= .5 ? n * (t + 1) : n + t - n * t;
    var o = n * 2 - a;
    return {
     red: i(o, a, e + 2),
     green: i(o, a, e),
     blue: i(o, a, e - 2),
     alpha: r
    };
   }
  }
  function qt(e) {
   var t = e.red;
   var n = e.green;
   var r = e.blue;
   var i = e.alpha;
   var a = Math.max(t, n, r);
   var o = Math.min(t, n, r);
   var s = 0;
   var c = 0;
   var u = (o + a) / 2;
   var l = a - o;
   if (l > 0) {
    c = Math.min(u <= .5 ? l / (2 * u) : l / (2 - 2 * u), 1);
    switch (a) {
    case t:
     s = (n - r) / l + (n < r ? 6 : 0);
     break;

    case n:
     s = (r - t) / l + 2;
     break;

    case r:
     s = (t - n) / l + 4;
     break;
    }
    s *= 60;
    s = Math.round(s);
   }
   return {
    h: s,
    s: c,
    l: u,
    a: i
   };
  }
  function Ut(e) {
   if (e.type === X.HexColorValue) {
    var t = e.getText();
    return Bt(t);
   } else if (e.type === X.Function) {
    var n = e;
    var r = n.getName();
    var i = n.getArguments().getChildren();
    if (!r || i.length < 3 || i.length > 4) {
     return null;
    }
    try {
     var a = i.length === 4 ? Jt(i[3], 1) : 1;
     if (r === "rgb" || r === "rgba") {
      return {
       red: Jt(i[0], 255),
       green: Jt(i[1], 255),
       blue: Jt(i[2], 255),
       alpha: a
      };
     } else if (r === "hsl" || r === "hsla") {
      var o = Kt(i[0]);
      var s = Jt(i[1], 100);
      var c = Jt(i[2], 100);
      return jt(o, s, c, a);
     }
    } catch (e) {
     return null;
    }
   } else if (e.type === X.Identifier) {
    if (e.parent && e.parent.type !== X.Term) {
     return null;
    }
    var u = e.parent;
    if (u.parent && u.parent.type === X.BinaryExpression) {
     var l = u.parent;
     if (l.parent && l.parent.type === X.ListEntry && l.parent.key === l) {
      return null;
     }
    }
    var f = e.getText().toLowerCase();
    if (f === "none") {
     return null;
    }
    var d = pt[f];
    if (d) {
     return Bt(d);
    }
   }
   return null;
  }
  function Jt(e, t) {
   var n = e.getText();
   var r = n.match(/^([-+]?[0-9]*\.?[0-9]+)(%?)$/);
   if (r) {
    if (r[2]) {
     t = 100;
    }
    var i = parseFloat(r[1]) / t;
    if (i >= 0 && i <= 1) {
     return i;
    }
   }
   throw new Error();
  }
  function Kt(e) {
   var t = e.getText();
   var n = t.match(/^([-+]?[0-9]*\.?[0-9]+)(deg)?$/);
   if (n) {
    return parseFloat(t) % 360;
   }
   throw new Error();
  }
  function Vt(e) {
   if (!e) {
    return false;
   } else {
    e = e.toLowerCase();
    return an().hasOwnProperty(e);
   }
  }
  function Wt(e) {
   if (!e) {
    return false;
   } else {
    e = e.toLowerCase();
    var t = an()[e];
    return t && t.status === "standard";
   }
  }
  function Ht(e) {
   return e.browsers.count > 1;
  }
  function Gt() {
   return [ "@bottom-center", "@bottom-left", "@bottom-left-corner", "@bottom-right", "@bottom-right-corner", "@left-bottom", "@left-middle", "@left-top", "@right-bottom", "@right-middle", "@right-top", "@top-center", "@top-left", "@top-left-corner", "@top-right", "@top-right-corner" ];
  }
  function $t(e) {
   if (!e.description || e.description === "") {
    return null;
   }
   var t = "";
   if (e.data && e.data.status) {
    t += Qt(e.data.status);
   }
   t += e.description;
   var n = Yt(e.browsers);
   if (n) {
    t += "\n(" + n + ")";
   }
   if (e.data && e.data.syntax) {
    t += "\n\nSyntax: " + e.data.syntax;
   }
   return t;
  }
  function Xt(e) {
   switch (e) {
   case "e":
    return "experimental";

   case "n":
    return "nonstandard";

   case "o":
    return "obsolete";

   default:
    return "standard";
   }
  }
  function Qt(e) {
   switch (e) {
   case "e":
    return "⚠️ Property is experimental. Be cautious when using it.️\n\n";

   case "n":
    return "🚨️ Property is nonstandard. Avoid using it.\n\n";

   case "o":
    return "🚨️️️ Property is obsolete. Avoid using it.\n\n";

   default:
    return "";
   }
  }
  function Yt(e) {
   var t = "";
   if (!e || e.all || e.count === 0) {
    return null;
   }
   for (var n in _n) {
    if (typeof e[n] === "string") {
     if (t.length > 0) {
      t = t + ", ";
     }
     t = t + _n[n];
     var r = e[n];
     if (r.length > 0) {
      t = t + " " + r;
     }
    }
   }
   return t;
  }
  function Zt(e) {
   var t = {
    all: false,
    count: 0,
    onCodeComplete: false
   };
   var n = 0;
   if (e) {
    for (var r = 0, i = e.split(","); r < i.length; r++) {
     var a = i[r];
     a = a.trim();
     if (a === "all") {
      t.all = true;
      n = Number.MAX_VALUE;
     } else if (a !== "none") {
      for (var o in _n) {
       if (a.indexOf(o) === 0) {
        t[o] = a.substring(o.length).trim();
        n++;
       }
      }
     }
    }
   } else {
    t.all = true;
    n = Number.MAX_VALUE;
   }
   t.count = n;
   t.onCodeComplete = n > 0;
   return t;
  }
  var en = function() {
   function e(e) {
    this.data = e;
   }
   Object.defineProperty(e.prototype, "name", {
    get: function() {
     return this.data.name;
    },
    enumerable: true,
    configurable: true
   });
   Object.defineProperty(e.prototype, "description", {
    get: function() {
     return this.data.desc || ft[this.data.name];
    },
    enumerable: true,
    configurable: true
   });
   Object.defineProperty(e.prototype, "browsers", {
    get: function() {
     if (!this.browserEntry) {
      this.browserEntry = Zt(this.data.browsers);
     }
     return this.browserEntry;
    },
    enumerable: true,
    configurable: true
   });
   return e;
  }();
  var tn = function() {
   function e(e) {
    this.data = e;
   }
   Object.defineProperty(e.prototype, "name", {
    get: function() {
     return this.data.name;
    },
    enumerable: true,
    configurable: true
   });
   Object.defineProperty(e.prototype, "description", {
    get: function() {
     return this.data.desc || ft[this.data.name];
    },
    enumerable: true,
    configurable: true
   });
   Object.defineProperty(e.prototype, "browsers", {
    get: function() {
     if (!this.browserEntry) {
      this.browserEntry = Zt(this.data.browsers);
     }
     return this.browserEntry;
    },
    enumerable: true,
    configurable: true
   });
   Object.defineProperty(e.prototype, "restrictions", {
    get: function() {
     if (this.data.restriction) {
      return this.data.restriction.split(",").map(function(e) {
       return e.trim();
      });
     } else {
      return [];
     }
    },
    enumerable: true,
    configurable: true
   });
   Object.defineProperty(e.prototype, "status", {
    get: function() {
     return Xt(this.data.status);
    },
    enumerable: true,
    configurable: true
   });
   Object.defineProperty(e.prototype, "values", {
    get: function() {
     if (!this.data.values) {
      return [];
     }
     if (!Array.isArray(this.data.values)) {
      return [ new en(this.data.values.value) ];
     }
     return this.data.values.map(function(e) {
      return new en(e);
     });
    },
    enumerable: true,
    configurable: true
   });
   return e;
  }();
  var nn;
  var rn = lt.css.properties;
  function an() {
   if (!nn) {
    nn = {};
    for (var e = 0; e < rn.length; e++) {
     var t = rn[e];
     nn[t.name] = new tn(t);
    }
   }
   return nn;
  }
  var on = lt.css.atdirectives;
  var sn;
  function cn() {
   if (!sn) {
    sn = [];
    for (var e = 0; e < on.length; e++) {
     var t = on[e];
     sn.push(new tn(t));
    }
   }
   return sn;
  }
  var un = lt.css.pseudoelements;
  var ln;
  function fn() {
   if (!ln) {
    ln = [];
    for (var e = 0; e < un.length; e++) {
     var t = un[e];
     ln.push(new tn(t));
    }
   }
   return ln;
  }
  var dn = lt.css.pseudoclasses;
  var pn;
  function mn() {
   if (!pn) {
    pn = [];
    for (var e = 0; e < dn.length; e++) {
     var t = dn[e];
     pn.push(new tn(t));
    }
   }
   return pn;
  }
  var _n = {
   E: "Edge",
   FF: "Firefox",
   S: "Safari",
   C: "Chrome",
   IE: "IE",
   O: "Opera"
  };
  var gn = function() {
   function e(e) {
    if (e === void 0) {
     e = new G();
    }
    this.keyframeRegex = /^@(\-(webkit|ms|moz|o)\-)?keyframes$/i;
    this.scanner = e;
    this.token = null;
    this.prevToken = null;
   }
   e.prototype.peekIdent = function(e) {
    return r.Ident === this.token.type && e.length === this.token.text.length && e === this.token.text.toLowerCase();
   };
   e.prototype.peekKeyword = function(e) {
    return r.AtKeyword === this.token.type && e.length === this.token.text.length && e === this.token.text.toLowerCase();
   };
   e.prototype.peekDelim = function(e) {
    return r.Delim === this.token.type && e === this.token.text;
   };
   e.prototype.peek = function(e) {
    return e === this.token.type;
   };
   e.prototype.peekRegExp = function(e, t) {
    if (e !== this.token.type) {
     return false;
    }
    return t.test(this.token.text);
   };
   e.prototype.hasWhitespace = function() {
    return this.prevToken && this.prevToken.offset + this.prevToken.len !== this.token.offset;
   };
   e.prototype.consumeToken = function() {
    this.prevToken = this.token;
    this.token = this.scanner.scan();
   };
   e.prototype.mark = function() {
    return {
     prev: this.prevToken,
     curr: this.token,
     pos: this.scanner.pos()
    };
   };
   e.prototype.restoreAtMark = function(e) {
    this.prevToken = e.prev;
    this.token = e.curr;
    this.scanner.goBackTo(e.pos);
   };
   e.prototype.try = function(e) {
    var t = this.mark();
    var n = e();
    if (!n) {
     this.restoreAtMark(t);
     return null;
    }
    return n;
   };
   e.prototype.acceptOneKeyword = function(e) {
    if (r.AtKeyword === this.token.type) {
     for (var t = 0, n = e; t < n.length; t++) {
      var i = n[t];
      if (i.length === this.token.text.length && i === this.token.text.toLowerCase()) {
       this.consumeToken();
       return true;
      }
     }
    }
    return false;
   };
   e.prototype.accept = function(e) {
    if (e === this.token.type) {
     this.consumeToken();
     return true;
    }
    return false;
   };
   e.prototype.acceptIdent = function(e) {
    if (this.peekIdent(e)) {
     this.consumeToken();
     return true;
    }
    return false;
   };
   e.prototype.acceptKeyword = function(e) {
    if (this.peekKeyword(e)) {
     this.consumeToken();
     return true;
    }
    return false;
   };
   e.prototype.acceptDelim = function(e) {
    if (this.peekDelim(e)) {
     this.consumeToken();
     return true;
    }
    return false;
   };
   e.prototype.acceptUnquotedString = function() {
    var e = this.scanner.pos();
    this.scanner.goBackTo(this.token.offset);
    var t = this.scanner.scanUnquotedString();
    if (t) {
     this.token = t;
     this.consumeToken();
     return true;
    }
    this.scanner.goBackTo(e);
    return false;
   };
   e.prototype.resync = function(e, t) {
    while (true) {
     if (e && e.indexOf(this.token.type) !== -1) {
      this.consumeToken();
      return true;
     } else if (t && t.indexOf(this.token.type) !== -1) {
      return true;
     } else {
      if (this.token.type === r.EOF) {
       return false;
      }
      this.token = this.scanner.scan();
     }
    }
   };
   e.prototype.createNode = function(e) {
    return new te(this.token.offset, this.token.len, e);
   };
   e.prototype.create = function(e) {
    var t = Object.create(e.prototype);
    e.apply(t, [ this.token.offset, this.token.len ]);
    return t;
   };
   e.prototype.finish = function(e, t, n, r) {
    if (!(e instanceof ne)) {
     if (t) {
      this.markError(e, t, n, r);
     }
     if (this.prevToken !== null) {
      var i = this.prevToken.offset + this.prevToken.len;
      e.length = i > e.offset ? i - e.offset : 0;
     }
    }
    return e;
   };
   e.prototype.markError = function(e, t, n, r) {
    if (this.token !== this.lastErrorToken) {
     e.addIssue(new it(e, t, rt.Error, null, this.token.offset, this.token.len));
     this.lastErrorToken = this.token;
    }
    if (n || r) {
     this.resync(n, r);
    }
   };
   e.prototype.parseStylesheet = function(e) {
    var t = e.version;
    var n = function(n, r) {
     if (e.version !== t) {
      throw new Error("Underlying model has changed, AST is no longer valid");
     }
     return e.getText().substr(n, r);
    };
    return this.internalParse(e.getText(), this._parseStylesheet, n);
   };
   e.prototype.internalParse = function(e, t, n) {
    this.scanner.setSource(e);
    this.token = this.scanner.scan();
    var r = t.bind(this)();
    if (r) {
     if (n) {
      r.textProvider = n;
     } else {
      r.textProvider = function(t, n) {
       return e.substr(t, n);
      };
     }
    }
    return r;
   };
   e.prototype._parseStylesheet = function() {
    var e = this.create(ie);
    e.addChild(this._parseCharset());
    var t = false;
    do {
     var n = false;
     do {
      n = false;
      var i = this._parseStylesheetStatement();
      if (i) {
       e.addChild(i);
       n = true;
       t = false;
       if (!this.peek(r.EOF) && this._needsSemicolonAfter(i) && !this.accept(r.SemiColon)) {
        this.markError(e, ut.SemiColonExpected);
       }
      }
      while (this.accept(r.SemiColon) || this.accept(r.CDO) || this.accept(r.CDC)) {
       n = true;
       t = false;
      }
     } while (n);
     if (this.peek(r.EOF)) {
      break;
     }
     if (!t) {
      if (this.peek(r.AtKeyword)) {
       this.markError(e, ut.UnknownAtRule);
      } else {
       this.markError(e, ut.RuleOrSelectorExpected);
      }
      t = true;
     }
     this.consumeToken();
    } while (!this.peek(r.EOF));
    return this.finish(e);
   };
   e.prototype._parseStylesheetStatement = function() {
    if (this.peek(r.AtKeyword)) {
     return this._parseImport() || this._parseMedia() || this._parsePage() || this._parseFontFace() || this._parseKeyframe() || this._parseSupports() || this._parseViewPort() || this._parseNamespace() || this._parseDocument();
    }
    return this._parseRuleset(false);
   };
   e.prototype._tryParseRuleset = function(e) {
    var t = this.mark();
    if (this._parseSelector(e)) {
     while (this.accept(r.Comma) && this._parseSelector(e)) {}
     if (this.accept(r.CurlyL)) {
      this.restoreAtMark(t);
      return this._parseRuleset(e);
     }
    }
    this.restoreAtMark(t);
    return null;
   };
   e.prototype._parseRuleset = function(e) {
    if (e === void 0) {
     e = false;
    }
    var t = this.create(se);
    if (!t.getSelectors().addChild(this._parseSelector(e))) {
     return null;
    }
    while (this.accept(r.Comma) && t.getSelectors().addChild(this._parseSelector(e))) {}
    return this._parseBody(t, this._parseRuleSetDeclaration.bind(this));
   };
   e.prototype._parseRuleSetDeclaration = function() {
    return this._parseAtApply() || this._tryParseCustomPropertyDeclaration() || this._parseDeclaration();
   };
   e.prototype._parseAtApply = function() {
    if (!this.peekKeyword("@apply")) {
     return null;
    }
    var e = this.create(le);
    this.consumeToken();
    if (!e.setIdentifier(this._parseIdent([ Q.Variable ]))) {
     return this.finish(e, ut.IdentifierExpected);
    }
    return this.finish(e);
   };
   e.prototype._needsSemicolonAfter = function(e) {
    switch (e.type) {
    case X.Keyframe:
    case X.ViewPort:
    case X.Media:
    case X.Ruleset:
    case X.Namespace:
    case X.If:
    case X.For:
    case X.Each:
    case X.While:
    case X.MixinDeclaration:
    case X.FunctionDeclaration:
     return false;

    case X.VariableDeclaration:
    case X.ExtendsReference:
    case X.MixinContent:
    case X.ReturnStatement:
    case X.MediaQuery:
    case X.Debug:
    case X.Import:
    case X.AtApplyRule:
    case X.CustomPropertyDeclaration:
     return true;

    case X.MixinReference:
     return !e.getContent();

    case X.Declaration:
     return !e.getNestedProperties();
    }
    return false;
   };
   e.prototype._parseDeclarations = function(e) {
    var t = this.create(ae);
    if (!this.accept(r.CurlyL)) {
     return null;
    }
    var n = e();
    while (t.addChild(n)) {
     if (this.peek(r.CurlyR)) {
      break;
     }
     if (this._needsSemicolonAfter(n) && !this.accept(r.SemiColon)) {
      return this.finish(t, ut.SemiColonExpected, [ r.SemiColon, r.CurlyR ]);
     }
     while (this.accept(r.SemiColon)) {}
     n = e();
    }
    if (!this.accept(r.CurlyR)) {
     return this.finish(t, ut.RightCurlyExpected, [ r.CurlyR, r.SemiColon ]);
    }
    return this.finish(t);
   };
   e.prototype._parseBody = function(e, t) {
    if (!e.setDeclarations(this._parseDeclarations(t))) {
     return this.finish(e, ut.LeftCurlyExpected, [ r.CurlyR, r.SemiColon ]);
    }
    return this.finish(e);
   };
   e.prototype._parseSelector = function(e) {
    var t = this.create(ce);
    var n = false;
    if (e) {
     n = t.addChild(this._parseCombinator());
    }
    while (t.addChild(this._parseSimpleSelector())) {
     n = true;
     t.addChild(this._parseCombinator());
    }
    return n ? this.finish(t) : null;
   };
   e.prototype._parseDeclaration = function(e) {
    var t = this.create(me);
    if (!t.setProperty(this._parseProperty())) {
     return null;
    }
    if (!this.accept(r.Colon)) {
     return this.finish(t, ut.ColonExpected, [ r.Colon ], e);
    }
    t.colonPosition = this.prevToken.offset;
    if (!t.setValue(this._parseExpr())) {
     return this.finish(t, ut.PropertyValueExpected);
    }
    t.addChild(this._parsePrio());
    if (this.peek(r.SemiColon)) {
     t.semicolonPosition = this.token.offset;
    }
    return this.finish(t);
   };
   e.prototype._tryParseCustomPropertyDeclaration = function() {
    if (!this.peekRegExp(r.Ident, /^--/)) {
     return null;
    }
    var e = this.create(de);
    if (!e.setProperty(this._parseProperty())) {
     return null;
    }
    if (!this.accept(r.Colon)) {
     return this.finish(e, ut.ColonExpected, [ r.Colon ]);
    }
    e.colonPosition = this.prevToken.offset;
    var t = this.mark();
    if (this.peek(r.CurlyL)) {
     var n = this.create(pe);
     var i = this._parseDeclarations(this._parseRuleSetDeclaration.bind(this));
     if (n.setDeclarations(i) && !i.isErroneous(true)) {
      n.addChild(this._parsePrio());
      if (this.peek(r.SemiColon)) {
       this.finish(n);
       e.setPropertySet(n);
       e.semicolonPosition = this.token.offset;
       return this.finish(e);
      }
     }
     this.restoreAtMark(t);
    }
    var a = this._parseExpr();
    if (a && !a.isErroneous(true)) {
     this._parsePrio();
     if (this.peek(r.SemiColon)) {
      e.setValue(a);
      e.semicolonPosition = this.token.offset;
      return this.finish(e);
     }
    }
    this.restoreAtMark(t);
    e.addChild(this._parseCustomPropertyValue());
    e.addChild(this._parsePrio());
    if (this.token.offset === e.colonPosition + 1) {
     return this.finish(e, ut.PropertyValueExpected);
    }
    return this.finish(e);
   };
   e.prototype._parseCustomPropertyValue = function() {
    var e = this.create(te);
    var t = function() {
     return n === 0 && i === 0 && a === 0;
    };
    var n = 0;
    var i = 0;
    var a = 0;
    e: while (true) {
     switch (this.token.type) {
     case r.SemiColon:
      if (t()) {
       break e;
      }
      break;

     case r.Exclamation:
      if (t()) {
       break e;
      }
      break;

     case r.CurlyL:
      n++;
      break;

     case r.CurlyR:
      n--;
      if (n < 0) {
       if (i === 0 && a === 0) {
        break e;
       }
       return this.finish(e, ut.LeftCurlyExpected);
      }
      break;

     case r.ParenthesisL:
      i++;
      break;

     case r.ParenthesisR:
      i--;
      if (i < 0) {
       return this.finish(e, ut.LeftParenthesisExpected);
      }
      break;

     case r.BracketL:
      a++;
      break;

     case r.BracketR:
      a--;
      if (a < 0) {
       return this.finish(e, ut.LeftSquareBracketExpected);
      }
      break;

     case r.BadString:
      break e;

     case r.EOF:
      var o = ut.RightCurlyExpected;
      if (a > 0) {
       o = ut.RightSquareBracketExpected;
      } else if (i > 0) {
       o = ut.RightParenthesisExpected;
      }
      return this.finish(e, o);
     }
     this.consumeToken();
    }
    return this.finish(e);
   };
   e.prototype._tryToParseDeclaration = function() {
    var e = this.mark();
    if (this._parseProperty() && this.accept(r.Colon)) {
     this.restoreAtMark(e);
     return this._parseDeclaration();
    }
    this.restoreAtMark(e);
    return null;
   };
   e.prototype._parseProperty = function() {
    var e = this.create(_e);
    var t = this.mark();
    if (this.acceptDelim("*") || this.acceptDelim("_")) {
     if (this.hasWhitespace()) {
      this.restoreAtMark(t);
      return null;
     }
    }
    if (e.setIdentifier(this._parsePropertyIdentifier())) {
     return this.finish(e);
    }
    return null;
   };
   e.prototype._parsePropertyIdentifier = function() {
    return this._parseIdent();
   };
   e.prototype._parseCharset = function() {
    if (!this.peek(r.Charset)) {
     return null;
    }
    var e = this.create(te);
    this.consumeToken();
    if (!this.accept(r.String)) {
     return this.finish(e, ut.IdentifierExpected);
    }
    if (!this.accept(r.SemiColon)) {
     return this.finish(e, ut.SemiColonExpected);
    }
    return this.finish(e);
   };
   e.prototype._parseImport = function() {
    if (!this.peekKeyword("@import")) {
     return null;
    }
    var e = this.create(Fe);
    this.consumeToken();
    if (!e.addChild(this._parseURILiteral()) && !e.addChild(this._parseStringLiteral())) {
     return this.finish(e, ut.URIOrStringExpected);
    }
    if (!this.peek(r.SemiColon) && !this.peek(r.EOF)) {
     e.setMedialist(this._parseMediaQueryList());
    }
    return this.finish(e);
   };
   e.prototype._parseNamespace = function() {
    if (!this.peekKeyword("@namespace")) {
     return null;
    }
    var e = this.create(Pe);
    this.consumeToken();
    if (!e.addChild(this._parseURILiteral())) {
     e.addChild(this._parseIdent());
     if (!e.addChild(this._parseURILiteral()) && !e.addChild(this._parseStringLiteral())) {
      return this.finish(e, ut.URIExpected, [ r.SemiColon ]);
     }
    }
    if (!this.accept(r.SemiColon)) {
     return this.finish(e, ut.SemiColonExpected);
    }
    return this.finish(e);
   };
   e.prototype._parseFontFace = function() {
    if (!this.peekKeyword("@font-face")) {
     return null;
    }
    var e = this.create(Te);
    this.consumeToken();
    return this._parseBody(e, this._parseRuleSetDeclaration.bind(this));
   };
   e.prototype._parseViewPort = function() {
    if (!this.peekKeyword("@-ms-viewport") && !this.peekKeyword("@-o-viewport") && !this.peekKeyword("@viewport")) {
     return null;
    }
    var e = this.create(De);
    this.consumeToken();
    return this._parseBody(e, this._parseRuleSetDeclaration.bind(this));
   };
   e.prototype._parseKeyframe = function() {
    if (!this.peekRegExp(r.AtKeyword, this.keyframeRegex)) {
     return null;
    }
    var e = this.create(Ne);
    var t = this.create(te);
    this.consumeToken();
    e.setKeyword(this.finish(t));
    if (t.getText() === "@-ms-keyframes") {
     this.markError(t, ut.UnknownKeyword);
    }
    if (!e.setIdentifier(this._parseKeyframeIdent())) {
     return this.finish(e, ut.IdentifierExpected, [ r.CurlyR ]);
    }
    return this._parseBody(e, this._parseKeyframeSelector.bind(this));
   };
   e.prototype._parseKeyframeIdent = function() {
    return this._parseIdent([ Q.Keyframe ]);
   };
   e.prototype._parseKeyframeSelector = function() {
    var e = this.create(Ae);
    if (!e.addChild(this._parseIdent()) && !this.accept(r.Percentage)) {
     return null;
    }
    while (this.accept(r.Comma)) {
     if (!e.addChild(this._parseIdent()) && !this.accept(r.Percentage)) {
      return this.finish(e, ut.PercentageExpected);
     }
    }
    return this._parseBody(e, this._parseRuleSetDeclaration.bind(this));
   };
   e.prototype._tryParseKeyframeSelector = function() {
    var e = this.create(Ae);
    var t = this.mark();
    if (!e.addChild(this._parseIdent()) && !this.accept(r.Percentage)) {
     return null;
    }
    while (this.accept(r.Comma)) {
     if (!e.addChild(this._parseIdent()) && !this.accept(r.Percentage)) {
      this.restoreAtMark(t);
      return null;
     }
    }
    if (!this.peek(r.CurlyL)) {
     this.restoreAtMark(t);
     return null;
    }
    return this._parseBody(e, this._parseRuleSetDeclaration.bind(this));
   };
   e.prototype._parseSupports = function(e) {
    if (e === void 0) {
     e = false;
    }
    if (!this.peekKeyword("@supports")) {
     return null;
    }
    var t = this.create(Oe);
    this.consumeToken();
    t.addChild(this._parseSupportsCondition());
    return this._parseBody(t, this._parseSupportsDeclaration.bind(this, e));
   };
   e.prototype._parseSupportsDeclaration = function(e) {
    if (e === void 0) {
     e = false;
    }
    if (e) {
     return this._tryParseRuleset(e) || this._tryToParseDeclaration() || this._parseStylesheetStatement();
    }
    return this._parseStylesheetStatement();
   };
   e.prototype._parseSupportsCondition = function() {
    var e = this.create(Be);
    if (this.acceptIdent("not")) {
     e.addChild(this._parseSupportsConditionInParens());
    } else {
     e.addChild(this._parseSupportsConditionInParens());
     if (this.peekRegExp(r.Ident, /^(and|or)$/i)) {
      var t = this.token.text.toLowerCase();
      while (this.acceptIdent(t)) {
       e.addChild(this._parseSupportsConditionInParens());
      }
     }
    }
    return this.finish(e);
   };
   e.prototype._parseSupportsConditionInParens = function() {
    var e = this.create(Be);
    if (this.accept(r.ParenthesisL)) {
     e.lParent = this.prevToken.offset;
     if (!e.addChild(this._tryToParseDeclaration())) {
      if (!this._parseSupportsCondition()) {
       return this.finish(e, ut.ConditionExpected);
      }
     }
     if (!this.accept(r.ParenthesisR)) {
      return this.finish(e, ut.RightParenthesisExpected, [ r.ParenthesisR ], []);
     }
     e.rParent = this.prevToken.offset;
     return this.finish(e);
    } else if (this.peek(r.Ident)) {
     var t = this.mark();
     this.consumeToken();
     if (!this.hasWhitespace() && this.accept(r.ParenthesisL)) {
      var n = 1;
      while (this.token.type !== r.EOF && n !== 0) {
       if (this.token.type === r.ParenthesisL) {
        n++;
       } else if (this.token.type === r.ParenthesisR) {
        n--;
       }
       this.consumeToken();
      }
      return this.finish(e);
     } else {
      this.restoreAtMark(t);
     }
    }
    return this.finish(e, ut.LeftParenthesisExpected, [], [ r.ParenthesisL ]);
   };
   e.prototype._parseMediaDeclaration = function(e) {
    if (e === void 0) {
     e = false;
    }
    return this._tryParseRuleset(e) || this._tryToParseDeclaration() || this._parseStylesheetStatement();
   };
   e.prototype._parseMedia = function(e) {
    if (e === void 0) {
     e = false;
    }
    if (!this.peekKeyword("@media")) {
     return null;
    }
    var t = this.create(Ie);
    this.consumeToken();
    if (!t.addChild(this._parseMediaQueryList())) {
     return this.finish(t, ut.MediaQueryExpected);
    }
    return this._parseBody(t, this._parseMediaDeclaration.bind(this, e));
   };
   e.prototype._parseMediaQueryList = function() {
    var e = this.create(Le);
    if (!e.addChild(this._parseMediaQuery([ r.CurlyL ]))) {
     return this.finish(e, ut.MediaQueryExpected);
    }
    while (this.accept(r.Comma)) {
     if (!e.addChild(this._parseMediaQuery([ r.CurlyL ]))) {
      return this.finish(e, ut.MediaQueryExpected);
     }
    }
    return this.finish(e);
   };
   e.prototype._parseMediaQuery = function(e) {
    var t = this.create(Re);
    var n = true;
    var i = false;
    if (!this.peek(r.ParenthesisL)) {
     if (this.acceptIdent("only") || this.acceptIdent("not")) {}
     if (!t.addChild(this._parseIdent())) {
      return null;
     }
     i = true;
     n = this.acceptIdent("and");
    }
    while (n) {
     if (!this.accept(r.ParenthesisL)) {
      if (i) {
       return this.finish(t, ut.LeftParenthesisExpected, [], e);
      }
      return null;
     }
     if (!t.addChild(this._parseMediaFeatureName())) {
      return this.finish(t, ut.IdentifierExpected, [], e);
     }
     if (this.accept(r.Colon)) {
      if (!t.addChild(this._parseExpr())) {
       return this.finish(t, ut.TermExpected, [], e);
      }
     }
     if (!this.accept(r.ParenthesisR)) {
      return this.finish(t, ut.RightParenthesisExpected, [], e);
     }
     n = this.acceptIdent("and");
    }
    return this.finish(t);
   };
   e.prototype._parseMediaFeatureName = function() {
    return this._parseIdent();
   };
   e.prototype._parseMedium = function() {
    var e = this.create(te);
    if (e.addChild(this._parseIdent())) {
     return this.finish(e);
    } else {
     return null;
    }
   };
   e.prototype._parsePageDeclaration = function() {
    return this._parsePageMarginBox() || this._parseRuleSetDeclaration();
   };
   e.prototype._parsePage = function() {
    if (!this.peekKeyword("@page")) {
     return null;
    }
    var e = this.create(ze);
    this.consumeToken();
    if (e.addChild(this._parsePageSelector())) {
     while (this.accept(r.Comma)) {
      if (!e.addChild(this._parsePageSelector())) {
       return this.finish(e, ut.IdentifierExpected);
      }
     }
    }
    return this._parseBody(e, this._parsePageDeclaration.bind(this));
   };
   e.prototype._parsePageMarginBox = function() {
    if (!this.peek(r.AtKeyword)) {
     return null;
    }
    var e = this.create(je);
    if (!this.acceptOneKeyword(Gt())) {
     this.markError(e, ut.UnknownAtRule, [], [ r.CurlyL ]);
    }
    return this._parseBody(e, this._parseRuleSetDeclaration.bind(this));
   };
   e.prototype._parsePageSelector = function() {
    if (!this.peek(r.Ident) && !this.peek(r.Colon)) {
     return null;
    }
    var e = this.create(te);
    e.addChild(this._parseIdent());
    if (this.accept(r.Colon)) {
     if (!e.addChild(this._parseIdent())) {
      return this.finish(e, ut.IdentifierExpected);
     }
    }
    return this.finish(e);
   };
   e.prototype._parseDocument = function() {
    if (!this.peekKeyword("@-moz-document")) {
     return null;
    }
    var e = this.create(Me);
    this.consumeToken();
    this.resync([], [ r.CurlyL ]);
    return this._parseBody(e, this._parseStylesheetStatement.bind(this));
   };
   e.prototype._parseOperator = function() {
    if (this.peekDelim("/") || this.peekDelim("*") || this.peekDelim("+") || this.peekDelim("-") || this.peek(r.Dashmatch) || this.peek(r.Includes) || this.peek(r.SubstringOperator) || this.peek(r.PrefixOperator) || this.peek(r.SuffixOperator) || this.peekDelim("=")) {
     var e = this.createNode(X.Operator);
     this.consumeToken();
     return this.finish(e);
    } else {
     return null;
    }
   };
   e.prototype._parseUnaryOperator = function() {
    if (!this.peekDelim("+") && !this.peekDelim("-")) {
     return null;
    }
    var e = this.create(te);
    this.consumeToken();
    return this.finish(e);
   };
   e.prototype._parseCombinator = function() {
    if (this.peekDelim(">")) {
     var e = this.create(te);
     this.consumeToken();
     var t = this.mark();
     if (!this.hasWhitespace() && this.acceptDelim(">")) {
      if (!this.hasWhitespace() && this.acceptDelim(">")) {
       e.type = X.SelectorCombinatorShadowPiercingDescendant;
       return this.finish(e);
      }
      this.restoreAtMark(t);
     }
     e.type = X.SelectorCombinatorParent;
     return this.finish(e);
    } else if (this.peekDelim("+")) {
     var e = this.create(te);
     this.consumeToken();
     e.type = X.SelectorCombinatorSibling;
     return this.finish(e);
    } else if (this.peekDelim("~")) {
     var e = this.create(te);
     this.consumeToken();
     e.type = X.SelectorCombinatorAllSiblings;
     return this.finish(e);
    } else if (this.peekDelim("/")) {
     var e = this.create(te);
     this.consumeToken();
     var t = this.mark();
     if (!this.hasWhitespace() && this.acceptIdent("deep") && !this.hasWhitespace() && this.acceptDelim("/")) {
      e.type = X.SelectorCombinatorShadowPiercingDescendant;
      return this.finish(e);
     }
     this.restoreAtMark(t);
    } else {
     return null;
    }
   };
   e.prototype._parseSimpleSelector = function() {
    var e = this.create(ue);
    var t = 0;
    if (e.addChild(this._parseElementName())) {
     t++;
    }
    while ((t === 0 || !this.hasWhitespace()) && e.addChild(this._parseSimpleSelectorBody())) {
     t++;
    }
    return t > 0 ? this.finish(e) : null;
   };
   e.prototype._parseSimpleSelectorBody = function() {
    return this._parsePseudo() || this._parseHash() || this._parseClass() || this._parseAttrib();
   };
   e.prototype._parseSelectorIdent = function() {
    return this._parseIdent();
   };
   e.prototype._parseHash = function() {
    if (!this.peek(r.Hash) && !this.peekDelim("#")) {
     return null;
    }
    var e = this.createNode(X.IdentifierSelector);
    if (this.acceptDelim("#")) {
     if (this.hasWhitespace() || !e.addChild(this._parseSelectorIdent())) {
      return this.finish(e, ut.IdentifierExpected);
     }
    } else {
     this.consumeToken();
    }
    return this.finish(e);
   };
   e.prototype._parseClass = function() {
    if (!this.peekDelim(".")) {
     return null;
    }
    var e = this.createNode(X.ClassSelector);
    this.consumeToken();
    if (this.hasWhitespace() || !e.addChild(this._parseSelectorIdent())) {
     return this.finish(e, ut.IdentifierExpected);
    }
    return this.finish(e);
   };
   e.prototype._parseElementName = function() {
    var e = this.mark();
    var t = this.createNode(X.ElementNameSelector);
    t.addChild(this._parseNamespacePrefix());
    if (!t.addChild(this._parseSelectorIdent()) && !this.acceptDelim("*")) {
     this.restoreAtMark(e);
     return null;
    }
    return this.finish(t);
   };
   e.prototype._parseNamespacePrefix = function() {
    var e = this.mark();
    var t = this.createNode(X.NamespacePrefix);
    if (!t.addChild(this._parseIdent()) && !this.acceptDelim("*")) {}
    if (!this.acceptDelim("|")) {
     this.restoreAtMark(e);
     return null;
    }
    return this.finish(t);
   };
   e.prototype._parseAttrib = function() {
    if (!this.peek(r.BracketL)) {
     return null;
    }
    var e = this.create(Ke);
    this.consumeToken();
    e.setNamespacePrefix(this._parseNamespacePrefix());
    if (!e.setIdentifier(this._parseIdent())) {
     return this.finish(e, ut.IdentifierExpected);
    }
    if (e.setOperator(this._parseOperator())) {
     e.setValue(this._parseBinaryExpr());
     this.acceptIdent("i");
    }
    if (!this.accept(r.BracketR)) {
     return this.finish(e, ut.RightSquareBracketExpected);
    }
    return this.finish(e);
   };
   e.prototype._parsePseudo = function() {
    var e = this;
    var t = this._tryParsePseudoIdentifier();
    if (t) {
     if (!this.hasWhitespace() && this.accept(r.ParenthesisL)) {
      var n = function() {
       var t = e.create(te);
       if (!t.addChild(e._parseSelector(false))) {
        return null;
       }
       while (e.accept(r.Comma) && t.addChild(e._parseSelector(false))) {}
       if (e.peek(r.ParenthesisR)) {
        return e.finish(t);
       }
      };
      t.addChild(this.try(n) || this._parseBinaryExpr());
      if (!this.accept(r.ParenthesisR)) {
       return this.finish(t, ut.RightParenthesisExpected);
      }
     }
     return this.finish(t);
    }
    return null;
   };
   e.prototype._tryParsePseudoIdentifier = function() {
    if (!this.peek(r.Colon)) {
     return null;
    }
    var e = this.mark();
    var t = this.createNode(X.PseudoSelector);
    this.consumeToken();
    if (this.hasWhitespace()) {
     this.restoreAtMark(e);
     return null;
    }
    if (this.accept(r.Colon) && this.hasWhitespace()) {
     this.markError(t, ut.IdentifierExpected);
    }
    if (!t.addChild(this._parseIdent())) {
     this.markError(t, ut.IdentifierExpected);
    }
    return t;
   };
   e.prototype._tryParsePrio = function() {
    var e = this.mark();
    var t = this._parsePrio();
    if (t) {
     return t;
    }
    this.restoreAtMark(e);
    return null;
   };
   e.prototype._parsePrio = function() {
    if (!this.peek(r.Exclamation)) {
     return null;
    }
    var e = this.createNode(X.Prio);
    if (this.accept(r.Exclamation) && this.acceptIdent("important")) {
     return this.finish(e);
    }
    return null;
   };
   e.prototype._parseExpr = function(e) {
    if (e === void 0) {
     e = false;
    }
    var t = this.create(qe);
    if (!t.addChild(this._parseBinaryExpr())) {
     return null;
    }
    while (true) {
     if (this.peek(r.Comma)) {
      if (e) {
       return this.finish(t);
      }
      this.consumeToken();
     }
     if (!t.addChild(this._parseBinaryExpr())) {
      break;
     }
    }
    return this.finish(t);
   };
   e.prototype._parseNamedLine = function() {
    if (!this.peek(r.BracketL)) {
     return null;
    }
    var e = this.createNode(X.GridLine);
    this.consumeToken();
    while (e.addChild(this._parseIdent())) {}
    if (!this.accept(r.BracketR)) {
     return this.finish(e, ut.RightSquareBracketExpected);
    }
    return this.finish(e);
   };
   e.prototype._parseBinaryExpr = function(e, t) {
    var n = this.create(Ue);
    if (!n.setLeft(e || this._parseTerm())) {
     return null;
    }
    if (!n.setOperator(t || this._parseOperator())) {
     return this.finish(n);
    }
    if (!n.setRight(this._parseTerm())) {
     return this.finish(n, ut.TermExpected);
    }
    n = this.finish(n);
    var r = this._parseOperator();
    if (r) {
     n = this._parseBinaryExpr(n, r);
    }
    return this.finish(n);
   };
   e.prototype._parseTerm = function() {
    var e = this.create(Je);
    e.setOperator(this._parseUnaryOperator());
    if (e.setExpression(this._parseURILiteral()) || e.setExpression(this._parseFunction()) || e.setExpression(this._parseIdent()) || e.setExpression(this._parseStringLiteral()) || e.setExpression(this._parseNumeric()) || e.setExpression(this._parseHexColor()) || e.setExpression(this._parseOperation()) || e.setExpression(this._parseNamedLine())) {
     return this.finish(e);
    }
    return null;
   };
   e.prototype._parseOperation = function() {
    if (!this.peek(r.ParenthesisL)) {
     return null;
    }
    var e = this.create(te);
    this.consumeToken();
    e.addChild(this._parseExpr());
    if (!this.accept(r.ParenthesisR)) {
     return this.finish(e, ut.RightParenthesisExpected);
    }
    return this.finish(e);
   };
   e.prototype._parseNumeric = function() {
    if (this.peek(r.Num) || this.peek(r.Percentage) || this.peek(r.Resolution) || this.peek(r.Length) || this.peek(r.EMS) || this.peek(r.EXS) || this.peek(r.Angle) || this.peek(r.Time) || this.peek(r.Dimension) || this.peek(r.Freq)) {
     var e = this.create(He);
     this.consumeToken();
     return this.finish(e);
    }
    return null;
   };
   e.prototype._parseStringLiteral = function() {
    if (!this.peek(r.String) && !this.peek(r.BadString)) {
     return null;
    }
    var e = this.createNode(X.StringLiteral);
    this.consumeToken();
    return this.finish(e);
   };
   e.prototype._parseURILiteral = function() {
    if (!this.peekRegExp(r.Ident, /^url(-prefix)?$/i)) {
     return null;
    }
    var e = this.mark();
    var t = this.createNode(X.URILiteral);
    this.accept(r.Ident);
    if (this.hasWhitespace() || !this.peek(r.ParenthesisL)) {
     this.restoreAtMark(e);
     return null;
    }
    this.scanner.inURL = true;
    this.consumeToken();
    t.addChild(this._parseURLArgument());
    this.scanner.inURL = false;
    if (!this.accept(r.ParenthesisR)) {
     return this.finish(t, ut.RightParenthesisExpected);
    }
    return this.finish(t);
   };
   e.prototype._parseURLArgument = function() {
    var e = this.create(te);
    if (!this.accept(r.String) && !this.accept(r.BadString) && !this.acceptUnquotedString()) {
     return null;
    }
    return this.finish(e);
   };
   e.prototype._parseIdent = function(e) {
    if (!this.peek(r.Ident)) {
     return null;
    }
    var t = this.create(re);
    if (e) {
     t.referenceTypes = e;
    }
    t.isCustomProperty = this.peekRegExp(r.Ident, /^--/);
    this.consumeToken();
    return this.finish(t);
   };
   e.prototype._parseFunction = function() {
    var e = this.mark();
    var t = this.create(he);
    if (!t.setIdentifier(this._parseFunctionIdentifier())) {
     return null;
    }
    if (this.hasWhitespace() || !this.accept(r.ParenthesisL)) {
     this.restoreAtMark(e);
     return null;
    }
    if (t.getArguments().addChild(this._parseFunctionArgument())) {
     while (this.accept(r.Comma)) {
      if (!t.getArguments().addChild(this._parseFunctionArgument())) {
       this.markError(t, ut.ExpressionExpected);
      }
     }
    }
    if (!this.accept(r.ParenthesisR)) {
     return this.finish(t, ut.RightParenthesisExpected);
    }
    return this.finish(t);
   };
   e.prototype._parseFunctionIdentifier = function() {
    if (!this.peek(r.Ident)) {
     return null;
    }
    var e = this.create(re);
    e.referenceTypes = [ Q.Function ];
    if (this.acceptIdent("progid")) {
     if (this.accept(r.Colon)) {
      while (this.accept(r.Ident) && this.acceptDelim(".")) {}
     }
     return this.finish(e);
    }
    this.consumeToken();
    return this.finish(e);
   };
   e.prototype._parseFunctionArgument = function() {
    var e = this.create(ye);
    if (e.setValue(this._parseExpr(true))) {
     return this.finish(e);
    }
    return null;
   };
   e.prototype._parseHexColor = function() {
    if (this.peekRegExp(r.Hash, /^#([A-Fa-f0-9]{3}|[A-Fa-f0-9]{4}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{8})$/g)) {
     var e = this.create(We);
     this.consumeToken();
     return this.finish(e);
    } else {
     return null;
    }
   };
   return e;
  }();
  function hn(e, t) {
   var n = 0, r = e.length;
   if (r === 0) {
    return 0;
   }
   while (n < r) {
    var i = Math.floor((n + r) / 2);
    if (t(e[i])) {
     r = i;
    } else {
     n = i + 1;
    }
   }
   return n;
  }
  var vn = undefined && undefined.__extends || function() {
   var e = Object.setPrototypeOf || {
    __proto__: []
   } instanceof Array && function(e, t) {
    e.__proto__ = t;
   } || function(e, t) {
    for (var n in t) if (t.hasOwnProperty(n)) e[n] = t[n];
   };
   return function(t, n) {
    e(t, n);
    function r() {
     this.constructor = t;
    }
    t.prototype = n === null ? Object.create(n) : (r.prototype = n.prototype, new r());
   };
  }();
  var yn = function() {
   function e(e, t) {
    this.offset = e;
    this.length = t;
    this.symbols = [];
    this.parent = null;
    this.children = [];
   }
   e.prototype.addChild = function(e) {
    this.children.push(e);
    e.setParent(this);
   };
   e.prototype.setParent = function(e) {
    this.parent = e;
   };
   e.prototype.findScope = function(e, t) {
    if (t === void 0) {
     t = 0;
    }
    if (this.offset <= e && this.offset + this.length > e + t || this.offset === e && this.length === t) {
     return this.findInScope(e, t);
    }
    return null;
   };
   e.prototype.findInScope = function(e, t) {
    if (t === void 0) {
     t = 0;
    }
    var n = e + t;
    var r = hn(this.children, function(e) {
     return e.offset > n;
    });
    if (r === 0) {
     return this;
    }
    var i = this.children[r - 1];
    if (i.offset <= e && i.offset + i.length >= e + t) {
     return i.findInScope(e, t);
    }
    return this;
   };
   e.prototype.addSymbol = function(e) {
    this.symbols.push(e);
   };
   e.prototype.getSymbol = function(e, t) {
    for (var n = 0; n < this.symbols.length; n++) {
     var r = this.symbols[n];
     if (r.name === e && r.type === t) {
      return r;
     }
    }
    return null;
   };
   e.prototype.getSymbols = function() {
    return this.symbols;
   };
   return e;
  }();
  var bn = function(e) {
   vn(t, e);
   function t() {
    return e.call(this, 0, Number.MAX_VALUE) || this;
   }
   return t;
  }(yn);
  var xn = function() {
   function e(e, t, n, r) {
    this.name = e;
    this.value = t;
    this.node = n;
    this.type = r;
   }
   return e;
  }();
  var kn = function() {
   function e(e) {
    this.scope = e;
   }
   e.prototype.addSymbol = function(e, t, n, r) {
    if (e.offset !== -1) {
     var i = this.scope.findScope(e.offset, e.length);
     if (i) {
      i.addSymbol(new xn(t, n, e, r));
     }
    }
   };
   e.prototype.addScope = function(e) {
    if (e.offset !== -1) {
     var t = this.scope.findScope(e.offset, e.length);
     if (t && (t.offset !== e.offset || t.length !== e.length)) {
      var n = new yn(e.offset, e.length);
      t.addChild(n);
      return n;
     }
     return t;
    }
    return null;
   };
   e.prototype.addSymbolToChildScope = function(e, t, n, r, i) {
    if (e && e.offset !== -1) {
     var a = this.addScope(e);
     if (a) {
      a.addSymbol(new xn(n, r, t, i));
     }
    }
   };
   e.prototype.visitNode = function(e) {
    switch (e.type) {
    case X.Keyframe:
     this.addSymbol(e, e.getName(), void 0, Q.Keyframe);
     return true;

    case X.CustomPropertyDeclaration:
     return this.visitCustomPropertyDeclarationNode(e);

    case X.VariableDeclaration:
     return this.visitVariableDeclarationNode(e);

    case X.Ruleset:
     return this.visitRuleSet(e);

    case X.MixinDeclaration:
     this.addSymbol(e, e.getName(), void 0, Q.Mixin);
     return true;

    case X.FunctionDeclaration:
     this.addSymbol(e, e.getName(), void 0, Q.Function);
     return true;

    case X.FunctionParameter:
     {
      return this.visitFunctionParameterNode(e);
     }

    case X.Declarations:
     this.addScope(e);
     return true;

    case X.For:
     var t = e;
     var n = t.getDeclarations();
     if (n) {
      this.addSymbolToChildScope(n, t.variable, t.variable.getName(), void 0, Q.Variable);
     }
     return true;

    case X.Each:
     {
      var r = e;
      var i = r.getDeclarations();
      if (i) {
       var a = r.getVariables().getChildren();
       for (var o = 0, s = a; o < s.length; o++) {
        var c = s[o];
        this.addSymbolToChildScope(i, c, c.getName(), void 0, Q.Variable);
       }
      }
      return true;
     }
    }
    return true;
   };
   e.prototype.visitRuleSet = function(e) {
    var t = this.scope.findScope(e.offset, e.length);
    if (t) {
     for (var n = 0, r = e.getSelectors().getChildren(); n < r.length; n++) {
      var i = r[n];
      if (i instanceof ce) {
       if (i.getChildren().length === 1) {
        t.addSymbol(new xn(i.getChild(0).getText(), void 0, i, Q.Rule));
       }
      }
     }
    }
    return true;
   };
   e.prototype.visitVariableDeclarationNode = function(e) {
    var t = e.getValue() ? e.getValue().getText() : void 0;
    this.addSymbol(e, e.getName(), t, Q.Variable);
    return true;
   };
   e.prototype.visitFunctionParameterNode = function(e) {
    var t = e.getParent().getDeclarations();
    if (t) {
     var n = e.getDefaultValue();
     var r = n ? n.getText() : void 0;
     this.addSymbolToChildScope(t, e, e.getName(), r, Q.Variable);
    }
    return true;
   };
   e.prototype.visitCustomPropertyDeclarationNode = function(e) {
    var t = e.getValue() ? e.getValue().getText() : "";
    this.addCSSVariable(e.getProperty(), e.getProperty().getName(), t, Q.Variable);
    return true;
   };
   e.prototype.addCSSVariable = function(e, t, n, r) {
    if (e.offset !== -1) {
     this.scope.addSymbol(new xn(t, n, e, r));
    }
   };
   return e;
  }();
  var Sn = function() {
   function e(e) {
    this.global = new bn();
    e.acceptVisitor(new kn(this.global));
   }
   e.prototype.findSymbolsAtOffset = function(e, t) {
    var n = this.global.findScope(e, 0);
    var r = [];
    var i = {};
    while (n) {
     var a = n.getSymbols();
     for (var o = 0; o < a.length; o++) {
      var s = a[o];
      if (s.type === t && !i[s.name]) {
       r.push(s);
       i[s.name] = true;
      }
     }
     n = n.parent;
    }
    return r;
   };
   e.prototype.internalFindSymbol = function(e, t) {
    var n = e;
    if (e.parent instanceof ve && e.parent.getParent() instanceof oe) {
     n = e.parent.getParent().getDeclarations();
    }
    if (e.parent instanceof ye && e.parent.getParent() instanceof he) {
     var r = e.parent.getParent().getIdentifier();
     if (r) {
      var i = this.internalFindSymbol(r, [ Q.Function ]);
      if (i) {
       n = i.node.getDeclarations();
      }
     }
    }
    if (!n) {
     return null;
    }
    var a = e.getText();
    var o = this.global.findScope(n.offset, n.length);
    while (o) {
     for (var s = 0; s < t.length; s++) {
      var c = t[s];
      var u = o.getSymbol(a, c);
      if (u) {
       return u;
      }
     }
     o = o.parent;
    }
    return null;
   };
   e.prototype.evaluateReferenceTypes = function(e) {
    if (e instanceof re) {
     var t = e.referenceTypes;
     if (t) {
      return t;
     } else {
      if (e.isCustomProperty) {
       return [ Q.Variable ];
      }
      var n = ee(e);
      if (n) {
       var r = n.getNonPrefixedPropertyName();
       if ((r === "animation" || r === "animation-name") && n.getValue() && n.getValue().offset === e.offset) {
        return [ Q.Keyframe ];
       }
      }
     }
    } else if (e instanceof Xe) {
     return [ Q.Variable ];
    }
    var i = e.findParent(X.Selector);
    if (i) {
     return [ Q.Rule ];
    }
    var a = e.findParent(X.ExtendsReference);
    if (a) {
     return [ Q.Rule ];
    }
    return null;
   };
   e.prototype.findSymbolFromNode = function(e) {
    if (!e) {
     return null;
    }
    while (e.type === X.Interpolation) {
     e = e.getParent();
    }
    var t = this.evaluateReferenceTypes(e);
    if (t) {
     return this.internalFindSymbol(e, t);
    }
    return null;
   };
   e.prototype.matchesSymbol = function(e, t) {
    if (!e) {
     return false;
    }
    while (e.type === X.Interpolation) {
     e = e.getParent();
    }
    if (t.name.length !== e.length || t.name !== e.getText()) {
     return false;
    }
    var n = this.evaluateReferenceTypes(e);
    if (!n || n.indexOf(t.type) === -1) {
     return false;
    }
    var r = this.internalFindSymbol(e, n);
    return r === t;
   };
   e.prototype.findSymbol = function(e, t, n) {
    var r = this.global.findScope(n);
    while (r) {
     var i = r.getSymbol(e, t);
     if (i) {
      return i;
     }
     r = r.parent;
    }
    return null;
   };
   return e;
  }();
  function wn(e, t) {
   if (e.length < t.length) {
    return false;
   }
   for (var n = 0; n < t.length; n++) {
    if (e[n] !== t[n]) {
     return false;
    }
   }
   return true;
  }
  function Cn(e, t) {
   var n = e.length - t.length;
   if (n > 0) {
    return e.lastIndexOf(t) === n;
   } else if (n === 0) {
    return e === t;
   } else {
    return false;
   }
  }
  function Dn(e, t, n) {
   if (n === void 0) {
    n = 4;
   }
   var r = Math.abs(e.length - t.length);
   if (r > n) {
    return 0;
   }
   var i = [];
   var a = [];
   var o, s;
   for (o = 0; o < t.length + 1; ++o) {
    a.push(0);
   }
   for (o = 0; o < e.length + 1; ++o) {
    i.push(a);
   }
   for (o = 1; o < e.length + 1; ++o) {
    for (s = 1; s < t.length + 1; ++s) {
     if (e[o - 1] === t[s - 1]) {
      i[o][s] = i[o - 1][s - 1] + 1;
     } else {
      i[o][s] = Math.max(i[o - 1][s], i[o][s - 1]);
     }
    }
   }
   return i[e.length][t.length] - Math.sqrt(r);
  }
  function Tn(e, t) {
   if (t === void 0) {
    t = true;
   }
   if (!e) {
    return "";
   }
   if (e.length < 140) {
    return e;
   }
   return e.slice(0, 140) + (t ? "…" : "");
  }
  var En = n("kmEW");
  var Nn = ot["loadMessageBundle"]();
  var An = En["InsertTextFormat"].Snippet;
  var Fn = function() {
   function e(e) {
    if (e === void 0) {
     e = null;
    }
    this.completionParticipants = [];
    this.valueTypes = [ X.Identifier, X.Value, X.StringLiteral, X.URILiteral, X.NumericValue, X.HexColorValue, X.VariableName, X.Prio ];
    this.variablePrefix = e;
   }
   e.prototype.getSymbolContext = function() {
    if (!this.symbolContext) {
     this.symbolContext = new Sn(this.styleSheet);
    }
    return this.symbolContext;
   };
   e.prototype.setCompletionParticipants = function(e) {
    this.completionParticipants = e || [];
   };
   e.prototype.doComplete = function(e, t, n) {
    this.offset = e.offsetAt(t);
    this.position = t;
    this.currentWord = Rn(e, this.offset);
    this.defaultReplaceRange = En["Range"].create(En["Position"].create(this.position.line, this.position.character - this.currentWord.length), this.position);
    this.textDocument = e;
    this.styleSheet = n;
    try {
     var r = {
      isIncomplete: false,
      items: []
     };
     this.nodePath = Z(this.styleSheet, this.offset);
     for (var i = this.nodePath.length - 1; i >= 0; i--) {
      var a = this.nodePath[i];
      if (a instanceof _e) {
       this.getCompletionsForDeclarationProperty(a.getParent(), r);
      } else if (a instanceof qe) {
       if (a.parent instanceof $e) {
        this.getVariableProposals(null, r);
       } else {
        this.getCompletionsForExpression(a, r);
       }
      } else if (a instanceof ue) {
       var o = a.findParent(X.ExtendsReference);
       if (o) {
        this.getCompletionsForExtendsReference(o, a, r);
       } else {
        var s = a.findParent(X.Ruleset);
        this.getCompletionsForSelector(s, s && s.isNested(), r);
       }
      } else if (a instanceof ye) {
       this.getCompletionsForFunctionArgument(a, a.getParent(), r);
      } else if (a instanceof ae) {
       this.getCompletionsForDeclarations(a, r);
      } else if (a instanceof Ge) {
       this.getCompletionsForVariableDeclaration(a, r);
      } else if (a instanceof se) {
       this.getCompletionsForRuleSet(a, r);
      } else if (a instanceof $e) {
       this.getCompletionsForInterpolation(a, r);
      } else if (a instanceof Ce) {
       this.getCompletionsForFunctionDeclaration(a, r);
      } else if (a instanceof Ye) {
       this.getCompletionsForMixinReference(a, r);
      } else if (a instanceof he) {
       this.getCompletionsForFunctionArgument(null, a, r);
      } else if (a instanceof Oe) {
       this.getCompletionsForSupports(a, r);
      } else if (a instanceof Be) {
       this.getCompletionsForSupportsCondition(a, r);
      } else if (a instanceof Qe) {
       this.getCompletionsForExtendsReference(a, null, r);
      } else if (a.type === X.URILiteral) {
       this.getCompletionForUriLiteralValue(a, r);
      } else if (a.parent === null) {
       this.getCompletionForTopLevel(r);
      } else {
       continue;
      }
      if (r.items.length > 0 || this.offset > a.offset) {
       return this.finalize(r);
      }
     }
     this.getCompletionsForStylesheet(r);
     if (r.items.length === 0) {
      if (this.variablePrefix && this.currentWord.indexOf(this.variablePrefix) === 0) {
       this.getVariableProposals(null, r);
      }
     }
     return this.finalize(r);
    } finally {
     this.position = null;
     this.currentWord = null;
     this.textDocument = null;
     this.styleSheet = null;
     this.symbolContext = null;
     this.defaultReplaceRange = null;
     this.nodePath = null;
    }
   };
   e.prototype.finalize = function(e) {
    var t = e.items.some(function(e) {
     return !!e.sortText;
    });
    if (t) {
     for (var n = 0, r = e.items; n < r.length; n++) {
      var i = r[n];
      if (!i.sortText) {
       i.sortText = "d";
      }
     }
    }
    return e;
   };
   e.prototype.findInNodePath = function() {
    var e = [];
    for (var t = 0; t < arguments.length; t++) {
     e[t] = arguments[t];
    }
    for (var n = this.nodePath.length - 1; n >= 0; n--) {
     var r = this.nodePath[n];
     if (e.indexOf(r.type) !== -1) {
      return r;
     }
    }
    return null;
   };
   e.prototype.getCompletionsForDeclarationProperty = function(e, t) {
    return this.getPropertyProposals(e, t);
   };
   e.prototype.getPropertyProposals = function(e, t) {
    var n = this;
    var r = an();
    for (var i in r) {
     if (r.hasOwnProperty(i)) {
      var a = r[i];
      if (a.browsers.onCodeComplete) {
       var o = void 0;
       var s = void 0;
       var c = false;
       if (e) {
        o = this.getCompletionRange(e.getProperty());
        s = a.name;
        if (!Ln(e.colonPosition)) {
         s += ": ";
         c = true;
        }
       } else {
        o = this.getCompletionRange(null);
        s = a.name + ": ";
        c = true;
       }
       var u = {
        label: a.name,
        documentation: $t(a),
        textEdit: En["TextEdit"].replace(o, s),
        kind: En["CompletionItemKind"].Property
       };
       if (a.restrictions.length === 1 && a.restrictions[0] === "none") {
        c = false;
       }
       if (c) {
        u.command = {
         title: "Suggest",
         command: "editor.action.triggerSuggest"
        };
       }
       if (wn(a.name, "-")) {
        u.sortText = "x";
       }
       t.items.push(u);
      }
     }
    }
    this.completionParticipants.forEach(function(e) {
     if (e.onCssProperty) {
      e.onCssProperty({
       propertyName: n.currentWord,
       range: n.defaultReplaceRange
      });
     }
    });
    return t;
   };
   e.prototype.getCompletionsForDeclarationValue = function(e, t) {
    var n = this;
    var r = e.getFullPropertyName();
    var i = an()[r];
    var a = e.getValue();
    while (a && a.hasChildren()) {
     a = a.findChildAtOffset(this.offset, false);
    }
    this.completionParticipants.forEach(function(e) {
     if (e.onCssPropertyValue) {
      e.onCssPropertyValue({
       propertyName: r,
       propertyValue: n.currentWord,
       range: n.getCompletionRange(a)
      });
     }
    });
    if (i) {
     for (var o = 0, s = i.restrictions; o < s.length; o++) {
      var c = s[o];
      switch (c) {
      case "color":
       this.getColorProposals(i, a, t);
       break;

      case "position":
       this.getPositionProposals(i, a, t);
       break;

      case "repeat":
       this.getRepeatStyleProposals(i, a, t);
       break;

      case "line-style":
       this.getLineStyleProposals(i, a, t);
       break;

      case "line-width":
       this.getLineWidthProposals(i, a, t);
       break;

      case "geometry-box":
       this.getGeometryBoxProposals(i, a, t);
       break;

      case "box":
       this.getBoxProposals(i, a, t);
       break;

      case "image":
       this.getImageProposals(i, a, t);
       break;

      case "timing-function":
       this.getTimingFunctionProposals(i, a, t);
       break;

      case "shape":
       this.getBasicShapeProposals(i, a, t);
       break;
      }
     }
     this.getValueEnumProposals(i, a, t);
     this.getCSSWideKeywordProposals(i, a, t);
     this.getUnitProposals(i, a, t);
    } else {
     var u = On(this.styleSheet, e);
     for (var l = 0, f = u.getEntries(); l < f.length; l++) {
      var d = f[l];
      t.items.push({
       label: d,
       textEdit: En["TextEdit"].replace(this.getCompletionRange(a), d),
       kind: En["CompletionItemKind"].Value
      });
     }
    }
    this.getVariableProposals(a, t);
    this.getTermProposals(i, a, t);
    return t;
   };
   e.prototype.getValueEnumProposals = function(e, t, n) {
    if (e.values) {
     for (var r = 0, i = e.values; r < i.length; r++) {
      var a = i[r];
      if (Ht(a)) {
       var o = a.name;
       var s = void 0;
       if (Cn(o, ")")) {
        var c = o.lastIndexOf("(");
        if (c !== -1) {
         o = o.substr(0, c) + "($1)";
         s = An;
        }
       }
       var u = {
        label: a.name,
        documentation: $t(a),
        textEdit: En["TextEdit"].replace(this.getCompletionRange(t), o),
        kind: En["CompletionItemKind"].Value,
        insertTextFormat: s
       };
       n.items.push(u);
      }
     }
    }
    return n;
   };
   e.prototype.getCSSWideKeywordProposals = function(e, t, n) {
    for (var r in xt) {
     n.items.push({
      label: r,
      documentation: xt[r],
      textEdit: En["TextEdit"].replace(this.getCompletionRange(t), r),
      kind: En["CompletionItemKind"].Value
     });
    }
    return n;
   };
   e.prototype.getCompletionsForInterpolation = function(e, t) {
    if (this.offset >= e.offset + 2) {
     this.getVariableProposals(null, t);
    }
    return t;
   };
   e.prototype.getVariableProposals = function(e, t) {
    var n = this.getSymbolContext().findSymbolsAtOffset(this.offset, Q.Variable);
    for (var r = 0, i = n; r < i.length; r++) {
     var a = i[r];
     var o = wn(a.name, "--") ? "var(" + a.name + ")" : a.name;
     var s = {
      label: a.name,
      documentation: a.value ? Tn(a.value) : a.value,
      textEdit: En["TextEdit"].replace(this.getCompletionRange(e), o),
      kind: En["CompletionItemKind"].Variable,
      sortText: "z"
     };
     if (a.node.type === X.FunctionParameter) {
      var c = a.node.getParent();
      if (c.type === X.MixinDeclaration) {
       s.detail = Nn("completion.argument", "argument from '{0}'", c.getName());
      }
     }
     t.items.push(s);
    }
    return t;
   };
   e.prototype.getVariableProposalsForCSSVarFunction = function(e) {
    var t = this.getSymbolContext().findSymbolsAtOffset(this.offset, Q.Variable);
    t = t.filter(function(e) {
     return wn(e.name, "--");
    });
    for (var n = 0, r = t; n < r.length; n++) {
     var i = r[n];
     e.items.push({
      label: i.name,
      documentation: i.value ? Tn(i.value) : i.value,
      textEdit: En["TextEdit"].replace(this.getCompletionRange(null), i.name),
      kind: En["CompletionItemKind"].Variable
     });
    }
    return e;
   };
   e.prototype.getUnitProposals = function(e, t, n) {
    var r = "0";
    if (this.currentWord.length > 0) {
     var i = this.currentWord.match(/^-?\d[\.\d+]*/);
     if (i) {
      r = i[0];
      n.isIncomplete = r.length === this.currentWord.length;
     }
    } else if (this.currentWord.length === 0) {
     n.isIncomplete = true;
    }
    if (t && t.parent && t.parent.type === X.Term) {
     t = t.getParent();
    }
    for (var a = 0, o = e.restrictions; a < o.length; a++) {
     var s = o[a];
     var c = Dt[s];
     if (c) {
      for (var u = 0, l = c; u < l.length; u++) {
       var f = l[u];
       var d = r + f;
       n.items.push({
        label: d,
        textEdit: En["TextEdit"].replace(this.getCompletionRange(t), d),
        kind: En["CompletionItemKind"].Unit
       });
      }
     }
    }
    return n;
   };
   e.prototype.getCompletionRange = function(e) {
    if (e && e.offset <= this.offset) {
     var t = e.end !== -1 ? this.textDocument.positionAt(e.end) : this.position;
     return En["Range"].create(this.textDocument.positionAt(e.offset), t);
    }
    return this.defaultReplaceRange;
   };
   e.prototype.getColorProposals = function(e, t, n) {
    for (var r in pt) {
     n.items.push({
      label: r,
      documentation: pt[r],
      textEdit: En["TextEdit"].replace(this.getCompletionRange(t), r),
      kind: En["CompletionItemKind"].Color
     });
    }
    for (var r in mt) {
     n.items.push({
      label: r,
      documentation: mt[r],
      textEdit: En["TextEdit"].replace(this.getCompletionRange(t), r),
      kind: En["CompletionItemKind"].Value
     });
    }
    var i = new Pn();
    this.styleSheet.acceptVisitor(new Mn(i, this.offset));
    for (var a = 0, o = i.getEntries(); a < o.length; a++) {
     var r = o[a];
     n.items.push({
      label: r,
      textEdit: En["TextEdit"].replace(this.getCompletionRange(t), r),
      kind: En["CompletionItemKind"].Color
     });
    }
    var s = function(e) {
     var r = 1;
     var i = function(e, t) {
      return "${" + r++ + ":" + t + "}";
     };
     var a = e.func.replace(/\[?\$(\w+)\]?/g, i);
     n.items.push({
      label: e.func.substr(0, e.func.indexOf("(")),
      detail: e.func,
      documentation: e.desc,
      textEdit: En["TextEdit"].replace(c.getCompletionRange(t), a),
      insertTextFormat: An,
      kind: En["CompletionItemKind"].Function
     });
    };
    var c = this;
    for (var u = 0, l = kt; u < l.length; u++) {
     var f = l[u];
     s(f);
    }
    return n;
   };
   e.prototype.getPositionProposals = function(e, t, n) {
    for (var r in _t) {
     n.items.push({
      label: r,
      documentation: _t[r],
      textEdit: En["TextEdit"].replace(this.getCompletionRange(t), r),
      kind: En["CompletionItemKind"].Value
     });
    }
    return n;
   };
   e.prototype.getRepeatStyleProposals = function(e, t, n) {
    for (var r in gt) {
     n.items.push({
      label: r,
      documentation: gt[r],
      textEdit: En["TextEdit"].replace(this.getCompletionRange(t), r),
      kind: En["CompletionItemKind"].Value
     });
    }
    return n;
   };
   e.prototype.getLineStyleProposals = function(e, t, n) {
    for (var r in ht) {
     n.items.push({
      label: r,
      documentation: ht[r],
      textEdit: En["TextEdit"].replace(this.getCompletionRange(t), r),
      kind: En["CompletionItemKind"].Value
     });
    }
    return n;
   };
   e.prototype.getLineWidthProposals = function(e, t, n) {
    for (var r = 0, i = vt; r < i.length; r++) {
     var a = i[r];
     n.items.push({
      label: a,
      textEdit: En["TextEdit"].replace(this.getCompletionRange(t), a),
      kind: En["CompletionItemKind"].Value
     });
    }
    return n;
   };
   e.prototype.getGeometryBoxProposals = function(e, t, n) {
    for (var r in bt) {
     n.items.push({
      label: r,
      documentation: bt[r],
      textEdit: En["TextEdit"].replace(this.getCompletionRange(t), r),
      kind: En["CompletionItemKind"].Value
     });
    }
    return n;
   };
   e.prototype.getBoxProposals = function(e, t, n) {
    for (var r in yt) {
     n.items.push({
      label: r,
      documentation: yt[r],
      textEdit: En["TextEdit"].replace(this.getCompletionRange(t), r),
      kind: En["CompletionItemKind"].Value
     });
    }
    return n;
   };
   e.prototype.getImageProposals = function(e, t, n) {
    for (var r in St) {
     var i = In(r);
     n.items.push({
      label: r,
      documentation: St[r],
      textEdit: En["TextEdit"].replace(this.getCompletionRange(t), i),
      kind: En["CompletionItemKind"].Function,
      insertTextFormat: r !== i ? An : void 0
     });
    }
    return n;
   };
   e.prototype.getTimingFunctionProposals = function(e, t, n) {
    for (var r in wt) {
     var i = In(r);
     n.items.push({
      label: r,
      documentation: wt[r],
      textEdit: En["TextEdit"].replace(this.getCompletionRange(t), i),
      kind: En["CompletionItemKind"].Function,
      insertTextFormat: r !== i ? An : void 0
     });
    }
    return n;
   };
   e.prototype.getBasicShapeProposals = function(e, t, n) {
    for (var r in Ct) {
     var i = In(r);
     n.items.push({
      label: r,
      documentation: Ct[r],
      textEdit: En["TextEdit"].replace(this.getCompletionRange(t), i),
      kind: En["CompletionItemKind"].Function,
      insertTextFormat: r !== i ? An : void 0
     });
    }
    return n;
   };
   e.prototype.getCompletionsForStylesheet = function(e) {
    var t = this.styleSheet.findFirstChildBeforeOffset(this.offset);
    if (!t) {
     return this.getCompletionForTopLevel(e);
    }
    if (t instanceof se) {
     return this.getCompletionsForRuleSet(t, e);
    }
    if (t instanceof Oe) {
     return this.getCompletionsForSupports(t, e);
    }
    return e;
   };
   e.prototype.getCompletionForTopLevel = function(e) {
    for (var t = 0, n = cn(); t < n.length; t++) {
     var r = n[t];
     if (r.browsers.count > 0) {
      e.items.push({
       label: r.name,
       textEdit: En["TextEdit"].replace(this.getCompletionRange(null), r.name),
       documentation: $t(r),
       kind: En["CompletionItemKind"].Keyword
      });
     }
    }
    this.getCompletionsForSelector(null, false, e);
    return e;
   };
   e.prototype.getCompletionsForRuleSet = function(e, t) {
    var n = e.getDeclarations();
    var r = n && n.endsWith("}") && this.offset >= n.end;
    if (r) {
     return this.getCompletionForTopLevel(t);
    }
    var i = !n || this.offset <= n.offset;
    if (i) {
     return this.getCompletionsForSelector(e, e.isNested(), t);
    }
    e.findParent(X.Ruleset);
    return this.getCompletionsForDeclarations(e.getDeclarations(), t);
   };
   e.prototype.getCompletionsForSelector = function(e, t, n) {
    var r = this;
    var i = this.findInNodePath(X.PseudoSelector, X.IdentifierSelector, X.ClassSelector, X.ElementNameSelector);
    if (!i && this.offset - this.currentWord.length > 0 && this.textDocument.getText()[this.offset - this.currentWord.length - 1] === ":") {
     this.currentWord = ":" + this.currentWord;
     this.defaultReplaceRange = En["Range"].create(En["Position"].create(this.position.line, this.position.character - this.currentWord.length), this.position);
    }
    for (var a = 0, o = mn(); a < o.length; a++) {
     var s = o[a];
     if (s.browsers.onCodeComplete) {
      var c = In(s.name);
      var u = {
       label: s.name,
       textEdit: En["TextEdit"].replace(this.getCompletionRange(i), c),
       documentation: $t(s),
       kind: En["CompletionItemKind"].Function,
       insertTextFormat: s.name !== c ? An : void 0
      };
      if (wn(s.name, ":-")) {
       u.sortText = "x";
      }
      n.items.push(u);
     }
    }
    for (var l = 0, f = fn(); l < f.length; l++) {
     var s = f[l];
     if (s.browsers.onCodeComplete) {
      var c = In(s.name);
      var u = {
       label: s.name,
       textEdit: En["TextEdit"].replace(this.getCompletionRange(i), c),
       documentation: $t(s),
       kind: En["CompletionItemKind"].Function,
       insertTextFormat: s.name !== c ? An : void 0
      };
      if (wn(s.name, "::-")) {
       u.sortText = "x";
      }
      n.items.push(u);
     }
    }
    if (!t) {
     for (var d = 0, p = Tt; d < p.length; d++) {
      var s = p[d];
      n.items.push({
       label: s,
       textEdit: En["TextEdit"].replace(this.getCompletionRange(i), s),
       kind: En["CompletionItemKind"].Keyword
      });
     }
     for (var m = 0, _ = Et; m < _.length; m++) {
      var s = _[m];
      n.items.push({
       label: s,
       textEdit: En["TextEdit"].replace(this.getCompletionRange(i), s),
       kind: En["CompletionItemKind"].Keyword
      });
     }
    }
    var g = {};
    g[this.currentWord] = true;
    var h = this.styleSheet.getTextProvider();
    this.styleSheet.accept(function(e) {
     if (e.type === X.SimpleSelector && e.length > 0) {
      var t = h(e.offset, e.length);
      if (t.charAt(0) === "." && !g[t]) {
       g[t] = true;
       n.items.push({
        label: t,
        textEdit: En["TextEdit"].replace(r.getCompletionRange(i), t),
        kind: En["CompletionItemKind"].Keyword
       });
      }
      return false;
     }
     return true;
    });
    if (e && e.isNested()) {
     var v = e.getSelectors().findFirstChildBeforeOffset(this.offset);
     if (v && e.getSelectors().getChildren().indexOf(v) === 0) {
      this.getPropertyProposals(null, n);
     }
    }
    return n;
   };
   e.prototype.getCompletionsForDeclarations = function(e, t) {
    if (!e || this.offset === e.offset) {
     return t;
    }
    var n = e.findFirstChildBeforeOffset(this.offset);
    if (!n) {
     return this.getCompletionsForDeclarationProperty(null, t);
    }
    if (n instanceof fe) {
     var r = n;
     if (!Ln(r.colonPosition) || this.offset <= r.colonPosition) {
      return this.getCompletionsForDeclarationProperty(r, t);
     } else if (Ln(r.semicolonPosition) && r.semicolonPosition < this.offset) {
      if (this.offset === r.semicolonPosition + 1) {
       return t;
      }
      return this.getCompletionsForDeclarationProperty(null, t);
     }
     if (r instanceof me) {
      return this.getCompletionsForDeclarationValue(r, t);
     }
    } else if (n instanceof Qe) {
     this.getCompletionsForExtendsReference(n, null, t);
    } else if (this.currentWord && this.currentWord[0] === "@") {
     this.getCompletionsForDeclarationProperty(null, t);
    }
    return t;
   };
   e.prototype.getCompletionsForVariableDeclaration = function(e, t) {
    if (this.offset > e.colonPosition) {
     this.getVariableProposals(e.getValue(), t);
    }
    return t;
   };
   e.prototype.getCompletionsForExpression = function(e, t) {
    if (e.getParent() instanceof ye) {
     this.getCompletionsForFunctionArgument(e.getParent(), e.getParent().getParent(), t);
     return t;
    }
    var n = e.findParent(X.Declaration);
    if (!n) {
     this.getTermProposals(null, null, t);
     return t;
    }
    var r = e.findChildAtOffset(this.offset, true);
    if (!r) {
     return this.getCompletionsForDeclarationValue(n, t);
    }
    if (r instanceof He || r instanceof re) {
     return this.getCompletionsForDeclarationValue(n, t);
    }
    return t;
   };
   e.prototype.getCompletionsForFunctionArgument = function(e, t, n) {
    if (t.getIdentifier().getText() === "var") {
     if (!t.getArguments().hasChildren() || t.getArguments().getChild(0) === e) {
      this.getVariableProposalsForCSSVarFunction(n);
     }
    }
    return n;
   };
   e.prototype.getCompletionsForFunctionDeclaration = function(e, t) {
    var n = e.getDeclarations();
    if (n && this.offset > n.offset && this.offset < n.end) {
     this.getTermProposals(null, null, t);
    }
    return t;
   };
   e.prototype.getCompletionsForMixinReference = function(e, t) {
    var n = this.getSymbolContext().findSymbolsAtOffset(this.offset, Q.Mixin);
    for (var r = 0, i = n; r < i.length; r++) {
     var a = i[r];
     if (a.node instanceof Ze) {
      t.items.push(this.makeTermProposal(a, a.node.getParameters(), null));
     }
    }
    return t;
   };
   e.prototype.getTermProposals = function(e, t, n) {
    var r = this.getSymbolContext().findSymbolsAtOffset(this.offset, Q.Function);
    for (var i = 0, a = r; i < a.length; i++) {
     var o = a[i];
     if (o.node instanceof Ce) {
      n.items.push(this.makeTermProposal(o, o.node.getParameters(), t));
     }
    }
    return n;
   };
   e.prototype.makeTermProposal = function(e, t, n) {
    var r = e.node;
    var i = t.getChildren().map(function(e) {
     return e instanceof ve ? e.getName() : e.getText();
    });
    var a = e.name + "(" + i.map(function(e, t) {
     return "${" + (t + 1) + ":" + e + "}";
    }).join(", ") + ")";
    return {
     label: e.name,
     detail: e.name + "(" + i.join(", ") + ")",
     textEdit: En["TextEdit"].replace(this.getCompletionRange(n), a),
     insertTextFormat: An,
     kind: En["CompletionItemKind"].Function,
     sortText: "z"
    };
   };
   e.prototype.getCompletionsForSupportsCondition = function(e, t) {
    var n = e.findFirstChildBeforeOffset(this.offset);
    if (n) {
     if (n instanceof me) {
      if (!Ln(n.colonPosition || this.offset <= n.colonPosition)) {
       return this.getCompletionsForDeclarationProperty(n, t);
      } else {
       return this.getCompletionsForDeclarationValue(n, t);
      }
     } else if (n instanceof Be) {
      return this.getCompletionsForSupportsCondition(n, t);
     }
    }
    if (Ln(e.lParent) && this.offset > e.lParent && (!Ln(e.rParent) || this.offset <= e.rParent)) {
     return this.getCompletionsForDeclarationProperty(null, t);
    }
    return t;
   };
   e.prototype.getCompletionsForSupports = function(e, t) {
    var n = e.getDeclarations();
    var r = !n || this.offset <= n.offset;
    if (r) {
     var i = e.findFirstChildBeforeOffset(this.offset);
     if (i instanceof Be) {
      return this.getCompletionsForSupportsCondition(i, t);
     }
     return t;
    }
    return this.getCompletionForTopLevel(t);
   };
   e.prototype.getCompletionsForExtendsReference = function(e, t, n) {
    return n;
   };
   e.prototype.getCompletionForUriLiteralValue = function(e, t) {
    var n;
    var r;
    var i;
    if (e.getChildren().length === 0) {
     n = "";
     r = this.position;
     var a = this.textDocument.positionAt(e.offset + "url(".length);
     i = En["Range"].create(a, a);
    } else {
     var o = e.getChild(0);
     n = o.getText();
     r = this.position;
     i = this.getCompletionRange(o);
    }
    this.completionParticipants.forEach(function(e) {
     if (e.onCssURILiteralValue) {
      e.onCssURILiteralValue({
       uriValue: n,
       position: r,
       range: i
      });
     }
    });
    return t;
   };
   return e;
  }();
  var Pn = function() {
   function e() {
    this.entries = {};
   }
   e.prototype.add = function(e) {
    this.entries[e] = true;
   };
   e.prototype.getEntries = function() {
    return Object.keys(this.entries);
   };
   return e;
  }();
  function In(e) {
   return e.replace(/\(\)$/, "($1)");
  }
  function On(e, t) {
   var n = t.getFullPropertyName();
   var r = new Pn();
   function i(e) {
    if (e instanceof re || e instanceof He || e instanceof We) {
     r.add(e.getText());
    }
    return true;
   }
   function a(e) {
    var t = e.getFullPropertyName();
    return n === t;
   }
   function o(e) {
    if (e instanceof me && e !== t) {
     if (a(e)) {
      var n = e.getValue();
      if (n) {
       n.accept(i);
      }
     }
    }
    return true;
   }
   e.accept(o);
   return r;
  }
  var Mn = function() {
   function e(e, t) {
    this.entries = e;
    this.currentOffset = t;
   }
   e.prototype.visitNode = function(e) {
    if (e instanceof We || e instanceof he && Nt(e)) {
     if (this.currentOffset < e.offset || e.end < this.currentOffset) {
      this.entries.add(e.getText());
     }
    }
    return true;
   };
   return e;
  }();
  function Ln(e) {
   return typeof e !== "undefined";
  }
  function Rn(e, t) {
   var n = t - 1;
   var r = e.getText();
   while (n >= 0 && ' \t\n\r":{[()]},*>+'.indexOf(r.charAt(n)) === -1) {
    n--;
   }
   return r.substring(n + 1, t);
  }
  var Bn = undefined && undefined.__extends || function() {
   var e = Object.setPrototypeOf || {
    __proto__: []
   } instanceof Array && function(e, t) {
    e.__proto__ = t;
   } || function(e, t) {
    for (var n in t) if (t.hasOwnProperty(n)) e[n] = t[n];
   };
   return function(t, n) {
    e(t, n);
    function r() {
     this.constructor = t;
    }
    t.prototype = n === null ? Object.create(n) : (r.prototype = n.prototype, new r());
   };
  }();
  var zn = function() {
   function e() {}
   e.prototype.findAttribute = function(e) {
    if (this.attributes) {
     for (var t = 0, n = this.attributes; t < n.length; t++) {
      var r = n[t];
      if (r.name === e) {
       return r.value;
      }
     }
    }
    return null;
   };
   e.prototype.addChild = function(t) {
    if (t instanceof e) {
     t.parent = this;
    }
    if (!this.children) {
     this.children = [];
    }
    this.children.push(t);
   };
   e.prototype.append = function(e) {
    if (this.attributes) {
     var t = this.attributes[this.attributes.length - 1];
     t.value = t.value + e;
    }
   };
   e.prototype.prepend = function(e) {
    if (this.attributes) {
     var t = this.attributes[0];
     t.value = e + t.value;
    }
   };
   e.prototype.findRoot = function() {
    var e = this;
    while (e.parent && !(e.parent instanceof jn)) {
     e = e.parent;
    }
    return e;
   };
   e.prototype.removeChild = function(e) {
    if (this.children) {
     var t = this.children.indexOf(e);
     if (t !== -1) {
      this.children.splice(t, 1);
      return true;
     }
    }
    return false;
   };
   e.prototype.addAttr = function(e, t) {
    if (!this.attributes) {
     this.attributes = [];
    }
    for (var n = 0, r = this.attributes; n < r.length; n++) {
     var i = r[n];
     if (i.name === e) {
      i.value += " " + t;
      return;
     }
    }
    this.attributes.push({
     name: e,
     value: t
    });
   };
   e.prototype.clone = function(t) {
    if (t === void 0) {
     t = true;
    }
    var n = new e();
    if (this.attributes) {
     n.attributes = [];
     for (var r = 0, i = this.attributes; r < i.length; r++) {
      var a = i[r];
      n.addAttr(a.name, a.value);
     }
    }
    if (t && this.children) {
     n.children = [];
     for (var o = 0; o < this.children.length; o++) {
      n.addChild(this.children[o].clone());
     }
    }
    return n;
   };
   e.prototype.cloneWithParent = function() {
    var e = this.clone(false);
    if (this.parent && !(this.parent instanceof jn)) {
     var t = this.parent.cloneWithParent();
     t.addChild(e);
    }
    return e;
   };
   return e;
  }();
  var jn = function(e) {
   Bn(t, e);
   function t() {
    return e !== null && e.apply(this, arguments) || this;
   }
   return t;
  }(zn);
  var qn = function(e) {
   Bn(t, e);
   function t(t) {
    var n = e.call(this) || this;
    n.addAttr("name", t);
    return n;
   }
   return t;
  }(zn);
  var Un = function() {
   function e(e) {
    this.quote = e;
   }
   e.prototype.print = function(e) {
    this.result = [];
    if (e instanceof jn) {
     this.doPrint(e.children, 0);
    } else {
     this.doPrint([ e ], 0);
    }
    var t = this.result.join("\n");
    return [ {
     language: "html",
     value: t
    } ];
   };
   e.prototype.doPrint = function(e, t) {
    for (var n = 0, r = e; n < r.length; n++) {
     var i = r[n];
     this.doPrintElement(i, t);
     if (i.children) {
      this.doPrint(i.children, t + 1);
     }
    }
   };
   e.prototype.writeLine = function(e, t) {
    var n = new Array(e + 1).join("  ");
    this.result.push(n + t);
   };
   e.prototype.doPrintElement = function(e, t) {
    var n = e.findAttribute("name");
    if (e instanceof qn || n === "…") {
     this.writeLine(t, n);
     return;
    }
    var r = [ "<" ];
    if (n) {
     r.push(n);
    } else {
     r.push("element");
    }
    if (e.attributes) {
     for (var i = 0, a = e.attributes; i < a.length; i++) {
      var o = a[i];
      if (o.name !== "name") {
       r.push(" ");
       r.push(o.name);
       var s = o.value;
       if (s) {
        r.push("=");
        r.push(Jn.ensure(s, this.quote));
       }
      }
     }
    }
    r.push(">");
    this.writeLine(t, r.join(""));
   };
   return e;
  }();
  var Jn;
  (function(e) {
   function t(e, t) {
    return t + n(e) + t;
   }
   e.ensure = t;
   function n(e) {
    var t = e.match(/^['"](.*)["']$/);
    if (t) {
     return t[1];
    }
    return e;
   }
   e.remove = n;
  })(Jn || (Jn = {}));
  function Kn(e, t) {
   var n = new zn();
   for (var r = 0, i = e.getChildren(); r < i.length; r++) {
    var a = i[r];
    switch (a.type) {
    case X.SelectorCombinator:
     if (t) {
      var o = a.getText().split("&");
      if (o.length === 1) {
       n.addAttr("name", o[0]);
       break;
      }
      n = t.cloneWithParent();
      if (o[0]) {
       var s = n.findRoot();
       s.prepend(o[0]);
      }
      for (var c = 1; c < o.length; c++) {
       if (c > 1) {
        var u = t.cloneWithParent();
        n.addChild(u.findRoot());
        n = u;
       }
       n.append(o[c]);
      }
     }
     break;

    case X.SelectorPlaceholder:
     if (a.getText() === "@at-root") {
      return n;
     }

    case X.ElementNameSelector:
     var l = a.getText();
     n.addAttr("name", l === "*" ? "element" : Vn(l));
     break;

    case X.ClassSelector:
     n.addAttr("class", Vn(a.getText().substring(1)));
     break;

    case X.IdentifierSelector:
     n.addAttr("id", Vn(a.getText().substring(1)));
     break;

    case X.MixinDeclaration:
     n.addAttr("class", a.getName());
     break;

    case X.PseudoSelector:
     n.addAttr(Vn(a.getText()), "");
     break;

    case X.AttributeSelector:
     var f = a;
     var d = f.getIdentifier();
     if (d) {
      var p = f.getValue();
      var m = f.getOperator();
      var _ = void 0;
      if (p) {
       switch (Vn(m.getText())) {
       case "|=":
        _ = Jn.remove(Vn(p.getText())) + "-…";
        break;

       case "^=":
        _ = Jn.remove(Vn(p.getText())) + "…";
        break;

       case "$=":
        _ = "…" + Jn.remove(Vn(p.getText()));
        break;

       case "~=":
        _ = " … " + Jn.remove(Vn(p.getText())) + " … ";
        break;

       case "*=":
        _ = "…" + Jn.remove(Vn(p.getText())) + "…";
        break;

       default:
        _ = Jn.remove(Vn(p.getText()));
        break;
       }
      }
      n.addAttr(Vn(d.getText()), _);
     }
     break;
    }
   }
   return n;
  }
  function Vn(e) {
   var t = new G();
   t.setSource(e);
   var n = t.scanUnquotedString();
   if (n) {
    return n.text;
   }
   return e;
  }
  function Wn(e) {
   var t = Xn(e);
   return new Un('"').print(t);
  }
  function Hn(e) {
   var t = Kn(e);
   return new Un('"').print(t);
  }
  var Gn = function() {
   function e(e) {
    this.prev = null;
    this.element = e;
   }
   e.prototype.processSelector = function(e) {
    var t = null;
    if (!(this.element instanceof jn)) {
     if (e.getChildren().some(function(e) {
      return e.hasChildren() && e.getChild(0).type === X.SelectorCombinator;
     })) {
      var n = this.element.findRoot();
      if (n.parent instanceof jn) {
       t = this.element;
       this.element = n.parent;
       this.element.removeChild(n);
       this.prev = null;
      }
     }
    }
    for (var r = 0, i = e.getChildren(); r < i.length; r++) {
     var a = i[r];
     if (a instanceof ue) {
      if (this.prev instanceof ue) {
       var o = new qn("…");
       this.element.addChild(o);
       this.element = o;
      } else if (this.prev && (this.prev.matches("+") || this.prev.matches("~"))) {
       this.element = this.element.parent;
      }
      if (this.prev && this.prev.matches("~")) {
       this.element.addChild(Kn(a));
       this.element.addChild(new qn("⋮"));
      }
      var s = Kn(a, t);
      var c = s.findRoot();
      this.element.addChild(c);
      this.element = s;
     }
     if (a instanceof ue || a.type === X.SelectorCombinatorParent || a.type === X.SelectorCombinatorShadowPiercingDescendant || a.type === X.SelectorCombinatorSibling || a.type === X.SelectorCombinatorAllSiblings) {
      this.prev = a;
     }
    }
   };
   return e;
  }();
  function $n(e) {
   switch (e.type) {
   case X.MixinDeclaration:
   case X.Stylesheet:
    return true;
   }
   return false;
  }
  function Xn(e) {
   if (e.matches("@at-root")) {
    return null;
   }
   var t = new jn();
   var n = [];
   if (e.getParent() instanceof se) {
    var r = e.getParent().getParent();
    while (r && !$n(r)) {
     if (r instanceof se) {
      if (r.getSelectors().matches("@at-root")) {
       break;
      }
      n.push(r);
     }
     r = r.getParent();
    }
   }
   var i = new Gn(t);
   for (var a = n.length - 1; a >= 0; a--) {
    var o = n[a].getSelectors().getChild(0);
    if (o) {
     i.processSelector(o);
    }
   }
   i.processSelector(e);
   return t;
  }
  var Qn = function() {
   function e() {}
   e.prototype.doHover = function(e, t, n) {
    function r(t) {
     return En["Range"].create(e.positionAt(t.offset), e.positionAt(t.end));
    }
    var i = e.offsetAt(t);
    var a = Z(n, i);
    for (var o = 0; o < a.length; o++) {
     var s = a[o];
     if (s instanceof ce) {
      return {
       contents: Wn(s),
       range: r(s)
      };
     }
     if (s instanceof ue) {
      return {
       contents: Hn(s),
       range: r(s)
      };
     }
     if (s instanceof me) {
      var c = s.getFullPropertyName();
      var u = an()[c];
      if (u) {
       var l = [];
       if (u.description) {
        l.push(En["MarkedString"].fromPlainText(u.description));
       }
       var f = Yt(u.browsers);
       if (f) {
        l.push(En["MarkedString"].fromPlainText(f));
       }
       if (l.length) {
        return {
         contents: l,
         range: r(s)
        };
       }
      }
     }
    }
    return null;
   };
   return e;
  }();
  var Yn = ot["loadMessageBundle"]();
  var Zn = function() {
   function e() {}
   e.prototype.findDefinition = function(e, t, n) {
    var r = new Sn(n);
    var i = e.offsetAt(t);
    var a = Y(n, i);
    if (!a) {
     return null;
    }
    var o = r.findSymbolFromNode(a);
    if (!o) {
     return null;
    }
    return {
     uri: e.uri,
     range: tr(o.node, e)
    };
   };
   e.prototype.findReferences = function(e, t, n) {
    var r = this.findDocumentHighlights(e, t, n);
    return r.map(function(t) {
     return {
      uri: e.uri,
      range: t.range
     };
    });
   };
   e.prototype.findDocumentHighlights = function(e, t, n) {
    var r = [];
    var i = e.offsetAt(t);
    var a = Y(n, i);
    if (!a || a.type === X.Stylesheet || a.type === X.Declarations) {
     return r;
    }
    var o = new Sn(n);
    var s = o.findSymbolFromNode(a);
    var c = a.getText();
    n.accept(function(t) {
     if (s) {
      if (o.matchesSymbol(t, s)) {
       r.push({
        kind: nr(t),
        range: tr(t, e)
       });
       return false;
      }
     } else if (a.type === t.type && a.length === t.length && c === t.getText()) {
      r.push({
       kind: nr(t),
       range: tr(t, e)
      });
     }
     return true;
    });
    return r;
   };
   e.prototype.findDocumentSymbols = function(e, t) {
    var n = [];
    t.accept(function(t) {
     var r = {
      name: null,
      kind: En["SymbolKind"].Class,
      location: null
     };
     var i = t;
     if (t instanceof ce) {
      r.name = t.getText();
      i = t.findParent(X.Ruleset);
     } else if (t instanceof Ge) {
      r.name = t.getName();
      r.kind = En["SymbolKind"].Variable;
     } else if (t instanceof Ze) {
      r.name = t.getName();
      r.kind = En["SymbolKind"].Method;
     } else if (t instanceof Ce) {
      r.name = t.getName();
      r.kind = En["SymbolKind"].Function;
     } else if (t instanceof Ne) {
      r.name = Yn("literal.keyframes", "@keyframes {0}", t.getName());
     } else if (t instanceof Te) {
      r.name = Yn("literal.fontface", "@font-face");
     }
     if (r.name) {
      r.location = En["Location"].create(e.uri, tr(i, e));
      n.push(r);
     }
     return true;
    });
    return n;
   };
   e.prototype.findDocumentColors = function(e, t) {
    var n = [];
    t.accept(function(t) {
     var r = er(t, e);
     if (r) {
      n.push(r);
     }
     return true;
    });
    return n;
   };
   e.prototype.getColorPresentations = function(e, t, n, r) {
    var i = [];
    var a = Math.round(n.red * 255), o = Math.round(n.green * 255), s = Math.round(n.blue * 255);
    var c;
    if (n.alpha === 1) {
     c = "rgb(" + a + ", " + o + ", " + s + ")";
    } else {
     c = "rgba(" + a + ", " + o + ", " + s + ", " + n.alpha + ")";
    }
    i.push({
     label: c,
     textEdit: En["TextEdit"].replace(r, c)
    });
    if (n.alpha === 1) {
     c = "#" + rr(a) + rr(o) + rr(s);
    } else {
     c = "#" + rr(a) + rr(o) + rr(s) + rr(Math.round(n.alpha * 255));
    }
    i.push({
     label: c,
     textEdit: En["TextEdit"].replace(r, c)
    });
    var u = qt(n);
    if (u.a === 1) {
     c = "hsl(" + u.h + ", " + Math.round(u.s * 100) + "%, " + Math.round(u.l * 100) + "%)";
    } else {
     c = "hsla(" + u.h + ", " + Math.round(u.s * 100) + "%, " + Math.round(u.l * 100) + "%, " + u.a + ")";
    }
    i.push({
     label: c,
     textEdit: En["TextEdit"].replace(r, c)
    });
    return i;
   };
   e.prototype.doRename = function(e, t, n, r) {
    var i = this.findDocumentHighlights(e, t, r);
    var a = i.map(function(e) {
     return En["TextEdit"].replace(e.range, n);
    });
    return {
     changes: (o = {}, o[e.uri] = a, o)
    };
    var o;
   };
   return e;
  }();
  function er(e, t) {
   var n = Ut(e);
   if (n) {
    var r = tr(e, t);
    return {
     color: n,
     range: r
    };
   }
   return null;
  }
  function tr(e, t) {
   return En["Range"].create(t.positionAt(e.offset), t.positionAt(e.end));
  }
  function nr(e) {
   if (e.type === X.Selector) {
    return En["DocumentHighlightKind"].Write;
   }
   if (e instanceof re) {
    if (e.parent && e.parent instanceof _e) {
     if (e.isCustomProperty) {
      return En["DocumentHighlightKind"].Write;
     }
    }
   }
   if (e.parent) {
    switch (e.parent.type) {
    case X.FunctionDeclaration:
    case X.MixinDeclaration:
    case X.Keyframe:
    case X.VariableDeclaration:
    case X.FunctionParameter:
     return En["DocumentHighlightKind"].Write;
    }
   }
   return En["DocumentHighlightKind"].Read;
  }
  function rr(e) {
   var t = e.toString(16);
   return t.length !== 2 ? "0" + t : t;
  }
  var ir = ot["loadMessageBundle"]();
  var ar = rt.Warning;
  var or = rt.Error;
  var sr = rt.Ignore;
  var cr = function() {
   function e(e, t, n) {
    this.id = e;
    this.message = t;
    this.defaultValue = n;
   }
   return e;
  }();
  var ur = {
   AllVendorPrefixes: new cr("compatibleVendorPrefixes", ir("rule.vendorprefixes.all", "When using a vendor-specific prefix make sure to also include all other vendor-specific properties"), sr),
   IncludeStandardPropertyWhenUsingVendorPrefix: new cr("vendorPrefix", ir("rule.standardvendorprefix.all", "When using a vendor-specific prefix also include the standard property"), ar),
   DuplicateDeclarations: new cr("duplicateProperties", ir("rule.duplicateDeclarations", "Do not use duplicate style definitions"), sr),
   EmptyRuleSet: new cr("emptyRules", ir("rule.emptyRuleSets", "Do not use empty rulesets"), ar),
   ImportStatemement: new cr("importStatement", ir("rule.importDirective", "Import statements do not load in parallel"), sr),
   BewareOfBoxModelSize: new cr("boxModel", ir("rule.bewareOfBoxModelSize", "Do not use width or height when using padding or border"), sr),
   UniversalSelector: new cr("universalSelector", ir("rule.universalSelector", "The universal selector (*) is known to be slow"), sr),
   ZeroWithUnit: new cr("zeroUnits", ir("rule.zeroWidthUnit", "No unit for zero needed"), sr),
   RequiredPropertiesForFontFace: new cr("fontFaceProperties", ir("rule.fontFaceProperties", "@font-face rule must define 'src' and 'font-family' properties"), ar),
   HexColorLength: new cr("hexColorLength", ir("rule.hexColor", "Hex colors must consist of three, four, six or eight hex numbers"), or),
   ArgsInColorFunction: new cr("argumentsInColorFunction", ir("rule.colorFunction", "Invalid number of parameters"), or),
   UnknownProperty: new cr("unknownProperties", ir("rule.unknownProperty", "Unknown property."), ar),
   IEStarHack: new cr("ieHack", ir("rule.ieHack", "IE hacks are only necessary when supporting IE7 and older"), sr),
   UnknownVendorSpecificProperty: new cr("unknownVendorSpecificProperties", ir("rule.unknownVendorSpecificProperty", "Unknown vendor specific property."), sr),
   PropertyIgnoredDueToDisplay: new cr("propertyIgnoredDueToDisplay", ir("rule.propertyIgnoredDueToDisplay", "Property is ignored due to the display."), ar),
   AvoidImportant: new cr("important", ir("rule.avoidImportant", "Avoid using !important. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored."), sr),
   AvoidFloat: new cr("float", ir("rule.avoidFloat", "Avoid using 'float'. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes."), sr),
   AvoidIdSelector: new cr("idSelector", ir("rule.avoidIdSelector", "Selectors should not contain IDs because these rules are too tightly coupled with the HTML."), sr)
  };
  var lr = function() {
   function e(e) {
    if (e === void 0) {
     e = {};
    }
    this.conf = e;
   }
   e.prototype.get = function(e) {
    if (this.conf.hasOwnProperty(e.id)) {
     var t = fr(this.conf[e.id]);
     if (t) {
      return t;
     }
    }
    return e.defaultValue;
   };
   return e;
  }();
  function fr(e) {
   switch (e) {
   case "ignore":
    return rt.Ignore;

   case "warning":
    return rt.Warning;

   case "error":
    return rt.Error;
   }
   return null;
  }
  var dr = ot["loadMessageBundle"]();
  var pr = function() {
   function e() {}
   e.prototype.doCodeActions = function(e, t, n, r) {
    var i = [];
    if (n.diagnostics) {
     for (var a = 0, o = n.diagnostics; a < o.length; a++) {
      var s = o[a];
      this.appendFixesForMarker(e, r, s, i);
     }
    }
    return i;
   };
   e.prototype.getFixesForUnknownProperty = function(e, t, n, r) {
    var i = t.getName();
    var a = [];
    for (var o in an()) {
     var s = Dn(i, o);
     if (s >= i.length / 2) {
      a.push({
       property: o,
       score: s
      });
     }
    }
    a.sort(function(e, t) {
     return t.score - e.score;
    });
    var c = 3;
    for (var u = 0, l = a; u < l.length; u++) {
     var f = l[u];
     var d = f.property;
     var p = dr("css.codeaction.rename", "Rename to '{0}'", d);
     var m = En["TextEdit"].replace(n.range, d);
     r.push(En["Command"].create(p, "_css.applyCodeAction", e.uri, e.version, [ m ]));
     if (--c <= 0) {
      return;
     }
    }
   };
   e.prototype.appendFixesForMarker = function(e, t, n, r) {
    if (n.code !== ur.UnknownProperty.id) {
     return;
    }
    var i = e.offsetAt(n.range.start);
    var a = e.offsetAt(n.range.end);
    var o = Z(t, i);
    for (var s = o.length - 1; s >= 0; s--) {
     var c = o[s];
     if (c instanceof me) {
      var u = c.getProperty();
      if (u && u.offset === i && u.end === a) {
       this.getFixesForUnknownProperty(e, u, n, r);
       return;
      }
     }
    }
   };
   return e;
  }();
  var mr = ot["loadMessageBundle"]();
  var _r = function() {
   function e(e, t) {
    this.name = e;
    this.node = t;
   }
   return e;
  }();
  var gr = function() {
   function e() {
    this.data = {};
   }
   e.prototype.add = function(e, t, n) {
    var r = this.data[e];
    if (!r) {
     r = {
      nodes: [],
      names: []
     };
     this.data[e] = r;
    }
    r.names.push(t);
    if (n) {
     r.nodes.push(n);
    }
   };
   return e;
  }();
  var hr = function() {
   function e(e, t) {
    this.warnings = [];
    this.settings = t;
    this.documentText = e.getText();
    this.keyframes = new gr();
   }
   e.entries = function(t, n, r, i) {
    var a = new e(n, r);
    t.acceptVisitor(a);
    a.completeValidations();
    return a.getEntries(i);
   };
   e.prototype.fetch = function(e, t) {
    var n = [];
    for (var r = 0, i = e; r < i.length; r++) {
     var a = i[r];
     if (a.name === t) {
      n.push(a);
     }
    }
    return n;
   };
   e.prototype.fetchWithValue = function(e, t, n) {
    var r = [];
    for (var i = 0, a = e; i < a.length; i++) {
     var o = a[i];
     if (o.name === t) {
      var s = o.node.getValue();
      if (s && this.findValueInExpression(s, n)) {
       r.push(o);
      }
     }
    }
    return r;
   };
   e.prototype.findValueInExpression = function(e, t) {
    var n = false;
    e.accept(function(e) {
     if (e.type === X.Identifier && e.getText() === t) {
      n = true;
     }
     return !n;
    });
    return n;
   };
   e.prototype.getEntries = function(e) {
    if (e === void 0) {
     e = rt.Warning | rt.Error;
    }
    return this.warnings.filter(function(t) {
     return (t.getLevel() & e) !== 0;
    });
   };
   e.prototype.addEntry = function(e, t, n) {
    var r = new it(e, t, this.settings.get(t), n);
    this.warnings.push(r);
   };
   e.prototype.getMissingNames = function(e, t) {
    e = e.slice(0);
    for (var n = 0; n < t.length; n++) {
     var r = e.indexOf(t[n]);
     if (r !== -1) {
      e[r] = null;
     }
    }
    var i = null;
    for (var n = 0; n < e.length; n++) {
     var a = e[n];
     if (a) {
      if (i === null) {
       i = mr("namelist.single", "'{0}'", a);
      } else {
       i = mr("namelist.concatenated", "{0}, '{1}'", i, a);
      }
     }
    }
    return i;
   };
   e.prototype.visitNode = function(e) {
    switch (e.type) {
    case X.Keyframe:
     return this.visitKeyframe(e);

    case X.FontFace:
     return this.visitFontFace(e);

    case X.Ruleset:
     return this.visitRuleSet(e);

    case X.SimpleSelector:
     return this.visitSimpleSelector(e);

    case X.Function:
     return this.visitFunction(e);

    case X.NumericValue:
     return this.visitNumericValue(e);

    case X.Import:
     return this.visitImport(e);

    case X.HexColorValue:
     return this.visitHexColorValue(e);

    case X.Prio:
     return this.visitPrio(e);
    }
    return true;
   };
   e.prototype.completeValidations = function() {
    this.validateKeyframes();
   };
   e.prototype.visitKeyframe = function(e) {
    var t = e.getKeyword();
    var n = t.getText();
    this.keyframes.add(e.getName(), n, n !== "@keyframes" ? t : null);
    return true;
   };
   e.prototype.validateKeyframes = function() {
    var e = [ "@-webkit-keyframes", "@-moz-keyframes", "@-o-keyframes" ];
    for (var t in this.keyframes.data) {
     var n = this.keyframes.data[t].names;
     var r = n.indexOf("@keyframes") === -1;
     if (!r && n.length === 1) {
      continue;
     }
     var i = this.getMissingNames(e, n);
     if (i || r) {
      for (var a = 0, o = this.keyframes.data[t].nodes; a < o.length; a++) {
       var s = o[a];
       if (r) {
        var c = mr("keyframes.standardrule.missing", "Always define standard rule '@keyframes' when defining keyframes.");
        this.addEntry(s, ur.IncludeStandardPropertyWhenUsingVendorPrefix, c);
       }
       if (i) {
        var c = mr("keyframes.vendorspecific.missing", "Always include all vendor specific rules: Missing: {0}", i);
        this.addEntry(s, ur.AllVendorPrefixes, c);
       }
      }
     }
    }
    return true;
   };
   e.prototype.visitSimpleSelector = function(e) {
    var t = this.documentText.charAt(e.offset);
    if (e.length === 1 && t === "*") {
     this.addEntry(e, ur.UniversalSelector);
    }
    if (t === "#") {
     this.addEntry(e, ur.AvoidIdSelector);
    }
    return true;
   };
   e.prototype.visitImport = function(e) {
    this.addEntry(e, ur.ImportStatemement);
    return true;
   };
   e.prototype.visitRuleSet = function(t) {
    var n = t.getDeclarations();
    if (!n) {
     return false;
    }
    if (!n.hasChildren()) {
     this.addEntry(t.getSelectors(), ur.EmptyRuleSet);
    }
    var r = this;
    var i = [];
    for (var a = 0, o = n.getChildren(); a < o.length; a++) {
     var s = o[a];
     if (s instanceof me) {
      var c = s;
      i.push(new _r(c.getFullPropertyName().toLowerCase(), c));
     }
    }
    if (this.fetch(i, "box-sizing").length === 0) {
     var u = this.fetch(i, "width");
     if (u.length > 0) {
      var l = false;
      for (var f = 0, d = [ "border", "border-left", "border-right", "padding", "padding-left", "padding-right" ]; f < d.length; f++) {
       var p = d[f];
       var m = this.fetch(i, p);
       for (var _ = 0, g = m; _ < g.length; _++) {
        var s = g[_];
        var h = s.node.getValue();
        if (h && !h.matches("none")) {
         this.addEntry(s.node, ur.BewareOfBoxModelSize);
         l = true;
        }
       }
      }
      if (l) {
       for (var v = 0, y = u; v < y.length; v++) {
        var b = y[v];
        this.addEntry(b.node, ur.BewareOfBoxModelSize);
       }
      }
     }
     var x = this.fetch(i, "height");
     if (x.length > 0) {
      var l = false;
      for (var k = 0, S = [ "border", "border-top", "border-bottom", "padding", "padding-top", "padding-bottom" ]; k < S.length; k++) {
       var p = S[k];
       var w = this.fetch(i, p);
       for (var C = 0, D = w; C < D.length; C++) {
        var s = D[C];
        var h = s.node.getValue();
        if (h && !h.matches("none")) {
         this.addEntry(s.node, ur.BewareOfBoxModelSize);
         l = true;
        }
       }
      }
      if (l) {
       for (var T = 0, E = x; T < E.length; T++) {
        var N = E[T];
        this.addEntry(N.node, ur.BewareOfBoxModelSize);
       }
      }
     }
    }
    var A = this.fetchWithValue(i, "display", "inline");
    if (A.length > 0) {
     for (var F = 0, P = [ "width", "height", "margin-top", "margin-bottom", "float" ]; F < P.length; F++) {
      var I = P[F];
      var O = r.fetch(i, I);
      for (var M = 0; M < O.length; M++) {
       var L = O[M].node;
       var h = L.getValue();
       if (I === "float" && (!h || h.matches("none"))) {
        continue;
       }
       r.addEntry(L, ur.PropertyIgnoredDueToDisplay, mr("rule.propertyIgnoredDueToDisplayInline", "Property is ignored due to the display. With 'display: inline', the width, height, margin-top, margin-bottom, and float properties have no effect."));
      }
     }
    }
    A = this.fetchWithValue(i, "display", "inline-block");
    if (A.length > 0) {
     var O = this.fetch(i, "float");
     for (var M = 0; M < O.length; M++) {
      var R = O[M].node;
      var h = R.getValue();
      if (h && !h.matches("none")) {
       this.addEntry(R, ur.PropertyIgnoredDueToDisplay, mr("rule.propertyIgnoredDueToDisplayInlineBlock", "inline-block is ignored due to the float. If 'float' has a value other than 'none', the box is floated and 'display' is treated as 'block'"));
      }
     }
    }
    A = this.fetchWithValue(i, "display", "block");
    if (A.length > 0) {
     var O = this.fetch(i, "vertical-align");
     for (var M = 0; M < O.length; M++) {
      this.addEntry(O[M].node, ur.PropertyIgnoredDueToDisplay, mr("rule.propertyIgnoredDueToDisplayBlock", "Property is ignored due to the display. With 'display: block', vertical-align should not be used."));
     }
    }
    var B = this.fetch(i, "float");
    for (var M = 0; M < B.length; M++) {
     this.addEntry(B[M].node, ur.AvoidFloat);
    }
    for (var z = 0; z < i.length; z++) {
     var s = i[z];
     if (s.name !== "background") {
      var h = s.node.getValue();
      if (h && this.documentText.charAt(h.offset) !== "-") {
       var j = this.fetch(i, s.name);
       if (j.length > 1) {
        for (var q = 0; q < j.length; q++) {
         var U = j[q].node.getValue();
         if (U && this.documentText.charAt(U.offset) !== "-" && j[q] !== s) {
          this.addEntry(s.node, ur.DuplicateDeclarations);
         }
        }
       }
      }
     }
    }
    var J = new gr();
    var K = false;
    for (var V = 0, W = n.getChildren(); V < W.length; V++) {
     var H = W[V];
     if (this.isCSSDeclaration(H)) {
      var c = H;
      var G = c.getFullPropertyName();
      var $ = G.charAt(0);
      if ($ === "-") {
       if (G.charAt(1) !== "-") {
        if (!Vt(G)) {
         this.addEntry(c.getProperty(), ur.UnknownVendorSpecificProperty);
        }
        var X = c.getNonPrefixedPropertyName();
        J.add(X, G, c.getProperty());
       }
      } else {
       if ($ === "*" || $ === "_") {
        this.addEntry(c.getProperty(), ur.IEStarHack);
        G = G.substr(1);
       }
       if (!Vt(G)) {
        this.addEntry(c.getProperty(), ur.UnknownProperty, mr("property.unknownproperty.detailed", "Unknown property: '{0}'", G));
       }
       J.add(G, G, null);
      }
     } else {
      K = true;
     }
    }
    if (!K) {
     for (var Q in J.data) {
      var Y = J.data[Q];
      var Z = Y.names;
      var ee = Wt(Q) && Z.indexOf(Q) === -1;
      if (!ee && Z.length === 1) {
       continue;
      }
      var te = [];
      for (var z = 0, ne = e.prefixes.length; z < ne; z++) {
       var re = e.prefixes[z];
       if (Wt(re + Q)) {
        te.push(re + Q);
       }
      }
      var ie = this.getMissingNames(te, Z);
      if (ie || ee) {
       for (var ae = 0, oe = Y.nodes; ae < oe.length; ae++) {
        var se = oe[ae];
        if (ee) {
         var ce = mr("property.standard.missing", "Also define the standard property '{0}' for compatibility", Q);
         this.addEntry(se, ur.IncludeStandardPropertyWhenUsingVendorPrefix, ce);
        }
        if (ie) {
         var ce = mr("property.vendorspecific.missing", "Always include all vendor specific properties: Missing: {0}", ie);
         this.addEntry(se, ur.AllVendorPrefixes, ce);
        }
       }
      }
     }
    }
    return true;
   };
   e.prototype.visitPrio = function(e) {
    this.addEntry(e, ur.AvoidImportant);
    return true;
   };
   e.prototype.visitNumericValue = function(e) {
    var t = e.findParent(X.Declaration);
    if (t) {
     var n = t.getValue();
     if (n && n.offset === e.offset && n.length === e.length) {
      var r = e.getValue();
      if (!r.unit || Dt.length.indexOf(r.unit.toLowerCase()) === -1) {
       return true;
      }
      if (parseFloat(r.value) === 0 && !!r.unit) {
       this.addEntry(e, ur.ZeroWithUnit);
      }
     }
    }
    return true;
   };
   e.prototype.visitFontFace = function(e) {
    var t = e.getDeclarations();
    if (!t) {
     return;
    }
    var n = false, r = false;
    var i = false;
    for (var a = 0, o = t.getChildren(); a < o.length; a++) {
     var s = o[a];
     if (this.isCSSDeclaration(s)) {
      var c = s.getProperty().getName().toLowerCase();
      if (c === "src") {
       n = true;
      }
      if (c === "font-family") {
       r = true;
      }
     } else {
      i = true;
     }
    }
    if (!i && (!n || !r)) {
     this.addEntry(e, ur.RequiredPropertiesForFontFace);
    }
    return true;
   };
   e.prototype.isCSSDeclaration = function(e) {
    if (e instanceof me) {
     if (!e.getValue()) {
      return false;
     }
     var t = e.getProperty();
     if (!t || t.getIdentifier().containsInterpolation()) {
      return false;
     }
     return true;
    }
    return false;
   };
   e.prototype.visitHexColorValue = function(e) {
    var t = e.length;
    if (t !== 9 && t !== 7 && t !== 5 && t !== 4) {
     this.addEntry(e, ur.HexColorLength);
    }
    return false;
   };
   e.prototype.visitFunction = function(e) {
    var t = e.getName().toLowerCase();
    var n = -1;
    var r = 0;
    switch (t) {
    case "rgb(":
    case "hsl(":
     n = 3;
     break;

    case "rgba(":
    case "hsla(":
     n = 4;
     break;
    }
    if (n !== -1) {
     e.getArguments().accept(function(e) {
      if (e instanceof Ue) {
       r += 1;
       return false;
      }
      return true;
     });
     if (r !== n) {
      this.addEntry(e, ur.ArgsInColorFunction);
     }
    }
    return true;
   };
   e.prefixes = [ "-ms-", "-moz-", "-o-", "-webkit-" ];
   return e;
  }();
  var vr = function() {
   function e() {}
   e.prototype.configure = function(e) {
    this.settings = e;
   };
   e.prototype.doValidation = function(e, t, n) {
    if (n === void 0) {
     n = this.settings;
    }
    if (n && n.validate === false) {
     return [];
    }
    var r = [];
    r.push.apply(r, at.entries(t));
    r.push.apply(r, hr.entries(t, e, new lr(n && n.lint)));
    function i(t) {
     var n = En["Range"].create(e.positionAt(t.getOffset()), e.positionAt(t.getOffset() + t.getLength()));
     return {
      code: t.getRule().id,
      source: e.languageId,
      message: t.getMessage(),
      severity: t.getLevel() === rt.Warning ? En["DiagnosticSeverity"].Warning : En["DiagnosticSeverity"].Error,
      range: n
     };
    }
    return r.filter(function(e) {
     return e.getLevel() !== rt.Ignore;
    }).map(i);
   };
   return e;
  }();
  var yr = undefined && undefined.__extends || function() {
   var e = Object.setPrototypeOf || {
    __proto__: []
   } instanceof Array && function(e, t) {
    e.__proto__ = t;
   } || function(e, t) {
    for (var n in t) if (t.hasOwnProperty(n)) e[n] = t[n];
   };
   return function(t, n) {
    e(t, n);
    function r() {
     this.constructor = t;
    }
    t.prototype = n === null ? Object.create(n) : (r.prototype = n.prototype, new r());
   };
  }();
  var br = "/".charCodeAt(0);
  var xr = "\n".charCodeAt(0);
  var kr = "\r".charCodeAt(0);
  var Sr = "\f".charCodeAt(0);
  var wr = "$".charCodeAt(0);
  var Cr = "#".charCodeAt(0);
  var Dr = "{".charCodeAt(0);
  var Tr = "=".charCodeAt(0);
  var Er = "!".charCodeAt(0);
  var Nr = "<".charCodeAt(0);
  var Ar = ">".charCodeAt(0);
  var Fr = ".".charCodeAt(0);
  var Pr = r.CustomToken;
  var Ir = Pr++;
  var Or = Pr++;
  var Mr = Pr++;
  var Lr = Pr++;
  var Rr = Pr++;
  var Br = Pr++;
  var zr = Pr++;
  var jr = Pr++;
  var qr = function(e) {
   yr(t, e);
   function t() {
    return e !== null && e.apply(this, arguments) || this;
   }
   t.prototype.scanNext = function(t) {
    if (this.stream.advanceIfChar(wr)) {
     var n = [ "$" ];
     if (this.ident(n)) {
      return this.finishToken(t, Ir, n.join(""));
     } else {
      this.stream.goBackTo(t);
     }
    }
    if (this.stream.advanceIfChars([ Cr, Dr ])) {
     return this.finishToken(t, Or);
    }
    if (this.stream.advanceIfChars([ Tr, Tr ])) {
     return this.finishToken(t, Lr);
    }
    if (this.stream.advanceIfChars([ Er, Tr ])) {
     return this.finishToken(t, Rr);
    }
    if (this.stream.advanceIfChar(Nr)) {
     if (this.stream.advanceIfChar(Tr)) {
      return this.finishToken(t, zr);
     }
     return this.finishToken(t, r.Delim);
    }
    if (this.stream.advanceIfChar(Ar)) {
     if (this.stream.advanceIfChar(Tr)) {
      return this.finishToken(t, Br);
     }
     return this.finishToken(t, r.Delim);
    }
    if (this.stream.advanceIfChars([ Fr, Fr, Fr ])) {
     return this.finishToken(t, jr);
    }
    return e.prototype.scanNext.call(this, t);
   };
   t.prototype.comment = function() {
    if (e.prototype.comment.call(this)) {
     return true;
    }
    if (!this.inURL && this.stream.advanceIfChars([ br, br ])) {
     this.stream.advanceWhileChar(function(e) {
      switch (e) {
      case xr:
      case kr:
      case Sr:
       return false;

      default:
       return true;
      }
     });
     return true;
    } else {
     return false;
    }
   };
   return t;
  }(G);
  var Ur = ot["loadMessageBundle"]();
  var Jr = function() {
   function e(e, t) {
    this.id = e;
    this.message = t;
   }
   return e;
  }();
  var Kr = {
   FromExpected: new Jr("scss-fromexpected", Ur("expected.from", "'from' expected")),
   ThroughOrToExpected: new Jr("scss-throughexpected", Ur("expected.through", "'through' or 'to' expected")),
   InExpected: new Jr("scss-fromexpected", Ur("expected.in", "'in' expected"))
  };
  var Vr = undefined && undefined.__extends || function() {
   var e = Object.setPrototypeOf || {
    __proto__: []
   } instanceof Array && function(e, t) {
    e.__proto__ = t;
   } || function(e, t) {
    for (var n in t) if (t.hasOwnProperty(n)) e[n] = t[n];
   };
   return function(t, n) {
    e(t, n);
    function r() {
     this.constructor = t;
    }
    t.prototype = n === null ? Object.create(n) : (r.prototype = n.prototype, new r());
   };
  }();
  var Wr = function(e) {
   Vr(t, e);
   function t() {
    return e.call(this, new qr()) || this;
   }
   t.prototype._parseStylesheetStatement = function() {
    var t = e.prototype._parseStylesheetStatement.call(this);
    if (t) {
     return t;
    }
    if (this.peek(r.AtKeyword)) {
     return this._parseWarnAndDebug() || this._parseControlStatement() || this._parseMixinDeclaration() || this._parseMixinContent() || this._parseMixinReference() || this._parseFunctionDeclaration();
    }
    return this._parseVariableDeclaration();
   };
   t.prototype._parseImport = function() {
    if (!this.peekKeyword("@import")) {
     return null;
    }
    var e = this.create(Fe);
    this.consumeToken();
    if (!e.addChild(this._parseURILiteral()) && !e.addChild(this._parseStringLiteral())) {
     return this.finish(e, ut.URIOrStringExpected);
    }
    while (this.accept(r.Comma)) {
     if (!e.addChild(this._parseURILiteral()) && !e.addChild(this._parseStringLiteral())) {
      return this.finish(e, ut.URIOrStringExpected);
     }
    }
    if (!this.peek(r.SemiColon) && !this.peek(r.EOF)) {
     e.setMedialist(this._parseMediaQueryList());
    }
    return this.finish(e);
   };
   t.prototype._parseVariableDeclaration = function(e) {
    if (e === void 0) {
     e = [];
    }
    if (!this.peek(Ir)) {
     return null;
    }
    var t = this.create(Ge);
    if (!t.setVariable(this._parseVariable())) {
     return null;
    }
    if (!this.accept(r.Colon)) {
     return this.finish(t, ut.ColonExpected);
    }
    t.colonPosition = this.prevToken.offset;
    if (!t.setValue(this._parseExpr())) {
     return this.finish(t, ut.VariableValueExpected, [], e);
    }
    while (this.accept(r.Exclamation)) {
     if (!this.peekRegExp(r.Ident, /^(default|global)$/)) {
      return this.finish(t, ut.UnknownKeyword);
     }
     this.consumeToken();
    }
    if (this.peek(r.SemiColon)) {
     t.semicolonPosition = this.token.offset;
    }
    return this.finish(t);
   };
   t.prototype._parseMediaFeatureName = function() {
    return this._parseFunction() || this._parseIdent() || this._parseVariable();
   };
   t.prototype._parseKeyframeSelector = function() {
    return this._tryParseKeyframeSelector() || this._parseControlStatement(this._parseKeyframeSelector.bind(this)) || this._parseVariableDeclaration() || this._parseMixinContent();
   };
   t.prototype._parseVariable = function() {
    if (!this.peek(Ir)) {
     return null;
    }
    var e = this.create(Xe);
    this.consumeToken();
    return e;
   };
   t.prototype._parseIdent = function(e) {
    var t = this;
    if (!this.peek(r.Ident) && !this.peek(Or) && !this.peekDelim("-")) {
     return null;
    }
    var n = this.create(re);
    n.referenceTypes = e;
    var i = false;
    var a = function() {
     if (!t.acceptDelim("-")) {
      return null;
     }
     if (!t.hasWhitespace() && t.acceptDelim("-")) {
      n.isCustomProperty = true;
     }
     if (!t.hasWhitespace()) {
      return t._parseInterpolation();
     }
     return null;
    };
    while (this.accept(r.Ident) || n.addChild(this._parseInterpolation() || this.try(a))) {
     i = true;
     if (!this.hasWhitespace() && this.acceptDelim("-")) {}
     if (this.hasWhitespace()) {
      break;
     }
    }
    return i ? this.finish(n) : null;
   };
   t.prototype._parseTerm = function() {
    var t = e.prototype._parseTerm.call(this);
    if (t) {
     return t;
    }
    t = this.create(Je);
    if (t.setExpression(this._parseVariable()) || t.setExpression(this._parseSelectorCombinator()) || t.setExpression(this._tryParsePrio())) {
     return this.finish(t);
    }
    return null;
   };
   t.prototype._parseInterpolation = function() {
    if (this.peek(Or)) {
     var e = this.create($e);
     this.consumeToken();
     if (!e.addChild(this._parseExpr()) && !this._parseSelectorCombinator()) {
      if (this.accept(r.CurlyR)) {
       return this.finish(e);
      }
      return this.finish(e, ut.ExpressionExpected);
     }
     if (!this.accept(r.CurlyR)) {
      return this.finish(e, ut.RightCurlyExpected);
     }
     return this.finish(e);
    }
    return null;
   };
   t.prototype._parseOperator = function() {
    if (this.peek(Lr) || this.peek(Rr) || this.peek(Br) || this.peek(zr) || this.peekDelim(">") || this.peekDelim("<") || this.peekIdent("and") || this.peekIdent("or") || this.peekDelim("%")) {
     var t = this.createNode(X.Operator);
     this.consumeToken();
     return this.finish(t);
    }
    return e.prototype._parseOperator.call(this);
   };
   t.prototype._parseUnaryOperator = function() {
    if (this.peekIdent("not")) {
     var t = this.create(te);
     this.consumeToken();
     return this.finish(t);
    }
    return e.prototype._parseUnaryOperator.call(this);
   };
   t.prototype._parseRuleSetDeclaration = function() {
    if (this.peek(r.AtKeyword)) {
     return this._parseKeyframe() || this._parseImport() || this._parseMedia(true) || this._parseFontFace() || this._parseWarnAndDebug() || this._parseControlStatement() || this._parseFunctionDeclaration() || this._parseExtends() || this._parseMixinReference() || this._parseMixinContent() || this._parseMixinDeclaration() || this._parseRuleset(true) || this._parseSupports(true);
    }
    return this._parseVariableDeclaration() || this._tryParseRuleset(true) || e.prototype._parseRuleSetDeclaration.call(this);
   };
   t.prototype._parseDeclaration = function(e) {
    var t = this.create(me);
    if (!t.setProperty(this._parseProperty())) {
     return null;
    }
    if (!this.accept(r.Colon)) {
     return this.finish(t, ut.ColonExpected, [ r.Colon ], e);
    }
    t.colonPosition = this.prevToken.offset;
    var n = false;
    if (t.setValue(this._parseExpr())) {
     n = true;
     t.addChild(this._parsePrio());
    }
    if (this.peek(r.CurlyL)) {
     t.setNestedProperties(this._parseNestedProperties());
    } else {
     if (!n) {
      return this.finish(t, ut.PropertyValueExpected);
     }
    }
    if (this.peek(r.SemiColon)) {
     t.semicolonPosition = this.token.offset;
    }
    return this.finish(t);
   };
   t.prototype._parseNestedProperties = function() {
    var e = this.create(Ee);
    return this._parseBody(e, this._parseDeclaration.bind(this));
   };
   t.prototype._parseExtends = function() {
    if (this.peekKeyword("@extend")) {
     var e = this.create(Qe);
     this.consumeToken();
     if (!e.getSelectors().addChild(this._parseSimpleSelector())) {
      return this.finish(e, ut.SelectorExpected);
     }
     while (this.accept(r.Comma)) {
      e.getSelectors().addChild(this._parseSimpleSelector());
     }
     if (this.accept(r.Exclamation)) {
      if (!this.acceptIdent("optional")) {
       return this.finish(e, ut.UnknownKeyword);
      }
     }
     return this.finish(e);
    }
    return null;
   };
   t.prototype._parseSimpleSelectorBody = function() {
    return this._parseSelectorCombinator() || this._parseSelectorPlaceholder() || e.prototype._parseSimpleSelectorBody.call(this);
   };
   t.prototype._parseSelectorCombinator = function() {
    if (this.peekDelim("&")) {
     var e = this.createNode(X.SelectorCombinator);
     this.consumeToken();
     while (!this.hasWhitespace() && (this.acceptDelim("-") || this.accept(r.Num) || this.accept(r.Dimension) || e.addChild(this._parseIdent()) || this.acceptDelim("&"))) {}
     return this.finish(e);
    }
    return null;
   };
   t.prototype._parseSelectorPlaceholder = function() {
    if (this.peekDelim("%")) {
     var e = this.createNode(X.SelectorPlaceholder);
     this.consumeToken();
     this._parseIdent();
     return this.finish(e);
    } else if (this.peekKeyword("@at-root")) {
     var e = this.createNode(X.SelectorPlaceholder);
     this.consumeToken();
     return this.finish(e);
    }
    return null;
   };
   t.prototype._parseElementName = function() {
    var t = this.mark();
    var n = e.prototype._parseElementName.call(this);
    if (n && !this.hasWhitespace() && this.peek(r.ParenthesisL)) {
     this.restoreAtMark(t);
     return null;
    }
    return n;
   };
   t.prototype._tryParsePseudoIdentifier = function() {
    return this._parseInterpolation() || e.prototype._tryParsePseudoIdentifier.call(this);
   };
   t.prototype._parseWarnAndDebug = function() {
    if (!this.peekKeyword("@debug") && !this.peekKeyword("@warn") && !this.peekKeyword("@error")) {
     return null;
    }
    var e = this.createNode(X.Debug);
    this.consumeToken();
    e.addChild(this._parseExpr());
    return this.finish(e);
   };
   t.prototype._parseControlStatement = function(e) {
    if (e === void 0) {
     e = this._parseRuleSetDeclaration.bind(this);
    }
    if (!this.peek(r.AtKeyword)) {
     return null;
    }
    return this._parseIfStatement(e) || this._parseForStatement(e) || this._parseEachStatement(e) || this._parseWhileStatement(e);
   };
   t.prototype._parseIfStatement = function(e) {
    if (!this.peekKeyword("@if")) {
     return null;
    }
    return this._internalParseIfStatement(e);
   };
   t.prototype._internalParseIfStatement = function(e) {
    var t = this.create(be);
    this.consumeToken();
    if (!t.setExpression(this._parseExpr(true))) {
     return this.finish(t, ut.ExpressionExpected);
    }
    this._parseBody(t, e);
    if (this.acceptKeyword("@else")) {
     if (this.peekIdent("if")) {
      t.setElseClause(this._internalParseIfStatement(e));
     } else if (this.peek(r.CurlyL)) {
      var n = this.create(we);
      this._parseBody(n, e);
      t.setElseClause(n);
     }
    }
    return this.finish(t);
   };
   t.prototype._parseForStatement = function(e) {
    if (!this.peekKeyword("@for")) {
     return null;
    }
    var t = this.create(xe);
    this.consumeToken();
    if (!t.setVariable(this._parseVariable())) {
     return this.finish(t, ut.VariableNameExpected, [ r.CurlyR ]);
    }
    if (!this.acceptIdent("from")) {
     return this.finish(t, Kr.FromExpected, [ r.CurlyR ]);
    }
    if (!t.addChild(this._parseBinaryExpr())) {
     return this.finish(t, ut.ExpressionExpected, [ r.CurlyR ]);
    }
    if (!this.acceptIdent("to") && !this.acceptIdent("through")) {
     return this.finish(t, Kr.ThroughOrToExpected, [ r.CurlyR ]);
    }
    if (!t.addChild(this._parseBinaryExpr())) {
     return this.finish(t, ut.ExpressionExpected, [ r.CurlyR ]);
    }
    return this._parseBody(t, e);
   };
   t.prototype._parseEachStatement = function(e) {
    if (!this.peekKeyword("@each")) {
     return null;
    }
    var t = this.create(ke);
    this.consumeToken();
    var n = t.getVariables();
    if (!n.addChild(this._parseVariable())) {
     return this.finish(t, ut.VariableNameExpected, [ r.CurlyR ]);
    }
    while (this.accept(r.Comma)) {
     if (!n.addChild(this._parseVariable())) {
      return this.finish(t, ut.VariableNameExpected, [ r.CurlyR ]);
     }
    }
    this.finish(n);
    if (!this.acceptIdent("in")) {
     return this.finish(t, Kr.InExpected, [ r.CurlyR ]);
    }
    if (!t.addChild(this._parseExpr())) {
     return this.finish(t, ut.ExpressionExpected, [ r.CurlyR ]);
    }
    return this._parseBody(t, e);
   };
   t.prototype._parseWhileStatement = function(e) {
    if (!this.peekKeyword("@while")) {
     return null;
    }
    var t = this.create(Se);
    this.consumeToken();
    if (!t.addChild(this._parseBinaryExpr())) {
     return this.finish(t, ut.ExpressionExpected, [ r.CurlyR ]);
    }
    return this._parseBody(t, e);
   };
   t.prototype._parseFunctionBodyDeclaration = function() {
    return this._parseVariableDeclaration() || this._parseReturnStatement() || this._parseWarnAndDebug() || this._parseControlStatement(this._parseFunctionBodyDeclaration.bind(this));
   };
   t.prototype._parseFunctionDeclaration = function() {
    if (!this.peekKeyword("@function")) {
     return null;
    }
    var e = this.create(Ce);
    this.consumeToken();
    if (!e.setIdentifier(this._parseIdent([ Q.Function ]))) {
     return this.finish(e, ut.IdentifierExpected, [ r.CurlyR ]);
    }
    if (!this.accept(r.ParenthesisL)) {
     return this.finish(e, ut.LeftParenthesisExpected, [ r.CurlyR ]);
    }
    if (e.getParameters().addChild(this._parseParameterDeclaration())) {
     while (this.accept(r.Comma)) {
      if (!e.getParameters().addChild(this._parseParameterDeclaration())) {
       return this.finish(e, ut.VariableNameExpected);
      }
     }
    }
    if (!this.accept(r.ParenthesisR)) {
     return this.finish(e, ut.RightParenthesisExpected, [ r.CurlyR ]);
    }
    return this._parseBody(e, this._parseFunctionBodyDeclaration.bind(this));
   };
   t.prototype._parseReturnStatement = function() {
    if (!this.peekKeyword("@return")) {
     return null;
    }
    var e = this.createNode(X.ReturnStatement);
    this.consumeToken();
    if (!e.addChild(this._parseExpr())) {
     return this.finish(e, ut.ExpressionExpected);
    }
    return this.finish(e);
   };
   t.prototype._parseMixinDeclaration = function() {
    if (!this.peekKeyword("@mixin")) {
     return null;
    }
    var e = this.create(Ze);
    this.consumeToken();
    if (!e.setIdentifier(this._parseIdent([ Q.Mixin ]))) {
     return this.finish(e, ut.IdentifierExpected, [ r.CurlyR ]);
    }
    if (this.accept(r.ParenthesisL)) {
     if (e.getParameters().addChild(this._parseParameterDeclaration())) {
      while (this.accept(r.Comma)) {
       if (!e.getParameters().addChild(this._parseParameterDeclaration())) {
        return this.finish(e, ut.VariableNameExpected);
       }
      }
     }
     if (!this.accept(r.ParenthesisR)) {
      return this.finish(e, ut.RightParenthesisExpected, [ r.CurlyR ]);
     }
    }
    return this._parseBody(e, this._parseRuleSetDeclaration.bind(this));
   };
   t.prototype._parseParameterDeclaration = function() {
    var e = this.create(ve);
    if (!e.setIdentifier(this._parseVariable())) {
     return null;
    }
    if (this.accept(jr)) {}
    if (this.accept(r.Colon)) {
     if (!e.setDefaultValue(this._parseExpr(true))) {
      return this.finish(e, ut.VariableValueExpected, [], [ r.Comma, r.ParenthesisR ]);
     }
    }
    return this.finish(e);
   };
   t.prototype._parseMixinContent = function() {
    if (!this.peekKeyword("@content")) {
     return null;
    }
    var e = this.createNode(X.MixinContent);
    this.consumeToken();
    return this.finish(e);
   };
   t.prototype._parseMixinReference = function() {
    if (!this.peekKeyword("@include")) {
     return null;
    }
    var e = this.create(Ye);
    this.consumeToken();
    if (!e.setIdentifier(this._parseIdent([ Q.Mixin ]))) {
     return this.finish(e, ut.IdentifierExpected, [ r.CurlyR ]);
    }
    if (this.accept(r.ParenthesisL)) {
     if (e.getArguments().addChild(this._parseFunctionArgument())) {
      while (this.accept(r.Comma)) {
       if (!e.getArguments().addChild(this._parseFunctionArgument())) {
        return this.finish(e, ut.ExpressionExpected);
       }
      }
     }
     if (!this.accept(r.ParenthesisR)) {
      return this.finish(e, ut.RightParenthesisExpected);
     }
    }
    if (this.peek(r.CurlyL)) {
     var t = this.create(oe);
     this._parseBody(t, this._parseMixinReferenceBodyStatement.bind(this));
     e.setContent(t);
    }
    return this.finish(e);
   };
   t.prototype._parseMixinReferenceBodyStatement = function() {
    return this._tryParseKeyframeSelector() || this._parseRuleSetDeclaration();
   };
   t.prototype._parseFunctionArgument = function() {
    var e = this.create(ye);
    var t = this.mark();
    var n = this._parseVariable();
    if (n) {
     if (!this.accept(r.Colon)) {
      if (this.accept(jr)) {
       e.setValue(n);
       return this.finish(e);
      } else {
       this.restoreAtMark(t);
      }
     } else {
      e.setIdentifier(n);
     }
    }
    if (e.setValue(this._parseExpr(true))) {
     this.accept(jr);
     e.addChild(this._parsePrio());
     return this.finish(e);
    }
    return null;
   };
   t.prototype._parseURLArgument = function() {
    var t = this.mark();
    var n = e.prototype._parseURLArgument.call(this);
    if (!n || !this.peek(r.ParenthesisR)) {
     this.restoreAtMark(t);
     var i = this.create(te);
     i.addChild(this._parseBinaryExpr());
     return this.finish(i);
    }
    return n;
   };
   t.prototype._parseOperation = function() {
    if (!this.peek(r.ParenthesisL)) {
     return null;
    }
    var e = this.create(te);
    this.consumeToken();
    while (e.addChild(this._parseListElement())) {
     this.accept(r.Comma);
    }
    if (!this.accept(r.ParenthesisR)) {
     return this.finish(e, ut.RightParenthesisExpected);
    }
    return this.finish(e);
   };
   t.prototype._parseListElement = function() {
    var e = this.create(et);
    var t = this._parseBinaryExpr();
    if (!t) {
     return null;
    }
    if (this.accept(r.Colon)) {
     e.setKey(t);
     if (!e.setValue(this._parseBinaryExpr())) {
      return this.finish(e, ut.ExpressionExpected);
     }
    } else {
     e.setValue(t);
    }
    return this.finish(e);
   };
   return t;
  }(gn);
  var Hr = undefined && undefined.__extends || function() {
   var e = Object.setPrototypeOf || {
    __proto__: []
   } instanceof Array && function(e, t) {
    e.__proto__ = t;
   } || function(e, t) {
    for (var n in t) if (t.hasOwnProperty(n)) e[n] = t[n];
   };
   return function(t, n) {
    e(t, n);
    function r() {
     this.constructor = t;
    }
    t.prototype = n === null ? Object.create(n) : (r.prototype = n.prototype, new r());
   };
  }();
  var Gr = ot["loadMessageBundle"]();
  var $r = function(e) {
   Hr(t, e);
   function t() {
    return e.call(this, "$") || this;
   }
   t.prototype.createReplaceFunction = function() {
    var e = 1;
    return function(n, r) {
     return "\\" + r + ": ${" + e++ + ":" + (t.variableDefaults[r] || "") + "}";
    };
   };
   t.prototype.createFunctionProposals = function(e, t, n, r) {
    for (var i = 0, a = e; i < a.length; i++) {
     var o = a[i];
     var s = o.func.replace(/\[?(\$\w+)\]?/g, this.createReplaceFunction());
     var c = o.func.substr(0, o.func.indexOf("("));
     var u = {
      label: c,
      detail: o.func,
      documentation: o.desc,
      textEdit: En["TextEdit"].replace(this.getCompletionRange(t), s),
      insertTextFormat: En["InsertTextFormat"].Snippet,
      kind: En["CompletionItemKind"].Function
     };
     if (n) {
      u.sortText = "z";
     }
     r.items.push(u);
    }
    return r;
   };
   t.prototype.getCompletionsForSelector = function(n, r, i) {
    this.createFunctionProposals(t.selectorFuncs, void 0, true, i);
    return e.prototype.getCompletionsForSelector.call(this, n, r, i);
   };
   t.prototype.getTermProposals = function(n, r, i) {
    var a = t.builtInFuncs;
    if (n) {
     a = a.filter(function(e) {
      return !e.type || n.restrictions.indexOf(e.type) !== -1;
     });
    }
    this.createFunctionProposals(a, r, true, i);
    return e.prototype.getTermProposals.call(this, n, r, i);
   };
   t.prototype.getColorProposals = function(n, r, i) {
    this.createFunctionProposals(t.colorProposals, r, false, i);
    return e.prototype.getColorProposals.call(this, n, r, i);
   };
   t.prototype.getCompletionsForDeclarationProperty = function(t, n) {
    this.getCompletionForAtDirectives(n);
    this.getCompletionsForSelector(null, true, n);
    return e.prototype.getCompletionsForDeclarationProperty.call(this, t, n);
   };
   t.prototype.getCompletionsForExtendsReference = function(e, t, n) {
    var r = this.getSymbolContext().findSymbolsAtOffset(this.offset, Q.Rule);
    for (var i = 0, a = r; i < a.length; i++) {
     var o = a[i];
     var s = {
      label: o.name,
      textEdit: En["TextEdit"].replace(this.getCompletionRange(t), o.name),
      kind: En["CompletionItemKind"].Function
     };
     n.items.push(s);
    }
    return n;
   };
   t.prototype.getCompletionForAtDirectives = function(e) {
    (n = e.items).push.apply(n, t.scssAtDirectives);
    return e;
    var n;
   };
   t.prototype.getCompletionForTopLevel = function(t) {
    this.getCompletionForAtDirectives(t);
    e.prototype.getCompletionForTopLevel.call(this, t);
    return t;
   };
   t.variableDefaults = {
    $red: "1",
    $green: "2",
    $blue: "3",
    $alpha: "1.0",
    $color: "#000000",
    $weight: "0.5",
    $hue: "0",
    $saturation: "0%",
    $lightness: "0%",
    $degrees: "0",
    $amount: "0",
    $string: '""',
    $substring: '"s"',
    $number: "0",
    $limit: "1"
   };
   t.colorProposals = [ {
    func: "red($color)",
    desc: Gr("scss.builtin.red", "Gets the red component of a color.")
   }, {
    func: "green($color)",
    desc: Gr("scss.builtin.green", "Gets the green component of a color.")
   }, {
    func: "blue($color)",
    desc: Gr("scss.builtin.blue", "Gets the blue component of a color.")
   }, {
    func: "mix($color, $color, [$weight])",
    desc: Gr("scss.builtin.mix", "Mixes two colors together.")
   }, {
    func: "hue($color)",
    desc: Gr("scss.builtin.hue", "Gets the hue component of a color.")
   }, {
    func: "saturation($color)",
    desc: Gr("scss.builtin.saturation", "Gets the saturation component of a color.")
   }, {
    func: "lightness($color)",
    desc: Gr("scss.builtin.lightness", "Gets the lightness component of a color.")
   }, {
    func: "adjust-hue($color, $degrees)",
    desc: Gr("scss.builtin.adjust-hue", "Changes the hue of a color.")
   }, {
    func: "lighten($color, $amount)",
    desc: Gr("scss.builtin.lighten", "Makes a color lighter.")
   }, {
    func: "darken($color, $amount)",
    desc: Gr("scss.builtin.darken", "Makes a color darker.")
   }, {
    func: "saturate($color, $amount)",
    desc: Gr("scss.builtin.saturate", "Makes a color more saturated.")
   }, {
    func: "desaturate($color, $amount)",
    desc: Gr("scss.builtin.desaturate", "Makes a color less saturated.")
   }, {
    func: "grayscale($color)",
    desc: Gr("scss.builtin.grayscale", "Converts a color to grayscale.")
   }, {
    func: "complement($color)",
    desc: Gr("scss.builtin.complement", "Returns the complement of a color.")
   }, {
    func: "invert($color)",
    desc: Gr("scss.builtin.invert", "Returns the inverse of a color.")
   }, {
    func: "alpha($color)",
    desc: Gr("scss.builtin.alpha", "Gets the opacity component of a color.")
   }, {
    func: "opacity($color)",
    desc: "Gets the alpha component (opacity) of a color."
   }, {
    func: "rgba($color, $alpha)",
    desc: Gr("scss.builtin.rgba", "Changes the alpha component for a color.")
   }, {
    func: "opacify($color, $amount)",
    desc: Gr("scss.builtin.opacify", "Makes a color more opaque.")
   }, {
    func: "fade-in($color, $amount)",
    desc: Gr("scss.builtin.fade-in", "Makes a color more opaque.")
   }, {
    func: "transparentize($color, $amount)",
    desc: Gr("scss.builtin.transparentize", "Makes a color more transparent.")
   }, {
    func: "fade-out($color, $amount)",
    desc: Gr("scss.builtin.fade-out", "Makes a color more transparent.")
   }, {
    func: "adjust-color($color, [$red], [$green], [$blue], [$hue], [$saturation], [$lightness], [$alpha])",
    desc: Gr("scss.builtin.adjust-color", "Increases or decreases one or more components of a color.")
   }, {
    func: "scale-color($color, [$red], [$green], [$blue], [$saturation], [$lightness], [$alpha])",
    desc: Gr("scss.builtin.scale-color", "Fluidly scales one or more properties of a color.")
   }, {
    func: "change-color($color, [$red], [$green], [$blue], [$hue], [$saturation], [$lightness], [$alpha])",
    desc: Gr("scss.builtin.change-color", "Changes one or more properties of a color.")
   }, {
    func: "ie-hex-str($color)",
    desc: Gr("scss.builtin.ie-hex-str", "Converts a color into the format understood by IE filters.")
   } ];
   t.selectorFuncs = [ {
    func: "selector-nest($selectors…)",
    desc: Gr("scss.builtin.selector-nest", "Nests selector beneath one another like they would be nested in the stylesheet.")
   }, {
    func: "selector-append($selectors…)",
    desc: Gr("scss.builtin.selector-append", "Appends selectors to one another without spaces in between.")
   }, {
    func: "selector-extend($selector, $extendee, $extender)",
    desc: Gr("scss.builtin.selector-extend", "Extends $extendee with $extender within $selector.")
   }, {
    func: "selector-replace($selector, $original, $replacement)",
    desc: Gr("scss.builtin.selector-replace", "Replaces $original with $replacement within $selector.")
   }, {
    func: "selector-unify($selector1, $selector2)",
    desc: Gr("scss.builtin.selector-unify", "Unifies two selectors to produce a selector that matches elements matched by both.")
   }, {
    func: "is-superselector($super, $sub)",
    desc: Gr("scss.builtin.is-superselector", "Returns whether $super matches all the elements $sub does, and possibly more.")
   }, {
    func: "simple-selectors($selector)",
    desc: Gr("scss.builtin.simple-selectors", "Returns the simple selectors that comprise a compound selector.")
   }, {
    func: "selector-parse($selector)",
    desc: Gr("scss.builtin.selector-parse", "Parses a selector into the format returned by &.")
   } ];
   t.builtInFuncs = [ {
    func: "unquote($string)",
    desc: Gr("scss.builtin.unquote", "Removes quotes from a string.")
   }, {
    func: "quote($string)",
    desc: Gr("scss.builtin.quote", "Adds quotes to a string.")
   }, {
    func: "str-length($string)",
    desc: Gr("scss.builtin.str-length", "Returns the number of characters in a string.")
   }, {
    func: "str-insert($string, $insert, $index)",
    desc: Gr("scss.builtin.str-insert", "Inserts $insert into $string at $index.")
   }, {
    func: "str-index($string, $substring)",
    desc: Gr("scss.builtin.str-index", "Returns the index of the first occurance of $substring in $string.")
   }, {
    func: "str-slice($string, $start-at, [$end-at])",
    desc: Gr("scss.builtin.str-slice", "Extracts a substring from $string.")
   }, {
    func: "to-upper-case($string)",
    desc: Gr("scss.builtin.to-upper-case", "Converts a string to upper case.")
   }, {
    func: "to-lower-case($string)",
    desc: Gr("scss.builtin.to-lower-case", "Converts a string to lower case.")
   }, {
    func: "percentage($number)",
    desc: Gr("scss.builtin.percentage", "Converts a unitless number to a percentage."),
    type: "percentage"
   }, {
    func: "round($number)",
    desc: Gr("scss.builtin.round", "Rounds a number to the nearest whole number.")
   }, {
    func: "ceil($number)",
    desc: Gr("scss.builtin.ceil", "Rounds a number up to the next whole number.")
   }, {
    func: "floor($number)",
    desc: Gr("scss.builtin.floor", "Rounds a number down to the previous whole number.")
   }, {
    func: "abs($number)",
    desc: Gr("scss.builtin.abs", "Returns the absolute value of a number.")
   }, {
    func: "min($numbers)",
    desc: Gr("scss.builtin.min", "Finds the minimum of several numbers.")
   }, {
    func: "max($numbers)",
    desc: Gr("scss.builtin.max", "Finds the maximum of several numbers.")
   }, {
    func: "random([$limit])",
    desc: Gr("scss.builtin.random", "Returns a random number.")
   }, {
    func: "length($list)",
    desc: Gr("scss.builtin.length", "Returns the length of a list.")
   }, {
    func: "nth($list, $n)",
    desc: Gr("scss.builtin.nth", "Returns a specific item in a list.")
   }, {
    func: "set-nth($list, $n, $value)",
    desc: Gr("scss.builtin.set-nth", "Replaces the nth item in a list.")
   }, {
    func: "join($list1, $list2, [$separator])",
    desc: Gr("scss.builtin.join", "Joins together two lists into one.")
   }, {
    func: "append($list1, $val, [$separator])",
    desc: Gr("scss.builtin.append", "Appends a single value onto the end of a list.")
   }, {
    func: "zip($lists)",
    desc: Gr("scss.builtin.zip", "Combines several lists into a single multidimensional list.")
   }, {
    func: "index($list, $value)",
    desc: Gr("scss.builtin.index", "Returns the position of a value within a list.")
   }, {
    func: "list-separator(#list)",
    desc: Gr("scss.builtin.list-separator", "Returns the separator of a list.")
   }, {
    func: "map-get($map, $key)",
    desc: Gr("scss.builtin.map-get", "Returns the value in a map associated with a given key.")
   }, {
    func: "map-merge($map1, $map2)",
    desc: Gr("scss.builtin.map-merge", "Merges two maps together into a new map.")
   }, {
    func: "map-remove($map, $keys)",
    desc: Gr("scss.builtin.map-remove", "Returns a new map with keys removed.")
   }, {
    func: "map-keys($map)",
    desc: Gr("scss.builtin.map-keys", "Returns a list of all keys in a map.")
   }, {
    func: "map-values($map)",
    desc: Gr("scss.builtin.map-values", "Returns a list of all values in a map.")
   }, {
    func: "map-has-key($map, $key)",
    desc: Gr("scss.builtin.map-has-key", "Returns whether a map has a value associated with a given key.")
   }, {
    func: "keywords($args)",
    desc: Gr("scss.builtin.keywords", "Returns the keywords passed to a function that takes variable arguments.")
   }, {
    func: "feature-exists($feature)",
    desc: Gr("scss.builtin.feature-exists", "Returns whether a feature exists in the current Sass runtime.")
   }, {
    func: "variable-exists($name)",
    desc: Gr("scss.builtin.variable-exists", "Returns whether a variable with the given name exists in the current scope.")
   }, {
    func: "global-variable-exists($name)",
    desc: Gr("scss.builtin.global-variable-exists", "Returns whether a variable with the given name exists in the global scope.")
   }, {
    func: "function-exists($name)",
    desc: Gr("scss.builtin.function-exists", "Returns whether a function with the given name exists.")
   }, {
    func: "mixin-exists($name)",
    desc: Gr("scss.builtin.mixin-exists", "Returns whether a mixin with the given name exists.")
   }, {
    func: "inspect($value)",
    desc: Gr("scss.builtin.inspect", "Returns the string representation of a value as it would be represented in Sass.")
   }, {
    func: "type-of($value)",
    desc: Gr("scss.builtin.type-of", "Returns the type of a value.")
   }, {
    func: "unit($number)",
    desc: Gr("scss.builtin.unit", "Returns the unit(s) associated with a number.")
   }, {
    func: "unitless($number)",
    desc: Gr("scss.builtin.unitless", "Returns whether a number has units.")
   }, {
    func: "comparable($number1, $number2)",
    desc: Gr("scss.builtin.comparable", "Returns whether two numbers can be added, subtracted, or compared.")
   }, {
    func: "call($name, $args…)",
    desc: Gr("scss.builtin.call", "Dynamically calls a Sass function.")
   } ];
   t.scssAtDirectives = [ {
    label: "@extend",
    documentation: Gr("scss.builtin.@extend", "Inherits the styles of another selector."),
    kind: En["CompletionItemKind"].Keyword
   }, {
    label: "@at-root",
    documentation: Gr("scss.builtin.@at-root", "Causes one or more rules to be emitted at the root of the document."),
    kind: En["CompletionItemKind"].Keyword
   }, {
    label: "@debug",
    documentation: Gr("scss.builtin.@debug", "Prints the value of an expression to the standard error output stream. Useful for debugging complicated Sass files."),
    kind: En["CompletionItemKind"].Keyword
   }, {
    label: "@warn",
    documentation: Gr("scss.builtin.@warn", "Prints the value of an expression to the standard error output stream. Useful for libraries that need to warn users of deprecations or recovering from minor mixin usage mistakes. Warnings can be turned off with the `--quiet` command-line option or the `:quiet` Sass option."),
    kind: En["CompletionItemKind"].Keyword
   }, {
    label: "@error",
    documentation: Gr("scss.builtin.@error", "Throws the value of an expression as a fatal error with stack trace. Useful for validating arguments to mixins and functions."),
    kind: En["CompletionItemKind"].Keyword
   }, {
    label: "@if",
    documentation: Gr("scss.builtin.@if", "Includes the body if the expression does not evaluate to `false` or `null`."),
    insertText: "@if ${1:expr} {\n\t$0\n}",
    insertTextFormat: En["InsertTextFormat"].Snippet,
    kind: En["CompletionItemKind"].Keyword
   }, {
    label: "@for",
    documentation: Gr("scss.builtin.@for", "For loop that repeatedly outputs a set of styles for each `$var` in the `from/through` or `from/to` clause."),
    insertText: "@for \\$${1:var} from ${2:start} ${3|to,through|} ${4:end} {\n\t$0\n}",
    insertTextFormat: En["InsertTextFormat"].Snippet,
    kind: En["CompletionItemKind"].Keyword
   }, {
    label: "@each",
    documentation: Gr("scss.builtin.@each", "Each loop that sets `$var` to each item in the list or map, then outputs the styles it contains using that value of `$var`."),
    insertText: "@each \\$${1:var} in ${2:list} {\n\t$0\n}",
    insertTextFormat: En["InsertTextFormat"].Snippet,
    kind: En["CompletionItemKind"].Keyword
   }, {
    label: "@while",
    documentation: Gr("scss.builtin.@while", "While loop that takes an expression and repeatedly outputs the nested styles until the statement evaluates to `false`."),
    insertText: "@while ${1:condition} {\n\t$0\n}",
    insertTextFormat: En["InsertTextFormat"].Snippet,
    kind: En["CompletionItemKind"].Keyword
   }, {
    label: "@mixin",
    documentation: Gr("scss.builtin.@mixin", "Defines styles that can be re-used throughout the stylesheet with `@include`."),
    insertText: "@mixin ${1:name} {\n\t$0\n}",
    insertTextFormat: En["InsertTextFormat"].Snippet,
    kind: En["CompletionItemKind"].Keyword
   }, {
    label: "@include",
    documentation: Gr("scss.builtin.@include", "Includes the styles defined by another mixin into the current rule."),
    kind: En["CompletionItemKind"].Keyword
   } ];
   return t;
  }(Fn);
  var Xr = undefined && undefined.__extends || function() {
   var e = Object.setPrototypeOf || {
    __proto__: []
   } instanceof Array && function(e, t) {
    e.__proto__ = t;
   } || function(e, t) {
    for (var n in t) if (t.hasOwnProperty(n)) e[n] = t[n];
   };
   return function(t, n) {
    e(t, n);
    function r() {
     this.constructor = t;
    }
    t.prototype = n === null ? Object.create(n) : (r.prototype = n.prototype, new r());
   };
  }();
  var Qr = "/".charCodeAt(0);
  var Yr = "\n".charCodeAt(0);
  var Zr = "\r".charCodeAt(0);
  var ei = "\f".charCodeAt(0);
  var ti = "`".charCodeAt(0);
  var ni = ".".charCodeAt(0);
  var ri = r.CustomToken;
  var ii = ri++;
  var ai = function(e) {
   Xr(t, e);
   function t() {
    return e !== null && e.apply(this, arguments) || this;
   }
   t.prototype.scanNext = function(t) {
    var n = this.escapedJavaScript();
    if (n !== null) {
     return this.finishToken(t, n);
    }
    if (this.stream.advanceIfChars([ ni, ni, ni ])) {
     return this.finishToken(t, ii);
    }
    return e.prototype.scanNext.call(this, t);
   };
   t.prototype.comment = function() {
    if (e.prototype.comment.call(this)) {
     return true;
    }
    if (!this.inURL && this.stream.advanceIfChars([ Qr, Qr ])) {
     this.stream.advanceWhileChar(function(e) {
      switch (e) {
      case Yr:
      case Zr:
      case ei:
       return false;

      default:
       return true;
      }
     });
     return true;
    } else {
     return false;
    }
   };
   t.prototype.escapedJavaScript = function() {
    var e = this.stream.peekChar();
    if (e === ti) {
     this.stream.advance(1);
     this.stream.advanceWhileChar(function(e) {
      return e !== ti;
     });
     return this.stream.advanceIfChar(ti) ? r.EscapedJavaScript : r.BadEscapedJavaScript;
    }
    return null;
   };
   return t;
  }(G);
  var oi = undefined && undefined.__extends || function() {
   var e = Object.setPrototypeOf || {
    __proto__: []
   } instanceof Array && function(e, t) {
    e.__proto__ = t;
   } || function(e, t) {
    for (var n in t) if (t.hasOwnProperty(n)) e[n] = t[n];
   };
   return function(t, n) {
    e(t, n);
    function r() {
     this.constructor = t;
    }
    t.prototype = n === null ? Object.create(n) : (r.prototype = n.prototype, new r());
   };
  }();
  var si = function(e) {
   oi(t, e);
   function t() {
    return e.call(this, new ai()) || this;
   }
   t.prototype._parseStylesheetStatement = function() {
    return this._tryParseMixinDeclaration() || this._tryParseMixinReference(true) || e.prototype._parseStylesheetStatement.call(this) || this._parseVariableDeclaration() || this._parsePlugin();
   };
   t.prototype._parseImport = function() {
    if (!this.peekKeyword("@import") && !this.peekKeyword("@import-once")) {
     return null;
    }
    var e = this.create(Fe);
    this.consumeToken();
    if (this.accept(r.ParenthesisL)) {
     if (!this.accept(r.Ident)) {
      return this.finish(e, ut.IdentifierExpected, [ r.SemiColon ]);
     }
     do {
      if (!this.accept(r.Comma)) {
       break;
      }
     } while (this.accept(r.Ident));
     if (!this.accept(r.ParenthesisR)) {
      return this.finish(e, ut.RightParenthesisExpected, [ r.SemiColon ]);
     }
    }
    if (!e.addChild(this._parseURILiteral()) && !e.addChild(this._parseStringLiteral())) {
     return this.finish(e, ut.URIOrStringExpected, [ r.SemiColon ]);
    }
    if (!this.peek(r.SemiColon) && !this.peek(r.EOF)) {
     e.setMedialist(this._parseMediaQueryList());
    }
    return this.finish(e);
   };
   t.prototype._parsePlugin = function() {
    if (!this.peekKeyword("@plugin")) {
     return null;
    }
    var e = this.createNode(X.Plugin);
    this.consumeToken();
    if (!e.addChild(this._parseStringLiteral())) {
     return this.finish(e, ut.StringLiteralExpected);
    }
    if (!this.accept(r.SemiColon)) {
     return this.finish(e, ut.SemiColonExpected);
    }
    return this.finish(e);
   };
   t.prototype._parseMediaQuery = function(t) {
    var n = e.prototype._parseMediaQuery.call(this, t);
    if (!n) {
     var r = this.create(Re);
     if (r.addChild(this._parseVariable())) {
      return this.finish(r);
     }
     return null;
    }
    return n;
   };
   t.prototype._parseMediaDeclaration = function(e) {
    if (e === void 0) {
     e = false;
    }
    return this._tryParseRuleset(e) || this._tryToParseDeclaration() || this._tryParseMixinDeclaration() || this._tryParseMixinReference() || this._parseDetachedRuleSetMixin() || this._parseStylesheetStatement();
   };
   t.prototype._parseMediaFeatureName = function() {
    return this._parseIdent() || this._parseVariable();
   };
   t.prototype._parseVariableDeclaration = function(e) {
    if (e === void 0) {
     e = [];
    }
    var t = this.create(Ge);
    var n = this.mark();
    if (!t.setVariable(this._parseVariable())) {
     return null;
    }
    if (this.accept(r.Colon)) {
     t.colonPosition = this.prevToken.offset;
     if (!t.setValue(this._parseDetachedRuleSet() || this._parseExpr())) {
      return this.finish(t, ut.VariableValueExpected, [], e);
     }
     t.addChild(this._parsePrio());
    } else {
     this.restoreAtMark(n);
     return null;
    }
    if (this.peek(r.SemiColon)) {
     t.semicolonPosition = this.token.offset;
    }
    return this.finish(t);
   };
   t.prototype._parseDetachedRuleSet = function() {
    if (!this.peek(r.CurlyL)) {
     return null;
    }
    var e = this.create(oe);
    this._parseBody(e, this._parseDetachedRuleSetBody.bind(this));
    return this.finish(e);
   };
   t.prototype._parseDetachedRuleSetBody = function() {
    return this._tryParseKeyframeSelector() || this._tryParseRuleset(true) || e.prototype._parseRuleSetDeclaration.call(this);
   };
   t.prototype._parseVariable = function() {
    if (!this.peekDelim("@") && !this.peek(r.AtKeyword)) {
     return null;
    }
    var e = this.create(Xe);
    var t = this.mark();
    while (this.acceptDelim("@")) {
     if (this.hasWhitespace()) {
      this.restoreAtMark(t);
      return null;
     }
    }
    if (!this.accept(r.AtKeyword)) {
     this.restoreAtMark(t);
     return null;
    }
    return e;
   };
   t.prototype._parseTerm = function() {
    var t = e.prototype._parseTerm.call(this);
    if (t) {
     return t;
    }
    t = this.create(Je);
    if (t.setExpression(this._parseVariable()) || t.setExpression(this._parseEscaped())) {
     return this.finish(t);
    }
    return null;
   };
   t.prototype._parseEscaped = function() {
    if (this.peek(r.EscapedJavaScript) || this.peek(r.BadEscapedJavaScript)) {
     var e = this.createNode(X.EscapedValue);
     this.consumeToken();
     return this.finish(e);
    }
    if (this.peekDelim("~")) {
     var e = this.createNode(X.EscapedValue);
     this.consumeToken();
     return this.finish(e, this.accept(r.String) ? null : ut.TermExpected);
    }
    return null;
   };
   t.prototype._parseOperator = function() {
    var t = this._parseGuardOperator();
    if (t) {
     return t;
    } else {
     return e.prototype._parseOperator.call(this);
    }
   };
   t.prototype._parseGuardOperator = function() {
    if (this.peekDelim(">")) {
     var e = this.createNode(X.Operator);
     this.consumeToken();
     this.acceptDelim("=");
     return e;
    } else if (this.peekDelim("=")) {
     var e = this.createNode(X.Operator);
     this.consumeToken();
     this.acceptDelim("<");
     return e;
    } else if (this.peekDelim("<")) {
     var e = this.createNode(X.Operator);
     this.consumeToken();
     this.acceptDelim("=");
     return e;
    }
    return null;
   };
   t.prototype._parseRuleSetDeclaration = function() {
    if (this.peek(r.AtKeyword)) {
     return this._parseKeyframe() || this._parseMedia(true) || this._parseImport() || this._parseSupports(true) || this._parseDetachedRuleSetMixin() || this._parseVariableDeclaration();
    }
    return this._tryParseMixinDeclaration() || this._tryParseRuleset(true) || this._tryParseMixinReference() || this._parseExtend() || e.prototype._parseRuleSetDeclaration.call(this);
   };
   t.prototype._parseKeyframeIdent = function() {
    return this._parseIdent([ Q.Keyframe ]) || this._parseVariable();
   };
   t.prototype._parseKeyframeSelector = function() {
    return this._parseDetachedRuleSetMixin() || e.prototype._parseKeyframeSelector.call(this);
   };
   t.prototype._parseSimpleSelectorBody = function() {
    return this._parseSelectorCombinator() || e.prototype._parseSimpleSelectorBody.call(this);
   };
   t.prototype._parseSelector = function(e) {
    var t = this.create(ce);
    var n = false;
    if (e) {
     n = t.addChild(this._parseCombinator());
    }
    while (t.addChild(this._parseSimpleSelector())) {
     n = true;
     var i = this.mark();
     if (t.addChild(this._parseGuard()) && this.peek(r.CurlyL)) {
      break;
     }
     this.restoreAtMark(i);
     t.addChild(this._parseCombinator());
    }
    return n ? this.finish(t) : null;
   };
   t.prototype._parseSelectorCombinator = function() {
    if (this.peekDelim("&")) {
     var e = this.createNode(X.SelectorCombinator);
     this.consumeToken();
     while (!this.hasWhitespace() && (this.acceptDelim("-") || this.accept(r.Num) || this.accept(r.Dimension) || e.addChild(this._parseIdent()) || this.acceptDelim("&"))) {}
     return this.finish(e);
    }
    return null;
   };
   t.prototype._parseSelectorIdent = function() {
    if (!this.peekInterpolatedIdent()) {
     return null;
    }
    var e = this.createNode(X.SelectorInterpolation);
    var t = this._acceptInterpolatedIdent(e);
    return t ? this.finish(e) : null;
   };
   t.prototype._parsePropertyIdentifier = function() {
    if (!this.peekInterpolatedIdent()) {
     return null;
    }
    var e = this.create(re);
    e.isCustomProperty = this.peekRegExp(r.Ident, /^--/);
    var t = this._acceptInterpolatedIdent(e);
    if (t && !this.hasWhitespace()) {
     this.acceptDelim("+");
     if (!this.hasWhitespace()) {
      this.acceptIdent("_");
     }
    }
    return t ? this.finish(e) : null;
   };
   t.prototype.peekInterpolatedIdent = function() {
    return this.peek(r.Ident) || this.peekDelim("@") || this.peekDelim("-");
   };
   t.prototype._acceptInterpolatedIdent = function(e) {
    var t = this;
    var n = false;
    var i = function() {
     if (!t.acceptDelim("-")) {
      return null;
     }
     if (!t.hasWhitespace() && t.acceptDelim("-")) {}
     if (!t.hasWhitespace()) {
      return t._parseInterpolation();
     }
     return null;
    };
    while (this.accept(r.Ident) || e.addChild(this._parseInterpolation() || this.try(i))) {
     n = true;
     if (!this.hasWhitespace() && this.acceptDelim("-")) {}
     if (this.hasWhitespace()) {
      break;
     }
    }
    return n;
   };
   t.prototype._parseInterpolation = function() {
    var e = this.mark();
    if (this.peekDelim("@")) {
     var t = this.createNode(X.Interpolation);
     this.consumeToken();
     if (this.hasWhitespace() || !this.accept(r.CurlyL)) {
      this.restoreAtMark(e);
      return null;
     }
     if (!t.addChild(this._parseIdent())) {
      return this.finish(t, ut.IdentifierExpected);
     }
     if (!this.accept(r.CurlyR)) {
      return this.finish(t, ut.RightCurlyExpected);
     }
     return this.finish(t);
    }
    return null;
   };
   t.prototype._tryParseMixinDeclaration = function() {
    var e = this.mark();
    var t = this.create(Ze);
    if (!t.setIdentifier(this._parseMixinDeclarationIdentifier()) || !this.accept(r.ParenthesisL)) {
     this.restoreAtMark(e);
     return null;
    }
    if (t.getParameters().addChild(this._parseMixinParameter())) {
     while (this.accept(r.Comma) || this.accept(r.SemiColon)) {
      if (this.peek(r.ParenthesisR)) {
       break;
      }
      if (!t.getParameters().addChild(this._parseMixinParameter())) {
       this.markError(t, ut.IdentifierExpected, [], [ r.ParenthesisR ]);
      }
     }
    }
    if (!this.accept(r.ParenthesisR)) {
     this.restoreAtMark(e);
     return null;
    }
    t.setGuard(this._parseGuard());
    if (!this.peek(r.CurlyL)) {
     this.restoreAtMark(e);
     return null;
    }
    return this._parseBody(t, this._parseMixInBodyDeclaration.bind(this));
   };
   t.prototype._parseMixInBodyDeclaration = function() {
    return this._parseFontFace() || this._parseRuleSetDeclaration();
   };
   t.prototype._parseMixinDeclarationIdentifier = function() {
    var e;
    if (this.peekDelim("#") || this.peekDelim(".")) {
     e = this.create(re);
     this.consumeToken();
     if (this.hasWhitespace() || !e.addChild(this._parseIdent())) {
      return null;
     }
    } else if (this.peek(r.Hash)) {
     e = this.create(re);
     this.consumeToken();
    } else {
     return null;
    }
    e.referenceTypes = [ Q.Mixin ];
    return this.finish(e);
   };
   t.prototype._parsePseudo = function() {
    if (!this.peek(r.Colon)) {
     return null;
    }
    var t = this.mark();
    var n = this.create(Qe);
    this.consumeToken();
    if (this.acceptIdent("extend")) {
     return this._completeExtends(n);
    }
    this.restoreAtMark(t);
    return e.prototype._parsePseudo.call(this);
   };
   t.prototype._parseExtend = function() {
    if (!this.peekDelim("&")) {
     return null;
    }
    var e = this.mark();
    var t = this.create(Qe);
    this.consumeToken();
    if (this.hasWhitespace() || !this.accept(r.Colon) || !this.acceptIdent("extend")) {
     this.restoreAtMark(e);
     return null;
    }
    return this._completeExtends(t);
   };
   t.prototype._completeExtends = function(e) {
    if (!this.accept(r.ParenthesisL)) {
     return this.finish(e, ut.LeftParenthesisExpected);
    }
    var t = e.getSelectors();
    if (!t.addChild(this._parseSelector(true))) {
     return this.finish(e, ut.SelectorExpected);
    }
    while (this.accept(r.Comma)) {
     if (!t.addChild(this._parseSelector(true))) {
      return this.finish(e, ut.SelectorExpected);
     }
    }
    if (!this.accept(r.ParenthesisR)) {
     return this.finish(e, ut.RightParenthesisExpected);
    }
    return this.finish(e);
   };
   t.prototype._parseDetachedRuleSetMixin = function() {
    if (!this.peek(r.AtKeyword)) {
     return null;
    }
    var e = this.mark();
    var t = this.create(Ye);
    if (!t.addChild(this._parseVariable()) || !this.accept(r.ParenthesisL)) {
     this.restoreAtMark(e);
     return null;
    }
    if (!this.accept(r.ParenthesisR)) {
     return this.finish(t, ut.RightParenthesisExpected);
    }
    return this.finish(t);
   };
   t.prototype._tryParseMixinReference = function(e) {
    if (e === void 0) {
     e = false;
    }
    var t = this.mark();
    var n = this.create(Ye);
    var i = this._parseMixinDeclarationIdentifier();
    while (i) {
     this.acceptDelim(">");
     var a = this._parseMixinDeclarationIdentifier();
     if (a) {
      n.getNamespaces().addChild(i);
      i = a;
     } else {
      break;
     }
    }
    if (!n.setIdentifier(i)) {
     this.restoreAtMark(t);
     return null;
    }
    var o = false;
    if (!this.hasWhitespace() && this.accept(r.ParenthesisL)) {
     o = true;
     if (n.getArguments().addChild(this._parseMixinArgument())) {
      while (this.accept(r.Comma) || this.accept(r.SemiColon)) {
       if (this.peek(r.ParenthesisR)) {
        break;
       }
       if (!n.getArguments().addChild(this._parseMixinArgument())) {
        return this.finish(n, ut.ExpressionExpected);
       }
      }
     }
     if (!this.accept(r.ParenthesisR)) {
      return this.finish(n, ut.RightParenthesisExpected);
     }
     i.referenceTypes = [ Q.Mixin ];
    } else {
     i.referenceTypes = [ Q.Mixin, Q.Rule ];
    }
    n.addChild(this._parsePrio());
    if (!o && !this.peek(r.SemiColon) && !this.peek(r.CurlyR) && !this.peek(r.EOF)) {
     this.restoreAtMark(t);
     return null;
    }
    return this.finish(n);
   };
   t.prototype._parseMixinArgument = function() {
    var e = this.create(ye);
    var t = this.mark();
    var n = this._parseVariable();
    if (n) {
     if (!this.accept(r.Colon)) {
      this.restoreAtMark(t);
     } else {
      e.setIdentifier(n);
     }
    }
    if (e.setValue(this._parseDetachedRuleSet() || this._parseExpr(true))) {
     return this.finish(e);
    }
    this.restoreAtMark(t);
    return null;
   };
   t.prototype._parseMixinParameter = function() {
    var e = this.create(ve);
    if (this.peekKeyword("@rest")) {
     var t = this.create(te);
     this.consumeToken();
     if (!this.accept(ii)) {
      return this.finish(e, ut.DotExpected, [], [ r.Comma, r.ParenthesisR ]);
     }
     e.setIdentifier(this.finish(t));
     return this.finish(e);
    }
    if (this.peek(ii)) {
     var n = this.create(te);
     this.consumeToken();
     e.setIdentifier(this.finish(n));
     return this.finish(e);
    }
    var i = false;
    if (e.setIdentifier(this._parseVariable())) {
     this.accept(r.Colon);
     i = true;
    }
    if (!e.setDefaultValue(this._parseExpr(true)) && !i) {
     return null;
    }
    return this.finish(e);
   };
   t.prototype._parseGuard = function() {
    if (!this.peekIdent("when")) {
     return null;
    }
    var e = this.create(tt);
    this.consumeToken();
    e.isNegated = this.acceptIdent("not");
    if (!e.getConditions().addChild(this._parseGuardCondition())) {
     return this.finish(e, ut.ConditionExpected);
    }
    while (this.acceptIdent("and") || this.accept(r.Comma)) {
     if (!e.getConditions().addChild(this._parseGuardCondition())) {
      return this.finish(e, ut.ConditionExpected);
     }
    }
    return this.finish(e);
   };
   t.prototype._parseGuardCondition = function() {
    if (!this.peek(r.ParenthesisL)) {
     return null;
    }
    var e = this.create(nt);
    this.consumeToken();
    if (!e.addChild(this._parseExpr())) {}
    if (!this.accept(r.ParenthesisR)) {
     return this.finish(e, ut.RightParenthesisExpected);
    }
    return this.finish(e);
   };
   t.prototype._parseFunctionIdentifier = function() {
    if (this.peekDelim("%")) {
     var t = this.create(re);
     t.referenceTypes = [ Q.Function ];
     this.consumeToken();
     return this.finish(t);
    }
    return e.prototype._parseFunctionIdentifier.call(this);
   };
   t.prototype._parseURLArgument = function() {
    var t = this.mark();
    var n = e.prototype._parseURLArgument.call(this);
    if (!n || !this.peek(r.ParenthesisR)) {
     this.restoreAtMark(t);
     var i = this.create(te);
     i.addChild(this._parseBinaryExpr());
     return this.finish(i);
    }
    return n;
   };
   return t;
  }(gn);
  var ci = undefined && undefined.__extends || function() {
   var e = Object.setPrototypeOf || {
    __proto__: []
   } instanceof Array && function(e, t) {
    e.__proto__ = t;
   } || function(e, t) {
    for (var n in t) if (t.hasOwnProperty(n)) e[n] = t[n];
   };
   return function(t, n) {
    e(t, n);
    function r() {
     this.constructor = t;
    }
    t.prototype = n === null ? Object.create(n) : (r.prototype = n.prototype, new r());
   };
  }();
  var ui = ot["loadMessageBundle"]();
  var li = function(e) {
   ci(t, e);
   function t() {
    return e.call(this, "@") || this;
   }
   t.prototype.createFunctionProposals = function(e, t, n, r) {
    for (var i = 0, a = e; i < a.length; i++) {
     var o = a[i];
     var s = {
      label: o.name,
      detail: o.example,
      documentation: o.description,
      textEdit: En["TextEdit"].replace(this.getCompletionRange(t), o.name + "($0)"),
      insertTextFormat: En["InsertTextFormat"].Snippet,
      kind: En["CompletionItemKind"].Function
     };
     if (n) {
      s.sortText = "z";
     }
     r.items.push(s);
    }
    return r;
   };
   t.prototype.getTermProposals = function(n, r, i) {
    var a = t.builtInProposals;
    if (n) {
     a = a.filter(function(e) {
      return !e.type || n.restrictions.indexOf(e.type) !== -1;
     });
    }
    this.createFunctionProposals(a, r, true, i);
    return e.prototype.getTermProposals.call(this, n, r, i);
   };
   t.prototype.getColorProposals = function(n, r, i) {
    this.createFunctionProposals(t.colorProposals, r, false, i);
    return e.prototype.getColorProposals.call(this, n, r, i);
   };
   t.prototype.getCompletionsForDeclarationProperty = function(t, n) {
    this.getCompletionsForSelector(null, true, n);
    return e.prototype.getCompletionsForDeclarationProperty.call(this, t, n);
   };
   t.builtInProposals = [ {
    name: "escape",
    example: "escape(@string);",
    description: ui("less.builtin.escape", "URL encodes a string")
   }, {
    name: "e",
    example: "e(@string);",
    description: ui("less.builtin.e", "escape string content")
   }, {
    name: "replace",
    example: "replace(@string, @pattern, @replacement[, @flags]);",
    description: ui("less.builtin.replace", "string replace")
   }, {
    name: "unit",
    example: "unit(@dimension, [@unit: '']);",
    description: ui("less.builtin.unit", "remove or change the unit of a dimension")
   }, {
    name: "color",
    example: "color(@string);",
    description: ui("less.builtin.color", "parses a string to a color"),
    type: "color"
   }, {
    name: "convert",
    example: "convert(@value, unit);",
    description: ui("less.builtin.convert", "converts numbers from one type into another")
   }, {
    name: "data-uri",
    example: "data-uri([mimetype,] url);",
    description: ui("less.builtin.data-uri", "inlines a resource and falls back to `url()`"),
    type: "url"
   }, {
    name: "length",
    example: "length(@list);",
    description: ui("less.builtin.length", "returns the number of elements in a value list")
   }, {
    name: "extract",
    example: "extract(@list, index);",
    description: ui("less.builtin.extract", "returns a value at the specified position in the list")
   }, {
    name: "abs",
    description: ui("less.builtin.abs", "absolute value of a number"),
    example: "abs(number);"
   }, {
    name: "acos",
    description: ui("less.builtin.acos", "arccosine - inverse of cosine function"),
    example: "acos(number);"
   }, {
    name: "asin",
    description: ui("less.builtin.asin", "arcsine - inverse of sine function"),
    example: "asin(number);"
   }, {
    name: "ceil",
    example: "ceil(@number);",
    description: ui("less.builtin.ceil", "rounds up to an integer")
   }, {
    name: "cos",
    description: ui("less.builtin.cos", "cosine function"),
    example: "cos(number);"
   }, {
    name: "floor",
    description: ui("less.builtin.floor", "rounds down to an integer"),
    example: "floor(@number);"
   }, {
    name: "percentage",
    description: ui("less.builtin.percentage", "converts to a %, e.g. 0.5 > 50%"),
    example: "percentage(@number);",
    type: "percentage"
   }, {
    name: "round",
    description: ui("less.builtin.round", "rounds a number to a number of places"),
    example: "round(number, [places: 0]);"
   }, {
    name: "sqrt",
    description: ui("less.builtin.sqrt", "calculates square root of a number"),
    example: "sqrt(number);"
   }, {
    name: "sin",
    description: ui("less.builtin.sin", "sine function"),
    example: "sin(number);"
   }, {
    name: "tan",
    description: ui("less.builtin.tan", "tangent function"),
    example: "tan(number);"
   }, {
    name: "atan",
    description: ui("less.builtin.atan", "arctangent - inverse of tangent function"),
    example: "atan(number);"
   }, {
    name: "pi",
    description: ui("less.builtin.pi", "returns pi"),
    example: "pi();"
   }, {
    name: "pow",
    description: ui("less.builtin.pow", "first argument raised to the power of the second argument"),
    example: "pow(@base, @exponent);"
   }, {
    name: "mod",
    description: ui("less.builtin.mod", "first argument modulus second argument"),
    example: "mod(number, number);"
   }, {
    name: "min",
    description: ui("less.builtin.min", "returns the lowest of one or more values"),
    example: "min(@x, @y);"
   }, {
    name: "max",
    description: ui("less.builtin.max", "returns the lowest of one or more values"),
    example: "max(@x, @y);"
   } ];
   t.colorProposals = [ {
    name: "argb",
    example: "argb(@color);",
    description: ui("less.builtin.argb", "creates a #AARRGGBB")
   }, {
    name: "hsl",
    example: "hsl(@hue, @saturation, @lightness);",
    description: ui("less.builtin.hsl", "creates a color")
   }, {
    name: "hsla",
    example: "hsla(@hue, @saturation, @lightness, @alpha);",
    description: ui("less.builtin.hsla", "creates a color")
   }, {
    name: "hsv",
    example: "hsv(@hue, @saturation, @value);",
    description: ui("less.builtin.hsv", "creates a color")
   }, {
    name: "hsva",
    example: "hsva(@hue, @saturation, @value, @alpha);",
    description: ui("less.builtin.hsva", "creates a color")
   }, {
    name: "hue",
    example: "hue(@color);",
    description: ui("less.builtin.hue", "returns the `hue` channel of `@color` in the HSL space")
   }, {
    name: "saturation",
    example: "saturation(@color);",
    description: ui("less.builtin.saturation", "returns the `saturation` channel of `@color` in the HSL space")
   }, {
    name: "lightness",
    example: "lightness(@color);",
    description: ui("less.builtin.lightness", "returns the `lightness` channel of `@color` in the HSL space")
   }, {
    name: "hsvhue",
    example: "hsvhue(@color);",
    description: ui("less.builtin.hsvhue", "returns the `hue` channel of `@color` in the HSV space")
   }, {
    name: "hsvsaturation",
    example: "hsvsaturation(@color);",
    description: ui("less.builtin.hsvsaturation", "returns the `saturation` channel of `@color` in the HSV space")
   }, {
    name: "hsvvalue",
    example: "hsvvalue(@color);",
    description: ui("less.builtin.hsvvalue", "returns the `value` channel of `@color` in the HSV space")
   }, {
    name: "red",
    example: "red(@color);",
    description: ui("less.builtin.red", "returns the `red` channel of `@color`")
   }, {
    name: "green",
    example: "green(@color);",
    description: ui("less.builtin.green", "returns the `green` channel of `@color`")
   }, {
    name: "blue",
    example: "blue(@color);",
    description: ui("less.builtin.blue", "returns the `blue` channel of `@color`")
   }, {
    name: "alpha",
    example: "alpha(@color);",
    description: ui("less.builtin.alpha", "returns the `alpha` channel of `@color`")
   }, {
    name: "luma",
    example: "luma(@color);",
    description: ui("less.builtin.luma", "returns the `luma` value (perceptual brightness) of `@color`")
   }, {
    name: "saturate",
    example: "saturate(@color, 10%);",
    description: ui("less.builtin.saturate", "return `@color` 10% points more saturated")
   }, {
    name: "desaturate",
    example: "desaturate(@color, 10%);",
    description: ui("less.builtin.desaturate", "return `@color` 10% points less saturated")
   }, {
    name: "lighten",
    example: "lighten(@color, 10%);",
    description: ui("less.builtin.lighten", "return `@color` 10% points lighter")
   }, {
    name: "darken",
    example: "darken(@color, 10%);",
    description: ui("less.builtin.darken", "return `@color` 10% points darker")
   }, {
    name: "fadein",
    example: "fadein(@color, 10%);",
    description: ui("less.builtin.fadein", "return `@color` 10% points less transparent")
   }, {
    name: "fadeout",
    example: "fadeout(@color, 10%);",
    description: ui("less.builtin.fadeout", "return `@color` 10% points more transparent")
   }, {
    name: "fade",
    example: "fade(@color, 50%);",
    description: ui("less.builtin.fade", "return `@color` with 50% transparency")
   }, {
    name: "spin",
    example: "spin(@color, 10);",
    description: ui("less.builtin.spin", "return `@color` with a 10 degree larger in hue")
   }, {
    name: "mix",
    example: "mix(@color1, @color2, [@weight: 50%]);",
    description: ui("less.builtin.mix", "return a mix of `@color1` and `@color2`")
   }, {
    name: "greyscale",
    example: "greyscale(@color);",
    description: ui("less.builtin.greyscale", "returns a grey, 100% desaturated color")
   }, {
    name: "contrast",
    example: "contrast(@color1, [@darkcolor: black], [@lightcolor: white], [@threshold: 43%]);",
    description: ui("less.builtin.contrast", "return `@darkcolor` if `@color1 is> 43% luma` otherwise return `@lightcolor`, see notes")
   }, {
    name: "multiply",
    example: "multiply(@color1, @color2);"
   }, {
    name: "screen",
    example: "screen(@color1, @color2);"
   }, {
    name: "overlay",
    example: "overlay(@color1, @color2);"
   }, {
    name: "softlight",
    example: "softlight(@color1, @color2);"
   }, {
    name: "hardlight",
    example: "hardlight(@color1, @color2);"
   }, {
    name: "difference",
    example: "difference(@color1, @color2);"
   }, {
    name: "exclusion",
    example: "exclusion(@color1, @color2);"
   }, {
    name: "average",
    example: "average(@color1, @color2);"
   }, {
    name: "negation",
    example: "negation(@color1, @color2);"
   } ];
   return t;
  }(Fn);
  function fi(e, t) {
   var n = di(e);
   return mi(n, t);
  }
  function di(e) {
   function t(t) {
    return e.positionAt(t.offset).line;
   }
   function n(t) {
    return e.positionAt(t.offset + t.len).line;
   }
   function i() {
    switch (e.languageId) {
    case "scss":
     return new qr();

    case "less":
     return new ai();

    default:
     return new G();
    }
   }
   function a(e, r) {
    var i = t(e);
    var a = n(e);
    if (i !== a) {
     return {
      startLine: i,
      endLine: a,
      kind: r
     };
    } else {
     return null;
    }
   }
   var o = [];
   var s = [];
   var c = i();
   c.ignoreComment = false;
   c.setSource(e.getText());
   var u = c.scan();
   var l;
   var f = function() {
    switch (u.type) {
    case r.CurlyL:
    case Or:
     {
      s.push({
       line: t(u),
       type: "brace",
       isStart: true
      });
      break;
     }

    case r.CurlyR:
     {
      if (s.length !== 0) {
       var i = pi(s, "brace");
       if (!i) {
        break;
       }
       var f = n(u);
       if (i.type === "brace") {
        if (n(l) !== f) {
         f--;
        }
        if (i.line !== f) {
         o.push({
          startLine: i.line,
          endLine: f,
          kind: undefined
         });
        }
       }
      }
      break;
     }

    case r.Comment:
     {
      var d = function(e) {
       if (e === "#region") {
        return {
         line: t(u),
         type: "comment",
         isStart: true
        };
       } else {
        return {
         line: n(u),
         type: "comment",
         isStart: false
        };
       }
      };
      var p = function(t) {
       var n = t.text.match(/^\s*\/\*\s*(#region|#endregion)\b\s*(.*?)\s*\*\//);
       if (n) {
        return d(n[1]);
       } else if (e.languageId === "scss" || e.languageId === "less") {
        var r = t.text.match(/^\s*\/\/\s*(#region|#endregion)\b\s*(.*?)\s*/);
        if (r) {
         return d(r[1]);
        }
       }
       return null;
      };
      var m = p(u);
      if (m) {
       if (m.isStart) {
        s.push(m);
       } else {
        var i = pi(s, "comment");
        if (!i) {
         break;
        }
        if (i.type === "comment") {
         if (i.line !== m.line) {
          o.push({
           startLine: i.line,
           endLine: m.line,
           kind: "region"
          });
         }
        }
       }
      } else {
       var _ = a(u, "comment");
       if (_) {
        o.push(_);
       }
      }
      break;
     }
    }
    l = u;
    u = c.scan();
   };
   while (u.type !== r.EOF) {
    f();
   }
   return o;
  }
  function pi(e, t) {
   if (e.length === 0) {
    return null;
   }
   for (var n = e.length - 1; n >= 0; n--) {
    if (e[n].type === t && e[n].isStart) {
     return e.splice(n, 1)[0];
    }
   }
   return null;
  }
  function mi(e, t) {
   var n = t && t.rangeLimit || Number.MAX_VALUE;
   var r = e.sort(function(e, t) {
    var n = e.startLine - t.startLine;
    if (n === 0) {
     n = e.endLine - t.endLine;
    }
    return n;
   });
   var i = [];
   var a = -1;
   r.forEach(function(e) {
    if (!(e.startLine < a && a < e.endLine)) {
     i.push(e);
     a = e.endLine;
    }
   });
   if (i.length < n) {
    return i;
   } else {
    return i.slice(0, n);
   }
  }
  var _i;
  (function(e) {
   e["Comment"] = "comment";
   e["Imports"] = "imports";
   e["Region"] = "region";
  })(_i || (_i = {}));
  n.d(t, "getCSSLanguageService", function() {
   return hi;
  });
  n.d(t, "getSCSSLanguageService", function() {
   return vi;
  });
  n.d(t, "getLESSLanguageService", function() {
   return yi;
  });
  n.d(t, "Range", function() {
   return En["Range"];
  });
  n.d(t, "TextEdit", function() {
   return En["TextEdit"];
  });
  n.d(t, "Position", function() {
   return En["Position"];
  });
  n.d(t, "FoldingRangeKind", function() {
   return _i;
  });
  function gi(e, t, n, r, i, a) {
   return {
    configure: a.configure.bind(a),
    doValidation: a.doValidation.bind(a),
    parseStylesheet: e.parseStylesheet.bind(e),
    doComplete: t.doComplete.bind(t),
    setCompletionParticipants: t.setCompletionParticipants.bind(t),
    doHover: n.doHover.bind(n),
    findDefinition: r.findDefinition.bind(r),
    findReferences: r.findReferences.bind(r),
    findDocumentHighlights: r.findDocumentHighlights.bind(r),
    findDocumentSymbols: r.findDocumentSymbols.bind(r),
    doCodeActions: i.doCodeActions.bind(i),
    findColorSymbols: function(e, t) {
     return r.findDocumentColors(e, t).map(function(e) {
      return e.range;
     });
    },
    findDocumentColors: r.findDocumentColors.bind(r),
    getColorPresentations: r.getColorPresentations.bind(r),
    doRename: r.doRename.bind(r),
    getFoldingRanges: fi
   };
  }
  function hi() {
   return gi(new gn(), new Fn(), new Qn(), new Zn(), new pr(), new vr());
  }
  function vi() {
   return gi(new Wr(), new $r(), new Qn(), new Zn(), new pr(), new vr());
  }
  function yi() {
   return gi(new si(), new li(), new Qn(), new Zn(), new pr(), new vr());
  }
 },
 ElcG: function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  var r = n("t2vm");
  t.CSS_STYLE_RULE = "__";
  function i(e, t) {
   var n = [];
   var i = e.createScanner(t.getText());
   var u = "";
   var l = null;
   var f = undefined;
   var d = [];
   var m = i.scan();
   while (m !== r.TokenType.EOS) {
    switch (m) {
    case r.TokenType.StartTag:
     u = i.getTokenText();
     l = null;
     f = "javascript";
     break;

    case r.TokenType.Styles:
     n.push({
      languageId: "css",
      start: i.getTokenOffset(),
      end: i.getTokenEnd()
     });
     break;

    case r.TokenType.Script:
     n.push({
      languageId: f,
      start: i.getTokenOffset(),
      end: i.getTokenEnd()
     });
     break;

    case r.TokenType.AttributeName:
     l = i.getTokenText();
     break;

    case r.TokenType.AttributeValue:
     if (l === "src" && u.toLowerCase() === "script") {
      var _ = i.getTokenText();
      if (_[0] === "'" || _[0] === '"') {
       _ = _.substr(1, _.length - 1);
      }
      d.push(_);
     } else if (l === "type" && u.toLowerCase() === "script") {
      if (/["'](module|(text|application)\/(java|ecma)script)["']/.test(i.getTokenText())) {
       f = "javascript";
      } else {
       f = void 0;
      }
     } else {
      var g = p(l);
      if (g) {
       var h = i.getTokenOffset();
       var v = i.getTokenEnd();
       var y = t.getText()[h];
       if (y === "'" || y === '"') {
        h++;
        v--;
       }
       n.push({
        languageId: g,
        start: h,
        end: v,
        attributeValue: true
       });
      }
     }
     l = null;
     break;
    }
    m = i.scan();
   }
   return {
    getLanguageRanges: function(e) {
     return a(t, n, e);
    },
    getEmbeddedDocument: function(e, r) {
     return c(t, n, e, r);
    },
    getLanguageAtPosition: function(e) {
     return s(t, n, e);
    },
    getLanguagesInDocument: function() {
     return o(t, n);
    },
    getImportedScripts: function() {
     return d;
    }
   };
  }
  t.getDocumentRegions = i;
  function a(e, t, n) {
   var i = [];
   var a = n ? n.start : r.Position.create(0, 0);
   var o = n ? e.offsetAt(n.start) : 0;
   var s = n ? e.offsetAt(n.end) : e.getText().length;
   for (var c = 0, u = t; c < u.length; c++) {
    var l = u[c];
    if (l.end > o && l.start < s) {
     var f = Math.max(l.start, o);
     var d = e.positionAt(f);
     if (o < l.start) {
      i.push({
       start: a,
       end: d,
       languageId: "html"
      });
     }
     var p = Math.min(l.end, s);
     var m = e.positionAt(p);
     if (p > l.start) {
      i.push({
       start: d,
       end: m,
       languageId: l.languageId,
       attributeValue: l.attributeValue
      });
     }
     o = p;
     a = m;
    }
   }
   if (o < s) {
    var m = n ? n.end : e.positionAt(s);
    i.push({
     start: a,
     end: m,
     languageId: "html"
    });
   }
   return i;
  }
  function o(e, t) {
   var n = [];
   for (var r = 0, i = t; r < i.length; r++) {
    var a = i[r];
    if (a.languageId && n.indexOf(a.languageId) === -1) {
     n.push(a.languageId);
     if (n.length === 3) {
      return n;
     }
    }
   }
   n.push("html");
   return n;
  }
  function s(e, t, n) {
   var r = e.offsetAt(n);
   for (var i = 0, a = t; i < a.length; i++) {
    var o = a[i];
    if (o.start <= r) {
     if (r <= o.end) {
      return o.languageId;
     }
    } else {
     break;
    }
   }
   return "html";
  }
  function c(e, t, n, i) {
   var a = 0;
   var o = e.getText();
   var s = "";
   var c = "";
   for (var d = 0, p = t; d < p.length; d++) {
    var m = p[d];
    if (m.languageId === n && (!i || !m.attributeValue)) {
     s = f(s, a, m.start, o, c, u(m));
     s += o.substring(m.start, m.end);
     a = m.end;
     c = l(m);
    }
   }
   s = f(s, a, o.length, o, c, "");
   return r.TextDocument.create(e.uri, n, e.version, s);
  }
  function u(e) {
   if (e.attributeValue) {
    switch (e.languageId) {
    case "css":
     return t.CSS_STYLE_RULE + "{";
    }
   }
   return "";
  }
  function l(e) {
   if (e.attributeValue) {
    switch (e.languageId) {
    case "css":
     return "}";

    case "javascript":
     return ";";
    }
   }
   return "";
  }
  function f(e, t, n, r, i, a) {
   var o = 0;
   e += i;
   for (var s = t + i.length; s < n; s++) {
    var c = r[s];
    if (c === "\n" || c === "\r") {
     o = 0;
     e += c;
    } else {
     o++;
    }
   }
   e = d(e, " ", o - a.length);
   e += a;
   return e;
  }
  function d(e, t, n) {
   while (n > 0) {
    if (n & 1) {
     e += t;
    }
    n >>= 1;
    t += t;
   }
   return e;
  }
  function p(e) {
   var t = e.match(/^(style)$|^(on\w+)$/i);
   if (!t) {
    return null;
   }
   return t[1] ? "css" : "javascript";
  }
 },
 Ff8q: function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  var r = n("Z5Ki");
  var i = n("1vg8");
  var a;
  (function(e) {
   e.None = Object.freeze({
    isCancellationRequested: false,
    onCancellationRequested: r.Event.None
   });
   e.Cancelled = Object.freeze({
    isCancellationRequested: true,
    onCancellationRequested: r.Event.None
   });
   function t(t) {
    var n = t;
    return n && (n === e.None || n === e.Cancelled || i.boolean(n.isCancellationRequested) && !!n.onCancellationRequested);
   }
   e.is = t;
  })(a = t.CancellationToken || (t.CancellationToken = {}));
  var o = Object.freeze(function(e, t) {
   var n = setTimeout(e.bind(t), 0);
   return {
    dispose: function() {
     clearTimeout(n);
    }
   };
  });
  var s = function() {
   function e() {
    this._isCancelled = false;
   }
   e.prototype.cancel = function() {
    if (!this._isCancelled) {
     this._isCancelled = true;
     if (this._emitter) {
      this._emitter.fire(undefined);
      this._emitter = undefined;
     }
    }
   };
   Object.defineProperty(e.prototype, "isCancellationRequested", {
    get: function() {
     return this._isCancelled;
    },
    enumerable: true,
    configurable: true
   });
   Object.defineProperty(e.prototype, "onCancellationRequested", {
    get: function() {
     if (this._isCancelled) {
      return o;
     }
     if (!this._emitter) {
      this._emitter = new r.Emitter();
     }
     return this._emitter.event;
    },
    enumerable: true,
    configurable: true
   });
   return e;
  }();
  var c = function() {
   function e() {}
   Object.defineProperty(e.prototype, "token", {
    get: function() {
     if (!this._token) {
      this._token = new s();
     }
     return this._token;
    },
    enumerable: true,
    configurable: true
   });
   e.prototype.cancel = function() {
    if (!this._token) {
     this._token = a.Cancelled;
    } else {
     this._token.cancel();
    }
   };
   e.prototype.dispose = function() {
    this.cancel();
   };
   return e;
  }();
  t.CancellationTokenSource = c;
 },
 Jf2r: function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  const r = n("BOov");
  t.WorkspaceFoldersFeature = (e => {
   return class extends e {
    initialize(e) {
     let t = e.workspace;
     if (t && t.workspaceFolders) {
      this._onDidChangeWorkspaceFolders = new r.Emitter();
      this.connection.onNotification(r.DidChangeWorkspaceFoldersNotification.type, e => {
       this._onDidChangeWorkspaceFolders.fire(e.event);
      });
     }
    }
    getWorkspaceFolders() {
     return this.connection.sendRequest(r.WorkspaceFoldersRequest.type);
    }
    get onDidChangeWorkspaceFolders() {
     if (!this._onDidChangeWorkspaceFolders) {
      throw new Error("Client doesn't support sending workspace folder change events.");
     }
     if (!this._unregistration) {
      this._unregistration = this.connection.client.register(r.DidChangeWorkspaceFoldersNotification.type);
     }
     return this._onDidChangeWorkspaceFolders.event;
    }
   };
  });
 },
 Krw1: function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  const r = Object.prototype.toString;
  function i(e) {
   return typeof e !== "undefined";
  }
  t.defined = i;
  function a(e) {
   return typeof e === "undefined";
  }
  t.undefined = a;
  function o(e) {
   return e === null;
  }
  t.nil = o;
  function s(e) {
   return e === true || e === false;
  }
  t.boolean = s;
  function c(e) {
   return r.call(e) === "[object String]";
  }
  t.string = c;
  function u(e) {
   return r.call(e) === "[object Number]";
  }
  t.number = u;
  function l(e) {
   return r.call(e) === "[object Error]";
  }
  t.error = l;
  function f(e) {
   return r.call(e) === "[object Function]";
  }
  t.func = f;
  function d(e) {
   return Array.isArray(e);
  }
  t.array = d;
  function p(e) {
   return d(e) && e.every(e => c(e));
  }
  t.stringArray = p;
  function m(e, t) {
   return Array.isArray(e) && e.every(t);
  }
  t.typedArray = m;
  function _(e) {
   return e && f(e.then);
  }
  t.thenable = _;
 },
 MxNS: function(e, t) {
  function n(e) {
   return require(e);
  }
  n.keys = function() {
   return [];
  };
  n.resolve = require.resolve;
  e.exports = n;
  n.id = "MxNS";
 },
 NkYg: function(e, t) {
  e.exports = require("buffer");
 },
 PJMN: function(e, t) {
  e.exports = require("crypto");
 },
 Q0UQ: function(e, t) {
  t.GREATEST_LOWER_BOUND = 1;
  t.LEAST_UPPER_BOUND = 2;
  function n(e, r, i, a, o, s) {
   var c = Math.floor((r - e) / 2) + e;
   var u = o(i, a[c], true);
   if (u === 0) {
    return c;
   } else if (u > 0) {
    if (r - c > 1) {
     return n(c, r, i, a, o, s);
    }
    if (s == t.LEAST_UPPER_BOUND) {
     return r < a.length ? r : -1;
    } else {
     return c;
    }
   } else {
    if (c - e > 1) {
     return n(e, c, i, a, o, s);
    }
    if (s == t.LEAST_UPPER_BOUND) {
     return c;
    } else {
     return e < 0 ? -1 : e;
    }
   }
  }
  t.search = function e(r, i, a, o) {
   if (i.length === 0) {
    return -1;
   }
   var s = n(-1, i.length, r, i, a, o || t.GREATEST_LOWER_BOUND);
   if (s < 0) {
    return -1;
   }
   while (s - 1 >= 0) {
    if (a(i[s], i[s - 1], true) !== 0) {
     break;
    }
    --s;
   }
   return s;
  };
 },
 QduZ: function(e, t) {
  e.exports = require("child_process");
 },
 "Qhc/": function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  const r = n("BOov");
  const i = n("Krw1");
  t.ConfigurationFeature = (e => {
   return class extends e {
    getConfiguration(e) {
     if (!e) {
      return this._getConfiguration({});
     } else if (i.string(e)) {
      return this._getConfiguration({
       section: e
      });
     } else {
      return this._getConfiguration(e);
     }
    }
    _getConfiguration(e) {
     let t = {
      items: Array.isArray(e) ? e : [ e ]
     };
     return this.connection.sendRequest(r.ConfigurationRequest.type, t).then(t => {
      return Array.isArray(e) ? t : t[0];
     });
    }
   };
  });
 },
 Qs2e: function(e, t) {
  e.exports = require("net");
 },
 RSSt: function(e, t) {
  var n = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split("");
  t.encode = function(e) {
   if (0 <= e && e < n.length) {
    return n[e];
   }
   throw new TypeError("Must be between 0 and 63: " + e);
  };
  t.decode = function(e) {
   var t = 65;
   var n = 90;
   var r = 97;
   var i = 122;
   var a = 48;
   var o = 57;
   var s = 43;
   var c = 47;
   var u = 26;
   var l = 52;
   if (t <= e && e <= n) {
    return e - t;
   }
   if (r <= e && e <= i) {
    return e - r + u;
   }
   if (a <= e && e <= o) {
    return e - a + l;
   }
   if (e == s) {
    return 62;
   }
   if (e == c) {
    return 63;
   }
   return -1;
  };
 },
 SoUf: function(e, t, n) {
  "use strict";
  var r = this && this.__assign || function() {
   r = Object.assign || function(e) {
    for (var t, n = 1, r = arguments.length; n < r; n++) {
     t = arguments[n];
     for (var i in t) if (Object.prototype.hasOwnProperty.call(t, i)) e[i] = t[i];
    }
    return e;
   };
   return r.apply(this, arguments);
  };
  var i = this && this.__generator || function(e, t) {
   var n = {
    label: 0,
    sent: function() {
     if (a[0] & 1) throw a[1];
     return a[1];
    },
    trys: [],
    ops: []
   }, r, i, a, o;
   return o = {
    next: s(0),
    throw: s(1),
    return: s(2)
   }, typeof Symbol === "function" && (o[Symbol.iterator] = function() {
    return this;
   }), o;
   function s(e) {
    return function(t) {
     return c([ e, t ]);
    };
   }
   function c(o) {
    if (r) throw new TypeError("Generator is already executing.");
    while (n) try {
     if (r = 1, i && (a = o[0] & 2 ? i["return"] : o[0] ? i["throw"] || ((a = i["return"]) && a.call(i), 
     0) : i.next) && !(a = a.call(i, o[1])).done) return a;
     if (i = 0, a) o = [ o[0] & 2, a.value ];
     switch (o[0]) {
     case 0:
     case 1:
      a = o;
      break;

     case 4:
      n.label++;
      return {
       value: o[1],
       done: false
      };

     case 5:
      n.label++;
      i = o[1];
      o = [ 0 ];
      continue;

     case 7:
      o = n.ops.pop();
      n.trys.pop();
      continue;

     default:
      if (!(a = n.trys, a = a.length > 0 && a[a.length - 1]) && (o[0] === 6 || o[0] === 2)) {
       n = 0;
       continue;
      }
      if (o[0] === 3 && (!a || o[1] > a[0] && o[1] < a[3])) {
       n.label = o[1];
       break;
      }
      if (o[0] === 6 && n.label < a[1]) {
       n.label = a[1];
       a = o;
       break;
      }
      if (a && n.label < a[2]) {
       n.label = a[2];
       n.ops.push(o);
       break;
      }
      if (a[2]) n.ops.pop();
      n.trys.pop();
      continue;
     }
     o = t.call(e, n);
    } catch (e) {
     o = [ 6, e ];
     i = 0;
    } finally {
     r = a = 0;
    }
    if (o[0] & 5) throw o[1];
    return {
     value: o[0] ? o[1] : void 0,
     done: true
    };
   }
  };
  var a = this && this.__makeTemplateObject || function(e, t) {
   if (Object.defineProperty) {
    Object.defineProperty(e, "raw", {
     value: t
    });
   } else {
    e.raw = t;
   }
   return e;
  };
  var o = this && this.__extends || function() {
   var e = function(t, n) {
    e = Object.setPrototypeOf || {
     __proto__: []
    } instanceof Array && function(e, t) {
     e.__proto__ = t;
    } || function(e, t) {
     for (var n in t) if (t.hasOwnProperty(n)) e[n] = t[n];
    };
    return e(t, n);
   };
   return function(t, n) {
    e(t, n);
    function r() {
     this.constructor = t;
    }
    t.prototype = n === null ? Object.create(n) : (r.prototype = n.prototype, new r());
   };
  }();
  var s;
  (function(e) {
   e.versionMajorMinor = "3.0";
   e.version = e.versionMajorMinor + ".1";
  })(s || (s = {}));
  (function(e) {
   var t;
   (function(e) {
    e[e["LessThan"] = -1] = "LessThan";
    e[e["EqualTo"] = 0] = "EqualTo";
    e[e["GreaterThan"] = 1] = "GreaterThan";
   })(t = e.Comparison || (e.Comparison = {}));
  })(s || (s = {}));
  (function(e) {
   function t() {
    var e = Object.create(null);
    e.__ = undefined;
    delete e.__;
    return e;
   }
   function n() {
    return new e.MapCtr();
   }
   e.createMap = n;
   function r(e) {
    var t = n();
    for (var r = 0, i = e; r < i.length; r++) {
     var a = i[r], o = a[0], s = a[1];
     t.set(o, s);
    }
    return t;
   }
   e.createMapFromEntries = r;
   function i(t) {
    var n = new e.MapCtr();
    for (var r in t) {
     if (ve.call(t, r)) {
      n.set(r, t[r]);
     }
    }
    return n;
   }
   e.createMapFromTemplate = i;
   e.MapCtr = typeof Map !== "undefined" && "entries" in Map.prototype ? Map : a();
   function a() {
    var e = function() {
     function e(e, t) {
      this.index = 0;
      this.data = e;
      this.selector = t;
      this.keys = Object.keys(e);
     }
     e.prototype.next = function() {
      var e = this.index;
      if (e < this.keys.length) {
       this.index++;
       return {
        value: this.selector(this.data, this.keys[e]),
        done: false
       };
      }
      return {
       value: undefined,
       done: true
      };
     };
     return e;
    }();
    return function() {
     function n() {
      this.data = t();
      this.size = 0;
     }
     n.prototype.get = function(e) {
      return this.data[e];
     };
     n.prototype.set = function(e, t) {
      if (!this.has(e)) {
       this.size++;
      }
      this.data[e] = t;
      return this;
     };
     n.prototype.has = function(e) {
      return e in this.data;
     };
     n.prototype.delete = function(e) {
      if (this.has(e)) {
       this.size--;
       delete this.data[e];
       return true;
      }
      return false;
     };
     n.prototype.clear = function() {
      this.data = t();
      this.size = 0;
     };
     n.prototype.keys = function() {
      return new e(this.data, function(e, t) {
       return t;
      });
     };
     n.prototype.values = function() {
      return new e(this.data, function(e, t) {
       return e[t];
      });
     };
     n.prototype.entries = function() {
      return new e(this.data, function(e, t) {
       return [ t, e[t] ];
      });
     };
     n.prototype.forEach = function(e) {
      for (var t in this.data) {
       e(this.data[t], t);
      }
     };
     return n;
    }();
   }
   function o(e) {
    return e ? e.length : 0;
   }
   e.length = o;
   function s(e, t) {
    if (e) {
     for (var n = 0; n < e.length; n++) {
      var r = t(e[n], n);
      if (r) {
       return r;
      }
     }
    }
    return undefined;
   }
   e.forEach = s;
   function c(e, t) {
    if (e === undefined) {
     return undefined;
    }
    for (var n = 0; n < e.length; n++) {
     var r = t(e[n], n);
     if (r !== undefined) {
      return r;
     }
    }
    return undefined;
   }
   e.firstDefined = c;
   function u(e, t) {
    while (true) {
     var n = e.next(), r = n.value, i = n.done;
     if (i) {
      return undefined;
     }
     var a = t(r);
     if (a !== undefined) {
      return a;
     }
    }
   }
   e.firstDefinedIterator = u;
   function l(e, t, n) {
    var r = [];
    Xe.assertEqual(e.length, t.length);
    for (var i = 0; i < e.length; i++) {
     r.push(n(e[i], t[i], i));
    }
    return r;
   }
   e.zipWith = l;
   function f(e, t) {
    Xe.assertEqual(e.length, t.length);
    var n = 0;
    return {
     next: function() {
      if (n === e.length) {
       return {
        value: undefined,
        done: true
       };
      }
      n++;
      return {
       value: [ e[n - 1], t[n - 1] ],
       done: false
      };
     }
    };
   }
   e.zipToIterator = f;
   function d(e, t) {
    Xe.assert(e.length === t.length);
    var r = n();
    for (var i = 0; i < e.length; ++i) {
     r.set(e[i], t[i]);
    }
    return r;
   }
   e.zipToMap = d;
   function p(e, t) {
    if (e) {
     for (var n = 0; n < e.length; n++) {
      if (!t(e[n], n)) {
       return false;
      }
     }
    }
    return true;
   }
   e.every = p;
   function m(e, t) {
    for (var n = 0; n < e.length; n++) {
     var r = e[n];
     if (t(r, n)) {
      return r;
     }
    }
    return undefined;
   }
   e.find = m;
   function _(e, t) {
    for (var n = e.length - 1; n >= 0; n--) {
     var r = e[n];
     if (t(r, n)) {
      return r;
     }
    }
    return undefined;
   }
   e.findLast = _;
   function g(e, t, n) {
    for (var r = n || 0; r < e.length; r++) {
     if (t(e[r], r)) {
      return r;
     }
    }
    return -1;
   }
   e.findIndex = g;
   function h(e, t, n) {
    for (var r = n === undefined ? e.length - 1 : n; r >= 0; r--) {
     if (t(e[r], r)) {
      return r;
     }
    }
    return -1;
   }
   e.findLastIndex = h;
   function v(e, t) {
    for (var n = 0; n < e.length; n++) {
     var r = t(e[n], n);
     if (r) {
      return r;
     }
    }
    return Xe.fail();
   }
   e.findMap = v;
   function y(e, t, n) {
    if (n === void 0) {
     n = Qe;
    }
    if (e) {
     for (var r = 0, i = e; r < i.length; r++) {
      var a = i[r];
      if (n(a, t)) {
       return true;
      }
     }
    }
    return false;
   }
   e.contains = y;
   function b(e, t, n) {
    if (n === void 0) {
     n = Qe;
    }
    return e.length === t.length && e.every(function(e, r) {
     return n(e, t[r]);
    });
   }
   e.arraysEqual = b;
   function x(e, t, n) {
    for (var r = n || 0; r < e.length; r++) {
     if (y(t, e.charCodeAt(r))) {
      return r;
     }
    }
    return -1;
   }
   e.indexOfAnyCharCode = x;
   function k(e, t) {
    var n = 0;
    if (e) {
     for (var r = 0; r < e.length; r++) {
      var i = e[r];
      if (t(i, r)) {
       n++;
      }
     }
    }
    return n;
   }
   e.countWhere = k;
   function S(e, t) {
    if (e) {
     var n = e.length;
     var r = 0;
     while (r < n && t(e[r])) r++;
     if (r < n) {
      var i = e.slice(0, r);
      r++;
      while (r < n) {
       var a = e[r];
       if (t(a)) {
        i.push(a);
       }
       r++;
      }
      return i;
     }
    }
    return e;
   }
   e.filter = S;
   function w(e, t) {
    var n = 0;
    for (var r = 0; r < e.length; r++) {
     if (t(e[r], r, e)) {
      e[n] = e[r];
      n++;
     }
    }
    e.length = n;
   }
   e.filterMutate = w;
   function C(e) {
    e.length = 0;
   }
   e.clear = C;
   function D(e, t) {
    var n;
    if (e) {
     n = [];
     for (var r = 0; r < e.length; r++) {
      n.push(t(e[r], r));
     }
    }
    return n;
   }
   e.map = D;
   function T(e, t) {
    return {
     next: function() {
      var n = e.next();
      return n.done ? n : {
       value: t(n.value),
       done: false
      };
     }
    };
   }
   e.mapIterator = T;
   function E(e, t) {
    if (e) {
     for (var n = 0; n < e.length; n++) {
      var r = e[n];
      var i = t(r, n);
      if (r !== i) {
       var a = e.slice(0, n);
       a.push(i);
       for (n++; n < e.length; n++) {
        a.push(t(e[n], n));
       }
       return a;
      }
     }
    }
    return e;
   }
   e.sameMap = E;
   function N(e) {
    var t;
    if (e) {
     t = [];
     for (var n = 0, r = e; n < r.length; n++) {
      var i = r[n];
      if (i) {
       if (Me(i)) {
        ee(t, i);
       } else {
        t.push(i);
       }
      }
     }
    }
    return t;
   }
   e.flatten = N;
   function A(e, t) {
    var n;
    if (e) {
     n = [];
     for (var r = 0; r < e.length; r++) {
      var i = t(e[r], r);
      if (i) {
       if (Me(i)) {
        ee(n, i);
       } else {
        n.push(i);
       }
      }
     }
    }
    return n;
   }
   e.flatMap = A;
   function F(t, n) {
    var r = t.next();
    if (r.done) {
     return e.emptyIterator;
    }
    var i = a(r.value);
    return {
     next: function() {
      while (true) {
       var e = i.next();
       if (!e.done) {
        return e;
       }
       var n = t.next();
       if (n.done) {
        return n;
       }
       i = a(n.value);
      }
     }
    };
    function a(t) {
     var r = n(t);
     return r === undefined ? e.emptyIterator : Me(r) ? ae(r) : r;
    }
   }
   e.flatMapIterator = F;
   function P(e, t) {
    var n;
    if (e) {
     for (var r = 0; r < e.length; r++) {
      var i = e[r];
      var a = t(i, r);
      if (n || i !== a || Me(a)) {
       if (!n) {
        n = e.slice(0, r);
       }
       if (Me(a)) {
        ee(n, a);
       } else {
        n.push(a);
       }
      }
     }
    }
    return n || e;
   }
   e.sameFlatMap = P;
   function I(e, t) {
    var n = [];
    for (var r = 0; r < e.length; r++) {
     var i = t(e[r], r);
     if (i === undefined) {
      return undefined;
     }
     n.push(i);
    }
    return n;
   }
   e.mapAllOrFail = I;
   function O(e, t) {
    var n = [];
    if (e) {
     for (var r = 0; r < e.length; r++) {
      var i = t(e[r], r);
      if (i !== undefined) {
       n.push(i);
      }
     }
    }
    return n;
   }
   e.mapDefined = O;
   function M(e, t) {
    return {
     next: function() {
      while (true) {
       var n = e.next();
       if (n.done) {
        return n;
       }
       var r = t(n.value);
       if (r !== undefined) {
        return {
         value: r,
         done: false
        };
       }
      }
     }
    };
   }
   e.mapDefinedIterator = M;
   e.emptyIterator = {
    next: function() {
     return {
      value: undefined,
      done: true
     };
    }
   };
   function L(e) {
    var t = false;
    return {
     next: function() {
      var n = t;
      t = true;
      return n ? {
       value: undefined,
       done: true
      } : {
       value: e,
       done: false
      };
     }
    };
   }
   e.singleIterator = L;
   function R(e, t, n) {
    var r;
    if (e) {
     r = [];
     var i = e.length;
     var a = void 0;
     var o = void 0;
     var s = 0;
     var c = 0;
     while (s < i) {
      while (c < i) {
       var u = e[c];
       o = t(u, c);
       if (c === 0) {
        a = o;
       } else if (o !== a) {
        break;
       }
       c++;
      }
      if (s < c) {
       var l = n(e.slice(s, c), a, s, c);
       if (l) {
        r.push(l);
       }
       s = c;
      }
      a = o;
      c++;
     }
    }
    return r;
   }
   e.spanMap = R;
   function B(e, t) {
    if (!e) {
     return undefined;
    }
    var r = n();
    e.forEach(function(e, n) {
     var i = t(n, e), a = i[0], o = i[1];
     r.set(a, o);
    });
    return r;
   }
   e.mapEntries = B;
   function z(e, t) {
    if (e) {
     if (t) {
      for (var n = 0, r = e; n < r.length; n++) {
       var i = r[n];
       if (t(i)) {
        return true;
       }
      }
     } else {
      return e.length > 0;
     }
    }
    return false;
   }
   e.some = z;
   function j(e, t, n) {
    var r;
    for (var i = 0; i < e.length; i++) {
     if (t(e[i])) {
      r = r === undefined ? i : r;
     } else {
      if (r !== undefined) {
       n(r, i);
       r = undefined;
      }
     }
    }
    if (r !== undefined) n(r, e.length);
   }
   e.getRangesWhere = j;
   function q(e, t) {
    if (!z(t)) return e;
    if (!z(e)) return t;
    return e.concat(t);
   }
   e.concatenate = q;
   function U(e, t, n) {
    var r = e.map(function(e, t) {
     return t;
    });
    re(e, r, n);
    var i = e[r[0]];
    var a = [ r[0] ];
    for (var o = 1; o < r.length; o++) {
     var s = r[o];
     var c = e[s];
     if (!t(i, c)) {
      a.push(s);
      i = c;
     }
    }
    a.sort();
    return a.map(function(t) {
     return e[t];
    });
   }
   function J(e, t) {
    var n = [];
    for (var r = 0, i = e; r < i.length; r++) {
     var a = i[r];
     te(n, a, t);
    }
    return n;
   }
   function K(e, t, n) {
    return !e ? undefined : e.length === 0 ? [] : e.length === 1 ? e.slice() : n ? U(e, t, n) : J(e, t);
   }
   e.deduplicate = K;
   function V(e, t) {
    if (!e) return undefined;
    if (e.length === 0) return [];
    var n = e[0];
    var r = [ n ];
    for (var i = 1; i < e.length; i++) {
     var a = e[i];
     switch (t(a, n)) {
     case true:
     case 0:
      continue;

     case -1:
      return Xe.fail("Array is unsorted.");
     }
     r.push(n = a);
    }
    return r;
   }
   function W(e, t, n) {
    if (e.length === 0) {
     e.push(t);
     return;
    }
    var r = ge(e, t, Je, n);
    if (r < 0) {
     e.splice(~r, 0, t);
    }
   }
   e.insertSorted = W;
   function H(e, t, n) {
    return V(ie(e, t), n || t);
   }
   e.sortAndDeduplicate = H;
   function G(e, t, n) {
    if (n === void 0) {
     n = Qe;
    }
    if (!e || !t) {
     return e === t;
    }
    if (e.length !== t.length) {
     return false;
    }
    for (var r = 0; r < e.length; r++) {
     if (!n(e[r], t[r])) {
      return false;
     }
    }
    return true;
   }
   e.arrayIsEqualTo = G;
   function $(e) {
    var t;
    if (e) {
     for (var n = 0; n < e.length; n++) {
      var r = e[n];
      if (t || !r) {
       if (!t) {
        t = e.slice(0, n);
       }
       if (r) {
        t.push(r);
       }
      }
     }
    }
    return t || e;
   }
   e.compact = $;
   function X(e, t, n) {
    if (!t || !e || t.length === 0 || e.length === 0) return t;
    var r = [];
    e: for (var i = 0, a = 0; a < t.length; a++) {
     if (a > 0) {
      Xe.assertGreaterThanOrEqual(n(t[a], t[a - 1]), 0);
     }
     t: for (var o = i; i < e.length; i++) {
      if (i > o) {
       Xe.assertGreaterThanOrEqual(n(e[i], e[i - 1]), 0);
      }
      switch (n(t[a], e[i])) {
      case -1:
       r.push(t[a]);
       continue e;

      case 0:
       continue e;

      case 1:
       continue t;
      }
     }
    }
    return r;
   }
   e.relativeComplement = X;
   function Q(e, t) {
    var n = 0;
    for (var r = 0, i = e; r < i.length; r++) {
     var a = i[r];
     n += a[t];
    }
    return n;
   }
   e.sum = Q;
   function Y(e, t) {
    if (t === undefined) return e;
    if (e === undefined) return [ t ];
    e.push(t);
    return e;
   }
   e.append = Y;
   function Z(e, t) {
    return t < 0 ? e.length + t : t;
   }
   function ee(e, t, n, r) {
    if (t === undefined || t.length === 0) return e;
    if (e === undefined) return t.slice(n, r);
    n = n === undefined ? 0 : Z(t, n);
    r = r === undefined ? t.length : Z(t, r);
    for (var i = n; i < r && i < t.length; i++) {
     if (t[i] !== undefined) {
      e.push(t[i]);
     }
    }
    return e;
   }
   e.addRange = ee;
   function te(e, t, n) {
    if (y(e, t, n)) {
     return false;
    } else {
     e.push(t);
     return true;
    }
   }
   e.pushIfUnique = te;
   function ne(e, t, n) {
    if (e) {
     te(e, t, n);
     return e;
    } else {
     return [ t ];
    }
   }
   e.appendIfUnique = ne;
   function re(e, t, n) {
    t.sort(function(t, r) {
     return n(e[t], e[r]) || tt(t, r);
    });
   }
   function ie(e, t) {
    return e.slice().sort(t);
   }
   e.sort = ie;
   function ae(e) {
    var t = 0;
    return {
     next: function() {
      if (t === e.length) {
       return {
        value: undefined,
        done: true
       };
      } else {
       t++;
       return {
        value: e[t - 1],
        done: false
       };
      }
     }
    };
   }
   e.arrayIterator = ae;
   function oe(e, t) {
    var n = e.map(function(e, t) {
     return t;
    });
    re(e, n, t);
    return n.map(function(t) {
     return e[t];
    });
   }
   e.stableSort = oe;
   function se(e, t, n, r) {
    while (n < r) {
     if (e[n] !== t[n]) {
      return false;
     }
     n++;
    }
    return true;
   }
   e.rangeEquals = se;
   function ce(e, t) {
    if (e) {
     t = Z(e, t);
     if (t < e.length) {
      return e[t];
     }
    }
    return undefined;
   }
   e.elementAt = ce;
   function ue(e) {
    return e.length === 0 ? undefined : e[0];
   }
   e.firstOrUndefined = ue;
   function le(e) {
    Xe.assert(e.length !== 0);
    return e[0];
   }
   e.first = le;
   function fe(e) {
    return e.length === 0 ? undefined : e[e.length - 1];
   }
   e.lastOrUndefined = fe;
   function de(e) {
    Xe.assert(e.length !== 0);
    return e[e.length - 1];
   }
   e.last = de;
   function pe(e) {
    return e && e.length === 1 ? e[0] : undefined;
   }
   e.singleOrUndefined = pe;
   function me(e) {
    return e && e.length === 1 ? e[0] : e;
   }
   e.singleOrMany = me;
   function _e(e, t, n) {
    var r = e.slice(0);
    r[t] = n;
    return r;
   }
   e.replaceElement = _e;
   function ge(e, t, n, r, i) {
    if (!e || e.length === 0) {
     return -1;
    }
    var a = i || 0;
    var o = e.length - 1;
    var s = n(t);
    while (a <= o) {
     var c = a + (o - a >> 1);
     var u = n(e[c]);
     switch (r(u, s)) {
     case -1:
      a = c + 1;
      break;

     case 0:
      return c;

     case 1:
      o = c - 1;
      break;
     }
    }
    return ~a;
   }
   e.binarySearch = ge;
   function he(e, t, n, r, i) {
    if (e && e.length > 0) {
     var a = e.length;
     if (a > 0) {
      var o = r === undefined || r < 0 ? 0 : r;
      var s = i === undefined || o + i > a - 1 ? a - 1 : o + i;
      var c = void 0;
      if (arguments.length <= 2) {
       c = e[o];
       o++;
      } else {
       c = n;
      }
      while (o <= s) {
       c = t(c, e[o], o);
       o++;
      }
      return c;
     }
    }
    return n;
   }
   e.reduceLeft = he;
   var ve = Object.prototype.hasOwnProperty;
   function ye(e, t) {
    return ve.call(e, t);
   }
   e.hasProperty = ye;
   function be(e, t) {
    return ve.call(e, t) ? e[t] : undefined;
   }
   e.getProperty = be;
   function xe(e) {
    var t = [];
    for (var n in e) {
     if (ve.call(e, n)) {
      t.push(n);
     }
    }
    return t;
   }
   e.getOwnKeys = xe;
   function ke(e) {
    var t = [];
    for (var n in e) {
     if (ve.call(e, n)) {
      t.push(e[n]);
     }
    }
    return t;
   }
   e.getOwnValues = ke;
   function Se(e, t) {
    var n;
    var r = [];
    for (var i = e.next(), a = i.value, o = i.done; !o; n = e.next(), a = n.value, o = n.done, 
    n) {
     r.push(t ? t(a) : a);
    }
    return r;
   }
   e.arrayFrom = Se;
   function we(e) {
    var t = [];
    for (var n = 1; n < arguments.length; n++) {
     t[n - 1] = arguments[n];
    }
    for (var r = 0, i = t; r < i.length; r++) {
     var a = i[r];
     for (var o in a) {
      if (ye(a, o)) {
       e[o] = a[o];
      }
     }
    }
    return e;
   }
   e.assign = we;
   function Ce(e, t, n) {
    if (n === void 0) {
     n = Qe;
    }
    if (e === t) return true;
    if (!e || !t) return false;
    for (var r in e) {
     if (ve.call(e, r)) {
      if (!ve.call(t, r) === undefined) return false;
      if (!n(e[r], t[r])) return false;
     }
    }
    for (var r in t) {
     if (ve.call(t, r)) {
      if (!ve.call(e, r)) return false;
     }
    }
    return true;
   }
   e.equalOwnProperties = Ce;
   function De(e, t, r) {
    if (r === void 0) {
     r = Je;
    }
    var i = n();
    for (var a = 0, o = e; a < o.length; a++) {
     var s = o[a];
     var c = t(s);
     if (c !== undefined) i.set(c, r(s));
    }
    return i;
   }
   e.arrayToMap = De;
   function Te(e, t, n) {
    if (n === void 0) {
     n = Je;
    }
    var r = [];
    for (var i = 0, a = e; i < a.length; i++) {
     var o = a[i];
     r[t(o)] = n(o);
    }
    return r;
   }
   e.arrayToNumericMap = Te;
   function Ee(e, t, n) {
    if (n === void 0) {
     n = Je;
    }
    var r = Pe();
    for (var i = 0, a = e; i < a.length; i++) {
     var o = a[i];
     r.add(t(o), n(o));
    }
    return r;
   }
   e.arrayToMultiMap = Ee;
   function Ne(e, t) {
    return Se(Ee(e, t).values());
   }
   e.group = Ne;
   function Ae(e) {
    var t = {};
    for (var n in e) {
     if (ve.call(e, n)) {
      t[n] = e[n];
     }
    }
    return t;
   }
   e.clone = Ae;
   function Fe(e, t) {
    var n = {};
    for (var r in t) {
     if (ve.call(t, r)) {
      n[r] = t[r];
     }
    }
    for (var r in e) {
     if (ve.call(e, r)) {
      n[r] = e[r];
     }
    }
    return n;
   }
   e.extend = Fe;
   function Pe() {
    var e = n();
    e.add = Ie;
    e.remove = Oe;
    return e;
   }
   e.createMultiMap = Pe;
   function Ie(e, t) {
    var n = this.get(e);
    if (n) {
     n.push(t);
    } else {
     this.set(e, n = [ t ]);
    }
    return n;
   }
   function Oe(e, t) {
    var n = this.get(e);
    if (n) {
     Dt(n, t);
     if (!n.length) {
      this.delete(e);
     }
    }
   }
   function Me(e) {
    return Array.isArray ? Array.isArray(e) : e instanceof Array;
   }
   e.isArray = Me;
   function Le(e) {
    return Me(e) ? e : [ e ];
   }
   e.toArray = Le;
   function Re(e) {
    return typeof e === "string";
   }
   e.isString = Re;
   function Be(e, t) {
    return e !== undefined && t(e) ? e : undefined;
   }
   e.tryCast = Be;
   function ze(e, t) {
    if (e !== undefined && t(e)) return e;
    return Xe.fail("Invalid cast. The supplied value " + e + " did not pass the test '" + Xe.getFunctionName(t) + "'.");
   }
   e.cast = ze;
   function je(e) {}
   e.noop = je;
   function qe() {
    return false;
   }
   e.returnFalse = qe;
   function Ue() {
    return true;
   }
   e.returnTrue = Ue;
   function Je(e) {
    return e;
   }
   e.identity = Je;
   function Ke(e) {
    return e.toLowerCase();
   }
   e.toLowerCase = Ke;
   function Ve() {
    throw new Error("Not implemented");
   }
   e.notImplemented = Ve;
   function We(e) {
    var t;
    return function() {
     if (e) {
      t = e();
      e = undefined;
     }
     return t;
    };
   }
   e.memoize = We;
   function He(e, t, n, r, i) {
    if (i) {
     var a = [];
     for (var o = 0; o < arguments.length; o++) {
      a[o] = arguments[o];
     }
     return function(e) {
      return Ge.apply(void 0, D(a, function(t) {
       return t(e);
      }));
     };
    } else if (r) {
     return function(i) {
      return Ge(e(i), t(i), n(i), r(i));
     };
    } else if (n) {
     return function(r) {
      return Ge(e(r), t(r), n(r));
     };
    } else if (t) {
     return function(n) {
      return Ge(e(n), t(n));
     };
    } else if (e) {
     return function(t) {
      return Ge(e(t));
     };
    } else {
     return function(e) {
      return function(e) {
       return e;
      };
     };
    }
   }
   e.chain = He;
   function Ge(e, t, n, r, i) {
    if (i) {
     var a = [];
     for (var o = 0; o < arguments.length; o++) {
      a[o] = arguments[o];
     }
     return function(e) {
      return he(a, function(e, t) {
       return t(e);
      }, e);
     };
    } else if (r) {
     return function(i) {
      return r(n(t(e(i))));
     };
    } else if (n) {
     return function(r) {
      return n(t(e(r)));
     };
    } else if (t) {
     return function(n) {
      return t(e(n));
     };
    } else if (e) {
     return function(t) {
      return e(t);
     };
    } else {
     return function(e) {
      return e;
     };
    }
   }
   e.compose = Ge;
   var $e;
   (function(e) {
    e[e["None"] = 0] = "None";
    e[e["Normal"] = 1] = "Normal";
    e[e["Aggressive"] = 2] = "Aggressive";
    e[e["VeryAggressive"] = 3] = "VeryAggressive";
   })($e = e.AssertionLevel || (e.AssertionLevel = {}));
   var Xe;
   (function(e) {
    e.currentAssertionLevel = 0;
    e.isDebugging = false;
    function t(t) {
     return e.currentAssertionLevel >= t;
    }
    e.shouldAssert = t;
    function n(e, t, r, i) {
     if (!e) {
      if (r) {
       t += "\r\nVerbose Debug Information: " + (typeof r === "string" ? r : r());
      }
      s(t ? "False expression: " + t : "False expression.", i || n);
     }
    }
    e.assert = n;
    function r(e, t, n, r) {
     if (e !== t) {
      var i = n ? r ? n + " " + r : n : "";
      s("Expected " + e + " === " + t + ". " + i);
     }
    }
    e.assertEqual = r;
    function i(e, t, n) {
     if (e >= t) {
      s("Expected " + e + " < " + t + ". " + (n || ""));
     }
    }
    e.assertLessThan = i;
    function a(e, t) {
     if (e > t) {
      s("Expected " + e + " <= " + t);
     }
    }
    e.assertLessThanOrEqual = a;
    function o(e, t) {
     if (e < t) {
      s("Expected " + e + " >= " + t);
     }
    }
    e.assertGreaterThanOrEqual = o;
    function s(e, t) {
     debugger;
     var n = new Error(e ? "Debug Failure. " + e : "Debug Failure.");
     if (Error.captureStackTrace) {
      Error.captureStackTrace(n, t || s);
     }
     throw n;
    }
    e.fail = s;
    function c(e, t) {
     if (e === undefined || e === null) return s(t);
     return e;
    }
    e.assertDefined = c;
    function u(e, t) {
     for (var n = 0, r = e; n < r.length; n++) {
      var i = r[n];
      c(i, t);
     }
     return e;
    }
    e.assertEachDefined = u;
    function l(e, t, n) {
     return s(t || "Illegal value: " + e, n || l);
    }
    e.assertNever = l;
    function f(e) {
     if (typeof e !== "function") {
      return "";
     } else if (e.hasOwnProperty("name")) {
      return e.name;
     } else {
      var t = Function.prototype.toString.call(e);
      var n = /^function\s+([\w\$]+)\s*\(/.exec(t);
      return n ? n[1] : "";
     }
    }
    e.getFunctionName = f;
   })(Xe = e.Debug || (e.Debug = {}));
   function Qe(e, t) {
    return e === t;
   }
   e.equateValues = Qe;
   function Ye(e, t) {
    return e === t || e !== undefined && t !== undefined && e.toUpperCase() === t.toUpperCase();
   }
   e.equateStringsCaseInsensitive = Ye;
   function Ze(e, t) {
    return Qe(e, t);
   }
   e.equateStringsCaseSensitive = Ze;
   function et(e, t) {
    return e === t ? 0 : e === undefined ? -1 : t === undefined ? 1 : e < t ? -1 : 1;
   }
   function tt(e, t) {
    return et(e, t);
   }
   e.compareValues = tt;
   function nt(e, t, n) {
    return n(e, t) === -1 ? e : t;
   }
   e.min = nt;
   function rt(e, t) {
    if (e === t) return 0;
    if (e === undefined) return -1;
    if (t === undefined) return 1;
    e = e.toUpperCase();
    t = t.toUpperCase();
    return e < t ? -1 : e > t ? 1 : 0;
   }
   e.compareStringsCaseInsensitive = rt;
   function it(e, t) {
    return et(e, t);
   }
   e.compareStringsCaseSensitive = it;
   function at(e) {
    return e ? rt : it;
   }
   e.getStringComparer = at;
   var ot = function() {
    var e;
    var t;
    var n = s();
    return c;
    function r(e, t, n) {
     if (e === t) return 0;
     if (e === undefined) return -1;
     if (t === undefined) return 1;
     var r = n(e, t);
     return r < 0 ? -1 : r > 0 ? 1 : 0;
    }
    function i(e) {
     var t = new Intl.Collator(e, {
      usage: "sort",
      sensitivity: "variant"
     }).compare;
     return function(e, n) {
      return r(e, n, t);
     };
    }
    function a(e) {
     if (e !== undefined) return o();
     return function(e, n) {
      return r(e, n, t);
     };
     function t(e, t) {
      return e.localeCompare(t);
     }
    }
    function o() {
     return function(t, n) {
      return r(t, n, e);
     };
     function e(e, n) {
      return t(e.toUpperCase(), n.toUpperCase()) || t(e, n);
     }
     function t(e, t) {
      return e < t ? -1 : e > t ? 1 : 0;
     }
    }
    function s() {
     if (typeof Intl === "object" && typeof Intl.Collator === "function") {
      return i;
     }
     if (typeof String.prototype.localeCompare === "function" && typeof String.prototype.toLocaleUpperCase === "function" && "a".localeCompare("B") < 0) {
      return a;
     }
     return o;
    }
    function c(r) {
     if (r === undefined) {
      return e || (e = n(r));
     } else if (r === "en-US") {
      return t || (t = n(r));
     } else {
      return n(r);
     }
    }
   }();
   var st;
   var ct;
   function ut() {
    return ct;
   }
   e.getUILocale = ut;
   function lt(e) {
    if (ct !== e) {
     ct = e;
     st = undefined;
    }
   }
   e.setUILocale = lt;
   function ft(e, t) {
    var n = st || (st = ot(ct));
    return n(e, t);
   }
   e.compareStringsCaseSensitiveUI = ft;
   function dt(e, t, n, r) {
    return e === t ? 0 : e === undefined ? -1 : t === undefined ? 1 : r(e[n], t[n]);
   }
   e.compareProperties = dt;
   function pt(e, t) {
    return tt(e ? 1 : 0, t ? 1 : 0);
   }
   e.compareBooleans = pt;
   function mt(e, t, n) {
    var r = Math.min(2, Math.floor(e.length * .34));
    var i = Math.floor(e.length * .4) + 1;
    var a;
    var o = false;
    var s = e.toLowerCase();
    for (var c = 0, u = t; c < u.length; c++) {
     var l = u[c];
     var f = n(l);
     if (f !== undefined && Math.abs(f.length - s.length) <= r) {
      var d = f.toLowerCase();
      if (d === s) {
       if (f === e) {
        continue;
       }
       return l;
      }
      if (o) {
       continue;
      }
      if (f.length < 3) {
       continue;
      }
      var p = _t(s, d, i - 1);
      if (p === undefined) {
       continue;
      }
      if (p < 3) {
       o = true;
       a = l;
      } else {
       Xe.assert(p < i);
       i = p;
       a = l;
      }
     }
    }
    return a;
   }
   e.getSpellingSuggestion = mt;
   function _t(e, t, n) {
    var r = new Array(t.length + 1);
    var i = new Array(t.length + 1);
    var a = n + 1;
    for (var o = 0; o <= t.length; o++) {
     r[o] = o;
    }
    for (var o = 1; o <= e.length; o++) {
     var s = e.charCodeAt(o - 1);
     var c = o > n ? o - n : 1;
     var u = t.length > n + o ? n + o : t.length;
     i[0] = o;
     var l = o;
     for (var f = 1; f < c; f++) {
      i[f] = a;
     }
     for (var f = c; f <= u; f++) {
      var d = s === t.charCodeAt(f - 1) ? r[f - 1] : Math.min(r[f] + 1, i[f - 1] + 1, r[f - 1] + 2);
      i[f] = d;
      l = Math.min(l, d);
     }
     for (var f = u + 1; f <= t.length; f++) {
      i[f] = a;
     }
     if (l > n) {
      return undefined;
     }
     var p = r;
     r = i;
     i = p;
    }
    var m = r[t.length];
    return m > n ? undefined : m;
   }
   function gt(e, t) {
    var n = e.length - t.length;
    return n >= 0 && e.indexOf(t, n) === n;
   }
   e.endsWith = gt;
   function ht(e, t) {
    return gt(e, t) ? e.slice(0, e.length - t.length) : e;
   }
   e.removeSuffix = ht;
   function vt(e, t) {
    return gt(e, t) ? e.slice(0, e.length - t.length) : undefined;
   }
   e.tryRemoveSuffix = vt;
   function yt(e, t) {
    return e.indexOf(t) !== -1;
   }
   e.stringContains = yt;
   function bt(e, t) {
    return e.length > t.length && gt(e, t);
   }
   e.fileExtensionIs = bt;
   function xt(e, t) {
    for (var n = 0, r = t; n < r.length; n++) {
     var i = r[n];
     if (bt(e, i)) {
      return true;
     }
    }
    return false;
   }
   e.fileExtensionIsOneOf = xt;
   function kt(e) {
    var t = /[.-]((min)|(\d+(\.\d+)*))$/;
    return e.replace(t, "").replace(t, "");
   }
   e.removeMinAndVersionNumbers = kt;
   function St(e, t) {
    for (var n = 0; n < e.length; n++) {
     if (e[n] === t) {
      wt(e, n);
      return true;
     }
    }
    return false;
   }
   e.orderedRemoveItem = St;
   function wt(e, t) {
    for (var n = t; n < e.length - 1; n++) {
     e[n] = e[n + 1];
    }
    e.pop();
   }
   e.orderedRemoveItemAt = wt;
   function Ct(e, t) {
    e[t] = e[e.length - 1];
    e.pop();
   }
   e.unorderedRemoveItemAt = Ct;
   function Dt(e, t) {
    return Tt(e, function(e) {
     return e === t;
    });
   }
   e.unorderedRemoveItem = Dt;
   function Tt(e, t) {
    for (var n = 0; n < e.length; n++) {
     if (t(e[n])) {
      Ct(e, n);
      return true;
     }
    }
    return false;
   }
   function Et(e) {
    return e ? Je : Ke;
   }
   e.createGetCanonicalFileName = Et;
   function Nt(e) {
    var t = e.prefix, n = e.suffix;
    return t + "*" + n;
   }
   e.patternText = Nt;
   function At(e, t) {
    Xe.assert(Mt(e, t));
    return t.substring(e.prefix.length, t.length - e.suffix.length);
   }
   e.matchedText = At;
   function Ft(e, t, n) {
    var r;
    var i = -1;
    for (var a = 0, o = e; a < o.length; a++) {
     var s = o[a];
     var c = t(s);
     if (Mt(c, n) && c.prefix.length > i) {
      i = c.prefix.length;
      r = s;
     }
    }
    return r;
   }
   e.findBestPatternMatch = Ft;
   function Pt(e, t) {
    return e.lastIndexOf(t, 0) === 0;
   }
   e.startsWith = Pt;
   function It(e, t) {
    return Pt(e, t) ? e.substr(t.length) : e;
   }
   e.removePrefix = It;
   function Ot(e, t, n) {
    if (n === void 0) {
     n = Je;
    }
    return Pt(n(e), n(t)) ? e.substring(t.length) : undefined;
   }
   e.tryRemovePrefix = Ot;
   function Mt(e, t) {
    var n = e.prefix, r = e.suffix;
    return t.length >= n.length + r.length && Pt(t, n) && gt(t, r);
   }
   function Lt(e, t) {
    return function(n) {
     return e(n) && t(n);
    };
   }
   e.and = Lt;
   function Rt(e, t) {
    return function(n) {
     return e(n) || t(n);
    };
   }
   e.or = Rt;
   function Bt(e) {}
   e.assertTypeIsNever = Bt;
   function zt(e) {
    return e === undefined ? undefined : [ e ];
   }
   e.singleElementArray = zt;
   function jt(e, t, n, r, i, a) {
    a = a || je;
    var o = 0;
    var s = 0;
    var c = e.length;
    var u = t.length;
    while (o < c && s < u) {
     var l = e[o];
     var f = t[s];
     var d = n(l, f);
     if (d === -1) {
      r(l);
      o++;
     } else if (d === 1) {
      i(f);
      s++;
     } else {
      a(f, l);
      o++;
      s++;
     }
    }
    while (o < c) {
     r(e[o++]);
    }
    while (s < u) {
     i(t[s++]);
    }
   }
   e.enumerateInsertsAndDeletes = jt;
  })(s || (s = {}));
  var s;
  (function(e) {
   e.timestamp = typeof performance !== "undefined" && performance.now ? function() {
    return performance.now();
   } : Date.now ? Date.now : function() {
    return +new Date();
   };
  })(s || (s = {}));
  (function(e) {
   var t;
   (function(t) {
    var n = typeof onProfilerEvent === "function" && onProfilerEvent.profiler === true ? onProfilerEvent : function() {};
    var r = false;
    var i = 0;
    var a;
    var o;
    var s;
    function c(t) {
     if (r) {
      o.set(t, e.timestamp());
      a.set(t, (a.get(t) || 0) + 1);
      n(t);
     }
    }
    t.mark = c;
    function u(t, n, a) {
     if (r) {
      var c = a && o.get(a) || e.timestamp();
      var u = n && o.get(n) || i;
      s.set(t, (s.get(t) || 0) + (c - u));
     }
    }
    t.measure = u;
    function l(e) {
     return a && a.get(e) || 0;
    }
    t.getCount = l;
    function f(e) {
     return s && s.get(e) || 0;
    }
    t.getDuration = f;
    function d(e) {
     s.forEach(function(t, n) {
      e(n, t);
     });
    }
    t.forEachMeasure = d;
    function p() {
     a = e.createMap();
     o = e.createMap();
     s = e.createMap();
     r = true;
     i = e.timestamp();
    }
    t.enable = p;
    function m() {
     r = false;
    }
    t.disable = m;
   })(t = e.performance || (e.performance = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(e) {
    e[e["Unknown"] = 0] = "Unknown";
    e[e["EndOfFileToken"] = 1] = "EndOfFileToken";
    e[e["SingleLineCommentTrivia"] = 2] = "SingleLineCommentTrivia";
    e[e["MultiLineCommentTrivia"] = 3] = "MultiLineCommentTrivia";
    e[e["NewLineTrivia"] = 4] = "NewLineTrivia";
    e[e["WhitespaceTrivia"] = 5] = "WhitespaceTrivia";
    e[e["ShebangTrivia"] = 6] = "ShebangTrivia";
    e[e["ConflictMarkerTrivia"] = 7] = "ConflictMarkerTrivia";
    e[e["NumericLiteral"] = 8] = "NumericLiteral";
    e[e["StringLiteral"] = 9] = "StringLiteral";
    e[e["JsxText"] = 10] = "JsxText";
    e[e["JsxTextAllWhiteSpaces"] = 11] = "JsxTextAllWhiteSpaces";
    e[e["RegularExpressionLiteral"] = 12] = "RegularExpressionLiteral";
    e[e["NoSubstitutionTemplateLiteral"] = 13] = "NoSubstitutionTemplateLiteral";
    e[e["TemplateHead"] = 14] = "TemplateHead";
    e[e["TemplateMiddle"] = 15] = "TemplateMiddle";
    e[e["TemplateTail"] = 16] = "TemplateTail";
    e[e["OpenBraceToken"] = 17] = "OpenBraceToken";
    e[e["CloseBraceToken"] = 18] = "CloseBraceToken";
    e[e["OpenParenToken"] = 19] = "OpenParenToken";
    e[e["CloseParenToken"] = 20] = "CloseParenToken";
    e[e["OpenBracketToken"] = 21] = "OpenBracketToken";
    e[e["CloseBracketToken"] = 22] = "CloseBracketToken";
    e[e["DotToken"] = 23] = "DotToken";
    e[e["DotDotDotToken"] = 24] = "DotDotDotToken";
    e[e["SemicolonToken"] = 25] = "SemicolonToken";
    e[e["CommaToken"] = 26] = "CommaToken";
    e[e["LessThanToken"] = 27] = "LessThanToken";
    e[e["LessThanSlashToken"] = 28] = "LessThanSlashToken";
    e[e["GreaterThanToken"] = 29] = "GreaterThanToken";
    e[e["LessThanEqualsToken"] = 30] = "LessThanEqualsToken";
    e[e["GreaterThanEqualsToken"] = 31] = "GreaterThanEqualsToken";
    e[e["EqualsEqualsToken"] = 32] = "EqualsEqualsToken";
    e[e["ExclamationEqualsToken"] = 33] = "ExclamationEqualsToken";
    e[e["EqualsEqualsEqualsToken"] = 34] = "EqualsEqualsEqualsToken";
    e[e["ExclamationEqualsEqualsToken"] = 35] = "ExclamationEqualsEqualsToken";
    e[e["EqualsGreaterThanToken"] = 36] = "EqualsGreaterThanToken";
    e[e["PlusToken"] = 37] = "PlusToken";
    e[e["MinusToken"] = 38] = "MinusToken";
    e[e["AsteriskToken"] = 39] = "AsteriskToken";
    e[e["AsteriskAsteriskToken"] = 40] = "AsteriskAsteriskToken";
    e[e["SlashToken"] = 41] = "SlashToken";
    e[e["PercentToken"] = 42] = "PercentToken";
    e[e["PlusPlusToken"] = 43] = "PlusPlusToken";
    e[e["MinusMinusToken"] = 44] = "MinusMinusToken";
    e[e["LessThanLessThanToken"] = 45] = "LessThanLessThanToken";
    e[e["GreaterThanGreaterThanToken"] = 46] = "GreaterThanGreaterThanToken";
    e[e["GreaterThanGreaterThanGreaterThanToken"] = 47] = "GreaterThanGreaterThanGreaterThanToken";
    e[e["AmpersandToken"] = 48] = "AmpersandToken";
    e[e["BarToken"] = 49] = "BarToken";
    e[e["CaretToken"] = 50] = "CaretToken";
    e[e["ExclamationToken"] = 51] = "ExclamationToken";
    e[e["TildeToken"] = 52] = "TildeToken";
    e[e["AmpersandAmpersandToken"] = 53] = "AmpersandAmpersandToken";
    e[e["BarBarToken"] = 54] = "BarBarToken";
    e[e["QuestionToken"] = 55] = "QuestionToken";
    e[e["ColonToken"] = 56] = "ColonToken";
    e[e["AtToken"] = 57] = "AtToken";
    e[e["EqualsToken"] = 58] = "EqualsToken";
    e[e["PlusEqualsToken"] = 59] = "PlusEqualsToken";
    e[e["MinusEqualsToken"] = 60] = "MinusEqualsToken";
    e[e["AsteriskEqualsToken"] = 61] = "AsteriskEqualsToken";
    e[e["AsteriskAsteriskEqualsToken"] = 62] = "AsteriskAsteriskEqualsToken";
    e[e["SlashEqualsToken"] = 63] = "SlashEqualsToken";
    e[e["PercentEqualsToken"] = 64] = "PercentEqualsToken";
    e[e["LessThanLessThanEqualsToken"] = 65] = "LessThanLessThanEqualsToken";
    e[e["GreaterThanGreaterThanEqualsToken"] = 66] = "GreaterThanGreaterThanEqualsToken";
    e[e["GreaterThanGreaterThanGreaterThanEqualsToken"] = 67] = "GreaterThanGreaterThanGreaterThanEqualsToken";
    e[e["AmpersandEqualsToken"] = 68] = "AmpersandEqualsToken";
    e[e["BarEqualsToken"] = 69] = "BarEqualsToken";
    e[e["CaretEqualsToken"] = 70] = "CaretEqualsToken";
    e[e["Identifier"] = 71] = "Identifier";
    e[e["BreakKeyword"] = 72] = "BreakKeyword";
    e[e["CaseKeyword"] = 73] = "CaseKeyword";
    e[e["CatchKeyword"] = 74] = "CatchKeyword";
    e[e["ClassKeyword"] = 75] = "ClassKeyword";
    e[e["ConstKeyword"] = 76] = "ConstKeyword";
    e[e["ContinueKeyword"] = 77] = "ContinueKeyword";
    e[e["DebuggerKeyword"] = 78] = "DebuggerKeyword";
    e[e["DefaultKeyword"] = 79] = "DefaultKeyword";
    e[e["DeleteKeyword"] = 80] = "DeleteKeyword";
    e[e["DoKeyword"] = 81] = "DoKeyword";
    e[e["ElseKeyword"] = 82] = "ElseKeyword";
    e[e["EnumKeyword"] = 83] = "EnumKeyword";
    e[e["ExportKeyword"] = 84] = "ExportKeyword";
    e[e["ExtendsKeyword"] = 85] = "ExtendsKeyword";
    e[e["FalseKeyword"] = 86] = "FalseKeyword";
    e[e["FinallyKeyword"] = 87] = "FinallyKeyword";
    e[e["ForKeyword"] = 88] = "ForKeyword";
    e[e["FunctionKeyword"] = 89] = "FunctionKeyword";
    e[e["IfKeyword"] = 90] = "IfKeyword";
    e[e["ImportKeyword"] = 91] = "ImportKeyword";
    e[e["InKeyword"] = 92] = "InKeyword";
    e[e["InstanceOfKeyword"] = 93] = "InstanceOfKeyword";
    e[e["NewKeyword"] = 94] = "NewKeyword";
    e[e["NullKeyword"] = 95] = "NullKeyword";
    e[e["ReturnKeyword"] = 96] = "ReturnKeyword";
    e[e["SuperKeyword"] = 97] = "SuperKeyword";
    e[e["SwitchKeyword"] = 98] = "SwitchKeyword";
    e[e["ThisKeyword"] = 99] = "ThisKeyword";
    e[e["ThrowKeyword"] = 100] = "ThrowKeyword";
    e[e["TrueKeyword"] = 101] = "TrueKeyword";
    e[e["TryKeyword"] = 102] = "TryKeyword";
    e[e["TypeOfKeyword"] = 103] = "TypeOfKeyword";
    e[e["VarKeyword"] = 104] = "VarKeyword";
    e[e["VoidKeyword"] = 105] = "VoidKeyword";
    e[e["WhileKeyword"] = 106] = "WhileKeyword";
    e[e["WithKeyword"] = 107] = "WithKeyword";
    e[e["ImplementsKeyword"] = 108] = "ImplementsKeyword";
    e[e["InterfaceKeyword"] = 109] = "InterfaceKeyword";
    e[e["LetKeyword"] = 110] = "LetKeyword";
    e[e["PackageKeyword"] = 111] = "PackageKeyword";
    e[e["PrivateKeyword"] = 112] = "PrivateKeyword";
    e[e["ProtectedKeyword"] = 113] = "ProtectedKeyword";
    e[e["PublicKeyword"] = 114] = "PublicKeyword";
    e[e["StaticKeyword"] = 115] = "StaticKeyword";
    e[e["YieldKeyword"] = 116] = "YieldKeyword";
    e[e["AbstractKeyword"] = 117] = "AbstractKeyword";
    e[e["AsKeyword"] = 118] = "AsKeyword";
    e[e["AnyKeyword"] = 119] = "AnyKeyword";
    e[e["AsyncKeyword"] = 120] = "AsyncKeyword";
    e[e["AwaitKeyword"] = 121] = "AwaitKeyword";
    e[e["BooleanKeyword"] = 122] = "BooleanKeyword";
    e[e["ConstructorKeyword"] = 123] = "ConstructorKeyword";
    e[e["DeclareKeyword"] = 124] = "DeclareKeyword";
    e[e["GetKeyword"] = 125] = "GetKeyword";
    e[e["InferKeyword"] = 126] = "InferKeyword";
    e[e["IsKeyword"] = 127] = "IsKeyword";
    e[e["KeyOfKeyword"] = 128] = "KeyOfKeyword";
    e[e["ModuleKeyword"] = 129] = "ModuleKeyword";
    e[e["NamespaceKeyword"] = 130] = "NamespaceKeyword";
    e[e["NeverKeyword"] = 131] = "NeverKeyword";
    e[e["ReadonlyKeyword"] = 132] = "ReadonlyKeyword";
    e[e["RequireKeyword"] = 133] = "RequireKeyword";
    e[e["NumberKeyword"] = 134] = "NumberKeyword";
    e[e["ObjectKeyword"] = 135] = "ObjectKeyword";
    e[e["SetKeyword"] = 136] = "SetKeyword";
    e[e["StringKeyword"] = 137] = "StringKeyword";
    e[e["SymbolKeyword"] = 138] = "SymbolKeyword";
    e[e["TypeKeyword"] = 139] = "TypeKeyword";
    e[e["UndefinedKeyword"] = 140] = "UndefinedKeyword";
    e[e["UniqueKeyword"] = 141] = "UniqueKeyword";
    e[e["UnknownKeyword"] = 142] = "UnknownKeyword";
    e[e["FromKeyword"] = 143] = "FromKeyword";
    e[e["GlobalKeyword"] = 144] = "GlobalKeyword";
    e[e["OfKeyword"] = 145] = "OfKeyword";
    e[e["QualifiedName"] = 146] = "QualifiedName";
    e[e["ComputedPropertyName"] = 147] = "ComputedPropertyName";
    e[e["TypeParameter"] = 148] = "TypeParameter";
    e[e["Parameter"] = 149] = "Parameter";
    e[e["Decorator"] = 150] = "Decorator";
    e[e["PropertySignature"] = 151] = "PropertySignature";
    e[e["PropertyDeclaration"] = 152] = "PropertyDeclaration";
    e[e["MethodSignature"] = 153] = "MethodSignature";
    e[e["MethodDeclaration"] = 154] = "MethodDeclaration";
    e[e["Constructor"] = 155] = "Constructor";
    e[e["GetAccessor"] = 156] = "GetAccessor";
    e[e["SetAccessor"] = 157] = "SetAccessor";
    e[e["CallSignature"] = 158] = "CallSignature";
    e[e["ConstructSignature"] = 159] = "ConstructSignature";
    e[e["IndexSignature"] = 160] = "IndexSignature";
    e[e["TypePredicate"] = 161] = "TypePredicate";
    e[e["TypeReference"] = 162] = "TypeReference";
    e[e["FunctionType"] = 163] = "FunctionType";
    e[e["ConstructorType"] = 164] = "ConstructorType";
    e[e["TypeQuery"] = 165] = "TypeQuery";
    e[e["TypeLiteral"] = 166] = "TypeLiteral";
    e[e["ArrayType"] = 167] = "ArrayType";
    e[e["TupleType"] = 168] = "TupleType";
    e[e["OptionalType"] = 169] = "OptionalType";
    e[e["RestType"] = 170] = "RestType";
    e[e["UnionType"] = 171] = "UnionType";
    e[e["IntersectionType"] = 172] = "IntersectionType";
    e[e["ConditionalType"] = 173] = "ConditionalType";
    e[e["InferType"] = 174] = "InferType";
    e[e["ParenthesizedType"] = 175] = "ParenthesizedType";
    e[e["ThisType"] = 176] = "ThisType";
    e[e["TypeOperator"] = 177] = "TypeOperator";
    e[e["IndexedAccessType"] = 178] = "IndexedAccessType";
    e[e["MappedType"] = 179] = "MappedType";
    e[e["LiteralType"] = 180] = "LiteralType";
    e[e["ImportType"] = 181] = "ImportType";
    e[e["ObjectBindingPattern"] = 182] = "ObjectBindingPattern";
    e[e["ArrayBindingPattern"] = 183] = "ArrayBindingPattern";
    e[e["BindingElement"] = 184] = "BindingElement";
    e[e["ArrayLiteralExpression"] = 185] = "ArrayLiteralExpression";
    e[e["ObjectLiteralExpression"] = 186] = "ObjectLiteralExpression";
    e[e["PropertyAccessExpression"] = 187] = "PropertyAccessExpression";
    e[e["ElementAccessExpression"] = 188] = "ElementAccessExpression";
    e[e["CallExpression"] = 189] = "CallExpression";
    e[e["NewExpression"] = 190] = "NewExpression";
    e[e["TaggedTemplateExpression"] = 191] = "TaggedTemplateExpression";
    e[e["TypeAssertionExpression"] = 192] = "TypeAssertionExpression";
    e[e["ParenthesizedExpression"] = 193] = "ParenthesizedExpression";
    e[e["FunctionExpression"] = 194] = "FunctionExpression";
    e[e["ArrowFunction"] = 195] = "ArrowFunction";
    e[e["DeleteExpression"] = 196] = "DeleteExpression";
    e[e["TypeOfExpression"] = 197] = "TypeOfExpression";
    e[e["VoidExpression"] = 198] = "VoidExpression";
    e[e["AwaitExpression"] = 199] = "AwaitExpression";
    e[e["PrefixUnaryExpression"] = 200] = "PrefixUnaryExpression";
    e[e["PostfixUnaryExpression"] = 201] = "PostfixUnaryExpression";
    e[e["BinaryExpression"] = 202] = "BinaryExpression";
    e[e["ConditionalExpression"] = 203] = "ConditionalExpression";
    e[e["TemplateExpression"] = 204] = "TemplateExpression";
    e[e["YieldExpression"] = 205] = "YieldExpression";
    e[e["SpreadElement"] = 206] = "SpreadElement";
    e[e["ClassExpression"] = 207] = "ClassExpression";
    e[e["OmittedExpression"] = 208] = "OmittedExpression";
    e[e["ExpressionWithTypeArguments"] = 209] = "ExpressionWithTypeArguments";
    e[e["AsExpression"] = 210] = "AsExpression";
    e[e["NonNullExpression"] = 211] = "NonNullExpression";
    e[e["MetaProperty"] = 212] = "MetaProperty";
    e[e["SyntheticExpression"] = 213] = "SyntheticExpression";
    e[e["TemplateSpan"] = 214] = "TemplateSpan";
    e[e["SemicolonClassElement"] = 215] = "SemicolonClassElement";
    e[e["Block"] = 216] = "Block";
    e[e["VariableStatement"] = 217] = "VariableStatement";
    e[e["EmptyStatement"] = 218] = "EmptyStatement";
    e[e["ExpressionStatement"] = 219] = "ExpressionStatement";
    e[e["IfStatement"] = 220] = "IfStatement";
    e[e["DoStatement"] = 221] = "DoStatement";
    e[e["WhileStatement"] = 222] = "WhileStatement";
    e[e["ForStatement"] = 223] = "ForStatement";
    e[e["ForInStatement"] = 224] = "ForInStatement";
    e[e["ForOfStatement"] = 225] = "ForOfStatement";
    e[e["ContinueStatement"] = 226] = "ContinueStatement";
    e[e["BreakStatement"] = 227] = "BreakStatement";
    e[e["ReturnStatement"] = 228] = "ReturnStatement";
    e[e["WithStatement"] = 229] = "WithStatement";
    e[e["SwitchStatement"] = 230] = "SwitchStatement";
    e[e["LabeledStatement"] = 231] = "LabeledStatement";
    e[e["ThrowStatement"] = 232] = "ThrowStatement";
    e[e["TryStatement"] = 233] = "TryStatement";
    e[e["DebuggerStatement"] = 234] = "DebuggerStatement";
    e[e["VariableDeclaration"] = 235] = "VariableDeclaration";
    e[e["VariableDeclarationList"] = 236] = "VariableDeclarationList";
    e[e["FunctionDeclaration"] = 237] = "FunctionDeclaration";
    e[e["ClassDeclaration"] = 238] = "ClassDeclaration";
    e[e["InterfaceDeclaration"] = 239] = "InterfaceDeclaration";
    e[e["TypeAliasDeclaration"] = 240] = "TypeAliasDeclaration";
    e[e["EnumDeclaration"] = 241] = "EnumDeclaration";
    e[e["ModuleDeclaration"] = 242] = "ModuleDeclaration";
    e[e["ModuleBlock"] = 243] = "ModuleBlock";
    e[e["CaseBlock"] = 244] = "CaseBlock";
    e[e["NamespaceExportDeclaration"] = 245] = "NamespaceExportDeclaration";
    e[e["ImportEqualsDeclaration"] = 246] = "ImportEqualsDeclaration";
    e[e["ImportDeclaration"] = 247] = "ImportDeclaration";
    e[e["ImportClause"] = 248] = "ImportClause";
    e[e["NamespaceImport"] = 249] = "NamespaceImport";
    e[e["NamedImports"] = 250] = "NamedImports";
    e[e["ImportSpecifier"] = 251] = "ImportSpecifier";
    e[e["ExportAssignment"] = 252] = "ExportAssignment";
    e[e["ExportDeclaration"] = 253] = "ExportDeclaration";
    e[e["NamedExports"] = 254] = "NamedExports";
    e[e["ExportSpecifier"] = 255] = "ExportSpecifier";
    e[e["MissingDeclaration"] = 256] = "MissingDeclaration";
    e[e["ExternalModuleReference"] = 257] = "ExternalModuleReference";
    e[e["JsxElement"] = 258] = "JsxElement";
    e[e["JsxSelfClosingElement"] = 259] = "JsxSelfClosingElement";
    e[e["JsxOpeningElement"] = 260] = "JsxOpeningElement";
    e[e["JsxClosingElement"] = 261] = "JsxClosingElement";
    e[e["JsxFragment"] = 262] = "JsxFragment";
    e[e["JsxOpeningFragment"] = 263] = "JsxOpeningFragment";
    e[e["JsxClosingFragment"] = 264] = "JsxClosingFragment";
    e[e["JsxAttribute"] = 265] = "JsxAttribute";
    e[e["JsxAttributes"] = 266] = "JsxAttributes";
    e[e["JsxSpreadAttribute"] = 267] = "JsxSpreadAttribute";
    e[e["JsxExpression"] = 268] = "JsxExpression";
    e[e["CaseClause"] = 269] = "CaseClause";
    e[e["DefaultClause"] = 270] = "DefaultClause";
    e[e["HeritageClause"] = 271] = "HeritageClause";
    e[e["CatchClause"] = 272] = "CatchClause";
    e[e["PropertyAssignment"] = 273] = "PropertyAssignment";
    e[e["ShorthandPropertyAssignment"] = 274] = "ShorthandPropertyAssignment";
    e[e["SpreadAssignment"] = 275] = "SpreadAssignment";
    e[e["EnumMember"] = 276] = "EnumMember";
    e[e["SourceFile"] = 277] = "SourceFile";
    e[e["Bundle"] = 278] = "Bundle";
    e[e["UnparsedSource"] = 279] = "UnparsedSource";
    e[e["InputFiles"] = 280] = "InputFiles";
    e[e["JSDocTypeExpression"] = 281] = "JSDocTypeExpression";
    e[e["JSDocAllType"] = 282] = "JSDocAllType";
    e[e["JSDocUnknownType"] = 283] = "JSDocUnknownType";
    e[e["JSDocNullableType"] = 284] = "JSDocNullableType";
    e[e["JSDocNonNullableType"] = 285] = "JSDocNonNullableType";
    e[e["JSDocOptionalType"] = 286] = "JSDocOptionalType";
    e[e["JSDocFunctionType"] = 287] = "JSDocFunctionType";
    e[e["JSDocVariadicType"] = 288] = "JSDocVariadicType";
    e[e["JSDocComment"] = 289] = "JSDocComment";
    e[e["JSDocTypeLiteral"] = 290] = "JSDocTypeLiteral";
    e[e["JSDocSignature"] = 291] = "JSDocSignature";
    e[e["JSDocTag"] = 292] = "JSDocTag";
    e[e["JSDocAugmentsTag"] = 293] = "JSDocAugmentsTag";
    e[e["JSDocClassTag"] = 294] = "JSDocClassTag";
    e[e["JSDocCallbackTag"] = 295] = "JSDocCallbackTag";
    e[e["JSDocParameterTag"] = 296] = "JSDocParameterTag";
    e[e["JSDocReturnTag"] = 297] = "JSDocReturnTag";
    e[e["JSDocThisTag"] = 298] = "JSDocThisTag";
    e[e["JSDocTypeTag"] = 299] = "JSDocTypeTag";
    e[e["JSDocTemplateTag"] = 300] = "JSDocTemplateTag";
    e[e["JSDocTypedefTag"] = 301] = "JSDocTypedefTag";
    e[e["JSDocPropertyTag"] = 302] = "JSDocPropertyTag";
    e[e["SyntaxList"] = 303] = "SyntaxList";
    e[e["NotEmittedStatement"] = 304] = "NotEmittedStatement";
    e[e["PartiallyEmittedExpression"] = 305] = "PartiallyEmittedExpression";
    e[e["CommaListExpression"] = 306] = "CommaListExpression";
    e[e["MergeDeclarationMarker"] = 307] = "MergeDeclarationMarker";
    e[e["EndOfDeclarationMarker"] = 308] = "EndOfDeclarationMarker";
    e[e["Count"] = 309] = "Count";
    e[e["FirstAssignment"] = 58] = "FirstAssignment";
    e[e["LastAssignment"] = 70] = "LastAssignment";
    e[e["FirstCompoundAssignment"] = 59] = "FirstCompoundAssignment";
    e[e["LastCompoundAssignment"] = 70] = "LastCompoundAssignment";
    e[e["FirstReservedWord"] = 72] = "FirstReservedWord";
    e[e["LastReservedWord"] = 107] = "LastReservedWord";
    e[e["FirstKeyword"] = 72] = "FirstKeyword";
    e[e["LastKeyword"] = 145] = "LastKeyword";
    e[e["FirstFutureReservedWord"] = 108] = "FirstFutureReservedWord";
    e[e["LastFutureReservedWord"] = 116] = "LastFutureReservedWord";
    e[e["FirstTypeNode"] = 161] = "FirstTypeNode";
    e[e["LastTypeNode"] = 181] = "LastTypeNode";
    e[e["FirstPunctuation"] = 17] = "FirstPunctuation";
    e[e["LastPunctuation"] = 70] = "LastPunctuation";
    e[e["FirstToken"] = 0] = "FirstToken";
    e[e["LastToken"] = 145] = "LastToken";
    e[e["FirstTriviaToken"] = 2] = "FirstTriviaToken";
    e[e["LastTriviaToken"] = 7] = "LastTriviaToken";
    e[e["FirstLiteralToken"] = 8] = "FirstLiteralToken";
    e[e["LastLiteralToken"] = 13] = "LastLiteralToken";
    e[e["FirstTemplateToken"] = 13] = "FirstTemplateToken";
    e[e["LastTemplateToken"] = 16] = "LastTemplateToken";
    e[e["FirstBinaryOperator"] = 27] = "FirstBinaryOperator";
    e[e["LastBinaryOperator"] = 70] = "LastBinaryOperator";
    e[e["FirstNode"] = 146] = "FirstNode";
    e[e["FirstJSDocNode"] = 281] = "FirstJSDocNode";
    e[e["LastJSDocNode"] = 302] = "LastJSDocNode";
    e[e["FirstJSDocTagNode"] = 292] = "FirstJSDocTagNode";
    e[e["LastJSDocTagNode"] = 302] = "LastJSDocTagNode";
    e[e["FirstContextualKeyword"] = 117] = "FirstContextualKeyword";
    e[e["LastContextualKeyword"] = 145] = "LastContextualKeyword";
   })(t = e.SyntaxKind || (e.SyntaxKind = {}));
   var n;
   (function(e) {
    e[e["None"] = 0] = "None";
    e[e["Let"] = 1] = "Let";
    e[e["Const"] = 2] = "Const";
    e[e["NestedNamespace"] = 4] = "NestedNamespace";
    e[e["Synthesized"] = 8] = "Synthesized";
    e[e["Namespace"] = 16] = "Namespace";
    e[e["ExportContext"] = 32] = "ExportContext";
    e[e["ContainsThis"] = 64] = "ContainsThis";
    e[e["HasImplicitReturn"] = 128] = "HasImplicitReturn";
    e[e["HasExplicitReturn"] = 256] = "HasExplicitReturn";
    e[e["GlobalAugmentation"] = 512] = "GlobalAugmentation";
    e[e["HasAsyncFunctions"] = 1024] = "HasAsyncFunctions";
    e[e["DisallowInContext"] = 2048] = "DisallowInContext";
    e[e["YieldContext"] = 4096] = "YieldContext";
    e[e["DecoratorContext"] = 8192] = "DecoratorContext";
    e[e["AwaitContext"] = 16384] = "AwaitContext";
    e[e["ThisNodeHasError"] = 32768] = "ThisNodeHasError";
    e[e["JavaScriptFile"] = 65536] = "JavaScriptFile";
    e[e["ThisNodeOrAnySubNodesHasError"] = 131072] = "ThisNodeOrAnySubNodesHasError";
    e[e["HasAggregatedChildData"] = 262144] = "HasAggregatedChildData";
    e[e["PossiblyContainsDynamicImport"] = 524288] = "PossiblyContainsDynamicImport";
    e[e["PossiblyContainsImportMeta"] = 1048576] = "PossiblyContainsImportMeta";
    e[e["JSDoc"] = 2097152] = "JSDoc";
    e[e["Ambient"] = 4194304] = "Ambient";
    e[e["InWithStatement"] = 8388608] = "InWithStatement";
    e[e["JsonFile"] = 16777216] = "JsonFile";
    e[e["BlockScoped"] = 3] = "BlockScoped";
    e[e["ReachabilityCheckFlags"] = 384] = "ReachabilityCheckFlags";
    e[e["ReachabilityAndEmitFlags"] = 1408] = "ReachabilityAndEmitFlags";
    e[e["ContextFlags"] = 12679168] = "ContextFlags";
    e[e["TypeExcludesFlags"] = 20480] = "TypeExcludesFlags";
    e[e["PermanentlySetIncrementalFlags"] = 1572864] = "PermanentlySetIncrementalFlags";
   })(n = e.NodeFlags || (e.NodeFlags = {}));
   var r;
   (function(e) {
    e[e["None"] = 0] = "None";
    e[e["Export"] = 1] = "Export";
    e[e["Ambient"] = 2] = "Ambient";
    e[e["Public"] = 4] = "Public";
    e[e["Private"] = 8] = "Private";
    e[e["Protected"] = 16] = "Protected";
    e[e["Static"] = 32] = "Static";
    e[e["Readonly"] = 64] = "Readonly";
    e[e["Abstract"] = 128] = "Abstract";
    e[e["Async"] = 256] = "Async";
    e[e["Default"] = 512] = "Default";
    e[e["Const"] = 2048] = "Const";
    e[e["HasComputedFlags"] = 536870912] = "HasComputedFlags";
    e[e["AccessibilityModifier"] = 28] = "AccessibilityModifier";
    e[e["ParameterPropertyModifier"] = 92] = "ParameterPropertyModifier";
    e[e["NonPublicAccessibilityModifier"] = 24] = "NonPublicAccessibilityModifier";
    e[e["TypeScriptModifier"] = 2270] = "TypeScriptModifier";
    e[e["ExportDefault"] = 513] = "ExportDefault";
    e[e["All"] = 3071] = "All";
   })(r = e.ModifierFlags || (e.ModifierFlags = {}));
   var i;
   (function(e) {
    e[e["None"] = 0] = "None";
    e[e["IntrinsicNamedElement"] = 1] = "IntrinsicNamedElement";
    e[e["IntrinsicIndexedElement"] = 2] = "IntrinsicIndexedElement";
    e[e["IntrinsicElement"] = 3] = "IntrinsicElement";
   })(i = e.JsxFlags || (e.JsxFlags = {}));
   var a;
   (function(e) {
    e[e["Succeeded"] = 1] = "Succeeded";
    e[e["Failed"] = 2] = "Failed";
    e[e["FailedAndReported"] = 3] = "FailedAndReported";
   })(a = e.RelationComparisonResult || (e.RelationComparisonResult = {}));
   var o;
   (function(e) {
    e[e["None"] = 0] = "None";
    e[e["Auto"] = 1] = "Auto";
    e[e["Loop"] = 2] = "Loop";
    e[e["Unique"] = 3] = "Unique";
    e[e["Node"] = 4] = "Node";
    e[e["KindMask"] = 7] = "KindMask";
    e[e["ReservedInNestedScopes"] = 8] = "ReservedInNestedScopes";
    e[e["Optimistic"] = 16] = "Optimistic";
    e[e["FileLevel"] = 32] = "FileLevel";
   })(o = e.GeneratedIdentifierFlags || (e.GeneratedIdentifierFlags = {}));
   var s;
   (function(e) {
    e[e["None"] = 0] = "None";
    e[e["PrecedingLineBreak"] = 1] = "PrecedingLineBreak";
    e[e["PrecedingJSDocComment"] = 2] = "PrecedingJSDocComment";
    e[e["Unterminated"] = 4] = "Unterminated";
    e[e["ExtendedUnicodeEscape"] = 8] = "ExtendedUnicodeEscape";
    e[e["Scientific"] = 16] = "Scientific";
    e[e["Octal"] = 32] = "Octal";
    e[e["HexSpecifier"] = 64] = "HexSpecifier";
    e[e["BinarySpecifier"] = 128] = "BinarySpecifier";
    e[e["OctalSpecifier"] = 256] = "OctalSpecifier";
    e[e["ContainsSeparator"] = 512] = "ContainsSeparator";
    e[e["BinaryOrOctalSpecifier"] = 384] = "BinaryOrOctalSpecifier";
    e[e["NumericLiteralFlags"] = 1008] = "NumericLiteralFlags";
   })(s = e.TokenFlags || (e.TokenFlags = {}));
   var c;
   (function(e) {
    e[e["Unreachable"] = 1] = "Unreachable";
    e[e["Start"] = 2] = "Start";
    e[e["BranchLabel"] = 4] = "BranchLabel";
    e[e["LoopLabel"] = 8] = "LoopLabel";
    e[e["Assignment"] = 16] = "Assignment";
    e[e["TrueCondition"] = 32] = "TrueCondition";
    e[e["FalseCondition"] = 64] = "FalseCondition";
    e[e["SwitchClause"] = 128] = "SwitchClause";
    e[e["ArrayMutation"] = 256] = "ArrayMutation";
    e[e["Referenced"] = 512] = "Referenced";
    e[e["Shared"] = 1024] = "Shared";
    e[e["PreFinally"] = 2048] = "PreFinally";
    e[e["AfterFinally"] = 4096] = "AfterFinally";
    e[e["Label"] = 12] = "Label";
    e[e["Condition"] = 96] = "Condition";
   })(c = e.FlowFlags || (e.FlowFlags = {}));
   var u = function() {
    function e() {}
    return e;
   }();
   e.OperationCanceledException = u;
   var l;
   (function(e) {
    e[e["Not"] = 0] = "Not";
    e[e["SafeModules"] = 1] = "SafeModules";
    e[e["Completely"] = 2] = "Completely";
   })(l = e.StructureIsReused || (e.StructureIsReused = {}));
   var f;
   (function(e) {
    e[e["Success"] = 0] = "Success";
    e[e["DiagnosticsPresent_OutputsSkipped"] = 1] = "DiagnosticsPresent_OutputsSkipped";
    e[e["DiagnosticsPresent_OutputsGenerated"] = 2] = "DiagnosticsPresent_OutputsGenerated";
   })(f = e.ExitStatus || (e.ExitStatus = {}));
   var d;
   (function(e) {
    e[e["None"] = 0] = "None";
    e[e["Literal"] = 1] = "Literal";
    e[e["Subtype"] = 2] = "Subtype";
   })(d = e.UnionReduction || (e.UnionReduction = {}));
   var p;
   (function(e) {
    e[e["None"] = 0] = "None";
    e[e["NoTruncation"] = 1] = "NoTruncation";
    e[e["WriteArrayAsGenericType"] = 2] = "WriteArrayAsGenericType";
    e[e["GenerateNamesForShadowedTypeParams"] = 4] = "GenerateNamesForShadowedTypeParams";
    e[e["UseStructuralFallback"] = 8] = "UseStructuralFallback";
    e[e["ForbidIndexedAccessSymbolReferences"] = 16] = "ForbidIndexedAccessSymbolReferences";
    e[e["WriteTypeArgumentsOfSignature"] = 32] = "WriteTypeArgumentsOfSignature";
    e[e["UseFullyQualifiedType"] = 64] = "UseFullyQualifiedType";
    e[e["UseOnlyExternalAliasing"] = 128] = "UseOnlyExternalAliasing";
    e[e["SuppressAnyReturnType"] = 256] = "SuppressAnyReturnType";
    e[e["WriteTypeParametersInQualifiedName"] = 512] = "WriteTypeParametersInQualifiedName";
    e[e["MultilineObjectLiterals"] = 1024] = "MultilineObjectLiterals";
    e[e["WriteClassExpressionAsTypeLiteral"] = 2048] = "WriteClassExpressionAsTypeLiteral";
    e[e["UseTypeOfFunction"] = 4096] = "UseTypeOfFunction";
    e[e["OmitParameterModifiers"] = 8192] = "OmitParameterModifiers";
    e[e["UseAliasDefinedOutsideCurrentScope"] = 16384] = "UseAliasDefinedOutsideCurrentScope";
    e[e["AllowThisInObjectLiteral"] = 32768] = "AllowThisInObjectLiteral";
    e[e["AllowQualifedNameInPlaceOfIdentifier"] = 65536] = "AllowQualifedNameInPlaceOfIdentifier";
    e[e["AllowAnonymousIdentifier"] = 131072] = "AllowAnonymousIdentifier";
    e[e["AllowEmptyUnionOrIntersection"] = 262144] = "AllowEmptyUnionOrIntersection";
    e[e["AllowEmptyTuple"] = 524288] = "AllowEmptyTuple";
    e[e["AllowUniqueESSymbolType"] = 1048576] = "AllowUniqueESSymbolType";
    e[e["AllowEmptyIndexInfoType"] = 2097152] = "AllowEmptyIndexInfoType";
    e[e["IgnoreErrors"] = 3112960] = "IgnoreErrors";
    e[e["InObjectTypeLiteral"] = 4194304] = "InObjectTypeLiteral";
    e[e["InTypeAlias"] = 8388608] = "InTypeAlias";
    e[e["InInitialEntityName"] = 16777216] = "InInitialEntityName";
    e[e["InReverseMappedType"] = 33554432] = "InReverseMappedType";
   })(p = e.NodeBuilderFlags || (e.NodeBuilderFlags = {}));
   var m;
   (function(e) {
    e[e["None"] = 0] = "None";
    e[e["NoTruncation"] = 1] = "NoTruncation";
    e[e["WriteArrayAsGenericType"] = 2] = "WriteArrayAsGenericType";
    e[e["UseStructuralFallback"] = 8] = "UseStructuralFallback";
    e[e["WriteTypeArgumentsOfSignature"] = 32] = "WriteTypeArgumentsOfSignature";
    e[e["UseFullyQualifiedType"] = 64] = "UseFullyQualifiedType";
    e[e["SuppressAnyReturnType"] = 256] = "SuppressAnyReturnType";
    e[e["MultilineObjectLiterals"] = 1024] = "MultilineObjectLiterals";
    e[e["WriteClassExpressionAsTypeLiteral"] = 2048] = "WriteClassExpressionAsTypeLiteral";
    e[e["UseTypeOfFunction"] = 4096] = "UseTypeOfFunction";
    e[e["OmitParameterModifiers"] = 8192] = "OmitParameterModifiers";
    e[e["UseAliasDefinedOutsideCurrentScope"] = 16384] = "UseAliasDefinedOutsideCurrentScope";
    e[e["AllowUniqueESSymbolType"] = 1048576] = "AllowUniqueESSymbolType";
    e[e["AddUndefined"] = 131072] = "AddUndefined";
    e[e["WriteArrowStyleSignature"] = 262144] = "WriteArrowStyleSignature";
    e[e["InArrayType"] = 524288] = "InArrayType";
    e[e["InElementType"] = 2097152] = "InElementType";
    e[e["InFirstTypeArgument"] = 4194304] = "InFirstTypeArgument";
    e[e["InTypeAlias"] = 8388608] = "InTypeAlias";
    e[e["WriteOwnNameForAnyLike"] = 0] = "WriteOwnNameForAnyLike";
    e[e["NodeBuilderFlagsMask"] = 9469291] = "NodeBuilderFlagsMask";
   })(m = e.TypeFormatFlags || (e.TypeFormatFlags = {}));
   var _;
   (function(e) {
    e[e["None"] = 0] = "None";
    e[e["WriteTypeParametersOrArguments"] = 1] = "WriteTypeParametersOrArguments";
    e[e["UseOnlyExternalAliasing"] = 2] = "UseOnlyExternalAliasing";
    e[e["AllowAnyNodeKind"] = 4] = "AllowAnyNodeKind";
    e[e["UseAliasDefinedOutsideCurrentScope"] = 8] = "UseAliasDefinedOutsideCurrentScope";
   })(_ = e.SymbolFormatFlags || (e.SymbolFormatFlags = {}));
   var g;
   (function(e) {
    e[e["Accessible"] = 0] = "Accessible";
    e[e["NotAccessible"] = 1] = "NotAccessible";
    e[e["CannotBeNamed"] = 2] = "CannotBeNamed";
   })(g = e.SymbolAccessibility || (e.SymbolAccessibility = {}));
   var h;
   (function(e) {
    e[e["UnionOrIntersection"] = 0] = "UnionOrIntersection";
    e[e["Spread"] = 1] = "Spread";
   })(h = e.SyntheticSymbolKind || (e.SyntheticSymbolKind = {}));
   var v;
   (function(e) {
    e[e["This"] = 0] = "This";
    e[e["Identifier"] = 1] = "Identifier";
   })(v = e.TypePredicateKind || (e.TypePredicateKind = {}));
   var y;
   (function(e) {
    e[e["Unknown"] = 0] = "Unknown";
    e[e["TypeWithConstructSignatureAndValue"] = 1] = "TypeWithConstructSignatureAndValue";
    e[e["VoidNullableOrNeverType"] = 2] = "VoidNullableOrNeverType";
    e[e["NumberLikeType"] = 3] = "NumberLikeType";
    e[e["StringLikeType"] = 4] = "StringLikeType";
    e[e["BooleanType"] = 5] = "BooleanType";
    e[e["ArrayLikeType"] = 6] = "ArrayLikeType";
    e[e["ESSymbolType"] = 7] = "ESSymbolType";
    e[e["Promise"] = 8] = "Promise";
    e[e["TypeWithCallSignature"] = 9] = "TypeWithCallSignature";
    e[e["ObjectType"] = 10] = "ObjectType";
   })(y = e.TypeReferenceSerializationKind || (e.TypeReferenceSerializationKind = {}));
   var b;
   (function(e) {
    e[e["None"] = 0] = "None";
    e[e["FunctionScopedVariable"] = 1] = "FunctionScopedVariable";
    e[e["BlockScopedVariable"] = 2] = "BlockScopedVariable";
    e[e["Property"] = 4] = "Property";
    e[e["EnumMember"] = 8] = "EnumMember";
    e[e["Function"] = 16] = "Function";
    e[e["Class"] = 32] = "Class";
    e[e["Interface"] = 64] = "Interface";
    e[e["ConstEnum"] = 128] = "ConstEnum";
    e[e["RegularEnum"] = 256] = "RegularEnum";
    e[e["ValueModule"] = 512] = "ValueModule";
    e[e["NamespaceModule"] = 1024] = "NamespaceModule";
    e[e["TypeLiteral"] = 2048] = "TypeLiteral";
    e[e["ObjectLiteral"] = 4096] = "ObjectLiteral";
    e[e["Method"] = 8192] = "Method";
    e[e["Constructor"] = 16384] = "Constructor";
    e[e["GetAccessor"] = 32768] = "GetAccessor";
    e[e["SetAccessor"] = 65536] = "SetAccessor";
    e[e["Signature"] = 131072] = "Signature";
    e[e["TypeParameter"] = 262144] = "TypeParameter";
    e[e["TypeAlias"] = 524288] = "TypeAlias";
    e[e["ExportValue"] = 1048576] = "ExportValue";
    e[e["Alias"] = 2097152] = "Alias";
    e[e["Prototype"] = 4194304] = "Prototype";
    e[e["ExportStar"] = 8388608] = "ExportStar";
    e[e["Optional"] = 16777216] = "Optional";
    e[e["Transient"] = 33554432] = "Transient";
    e[e["JSContainer"] = 67108864] = "JSContainer";
    e[e["All"] = 67108863] = "All";
    e[e["Enum"] = 384] = "Enum";
    e[e["Variable"] = 3] = "Variable";
    e[e["Value"] = 67216319] = "Value";
    e[e["Type"] = 67901928] = "Type";
    e[e["Namespace"] = 1920] = "Namespace";
    e[e["Module"] = 1536] = "Module";
    e[e["Accessor"] = 98304] = "Accessor";
    e[e["FunctionScopedVariableExcludes"] = 67216318] = "FunctionScopedVariableExcludes";
    e[e["BlockScopedVariableExcludes"] = 67216319] = "BlockScopedVariableExcludes";
    e[e["ParameterExcludes"] = 67216319] = "ParameterExcludes";
    e[e["PropertyExcludes"] = 0] = "PropertyExcludes";
    e[e["EnumMemberExcludes"] = 68008959] = "EnumMemberExcludes";
    e[e["FunctionExcludes"] = 67215791] = "FunctionExcludes";
    e[e["ClassExcludes"] = 68008383] = "ClassExcludes";
    e[e["InterfaceExcludes"] = 67901832] = "InterfaceExcludes";
    e[e["RegularEnumExcludes"] = 68008191] = "RegularEnumExcludes";
    e[e["ConstEnumExcludes"] = 68008831] = "ConstEnumExcludes";
    e[e["ValueModuleExcludes"] = 67215503] = "ValueModuleExcludes";
    e[e["NamespaceModuleExcludes"] = 0] = "NamespaceModuleExcludes";
    e[e["MethodExcludes"] = 67208127] = "MethodExcludes";
    e[e["GetAccessorExcludes"] = 67150783] = "GetAccessorExcludes";
    e[e["SetAccessorExcludes"] = 67183551] = "SetAccessorExcludes";
    e[e["TypeParameterExcludes"] = 67639784] = "TypeParameterExcludes";
    e[e["TypeAliasExcludes"] = 67901928] = "TypeAliasExcludes";
    e[e["AliasExcludes"] = 2097152] = "AliasExcludes";
    e[e["ModuleMember"] = 2623475] = "ModuleMember";
    e[e["ExportHasLocal"] = 944] = "ExportHasLocal";
    e[e["BlockScoped"] = 418] = "BlockScoped";
    e[e["PropertyOrAccessor"] = 98308] = "PropertyOrAccessor";
    e[e["ClassMember"] = 106500] = "ClassMember";
    e[e["Classifiable"] = 2885600] = "Classifiable";
    e[e["LateBindingContainer"] = 6240] = "LateBindingContainer";
   })(b = e.SymbolFlags || (e.SymbolFlags = {}));
   var x;
   (function(e) {
    e[e["Numeric"] = 0] = "Numeric";
    e[e["Literal"] = 1] = "Literal";
   })(x = e.EnumKind || (e.EnumKind = {}));
   var k;
   (function(e) {
    e[e["Instantiated"] = 1] = "Instantiated";
    e[e["SyntheticProperty"] = 2] = "SyntheticProperty";
    e[e["SyntheticMethod"] = 4] = "SyntheticMethod";
    e[e["Readonly"] = 8] = "Readonly";
    e[e["Partial"] = 16] = "Partial";
    e[e["HasNonUniformType"] = 32] = "HasNonUniformType";
    e[e["ContainsPublic"] = 64] = "ContainsPublic";
    e[e["ContainsProtected"] = 128] = "ContainsProtected";
    e[e["ContainsPrivate"] = 256] = "ContainsPrivate";
    e[e["ContainsStatic"] = 512] = "ContainsStatic";
    e[e["Late"] = 1024] = "Late";
    e[e["ReverseMapped"] = 2048] = "ReverseMapped";
    e[e["OptionalParameter"] = 4096] = "OptionalParameter";
    e[e["RestParameter"] = 8192] = "RestParameter";
    e[e["Synthetic"] = 6] = "Synthetic";
   })(k = e.CheckFlags || (e.CheckFlags = {}));
   var S;
   (function(e) {
    e["Call"] = "__call";
    e["Constructor"] = "__constructor";
    e["New"] = "__new";
    e["Index"] = "__index";
    e["ExportStar"] = "__export";
    e["Global"] = "__global";
    e["Missing"] = "__missing";
    e["Type"] = "__type";
    e["Object"] = "__object";
    e["JSXAttributes"] = "__jsxAttributes";
    e["Class"] = "__class";
    e["Function"] = "__function";
    e["Computed"] = "__computed";
    e["Resolving"] = "__resolving__";
    e["ExportEquals"] = "export=";
    e["Default"] = "default";
   })(S = e.InternalSymbolName || (e.InternalSymbolName = {}));
   var w;
   (function(e) {
    e[e["TypeChecked"] = 1] = "TypeChecked";
    e[e["LexicalThis"] = 2] = "LexicalThis";
    e[e["CaptureThis"] = 4] = "CaptureThis";
    e[e["CaptureNewTarget"] = 8] = "CaptureNewTarget";
    e[e["SuperInstance"] = 256] = "SuperInstance";
    e[e["SuperStatic"] = 512] = "SuperStatic";
    e[e["ContextChecked"] = 1024] = "ContextChecked";
    e[e["AsyncMethodWithSuper"] = 2048] = "AsyncMethodWithSuper";
    e[e["AsyncMethodWithSuperBinding"] = 4096] = "AsyncMethodWithSuperBinding";
    e[e["CaptureArguments"] = 8192] = "CaptureArguments";
    e[e["EnumValuesComputed"] = 16384] = "EnumValuesComputed";
    e[e["LexicalModuleMergesWithClass"] = 32768] = "LexicalModuleMergesWithClass";
    e[e["LoopWithCapturedBlockScopedBinding"] = 65536] = "LoopWithCapturedBlockScopedBinding";
    e[e["CapturedBlockScopedBinding"] = 131072] = "CapturedBlockScopedBinding";
    e[e["BlockScopedBindingInLoop"] = 262144] = "BlockScopedBindingInLoop";
    e[e["ClassWithBodyScopedClassBinding"] = 524288] = "ClassWithBodyScopedClassBinding";
    e[e["BodyScopedClassBinding"] = 1048576] = "BodyScopedClassBinding";
    e[e["NeedsLoopOutParameter"] = 2097152] = "NeedsLoopOutParameter";
    e[e["AssignmentsMarked"] = 4194304] = "AssignmentsMarked";
    e[e["ClassWithConstructorReference"] = 8388608] = "ClassWithConstructorReference";
    e[e["ConstructorReferenceInClass"] = 16777216] = "ConstructorReferenceInClass";
   })(w = e.NodeCheckFlags || (e.NodeCheckFlags = {}));
   var C;
   (function(e) {
    e[e["Any"] = 1] = "Any";
    e[e["Unknown"] = 2] = "Unknown";
    e[e["String"] = 4] = "String";
    e[e["Number"] = 8] = "Number";
    e[e["Boolean"] = 16] = "Boolean";
    e[e["Enum"] = 32] = "Enum";
    e[e["StringLiteral"] = 64] = "StringLiteral";
    e[e["NumberLiteral"] = 128] = "NumberLiteral";
    e[e["BooleanLiteral"] = 256] = "BooleanLiteral";
    e[e["EnumLiteral"] = 512] = "EnumLiteral";
    e[e["ESSymbol"] = 1024] = "ESSymbol";
    e[e["UniqueESSymbol"] = 2048] = "UniqueESSymbol";
    e[e["Void"] = 4096] = "Void";
    e[e["Undefined"] = 8192] = "Undefined";
    e[e["Null"] = 16384] = "Null";
    e[e["Never"] = 32768] = "Never";
    e[e["TypeParameter"] = 65536] = "TypeParameter";
    e[e["Object"] = 131072] = "Object";
    e[e["Union"] = 262144] = "Union";
    e[e["Intersection"] = 524288] = "Intersection";
    e[e["Index"] = 1048576] = "Index";
    e[e["IndexedAccess"] = 2097152] = "IndexedAccess";
    e[e["Conditional"] = 4194304] = "Conditional";
    e[e["Substitution"] = 8388608] = "Substitution";
    e[e["NonPrimitive"] = 16777216] = "NonPrimitive";
    e[e["FreshLiteral"] = 33554432] = "FreshLiteral";
    e[e["UnionOfUnitTypes"] = 67108864] = "UnionOfUnitTypes";
    e[e["ContainsWideningType"] = 134217728] = "ContainsWideningType";
    e[e["ContainsObjectLiteral"] = 268435456] = "ContainsObjectLiteral";
    e[e["ContainsAnyFunctionType"] = 536870912] = "ContainsAnyFunctionType";
    e[e["AnyOrUnknown"] = 3] = "AnyOrUnknown";
    e[e["Nullable"] = 24576] = "Nullable";
    e[e["Literal"] = 448] = "Literal";
    e[e["Unit"] = 27072] = "Unit";
    e[e["StringOrNumberLiteral"] = 192] = "StringOrNumberLiteral";
    e[e["StringOrNumberLiteralOrUnique"] = 2240] = "StringOrNumberLiteralOrUnique";
    e[e["DefinitelyFalsy"] = 29120] = "DefinitelyFalsy";
    e[e["PossiblyFalsy"] = 29148] = "PossiblyFalsy";
    e[e["Intrinsic"] = 16839967] = "Intrinsic";
    e[e["Primitive"] = 32764] = "Primitive";
    e[e["StringLike"] = 68] = "StringLike";
    e[e["NumberLike"] = 168] = "NumberLike";
    e[e["BooleanLike"] = 272] = "BooleanLike";
    e[e["EnumLike"] = 544] = "EnumLike";
    e[e["ESSymbolLike"] = 3072] = "ESSymbolLike";
    e[e["VoidLike"] = 12288] = "VoidLike";
    e[e["DisjointDomains"] = 16809468] = "DisjointDomains";
    e[e["UnionOrIntersection"] = 786432] = "UnionOrIntersection";
    e[e["StructuredType"] = 917504] = "StructuredType";
    e[e["TypeVariable"] = 2162688] = "TypeVariable";
    e[e["InstantiableNonPrimitive"] = 14745600] = "InstantiableNonPrimitive";
    e[e["InstantiablePrimitive"] = 1048576] = "InstantiablePrimitive";
    e[e["Instantiable"] = 15794176] = "Instantiable";
    e[e["StructuredOrInstantiable"] = 16711680] = "StructuredOrInstantiable";
    e[e["Narrowable"] = 33492479] = "Narrowable";
    e[e["NotUnionOrUnit"] = 16909315] = "NotUnionOrUnit";
    e[e["NotUnit"] = 16749629] = "NotUnit";
    e[e["RequiresWidening"] = 402653184] = "RequiresWidening";
    e[e["PropagatingFlags"] = 939524096] = "PropagatingFlags";
    e[e["NonWideningType"] = 134217728] = "NonWideningType";
    e[e["Wildcard"] = 268435456] = "Wildcard";
    e[e["EmptyObject"] = 536870912] = "EmptyObject";
    e[e["ConstructionFlags"] = 939524096] = "ConstructionFlags";
    e[e["GenericMappedType"] = 134217728] = "GenericMappedType";
   })(C = e.TypeFlags || (e.TypeFlags = {}));
   var D;
   (function(e) {
    e[e["Class"] = 1] = "Class";
    e[e["Interface"] = 2] = "Interface";
    e[e["Reference"] = 4] = "Reference";
    e[e["Tuple"] = 8] = "Tuple";
    e[e["Anonymous"] = 16] = "Anonymous";
    e[e["Mapped"] = 32] = "Mapped";
    e[e["Instantiated"] = 64] = "Instantiated";
    e[e["ObjectLiteral"] = 128] = "ObjectLiteral";
    e[e["EvolvingArray"] = 256] = "EvolvingArray";
    e[e["ObjectLiteralPatternWithComputedProperties"] = 512] = "ObjectLiteralPatternWithComputedProperties";
    e[e["ContainsSpread"] = 1024] = "ContainsSpread";
    e[e["ReverseMapped"] = 2048] = "ReverseMapped";
    e[e["JsxAttributes"] = 4096] = "JsxAttributes";
    e[e["MarkerType"] = 8192] = "MarkerType";
    e[e["ClassOrInterface"] = 3] = "ClassOrInterface";
   })(D = e.ObjectFlags || (e.ObjectFlags = {}));
   var T;
   (function(e) {
    e[e["Invariant"] = 0] = "Invariant";
    e[e["Covariant"] = 1] = "Covariant";
    e[e["Contravariant"] = 2] = "Contravariant";
    e[e["Bivariant"] = 3] = "Bivariant";
    e[e["Independent"] = 4] = "Independent";
   })(T = e.Variance || (e.Variance = {}));
   var E;
   (function(e) {
    e[e["Call"] = 0] = "Call";
    e[e["Construct"] = 1] = "Construct";
   })(E = e.SignatureKind || (e.SignatureKind = {}));
   var N;
   (function(e) {
    e[e["String"] = 0] = "String";
    e[e["Number"] = 1] = "Number";
   })(N = e.IndexKind || (e.IndexKind = {}));
   var A;
   (function(e) {
    e[e["NakedTypeVariable"] = 1] = "NakedTypeVariable";
    e[e["HomomorphicMappedType"] = 2] = "HomomorphicMappedType";
    e[e["MappedTypeConstraint"] = 4] = "MappedTypeConstraint";
    e[e["ReturnType"] = 8] = "ReturnType";
    e[e["LiteralKeyof"] = 16] = "LiteralKeyof";
    e[e["NoConstraints"] = 32] = "NoConstraints";
    e[e["AlwaysStrict"] = 64] = "AlwaysStrict";
    e[e["PriorityImpliesCombination"] = 28] = "PriorityImpliesCombination";
   })(A = e.InferencePriority || (e.InferencePriority = {}));
   var F;
   (function(e) {
    e[e["None"] = 0] = "None";
    e[e["InferUnionTypes"] = 1] = "InferUnionTypes";
    e[e["NoDefault"] = 2] = "NoDefault";
    e[e["AnyDefault"] = 4] = "AnyDefault";
   })(F = e.InferenceFlags || (e.InferenceFlags = {}));
   var P;
   (function(e) {
    e[e["False"] = 0] = "False";
    e[e["Maybe"] = 1] = "Maybe";
    e[e["True"] = -1] = "True";
   })(P = e.Ternary || (e.Ternary = {}));
   var I;
   (function(e) {
    e[e["None"] = 0] = "None";
    e[e["ExportsProperty"] = 1] = "ExportsProperty";
    e[e["ModuleExports"] = 2] = "ModuleExports";
    e[e["PrototypeProperty"] = 3] = "PrototypeProperty";
    e[e["ThisProperty"] = 4] = "ThisProperty";
    e[e["Property"] = 5] = "Property";
    e[e["Prototype"] = 6] = "Prototype";
   })(I = e.SpecialPropertyAssignmentKind || (e.SpecialPropertyAssignmentKind = {}));
   var O;
   (function(e) {
    e[e["Warning"] = 0] = "Warning";
    e[e["Error"] = 1] = "Error";
    e[e["Suggestion"] = 2] = "Suggestion";
    e[e["Message"] = 3] = "Message";
   })(O = e.DiagnosticCategory || (e.DiagnosticCategory = {}));
   function M(e, t) {
    if (t === void 0) {
     t = true;
    }
    var n = O[e.category];
    return t ? n.toLowerCase() : n;
   }
   e.diagnosticCategoryName = M;
   var L;
   (function(e) {
    e[e["Classic"] = 1] = "Classic";
    e[e["NodeJs"] = 2] = "NodeJs";
   })(L = e.ModuleResolutionKind || (e.ModuleResolutionKind = {}));
   var R;
   (function(e) {
    e[e["None"] = 0] = "None";
    e[e["CommonJS"] = 1] = "CommonJS";
    e[e["AMD"] = 2] = "AMD";
    e[e["UMD"] = 3] = "UMD";
    e[e["System"] = 4] = "System";
    e[e["ES2015"] = 5] = "ES2015";
    e[e["ESNext"] = 6] = "ESNext";
   })(R = e.ModuleKind || (e.ModuleKind = {}));
   var B;
   (function(e) {
    e[e["None"] = 0] = "None";
    e[e["Preserve"] = 1] = "Preserve";
    e[e["React"] = 2] = "React";
    e[e["ReactNative"] = 3] = "ReactNative";
   })(B = e.JsxEmit || (e.JsxEmit = {}));
   var z;
   (function(e) {
    e[e["CarriageReturnLineFeed"] = 0] = "CarriageReturnLineFeed";
    e[e["LineFeed"] = 1] = "LineFeed";
   })(z = e.NewLineKind || (e.NewLineKind = {}));
   var j;
   (function(e) {
    e[e["Unknown"] = 0] = "Unknown";
    e[e["JS"] = 1] = "JS";
    e[e["JSX"] = 2] = "JSX";
    e[e["TS"] = 3] = "TS";
    e[e["TSX"] = 4] = "TSX";
    e[e["External"] = 5] = "External";
    e[e["JSON"] = 6] = "JSON";
    e[e["Deferred"] = 7] = "Deferred";
   })(j = e.ScriptKind || (e.ScriptKind = {}));
   var q;
   (function(e) {
    e[e["ES3"] = 0] = "ES3";
    e[e["ES5"] = 1] = "ES5";
    e[e["ES2015"] = 2] = "ES2015";
    e[e["ES2016"] = 3] = "ES2016";
    e[e["ES2017"] = 4] = "ES2017";
    e[e["ES2018"] = 5] = "ES2018";
    e[e["ESNext"] = 6] = "ESNext";
    e[e["JSON"] = 100] = "JSON";
    e[e["Latest"] = 6] = "Latest";
   })(q = e.ScriptTarget || (e.ScriptTarget = {}));
   var U;
   (function(e) {
    e[e["Standard"] = 0] = "Standard";
    e[e["JSX"] = 1] = "JSX";
   })(U = e.LanguageVariant || (e.LanguageVariant = {}));
   var J;
   (function(e) {
    e[e["None"] = 0] = "None";
    e[e["Recursive"] = 1] = "Recursive";
   })(J = e.WatchDirectoryFlags || (e.WatchDirectoryFlags = {}));
   var K;
   (function(e) {
    e[e["nullCharacter"] = 0] = "nullCharacter";
    e[e["maxAsciiCharacter"] = 127] = "maxAsciiCharacter";
    e[e["lineFeed"] = 10] = "lineFeed";
    e[e["carriageReturn"] = 13] = "carriageReturn";
    e[e["lineSeparator"] = 8232] = "lineSeparator";
    e[e["paragraphSeparator"] = 8233] = "paragraphSeparator";
    e[e["nextLine"] = 133] = "nextLine";
    e[e["space"] = 32] = "space";
    e[e["nonBreakingSpace"] = 160] = "nonBreakingSpace";
    e[e["enQuad"] = 8192] = "enQuad";
    e[e["emQuad"] = 8193] = "emQuad";
    e[e["enSpace"] = 8194] = "enSpace";
    e[e["emSpace"] = 8195] = "emSpace";
    e[e["threePerEmSpace"] = 8196] = "threePerEmSpace";
    e[e["fourPerEmSpace"] = 8197] = "fourPerEmSpace";
    e[e["sixPerEmSpace"] = 8198] = "sixPerEmSpace";
    e[e["figureSpace"] = 8199] = "figureSpace";
    e[e["punctuationSpace"] = 8200] = "punctuationSpace";
    e[e["thinSpace"] = 8201] = "thinSpace";
    e[e["hairSpace"] = 8202] = "hairSpace";
    e[e["zeroWidthSpace"] = 8203] = "zeroWidthSpace";
    e[e["narrowNoBreakSpace"] = 8239] = "narrowNoBreakSpace";
    e[e["ideographicSpace"] = 12288] = "ideographicSpace";
    e[e["mathematicalSpace"] = 8287] = "mathematicalSpace";
    e[e["ogham"] = 5760] = "ogham";
    e[e["_"] = 95] = "_";
    e[e["$"] = 36] = "$";
    e[e["_0"] = 48] = "_0";
    e[e["_1"] = 49] = "_1";
    e[e["_2"] = 50] = "_2";
    e[e["_3"] = 51] = "_3";
    e[e["_4"] = 52] = "_4";
    e[e["_5"] = 53] = "_5";
    e[e["_6"] = 54] = "_6";
    e[e["_7"] = 55] = "_7";
    e[e["_8"] = 56] = "_8";
    e[e["_9"] = 57] = "_9";
    e[e["a"] = 97] = "a";
    e[e["b"] = 98] = "b";
    e[e["c"] = 99] = "c";
    e[e["d"] = 100] = "d";
    e[e["e"] = 101] = "e";
    e[e["f"] = 102] = "f";
    e[e["g"] = 103] = "g";
    e[e["h"] = 104] = "h";
    e[e["i"] = 105] = "i";
    e[e["j"] = 106] = "j";
    e[e["k"] = 107] = "k";
    e[e["l"] = 108] = "l";
    e[e["m"] = 109] = "m";
    e[e["n"] = 110] = "n";
    e[e["o"] = 111] = "o";
    e[e["p"] = 112] = "p";
    e[e["q"] = 113] = "q";
    e[e["r"] = 114] = "r";
    e[e["s"] = 115] = "s";
    e[e["t"] = 116] = "t";
    e[e["u"] = 117] = "u";
    e[e["v"] = 118] = "v";
    e[e["w"] = 119] = "w";
    e[e["x"] = 120] = "x";
    e[e["y"] = 121] = "y";
    e[e["z"] = 122] = "z";
    e[e["A"] = 65] = "A";
    e[e["B"] = 66] = "B";
    e[e["C"] = 67] = "C";
    e[e["D"] = 68] = "D";
    e[e["E"] = 69] = "E";
    e[e["F"] = 70] = "F";
    e[e["G"] = 71] = "G";
    e[e["H"] = 72] = "H";
    e[e["I"] = 73] = "I";
    e[e["J"] = 74] = "J";
    e[e["K"] = 75] = "K";
    e[e["L"] = 76] = "L";
    e[e["M"] = 77] = "M";
    e[e["N"] = 78] = "N";
    e[e["O"] = 79] = "O";
    e[e["P"] = 80] = "P";
    e[e["Q"] = 81] = "Q";
    e[e["R"] = 82] = "R";
    e[e["S"] = 83] = "S";
    e[e["T"] = 84] = "T";
    e[e["U"] = 85] = "U";
    e[e["V"] = 86] = "V";
    e[e["W"] = 87] = "W";
    e[e["X"] = 88] = "X";
    e[e["Y"] = 89] = "Y";
    e[e["Z"] = 90] = "Z";
    e[e["ampersand"] = 38] = "ampersand";
    e[e["asterisk"] = 42] = "asterisk";
    e[e["at"] = 64] = "at";
    e[e["backslash"] = 92] = "backslash";
    e[e["backtick"] = 96] = "backtick";
    e[e["bar"] = 124] = "bar";
    e[e["caret"] = 94] = "caret";
    e[e["closeBrace"] = 125] = "closeBrace";
    e[e["closeBracket"] = 93] = "closeBracket";
    e[e["closeParen"] = 41] = "closeParen";
    e[e["colon"] = 58] = "colon";
    e[e["comma"] = 44] = "comma";
    e[e["dot"] = 46] = "dot";
    e[e["doubleQuote"] = 34] = "doubleQuote";
    e[e["equals"] = 61] = "equals";
    e[e["exclamation"] = 33] = "exclamation";
    e[e["greaterThan"] = 62] = "greaterThan";
    e[e["hash"] = 35] = "hash";
    e[e["lessThan"] = 60] = "lessThan";
    e[e["minus"] = 45] = "minus";
    e[e["openBrace"] = 123] = "openBrace";
    e[e["openBracket"] = 91] = "openBracket";
    e[e["openParen"] = 40] = "openParen";
    e[e["percent"] = 37] = "percent";
    e[e["plus"] = 43] = "plus";
    e[e["question"] = 63] = "question";
    e[e["semicolon"] = 59] = "semicolon";
    e[e["singleQuote"] = 39] = "singleQuote";
    e[e["slash"] = 47] = "slash";
    e[e["tilde"] = 126] = "tilde";
    e[e["backspace"] = 8] = "backspace";
    e[e["formFeed"] = 12] = "formFeed";
    e[e["byteOrderMark"] = 65279] = "byteOrderMark";
    e[e["tab"] = 9] = "tab";
    e[e["verticalTab"] = 11] = "verticalTab";
   })(K = e.CharacterCodes || (e.CharacterCodes = {}));
   var V;
   (function(e) {
    e["Ts"] = ".ts";
    e["Tsx"] = ".tsx";
    e["Dts"] = ".d.ts";
    e["Js"] = ".js";
    e["Jsx"] = ".jsx";
    e["Json"] = ".json";
   })(V = e.Extension || (e.Extension = {}));
   var W;
   (function(e) {
    e[e["None"] = 0] = "None";
    e[e["TypeScript"] = 1] = "TypeScript";
    e[e["ContainsTypeScript"] = 2] = "ContainsTypeScript";
    e[e["ContainsJsx"] = 4] = "ContainsJsx";
    e[e["ContainsESNext"] = 8] = "ContainsESNext";
    e[e["ContainsES2017"] = 16] = "ContainsES2017";
    e[e["ContainsES2016"] = 32] = "ContainsES2016";
    e[e["ES2015"] = 64] = "ES2015";
    e[e["ContainsES2015"] = 128] = "ContainsES2015";
    e[e["Generator"] = 256] = "Generator";
    e[e["ContainsGenerator"] = 512] = "ContainsGenerator";
    e[e["DestructuringAssignment"] = 1024] = "DestructuringAssignment";
    e[e["ContainsDestructuringAssignment"] = 2048] = "ContainsDestructuringAssignment";
    e[e["ContainsDecorators"] = 4096] = "ContainsDecorators";
    e[e["ContainsPropertyInitializer"] = 8192] = "ContainsPropertyInitializer";
    e[e["ContainsLexicalThis"] = 16384] = "ContainsLexicalThis";
    e[e["ContainsCapturedLexicalThis"] = 32768] = "ContainsCapturedLexicalThis";
    e[e["ContainsLexicalThisInComputedPropertyName"] = 65536] = "ContainsLexicalThisInComputedPropertyName";
    e[e["ContainsDefaultValueAssignments"] = 131072] = "ContainsDefaultValueAssignments";
    e[e["ContainsParameterPropertyAssignments"] = 262144] = "ContainsParameterPropertyAssignments";
    e[e["ContainsSpread"] = 524288] = "ContainsSpread";
    e[e["ContainsObjectSpread"] = 1048576] = "ContainsObjectSpread";
    e[e["ContainsRest"] = 524288] = "ContainsRest";
    e[e["ContainsObjectRest"] = 1048576] = "ContainsObjectRest";
    e[e["ContainsComputedPropertyName"] = 2097152] = "ContainsComputedPropertyName";
    e[e["ContainsBlockScopedBinding"] = 4194304] = "ContainsBlockScopedBinding";
    e[e["ContainsBindingPattern"] = 8388608] = "ContainsBindingPattern";
    e[e["ContainsYield"] = 16777216] = "ContainsYield";
    e[e["ContainsHoistedDeclarationOrCompletion"] = 33554432] = "ContainsHoistedDeclarationOrCompletion";
    e[e["ContainsDynamicImport"] = 67108864] = "ContainsDynamicImport";
    e[e["Super"] = 134217728] = "Super";
    e[e["ContainsSuper"] = 268435456] = "ContainsSuper";
    e[e["HasComputedFlags"] = 536870912] = "HasComputedFlags";
    e[e["AssertTypeScript"] = 3] = "AssertTypeScript";
    e[e["AssertJsx"] = 4] = "AssertJsx";
    e[e["AssertESNext"] = 8] = "AssertESNext";
    e[e["AssertES2017"] = 16] = "AssertES2017";
    e[e["AssertES2016"] = 32] = "AssertES2016";
    e[e["AssertES2015"] = 192] = "AssertES2015";
    e[e["AssertGenerator"] = 768] = "AssertGenerator";
    e[e["AssertDestructuringAssignment"] = 3072] = "AssertDestructuringAssignment";
    e[e["OuterExpressionExcludes"] = 536872257] = "OuterExpressionExcludes";
    e[e["PropertyAccessExcludes"] = 671089985] = "PropertyAccessExcludes";
    e[e["NodeExcludes"] = 939525441] = "NodeExcludes";
    e[e["ArrowFunctionExcludes"] = 1003902273] = "ArrowFunctionExcludes";
    e[e["FunctionExcludes"] = 1003935041] = "FunctionExcludes";
    e[e["ConstructorExcludes"] = 1003668801] = "ConstructorExcludes";
    e[e["MethodOrAccessorExcludes"] = 1003668801] = "MethodOrAccessorExcludes";
    e[e["ClassExcludes"] = 942011713] = "ClassExcludes";
    e[e["ModuleExcludes"] = 977327425] = "ModuleExcludes";
    e[e["TypeExcludes"] = -3] = "TypeExcludes";
    e[e["ObjectLiteralExcludes"] = 942740801] = "ObjectLiteralExcludes";
    e[e["ArrayLiteralOrCallOrNewExcludes"] = 940049729] = "ArrayLiteralOrCallOrNewExcludes";
    e[e["VariableDeclarationListExcludes"] = 948962625] = "VariableDeclarationListExcludes";
    e[e["ParameterExcludes"] = 939525441] = "ParameterExcludes";
    e[e["CatchClauseExcludes"] = 940574017] = "CatchClauseExcludes";
    e[e["BindingPatternExcludes"] = 940049729] = "BindingPatternExcludes";
    e[e["TypeScriptClassSyntaxMask"] = 274432] = "TypeScriptClassSyntaxMask";
    e[e["ES2015FunctionSyntaxMask"] = 163840] = "ES2015FunctionSyntaxMask";
   })(W = e.TransformFlags || (e.TransformFlags = {}));
   var H;
   (function(e) {
    e[e["None"] = 0] = "None";
    e[e["SingleLine"] = 1] = "SingleLine";
    e[e["AdviseOnEmitNode"] = 2] = "AdviseOnEmitNode";
    e[e["NoSubstitution"] = 4] = "NoSubstitution";
    e[e["CapturesThis"] = 8] = "CapturesThis";
    e[e["NoLeadingSourceMap"] = 16] = "NoLeadingSourceMap";
    e[e["NoTrailingSourceMap"] = 32] = "NoTrailingSourceMap";
    e[e["NoSourceMap"] = 48] = "NoSourceMap";
    e[e["NoNestedSourceMaps"] = 64] = "NoNestedSourceMaps";
    e[e["NoTokenLeadingSourceMaps"] = 128] = "NoTokenLeadingSourceMaps";
    e[e["NoTokenTrailingSourceMaps"] = 256] = "NoTokenTrailingSourceMaps";
    e[e["NoTokenSourceMaps"] = 384] = "NoTokenSourceMaps";
    e[e["NoLeadingComments"] = 512] = "NoLeadingComments";
    e[e["NoTrailingComments"] = 1024] = "NoTrailingComments";
    e[e["NoComments"] = 1536] = "NoComments";
    e[e["NoNestedComments"] = 2048] = "NoNestedComments";
    e[e["HelperName"] = 4096] = "HelperName";
    e[e["ExportName"] = 8192] = "ExportName";
    e[e["LocalName"] = 16384] = "LocalName";
    e[e["InternalName"] = 32768] = "InternalName";
    e[e["Indented"] = 65536] = "Indented";
    e[e["NoIndentation"] = 131072] = "NoIndentation";
    e[e["AsyncFunctionBody"] = 262144] = "AsyncFunctionBody";
    e[e["ReuseTempVariableScope"] = 524288] = "ReuseTempVariableScope";
    e[e["CustomPrologue"] = 1048576] = "CustomPrologue";
    e[e["NoHoisting"] = 2097152] = "NoHoisting";
    e[e["HasEndOfDeclarationMarker"] = 4194304] = "HasEndOfDeclarationMarker";
    e[e["Iterator"] = 8388608] = "Iterator";
    e[e["NoAsciiEscaping"] = 16777216] = "NoAsciiEscaping";
    e[e["TypeScriptClassWrapper"] = 33554432] = "TypeScriptClassWrapper";
    e[e["NeverApplyImportHelper"] = 67108864] = "NeverApplyImportHelper";
   })(H = e.EmitFlags || (e.EmitFlags = {}));
   var G;
   (function(e) {
    e[e["Extends"] = 1] = "Extends";
    e[e["Assign"] = 2] = "Assign";
    e[e["Rest"] = 4] = "Rest";
    e[e["Decorate"] = 8] = "Decorate";
    e[e["Metadata"] = 16] = "Metadata";
    e[e["Param"] = 32] = "Param";
    e[e["Awaiter"] = 64] = "Awaiter";
    e[e["Generator"] = 128] = "Generator";
    e[e["Values"] = 256] = "Values";
    e[e["Read"] = 512] = "Read";
    e[e["Spread"] = 1024] = "Spread";
    e[e["Await"] = 2048] = "Await";
    e[e["AsyncGenerator"] = 4096] = "AsyncGenerator";
    e[e["AsyncDelegator"] = 8192] = "AsyncDelegator";
    e[e["AsyncValues"] = 16384] = "AsyncValues";
    e[e["ExportStar"] = 32768] = "ExportStar";
    e[e["MakeTemplateObject"] = 65536] = "MakeTemplateObject";
    e[e["FirstEmitHelper"] = 1] = "FirstEmitHelper";
    e[e["LastEmitHelper"] = 65536] = "LastEmitHelper";
    e[e["ForOfIncludes"] = 256] = "ForOfIncludes";
    e[e["ForAwaitOfIncludes"] = 16384] = "ForAwaitOfIncludes";
    e[e["AsyncGeneratorIncludes"] = 6144] = "AsyncGeneratorIncludes";
    e[e["AsyncDelegatorIncludes"] = 26624] = "AsyncDelegatorIncludes";
    e[e["SpreadIncludes"] = 1536] = "SpreadIncludes";
   })(G = e.ExternalEmitHelpers || (e.ExternalEmitHelpers = {}));
   var $;
   (function(e) {
    e[e["SourceFile"] = 0] = "SourceFile";
    e[e["Expression"] = 1] = "Expression";
    e[e["IdentifierName"] = 2] = "IdentifierName";
    e[e["MappedTypeParameter"] = 3] = "MappedTypeParameter";
    e[e["Unspecified"] = 4] = "Unspecified";
   })($ = e.EmitHint || (e.EmitHint = {}));
   var X;
   (function(e) {
    e[e["None"] = 0] = "None";
    e[e["SingleLine"] = 0] = "SingleLine";
    e[e["MultiLine"] = 1] = "MultiLine";
    e[e["PreserveLines"] = 2] = "PreserveLines";
    e[e["LinesMask"] = 3] = "LinesMask";
    e[e["NotDelimited"] = 0] = "NotDelimited";
    e[e["BarDelimited"] = 4] = "BarDelimited";
    e[e["AmpersandDelimited"] = 8] = "AmpersandDelimited";
    e[e["CommaDelimited"] = 16] = "CommaDelimited";
    e[e["DelimitersMask"] = 28] = "DelimitersMask";
    e[e["AllowTrailingComma"] = 32] = "AllowTrailingComma";
    e[e["Indented"] = 64] = "Indented";
    e[e["SpaceBetweenBraces"] = 128] = "SpaceBetweenBraces";
    e[e["SpaceBetweenSiblings"] = 256] = "SpaceBetweenSiblings";
    e[e["Braces"] = 512] = "Braces";
    e[e["Parenthesis"] = 1024] = "Parenthesis";
    e[e["AngleBrackets"] = 2048] = "AngleBrackets";
    e[e["SquareBrackets"] = 4096] = "SquareBrackets";
    e[e["BracketsMask"] = 7680] = "BracketsMask";
    e[e["OptionalIfUndefined"] = 8192] = "OptionalIfUndefined";
    e[e["OptionalIfEmpty"] = 16384] = "OptionalIfEmpty";
    e[e["Optional"] = 24576] = "Optional";
    e[e["PreferNewLine"] = 32768] = "PreferNewLine";
    e[e["NoTrailingNewLine"] = 65536] = "NoTrailingNewLine";
    e[e["NoInterveningComments"] = 131072] = "NoInterveningComments";
    e[e["NoSpaceIfEmpty"] = 262144] = "NoSpaceIfEmpty";
    e[e["SingleElement"] = 524288] = "SingleElement";
    e[e["Modifiers"] = 131328] = "Modifiers";
    e[e["HeritageClauses"] = 256] = "HeritageClauses";
    e[e["SingleLineTypeLiteralMembers"] = 384] = "SingleLineTypeLiteralMembers";
    e[e["MultiLineTypeLiteralMembers"] = 16449] = "MultiLineTypeLiteralMembers";
    e[e["TupleTypeElements"] = 272] = "TupleTypeElements";
    e[e["UnionTypeConstituents"] = 260] = "UnionTypeConstituents";
    e[e["IntersectionTypeConstituents"] = 264] = "IntersectionTypeConstituents";
    e[e["ObjectBindingPatternElements"] = 262576] = "ObjectBindingPatternElements";
    e[e["ArrayBindingPatternElements"] = 262448] = "ArrayBindingPatternElements";
    e[e["ObjectLiteralExpressionProperties"] = 263122] = "ObjectLiteralExpressionProperties";
    e[e["ArrayLiteralExpressionElements"] = 4466] = "ArrayLiteralExpressionElements";
    e[e["CommaListElements"] = 272] = "CommaListElements";
    e[e["CallExpressionArguments"] = 1296] = "CallExpressionArguments";
    e[e["NewExpressionArguments"] = 9488] = "NewExpressionArguments";
    e[e["TemplateExpressionSpans"] = 131072] = "TemplateExpressionSpans";
    e[e["SingleLineBlockStatements"] = 384] = "SingleLineBlockStatements";
    e[e["MultiLineBlockStatements"] = 65] = "MultiLineBlockStatements";
    e[e["VariableDeclarationList"] = 272] = "VariableDeclarationList";
    e[e["SingleLineFunctionBodyStatements"] = 384] = "SingleLineFunctionBodyStatements";
    e[e["MultiLineFunctionBodyStatements"] = 1] = "MultiLineFunctionBodyStatements";
    e[e["ClassHeritageClauses"] = 0] = "ClassHeritageClauses";
    e[e["ClassMembers"] = 65] = "ClassMembers";
    e[e["InterfaceMembers"] = 65] = "InterfaceMembers";
    e[e["EnumMembers"] = 81] = "EnumMembers";
    e[e["CaseBlockClauses"] = 65] = "CaseBlockClauses";
    e[e["NamedImportsOrExportsElements"] = 262576] = "NamedImportsOrExportsElements";
    e[e["JsxElementOrFragmentChildren"] = 131072] = "JsxElementOrFragmentChildren";
    e[e["JsxElementAttributes"] = 131328] = "JsxElementAttributes";
    e[e["CaseOrDefaultClauseStatements"] = 81985] = "CaseOrDefaultClauseStatements";
    e[e["HeritageClauseTypes"] = 272] = "HeritageClauseTypes";
    e[e["SourceFileStatements"] = 65537] = "SourceFileStatements";
    e[e["Decorators"] = 24577] = "Decorators";
    e[e["TypeArguments"] = 26896] = "TypeArguments";
    e[e["TypeParameters"] = 26896] = "TypeParameters";
    e[e["Parameters"] = 1296] = "Parameters";
    e[e["IndexSignatureParameters"] = 4432] = "IndexSignatureParameters";
   })(X = e.ListFormat || (e.ListFormat = {}));
   var Q;
   (function(e) {
    e[e["None"] = 0] = "None";
    e[e["TripleSlashXML"] = 1] = "TripleSlashXML";
    e[e["SingleLine"] = 2] = "SingleLine";
    e[e["MultiLine"] = 4] = "MultiLine";
    e[e["All"] = 7] = "All";
    e[e["Default"] = 7] = "Default";
   })(Q = e.PragmaKindFlags || (e.PragmaKindFlags = {}));
   function Y(e) {
    return e;
   }
   e.commentPragmas = Y({
    reference: {
     args: [ {
      name: "types",
      optional: true,
      captureSpan: true
     }, {
      name: "lib",
      optional: true,
      captureSpan: true
     }, {
      name: "path",
      optional: true,
      captureSpan: true
     }, {
      name: "no-default-lib",
      optional: true
     } ],
     kind: 1
    },
    "amd-dependency": {
     args: [ {
      name: "path"
     }, {
      name: "name",
      optional: true
     } ],
     kind: 1
    },
    "amd-module": {
     args: [ {
      name: "name"
     } ],
     kind: 1
    },
    "ts-check": {
     kind: 2
    },
    "ts-nocheck": {
     kind: 2
    },
    jsx: {
     args: [ {
      name: "factory"
     } ],
     kind: 4
    }
   });
  })(s || (s = {}));
  var s;
  (function(e) {
   function t() {
    if (Error.stackTraceLimit < 100) {
     Error.stackTraceLimit = 100;
    }
   }
   e.setStackTraceLimit = t;
   var i;
   (function(e) {
    e[e["Created"] = 0] = "Created";
    e[e["Changed"] = 1] = "Changed";
    e[e["Deleted"] = 2] = "Deleted";
   })(i = e.FileWatcherEventKind || (e.FileWatcherEventKind = {}));
   var a;
   (function(e) {
    e[e["High"] = 2e3] = "High";
    e[e["Medium"] = 500] = "Medium";
    e[e["Low"] = 250] = "Low";
   })(a = e.PollingInterval || (e.PollingInterval = {}));
   function o(e) {
    var t = e * 2;
    var n = t * 4;
    return [ e, t, n ];
   }
   function s(e) {
    return c[e];
   }
   var c = o(250);
   function u(e, t, n, r) {
    return e.watchFile(t, n, s(r));
   }
   e.watchFileUsingPriorityPollingInterval = u;
   e.missingFileModifiedTime = new Date(0);
   function l(e) {
    var t;
    return t = {}, t[a.Low] = e.Low, t[a.Medium] = e.Medium, t[a.High] = e.High, t;
   }
   var f = {
    Low: 32,
    Medium: 64,
    High: 256
   };
   var d = l(f);
   e.unchangedPollThresholds = l(f);
   function p(t) {
    if (!t.getEnvironmentVariable) {
     return;
    }
    var n = s("TSC_WATCH_POLLINGINTERVAL", a);
    d = c("TSC_WATCH_POLLINGCHUNKSIZE", f) || d;
    e.unchangedPollThresholds = c("TSC_WATCH_UNCHANGEDPOLLTHRESHOLDS", f) || e.unchangedPollThresholds;
    function i(e, n) {
     return t.getEnvironmentVariable(e + "_" + n.toUpperCase());
    }
    function o(e) {
     var t;
     n("Low");
     n("Medium");
     n("High");
     return t;
     function n(n) {
      var r = i(e, n);
      if (r) {
       (t || (t = {}))[n] = Number(r);
      }
     }
    }
    function s(e, t) {
     var n = o(e);
     if (n) {
      r("Low");
      r("Medium");
      r("High");
      return true;
     }
     return false;
     function r(e) {
      t[e] = n[e] || t[e];
     }
    }
    function c(e, t) {
     var i = o(e);
     return (n || i) && l(i ? r({}, t, i) : t);
    }
   }
   e.setCustomPollingValues = p;
   function m(t) {
    var n = [];
    var r = [];
    var i = u(a.Low);
    var o = u(a.Medium);
    var s = u(a.High);
    return c;
    function c(t, r, i) {
     var a = {
      fileName: t,
      callback: r,
      unchangedPolls: 0,
      mtime: b(t)
     };
     n.push(a);
     g(a, i);
     return {
      close: function() {
       a.isClosed = true;
       e.unorderedRemoveItem(n, a);
      }
     };
    }
    function u(e) {
     var t = [];
     t.pollingInterval = e;
     t.pollIndex = 0;
     t.pollScheduled = false;
     return t;
    }
    function l(t) {
     t.pollIndex = p(t, t.pollingInterval, t.pollIndex, d[t.pollingInterval]);
     if (t.length) {
      y(t.pollingInterval);
     } else {
      e.Debug.assert(t.pollIndex === 0);
      t.pollScheduled = false;
     }
    }
    function f(e) {
     p(r, a.Low, 0, r.length);
     l(e);
     if (!e.pollScheduled && r.length) {
      y(a.Low);
     }
    }
    function p(t, n, i, o) {
     var s = t.length;
     var c = i;
     for (var u = 0; u < o && s > 0; d(), s--) {
      var l = t[i];
      if (!l) {
       continue;
      } else if (l.isClosed) {
       t[i] = undefined;
       continue;
      }
      u++;
      var f = _(l, b(l.fileName));
      if (l.isClosed) {
       t[i] = undefined;
      } else if (f) {
       l.unchangedPolls = 0;
       if (t !== r) {
        t[i] = undefined;
        h(l);
       }
      } else if (l.unchangedPolls !== e.unchangedPollThresholds[n]) {
       l.unchangedPolls++;
      } else if (t === r) {
       l.unchangedPolls = 1;
       t[i] = undefined;
       g(l, a.Low);
      } else if (n !== a.High) {
       l.unchangedPolls++;
       t[i] = undefined;
       g(l, n === a.Low ? a.Medium : a.High);
      }
      if (t[i]) {
       if (c < i) {
        t[c] = l;
        t[i] = undefined;
       }
       c++;
      }
     }
     return i;
     function d() {
      i++;
      if (i === t.length) {
       if (c < i) {
        t.length = c;
       }
       i = 0;
       c = 0;
      }
     }
    }
    function m(e) {
     switch (e) {
     case a.Low:
      return i;

     case a.Medium:
      return o;

     case a.High:
      return s;
     }
    }
    function g(e, t) {
     m(t).push(e);
     v(t);
    }
    function h(e) {
     r.push(e);
     v(a.Low);
    }
    function v(e) {
     if (!m(e).pollScheduled) {
      y(e);
     }
    }
    function y(e) {
     m(e).pollScheduled = t.setTimeout(e === a.Low ? f : l, e, m(e));
    }
    function b(n) {
     return t.getModifiedTime(n) || e.missingFileModifiedTime;
    }
   }
   e.createDynamicPriorityPollingWatchFile = m;
   function _(e, t) {
    var n = e.mtime.getTime();
    var r = t.getTime();
    if (n !== r) {
     e.mtime = t;
     var a = n === 0 ? i.Created : r === 0 ? i.Deleted : i.Changed;
     e.callback(e.fileName, a);
     return true;
    }
    return false;
   }
   e.onWatchedFileStat = _;
   function g(t) {
    var n = e.createMap();
    var r = e.createMultiMap();
    var i = e.getStringComparer(!t.useCaseSensitiveFileNames);
    var a = e.createGetCanonicalFileName(t.useCaseSensitiveFileNames);
    return o;
    function o(i, o) {
     var c = a(i);
     var u = n.get(c);
     if (u) {
      u.refCount++;
     } else {
      u = {
       watcher: t.watchDirectory(i, function(t) {
        r.forEach(function(n, r) {
         if (r === c || e.startsWith(c, r) && c[r.length] === e.directorySeparator) {
          n.forEach(function(e) {
           return e(t);
          });
         }
        });
        s(i, c);
       }),
       refCount: 1,
       childWatches: e.emptyArray
      };
      n.set(c, u);
      s(i, c);
     }
     if (o) {
      r.add(c, o);
     }
     return {
      dirName: i,
      close: function() {
       var t = e.Debug.assertDefined(n.get(c));
       if (o) r.remove(c, o);
       t.refCount--;
       if (t.refCount) return;
       n.delete(c);
       e.closeFileWatcherOf(t);
       t.childWatches.forEach(e.closeFileWatcher);
      }
     };
    }
    function s(e, t) {
     var r = n.get(t);
     if (r) {
      r.childWatches = c(e, r.childWatches);
     }
    }
    function c(n, r) {
     var a;
     e.enumerateInsertsAndDeletes(t.directoryExists(n) ? e.mapDefined(t.getAccessibleSortedChildDirectories(n), function(r) {
      var a = e.getNormalizedAbsolutePath(r, n);
      return i(a, e.normalizePath(t.realpath(a))) === 0 ? a : undefined;
     }) : e.emptyArray, r, function(e, t) {
      return i(e, t.dirName);
     }, s, e.closeFileWatcher, c);
     return a || e.emptyArray;
     function s(e) {
      var t = o(e);
      c(t);
     }
     function c(e) {
      (a || (a = [])).push(e);
     }
    }
   }
   e.createRecursiveDirectoryWatcher = g;
   function h() {
    if (typeof process === "undefined") {
     return undefined;
    }
    var e = process.version;
    if (!e) {
     return undefined;
    }
    var t = e.indexOf(".");
    if (t === -1) {
     return undefined;
    }
    return parseInt(e.substring(1, t));
   }
   e.getNodeMajorVersion = h;
   e.sys = function() {
    var t = "\ufeff";
    function r() {
     var r = n("mw/K");
     var o = n("oyvS");
     var s = n("jle/");
     var c;
     try {
      c = n("PJMN");
     } catch (e) {
      c = undefined;
     }
     var u = n("NkYg").Buffer;
     var l = h();
     var f = l >= 4;
     var d = s.platform();
     var p = w();
     var _;
     (function(e) {
      e[e["File"] = 0] = "File";
      e[e["Directory"] = 1] = "Directory";
     })(_ || (_ = {}));
     var v = process.env.TSC_NONPOLLING_WATCHER;
     var y = process.env.TSC_WATCHFILE;
     var b = process.env.TSC_WATCHDIRECTORY;
     var x;
     var k = {
      args: process.argv.slice(2),
      newLine: s.EOL,
      useCaseSensitiveFileNames: p,
      write: function(e) {
       process.stdout.write(e);
      },
      writeOutputIsTTY: function() {
       return process.stdout.isTTY;
      },
      readFile: z,
      writeFile: j,
      watchFile: D(),
      watchDirectory: T(),
      resolvePath: function(e) {
       return o.resolve(e);
      },
      fileExists: K,
      directoryExists: V,
      createDirectory: function(e) {
       if (!k.directoryExists(e)) {
        r.mkdirSync(e);
       }
      },
      getExecutingFilePath: function() {
       return __filename;
      },
      getCurrentDirectory: function() {
       return process.cwd();
      },
      getDirectories: W,
      getEnvironmentVariable: function(e) {
       return process.env[e] || "";
      },
      readDirectory: U,
      getModifiedTime: G,
      setModifiedTime: $,
      deleteFile: X,
      createHash: c ? Y : Q,
      createSHA256Hash: c ? Z : undefined,
      getMemoryUsage: function() {
       if (global.gc) {
        global.gc();
       }
       return process.memoryUsage().heapUsed;
      },
      getFileSize: function(e) {
       try {
        var t = r.statSync(e);
        if (t.isFile()) {
         return t.size;
        }
       } catch (e) {}
       return 0;
      },
      exit: function(e) {
       process.exit(e);
      },
      realpath: H,
      debugMode: e.some(process.execArgv, function(e) {
       return /^--(inspect|debug)(-brk)?(=\d+)?$/i.test(e);
      }),
      tryEnableSourceMapsForHost: function() {
       try {
        n("1Ap1").install();
       } catch (e) {}
      },
      setTimeout: setTimeout,
      clearTimeout: clearTimeout,
      clearScreen: function() {
       process.stdout.write("c");
      },
      setBlocking: function() {
       if (process.stdout && process.stdout._handle && process.stdout._handle.setBlocking) {
        process.stdout._handle.setBlocking(true);
       }
      },
      bufferFrom: S,
      base64decode: function(e) {
       return S(e, "base64").toString("utf8");
      },
      base64encode: function(e) {
       return S(e).toString("base64");
      }
     };
     return k;
     function S(e, t) {
      return u.from && u.from !== Int8Array.from ? u.from(e, t) : new u(e, t);
     }
     function w() {
      if (d === "win32" || d === "win64") {
       return false;
      }
      return !K(C(__filename));
     }
     function C(e) {
      return e.replace(/\w/g, function(e) {
       var t = e.toUpperCase();
       return e === t ? e.toLowerCase() : t;
      });
     }
     function D() {
      switch (y) {
      case "PriorityPollingInterval":
       return N;

      case "DynamicPriorityPolling":
       return m({
        getModifiedTime: G,
        setTimeout: setTimeout
       });

      case "UseFsEvents":
       return O;

      case "UseFsEventsWithFallbackDynamicPolling":
       x = m({
        getModifiedTime: G,
        setTimeout: setTimeout
       });
       return M(x);

      case "UseFsEventsOnParentDirectory":
       return E();
      }
      return v ? E() : function(e, t) {
       return N(e, t);
      };
     }
     function T() {
      var e = f && (process.platform === "win32" || process.platform === "darwin");
      if (e) {
       return R;
      }
      var t = b === "RecursiveDirectoryUsingFsWatchFile" ? B(N) : b === "RecursiveDirectoryUsingDynamicPriorityPolling" ? B(x || m({
       getModifiedTime: G,
       setTimeout: setTimeout
      })) : R;
      var n = g({
       useCaseSensitiveFileNames: p,
       directoryExists: V,
       getAccessibleSortedChildDirectories: function(e) {
        return q(e).directories;
       },
       watchDirectory: t,
       realpath: H
      });
      return function(e, r, i) {
       if (i) {
        return n(e, r);
       }
       t(e, r);
       return undefined;
      };
     }
     function E() {
      var t = e.createMultiMap();
      var n = e.createMap();
      var r = e.createGetCanonicalFileName(p);
      return a;
      function a(i, a) {
       var s = r(i);
       t.add(s, a);
       var c = e.getDirectoryPath(s) || ".";
       var u = n.get(c) || o(e.getDirectoryPath(i) || ".", c);
       u.referenceCount++;
       return {
        close: function() {
         if (u.referenceCount === 1) {
          u.close();
          n.delete(c);
         } else {
          u.referenceCount--;
         }
         t.remove(s, a);
        }
       };
      }
      function o(a, o) {
       var s = L(a, function(n, o) {
        var s = !e.isString(o) ? undefined : e.getNormalizedAbsolutePath(o, a);
        var c = t.get(r(s));
        if (c) {
         for (var u = 0, l = c; u < l.length; u++) {
          var f = l[u];
          f(s, i.Changed);
         }
        }
       });
       s.referenceCount = 0;
       n.set(o, s);
       return s;
      }
     }
     function N(e, t, n) {
      r.watchFile(e, {
       persistent: true,
       interval: n || 250
      }, o);
      var a;
      return {
       close: function() {
        return r.unwatchFile(e, o);
       }
      };
      function o(n, r) {
       var o = +r.mtime === 0 || a === i.Deleted;
       if (+n.mtime === 0) {
        if (o) {
         return;
        }
        a = i.Deleted;
       } else if (o) {
        a = i.Created;
       } else if (+n.mtime === +r.mtime) {
        return;
       } else {
        a = i.Changed;
       }
       t(e, a);
      }
     }
     function A(e) {
      return function(t, n) {
       return e(n === i.Changed ? "change" : "rename", "");
      };
     }
     function F(e, t) {
      return function(n) {
       if (n === "rename") {
        t(e, K(e) ? i.Created : i.Deleted);
       } else {
        t(e, i.Changed);
       }
      };
     }
     function P(t, n) {
      return function(r, i) {
       if (r === "rename") {
        n(!i ? t : e.normalizePath(e.combinePaths(t, i)));
       }
      };
     }
     function I(e, t, n, a, o, s) {
      var c;
      var u = !J(e, t) ? m() : d();
      return {
       close: function() {
        u.close();
        u = undefined;
       }
      };
      function l(e) {
       n("rename", "");
       if (u) {
        u.close();
        u = e();
       }
      }
      function d() {
       if (c === undefined) {
        if (f && (process.platform === "win32" || process.platform === "darwin")) {
         c = {
          persistent: true,
          recursive: !!a
         };
        } else {
         c = {
          persistent: true
         };
        }
       }
       try {
        var t = r.watch(e, c, n);
        t.on("error", function() {
         return l(m);
        });
        return t;
       } catch (e) {
        return p();
       }
      }
      function p() {
       return o(e, A(n), s);
      }
      function m() {
       return o(e, function(n, r) {
        if (r === i.Created && J(e, t)) {
         l(d);
        }
       }, s);
      }
     }
     function O(e, t, n) {
      return I(e, 0, F(e, t), false, N, n);
     }
     function M(e) {
      return function(t, n, r) {
       return I(t, 0, F(t, n), false, e, r);
      };
     }
     function L(e, t, n) {
      return I(e, 1, t, !!n, N);
     }
     function R(e, t, n) {
      return L(e, P(e, t), n);
     }
     function B(e) {
      return function(t, n) {
       return e(t, function() {
        return n(t);
       }, a.Medium);
      };
     }
     function z(e, t) {
      if (!K(e)) {
       return undefined;
      }
      var n = r.readFileSync(e);
      var i = n.length;
      if (i >= 2 && n[0] === 254 && n[1] === 255) {
       i &= ~1;
       for (var a = 0; a < i; a += 2) {
        var o = n[a];
        n[a] = n[a + 1];
        n[a + 1] = o;
       }
       return n.toString("utf16le", 2);
      }
      if (i >= 2 && n[0] === 255 && n[1] === 254) {
       return n.toString("utf16le", 2);
      }
      if (i >= 3 && n[0] === 239 && n[1] === 187 && n[2] === 191) {
       return n.toString("utf8", 3);
      }
      return n.toString("utf8");
     }
     function j(e, n, i) {
      if (i) {
       n = t + n;
      }
      var a;
      try {
       a = r.openSync(e, "w");
       r.writeSync(a, n, undefined, "utf8");
      } finally {
       if (a !== undefined) {
        r.closeSync(a);
       }
      }
     }
     function q(t) {
      try {
       var n = r.readdirSync(t || ".").sort();
       var i = [];
       var a = [];
       for (var o = 0, s = n; o < s.length; o++) {
        var c = s[o];
        if (c === "." || c === "..") {
         continue;
        }
        var u = e.combinePaths(t, c);
        var l = void 0;
        try {
         l = r.statSync(u);
        } catch (e) {
         continue;
        }
        if (l.isFile()) {
         i.push(c);
        } else if (l.isDirectory()) {
         a.push(c);
        }
       }
       return {
        files: i,
        directories: a
       };
      } catch (t) {
       return e.emptyFileSystemEntries;
      }
     }
     function U(t, n, r, i, a) {
      return e.matchFiles(t, n, r, i, p, process.cwd(), a, q);
     }
     function J(e, t) {
      try {
       var n = r.statSync(e);
       switch (t) {
       case 0:
        return n.isFile();

       case 1:
        return n.isDirectory();

       default:
        return false;
       }
      } catch (e) {
       return false;
      }
     }
     function K(e) {
      return J(e, 0);
     }
     function V(e) {
      return J(e, 1);
     }
     function W(t) {
      return e.filter(r.readdirSync(t), function(n) {
       return J(e.combinePaths(t, n), 1);
      });
     }
     function H(e) {
      try {
       return r.realpathSync(e);
      } catch (t) {
       return e;
      }
     }
     function G(e) {
      try {
       return r.statSync(e).mtime;
      } catch (e) {
       return undefined;
      }
     }
     function $(e, t) {
      try {
       r.utimesSync(e, t, t);
      } catch (e) {
       return;
      }
     }
     function X(e) {
      try {
       return r.unlinkSync(e);
      } catch (e) {
       return;
      }
     }
     function Q(e) {
      var t = e.split("").map(function(e) {
       return e.charCodeAt(0);
      });
      return "" + t.reduce(function(e, t) {
       return (e << 5) + e + t;
      }, 5381);
     }
     function Y(e) {
      var t = c.createHash("md5");
      t.update(e);
      return t.digest("hex");
     }
     function Z(e) {
      var t = c.createHash("sha256");
      t.update(e);
      return t.digest("hex");
     }
    }
    function o() {
     var n = ChakraHost.realpath && function(e) {
      return ChakraHost.realpath(e);
     };
     return {
      newLine: ChakraHost.newLine || "\r\n",
      args: ChakraHost.args,
      useCaseSensitiveFileNames: !!ChakraHost.useCaseSensitiveFileNames,
      write: ChakraHost.echo,
      readFile: function(e, t) {
       return ChakraHost.readFile(e);
      },
      writeFile: function(e, n, r) {
       if (r) {
        n = t + n;
       }
       ChakraHost.writeFile(e, n);
      },
      resolvePath: ChakraHost.resolvePath,
      fileExists: ChakraHost.fileExists,
      deleteFile: ChakraHost.deleteFile,
      getModifiedTime: ChakraHost.getModifiedTime,
      setModifiedTime: ChakraHost.setModifiedTime,
      directoryExists: ChakraHost.directoryExists,
      createDirectory: ChakraHost.createDirectory,
      getExecutingFilePath: function() {
       return ChakraHost.executingFile;
      },
      getCurrentDirectory: function() {
       return ChakraHost.currentDirectory;
      },
      getDirectories: ChakraHost.getDirectories,
      getEnvironmentVariable: ChakraHost.getEnvironmentVariable || function() {
       return "";
      },
      readDirectory: function(t, n, r, i, a) {
       var o = e.getFileMatcherPatterns(t, r, i, !!ChakraHost.useCaseSensitiveFileNames, ChakraHost.currentDirectory);
       return ChakraHost.readDirectory(t, n, o.basePaths, o.excludePattern, o.includeFilePattern, o.includeDirectoryPattern);
      },
      exit: ChakraHost.quit,
      realpath: n
     };
    }
    function s(t, n) {
     var r = e.getDirectoryPath(t);
     var i = r !== "" && t !== r && !n.directoryExists(r);
     if (i) {
      s(r, n);
     }
     if (i || !n.directoryExists(t)) {
      n.createDirectory(t);
     }
    }
    var c;
    if (typeof ChakraHost !== "undefined") {
     c = o();
    } else if (typeof process !== "undefined" && process.nextTick && !process.browser && "function" !== "undefined") {
     c = r();
    }
    if (c) {
     var u = c.writeFile;
     c.writeFile = function(t, n, r) {
      var i = e.getDirectoryPath(e.normalizeSlashes(t));
      if (i && !c.directoryExists(i)) {
       s(i, c);
      }
      u.call(c, t, n, r);
     };
    }
    return c;
   }();
   if (e.sys && e.sys.getEnvironmentVariable) {
    p(e.sys);
    e.Debug.currentAssertionLevel = /^development$/i.test(e.sys.getEnvironmentVariable("NODE_ENV")) ? 1 : 0;
   }
   if (e.sys && e.sys.debugMode) {
    e.Debug.isDebugging = true;
   }
  })(s || (s = {}));
  var s;
  (function(e) {
   function t(e, t, n, r, i) {
    return {
     code: e,
     category: t,
     key: n,
     message: r,
     reportsUnnecessary: i
    };
   }
   e.Diagnostics = {
    Unterminated_string_literal: t(1002, e.DiagnosticCategory.Error, "Unterminated_string_literal_1002", "Unterminated string literal."),
    Identifier_expected: t(1003, e.DiagnosticCategory.Error, "Identifier_expected_1003", "Identifier expected."),
    _0_expected: t(1005, e.DiagnosticCategory.Error, "_0_expected_1005", "'{0}' expected."),
    A_file_cannot_have_a_reference_to_itself: t(1006, e.DiagnosticCategory.Error, "A_file_cannot_have_a_reference_to_itself_1006", "A file cannot have a reference to itself."),
    Trailing_comma_not_allowed: t(1009, e.DiagnosticCategory.Error, "Trailing_comma_not_allowed_1009", "Trailing comma not allowed."),
    Asterisk_Slash_expected: t(1010, e.DiagnosticCategory.Error, "Asterisk_Slash_expected_1010", "'*/' expected."),
    An_element_access_expression_should_take_an_argument: t(1011, e.DiagnosticCategory.Error, "An_element_access_expression_should_take_an_argument_1011", "An element access expression should take an argument."),
    Unexpected_token: t(1012, e.DiagnosticCategory.Error, "Unexpected_token_1012", "Unexpected token."),
    A_rest_parameter_or_binding_pattern_may_not_have_a_trailing_comma: t(1013, e.DiagnosticCategory.Error, "A_rest_parameter_or_binding_pattern_may_not_have_a_trailing_comma_1013", "A rest parameter or binding pattern may not have a trailing comma."),
    A_rest_parameter_must_be_last_in_a_parameter_list: t(1014, e.DiagnosticCategory.Error, "A_rest_parameter_must_be_last_in_a_parameter_list_1014", "A rest parameter must be last in a parameter list."),
    Parameter_cannot_have_question_mark_and_initializer: t(1015, e.DiagnosticCategory.Error, "Parameter_cannot_have_question_mark_and_initializer_1015", "Parameter cannot have question mark and initializer."),
    A_required_parameter_cannot_follow_an_optional_parameter: t(1016, e.DiagnosticCategory.Error, "A_required_parameter_cannot_follow_an_optional_parameter_1016", "A required parameter cannot follow an optional parameter."),
    An_index_signature_cannot_have_a_rest_parameter: t(1017, e.DiagnosticCategory.Error, "An_index_signature_cannot_have_a_rest_parameter_1017", "An index signature cannot have a rest parameter."),
    An_index_signature_parameter_cannot_have_an_accessibility_modifier: t(1018, e.DiagnosticCategory.Error, "An_index_signature_parameter_cannot_have_an_accessibility_modifier_1018", "An index signature parameter cannot have an accessibility modifier."),
    An_index_signature_parameter_cannot_have_a_question_mark: t(1019, e.DiagnosticCategory.Error, "An_index_signature_parameter_cannot_have_a_question_mark_1019", "An index signature parameter cannot have a question mark."),
    An_index_signature_parameter_cannot_have_an_initializer: t(1020, e.DiagnosticCategory.Error, "An_index_signature_parameter_cannot_have_an_initializer_1020", "An index signature parameter cannot have an initializer."),
    An_index_signature_must_have_a_type_annotation: t(1021, e.DiagnosticCategory.Error, "An_index_signature_must_have_a_type_annotation_1021", "An index signature must have a type annotation."),
    An_index_signature_parameter_must_have_a_type_annotation: t(1022, e.DiagnosticCategory.Error, "An_index_signature_parameter_must_have_a_type_annotation_1022", "An index signature parameter must have a type annotation."),
    An_index_signature_parameter_type_must_be_string_or_number: t(1023, e.DiagnosticCategory.Error, "An_index_signature_parameter_type_must_be_string_or_number_1023", "An index signature parameter type must be 'string' or 'number'."),
    readonly_modifier_can_only_appear_on_a_property_declaration_or_index_signature: t(1024, e.DiagnosticCategory.Error, "readonly_modifier_can_only_appear_on_a_property_declaration_or_index_signature_1024", "'readonly' modifier can only appear on a property declaration or index signature."),
    Accessibility_modifier_already_seen: t(1028, e.DiagnosticCategory.Error, "Accessibility_modifier_already_seen_1028", "Accessibility modifier already seen."),
    _0_modifier_must_precede_1_modifier: t(1029, e.DiagnosticCategory.Error, "_0_modifier_must_precede_1_modifier_1029", "'{0}' modifier must precede '{1}' modifier."),
    _0_modifier_already_seen: t(1030, e.DiagnosticCategory.Error, "_0_modifier_already_seen_1030", "'{0}' modifier already seen."),
    _0_modifier_cannot_appear_on_a_class_element: t(1031, e.DiagnosticCategory.Error, "_0_modifier_cannot_appear_on_a_class_element_1031", "'{0}' modifier cannot appear on a class element."),
    super_must_be_followed_by_an_argument_list_or_member_access: t(1034, e.DiagnosticCategory.Error, "super_must_be_followed_by_an_argument_list_or_member_access_1034", "'super' must be followed by an argument list or member access."),
    Only_ambient_modules_can_use_quoted_names: t(1035, e.DiagnosticCategory.Error, "Only_ambient_modules_can_use_quoted_names_1035", "Only ambient modules can use quoted names."),
    Statements_are_not_allowed_in_ambient_contexts: t(1036, e.DiagnosticCategory.Error, "Statements_are_not_allowed_in_ambient_contexts_1036", "Statements are not allowed in ambient contexts."),
    A_declare_modifier_cannot_be_used_in_an_already_ambient_context: t(1038, e.DiagnosticCategory.Error, "A_declare_modifier_cannot_be_used_in_an_already_ambient_context_1038", "A 'declare' modifier cannot be used in an already ambient context."),
    Initializers_are_not_allowed_in_ambient_contexts: t(1039, e.DiagnosticCategory.Error, "Initializers_are_not_allowed_in_ambient_contexts_1039", "Initializers are not allowed in ambient contexts."),
    _0_modifier_cannot_be_used_in_an_ambient_context: t(1040, e.DiagnosticCategory.Error, "_0_modifier_cannot_be_used_in_an_ambient_context_1040", "'{0}' modifier cannot be used in an ambient context."),
    _0_modifier_cannot_be_used_with_a_class_declaration: t(1041, e.DiagnosticCategory.Error, "_0_modifier_cannot_be_used_with_a_class_declaration_1041", "'{0}' modifier cannot be used with a class declaration."),
    _0_modifier_cannot_be_used_here: t(1042, e.DiagnosticCategory.Error, "_0_modifier_cannot_be_used_here_1042", "'{0}' modifier cannot be used here."),
    _0_modifier_cannot_appear_on_a_data_property: t(1043, e.DiagnosticCategory.Error, "_0_modifier_cannot_appear_on_a_data_property_1043", "'{0}' modifier cannot appear on a data property."),
    _0_modifier_cannot_appear_on_a_module_or_namespace_element: t(1044, e.DiagnosticCategory.Error, "_0_modifier_cannot_appear_on_a_module_or_namespace_element_1044", "'{0}' modifier cannot appear on a module or namespace element."),
    A_0_modifier_cannot_be_used_with_an_interface_declaration: t(1045, e.DiagnosticCategory.Error, "A_0_modifier_cannot_be_used_with_an_interface_declaration_1045", "A '{0}' modifier cannot be used with an interface declaration."),
    A_declare_modifier_is_required_for_a_top_level_declaration_in_a_d_ts_file: t(1046, e.DiagnosticCategory.Error, "A_declare_modifier_is_required_for_a_top_level_declaration_in_a_d_ts_file_1046", "A 'declare' modifier is required for a top level declaration in a .d.ts file."),
    A_rest_parameter_cannot_be_optional: t(1047, e.DiagnosticCategory.Error, "A_rest_parameter_cannot_be_optional_1047", "A rest parameter cannot be optional."),
    A_rest_parameter_cannot_have_an_initializer: t(1048, e.DiagnosticCategory.Error, "A_rest_parameter_cannot_have_an_initializer_1048", "A rest parameter cannot have an initializer."),
    A_set_accessor_must_have_exactly_one_parameter: t(1049, e.DiagnosticCategory.Error, "A_set_accessor_must_have_exactly_one_parameter_1049", "A 'set' accessor must have exactly one parameter."),
    A_set_accessor_cannot_have_an_optional_parameter: t(1051, e.DiagnosticCategory.Error, "A_set_accessor_cannot_have_an_optional_parameter_1051", "A 'set' accessor cannot have an optional parameter."),
    A_set_accessor_parameter_cannot_have_an_initializer: t(1052, e.DiagnosticCategory.Error, "A_set_accessor_parameter_cannot_have_an_initializer_1052", "A 'set' accessor parameter cannot have an initializer."),
    A_set_accessor_cannot_have_rest_parameter: t(1053, e.DiagnosticCategory.Error, "A_set_accessor_cannot_have_rest_parameter_1053", "A 'set' accessor cannot have rest parameter."),
    A_get_accessor_cannot_have_parameters: t(1054, e.DiagnosticCategory.Error, "A_get_accessor_cannot_have_parameters_1054", "A 'get' accessor cannot have parameters."),
    Type_0_is_not_a_valid_async_function_return_type_in_ES5_SlashES3_because_it_does_not_refer_to_a_Promise_compatible_constructor_value: t(1055, e.DiagnosticCategory.Error, "Type_0_is_not_a_valid_async_function_return_type_in_ES5_SlashES3_because_it_does_not_refer_to_a_Prom_1055", "Type '{0}' is not a valid async function return type in ES5/ES3 because it does not refer to a Promise-compatible constructor value."),
    Accessors_are_only_available_when_targeting_ECMAScript_5_and_higher: t(1056, e.DiagnosticCategory.Error, "Accessors_are_only_available_when_targeting_ECMAScript_5_and_higher_1056", "Accessors are only available when targeting ECMAScript 5 and higher."),
    An_async_function_or_method_must_have_a_valid_awaitable_return_type: t(1057, e.DiagnosticCategory.Error, "An_async_function_or_method_must_have_a_valid_awaitable_return_type_1057", "An async function or method must have a valid awaitable return type."),
    The_return_type_of_an_async_function_must_either_be_a_valid_promise_or_must_not_contain_a_callable_then_member: t(1058, e.DiagnosticCategory.Error, "The_return_type_of_an_async_function_must_either_be_a_valid_promise_or_must_not_contain_a_callable_t_1058", "The return type of an async function must either be a valid promise or must not contain a callable 'then' member."),
    A_promise_must_have_a_then_method: t(1059, e.DiagnosticCategory.Error, "A_promise_must_have_a_then_method_1059", "A promise must have a 'then' method."),
    The_first_parameter_of_the_then_method_of_a_promise_must_be_a_callback: t(1060, e.DiagnosticCategory.Error, "The_first_parameter_of_the_then_method_of_a_promise_must_be_a_callback_1060", "The first parameter of the 'then' method of a promise must be a callback."),
    Enum_member_must_have_initializer: t(1061, e.DiagnosticCategory.Error, "Enum_member_must_have_initializer_1061", "Enum member must have initializer."),
    Type_is_referenced_directly_or_indirectly_in_the_fulfillment_callback_of_its_own_then_method: t(1062, e.DiagnosticCategory.Error, "Type_is_referenced_directly_or_indirectly_in_the_fulfillment_callback_of_its_own_then_method_1062", "Type is referenced directly or indirectly in the fulfillment callback of its own 'then' method."),
    An_export_assignment_cannot_be_used_in_a_namespace: t(1063, e.DiagnosticCategory.Error, "An_export_assignment_cannot_be_used_in_a_namespace_1063", "An export assignment cannot be used in a namespace."),
    The_return_type_of_an_async_function_or_method_must_be_the_global_Promise_T_type: t(1064, e.DiagnosticCategory.Error, "The_return_type_of_an_async_function_or_method_must_be_the_global_Promise_T_type_1064", "The return type of an async function or method must be the global Promise<T> type."),
    In_ambient_enum_declarations_member_initializer_must_be_constant_expression: t(1066, e.DiagnosticCategory.Error, "In_ambient_enum_declarations_member_initializer_must_be_constant_expression_1066", "In ambient enum declarations member initializer must be constant expression."),
    Unexpected_token_A_constructor_method_accessor_or_property_was_expected: t(1068, e.DiagnosticCategory.Error, "Unexpected_token_A_constructor_method_accessor_or_property_was_expected_1068", "Unexpected token. A constructor, method, accessor, or property was expected."),
    Unexpected_token_A_type_parameter_name_was_expected_without_curly_braces: t(1069, e.DiagnosticCategory.Error, "Unexpected_token_A_type_parameter_name_was_expected_without_curly_braces_1069", "Unexpected token. A type parameter name was expected without curly braces."),
    _0_modifier_cannot_appear_on_a_type_member: t(1070, e.DiagnosticCategory.Error, "_0_modifier_cannot_appear_on_a_type_member_1070", "'{0}' modifier cannot appear on a type member."),
    _0_modifier_cannot_appear_on_an_index_signature: t(1071, e.DiagnosticCategory.Error, "_0_modifier_cannot_appear_on_an_index_signature_1071", "'{0}' modifier cannot appear on an index signature."),
    A_0_modifier_cannot_be_used_with_an_import_declaration: t(1079, e.DiagnosticCategory.Error, "A_0_modifier_cannot_be_used_with_an_import_declaration_1079", "A '{0}' modifier cannot be used with an import declaration."),
    Invalid_reference_directive_syntax: t(1084, e.DiagnosticCategory.Error, "Invalid_reference_directive_syntax_1084", "Invalid 'reference' directive syntax."),
    Octal_literals_are_not_available_when_targeting_ECMAScript_5_and_higher_Use_the_syntax_0: t(1085, e.DiagnosticCategory.Error, "Octal_literals_are_not_available_when_targeting_ECMAScript_5_and_higher_Use_the_syntax_0_1085", "Octal literals are not available when targeting ECMAScript 5 and higher. Use the syntax '{0}'."),
    An_accessor_cannot_be_declared_in_an_ambient_context: t(1086, e.DiagnosticCategory.Error, "An_accessor_cannot_be_declared_in_an_ambient_context_1086", "An accessor cannot be declared in an ambient context."),
    _0_modifier_cannot_appear_on_a_constructor_declaration: t(1089, e.DiagnosticCategory.Error, "_0_modifier_cannot_appear_on_a_constructor_declaration_1089", "'{0}' modifier cannot appear on a constructor declaration."),
    _0_modifier_cannot_appear_on_a_parameter: t(1090, e.DiagnosticCategory.Error, "_0_modifier_cannot_appear_on_a_parameter_1090", "'{0}' modifier cannot appear on a parameter."),
    Only_a_single_variable_declaration_is_allowed_in_a_for_in_statement: t(1091, e.DiagnosticCategory.Error, "Only_a_single_variable_declaration_is_allowed_in_a_for_in_statement_1091", "Only a single variable declaration is allowed in a 'for...in' statement."),
    Type_parameters_cannot_appear_on_a_constructor_declaration: t(1092, e.DiagnosticCategory.Error, "Type_parameters_cannot_appear_on_a_constructor_declaration_1092", "Type parameters cannot appear on a constructor declaration."),
    Type_annotation_cannot_appear_on_a_constructor_declaration: t(1093, e.DiagnosticCategory.Error, "Type_annotation_cannot_appear_on_a_constructor_declaration_1093", "Type annotation cannot appear on a constructor declaration."),
    An_accessor_cannot_have_type_parameters: t(1094, e.DiagnosticCategory.Error, "An_accessor_cannot_have_type_parameters_1094", "An accessor cannot have type parameters."),
    A_set_accessor_cannot_have_a_return_type_annotation: t(1095, e.DiagnosticCategory.Error, "A_set_accessor_cannot_have_a_return_type_annotation_1095", "A 'set' accessor cannot have a return type annotation."),
    An_index_signature_must_have_exactly_one_parameter: t(1096, e.DiagnosticCategory.Error, "An_index_signature_must_have_exactly_one_parameter_1096", "An index signature must have exactly one parameter."),
    _0_list_cannot_be_empty: t(1097, e.DiagnosticCategory.Error, "_0_list_cannot_be_empty_1097", "'{0}' list cannot be empty."),
    Type_parameter_list_cannot_be_empty: t(1098, e.DiagnosticCategory.Error, "Type_parameter_list_cannot_be_empty_1098", "Type parameter list cannot be empty."),
    Type_argument_list_cannot_be_empty: t(1099, e.DiagnosticCategory.Error, "Type_argument_list_cannot_be_empty_1099", "Type argument list cannot be empty."),
    Invalid_use_of_0_in_strict_mode: t(1100, e.DiagnosticCategory.Error, "Invalid_use_of_0_in_strict_mode_1100", "Invalid use of '{0}' in strict mode."),
    with_statements_are_not_allowed_in_strict_mode: t(1101, e.DiagnosticCategory.Error, "with_statements_are_not_allowed_in_strict_mode_1101", "'with' statements are not allowed in strict mode."),
    delete_cannot_be_called_on_an_identifier_in_strict_mode: t(1102, e.DiagnosticCategory.Error, "delete_cannot_be_called_on_an_identifier_in_strict_mode_1102", "'delete' cannot be called on an identifier in strict mode."),
    A_for_await_of_statement_is_only_allowed_within_an_async_function_or_async_generator: t(1103, e.DiagnosticCategory.Error, "A_for_await_of_statement_is_only_allowed_within_an_async_function_or_async_generator_1103", "A 'for-await-of' statement is only allowed within an async function or async generator."),
    A_continue_statement_can_only_be_used_within_an_enclosing_iteration_statement: t(1104, e.DiagnosticCategory.Error, "A_continue_statement_can_only_be_used_within_an_enclosing_iteration_statement_1104", "A 'continue' statement can only be used within an enclosing iteration statement."),
    A_break_statement_can_only_be_used_within_an_enclosing_iteration_or_switch_statement: t(1105, e.DiagnosticCategory.Error, "A_break_statement_can_only_be_used_within_an_enclosing_iteration_or_switch_statement_1105", "A 'break' statement can only be used within an enclosing iteration or switch statement."),
    Jump_target_cannot_cross_function_boundary: t(1107, e.DiagnosticCategory.Error, "Jump_target_cannot_cross_function_boundary_1107", "Jump target cannot cross function boundary."),
    A_return_statement_can_only_be_used_within_a_function_body: t(1108, e.DiagnosticCategory.Error, "A_return_statement_can_only_be_used_within_a_function_body_1108", "A 'return' statement can only be used within a function body."),
    Expression_expected: t(1109, e.DiagnosticCategory.Error, "Expression_expected_1109", "Expression expected."),
    Type_expected: t(1110, e.DiagnosticCategory.Error, "Type_expected_1110", "Type expected."),
    A_default_clause_cannot_appear_more_than_once_in_a_switch_statement: t(1113, e.DiagnosticCategory.Error, "A_default_clause_cannot_appear_more_than_once_in_a_switch_statement_1113", "A 'default' clause cannot appear more than once in a 'switch' statement."),
    Duplicate_label_0: t(1114, e.DiagnosticCategory.Error, "Duplicate_label_0_1114", "Duplicate label '{0}'."),
    A_continue_statement_can_only_jump_to_a_label_of_an_enclosing_iteration_statement: t(1115, e.DiagnosticCategory.Error, "A_continue_statement_can_only_jump_to_a_label_of_an_enclosing_iteration_statement_1115", "A 'continue' statement can only jump to a label of an enclosing iteration statement."),
    A_break_statement_can_only_jump_to_a_label_of_an_enclosing_statement: t(1116, e.DiagnosticCategory.Error, "A_break_statement_can_only_jump_to_a_label_of_an_enclosing_statement_1116", "A 'break' statement can only jump to a label of an enclosing statement."),
    An_object_literal_cannot_have_multiple_properties_with_the_same_name_in_strict_mode: t(1117, e.DiagnosticCategory.Error, "An_object_literal_cannot_have_multiple_properties_with_the_same_name_in_strict_mode_1117", "An object literal cannot have multiple properties with the same name in strict mode."),
    An_object_literal_cannot_have_multiple_get_Slashset_accessors_with_the_same_name: t(1118, e.DiagnosticCategory.Error, "An_object_literal_cannot_have_multiple_get_Slashset_accessors_with_the_same_name_1118", "An object literal cannot have multiple get/set accessors with the same name."),
    An_object_literal_cannot_have_property_and_accessor_with_the_same_name: t(1119, e.DiagnosticCategory.Error, "An_object_literal_cannot_have_property_and_accessor_with_the_same_name_1119", "An object literal cannot have property and accessor with the same name."),
    An_export_assignment_cannot_have_modifiers: t(1120, e.DiagnosticCategory.Error, "An_export_assignment_cannot_have_modifiers_1120", "An export assignment cannot have modifiers."),
    Octal_literals_are_not_allowed_in_strict_mode: t(1121, e.DiagnosticCategory.Error, "Octal_literals_are_not_allowed_in_strict_mode_1121", "Octal literals are not allowed in strict mode."),
    Variable_declaration_list_cannot_be_empty: t(1123, e.DiagnosticCategory.Error, "Variable_declaration_list_cannot_be_empty_1123", "Variable declaration list cannot be empty."),
    Digit_expected: t(1124, e.DiagnosticCategory.Error, "Digit_expected_1124", "Digit expected."),
    Hexadecimal_digit_expected: t(1125, e.DiagnosticCategory.Error, "Hexadecimal_digit_expected_1125", "Hexadecimal digit expected."),
    Unexpected_end_of_text: t(1126, e.DiagnosticCategory.Error, "Unexpected_end_of_text_1126", "Unexpected end of text."),
    Invalid_character: t(1127, e.DiagnosticCategory.Error, "Invalid_character_1127", "Invalid character."),
    Declaration_or_statement_expected: t(1128, e.DiagnosticCategory.Error, "Declaration_or_statement_expected_1128", "Declaration or statement expected."),
    Statement_expected: t(1129, e.DiagnosticCategory.Error, "Statement_expected_1129", "Statement expected."),
    case_or_default_expected: t(1130, e.DiagnosticCategory.Error, "case_or_default_expected_1130", "'case' or 'default' expected."),
    Property_or_signature_expected: t(1131, e.DiagnosticCategory.Error, "Property_or_signature_expected_1131", "Property or signature expected."),
    Enum_member_expected: t(1132, e.DiagnosticCategory.Error, "Enum_member_expected_1132", "Enum member expected."),
    Variable_declaration_expected: t(1134, e.DiagnosticCategory.Error, "Variable_declaration_expected_1134", "Variable declaration expected."),
    Argument_expression_expected: t(1135, e.DiagnosticCategory.Error, "Argument_expression_expected_1135", "Argument expression expected."),
    Property_assignment_expected: t(1136, e.DiagnosticCategory.Error, "Property_assignment_expected_1136", "Property assignment expected."),
    Expression_or_comma_expected: t(1137, e.DiagnosticCategory.Error, "Expression_or_comma_expected_1137", "Expression or comma expected."),
    Parameter_declaration_expected: t(1138, e.DiagnosticCategory.Error, "Parameter_declaration_expected_1138", "Parameter declaration expected."),
    Type_parameter_declaration_expected: t(1139, e.DiagnosticCategory.Error, "Type_parameter_declaration_expected_1139", "Type parameter declaration expected."),
    Type_argument_expected: t(1140, e.DiagnosticCategory.Error, "Type_argument_expected_1140", "Type argument expected."),
    String_literal_expected: t(1141, e.DiagnosticCategory.Error, "String_literal_expected_1141", "String literal expected."),
    Line_break_not_permitted_here: t(1142, e.DiagnosticCategory.Error, "Line_break_not_permitted_here_1142", "Line break not permitted here."),
    or_expected: t(1144, e.DiagnosticCategory.Error, "or_expected_1144", "'{' or ';' expected."),
    Declaration_expected: t(1146, e.DiagnosticCategory.Error, "Declaration_expected_1146", "Declaration expected."),
    Import_declarations_in_a_namespace_cannot_reference_a_module: t(1147, e.DiagnosticCategory.Error, "Import_declarations_in_a_namespace_cannot_reference_a_module_1147", "Import declarations in a namespace cannot reference a module."),
    Cannot_use_imports_exports_or_module_augmentations_when_module_is_none: t(1148, e.DiagnosticCategory.Error, "Cannot_use_imports_exports_or_module_augmentations_when_module_is_none_1148", "Cannot use imports, exports, or module augmentations when '--module' is 'none'."),
    File_name_0_differs_from_already_included_file_name_1_only_in_casing: t(1149, e.DiagnosticCategory.Error, "File_name_0_differs_from_already_included_file_name_1_only_in_casing_1149", "File name '{0}' differs from already included file name '{1}' only in casing."),
    new_T_cannot_be_used_to_create_an_array_Use_new_Array_T_instead: t(1150, e.DiagnosticCategory.Error, "new_T_cannot_be_used_to_create_an_array_Use_new_Array_T_instead_1150", "'new T[]' cannot be used to create an array. Use 'new Array<T>()' instead."),
    const_declarations_must_be_initialized: t(1155, e.DiagnosticCategory.Error, "const_declarations_must_be_initialized_1155", "'const' declarations must be initialized."),
    const_declarations_can_only_be_declared_inside_a_block: t(1156, e.DiagnosticCategory.Error, "const_declarations_can_only_be_declared_inside_a_block_1156", "'const' declarations can only be declared inside a block."),
    let_declarations_can_only_be_declared_inside_a_block: t(1157, e.DiagnosticCategory.Error, "let_declarations_can_only_be_declared_inside_a_block_1157", "'let' declarations can only be declared inside a block."),
    Unterminated_template_literal: t(1160, e.DiagnosticCategory.Error, "Unterminated_template_literal_1160", "Unterminated template literal."),
    Unterminated_regular_expression_literal: t(1161, e.DiagnosticCategory.Error, "Unterminated_regular_expression_literal_1161", "Unterminated regular expression literal."),
    An_object_member_cannot_be_declared_optional: t(1162, e.DiagnosticCategory.Error, "An_object_member_cannot_be_declared_optional_1162", "An object member cannot be declared optional."),
    A_yield_expression_is_only_allowed_in_a_generator_body: t(1163, e.DiagnosticCategory.Error, "A_yield_expression_is_only_allowed_in_a_generator_body_1163", "A 'yield' expression is only allowed in a generator body."),
    Computed_property_names_are_not_allowed_in_enums: t(1164, e.DiagnosticCategory.Error, "Computed_property_names_are_not_allowed_in_enums_1164", "Computed property names are not allowed in enums."),
    A_computed_property_name_in_an_ambient_context_must_refer_to_an_expression_whose_type_is_a_literal_type_or_a_unique_symbol_type: t(1165, e.DiagnosticCategory.Error, "A_computed_property_name_in_an_ambient_context_must_refer_to_an_expression_whose_type_is_a_literal_t_1165", "A computed property name in an ambient context must refer to an expression whose type is a literal type or a 'unique symbol' type."),
    A_computed_property_name_in_a_class_property_declaration_must_refer_to_an_expression_whose_type_is_a_literal_type_or_a_unique_symbol_type: t(1166, e.DiagnosticCategory.Error, "A_computed_property_name_in_a_class_property_declaration_must_refer_to_an_expression_whose_type_is_a_1166", "A computed property name in a class property declaration must refer to an expression whose type is a literal type or a 'unique symbol' type."),
    A_computed_property_name_in_a_method_overload_must_refer_to_an_expression_whose_type_is_a_literal_type_or_a_unique_symbol_type: t(1168, e.DiagnosticCategory.Error, "A_computed_property_name_in_a_method_overload_must_refer_to_an_expression_whose_type_is_a_literal_ty_1168", "A computed property name in a method overload must refer to an expression whose type is a literal type or a 'unique symbol' type."),
    A_computed_property_name_in_an_interface_must_refer_to_an_expression_whose_type_is_a_literal_type_or_a_unique_symbol_type: t(1169, e.DiagnosticCategory.Error, "A_computed_property_name_in_an_interface_must_refer_to_an_expression_whose_type_is_a_literal_type_or_1169", "A computed property name in an interface must refer to an expression whose type is a literal type or a 'unique symbol' type."),
    A_computed_property_name_in_a_type_literal_must_refer_to_an_expression_whose_type_is_a_literal_type_or_a_unique_symbol_type: t(1170, e.DiagnosticCategory.Error, "A_computed_property_name_in_a_type_literal_must_refer_to_an_expression_whose_type_is_a_literal_type__1170", "A computed property name in a type literal must refer to an expression whose type is a literal type or a 'unique symbol' type."),
    A_comma_expression_is_not_allowed_in_a_computed_property_name: t(1171, e.DiagnosticCategory.Error, "A_comma_expression_is_not_allowed_in_a_computed_property_name_1171", "A comma expression is not allowed in a computed property name."),
    extends_clause_already_seen: t(1172, e.DiagnosticCategory.Error, "extends_clause_already_seen_1172", "'extends' clause already seen."),
    extends_clause_must_precede_implements_clause: t(1173, e.DiagnosticCategory.Error, "extends_clause_must_precede_implements_clause_1173", "'extends' clause must precede 'implements' clause."),
    Classes_can_only_extend_a_single_class: t(1174, e.DiagnosticCategory.Error, "Classes_can_only_extend_a_single_class_1174", "Classes can only extend a single class."),
    implements_clause_already_seen: t(1175, e.DiagnosticCategory.Error, "implements_clause_already_seen_1175", "'implements' clause already seen."),
    Interface_declaration_cannot_have_implements_clause: t(1176, e.DiagnosticCategory.Error, "Interface_declaration_cannot_have_implements_clause_1176", "Interface declaration cannot have 'implements' clause."),
    Binary_digit_expected: t(1177, e.DiagnosticCategory.Error, "Binary_digit_expected_1177", "Binary digit expected."),
    Octal_digit_expected: t(1178, e.DiagnosticCategory.Error, "Octal_digit_expected_1178", "Octal digit expected."),
    Unexpected_token_expected: t(1179, e.DiagnosticCategory.Error, "Unexpected_token_expected_1179", "Unexpected token. '{' expected."),
    Property_destructuring_pattern_expected: t(1180, e.DiagnosticCategory.Error, "Property_destructuring_pattern_expected_1180", "Property destructuring pattern expected."),
    Array_element_destructuring_pattern_expected: t(1181, e.DiagnosticCategory.Error, "Array_element_destructuring_pattern_expected_1181", "Array element destructuring pattern expected."),
    A_destructuring_declaration_must_have_an_initializer: t(1182, e.DiagnosticCategory.Error, "A_destructuring_declaration_must_have_an_initializer_1182", "A destructuring declaration must have an initializer."),
    An_implementation_cannot_be_declared_in_ambient_contexts: t(1183, e.DiagnosticCategory.Error, "An_implementation_cannot_be_declared_in_ambient_contexts_1183", "An implementation cannot be declared in ambient contexts."),
    Modifiers_cannot_appear_here: t(1184, e.DiagnosticCategory.Error, "Modifiers_cannot_appear_here_1184", "Modifiers cannot appear here."),
    Merge_conflict_marker_encountered: t(1185, e.DiagnosticCategory.Error, "Merge_conflict_marker_encountered_1185", "Merge conflict marker encountered."),
    A_rest_element_cannot_have_an_initializer: t(1186, e.DiagnosticCategory.Error, "A_rest_element_cannot_have_an_initializer_1186", "A rest element cannot have an initializer."),
    A_parameter_property_may_not_be_declared_using_a_binding_pattern: t(1187, e.DiagnosticCategory.Error, "A_parameter_property_may_not_be_declared_using_a_binding_pattern_1187", "A parameter property may not be declared using a binding pattern."),
    Only_a_single_variable_declaration_is_allowed_in_a_for_of_statement: t(1188, e.DiagnosticCategory.Error, "Only_a_single_variable_declaration_is_allowed_in_a_for_of_statement_1188", "Only a single variable declaration is allowed in a 'for...of' statement."),
    The_variable_declaration_of_a_for_in_statement_cannot_have_an_initializer: t(1189, e.DiagnosticCategory.Error, "The_variable_declaration_of_a_for_in_statement_cannot_have_an_initializer_1189", "The variable declaration of a 'for...in' statement cannot have an initializer."),
    The_variable_declaration_of_a_for_of_statement_cannot_have_an_initializer: t(1190, e.DiagnosticCategory.Error, "The_variable_declaration_of_a_for_of_statement_cannot_have_an_initializer_1190", "The variable declaration of a 'for...of' statement cannot have an initializer."),
    An_import_declaration_cannot_have_modifiers: t(1191, e.DiagnosticCategory.Error, "An_import_declaration_cannot_have_modifiers_1191", "An import declaration cannot have modifiers."),
    Module_0_has_no_default_export: t(1192, e.DiagnosticCategory.Error, "Module_0_has_no_default_export_1192", "Module '{0}' has no default export."),
    An_export_declaration_cannot_have_modifiers: t(1193, e.DiagnosticCategory.Error, "An_export_declaration_cannot_have_modifiers_1193", "An export declaration cannot have modifiers."),
    Export_declarations_are_not_permitted_in_a_namespace: t(1194, e.DiagnosticCategory.Error, "Export_declarations_are_not_permitted_in_a_namespace_1194", "Export declarations are not permitted in a namespace."),
    Catch_clause_variable_cannot_have_a_type_annotation: t(1196, e.DiagnosticCategory.Error, "Catch_clause_variable_cannot_have_a_type_annotation_1196", "Catch clause variable cannot have a type annotation."),
    Catch_clause_variable_cannot_have_an_initializer: t(1197, e.DiagnosticCategory.Error, "Catch_clause_variable_cannot_have_an_initializer_1197", "Catch clause variable cannot have an initializer."),
    An_extended_Unicode_escape_value_must_be_between_0x0_and_0x10FFFF_inclusive: t(1198, e.DiagnosticCategory.Error, "An_extended_Unicode_escape_value_must_be_between_0x0_and_0x10FFFF_inclusive_1198", "An extended Unicode escape value must be between 0x0 and 0x10FFFF inclusive."),
    Unterminated_Unicode_escape_sequence: t(1199, e.DiagnosticCategory.Error, "Unterminated_Unicode_escape_sequence_1199", "Unterminated Unicode escape sequence."),
    Line_terminator_not_permitted_before_arrow: t(1200, e.DiagnosticCategory.Error, "Line_terminator_not_permitted_before_arrow_1200", "Line terminator not permitted before arrow."),
    Import_assignment_cannot_be_used_when_targeting_ECMAScript_modules_Consider_using_import_Asterisk_as_ns_from_mod_import_a_from_mod_import_d_from_mod_or_another_module_format_instead: t(1202, e.DiagnosticCategory.Error, "Import_assignment_cannot_be_used_when_targeting_ECMAScript_modules_Consider_using_import_Asterisk_as_1202", "Import assignment cannot be used when targeting ECMAScript modules. Consider using 'import * as ns from \"mod\"', 'import {a} from \"mod\"', 'import d from \"mod\"', or another module format instead."),
    Export_assignment_cannot_be_used_when_targeting_ECMAScript_modules_Consider_using_export_default_or_another_module_format_instead: t(1203, e.DiagnosticCategory.Error, "Export_assignment_cannot_be_used_when_targeting_ECMAScript_modules_Consider_using_export_default_or__1203", "Export assignment cannot be used when targeting ECMAScript modules. Consider using 'export default' or another module format instead."),
    Cannot_re_export_a_type_when_the_isolatedModules_flag_is_provided: t(1205, e.DiagnosticCategory.Error, "Cannot_re_export_a_type_when_the_isolatedModules_flag_is_provided_1205", "Cannot re-export a type when the '--isolatedModules' flag is provided."),
    Decorators_are_not_valid_here: t(1206, e.DiagnosticCategory.Error, "Decorators_are_not_valid_here_1206", "Decorators are not valid here."),
    Decorators_cannot_be_applied_to_multiple_get_Slashset_accessors_of_the_same_name: t(1207, e.DiagnosticCategory.Error, "Decorators_cannot_be_applied_to_multiple_get_Slashset_accessors_of_the_same_name_1207", "Decorators cannot be applied to multiple get/set accessors of the same name."),
    Cannot_compile_namespaces_when_the_isolatedModules_flag_is_provided: t(1208, e.DiagnosticCategory.Error, "Cannot_compile_namespaces_when_the_isolatedModules_flag_is_provided_1208", "Cannot compile namespaces when the '--isolatedModules' flag is provided."),
    Ambient_const_enums_are_not_allowed_when_the_isolatedModules_flag_is_provided: t(1209, e.DiagnosticCategory.Error, "Ambient_const_enums_are_not_allowed_when_the_isolatedModules_flag_is_provided_1209", "Ambient const enums are not allowed when the '--isolatedModules' flag is provided."),
    Invalid_use_of_0_Class_definitions_are_automatically_in_strict_mode: t(1210, e.DiagnosticCategory.Error, "Invalid_use_of_0_Class_definitions_are_automatically_in_strict_mode_1210", "Invalid use of '{0}'. Class definitions are automatically in strict mode."),
    A_class_declaration_without_the_default_modifier_must_have_a_name: t(1211, e.DiagnosticCategory.Error, "A_class_declaration_without_the_default_modifier_must_have_a_name_1211", "A class declaration without the 'default' modifier must have a name."),
    Identifier_expected_0_is_a_reserved_word_in_strict_mode: t(1212, e.DiagnosticCategory.Error, "Identifier_expected_0_is_a_reserved_word_in_strict_mode_1212", "Identifier expected. '{0}' is a reserved word in strict mode."),
    Identifier_expected_0_is_a_reserved_word_in_strict_mode_Class_definitions_are_automatically_in_strict_mode: t(1213, e.DiagnosticCategory.Error, "Identifier_expected_0_is_a_reserved_word_in_strict_mode_Class_definitions_are_automatically_in_stric_1213", "Identifier expected. '{0}' is a reserved word in strict mode. Class definitions are automatically in strict mode."),
    Identifier_expected_0_is_a_reserved_word_in_strict_mode_Modules_are_automatically_in_strict_mode: t(1214, e.DiagnosticCategory.Error, "Identifier_expected_0_is_a_reserved_word_in_strict_mode_Modules_are_automatically_in_strict_mode_1214", "Identifier expected. '{0}' is a reserved word in strict mode. Modules are automatically in strict mode."),
    Invalid_use_of_0_Modules_are_automatically_in_strict_mode: t(1215, e.DiagnosticCategory.Error, "Invalid_use_of_0_Modules_are_automatically_in_strict_mode_1215", "Invalid use of '{0}'. Modules are automatically in strict mode."),
    Identifier_expected_esModule_is_reserved_as_an_exported_marker_when_transforming_ECMAScript_modules: t(1216, e.DiagnosticCategory.Error, "Identifier_expected_esModule_is_reserved_as_an_exported_marker_when_transforming_ECMAScript_modules_1216", "Identifier expected. '__esModule' is reserved as an exported marker when transforming ECMAScript modules."),
    Export_assignment_is_not_supported_when_module_flag_is_system: t(1218, e.DiagnosticCategory.Error, "Export_assignment_is_not_supported_when_module_flag_is_system_1218", "Export assignment is not supported when '--module' flag is 'system'."),
    Experimental_support_for_decorators_is_a_feature_that_is_subject_to_change_in_a_future_release_Set_the_experimentalDecorators_option_to_remove_this_warning: t(1219, e.DiagnosticCategory.Error, "Experimental_support_for_decorators_is_a_feature_that_is_subject_to_change_in_a_future_release_Set_t_1219", "Experimental support for decorators is a feature that is subject to change in a future release. Set the 'experimentalDecorators' option to remove this warning."),
    Generators_are_only_available_when_targeting_ECMAScript_2015_or_higher: t(1220, e.DiagnosticCategory.Error, "Generators_are_only_available_when_targeting_ECMAScript_2015_or_higher_1220", "Generators are only available when targeting ECMAScript 2015 or higher."),
    Generators_are_not_allowed_in_an_ambient_context: t(1221, e.DiagnosticCategory.Error, "Generators_are_not_allowed_in_an_ambient_context_1221", "Generators are not allowed in an ambient context."),
    An_overload_signature_cannot_be_declared_as_a_generator: t(1222, e.DiagnosticCategory.Error, "An_overload_signature_cannot_be_declared_as_a_generator_1222", "An overload signature cannot be declared as a generator."),
    _0_tag_already_specified: t(1223, e.DiagnosticCategory.Error, "_0_tag_already_specified_1223", "'{0}' tag already specified."),
    Signature_0_must_be_a_type_predicate: t(1224, e.DiagnosticCategory.Error, "Signature_0_must_be_a_type_predicate_1224", "Signature '{0}' must be a type predicate."),
    Cannot_find_parameter_0: t(1225, e.DiagnosticCategory.Error, "Cannot_find_parameter_0_1225", "Cannot find parameter '{0}'."),
    Type_predicate_0_is_not_assignable_to_1: t(1226, e.DiagnosticCategory.Error, "Type_predicate_0_is_not_assignable_to_1_1226", "Type predicate '{0}' is not assignable to '{1}'."),
    Parameter_0_is_not_in_the_same_position_as_parameter_1: t(1227, e.DiagnosticCategory.Error, "Parameter_0_is_not_in_the_same_position_as_parameter_1_1227", "Parameter '{0}' is not in the same position as parameter '{1}'."),
    A_type_predicate_is_only_allowed_in_return_type_position_for_functions_and_methods: t(1228, e.DiagnosticCategory.Error, "A_type_predicate_is_only_allowed_in_return_type_position_for_functions_and_methods_1228", "A type predicate is only allowed in return type position for functions and methods."),
    A_type_predicate_cannot_reference_a_rest_parameter: t(1229, e.DiagnosticCategory.Error, "A_type_predicate_cannot_reference_a_rest_parameter_1229", "A type predicate cannot reference a rest parameter."),
    A_type_predicate_cannot_reference_element_0_in_a_binding_pattern: t(1230, e.DiagnosticCategory.Error, "A_type_predicate_cannot_reference_element_0_in_a_binding_pattern_1230", "A type predicate cannot reference element '{0}' in a binding pattern."),
    An_export_assignment_can_only_be_used_in_a_module: t(1231, e.DiagnosticCategory.Error, "An_export_assignment_can_only_be_used_in_a_module_1231", "An export assignment can only be used in a module."),
    An_import_declaration_can_only_be_used_in_a_namespace_or_module: t(1232, e.DiagnosticCategory.Error, "An_import_declaration_can_only_be_used_in_a_namespace_or_module_1232", "An import declaration can only be used in a namespace or module."),
    An_export_declaration_can_only_be_used_in_a_module: t(1233, e.DiagnosticCategory.Error, "An_export_declaration_can_only_be_used_in_a_module_1233", "An export declaration can only be used in a module."),
    An_ambient_module_declaration_is_only_allowed_at_the_top_level_in_a_file: t(1234, e.DiagnosticCategory.Error, "An_ambient_module_declaration_is_only_allowed_at_the_top_level_in_a_file_1234", "An ambient module declaration is only allowed at the top level in a file."),
    A_namespace_declaration_is_only_allowed_in_a_namespace_or_module: t(1235, e.DiagnosticCategory.Error, "A_namespace_declaration_is_only_allowed_in_a_namespace_or_module_1235", "A namespace declaration is only allowed in a namespace or module."),
    The_return_type_of_a_property_decorator_function_must_be_either_void_or_any: t(1236, e.DiagnosticCategory.Error, "The_return_type_of_a_property_decorator_function_must_be_either_void_or_any_1236", "The return type of a property decorator function must be either 'void' or 'any'."),
    The_return_type_of_a_parameter_decorator_function_must_be_either_void_or_any: t(1237, e.DiagnosticCategory.Error, "The_return_type_of_a_parameter_decorator_function_must_be_either_void_or_any_1237", "The return type of a parameter decorator function must be either 'void' or 'any'."),
    Unable_to_resolve_signature_of_class_decorator_when_called_as_an_expression: t(1238, e.DiagnosticCategory.Error, "Unable_to_resolve_signature_of_class_decorator_when_called_as_an_expression_1238", "Unable to resolve signature of class decorator when called as an expression."),
    Unable_to_resolve_signature_of_parameter_decorator_when_called_as_an_expression: t(1239, e.DiagnosticCategory.Error, "Unable_to_resolve_signature_of_parameter_decorator_when_called_as_an_expression_1239", "Unable to resolve signature of parameter decorator when called as an expression."),
    Unable_to_resolve_signature_of_property_decorator_when_called_as_an_expression: t(1240, e.DiagnosticCategory.Error, "Unable_to_resolve_signature_of_property_decorator_when_called_as_an_expression_1240", "Unable to resolve signature of property decorator when called as an expression."),
    Unable_to_resolve_signature_of_method_decorator_when_called_as_an_expression: t(1241, e.DiagnosticCategory.Error, "Unable_to_resolve_signature_of_method_decorator_when_called_as_an_expression_1241", "Unable to resolve signature of method decorator when called as an expression."),
    abstract_modifier_can_only_appear_on_a_class_method_or_property_declaration: t(1242, e.DiagnosticCategory.Error, "abstract_modifier_can_only_appear_on_a_class_method_or_property_declaration_1242", "'abstract' modifier can only appear on a class, method, or property declaration."),
    _0_modifier_cannot_be_used_with_1_modifier: t(1243, e.DiagnosticCategory.Error, "_0_modifier_cannot_be_used_with_1_modifier_1243", "'{0}' modifier cannot be used with '{1}' modifier."),
    Abstract_methods_can_only_appear_within_an_abstract_class: t(1244, e.DiagnosticCategory.Error, "Abstract_methods_can_only_appear_within_an_abstract_class_1244", "Abstract methods can only appear within an abstract class."),
    Method_0_cannot_have_an_implementation_because_it_is_marked_abstract: t(1245, e.DiagnosticCategory.Error, "Method_0_cannot_have_an_implementation_because_it_is_marked_abstract_1245", "Method '{0}' cannot have an implementation because it is marked abstract."),
    An_interface_property_cannot_have_an_initializer: t(1246, e.DiagnosticCategory.Error, "An_interface_property_cannot_have_an_initializer_1246", "An interface property cannot have an initializer."),
    A_type_literal_property_cannot_have_an_initializer: t(1247, e.DiagnosticCategory.Error, "A_type_literal_property_cannot_have_an_initializer_1247", "A type literal property cannot have an initializer."),
    A_class_member_cannot_have_the_0_keyword: t(1248, e.DiagnosticCategory.Error, "A_class_member_cannot_have_the_0_keyword_1248", "A class member cannot have the '{0}' keyword."),
    A_decorator_can_only_decorate_a_method_implementation_not_an_overload: t(1249, e.DiagnosticCategory.Error, "A_decorator_can_only_decorate_a_method_implementation_not_an_overload_1249", "A decorator can only decorate a method implementation, not an overload."),
    Function_declarations_are_not_allowed_inside_blocks_in_strict_mode_when_targeting_ES3_or_ES5: t(1250, e.DiagnosticCategory.Error, "Function_declarations_are_not_allowed_inside_blocks_in_strict_mode_when_targeting_ES3_or_ES5_1250", "Function declarations are not allowed inside blocks in strict mode when targeting 'ES3' or 'ES5'."),
    Function_declarations_are_not_allowed_inside_blocks_in_strict_mode_when_targeting_ES3_or_ES5_Class_definitions_are_automatically_in_strict_mode: t(1251, e.DiagnosticCategory.Error, "Function_declarations_are_not_allowed_inside_blocks_in_strict_mode_when_targeting_ES3_or_ES5_Class_d_1251", "Function declarations are not allowed inside blocks in strict mode when targeting 'ES3' or 'ES5'. Class definitions are automatically in strict mode."),
    Function_declarations_are_not_allowed_inside_blocks_in_strict_mode_when_targeting_ES3_or_ES5_Modules_are_automatically_in_strict_mode: t(1252, e.DiagnosticCategory.Error, "Function_declarations_are_not_allowed_inside_blocks_in_strict_mode_when_targeting_ES3_or_ES5_Modules_1252", "Function declarations are not allowed inside blocks in strict mode when targeting 'ES3' or 'ES5'. Modules are automatically in strict mode."),
    _0_tag_cannot_be_used_independently_as_a_top_level_JSDoc_tag: t(1253, e.DiagnosticCategory.Error, "_0_tag_cannot_be_used_independently_as_a_top_level_JSDoc_tag_1253", "'{0}' tag cannot be used independently as a top level JSDoc tag."),
    A_const_initializer_in_an_ambient_context_must_be_a_string_or_numeric_literal: t(1254, e.DiagnosticCategory.Error, "A_const_initializer_in_an_ambient_context_must_be_a_string_or_numeric_literal_1254", "A 'const' initializer in an ambient context must be a string or numeric literal."),
    A_definite_assignment_assertion_is_not_permitted_in_this_context: t(1255, e.DiagnosticCategory.Error, "A_definite_assignment_assertion_is_not_permitted_in_this_context_1255", "A definite assignment assertion '!' is not permitted in this context."),
    A_rest_element_must_be_last_in_a_tuple_type: t(1256, e.DiagnosticCategory.Error, "A_rest_element_must_be_last_in_a_tuple_type_1256", "A rest element must be last in a tuple type."),
    A_required_element_cannot_follow_an_optional_element: t(1257, e.DiagnosticCategory.Error, "A_required_element_cannot_follow_an_optional_element_1257", "A required element cannot follow an optional element."),
    with_statements_are_not_allowed_in_an_async_function_block: t(1300, e.DiagnosticCategory.Error, "with_statements_are_not_allowed_in_an_async_function_block_1300", "'with' statements are not allowed in an async function block."),
    await_expression_is_only_allowed_within_an_async_function: t(1308, e.DiagnosticCategory.Error, "await_expression_is_only_allowed_within_an_async_function_1308", "'await' expression is only allowed within an async function."),
    can_only_be_used_in_an_object_literal_property_inside_a_destructuring_assignment: t(1312, e.DiagnosticCategory.Error, "can_only_be_used_in_an_object_literal_property_inside_a_destructuring_assignment_1312", "'=' can only be used in an object literal property inside a destructuring assignment."),
    The_body_of_an_if_statement_cannot_be_the_empty_statement: t(1313, e.DiagnosticCategory.Error, "The_body_of_an_if_statement_cannot_be_the_empty_statement_1313", "The body of an 'if' statement cannot be the empty statement."),
    Global_module_exports_may_only_appear_in_module_files: t(1314, e.DiagnosticCategory.Error, "Global_module_exports_may_only_appear_in_module_files_1314", "Global module exports may only appear in module files."),
    Global_module_exports_may_only_appear_in_declaration_files: t(1315, e.DiagnosticCategory.Error, "Global_module_exports_may_only_appear_in_declaration_files_1315", "Global module exports may only appear in declaration files."),
    Global_module_exports_may_only_appear_at_top_level: t(1316, e.DiagnosticCategory.Error, "Global_module_exports_may_only_appear_at_top_level_1316", "Global module exports may only appear at top level."),
    A_parameter_property_cannot_be_declared_using_a_rest_parameter: t(1317, e.DiagnosticCategory.Error, "A_parameter_property_cannot_be_declared_using_a_rest_parameter_1317", "A parameter property cannot be declared using a rest parameter."),
    An_abstract_accessor_cannot_have_an_implementation: t(1318, e.DiagnosticCategory.Error, "An_abstract_accessor_cannot_have_an_implementation_1318", "An abstract accessor cannot have an implementation."),
    A_default_export_can_only_be_used_in_an_ECMAScript_style_module: t(1319, e.DiagnosticCategory.Error, "A_default_export_can_only_be_used_in_an_ECMAScript_style_module_1319", "A default export can only be used in an ECMAScript-style module."),
    Type_of_await_operand_must_either_be_a_valid_promise_or_must_not_contain_a_callable_then_member: t(1320, e.DiagnosticCategory.Error, "Type_of_await_operand_must_either_be_a_valid_promise_or_must_not_contain_a_callable_then_member_1320", "Type of 'await' operand must either be a valid promise or must not contain a callable 'then' member."),
    Type_of_yield_operand_in_an_async_generator_must_either_be_a_valid_promise_or_must_not_contain_a_callable_then_member: t(1321, e.DiagnosticCategory.Error, "Type_of_yield_operand_in_an_async_generator_must_either_be_a_valid_promise_or_must_not_contain_a_cal_1321", "Type of 'yield' operand in an async generator must either be a valid promise or must not contain a callable 'then' member."),
    Type_of_iterated_elements_of_a_yield_Asterisk_operand_must_either_be_a_valid_promise_or_must_not_contain_a_callable_then_member: t(1322, e.DiagnosticCategory.Error, "Type_of_iterated_elements_of_a_yield_Asterisk_operand_must_either_be_a_valid_promise_or_must_not_con_1322", "Type of iterated elements of a 'yield*' operand must either be a valid promise or must not contain a callable 'then' member."),
    Dynamic_import_is_only_supported_when_module_flag_is_commonjs_or_esNext: t(1323, e.DiagnosticCategory.Error, "Dynamic_import_is_only_supported_when_module_flag_is_commonjs_or_esNext_1323", "Dynamic import is only supported when '--module' flag is 'commonjs' or 'esNext'."),
    Dynamic_import_must_have_one_specifier_as_an_argument: t(1324, e.DiagnosticCategory.Error, "Dynamic_import_must_have_one_specifier_as_an_argument_1324", "Dynamic import must have one specifier as an argument."),
    Specifier_of_dynamic_import_cannot_be_spread_element: t(1325, e.DiagnosticCategory.Error, "Specifier_of_dynamic_import_cannot_be_spread_element_1325", "Specifier of dynamic import cannot be spread element."),
    Dynamic_import_cannot_have_type_arguments: t(1326, e.DiagnosticCategory.Error, "Dynamic_import_cannot_have_type_arguments_1326", "Dynamic import cannot have type arguments"),
    String_literal_with_double_quotes_expected: t(1327, e.DiagnosticCategory.Error, "String_literal_with_double_quotes_expected_1327", "String literal with double quotes expected."),
    Property_value_can_only_be_string_literal_numeric_literal_true_false_null_object_literal_or_array_literal: t(1328, e.DiagnosticCategory.Error, "Property_value_can_only_be_string_literal_numeric_literal_true_false_null_object_literal_or_array_li_1328", "Property value can only be string literal, numeric literal, 'true', 'false', 'null', object literal or array literal."),
    _0_accepts_too_few_arguments_to_be_used_as_a_decorator_here_Did_you_mean_to_call_it_first_and_write_0: t(1329, e.DiagnosticCategory.Error, "_0_accepts_too_few_arguments_to_be_used_as_a_decorator_here_Did_you_mean_to_call_it_first_and_write__1329", "'{0}' accepts too few arguments to be used as a decorator here. Did you mean to call it first and write '@{0}()'?"),
    A_property_of_an_interface_or_type_literal_whose_type_is_a_unique_symbol_type_must_be_readonly: t(1330, e.DiagnosticCategory.Error, "A_property_of_an_interface_or_type_literal_whose_type_is_a_unique_symbol_type_must_be_readonly_1330", "A property of an interface or type literal whose type is a 'unique symbol' type must be 'readonly'."),
    A_property_of_a_class_whose_type_is_a_unique_symbol_type_must_be_both_static_and_readonly: t(1331, e.DiagnosticCategory.Error, "A_property_of_a_class_whose_type_is_a_unique_symbol_type_must_be_both_static_and_readonly_1331", "A property of a class whose type is a 'unique symbol' type must be both 'static' and 'readonly'."),
    A_variable_whose_type_is_a_unique_symbol_type_must_be_const: t(1332, e.DiagnosticCategory.Error, "A_variable_whose_type_is_a_unique_symbol_type_must_be_const_1332", "A variable whose type is a 'unique symbol' type must be 'const'."),
    unique_symbol_types_may_not_be_used_on_a_variable_declaration_with_a_binding_name: t(1333, e.DiagnosticCategory.Error, "unique_symbol_types_may_not_be_used_on_a_variable_declaration_with_a_binding_name_1333", "'unique symbol' types may not be used on a variable declaration with a binding name."),
    unique_symbol_types_are_only_allowed_on_variables_in_a_variable_statement: t(1334, e.DiagnosticCategory.Error, "unique_symbol_types_are_only_allowed_on_variables_in_a_variable_statement_1334", "'unique symbol' types are only allowed on variables in a variable statement."),
    unique_symbol_types_are_not_allowed_here: t(1335, e.DiagnosticCategory.Error, "unique_symbol_types_are_not_allowed_here_1335", "'unique symbol' types are not allowed here."),
    An_index_signature_parameter_type_cannot_be_a_type_alias_Consider_writing_0_Colon_1_Colon_2_instead: t(1336, e.DiagnosticCategory.Error, "An_index_signature_parameter_type_cannot_be_a_type_alias_Consider_writing_0_Colon_1_Colon_2_instead_1336", "An index signature parameter type cannot be a type alias. Consider writing '[{0}: {1}]: {2}' instead."),
    An_index_signature_parameter_type_cannot_be_a_union_type_Consider_using_a_mapped_object_type_instead: t(1337, e.DiagnosticCategory.Error, "An_index_signature_parameter_type_cannot_be_a_union_type_Consider_using_a_mapped_object_type_instead_1337", "An index signature parameter type cannot be a union type. Consider using a mapped object type instead."),
    infer_declarations_are_only_permitted_in_the_extends_clause_of_a_conditional_type: t(1338, e.DiagnosticCategory.Error, "infer_declarations_are_only_permitted_in_the_extends_clause_of_a_conditional_type_1338", "'infer' declarations are only permitted in the 'extends' clause of a conditional type."),
    Module_0_does_not_refer_to_a_value_but_is_used_as_a_value_here: t(1339, e.DiagnosticCategory.Error, "Module_0_does_not_refer_to_a_value_but_is_used_as_a_value_here_1339", "Module '{0}' does not refer to a value, but is used as a value here."),
    Module_0_does_not_refer_to_a_type_but_is_used_as_a_type_here_Did_you_mean_typeof_import_0: t(1340, e.DiagnosticCategory.Error, "Module_0_does_not_refer_to_a_type_but_is_used_as_a_type_here_Did_you_mean_typeof_import_0_1340", "Module '{0}' does not refer to a type, but is used as a type here. Did you mean 'typeof import('{0}')'?"),
    Type_arguments_cannot_be_used_here: t(1342, e.DiagnosticCategory.Error, "Type_arguments_cannot_be_used_here_1342", "Type arguments cannot be used here."),
    The_import_meta_meta_property_is_only_allowed_using_ESNext_for_the_target_and_module_compiler_options: t(1343, e.DiagnosticCategory.Error, "The_import_meta_meta_property_is_only_allowed_using_ESNext_for_the_target_and_module_compiler_option_1343", "The 'import.meta' meta-property is only allowed using 'ESNext' for the 'target' and 'module' compiler options."),
    Duplicate_identifier_0: t(2300, e.DiagnosticCategory.Error, "Duplicate_identifier_0_2300", "Duplicate identifier '{0}'."),
    Initializer_of_instance_member_variable_0_cannot_reference_identifier_1_declared_in_the_constructor: t(2301, e.DiagnosticCategory.Error, "Initializer_of_instance_member_variable_0_cannot_reference_identifier_1_declared_in_the_constructor_2301", "Initializer of instance member variable '{0}' cannot reference identifier '{1}' declared in the constructor."),
    Static_members_cannot_reference_class_type_parameters: t(2302, e.DiagnosticCategory.Error, "Static_members_cannot_reference_class_type_parameters_2302", "Static members cannot reference class type parameters."),
    Circular_definition_of_import_alias_0: t(2303, e.DiagnosticCategory.Error, "Circular_definition_of_import_alias_0_2303", "Circular definition of import alias '{0}'."),
    Cannot_find_name_0: t(2304, e.DiagnosticCategory.Error, "Cannot_find_name_0_2304", "Cannot find name '{0}'."),
    Module_0_has_no_exported_member_1: t(2305, e.DiagnosticCategory.Error, "Module_0_has_no_exported_member_1_2305", "Module '{0}' has no exported member '{1}'."),
    File_0_is_not_a_module: t(2306, e.DiagnosticCategory.Error, "File_0_is_not_a_module_2306", "File '{0}' is not a module."),
    Cannot_find_module_0: t(2307, e.DiagnosticCategory.Error, "Cannot_find_module_0_2307", "Cannot find module '{0}'."),
    Module_0_has_already_exported_a_member_named_1_Consider_explicitly_re_exporting_to_resolve_the_ambiguity: t(2308, e.DiagnosticCategory.Error, "Module_0_has_already_exported_a_member_named_1_Consider_explicitly_re_exporting_to_resolve_the_ambig_2308", "Module {0} has already exported a member named '{1}'. Consider explicitly re-exporting to resolve the ambiguity."),
    An_export_assignment_cannot_be_used_in_a_module_with_other_exported_elements: t(2309, e.DiagnosticCategory.Error, "An_export_assignment_cannot_be_used_in_a_module_with_other_exported_elements_2309", "An export assignment cannot be used in a module with other exported elements."),
    Type_0_recursively_references_itself_as_a_base_type: t(2310, e.DiagnosticCategory.Error, "Type_0_recursively_references_itself_as_a_base_type_2310", "Type '{0}' recursively references itself as a base type."),
    A_class_may_only_extend_another_class: t(2311, e.DiagnosticCategory.Error, "A_class_may_only_extend_another_class_2311", "A class may only extend another class."),
    An_interface_may_only_extend_a_class_or_another_interface: t(2312, e.DiagnosticCategory.Error, "An_interface_may_only_extend_a_class_or_another_interface_2312", "An interface may only extend a class or another interface."),
    Type_parameter_0_has_a_circular_constraint: t(2313, e.DiagnosticCategory.Error, "Type_parameter_0_has_a_circular_constraint_2313", "Type parameter '{0}' has a circular constraint."),
    Generic_type_0_requires_1_type_argument_s: t(2314, e.DiagnosticCategory.Error, "Generic_type_0_requires_1_type_argument_s_2314", "Generic type '{0}' requires {1} type argument(s)."),
    Type_0_is_not_generic: t(2315, e.DiagnosticCategory.Error, "Type_0_is_not_generic_2315", "Type '{0}' is not generic."),
    Global_type_0_must_be_a_class_or_interface_type: t(2316, e.DiagnosticCategory.Error, "Global_type_0_must_be_a_class_or_interface_type_2316", "Global type '{0}' must be a class or interface type."),
    Global_type_0_must_have_1_type_parameter_s: t(2317, e.DiagnosticCategory.Error, "Global_type_0_must_have_1_type_parameter_s_2317", "Global type '{0}' must have {1} type parameter(s)."),
    Cannot_find_global_type_0: t(2318, e.DiagnosticCategory.Error, "Cannot_find_global_type_0_2318", "Cannot find global type '{0}'."),
    Named_property_0_of_types_1_and_2_are_not_identical: t(2319, e.DiagnosticCategory.Error, "Named_property_0_of_types_1_and_2_are_not_identical_2319", "Named property '{0}' of types '{1}' and '{2}' are not identical."),
    Interface_0_cannot_simultaneously_extend_types_1_and_2: t(2320, e.DiagnosticCategory.Error, "Interface_0_cannot_simultaneously_extend_types_1_and_2_2320", "Interface '{0}' cannot simultaneously extend types '{1}' and '{2}'."),
    Excessive_stack_depth_comparing_types_0_and_1: t(2321, e.DiagnosticCategory.Error, "Excessive_stack_depth_comparing_types_0_and_1_2321", "Excessive stack depth comparing types '{0}' and '{1}'."),
    Type_0_is_not_assignable_to_type_1: t(2322, e.DiagnosticCategory.Error, "Type_0_is_not_assignable_to_type_1_2322", "Type '{0}' is not assignable to type '{1}'."),
    Cannot_redeclare_exported_variable_0: t(2323, e.DiagnosticCategory.Error, "Cannot_redeclare_exported_variable_0_2323", "Cannot redeclare exported variable '{0}'."),
    Property_0_is_missing_in_type_1: t(2324, e.DiagnosticCategory.Error, "Property_0_is_missing_in_type_1_2324", "Property '{0}' is missing in type '{1}'."),
    Property_0_is_private_in_type_1_but_not_in_type_2: t(2325, e.DiagnosticCategory.Error, "Property_0_is_private_in_type_1_but_not_in_type_2_2325", "Property '{0}' is private in type '{1}' but not in type '{2}'."),
    Types_of_property_0_are_incompatible: t(2326, e.DiagnosticCategory.Error, "Types_of_property_0_are_incompatible_2326", "Types of property '{0}' are incompatible."),
    Property_0_is_optional_in_type_1_but_required_in_type_2: t(2327, e.DiagnosticCategory.Error, "Property_0_is_optional_in_type_1_but_required_in_type_2_2327", "Property '{0}' is optional in type '{1}' but required in type '{2}'."),
    Types_of_parameters_0_and_1_are_incompatible: t(2328, e.DiagnosticCategory.Error, "Types_of_parameters_0_and_1_are_incompatible_2328", "Types of parameters '{0}' and '{1}' are incompatible."),
    Index_signature_is_missing_in_type_0: t(2329, e.DiagnosticCategory.Error, "Index_signature_is_missing_in_type_0_2329", "Index signature is missing in type '{0}'."),
    Index_signatures_are_incompatible: t(2330, e.DiagnosticCategory.Error, "Index_signatures_are_incompatible_2330", "Index signatures are incompatible."),
    this_cannot_be_referenced_in_a_module_or_namespace_body: t(2331, e.DiagnosticCategory.Error, "this_cannot_be_referenced_in_a_module_or_namespace_body_2331", "'this' cannot be referenced in a module or namespace body."),
    this_cannot_be_referenced_in_current_location: t(2332, e.DiagnosticCategory.Error, "this_cannot_be_referenced_in_current_location_2332", "'this' cannot be referenced in current location."),
    this_cannot_be_referenced_in_constructor_arguments: t(2333, e.DiagnosticCategory.Error, "this_cannot_be_referenced_in_constructor_arguments_2333", "'this' cannot be referenced in constructor arguments."),
    this_cannot_be_referenced_in_a_static_property_initializer: t(2334, e.DiagnosticCategory.Error, "this_cannot_be_referenced_in_a_static_property_initializer_2334", "'this' cannot be referenced in a static property initializer."),
    super_can_only_be_referenced_in_a_derived_class: t(2335, e.DiagnosticCategory.Error, "super_can_only_be_referenced_in_a_derived_class_2335", "'super' can only be referenced in a derived class."),
    super_cannot_be_referenced_in_constructor_arguments: t(2336, e.DiagnosticCategory.Error, "super_cannot_be_referenced_in_constructor_arguments_2336", "'super' cannot be referenced in constructor arguments."),
    Super_calls_are_not_permitted_outside_constructors_or_in_nested_functions_inside_constructors: t(2337, e.DiagnosticCategory.Error, "Super_calls_are_not_permitted_outside_constructors_or_in_nested_functions_inside_constructors_2337", "Super calls are not permitted outside constructors or in nested functions inside constructors."),
    super_property_access_is_permitted_only_in_a_constructor_member_function_or_member_accessor_of_a_derived_class: t(2338, e.DiagnosticCategory.Error, "super_property_access_is_permitted_only_in_a_constructor_member_function_or_member_accessor_of_a_der_2338", "'super' property access is permitted only in a constructor, member function, or member accessor of a derived class."),
    Property_0_does_not_exist_on_type_1: t(2339, e.DiagnosticCategory.Error, "Property_0_does_not_exist_on_type_1_2339", "Property '{0}' does not exist on type '{1}'."),
    Only_public_and_protected_methods_of_the_base_class_are_accessible_via_the_super_keyword: t(2340, e.DiagnosticCategory.Error, "Only_public_and_protected_methods_of_the_base_class_are_accessible_via_the_super_keyword_2340", "Only public and protected methods of the base class are accessible via the 'super' keyword."),
    Property_0_is_private_and_only_accessible_within_class_1: t(2341, e.DiagnosticCategory.Error, "Property_0_is_private_and_only_accessible_within_class_1_2341", "Property '{0}' is private and only accessible within class '{1}'."),
    An_index_expression_argument_must_be_of_type_string_number_symbol_or_any: t(2342, e.DiagnosticCategory.Error, "An_index_expression_argument_must_be_of_type_string_number_symbol_or_any_2342", "An index expression argument must be of type 'string', 'number', 'symbol', or 'any'."),
    This_syntax_requires_an_imported_helper_named_1_but_module_0_has_no_exported_member_1: t(2343, e.DiagnosticCategory.Error, "This_syntax_requires_an_imported_helper_named_1_but_module_0_has_no_exported_member_1_2343", "This syntax requires an imported helper named '{1}', but module '{0}' has no exported member '{1}'."),
    Type_0_does_not_satisfy_the_constraint_1: t(2344, e.DiagnosticCategory.Error, "Type_0_does_not_satisfy_the_constraint_1_2344", "Type '{0}' does not satisfy the constraint '{1}'."),
    Argument_of_type_0_is_not_assignable_to_parameter_of_type_1: t(2345, e.DiagnosticCategory.Error, "Argument_of_type_0_is_not_assignable_to_parameter_of_type_1_2345", "Argument of type '{0}' is not assignable to parameter of type '{1}'."),
    Call_target_does_not_contain_any_signatures: t(2346, e.DiagnosticCategory.Error, "Call_target_does_not_contain_any_signatures_2346", "Call target does not contain any signatures."),
    Untyped_function_calls_may_not_accept_type_arguments: t(2347, e.DiagnosticCategory.Error, "Untyped_function_calls_may_not_accept_type_arguments_2347", "Untyped function calls may not accept type arguments."),
    Value_of_type_0_is_not_callable_Did_you_mean_to_include_new: t(2348, e.DiagnosticCategory.Error, "Value_of_type_0_is_not_callable_Did_you_mean_to_include_new_2348", "Value of type '{0}' is not callable. Did you mean to include 'new'?"),
    Cannot_invoke_an_expression_whose_type_lacks_a_call_signature_Type_0_has_no_compatible_call_signatures: t(2349, e.DiagnosticCategory.Error, "Cannot_invoke_an_expression_whose_type_lacks_a_call_signature_Type_0_has_no_compatible_call_signatur_2349", "Cannot invoke an expression whose type lacks a call signature. Type '{0}' has no compatible call signatures."),
    Only_a_void_function_can_be_called_with_the_new_keyword: t(2350, e.DiagnosticCategory.Error, "Only_a_void_function_can_be_called_with_the_new_keyword_2350", "Only a void function can be called with the 'new' keyword."),
    Cannot_use_new_with_an_expression_whose_type_lacks_a_call_or_construct_signature: t(2351, e.DiagnosticCategory.Error, "Cannot_use_new_with_an_expression_whose_type_lacks_a_call_or_construct_signature_2351", "Cannot use 'new' with an expression whose type lacks a call or construct signature."),
    Type_0_cannot_be_converted_to_type_1: t(2352, e.DiagnosticCategory.Error, "Type_0_cannot_be_converted_to_type_1_2352", "Type '{0}' cannot be converted to type '{1}'."),
    Object_literal_may_only_specify_known_properties_and_0_does_not_exist_in_type_1: t(2353, e.DiagnosticCategory.Error, "Object_literal_may_only_specify_known_properties_and_0_does_not_exist_in_type_1_2353", "Object literal may only specify known properties, and '{0}' does not exist in type '{1}'."),
    This_syntax_requires_an_imported_helper_but_module_0_cannot_be_found: t(2354, e.DiagnosticCategory.Error, "This_syntax_requires_an_imported_helper_but_module_0_cannot_be_found_2354", "This syntax requires an imported helper but module '{0}' cannot be found."),
    A_function_whose_declared_type_is_neither_void_nor_any_must_return_a_value: t(2355, e.DiagnosticCategory.Error, "A_function_whose_declared_type_is_neither_void_nor_any_must_return_a_value_2355", "A function whose declared type is neither 'void' nor 'any' must return a value."),
    An_arithmetic_operand_must_be_of_type_any_number_or_an_enum_type: t(2356, e.DiagnosticCategory.Error, "An_arithmetic_operand_must_be_of_type_any_number_or_an_enum_type_2356", "An arithmetic operand must be of type 'any', 'number' or an enum type."),
    The_operand_of_an_increment_or_decrement_operator_must_be_a_variable_or_a_property_access: t(2357, e.DiagnosticCategory.Error, "The_operand_of_an_increment_or_decrement_operator_must_be_a_variable_or_a_property_access_2357", "The operand of an increment or decrement operator must be a variable or a property access."),
    The_left_hand_side_of_an_instanceof_expression_must_be_of_type_any_an_object_type_or_a_type_parameter: t(2358, e.DiagnosticCategory.Error, "The_left_hand_side_of_an_instanceof_expression_must_be_of_type_any_an_object_type_or_a_type_paramete_2358", "The left-hand side of an 'instanceof' expression must be of type 'any', an object type or a type parameter."),
    The_right_hand_side_of_an_instanceof_expression_must_be_of_type_any_or_of_a_type_assignable_to_the_Function_interface_type: t(2359, e.DiagnosticCategory.Error, "The_right_hand_side_of_an_instanceof_expression_must_be_of_type_any_or_of_a_type_assignable_to_the_F_2359", "The right-hand side of an 'instanceof' expression must be of type 'any' or of a type assignable to the 'Function' interface type."),
    The_left_hand_side_of_an_in_expression_must_be_of_type_any_string_number_or_symbol: t(2360, e.DiagnosticCategory.Error, "The_left_hand_side_of_an_in_expression_must_be_of_type_any_string_number_or_symbol_2360", "The left-hand side of an 'in' expression must be of type 'any', 'string', 'number', or 'symbol'."),
    The_right_hand_side_of_an_in_expression_must_be_of_type_any_an_object_type_or_a_type_parameter: t(2361, e.DiagnosticCategory.Error, "The_right_hand_side_of_an_in_expression_must_be_of_type_any_an_object_type_or_a_type_parameter_2361", "The right-hand side of an 'in' expression must be of type 'any', an object type or a type parameter."),
    The_left_hand_side_of_an_arithmetic_operation_must_be_of_type_any_number_or_an_enum_type: t(2362, e.DiagnosticCategory.Error, "The_left_hand_side_of_an_arithmetic_operation_must_be_of_type_any_number_or_an_enum_type_2362", "The left-hand side of an arithmetic operation must be of type 'any', 'number' or an enum type."),
    The_right_hand_side_of_an_arithmetic_operation_must_be_of_type_any_number_or_an_enum_type: t(2363, e.DiagnosticCategory.Error, "The_right_hand_side_of_an_arithmetic_operation_must_be_of_type_any_number_or_an_enum_type_2363", "The right-hand side of an arithmetic operation must be of type 'any', 'number' or an enum type."),
    The_left_hand_side_of_an_assignment_expression_must_be_a_variable_or_a_property_access: t(2364, e.DiagnosticCategory.Error, "The_left_hand_side_of_an_assignment_expression_must_be_a_variable_or_a_property_access_2364", "The left-hand side of an assignment expression must be a variable or a property access."),
    Operator_0_cannot_be_applied_to_types_1_and_2: t(2365, e.DiagnosticCategory.Error, "Operator_0_cannot_be_applied_to_types_1_and_2_2365", "Operator '{0}' cannot be applied to types '{1}' and '{2}'."),
    Function_lacks_ending_return_statement_and_return_type_does_not_include_undefined: t(2366, e.DiagnosticCategory.Error, "Function_lacks_ending_return_statement_and_return_type_does_not_include_undefined_2366", "Function lacks ending return statement and return type does not include 'undefined'."),
    This_condition_will_always_return_0_since_the_types_1_and_2_have_no_overlap: t(2367, e.DiagnosticCategory.Error, "This_condition_will_always_return_0_since_the_types_1_and_2_have_no_overlap_2367", "This condition will always return '{0}' since the types '{1}' and '{2}' have no overlap."),
    Type_parameter_name_cannot_be_0: t(2368, e.DiagnosticCategory.Error, "Type_parameter_name_cannot_be_0_2368", "Type parameter name cannot be '{0}'."),
    A_parameter_property_is_only_allowed_in_a_constructor_implementation: t(2369, e.DiagnosticCategory.Error, "A_parameter_property_is_only_allowed_in_a_constructor_implementation_2369", "A parameter property is only allowed in a constructor implementation."),
    A_rest_parameter_must_be_of_an_array_type: t(2370, e.DiagnosticCategory.Error, "A_rest_parameter_must_be_of_an_array_type_2370", "A rest parameter must be of an array type."),
    A_parameter_initializer_is_only_allowed_in_a_function_or_constructor_implementation: t(2371, e.DiagnosticCategory.Error, "A_parameter_initializer_is_only_allowed_in_a_function_or_constructor_implementation_2371", "A parameter initializer is only allowed in a function or constructor implementation."),
    Parameter_0_cannot_be_referenced_in_its_initializer: t(2372, e.DiagnosticCategory.Error, "Parameter_0_cannot_be_referenced_in_its_initializer_2372", "Parameter '{0}' cannot be referenced in its initializer."),
    Initializer_of_parameter_0_cannot_reference_identifier_1_declared_after_it: t(2373, e.DiagnosticCategory.Error, "Initializer_of_parameter_0_cannot_reference_identifier_1_declared_after_it_2373", "Initializer of parameter '{0}' cannot reference identifier '{1}' declared after it."),
    Duplicate_string_index_signature: t(2374, e.DiagnosticCategory.Error, "Duplicate_string_index_signature_2374", "Duplicate string index signature."),
    Duplicate_number_index_signature: t(2375, e.DiagnosticCategory.Error, "Duplicate_number_index_signature_2375", "Duplicate number index signature."),
    A_super_call_must_be_the_first_statement_in_the_constructor_when_a_class_contains_initialized_properties_or_has_parameter_properties: t(2376, e.DiagnosticCategory.Error, "A_super_call_must_be_the_first_statement_in_the_constructor_when_a_class_contains_initialized_proper_2376", "A 'super' call must be the first statement in the constructor when a class contains initialized properties or has parameter properties."),
    Constructors_for_derived_classes_must_contain_a_super_call: t(2377, e.DiagnosticCategory.Error, "Constructors_for_derived_classes_must_contain_a_super_call_2377", "Constructors for derived classes must contain a 'super' call."),
    A_get_accessor_must_return_a_value: t(2378, e.DiagnosticCategory.Error, "A_get_accessor_must_return_a_value_2378", "A 'get' accessor must return a value."),
    Getter_and_setter_accessors_do_not_agree_in_visibility: t(2379, e.DiagnosticCategory.Error, "Getter_and_setter_accessors_do_not_agree_in_visibility_2379", "Getter and setter accessors do not agree in visibility."),
    get_and_set_accessor_must_have_the_same_type: t(2380, e.DiagnosticCategory.Error, "get_and_set_accessor_must_have_the_same_type_2380", "'get' and 'set' accessor must have the same type."),
    A_signature_with_an_implementation_cannot_use_a_string_literal_type: t(2381, e.DiagnosticCategory.Error, "A_signature_with_an_implementation_cannot_use_a_string_literal_type_2381", "A signature with an implementation cannot use a string literal type."),
    Specialized_overload_signature_is_not_assignable_to_any_non_specialized_signature: t(2382, e.DiagnosticCategory.Error, "Specialized_overload_signature_is_not_assignable_to_any_non_specialized_signature_2382", "Specialized overload signature is not assignable to any non-specialized signature."),
    Overload_signatures_must_all_be_exported_or_non_exported: t(2383, e.DiagnosticCategory.Error, "Overload_signatures_must_all_be_exported_or_non_exported_2383", "Overload signatures must all be exported or non-exported."),
    Overload_signatures_must_all_be_ambient_or_non_ambient: t(2384, e.DiagnosticCategory.Error, "Overload_signatures_must_all_be_ambient_or_non_ambient_2384", "Overload signatures must all be ambient or non-ambient."),
    Overload_signatures_must_all_be_public_private_or_protected: t(2385, e.DiagnosticCategory.Error, "Overload_signatures_must_all_be_public_private_or_protected_2385", "Overload signatures must all be public, private or protected."),
    Overload_signatures_must_all_be_optional_or_required: t(2386, e.DiagnosticCategory.Error, "Overload_signatures_must_all_be_optional_or_required_2386", "Overload signatures must all be optional or required."),
    Function_overload_must_be_static: t(2387, e.DiagnosticCategory.Error, "Function_overload_must_be_static_2387", "Function overload must be static."),
    Function_overload_must_not_be_static: t(2388, e.DiagnosticCategory.Error, "Function_overload_must_not_be_static_2388", "Function overload must not be static."),
    Function_implementation_name_must_be_0: t(2389, e.DiagnosticCategory.Error, "Function_implementation_name_must_be_0_2389", "Function implementation name must be '{0}'."),
    Constructor_implementation_is_missing: t(2390, e.DiagnosticCategory.Error, "Constructor_implementation_is_missing_2390", "Constructor implementation is missing."),
    Function_implementation_is_missing_or_not_immediately_following_the_declaration: t(2391, e.DiagnosticCategory.Error, "Function_implementation_is_missing_or_not_immediately_following_the_declaration_2391", "Function implementation is missing or not immediately following the declaration."),
    Multiple_constructor_implementations_are_not_allowed: t(2392, e.DiagnosticCategory.Error, "Multiple_constructor_implementations_are_not_allowed_2392", "Multiple constructor implementations are not allowed."),
    Duplicate_function_implementation: t(2393, e.DiagnosticCategory.Error, "Duplicate_function_implementation_2393", "Duplicate function implementation."),
    Overload_signature_is_not_compatible_with_function_implementation: t(2394, e.DiagnosticCategory.Error, "Overload_signature_is_not_compatible_with_function_implementation_2394", "Overload signature is not compatible with function implementation."),
    Individual_declarations_in_merged_declaration_0_must_be_all_exported_or_all_local: t(2395, e.DiagnosticCategory.Error, "Individual_declarations_in_merged_declaration_0_must_be_all_exported_or_all_local_2395", "Individual declarations in merged declaration '{0}' must be all exported or all local."),
    Duplicate_identifier_arguments_Compiler_uses_arguments_to_initialize_rest_parameters: t(2396, e.DiagnosticCategory.Error, "Duplicate_identifier_arguments_Compiler_uses_arguments_to_initialize_rest_parameters_2396", "Duplicate identifier 'arguments'. Compiler uses 'arguments' to initialize rest parameters."),
    Declaration_name_conflicts_with_built_in_global_identifier_0: t(2397, e.DiagnosticCategory.Error, "Declaration_name_conflicts_with_built_in_global_identifier_0_2397", "Declaration name conflicts with built-in global identifier '{0}'."),
    Duplicate_identifier_this_Compiler_uses_variable_declaration_this_to_capture_this_reference: t(2399, e.DiagnosticCategory.Error, "Duplicate_identifier_this_Compiler_uses_variable_declaration_this_to_capture_this_reference_2399", "Duplicate identifier '_this'. Compiler uses variable declaration '_this' to capture 'this' reference."),
    Expression_resolves_to_variable_declaration_this_that_compiler_uses_to_capture_this_reference: t(2400, e.DiagnosticCategory.Error, "Expression_resolves_to_variable_declaration_this_that_compiler_uses_to_capture_this_reference_2400", "Expression resolves to variable declaration '_this' that compiler uses to capture 'this' reference."),
    Duplicate_identifier_super_Compiler_uses_super_to_capture_base_class_reference: t(2401, e.DiagnosticCategory.Error, "Duplicate_identifier_super_Compiler_uses_super_to_capture_base_class_reference_2401", "Duplicate identifier '_super'. Compiler uses '_super' to capture base class reference."),
    Expression_resolves_to_super_that_compiler_uses_to_capture_base_class_reference: t(2402, e.DiagnosticCategory.Error, "Expression_resolves_to_super_that_compiler_uses_to_capture_base_class_reference_2402", "Expression resolves to '_super' that compiler uses to capture base class reference."),
    Subsequent_variable_declarations_must_have_the_same_type_Variable_0_must_be_of_type_1_but_here_has_type_2: t(2403, e.DiagnosticCategory.Error, "Subsequent_variable_declarations_must_have_the_same_type_Variable_0_must_be_of_type_1_but_here_has_t_2403", "Subsequent variable declarations must have the same type.  Variable '{0}' must be of type '{1}', but here has type '{2}'."),
    The_left_hand_side_of_a_for_in_statement_cannot_use_a_type_annotation: t(2404, e.DiagnosticCategory.Error, "The_left_hand_side_of_a_for_in_statement_cannot_use_a_type_annotation_2404", "The left-hand side of a 'for...in' statement cannot use a type annotation."),
    The_left_hand_side_of_a_for_in_statement_must_be_of_type_string_or_any: t(2405, e.DiagnosticCategory.Error, "The_left_hand_side_of_a_for_in_statement_must_be_of_type_string_or_any_2405", "The left-hand side of a 'for...in' statement must be of type 'string' or 'any'."),
    The_left_hand_side_of_a_for_in_statement_must_be_a_variable_or_a_property_access: t(2406, e.DiagnosticCategory.Error, "The_left_hand_side_of_a_for_in_statement_must_be_a_variable_or_a_property_access_2406", "The left-hand side of a 'for...in' statement must be a variable or a property access."),
    The_right_hand_side_of_a_for_in_statement_must_be_of_type_any_an_object_type_or_a_type_parameter_but_here_has_type_0: t(2407, e.DiagnosticCategory.Error, "The_right_hand_side_of_a_for_in_statement_must_be_of_type_any_an_object_type_or_a_type_parameter_but_2407", "The right-hand side of a 'for...in' statement must be of type 'any', an object type or a type parameter, but here has type '{0}'."),
    Setters_cannot_return_a_value: t(2408, e.DiagnosticCategory.Error, "Setters_cannot_return_a_value_2408", "Setters cannot return a value."),
    Return_type_of_constructor_signature_must_be_assignable_to_the_instance_type_of_the_class: t(2409, e.DiagnosticCategory.Error, "Return_type_of_constructor_signature_must_be_assignable_to_the_instance_type_of_the_class_2409", "Return type of constructor signature must be assignable to the instance type of the class."),
    The_with_statement_is_not_supported_All_symbols_in_a_with_block_will_have_type_any: t(2410, e.DiagnosticCategory.Error, "The_with_statement_is_not_supported_All_symbols_in_a_with_block_will_have_type_any_2410", "The 'with' statement is not supported. All symbols in a 'with' block will have type 'any'."),
    Property_0_of_type_1_is_not_assignable_to_string_index_type_2: t(2411, e.DiagnosticCategory.Error, "Property_0_of_type_1_is_not_assignable_to_string_index_type_2_2411", "Property '{0}' of type '{1}' is not assignable to string index type '{2}'."),
    Property_0_of_type_1_is_not_assignable_to_numeric_index_type_2: t(2412, e.DiagnosticCategory.Error, "Property_0_of_type_1_is_not_assignable_to_numeric_index_type_2_2412", "Property '{0}' of type '{1}' is not assignable to numeric index type '{2}'."),
    Numeric_index_type_0_is_not_assignable_to_string_index_type_1: t(2413, e.DiagnosticCategory.Error, "Numeric_index_type_0_is_not_assignable_to_string_index_type_1_2413", "Numeric index type '{0}' is not assignable to string index type '{1}'."),
    Class_name_cannot_be_0: t(2414, e.DiagnosticCategory.Error, "Class_name_cannot_be_0_2414", "Class name cannot be '{0}'."),
    Class_0_incorrectly_extends_base_class_1: t(2415, e.DiagnosticCategory.Error, "Class_0_incorrectly_extends_base_class_1_2415", "Class '{0}' incorrectly extends base class '{1}'."),
    Property_0_in_type_1_is_not_assignable_to_the_same_property_in_base_type_2: t(2416, e.DiagnosticCategory.Error, "Property_0_in_type_1_is_not_assignable_to_the_same_property_in_base_type_2_2416", "Property '{0}' in type '{1}' is not assignable to the same property in base type '{2}'."),
    Class_static_side_0_incorrectly_extends_base_class_static_side_1: t(2417, e.DiagnosticCategory.Error, "Class_static_side_0_incorrectly_extends_base_class_static_side_1_2417", "Class static side '{0}' incorrectly extends base class static side '{1}'."),
    Type_of_computed_property_s_value_is_0_which_is_not_assignable_to_type_1: t(2418, e.DiagnosticCategory.Error, "Type_of_computed_property_s_value_is_0_which_is_not_assignable_to_type_1_2418", "Type of computed property's value is '{0}', which is not assignable to type '{1}'."),
    Class_0_incorrectly_implements_interface_1: t(2420, e.DiagnosticCategory.Error, "Class_0_incorrectly_implements_interface_1_2420", "Class '{0}' incorrectly implements interface '{1}'."),
    A_class_may_only_implement_another_class_or_interface: t(2422, e.DiagnosticCategory.Error, "A_class_may_only_implement_another_class_or_interface_2422", "A class may only implement another class or interface."),
    Class_0_defines_instance_member_function_1_but_extended_class_2_defines_it_as_instance_member_accessor: t(2423, e.DiagnosticCategory.Error, "Class_0_defines_instance_member_function_1_but_extended_class_2_defines_it_as_instance_member_access_2423", "Class '{0}' defines instance member function '{1}', but extended class '{2}' defines it as instance member accessor."),
    Class_0_defines_instance_member_function_1_but_extended_class_2_defines_it_as_instance_member_property: t(2424, e.DiagnosticCategory.Error, "Class_0_defines_instance_member_function_1_but_extended_class_2_defines_it_as_instance_member_proper_2424", "Class '{0}' defines instance member function '{1}', but extended class '{2}' defines it as instance member property."),
    Class_0_defines_instance_member_property_1_but_extended_class_2_defines_it_as_instance_member_function: t(2425, e.DiagnosticCategory.Error, "Class_0_defines_instance_member_property_1_but_extended_class_2_defines_it_as_instance_member_functi_2425", "Class '{0}' defines instance member property '{1}', but extended class '{2}' defines it as instance member function."),
    Class_0_defines_instance_member_accessor_1_but_extended_class_2_defines_it_as_instance_member_function: t(2426, e.DiagnosticCategory.Error, "Class_0_defines_instance_member_accessor_1_but_extended_class_2_defines_it_as_instance_member_functi_2426", "Class '{0}' defines instance member accessor '{1}', but extended class '{2}' defines it as instance member function."),
    Interface_name_cannot_be_0: t(2427, e.DiagnosticCategory.Error, "Interface_name_cannot_be_0_2427", "Interface name cannot be '{0}'."),
    All_declarations_of_0_must_have_identical_type_parameters: t(2428, e.DiagnosticCategory.Error, "All_declarations_of_0_must_have_identical_type_parameters_2428", "All declarations of '{0}' must have identical type parameters."),
    Interface_0_incorrectly_extends_interface_1: t(2430, e.DiagnosticCategory.Error, "Interface_0_incorrectly_extends_interface_1_2430", "Interface '{0}' incorrectly extends interface '{1}'."),
    Enum_name_cannot_be_0: t(2431, e.DiagnosticCategory.Error, "Enum_name_cannot_be_0_2431", "Enum name cannot be '{0}'."),
    In_an_enum_with_multiple_declarations_only_one_declaration_can_omit_an_initializer_for_its_first_enum_element: t(2432, e.DiagnosticCategory.Error, "In_an_enum_with_multiple_declarations_only_one_declaration_can_omit_an_initializer_for_its_first_enu_2432", "In an enum with multiple declarations, only one declaration can omit an initializer for its first enum element."),
    A_namespace_declaration_cannot_be_in_a_different_file_from_a_class_or_function_with_which_it_is_merged: t(2433, e.DiagnosticCategory.Error, "A_namespace_declaration_cannot_be_in_a_different_file_from_a_class_or_function_with_which_it_is_merg_2433", "A namespace declaration cannot be in a different file from a class or function with which it is merged."),
    A_namespace_declaration_cannot_be_located_prior_to_a_class_or_function_with_which_it_is_merged: t(2434, e.DiagnosticCategory.Error, "A_namespace_declaration_cannot_be_located_prior_to_a_class_or_function_with_which_it_is_merged_2434", "A namespace declaration cannot be located prior to a class or function with which it is merged."),
    Ambient_modules_cannot_be_nested_in_other_modules_or_namespaces: t(2435, e.DiagnosticCategory.Error, "Ambient_modules_cannot_be_nested_in_other_modules_or_namespaces_2435", "Ambient modules cannot be nested in other modules or namespaces."),
    Ambient_module_declaration_cannot_specify_relative_module_name: t(2436, e.DiagnosticCategory.Error, "Ambient_module_declaration_cannot_specify_relative_module_name_2436", "Ambient module declaration cannot specify relative module name."),
    Module_0_is_hidden_by_a_local_declaration_with_the_same_name: t(2437, e.DiagnosticCategory.Error, "Module_0_is_hidden_by_a_local_declaration_with_the_same_name_2437", "Module '{0}' is hidden by a local declaration with the same name."),
    Import_name_cannot_be_0: t(2438, e.DiagnosticCategory.Error, "Import_name_cannot_be_0_2438", "Import name cannot be '{0}'."),
    Import_or_export_declaration_in_an_ambient_module_declaration_cannot_reference_module_through_relative_module_name: t(2439, e.DiagnosticCategory.Error, "Import_or_export_declaration_in_an_ambient_module_declaration_cannot_reference_module_through_relati_2439", "Import or export declaration in an ambient module declaration cannot reference module through relative module name."),
    Import_declaration_conflicts_with_local_declaration_of_0: t(2440, e.DiagnosticCategory.Error, "Import_declaration_conflicts_with_local_declaration_of_0_2440", "Import declaration conflicts with local declaration of '{0}'."),
    Duplicate_identifier_0_Compiler_reserves_name_1_in_top_level_scope_of_a_module: t(2441, e.DiagnosticCategory.Error, "Duplicate_identifier_0_Compiler_reserves_name_1_in_top_level_scope_of_a_module_2441", "Duplicate identifier '{0}'. Compiler reserves name '{1}' in top level scope of a module."),
    Types_have_separate_declarations_of_a_private_property_0: t(2442, e.DiagnosticCategory.Error, "Types_have_separate_declarations_of_a_private_property_0_2442", "Types have separate declarations of a private property '{0}'."),
    Property_0_is_protected_but_type_1_is_not_a_class_derived_from_2: t(2443, e.DiagnosticCategory.Error, "Property_0_is_protected_but_type_1_is_not_a_class_derived_from_2_2443", "Property '{0}' is protected but type '{1}' is not a class derived from '{2}'."),
    Property_0_is_protected_in_type_1_but_public_in_type_2: t(2444, e.DiagnosticCategory.Error, "Property_0_is_protected_in_type_1_but_public_in_type_2_2444", "Property '{0}' is protected in type '{1}' but public in type '{2}'."),
    Property_0_is_protected_and_only_accessible_within_class_1_and_its_subclasses: t(2445, e.DiagnosticCategory.Error, "Property_0_is_protected_and_only_accessible_within_class_1_and_its_subclasses_2445", "Property '{0}' is protected and only accessible within class '{1}' and its subclasses."),
    Property_0_is_protected_and_only_accessible_through_an_instance_of_class_1: t(2446, e.DiagnosticCategory.Error, "Property_0_is_protected_and_only_accessible_through_an_instance_of_class_1_2446", "Property '{0}' is protected and only accessible through an instance of class '{1}'."),
    The_0_operator_is_not_allowed_for_boolean_types_Consider_using_1_instead: t(2447, e.DiagnosticCategory.Error, "The_0_operator_is_not_allowed_for_boolean_types_Consider_using_1_instead_2447", "The '{0}' operator is not allowed for boolean types. Consider using '{1}' instead."),
    Block_scoped_variable_0_used_before_its_declaration: t(2448, e.DiagnosticCategory.Error, "Block_scoped_variable_0_used_before_its_declaration_2448", "Block-scoped variable '{0}' used before its declaration."),
    Class_0_used_before_its_declaration: t(2449, e.DiagnosticCategory.Error, "Class_0_used_before_its_declaration_2449", "Class '{0}' used before its declaration."),
    Enum_0_used_before_its_declaration: t(2450, e.DiagnosticCategory.Error, "Enum_0_used_before_its_declaration_2450", "Enum '{0}' used before its declaration."),
    Cannot_redeclare_block_scoped_variable_0: t(2451, e.DiagnosticCategory.Error, "Cannot_redeclare_block_scoped_variable_0_2451", "Cannot redeclare block-scoped variable '{0}'."),
    An_enum_member_cannot_have_a_numeric_name: t(2452, e.DiagnosticCategory.Error, "An_enum_member_cannot_have_a_numeric_name_2452", "An enum member cannot have a numeric name."),
    The_type_argument_for_type_parameter_0_cannot_be_inferred_from_the_usage_Consider_specifying_the_type_arguments_explicitly: t(2453, e.DiagnosticCategory.Error, "The_type_argument_for_type_parameter_0_cannot_be_inferred_from_the_usage_Consider_specifying_the_typ_2453", "The type argument for type parameter '{0}' cannot be inferred from the usage. Consider specifying the type arguments explicitly."),
    Variable_0_is_used_before_being_assigned: t(2454, e.DiagnosticCategory.Error, "Variable_0_is_used_before_being_assigned_2454", "Variable '{0}' is used before being assigned."),
    Type_argument_candidate_1_is_not_a_valid_type_argument_because_it_is_not_a_supertype_of_candidate_0: t(2455, e.DiagnosticCategory.Error, "Type_argument_candidate_1_is_not_a_valid_type_argument_because_it_is_not_a_supertype_of_candidate_0_2455", "Type argument candidate '{1}' is not a valid type argument because it is not a supertype of candidate '{0}'."),
    Type_alias_0_circularly_references_itself: t(2456, e.DiagnosticCategory.Error, "Type_alias_0_circularly_references_itself_2456", "Type alias '{0}' circularly references itself."),
    Type_alias_name_cannot_be_0: t(2457, e.DiagnosticCategory.Error, "Type_alias_name_cannot_be_0_2457", "Type alias name cannot be '{0}'."),
    An_AMD_module_cannot_have_multiple_name_assignments: t(2458, e.DiagnosticCategory.Error, "An_AMD_module_cannot_have_multiple_name_assignments_2458", "An AMD module cannot have multiple name assignments."),
    Type_0_has_no_property_1_and_no_string_index_signature: t(2459, e.DiagnosticCategory.Error, "Type_0_has_no_property_1_and_no_string_index_signature_2459", "Type '{0}' has no property '{1}' and no string index signature."),
    Type_0_has_no_property_1: t(2460, e.DiagnosticCategory.Error, "Type_0_has_no_property_1_2460", "Type '{0}' has no property '{1}'."),
    Type_0_is_not_an_array_type: t(2461, e.DiagnosticCategory.Error, "Type_0_is_not_an_array_type_2461", "Type '{0}' is not an array type."),
    A_rest_element_must_be_last_in_a_destructuring_pattern: t(2462, e.DiagnosticCategory.Error, "A_rest_element_must_be_last_in_a_destructuring_pattern_2462", "A rest element must be last in a destructuring pattern."),
    A_binding_pattern_parameter_cannot_be_optional_in_an_implementation_signature: t(2463, e.DiagnosticCategory.Error, "A_binding_pattern_parameter_cannot_be_optional_in_an_implementation_signature_2463", "A binding pattern parameter cannot be optional in an implementation signature."),
    A_computed_property_name_must_be_of_type_string_number_symbol_or_any: t(2464, e.DiagnosticCategory.Error, "A_computed_property_name_must_be_of_type_string_number_symbol_or_any_2464", "A computed property name must be of type 'string', 'number', 'symbol', or 'any'."),
    this_cannot_be_referenced_in_a_computed_property_name: t(2465, e.DiagnosticCategory.Error, "this_cannot_be_referenced_in_a_computed_property_name_2465", "'this' cannot be referenced in a computed property name."),
    super_cannot_be_referenced_in_a_computed_property_name: t(2466, e.DiagnosticCategory.Error, "super_cannot_be_referenced_in_a_computed_property_name_2466", "'super' cannot be referenced in a computed property name."),
    A_computed_property_name_cannot_reference_a_type_parameter_from_its_containing_type: t(2467, e.DiagnosticCategory.Error, "A_computed_property_name_cannot_reference_a_type_parameter_from_its_containing_type_2467", "A computed property name cannot reference a type parameter from its containing type."),
    Cannot_find_global_value_0: t(2468, e.DiagnosticCategory.Error, "Cannot_find_global_value_0_2468", "Cannot find global value '{0}'."),
    The_0_operator_cannot_be_applied_to_type_symbol: t(2469, e.DiagnosticCategory.Error, "The_0_operator_cannot_be_applied_to_type_symbol_2469", "The '{0}' operator cannot be applied to type 'symbol'."),
    Symbol_reference_does_not_refer_to_the_global_Symbol_constructor_object: t(2470, e.DiagnosticCategory.Error, "Symbol_reference_does_not_refer_to_the_global_Symbol_constructor_object_2470", "'Symbol' reference does not refer to the global Symbol constructor object."),
    A_computed_property_name_of_the_form_0_must_be_of_type_symbol: t(2471, e.DiagnosticCategory.Error, "A_computed_property_name_of_the_form_0_must_be_of_type_symbol_2471", "A computed property name of the form '{0}' must be of type 'symbol'."),
    Spread_operator_in_new_expressions_is_only_available_when_targeting_ECMAScript_5_and_higher: t(2472, e.DiagnosticCategory.Error, "Spread_operator_in_new_expressions_is_only_available_when_targeting_ECMAScript_5_and_higher_2472", "Spread operator in 'new' expressions is only available when targeting ECMAScript 5 and higher."),
    Enum_declarations_must_all_be_const_or_non_const: t(2473, e.DiagnosticCategory.Error, "Enum_declarations_must_all_be_const_or_non_const_2473", "Enum declarations must all be const or non-const."),
    In_const_enum_declarations_member_initializer_must_be_constant_expression: t(2474, e.DiagnosticCategory.Error, "In_const_enum_declarations_member_initializer_must_be_constant_expression_2474", "In 'const' enum declarations member initializer must be constant expression."),
    const_enums_can_only_be_used_in_property_or_index_access_expressions_or_the_right_hand_side_of_an_import_declaration_or_export_assignment_or_type_query: t(2475, e.DiagnosticCategory.Error, "const_enums_can_only_be_used_in_property_or_index_access_expressions_or_the_right_hand_side_of_an_im_2475", "'const' enums can only be used in property or index access expressions or the right hand side of an import declaration or export assignment or type query."),
    A_const_enum_member_can_only_be_accessed_using_a_string_literal: t(2476, e.DiagnosticCategory.Error, "A_const_enum_member_can_only_be_accessed_using_a_string_literal_2476", "A const enum member can only be accessed using a string literal."),
    const_enum_member_initializer_was_evaluated_to_a_non_finite_value: t(2477, e.DiagnosticCategory.Error, "const_enum_member_initializer_was_evaluated_to_a_non_finite_value_2477", "'const' enum member initializer was evaluated to a non-finite value."),
    const_enum_member_initializer_was_evaluated_to_disallowed_value_NaN: t(2478, e.DiagnosticCategory.Error, "const_enum_member_initializer_was_evaluated_to_disallowed_value_NaN_2478", "'const' enum member initializer was evaluated to disallowed value 'NaN'."),
    Property_0_does_not_exist_on_const_enum_1: t(2479, e.DiagnosticCategory.Error, "Property_0_does_not_exist_on_const_enum_1_2479", "Property '{0}' does not exist on 'const' enum '{1}'."),
    let_is_not_allowed_to_be_used_as_a_name_in_let_or_const_declarations: t(2480, e.DiagnosticCategory.Error, "let_is_not_allowed_to_be_used_as_a_name_in_let_or_const_declarations_2480", "'let' is not allowed to be used as a name in 'let' or 'const' declarations."),
    Cannot_initialize_outer_scoped_variable_0_in_the_same_scope_as_block_scoped_declaration_1: t(2481, e.DiagnosticCategory.Error, "Cannot_initialize_outer_scoped_variable_0_in_the_same_scope_as_block_scoped_declaration_1_2481", "Cannot initialize outer scoped variable '{0}' in the same scope as block scoped declaration '{1}'."),
    The_left_hand_side_of_a_for_of_statement_cannot_use_a_type_annotation: t(2483, e.DiagnosticCategory.Error, "The_left_hand_side_of_a_for_of_statement_cannot_use_a_type_annotation_2483", "The left-hand side of a 'for...of' statement cannot use a type annotation."),
    Export_declaration_conflicts_with_exported_declaration_of_0: t(2484, e.DiagnosticCategory.Error, "Export_declaration_conflicts_with_exported_declaration_of_0_2484", "Export declaration conflicts with exported declaration of '{0}'."),
    The_left_hand_side_of_a_for_of_statement_must_be_a_variable_or_a_property_access: t(2487, e.DiagnosticCategory.Error, "The_left_hand_side_of_a_for_of_statement_must_be_a_variable_or_a_property_access_2487", "The left-hand side of a 'for...of' statement must be a variable or a property access."),
    Type_0_must_have_a_Symbol_iterator_method_that_returns_an_iterator: t(2488, e.DiagnosticCategory.Error, "Type_0_must_have_a_Symbol_iterator_method_that_returns_an_iterator_2488", "Type '{0}' must have a '[Symbol.iterator]()' method that returns an iterator."),
    An_iterator_must_have_a_next_method: t(2489, e.DiagnosticCategory.Error, "An_iterator_must_have_a_next_method_2489", "An iterator must have a 'next()' method."),
    The_type_returned_by_the_next_method_of_an_iterator_must_have_a_value_property: t(2490, e.DiagnosticCategory.Error, "The_type_returned_by_the_next_method_of_an_iterator_must_have_a_value_property_2490", "The type returned by the 'next()' method of an iterator must have a 'value' property."),
    The_left_hand_side_of_a_for_in_statement_cannot_be_a_destructuring_pattern: t(2491, e.DiagnosticCategory.Error, "The_left_hand_side_of_a_for_in_statement_cannot_be_a_destructuring_pattern_2491", "The left-hand side of a 'for...in' statement cannot be a destructuring pattern."),
    Cannot_redeclare_identifier_0_in_catch_clause: t(2492, e.DiagnosticCategory.Error, "Cannot_redeclare_identifier_0_in_catch_clause_2492", "Cannot redeclare identifier '{0}' in catch clause."),
    Tuple_type_0_with_length_1_cannot_be_assigned_to_tuple_with_length_2: t(2493, e.DiagnosticCategory.Error, "Tuple_type_0_with_length_1_cannot_be_assigned_to_tuple_with_length_2_2493", "Tuple type '{0}' with length '{1}' cannot be assigned to tuple with length '{2}'."),
    Using_a_string_in_a_for_of_statement_is_only_supported_in_ECMAScript_5_and_higher: t(2494, e.DiagnosticCategory.Error, "Using_a_string_in_a_for_of_statement_is_only_supported_in_ECMAScript_5_and_higher_2494", "Using a string in a 'for...of' statement is only supported in ECMAScript 5 and higher."),
    Type_0_is_not_an_array_type_or_a_string_type: t(2495, e.DiagnosticCategory.Error, "Type_0_is_not_an_array_type_or_a_string_type_2495", "Type '{0}' is not an array type or a string type."),
    The_arguments_object_cannot_be_referenced_in_an_arrow_function_in_ES3_and_ES5_Consider_using_a_standard_function_expression: t(2496, e.DiagnosticCategory.Error, "The_arguments_object_cannot_be_referenced_in_an_arrow_function_in_ES3_and_ES5_Consider_using_a_stand_2496", "The 'arguments' object cannot be referenced in an arrow function in ES3 and ES5. Consider using a standard function expression."),
    Module_0_resolves_to_a_non_module_entity_and_cannot_be_imported_using_this_construct: t(2497, e.DiagnosticCategory.Error, "Module_0_resolves_to_a_non_module_entity_and_cannot_be_imported_using_this_construct_2497", "Module '{0}' resolves to a non-module entity and cannot be imported using this construct."),
    Module_0_uses_export_and_cannot_be_used_with_export_Asterisk: t(2498, e.DiagnosticCategory.Error, "Module_0_uses_export_and_cannot_be_used_with_export_Asterisk_2498", "Module '{0}' uses 'export =' and cannot be used with 'export *'."),
    An_interface_can_only_extend_an_identifier_Slashqualified_name_with_optional_type_arguments: t(2499, e.DiagnosticCategory.Error, "An_interface_can_only_extend_an_identifier_Slashqualified_name_with_optional_type_arguments_2499", "An interface can only extend an identifier/qualified-name with optional type arguments."),
    A_class_can_only_implement_an_identifier_Slashqualified_name_with_optional_type_arguments: t(2500, e.DiagnosticCategory.Error, "A_class_can_only_implement_an_identifier_Slashqualified_name_with_optional_type_arguments_2500", "A class can only implement an identifier/qualified-name with optional type arguments."),
    A_rest_element_cannot_contain_a_binding_pattern: t(2501, e.DiagnosticCategory.Error, "A_rest_element_cannot_contain_a_binding_pattern_2501", "A rest element cannot contain a binding pattern."),
    _0_is_referenced_directly_or_indirectly_in_its_own_type_annotation: t(2502, e.DiagnosticCategory.Error, "_0_is_referenced_directly_or_indirectly_in_its_own_type_annotation_2502", "'{0}' is referenced directly or indirectly in its own type annotation."),
    Cannot_find_namespace_0: t(2503, e.DiagnosticCategory.Error, "Cannot_find_namespace_0_2503", "Cannot find namespace '{0}'."),
    Type_0_must_have_a_Symbol_asyncIterator_method_that_returns_an_async_iterator: t(2504, e.DiagnosticCategory.Error, "Type_0_must_have_a_Symbol_asyncIterator_method_that_returns_an_async_iterator_2504", "Type '{0}' must have a '[Symbol.asyncIterator]()' method that returns an async iterator."),
    A_generator_cannot_have_a_void_type_annotation: t(2505, e.DiagnosticCategory.Error, "A_generator_cannot_have_a_void_type_annotation_2505", "A generator cannot have a 'void' type annotation."),
    _0_is_referenced_directly_or_indirectly_in_its_own_base_expression: t(2506, e.DiagnosticCategory.Error, "_0_is_referenced_directly_or_indirectly_in_its_own_base_expression_2506", "'{0}' is referenced directly or indirectly in its own base expression."),
    Type_0_is_not_a_constructor_function_type: t(2507, e.DiagnosticCategory.Error, "Type_0_is_not_a_constructor_function_type_2507", "Type '{0}' is not a constructor function type."),
    No_base_constructor_has_the_specified_number_of_type_arguments: t(2508, e.DiagnosticCategory.Error, "No_base_constructor_has_the_specified_number_of_type_arguments_2508", "No base constructor has the specified number of type arguments."),
    Base_constructor_return_type_0_is_not_a_class_or_interface_type: t(2509, e.DiagnosticCategory.Error, "Base_constructor_return_type_0_is_not_a_class_or_interface_type_2509", "Base constructor return type '{0}' is not a class or interface type."),
    Base_constructors_must_all_have_the_same_return_type: t(2510, e.DiagnosticCategory.Error, "Base_constructors_must_all_have_the_same_return_type_2510", "Base constructors must all have the same return type."),
    Cannot_create_an_instance_of_an_abstract_class: t(2511, e.DiagnosticCategory.Error, "Cannot_create_an_instance_of_an_abstract_class_2511", "Cannot create an instance of an abstract class."),
    Overload_signatures_must_all_be_abstract_or_non_abstract: t(2512, e.DiagnosticCategory.Error, "Overload_signatures_must_all_be_abstract_or_non_abstract_2512", "Overload signatures must all be abstract or non-abstract."),
    Abstract_method_0_in_class_1_cannot_be_accessed_via_super_expression: t(2513, e.DiagnosticCategory.Error, "Abstract_method_0_in_class_1_cannot_be_accessed_via_super_expression_2513", "Abstract method '{0}' in class '{1}' cannot be accessed via super expression."),
    Classes_containing_abstract_methods_must_be_marked_abstract: t(2514, e.DiagnosticCategory.Error, "Classes_containing_abstract_methods_must_be_marked_abstract_2514", "Classes containing abstract methods must be marked abstract."),
    Non_abstract_class_0_does_not_implement_inherited_abstract_member_1_from_class_2: t(2515, e.DiagnosticCategory.Error, "Non_abstract_class_0_does_not_implement_inherited_abstract_member_1_from_class_2_2515", "Non-abstract class '{0}' does not implement inherited abstract member '{1}' from class '{2}'."),
    All_declarations_of_an_abstract_method_must_be_consecutive: t(2516, e.DiagnosticCategory.Error, "All_declarations_of_an_abstract_method_must_be_consecutive_2516", "All declarations of an abstract method must be consecutive."),
    Cannot_assign_an_abstract_constructor_type_to_a_non_abstract_constructor_type: t(2517, e.DiagnosticCategory.Error, "Cannot_assign_an_abstract_constructor_type_to_a_non_abstract_constructor_type_2517", "Cannot assign an abstract constructor type to a non-abstract constructor type."),
    A_this_based_type_guard_is_not_compatible_with_a_parameter_based_type_guard: t(2518, e.DiagnosticCategory.Error, "A_this_based_type_guard_is_not_compatible_with_a_parameter_based_type_guard_2518", "A 'this'-based type guard is not compatible with a parameter-based type guard."),
    An_async_iterator_must_have_a_next_method: t(2519, e.DiagnosticCategory.Error, "An_async_iterator_must_have_a_next_method_2519", "An async iterator must have a 'next()' method."),
    Duplicate_identifier_0_Compiler_uses_declaration_1_to_support_async_functions: t(2520, e.DiagnosticCategory.Error, "Duplicate_identifier_0_Compiler_uses_declaration_1_to_support_async_functions_2520", "Duplicate identifier '{0}'. Compiler uses declaration '{1}' to support async functions."),
    Expression_resolves_to_variable_declaration_0_that_compiler_uses_to_support_async_functions: t(2521, e.DiagnosticCategory.Error, "Expression_resolves_to_variable_declaration_0_that_compiler_uses_to_support_async_functions_2521", "Expression resolves to variable declaration '{0}' that compiler uses to support async functions."),
    The_arguments_object_cannot_be_referenced_in_an_async_function_or_method_in_ES3_and_ES5_Consider_using_a_standard_function_or_method: t(2522, e.DiagnosticCategory.Error, "The_arguments_object_cannot_be_referenced_in_an_async_function_or_method_in_ES3_and_ES5_Consider_usi_2522", "The 'arguments' object cannot be referenced in an async function or method in ES3 and ES5. Consider using a standard function or method."),
    yield_expressions_cannot_be_used_in_a_parameter_initializer: t(2523, e.DiagnosticCategory.Error, "yield_expressions_cannot_be_used_in_a_parameter_initializer_2523", "'yield' expressions cannot be used in a parameter initializer."),
    await_expressions_cannot_be_used_in_a_parameter_initializer: t(2524, e.DiagnosticCategory.Error, "await_expressions_cannot_be_used_in_a_parameter_initializer_2524", "'await' expressions cannot be used in a parameter initializer."),
    Initializer_provides_no_value_for_this_binding_element_and_the_binding_element_has_no_default_value: t(2525, e.DiagnosticCategory.Error, "Initializer_provides_no_value_for_this_binding_element_and_the_binding_element_has_no_default_value_2525", "Initializer provides no value for this binding element and the binding element has no default value."),
    A_this_type_is_available_only_in_a_non_static_member_of_a_class_or_interface: t(2526, e.DiagnosticCategory.Error, "A_this_type_is_available_only_in_a_non_static_member_of_a_class_or_interface_2526", "A 'this' type is available only in a non-static member of a class or interface."),
    The_inferred_type_of_0_references_an_inaccessible_1_type_A_type_annotation_is_necessary: t(2527, e.DiagnosticCategory.Error, "The_inferred_type_of_0_references_an_inaccessible_1_type_A_type_annotation_is_necessary_2527", "The inferred type of '{0}' references an inaccessible '{1}' type. A type annotation is necessary."),
    A_module_cannot_have_multiple_default_exports: t(2528, e.DiagnosticCategory.Error, "A_module_cannot_have_multiple_default_exports_2528", "A module cannot have multiple default exports."),
    Duplicate_identifier_0_Compiler_reserves_name_1_in_top_level_scope_of_a_module_containing_async_functions: t(2529, e.DiagnosticCategory.Error, "Duplicate_identifier_0_Compiler_reserves_name_1_in_top_level_scope_of_a_module_containing_async_func_2529", "Duplicate identifier '{0}'. Compiler reserves name '{1}' in top level scope of a module containing async functions."),
    Property_0_is_incompatible_with_index_signature: t(2530, e.DiagnosticCategory.Error, "Property_0_is_incompatible_with_index_signature_2530", "Property '{0}' is incompatible with index signature."),
    Object_is_possibly_null: t(2531, e.DiagnosticCategory.Error, "Object_is_possibly_null_2531", "Object is possibly 'null'."),
    Object_is_possibly_undefined: t(2532, e.DiagnosticCategory.Error, "Object_is_possibly_undefined_2532", "Object is possibly 'undefined'."),
    Object_is_possibly_null_or_undefined: t(2533, e.DiagnosticCategory.Error, "Object_is_possibly_null_or_undefined_2533", "Object is possibly 'null' or 'undefined'."),
    A_function_returning_never_cannot_have_a_reachable_end_point: t(2534, e.DiagnosticCategory.Error, "A_function_returning_never_cannot_have_a_reachable_end_point_2534", "A function returning 'never' cannot have a reachable end point."),
    Enum_type_0_has_members_with_initializers_that_are_not_literals: t(2535, e.DiagnosticCategory.Error, "Enum_type_0_has_members_with_initializers_that_are_not_literals_2535", "Enum type '{0}' has members with initializers that are not literals."),
    Type_0_cannot_be_used_to_index_type_1: t(2536, e.DiagnosticCategory.Error, "Type_0_cannot_be_used_to_index_type_1_2536", "Type '{0}' cannot be used to index type '{1}'."),
    Type_0_has_no_matching_index_signature_for_type_1: t(2537, e.DiagnosticCategory.Error, "Type_0_has_no_matching_index_signature_for_type_1_2537", "Type '{0}' has no matching index signature for type '{1}'."),
    Type_0_cannot_be_used_as_an_index_type: t(2538, e.DiagnosticCategory.Error, "Type_0_cannot_be_used_as_an_index_type_2538", "Type '{0}' cannot be used as an index type."),
    Cannot_assign_to_0_because_it_is_not_a_variable: t(2539, e.DiagnosticCategory.Error, "Cannot_assign_to_0_because_it_is_not_a_variable_2539", "Cannot assign to '{0}' because it is not a variable."),
    Cannot_assign_to_0_because_it_is_a_constant_or_a_read_only_property: t(2540, e.DiagnosticCategory.Error, "Cannot_assign_to_0_because_it_is_a_constant_or_a_read_only_property_2540", "Cannot assign to '{0}' because it is a constant or a read-only property."),
    The_target_of_an_assignment_must_be_a_variable_or_a_property_access: t(2541, e.DiagnosticCategory.Error, "The_target_of_an_assignment_must_be_a_variable_or_a_property_access_2541", "The target of an assignment must be a variable or a property access."),
    Index_signature_in_type_0_only_permits_reading: t(2542, e.DiagnosticCategory.Error, "Index_signature_in_type_0_only_permits_reading_2542", "Index signature in type '{0}' only permits reading."),
    Duplicate_identifier_newTarget_Compiler_uses_variable_declaration_newTarget_to_capture_new_target_meta_property_reference: t(2543, e.DiagnosticCategory.Error, "Duplicate_identifier_newTarget_Compiler_uses_variable_declaration_newTarget_to_capture_new_target_me_2543", "Duplicate identifier '_newTarget'. Compiler uses variable declaration '_newTarget' to capture 'new.target' meta-property reference."),
    Expression_resolves_to_variable_declaration_newTarget_that_compiler_uses_to_capture_new_target_meta_property_reference: t(2544, e.DiagnosticCategory.Error, "Expression_resolves_to_variable_declaration_newTarget_that_compiler_uses_to_capture_new_target_meta__2544", "Expression resolves to variable declaration '_newTarget' that compiler uses to capture 'new.target' meta-property reference."),
    A_mixin_class_must_have_a_constructor_with_a_single_rest_parameter_of_type_any: t(2545, e.DiagnosticCategory.Error, "A_mixin_class_must_have_a_constructor_with_a_single_rest_parameter_of_type_any_2545", "A mixin class must have a constructor with a single rest parameter of type 'any[]'."),
    Property_0_has_conflicting_declarations_and_is_inaccessible_in_type_1: t(2546, e.DiagnosticCategory.Error, "Property_0_has_conflicting_declarations_and_is_inaccessible_in_type_1_2546", "Property '{0}' has conflicting declarations and is inaccessible in type '{1}'."),
    The_type_returned_by_the_next_method_of_an_async_iterator_must_be_a_promise_for_a_type_with_a_value_property: t(2547, e.DiagnosticCategory.Error, "The_type_returned_by_the_next_method_of_an_async_iterator_must_be_a_promise_for_a_type_with_a_value__2547", "The type returned by the 'next()' method of an async iterator must be a promise for a type with a 'value' property."),
    Type_0_is_not_an_array_type_or_does_not_have_a_Symbol_iterator_method_that_returns_an_iterator: t(2548, e.DiagnosticCategory.Error, "Type_0_is_not_an_array_type_or_does_not_have_a_Symbol_iterator_method_that_returns_an_iterator_2548", "Type '{0}' is not an array type or does not have a '[Symbol.iterator]()' method that returns an iterator."),
    Type_0_is_not_an_array_type_or_a_string_type_or_does_not_have_a_Symbol_iterator_method_that_returns_an_iterator: t(2549, e.DiagnosticCategory.Error, "Type_0_is_not_an_array_type_or_a_string_type_or_does_not_have_a_Symbol_iterator_method_that_returns__2549", "Type '{0}' is not an array type or a string type or does not have a '[Symbol.iterator]()' method that returns an iterator."),
    Generic_type_instantiation_is_excessively_deep_and_possibly_infinite: t(2550, e.DiagnosticCategory.Error, "Generic_type_instantiation_is_excessively_deep_and_possibly_infinite_2550", "Generic type instantiation is excessively deep and possibly infinite."),
    Property_0_does_not_exist_on_type_1_Did_you_mean_2: t(2551, e.DiagnosticCategory.Error, "Property_0_does_not_exist_on_type_1_Did_you_mean_2_2551", "Property '{0}' does not exist on type '{1}'. Did you mean '{2}'?"),
    Cannot_find_name_0_Did_you_mean_1: t(2552, e.DiagnosticCategory.Error, "Cannot_find_name_0_Did_you_mean_1_2552", "Cannot find name '{0}'. Did you mean '{1}'?"),
    Computed_values_are_not_permitted_in_an_enum_with_string_valued_members: t(2553, e.DiagnosticCategory.Error, "Computed_values_are_not_permitted_in_an_enum_with_string_valued_members_2553", "Computed values are not permitted in an enum with string valued members."),
    Expected_0_arguments_but_got_1: t(2554, e.DiagnosticCategory.Error, "Expected_0_arguments_but_got_1_2554", "Expected {0} arguments, but got {1}."),
    Expected_at_least_0_arguments_but_got_1: t(2555, e.DiagnosticCategory.Error, "Expected_at_least_0_arguments_but_got_1_2555", "Expected at least {0} arguments, but got {1}."),
    Expected_0_arguments_but_got_1_or_more: t(2556, e.DiagnosticCategory.Error, "Expected_0_arguments_but_got_1_or_more_2556", "Expected {0} arguments, but got {1} or more."),
    Expected_at_least_0_arguments_but_got_1_or_more: t(2557, e.DiagnosticCategory.Error, "Expected_at_least_0_arguments_but_got_1_or_more_2557", "Expected at least {0} arguments, but got {1} or more."),
    Expected_0_type_arguments_but_got_1: t(2558, e.DiagnosticCategory.Error, "Expected_0_type_arguments_but_got_1_2558", "Expected {0} type arguments, but got {1}."),
    Type_0_has_no_properties_in_common_with_type_1: t(2559, e.DiagnosticCategory.Error, "Type_0_has_no_properties_in_common_with_type_1_2559", "Type '{0}' has no properties in common with type '{1}'."),
    Value_of_type_0_has_no_properties_in_common_with_type_1_Did_you_mean_to_call_it: t(2560, e.DiagnosticCategory.Error, "Value_of_type_0_has_no_properties_in_common_with_type_1_Did_you_mean_to_call_it_2560", "Value of type '{0}' has no properties in common with type '{1}'. Did you mean to call it?"),
    Object_literal_may_only_specify_known_properties_but_0_does_not_exist_in_type_1_Did_you_mean_to_write_2: t(2561, e.DiagnosticCategory.Error, "Object_literal_may_only_specify_known_properties_but_0_does_not_exist_in_type_1_Did_you_mean_to_writ_2561", "Object literal may only specify known properties, but '{0}' does not exist in type '{1}'. Did you mean to write '{2}'?"),
    Base_class_expressions_cannot_reference_class_type_parameters: t(2562, e.DiagnosticCategory.Error, "Base_class_expressions_cannot_reference_class_type_parameters_2562", "Base class expressions cannot reference class type parameters."),
    The_containing_function_or_module_body_is_too_large_for_control_flow_analysis: t(2563, e.DiagnosticCategory.Error, "The_containing_function_or_module_body_is_too_large_for_control_flow_analysis_2563", "The containing function or module body is too large for control flow analysis."),
    Property_0_has_no_initializer_and_is_not_definitely_assigned_in_the_constructor: t(2564, e.DiagnosticCategory.Error, "Property_0_has_no_initializer_and_is_not_definitely_assigned_in_the_constructor_2564", "Property '{0}' has no initializer and is not definitely assigned in the constructor."),
    Property_0_is_used_before_being_assigned: t(2565, e.DiagnosticCategory.Error, "Property_0_is_used_before_being_assigned_2565", "Property '{0}' is used before being assigned."),
    A_rest_element_cannot_have_a_property_name: t(2566, e.DiagnosticCategory.Error, "A_rest_element_cannot_have_a_property_name_2566", "A rest element cannot have a property name."),
    Enum_declarations_can_only_merge_with_namespace_or_other_enum_declarations: t(2567, e.DiagnosticCategory.Error, "Enum_declarations_can_only_merge_with_namespace_or_other_enum_declarations_2567", "Enum declarations can only merge with namespace or other enum declarations."),
    Type_0_is_not_an_array_type_Use_compiler_option_downlevelIteration_to_allow_iterating_of_iterators: t(2568, e.DiagnosticCategory.Error, "Type_0_is_not_an_array_type_Use_compiler_option_downlevelIteration_to_allow_iterating_of_iterators_2568", "Type '{0}' is not an array type. Use compiler option '--downlevelIteration' to allow iterating of iterators."),
    Type_0_is_not_an_array_type_or_a_string_type_Use_compiler_option_downlevelIteration_to_allow_iterating_of_iterators: t(2569, e.DiagnosticCategory.Error, "Type_0_is_not_an_array_type_or_a_string_type_Use_compiler_option_downlevelIteration_to_allow_iterati_2569", "Type '{0}' is not an array type or a string type. Use compiler option '--downlevelIteration' to allow iterating of iterators."),
    Property_0_does_not_exist_on_type_1_Did_you_forget_to_use_await: t(2570, e.DiagnosticCategory.Error, "Property_0_does_not_exist_on_type_1_Did_you_forget_to_use_await_2570", "Property '{0}' does not exist on type '{1}'. Did you forget to use 'await'?"),
    Object_is_of_type_unknown: t(2571, e.DiagnosticCategory.Error, "Object_is_of_type_unknown_2571", "Object is of type 'unknown'."),
    Rest_signatures_are_incompatible: t(2572, e.DiagnosticCategory.Error, "Rest_signatures_are_incompatible_2572", "Rest signatures are incompatible."),
    Property_0_is_incompatible_with_rest_element_type: t(2573, e.DiagnosticCategory.Error, "Property_0_is_incompatible_with_rest_element_type_2573", "Property '{0}' is incompatible with rest element type."),
    A_rest_element_type_must_be_an_array_type: t(2574, e.DiagnosticCategory.Error, "A_rest_element_type_must_be_an_array_type_2574", "A rest element type must be an array type."),
    No_overload_expects_0_arguments_but_overloads_do_exist_that_expect_either_1_or_2_arguments: t(2575, e.DiagnosticCategory.Error, "No_overload_expects_0_arguments_but_overloads_do_exist_that_expect_either_1_or_2_arguments_2575", "No overload expects {0} arguments, but overloads do exist that expect either {1} or {2} arguments."),
    JSX_element_attributes_type_0_may_not_be_a_union_type: t(2600, e.DiagnosticCategory.Error, "JSX_element_attributes_type_0_may_not_be_a_union_type_2600", "JSX element attributes type '{0}' may not be a union type."),
    The_return_type_of_a_JSX_element_constructor_must_return_an_object_type: t(2601, e.DiagnosticCategory.Error, "The_return_type_of_a_JSX_element_constructor_must_return_an_object_type_2601", "The return type of a JSX element constructor must return an object type."),
    JSX_element_implicitly_has_type_any_because_the_global_type_JSX_Element_does_not_exist: t(2602, e.DiagnosticCategory.Error, "JSX_element_implicitly_has_type_any_because_the_global_type_JSX_Element_does_not_exist_2602", "JSX element implicitly has type 'any' because the global type 'JSX.Element' does not exist."),
    Property_0_in_type_1_is_not_assignable_to_type_2: t(2603, e.DiagnosticCategory.Error, "Property_0_in_type_1_is_not_assignable_to_type_2_2603", "Property '{0}' in type '{1}' is not assignable to type '{2}'."),
    JSX_element_type_0_does_not_have_any_construct_or_call_signatures: t(2604, e.DiagnosticCategory.Error, "JSX_element_type_0_does_not_have_any_construct_or_call_signatures_2604", "JSX element type '{0}' does not have any construct or call signatures."),
    JSX_element_type_0_is_not_a_constructor_function_for_JSX_elements: t(2605, e.DiagnosticCategory.Error, "JSX_element_type_0_is_not_a_constructor_function_for_JSX_elements_2605", "JSX element type '{0}' is not a constructor function for JSX elements."),
    Property_0_of_JSX_spread_attribute_is_not_assignable_to_target_property: t(2606, e.DiagnosticCategory.Error, "Property_0_of_JSX_spread_attribute_is_not_assignable_to_target_property_2606", "Property '{0}' of JSX spread attribute is not assignable to target property."),
    JSX_element_class_does_not_support_attributes_because_it_does_not_have_a_0_property: t(2607, e.DiagnosticCategory.Error, "JSX_element_class_does_not_support_attributes_because_it_does_not_have_a_0_property_2607", "JSX element class does not support attributes because it does not have a '{0}' property."),
    The_global_type_JSX_0_may_not_have_more_than_one_property: t(2608, e.DiagnosticCategory.Error, "The_global_type_JSX_0_may_not_have_more_than_one_property_2608", "The global type 'JSX.{0}' may not have more than one property."),
    JSX_spread_child_must_be_an_array_type: t(2609, e.DiagnosticCategory.Error, "JSX_spread_child_must_be_an_array_type_2609", "JSX spread child must be an array type."),
    Cannot_augment_module_0_with_value_exports_because_it_resolves_to_a_non_module_entity: t(2649, e.DiagnosticCategory.Error, "Cannot_augment_module_0_with_value_exports_because_it_resolves_to_a_non_module_entity_2649", "Cannot augment module '{0}' with value exports because it resolves to a non-module entity."),
    A_member_initializer_in_a_enum_declaration_cannot_reference_members_declared_after_it_including_members_defined_in_other_enums: t(2651, e.DiagnosticCategory.Error, "A_member_initializer_in_a_enum_declaration_cannot_reference_members_declared_after_it_including_memb_2651", "A member initializer in a enum declaration cannot reference members declared after it, including members defined in other enums."),
    Merged_declaration_0_cannot_include_a_default_export_declaration_Consider_adding_a_separate_export_default_0_declaration_instead: t(2652, e.DiagnosticCategory.Error, "Merged_declaration_0_cannot_include_a_default_export_declaration_Consider_adding_a_separate_export_d_2652", "Merged declaration '{0}' cannot include a default export declaration. Consider adding a separate 'export default {0}' declaration instead."),
    Non_abstract_class_expression_does_not_implement_inherited_abstract_member_0_from_class_1: t(2653, e.DiagnosticCategory.Error, "Non_abstract_class_expression_does_not_implement_inherited_abstract_member_0_from_class_1_2653", "Non-abstract class expression does not implement inherited abstract member '{0}' from class '{1}'."),
    Exported_external_package_typings_file_cannot_contain_tripleslash_references_Please_contact_the_package_author_to_update_the_package_definition: t(2654, e.DiagnosticCategory.Error, "Exported_external_package_typings_file_cannot_contain_tripleslash_references_Please_contact_the_pack_2654", "Exported external package typings file cannot contain tripleslash references. Please contact the package author to update the package definition."),
    Exported_external_package_typings_file_0_is_not_a_module_Please_contact_the_package_author_to_update_the_package_definition: t(2656, e.DiagnosticCategory.Error, "Exported_external_package_typings_file_0_is_not_a_module_Please_contact_the_package_author_to_update_2656", "Exported external package typings file '{0}' is not a module. Please contact the package author to update the package definition."),
    JSX_expressions_must_have_one_parent_element: t(2657, e.DiagnosticCategory.Error, "JSX_expressions_must_have_one_parent_element_2657", "JSX expressions must have one parent element."),
    Type_0_provides_no_match_for_the_signature_1: t(2658, e.DiagnosticCategory.Error, "Type_0_provides_no_match_for_the_signature_1_2658", "Type '{0}' provides no match for the signature '{1}'."),
    super_is_only_allowed_in_members_of_object_literal_expressions_when_option_target_is_ES2015_or_higher: t(2659, e.DiagnosticCategory.Error, "super_is_only_allowed_in_members_of_object_literal_expressions_when_option_target_is_ES2015_or_highe_2659", "'super' is only allowed in members of object literal expressions when option 'target' is 'ES2015' or higher."),
    super_can_only_be_referenced_in_members_of_derived_classes_or_object_literal_expressions: t(2660, e.DiagnosticCategory.Error, "super_can_only_be_referenced_in_members_of_derived_classes_or_object_literal_expressions_2660", "'super' can only be referenced in members of derived classes or object literal expressions."),
    Cannot_export_0_Only_local_declarations_can_be_exported_from_a_module: t(2661, e.DiagnosticCategory.Error, "Cannot_export_0_Only_local_declarations_can_be_exported_from_a_module_2661", "Cannot export '{0}'. Only local declarations can be exported from a module."),
    Cannot_find_name_0_Did_you_mean_the_static_member_1_0: t(2662, e.DiagnosticCategory.Error, "Cannot_find_name_0_Did_you_mean_the_static_member_1_0_2662", "Cannot find name '{0}'. Did you mean the static member '{1}.{0}'?"),
    Cannot_find_name_0_Did_you_mean_the_instance_member_this_0: t(2663, e.DiagnosticCategory.Error, "Cannot_find_name_0_Did_you_mean_the_instance_member_this_0_2663", "Cannot find name '{0}'. Did you mean the instance member 'this.{0}'?"),
    Invalid_module_name_in_augmentation_module_0_cannot_be_found: t(2664, e.DiagnosticCategory.Error, "Invalid_module_name_in_augmentation_module_0_cannot_be_found_2664", "Invalid module name in augmentation, module '{0}' cannot be found."),
    Invalid_module_name_in_augmentation_Module_0_resolves_to_an_untyped_module_at_1_which_cannot_be_augmented: t(2665, e.DiagnosticCategory.Error, "Invalid_module_name_in_augmentation_Module_0_resolves_to_an_untyped_module_at_1_which_cannot_be_augm_2665", "Invalid module name in augmentation. Module '{0}' resolves to an untyped module at '{1}', which cannot be augmented."),
    Exports_and_export_assignments_are_not_permitted_in_module_augmentations: t(2666, e.DiagnosticCategory.Error, "Exports_and_export_assignments_are_not_permitted_in_module_augmentations_2666", "Exports and export assignments are not permitted in module augmentations."),
    Imports_are_not_permitted_in_module_augmentations_Consider_moving_them_to_the_enclosing_external_module: t(2667, e.DiagnosticCategory.Error, "Imports_are_not_permitted_in_module_augmentations_Consider_moving_them_to_the_enclosing_external_mod_2667", "Imports are not permitted in module augmentations. Consider moving them to the enclosing external module."),
    export_modifier_cannot_be_applied_to_ambient_modules_and_module_augmentations_since_they_are_always_visible: t(2668, e.DiagnosticCategory.Error, "export_modifier_cannot_be_applied_to_ambient_modules_and_module_augmentations_since_they_are_always__2668", "'export' modifier cannot be applied to ambient modules and module augmentations since they are always visible."),
    Augmentations_for_the_global_scope_can_only_be_directly_nested_in_external_modules_or_ambient_module_declarations: t(2669, e.DiagnosticCategory.Error, "Augmentations_for_the_global_scope_can_only_be_directly_nested_in_external_modules_or_ambient_module_2669", "Augmentations for the global scope can only be directly nested in external modules or ambient module declarations."),
    Augmentations_for_the_global_scope_should_have_declare_modifier_unless_they_appear_in_already_ambient_context: t(2670, e.DiagnosticCategory.Error, "Augmentations_for_the_global_scope_should_have_declare_modifier_unless_they_appear_in_already_ambien_2670", "Augmentations for the global scope should have 'declare' modifier unless they appear in already ambient context."),
    Cannot_augment_module_0_because_it_resolves_to_a_non_module_entity: t(2671, e.DiagnosticCategory.Error, "Cannot_augment_module_0_because_it_resolves_to_a_non_module_entity_2671", "Cannot augment module '{0}' because it resolves to a non-module entity."),
    Cannot_assign_a_0_constructor_type_to_a_1_constructor_type: t(2672, e.DiagnosticCategory.Error, "Cannot_assign_a_0_constructor_type_to_a_1_constructor_type_2672", "Cannot assign a '{0}' constructor type to a '{1}' constructor type."),
    Constructor_of_class_0_is_private_and_only_accessible_within_the_class_declaration: t(2673, e.DiagnosticCategory.Error, "Constructor_of_class_0_is_private_and_only_accessible_within_the_class_declaration_2673", "Constructor of class '{0}' is private and only accessible within the class declaration."),
    Constructor_of_class_0_is_protected_and_only_accessible_within_the_class_declaration: t(2674, e.DiagnosticCategory.Error, "Constructor_of_class_0_is_protected_and_only_accessible_within_the_class_declaration_2674", "Constructor of class '{0}' is protected and only accessible within the class declaration."),
    Cannot_extend_a_class_0_Class_constructor_is_marked_as_private: t(2675, e.DiagnosticCategory.Error, "Cannot_extend_a_class_0_Class_constructor_is_marked_as_private_2675", "Cannot extend a class '{0}'. Class constructor is marked as private."),
    Accessors_must_both_be_abstract_or_non_abstract: t(2676, e.DiagnosticCategory.Error, "Accessors_must_both_be_abstract_or_non_abstract_2676", "Accessors must both be abstract or non-abstract."),
    A_type_predicate_s_type_must_be_assignable_to_its_parameter_s_type: t(2677, e.DiagnosticCategory.Error, "A_type_predicate_s_type_must_be_assignable_to_its_parameter_s_type_2677", "A type predicate's type must be assignable to its parameter's type."),
    Type_0_is_not_comparable_to_type_1: t(2678, e.DiagnosticCategory.Error, "Type_0_is_not_comparable_to_type_1_2678", "Type '{0}' is not comparable to type '{1}'."),
    A_function_that_is_called_with_the_new_keyword_cannot_have_a_this_type_that_is_void: t(2679, e.DiagnosticCategory.Error, "A_function_that_is_called_with_the_new_keyword_cannot_have_a_this_type_that_is_void_2679", "A function that is called with the 'new' keyword cannot have a 'this' type that is 'void'."),
    A_0_parameter_must_be_the_first_parameter: t(2680, e.DiagnosticCategory.Error, "A_0_parameter_must_be_the_first_parameter_2680", "A '{0}' parameter must be the first parameter."),
    A_constructor_cannot_have_a_this_parameter: t(2681, e.DiagnosticCategory.Error, "A_constructor_cannot_have_a_this_parameter_2681", "A constructor cannot have a 'this' parameter."),
    get_and_set_accessor_must_have_the_same_this_type: t(2682, e.DiagnosticCategory.Error, "get_and_set_accessor_must_have_the_same_this_type_2682", "'get' and 'set' accessor must have the same 'this' type."),
    this_implicitly_has_type_any_because_it_does_not_have_a_type_annotation: t(2683, e.DiagnosticCategory.Error, "this_implicitly_has_type_any_because_it_does_not_have_a_type_annotation_2683", "'this' implicitly has type 'any' because it does not have a type annotation."),
    The_this_context_of_type_0_is_not_assignable_to_method_s_this_of_type_1: t(2684, e.DiagnosticCategory.Error, "The_this_context_of_type_0_is_not_assignable_to_method_s_this_of_type_1_2684", "The 'this' context of type '{0}' is not assignable to method's 'this' of type '{1}'."),
    The_this_types_of_each_signature_are_incompatible: t(2685, e.DiagnosticCategory.Error, "The_this_types_of_each_signature_are_incompatible_2685", "The 'this' types of each signature are incompatible."),
    _0_refers_to_a_UMD_global_but_the_current_file_is_a_module_Consider_adding_an_import_instead: t(2686, e.DiagnosticCategory.Error, "_0_refers_to_a_UMD_global_but_the_current_file_is_a_module_Consider_adding_an_import_instead_2686", "'{0}' refers to a UMD global, but the current file is a module. Consider adding an import instead."),
    All_declarations_of_0_must_have_identical_modifiers: t(2687, e.DiagnosticCategory.Error, "All_declarations_of_0_must_have_identical_modifiers_2687", "All declarations of '{0}' must have identical modifiers."),
    Cannot_find_type_definition_file_for_0: t(2688, e.DiagnosticCategory.Error, "Cannot_find_type_definition_file_for_0_2688", "Cannot find type definition file for '{0}'."),
    Cannot_extend_an_interface_0_Did_you_mean_implements: t(2689, e.DiagnosticCategory.Error, "Cannot_extend_an_interface_0_Did_you_mean_implements_2689", "Cannot extend an interface '{0}'. Did you mean 'implements'?"),
    An_import_path_cannot_end_with_a_0_extension_Consider_importing_1_instead: t(2691, e.DiagnosticCategory.Error, "An_import_path_cannot_end_with_a_0_extension_Consider_importing_1_instead_2691", "An import path cannot end with a '{0}' extension. Consider importing '{1}' instead."),
    _0_is_a_primitive_but_1_is_a_wrapper_object_Prefer_using_0_when_possible: t(2692, e.DiagnosticCategory.Error, "_0_is_a_primitive_but_1_is_a_wrapper_object_Prefer_using_0_when_possible_2692", "'{0}' is a primitive, but '{1}' is a wrapper object. Prefer using '{0}' when possible."),
    _0_only_refers_to_a_type_but_is_being_used_as_a_value_here: t(2693, e.DiagnosticCategory.Error, "_0_only_refers_to_a_type_but_is_being_used_as_a_value_here_2693", "'{0}' only refers to a type, but is being used as a value here."),
    Namespace_0_has_no_exported_member_1: t(2694, e.DiagnosticCategory.Error, "Namespace_0_has_no_exported_member_1_2694", "Namespace '{0}' has no exported member '{1}'."),
    Left_side_of_comma_operator_is_unused_and_has_no_side_effects: t(2695, e.DiagnosticCategory.Error, "Left_side_of_comma_operator_is_unused_and_has_no_side_effects_2695", "Left side of comma operator is unused and has no side effects.", true),
    The_Object_type_is_assignable_to_very_few_other_types_Did_you_mean_to_use_the_any_type_instead: t(2696, e.DiagnosticCategory.Error, "The_Object_type_is_assignable_to_very_few_other_types_Did_you_mean_to_use_the_any_type_instead_2696", "The 'Object' type is assignable to very few other types. Did you mean to use the 'any' type instead?"),
    An_async_function_or_method_must_return_a_Promise_Make_sure_you_have_a_declaration_for_Promise_or_include_ES2015_in_your_lib_option: t(2697, e.DiagnosticCategory.Error, "An_async_function_or_method_must_return_a_Promise_Make_sure_you_have_a_declaration_for_Promise_or_in_2697", "An async function or method must return a 'Promise'. Make sure you have a declaration for 'Promise' or include 'ES2015' in your `--lib` option."),
    Spread_types_may_only_be_created_from_object_types: t(2698, e.DiagnosticCategory.Error, "Spread_types_may_only_be_created_from_object_types_2698", "Spread types may only be created from object types."),
    Static_property_0_conflicts_with_built_in_property_Function_0_of_constructor_function_1: t(2699, e.DiagnosticCategory.Error, "Static_property_0_conflicts_with_built_in_property_Function_0_of_constructor_function_1_2699", "Static property '{0}' conflicts with built-in property 'Function.{0}' of constructor function '{1}'."),
    Rest_types_may_only_be_created_from_object_types: t(2700, e.DiagnosticCategory.Error, "Rest_types_may_only_be_created_from_object_types_2700", "Rest types may only be created from object types."),
    The_target_of_an_object_rest_assignment_must_be_a_variable_or_a_property_access: t(2701, e.DiagnosticCategory.Error, "The_target_of_an_object_rest_assignment_must_be_a_variable_or_a_property_access_2701", "The target of an object rest assignment must be a variable or a property access."),
    _0_only_refers_to_a_type_but_is_being_used_as_a_namespace_here: t(2702, e.DiagnosticCategory.Error, "_0_only_refers_to_a_type_but_is_being_used_as_a_namespace_here_2702", "'{0}' only refers to a type, but is being used as a namespace here."),
    The_operand_of_a_delete_operator_must_be_a_property_reference: t(2703, e.DiagnosticCategory.Error, "The_operand_of_a_delete_operator_must_be_a_property_reference_2703", "The operand of a delete operator must be a property reference."),
    The_operand_of_a_delete_operator_cannot_be_a_read_only_property: t(2704, e.DiagnosticCategory.Error, "The_operand_of_a_delete_operator_cannot_be_a_read_only_property_2704", "The operand of a delete operator cannot be a read-only property."),
    An_async_function_or_method_in_ES5_SlashES3_requires_the_Promise_constructor_Make_sure_you_have_a_declaration_for_the_Promise_constructor_or_include_ES2015_in_your_lib_option: t(2705, e.DiagnosticCategory.Error, "An_async_function_or_method_in_ES5_SlashES3_requires_the_Promise_constructor_Make_sure_you_have_a_de_2705", "An async function or method in ES5/ES3 requires the 'Promise' constructor.  Make sure you have a declaration for the 'Promise' constructor or include 'ES2015' in your `--lib` option."),
    Required_type_parameters_may_not_follow_optional_type_parameters: t(2706, e.DiagnosticCategory.Error, "Required_type_parameters_may_not_follow_optional_type_parameters_2706", "Required type parameters may not follow optional type parameters."),
    Generic_type_0_requires_between_1_and_2_type_arguments: t(2707, e.DiagnosticCategory.Error, "Generic_type_0_requires_between_1_and_2_type_arguments_2707", "Generic type '{0}' requires between {1} and {2} type arguments."),
    Cannot_use_namespace_0_as_a_value: t(2708, e.DiagnosticCategory.Error, "Cannot_use_namespace_0_as_a_value_2708", "Cannot use namespace '{0}' as a value."),
    Cannot_use_namespace_0_as_a_type: t(2709, e.DiagnosticCategory.Error, "Cannot_use_namespace_0_as_a_type_2709", "Cannot use namespace '{0}' as a type."),
    _0_are_specified_twice_The_attribute_named_0_will_be_overwritten: t(2710, e.DiagnosticCategory.Error, "_0_are_specified_twice_The_attribute_named_0_will_be_overwritten_2710", "'{0}' are specified twice. The attribute named '{0}' will be overwritten."),
    A_dynamic_import_call_returns_a_Promise_Make_sure_you_have_a_declaration_for_Promise_or_include_ES2015_in_your_lib_option: t(2711, e.DiagnosticCategory.Error, "A_dynamic_import_call_returns_a_Promise_Make_sure_you_have_a_declaration_for_Promise_or_include_ES20_2711", "A dynamic import call returns a 'Promise'. Make sure you have a declaration for 'Promise' or include 'ES2015' in your `--lib` option."),
    A_dynamic_import_call_in_ES5_SlashES3_requires_the_Promise_constructor_Make_sure_you_have_a_declaration_for_the_Promise_constructor_or_include_ES2015_in_your_lib_option: t(2712, e.DiagnosticCategory.Error, "A_dynamic_import_call_in_ES5_SlashES3_requires_the_Promise_constructor_Make_sure_you_have_a_declarat_2712", "A dynamic import call in ES5/ES3 requires the 'Promise' constructor.  Make sure you have a declaration for the 'Promise' constructor or include 'ES2015' in your `--lib` option."),
    Cannot_access_0_1_because_0_is_a_type_but_not_a_namespace_Did_you_mean_to_retrieve_the_type_of_the_property_1_in_0_with_0_1: t(2713, e.DiagnosticCategory.Error, "Cannot_access_0_1_because_0_is_a_type_but_not_a_namespace_Did_you_mean_to_retrieve_the_type_of_the_p_2713", "Cannot access '{0}.{1}' because '{0}' is a type, but not a namespace. Did you mean to retrieve the type of the property '{1}' in '{0}' with '{0}[\"{1}\"]'?"),
    The_expression_of_an_export_assignment_must_be_an_identifier_or_qualified_name_in_an_ambient_context: t(2714, e.DiagnosticCategory.Error, "The_expression_of_an_export_assignment_must_be_an_identifier_or_qualified_name_in_an_ambient_context_2714", "The expression of an export assignment must be an identifier or qualified name in an ambient context."),
    Abstract_property_0_in_class_1_cannot_be_accessed_in_the_constructor: t(2715, e.DiagnosticCategory.Error, "Abstract_property_0_in_class_1_cannot_be_accessed_in_the_constructor_2715", "Abstract property '{0}' in class '{1}' cannot be accessed in the constructor."),
    Type_parameter_0_has_a_circular_default: t(2716, e.DiagnosticCategory.Error, "Type_parameter_0_has_a_circular_default_2716", "Type parameter '{0}' has a circular default."),
    Subsequent_property_declarations_must_have_the_same_type_Property_0_must_be_of_type_1_but_here_has_type_2: t(2717, e.DiagnosticCategory.Error, "Subsequent_property_declarations_must_have_the_same_type_Property_0_must_be_of_type_1_but_here_has_t_2717", "Subsequent property declarations must have the same type.  Property '{0}' must be of type '{1}', but here has type '{2}'."),
    Duplicate_declaration_0: t(2718, e.DiagnosticCategory.Error, "Duplicate_declaration_0_2718", "Duplicate declaration '{0}'."),
    Type_0_is_not_assignable_to_type_1_Two_different_types_with_this_name_exist_but_they_are_unrelated: t(2719, e.DiagnosticCategory.Error, "Type_0_is_not_assignable_to_type_1_Two_different_types_with_this_name_exist_but_they_are_unrelated_2719", "Type '{0}' is not assignable to type '{1}'. Two different types with this name exist, but they are unrelated."),
    Class_0_incorrectly_implements_class_1_Did_you_mean_to_extend_1_and_inherit_its_members_as_a_subclass: t(2720, e.DiagnosticCategory.Error, "Class_0_incorrectly_implements_class_1_Did_you_mean_to_extend_1_and_inherit_its_members_as_a_subclas_2720", "Class '{0}' incorrectly implements class '{1}'. Did you mean to extend '{1}' and inherit its members as a subclass?"),
    Cannot_invoke_an_object_which_is_possibly_null: t(2721, e.DiagnosticCategory.Error, "Cannot_invoke_an_object_which_is_possibly_null_2721", "Cannot invoke an object which is possibly 'null'."),
    Cannot_invoke_an_object_which_is_possibly_undefined: t(2722, e.DiagnosticCategory.Error, "Cannot_invoke_an_object_which_is_possibly_undefined_2722", "Cannot invoke an object which is possibly 'undefined'."),
    Cannot_invoke_an_object_which_is_possibly_null_or_undefined: t(2723, e.DiagnosticCategory.Error, "Cannot_invoke_an_object_which_is_possibly_null_or_undefined_2723", "Cannot invoke an object which is possibly 'null' or 'undefined'."),
    Module_0_has_no_exported_member_1_Did_you_mean_2: t(2724, e.DiagnosticCategory.Error, "Module_0_has_no_exported_member_1_Did_you_mean_2_2724", "Module '{0}' has no exported member '{1}'. Did you mean '{2}'?"),
    Class_name_cannot_be_Object_when_targeting_ES5_with_module_0: t(2725, e.DiagnosticCategory.Error, "Class_name_cannot_be_Object_when_targeting_ES5_with_module_0_2725", "Class name cannot be 'Object' when targeting ES5 with module {0}."),
    Cannot_find_lib_definition_for_0: t(2726, e.DiagnosticCategory.Error, "Cannot_find_lib_definition_for_0_2726", "Cannot find lib definition for '{0}'."),
    Cannot_find_lib_definition_for_0_Did_you_mean_1: t(2727, e.DiagnosticCategory.Error, "Cannot_find_lib_definition_for_0_Did_you_mean_1_2727", "Cannot find lib definition for '{0}'. Did you mean '{1}'?"),
    _0_is_declared_here: t(2728, e.DiagnosticCategory.Message, "_0_is_declared_here_2728", "'{0}' is declared here."),
    Property_0_is_used_before_its_initialization: t(2729, e.DiagnosticCategory.Error, "Property_0_is_used_before_its_initialization_2729", "Property '{0}' is used before its initialization."),
    Import_declaration_0_is_using_private_name_1: t(4e3, e.DiagnosticCategory.Error, "Import_declaration_0_is_using_private_name_1_4000", "Import declaration '{0}' is using private name '{1}'."),
    Type_parameter_0_of_exported_class_has_or_is_using_private_name_1: t(4002, e.DiagnosticCategory.Error, "Type_parameter_0_of_exported_class_has_or_is_using_private_name_1_4002", "Type parameter '{0}' of exported class has or is using private name '{1}'."),
    Type_parameter_0_of_exported_interface_has_or_is_using_private_name_1: t(4004, e.DiagnosticCategory.Error, "Type_parameter_0_of_exported_interface_has_or_is_using_private_name_1_4004", "Type parameter '{0}' of exported interface has or is using private name '{1}'."),
    Type_parameter_0_of_constructor_signature_from_exported_interface_has_or_is_using_private_name_1: t(4006, e.DiagnosticCategory.Error, "Type_parameter_0_of_constructor_signature_from_exported_interface_has_or_is_using_private_name_1_4006", "Type parameter '{0}' of constructor signature from exported interface has or is using private name '{1}'."),
    Type_parameter_0_of_call_signature_from_exported_interface_has_or_is_using_private_name_1: t(4008, e.DiagnosticCategory.Error, "Type_parameter_0_of_call_signature_from_exported_interface_has_or_is_using_private_name_1_4008", "Type parameter '{0}' of call signature from exported interface has or is using private name '{1}'."),
    Type_parameter_0_of_public_static_method_from_exported_class_has_or_is_using_private_name_1: t(4010, e.DiagnosticCategory.Error, "Type_parameter_0_of_public_static_method_from_exported_class_has_or_is_using_private_name_1_4010", "Type parameter '{0}' of public static method from exported class has or is using private name '{1}'."),
    Type_parameter_0_of_public_method_from_exported_class_has_or_is_using_private_name_1: t(4012, e.DiagnosticCategory.Error, "Type_parameter_0_of_public_method_from_exported_class_has_or_is_using_private_name_1_4012", "Type parameter '{0}' of public method from exported class has or is using private name '{1}'."),
    Type_parameter_0_of_method_from_exported_interface_has_or_is_using_private_name_1: t(4014, e.DiagnosticCategory.Error, "Type_parameter_0_of_method_from_exported_interface_has_or_is_using_private_name_1_4014", "Type parameter '{0}' of method from exported interface has or is using private name '{1}'."),
    Type_parameter_0_of_exported_function_has_or_is_using_private_name_1: t(4016, e.DiagnosticCategory.Error, "Type_parameter_0_of_exported_function_has_or_is_using_private_name_1_4016", "Type parameter '{0}' of exported function has or is using private name '{1}'."),
    Implements_clause_of_exported_class_0_has_or_is_using_private_name_1: t(4019, e.DiagnosticCategory.Error, "Implements_clause_of_exported_class_0_has_or_is_using_private_name_1_4019", "Implements clause of exported class '{0}' has or is using private name '{1}'."),
    extends_clause_of_exported_class_0_has_or_is_using_private_name_1: t(4020, e.DiagnosticCategory.Error, "extends_clause_of_exported_class_0_has_or_is_using_private_name_1_4020", "'extends' clause of exported class '{0}' has or is using private name '{1}'."),
    extends_clause_of_exported_interface_0_has_or_is_using_private_name_1: t(4022, e.DiagnosticCategory.Error, "extends_clause_of_exported_interface_0_has_or_is_using_private_name_1_4022", "'extends' clause of exported interface '{0}' has or is using private name '{1}'."),
    Exported_variable_0_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named: t(4023, e.DiagnosticCategory.Error, "Exported_variable_0_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named_4023", "Exported variable '{0}' has or is using name '{1}' from external module {2} but cannot be named."),
    Exported_variable_0_has_or_is_using_name_1_from_private_module_2: t(4024, e.DiagnosticCategory.Error, "Exported_variable_0_has_or_is_using_name_1_from_private_module_2_4024", "Exported variable '{0}' has or is using name '{1}' from private module '{2}'."),
    Exported_variable_0_has_or_is_using_private_name_1: t(4025, e.DiagnosticCategory.Error, "Exported_variable_0_has_or_is_using_private_name_1_4025", "Exported variable '{0}' has or is using private name '{1}'."),
    Public_static_property_0_of_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named: t(4026, e.DiagnosticCategory.Error, "Public_static_property_0_of_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot__4026", "Public static property '{0}' of exported class has or is using name '{1}' from external module {2} but cannot be named."),
    Public_static_property_0_of_exported_class_has_or_is_using_name_1_from_private_module_2: t(4027, e.DiagnosticCategory.Error, "Public_static_property_0_of_exported_class_has_or_is_using_name_1_from_private_module_2_4027", "Public static property '{0}' of exported class has or is using name '{1}' from private module '{2}'."),
    Public_static_property_0_of_exported_class_has_or_is_using_private_name_1: t(4028, e.DiagnosticCategory.Error, "Public_static_property_0_of_exported_class_has_or_is_using_private_name_1_4028", "Public static property '{0}' of exported class has or is using private name '{1}'."),
    Public_property_0_of_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named: t(4029, e.DiagnosticCategory.Error, "Public_property_0_of_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_name_4029", "Public property '{0}' of exported class has or is using name '{1}' from external module {2} but cannot be named."),
    Public_property_0_of_exported_class_has_or_is_using_name_1_from_private_module_2: t(4030, e.DiagnosticCategory.Error, "Public_property_0_of_exported_class_has_or_is_using_name_1_from_private_module_2_4030", "Public property '{0}' of exported class has or is using name '{1}' from private module '{2}'."),
    Public_property_0_of_exported_class_has_or_is_using_private_name_1: t(4031, e.DiagnosticCategory.Error, "Public_property_0_of_exported_class_has_or_is_using_private_name_1_4031", "Public property '{0}' of exported class has or is using private name '{1}'."),
    Property_0_of_exported_interface_has_or_is_using_name_1_from_private_module_2: t(4032, e.DiagnosticCategory.Error, "Property_0_of_exported_interface_has_or_is_using_name_1_from_private_module_2_4032", "Property '{0}' of exported interface has or is using name '{1}' from private module '{2}'."),
    Property_0_of_exported_interface_has_or_is_using_private_name_1: t(4033, e.DiagnosticCategory.Error, "Property_0_of_exported_interface_has_or_is_using_private_name_1_4033", "Property '{0}' of exported interface has or is using private name '{1}'."),
    Parameter_type_of_public_static_setter_0_from_exported_class_has_or_is_using_name_1_from_private_module_2: t(4034, e.DiagnosticCategory.Error, "Parameter_type_of_public_static_setter_0_from_exported_class_has_or_is_using_name_1_from_private_mod_4034", "Parameter type of public static setter '{0}' from exported class has or is using name '{1}' from private module '{2}'."),
    Parameter_type_of_public_static_setter_0_from_exported_class_has_or_is_using_private_name_1: t(4035, e.DiagnosticCategory.Error, "Parameter_type_of_public_static_setter_0_from_exported_class_has_or_is_using_private_name_1_4035", "Parameter type of public static setter '{0}' from exported class has or is using private name '{1}'."),
    Parameter_type_of_public_setter_0_from_exported_class_has_or_is_using_name_1_from_private_module_2: t(4036, e.DiagnosticCategory.Error, "Parameter_type_of_public_setter_0_from_exported_class_has_or_is_using_name_1_from_private_module_2_4036", "Parameter type of public setter '{0}' from exported class has or is using name '{1}' from private module '{2}'."),
    Parameter_type_of_public_setter_0_from_exported_class_has_or_is_using_private_name_1: t(4037, e.DiagnosticCategory.Error, "Parameter_type_of_public_setter_0_from_exported_class_has_or_is_using_private_name_1_4037", "Parameter type of public setter '{0}' from exported class has or is using private name '{1}'."),
    Return_type_of_public_static_getter_0_from_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named: t(4038, e.DiagnosticCategory.Error, "Return_type_of_public_static_getter_0_from_exported_class_has_or_is_using_name_1_from_external_modul_4038", "Return type of public static getter '{0}' from exported class has or is using name '{1}' from external module {2} but cannot be named."),
    Return_type_of_public_static_getter_0_from_exported_class_has_or_is_using_name_1_from_private_module_2: t(4039, e.DiagnosticCategory.Error, "Return_type_of_public_static_getter_0_from_exported_class_has_or_is_using_name_1_from_private_module_4039", "Return type of public static getter '{0}' from exported class has or is using name '{1}' from private module '{2}'."),
    Return_type_of_public_static_getter_0_from_exported_class_has_or_is_using_private_name_1: t(4040, e.DiagnosticCategory.Error, "Return_type_of_public_static_getter_0_from_exported_class_has_or_is_using_private_name_1_4040", "Return type of public static getter '{0}' from exported class has or is using private name '{1}'."),
    Return_type_of_public_getter_0_from_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named: t(4041, e.DiagnosticCategory.Error, "Return_type_of_public_getter_0_from_exported_class_has_or_is_using_name_1_from_external_module_2_but_4041", "Return type of public getter '{0}' from exported class has or is using name '{1}' from external module {2} but cannot be named."),
    Return_type_of_public_getter_0_from_exported_class_has_or_is_using_name_1_from_private_module_2: t(4042, e.DiagnosticCategory.Error, "Return_type_of_public_getter_0_from_exported_class_has_or_is_using_name_1_from_private_module_2_4042", "Return type of public getter '{0}' from exported class has or is using name '{1}' from private module '{2}'."),
    Return_type_of_public_getter_0_from_exported_class_has_or_is_using_private_name_1: t(4043, e.DiagnosticCategory.Error, "Return_type_of_public_getter_0_from_exported_class_has_or_is_using_private_name_1_4043", "Return type of public getter '{0}' from exported class has or is using private name '{1}'."),
    Return_type_of_constructor_signature_from_exported_interface_has_or_is_using_name_0_from_private_module_1: t(4044, e.DiagnosticCategory.Error, "Return_type_of_constructor_signature_from_exported_interface_has_or_is_using_name_0_from_private_mod_4044", "Return type of constructor signature from exported interface has or is using name '{0}' from private module '{1}'."),
    Return_type_of_constructor_signature_from_exported_interface_has_or_is_using_private_name_0: t(4045, e.DiagnosticCategory.Error, "Return_type_of_constructor_signature_from_exported_interface_has_or_is_using_private_name_0_4045", "Return type of constructor signature from exported interface has or is using private name '{0}'."),
    Return_type_of_call_signature_from_exported_interface_has_or_is_using_name_0_from_private_module_1: t(4046, e.DiagnosticCategory.Error, "Return_type_of_call_signature_from_exported_interface_has_or_is_using_name_0_from_private_module_1_4046", "Return type of call signature from exported interface has or is using name '{0}' from private module '{1}'."),
    Return_type_of_call_signature_from_exported_interface_has_or_is_using_private_name_0: t(4047, e.DiagnosticCategory.Error, "Return_type_of_call_signature_from_exported_interface_has_or_is_using_private_name_0_4047", "Return type of call signature from exported interface has or is using private name '{0}'."),
    Return_type_of_index_signature_from_exported_interface_has_or_is_using_name_0_from_private_module_1: t(4048, e.DiagnosticCategory.Error, "Return_type_of_index_signature_from_exported_interface_has_or_is_using_name_0_from_private_module_1_4048", "Return type of index signature from exported interface has or is using name '{0}' from private module '{1}'."),
    Return_type_of_index_signature_from_exported_interface_has_or_is_using_private_name_0: t(4049, e.DiagnosticCategory.Error, "Return_type_of_index_signature_from_exported_interface_has_or_is_using_private_name_0_4049", "Return type of index signature from exported interface has or is using private name '{0}'."),
    Return_type_of_public_static_method_from_exported_class_has_or_is_using_name_0_from_external_module_1_but_cannot_be_named: t(4050, e.DiagnosticCategory.Error, "Return_type_of_public_static_method_from_exported_class_has_or_is_using_name_0_from_external_module__4050", "Return type of public static method from exported class has or is using name '{0}' from external module {1} but cannot be named."),
    Return_type_of_public_static_method_from_exported_class_has_or_is_using_name_0_from_private_module_1: t(4051, e.DiagnosticCategory.Error, "Return_type_of_public_static_method_from_exported_class_has_or_is_using_name_0_from_private_module_1_4051", "Return type of public static method from exported class has or is using name '{0}' from private module '{1}'."),
    Return_type_of_public_static_method_from_exported_class_has_or_is_using_private_name_0: t(4052, e.DiagnosticCategory.Error, "Return_type_of_public_static_method_from_exported_class_has_or_is_using_private_name_0_4052", "Return type of public static method from exported class has or is using private name '{0}'."),
    Return_type_of_public_method_from_exported_class_has_or_is_using_name_0_from_external_module_1_but_cannot_be_named: t(4053, e.DiagnosticCategory.Error, "Return_type_of_public_method_from_exported_class_has_or_is_using_name_0_from_external_module_1_but_c_4053", "Return type of public method from exported class has or is using name '{0}' from external module {1} but cannot be named."),
    Return_type_of_public_method_from_exported_class_has_or_is_using_name_0_from_private_module_1: t(4054, e.DiagnosticCategory.Error, "Return_type_of_public_method_from_exported_class_has_or_is_using_name_0_from_private_module_1_4054", "Return type of public method from exported class has or is using name '{0}' from private module '{1}'."),
    Return_type_of_public_method_from_exported_class_has_or_is_using_private_name_0: t(4055, e.DiagnosticCategory.Error, "Return_type_of_public_method_from_exported_class_has_or_is_using_private_name_0_4055", "Return type of public method from exported class has or is using private name '{0}'."),
    Return_type_of_method_from_exported_interface_has_or_is_using_name_0_from_private_module_1: t(4056, e.DiagnosticCategory.Error, "Return_type_of_method_from_exported_interface_has_or_is_using_name_0_from_private_module_1_4056", "Return type of method from exported interface has or is using name '{0}' from private module '{1}'."),
    Return_type_of_method_from_exported_interface_has_or_is_using_private_name_0: t(4057, e.DiagnosticCategory.Error, "Return_type_of_method_from_exported_interface_has_or_is_using_private_name_0_4057", "Return type of method from exported interface has or is using private name '{0}'."),
    Return_type_of_exported_function_has_or_is_using_name_0_from_external_module_1_but_cannot_be_named: t(4058, e.DiagnosticCategory.Error, "Return_type_of_exported_function_has_or_is_using_name_0_from_external_module_1_but_cannot_be_named_4058", "Return type of exported function has or is using name '{0}' from external module {1} but cannot be named."),
    Return_type_of_exported_function_has_or_is_using_name_0_from_private_module_1: t(4059, e.DiagnosticCategory.Error, "Return_type_of_exported_function_has_or_is_using_name_0_from_private_module_1_4059", "Return type of exported function has or is using name '{0}' from private module '{1}'."),
    Return_type_of_exported_function_has_or_is_using_private_name_0: t(4060, e.DiagnosticCategory.Error, "Return_type_of_exported_function_has_or_is_using_private_name_0_4060", "Return type of exported function has or is using private name '{0}'."),
    Parameter_0_of_constructor_from_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named: t(4061, e.DiagnosticCategory.Error, "Parameter_0_of_constructor_from_exported_class_has_or_is_using_name_1_from_external_module_2_but_can_4061", "Parameter '{0}' of constructor from exported class has or is using name '{1}' from external module {2} but cannot be named."),
    Parameter_0_of_constructor_from_exported_class_has_or_is_using_name_1_from_private_module_2: t(4062, e.DiagnosticCategory.Error, "Parameter_0_of_constructor_from_exported_class_has_or_is_using_name_1_from_private_module_2_4062", "Parameter '{0}' of constructor from exported class has or is using name '{1}' from private module '{2}'."),
    Parameter_0_of_constructor_from_exported_class_has_or_is_using_private_name_1: t(4063, e.DiagnosticCategory.Error, "Parameter_0_of_constructor_from_exported_class_has_or_is_using_private_name_1_4063", "Parameter '{0}' of constructor from exported class has or is using private name '{1}'."),
    Parameter_0_of_constructor_signature_from_exported_interface_has_or_is_using_name_1_from_private_module_2: t(4064, e.DiagnosticCategory.Error, "Parameter_0_of_constructor_signature_from_exported_interface_has_or_is_using_name_1_from_private_mod_4064", "Parameter '{0}' of constructor signature from exported interface has or is using name '{1}' from private module '{2}'."),
    Parameter_0_of_constructor_signature_from_exported_interface_has_or_is_using_private_name_1: t(4065, e.DiagnosticCategory.Error, "Parameter_0_of_constructor_signature_from_exported_interface_has_or_is_using_private_name_1_4065", "Parameter '{0}' of constructor signature from exported interface has or is using private name '{1}'."),
    Parameter_0_of_call_signature_from_exported_interface_has_or_is_using_name_1_from_private_module_2: t(4066, e.DiagnosticCategory.Error, "Parameter_0_of_call_signature_from_exported_interface_has_or_is_using_name_1_from_private_module_2_4066", "Parameter '{0}' of call signature from exported interface has or is using name '{1}' from private module '{2}'."),
    Parameter_0_of_call_signature_from_exported_interface_has_or_is_using_private_name_1: t(4067, e.DiagnosticCategory.Error, "Parameter_0_of_call_signature_from_exported_interface_has_or_is_using_private_name_1_4067", "Parameter '{0}' of call signature from exported interface has or is using private name '{1}'."),
    Parameter_0_of_public_static_method_from_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named: t(4068, e.DiagnosticCategory.Error, "Parameter_0_of_public_static_method_from_exported_class_has_or_is_using_name_1_from_external_module__4068", "Parameter '{0}' of public static method from exported class has or is using name '{1}' from external module {2} but cannot be named."),
    Parameter_0_of_public_static_method_from_exported_class_has_or_is_using_name_1_from_private_module_2: t(4069, e.DiagnosticCategory.Error, "Parameter_0_of_public_static_method_from_exported_class_has_or_is_using_name_1_from_private_module_2_4069", "Parameter '{0}' of public static method from exported class has or is using name '{1}' from private module '{2}'."),
    Parameter_0_of_public_static_method_from_exported_class_has_or_is_using_private_name_1: t(4070, e.DiagnosticCategory.Error, "Parameter_0_of_public_static_method_from_exported_class_has_or_is_using_private_name_1_4070", "Parameter '{0}' of public static method from exported class has or is using private name '{1}'."),
    Parameter_0_of_public_method_from_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named: t(4071, e.DiagnosticCategory.Error, "Parameter_0_of_public_method_from_exported_class_has_or_is_using_name_1_from_external_module_2_but_c_4071", "Parameter '{0}' of public method from exported class has or is using name '{1}' from external module {2} but cannot be named."),
    Parameter_0_of_public_method_from_exported_class_has_or_is_using_name_1_from_private_module_2: t(4072, e.DiagnosticCategory.Error, "Parameter_0_of_public_method_from_exported_class_has_or_is_using_name_1_from_private_module_2_4072", "Parameter '{0}' of public method from exported class has or is using name '{1}' from private module '{2}'."),
    Parameter_0_of_public_method_from_exported_class_has_or_is_using_private_name_1: t(4073, e.DiagnosticCategory.Error, "Parameter_0_of_public_method_from_exported_class_has_or_is_using_private_name_1_4073", "Parameter '{0}' of public method from exported class has or is using private name '{1}'."),
    Parameter_0_of_method_from_exported_interface_has_or_is_using_name_1_from_private_module_2: t(4074, e.DiagnosticCategory.Error, "Parameter_0_of_method_from_exported_interface_has_or_is_using_name_1_from_private_module_2_4074", "Parameter '{0}' of method from exported interface has or is using name '{1}' from private module '{2}'."),
    Parameter_0_of_method_from_exported_interface_has_or_is_using_private_name_1: t(4075, e.DiagnosticCategory.Error, "Parameter_0_of_method_from_exported_interface_has_or_is_using_private_name_1_4075", "Parameter '{0}' of method from exported interface has or is using private name '{1}'."),
    Parameter_0_of_exported_function_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named: t(4076, e.DiagnosticCategory.Error, "Parameter_0_of_exported_function_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named_4076", "Parameter '{0}' of exported function has or is using name '{1}' from external module {2} but cannot be named."),
    Parameter_0_of_exported_function_has_or_is_using_name_1_from_private_module_2: t(4077, e.DiagnosticCategory.Error, "Parameter_0_of_exported_function_has_or_is_using_name_1_from_private_module_2_4077", "Parameter '{0}' of exported function has or is using name '{1}' from private module '{2}'."),
    Parameter_0_of_exported_function_has_or_is_using_private_name_1: t(4078, e.DiagnosticCategory.Error, "Parameter_0_of_exported_function_has_or_is_using_private_name_1_4078", "Parameter '{0}' of exported function has or is using private name '{1}'."),
    Exported_type_alias_0_has_or_is_using_private_name_1: t(4081, e.DiagnosticCategory.Error, "Exported_type_alias_0_has_or_is_using_private_name_1_4081", "Exported type alias '{0}' has or is using private name '{1}'."),
    Default_export_of_the_module_has_or_is_using_private_name_0: t(4082, e.DiagnosticCategory.Error, "Default_export_of_the_module_has_or_is_using_private_name_0_4082", "Default export of the module has or is using private name '{0}'."),
    Type_parameter_0_of_exported_type_alias_has_or_is_using_private_name_1: t(4083, e.DiagnosticCategory.Error, "Type_parameter_0_of_exported_type_alias_has_or_is_using_private_name_1_4083", "Type parameter '{0}' of exported type alias has or is using private name '{1}'."),
    Conflicting_definitions_for_0_found_at_1_and_2_Consider_installing_a_specific_version_of_this_library_to_resolve_the_conflict: t(4090, e.DiagnosticCategory.Error, "Conflicting_definitions_for_0_found_at_1_and_2_Consider_installing_a_specific_version_of_this_librar_4090", "Conflicting definitions for '{0}' found at '{1}' and '{2}'. Consider installing a specific version of this library to resolve the conflict."),
    Parameter_0_of_index_signature_from_exported_interface_has_or_is_using_name_1_from_private_module_2: t(4091, e.DiagnosticCategory.Error, "Parameter_0_of_index_signature_from_exported_interface_has_or_is_using_name_1_from_private_module_2_4091", "Parameter '{0}' of index signature from exported interface has or is using name '{1}' from private module '{2}'."),
    Parameter_0_of_index_signature_from_exported_interface_has_or_is_using_private_name_1: t(4092, e.DiagnosticCategory.Error, "Parameter_0_of_index_signature_from_exported_interface_has_or_is_using_private_name_1_4092", "Parameter '{0}' of index signature from exported interface has or is using private name '{1}'."),
    Property_0_of_exported_class_expression_may_not_be_private_or_protected: t(4094, e.DiagnosticCategory.Error, "Property_0_of_exported_class_expression_may_not_be_private_or_protected_4094", "Property '{0}' of exported class expression may not be private or protected."),
    Public_static_method_0_of_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named: t(4095, e.DiagnosticCategory.Error, "Public_static_method_0_of_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_4095", "Public static method '{0}' of exported class has or is using name '{1}' from external module {2} but cannot be named."),
    Public_static_method_0_of_exported_class_has_or_is_using_name_1_from_private_module_2: t(4096, e.DiagnosticCategory.Error, "Public_static_method_0_of_exported_class_has_or_is_using_name_1_from_private_module_2_4096", "Public static method '{0}' of exported class has or is using name '{1}' from private module '{2}'."),
    Public_static_method_0_of_exported_class_has_or_is_using_private_name_1: t(4097, e.DiagnosticCategory.Error, "Public_static_method_0_of_exported_class_has_or_is_using_private_name_1_4097", "Public static method '{0}' of exported class has or is using private name '{1}'."),
    Public_method_0_of_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named: t(4098, e.DiagnosticCategory.Error, "Public_method_0_of_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named_4098", "Public method '{0}' of exported class has or is using name '{1}' from external module {2} but cannot be named."),
    Public_method_0_of_exported_class_has_or_is_using_name_1_from_private_module_2: t(4099, e.DiagnosticCategory.Error, "Public_method_0_of_exported_class_has_or_is_using_name_1_from_private_module_2_4099", "Public method '{0}' of exported class has or is using name '{1}' from private module '{2}'."),
    Public_method_0_of_exported_class_has_or_is_using_private_name_1: t(4100, e.DiagnosticCategory.Error, "Public_method_0_of_exported_class_has_or_is_using_private_name_1_4100", "Public method '{0}' of exported class has or is using private name '{1}'."),
    Method_0_of_exported_interface_has_or_is_using_name_1_from_private_module_2: t(4101, e.DiagnosticCategory.Error, "Method_0_of_exported_interface_has_or_is_using_name_1_from_private_module_2_4101", "Method '{0}' of exported interface has or is using name '{1}' from private module '{2}'."),
    Method_0_of_exported_interface_has_or_is_using_private_name_1: t(4102, e.DiagnosticCategory.Error, "Method_0_of_exported_interface_has_or_is_using_private_name_1_4102", "Method '{0}' of exported interface has or is using private name '{1}'."),
    The_current_host_does_not_support_the_0_option: t(5001, e.DiagnosticCategory.Error, "The_current_host_does_not_support_the_0_option_5001", "The current host does not support the '{0}' option."),
    Cannot_find_the_common_subdirectory_path_for_the_input_files: t(5009, e.DiagnosticCategory.Error, "Cannot_find_the_common_subdirectory_path_for_the_input_files_5009", "Cannot find the common subdirectory path for the input files."),
    File_specification_cannot_end_in_a_recursive_directory_wildcard_Asterisk_Asterisk_Colon_0: t(5010, e.DiagnosticCategory.Error, "File_specification_cannot_end_in_a_recursive_directory_wildcard_Asterisk_Asterisk_Colon_0_5010", "File specification cannot end in a recursive directory wildcard ('**'): '{0}'."),
    Cannot_read_file_0_Colon_1: t(5012, e.DiagnosticCategory.Error, "Cannot_read_file_0_Colon_1_5012", "Cannot read file '{0}': {1}."),
    Failed_to_parse_file_0_Colon_1: t(5014, e.DiagnosticCategory.Error, "Failed_to_parse_file_0_Colon_1_5014", "Failed to parse file '{0}': {1}."),
    Unknown_compiler_option_0: t(5023, e.DiagnosticCategory.Error, "Unknown_compiler_option_0_5023", "Unknown compiler option '{0}'."),
    Compiler_option_0_requires_a_value_of_type_1: t(5024, e.DiagnosticCategory.Error, "Compiler_option_0_requires_a_value_of_type_1_5024", "Compiler option '{0}' requires a value of type {1}."),
    Could_not_write_file_0_Colon_1: t(5033, e.DiagnosticCategory.Error, "Could_not_write_file_0_Colon_1_5033", "Could not write file '{0}': {1}."),
    Option_project_cannot_be_mixed_with_source_files_on_a_command_line: t(5042, e.DiagnosticCategory.Error, "Option_project_cannot_be_mixed_with_source_files_on_a_command_line_5042", "Option 'project' cannot be mixed with source files on a command line."),
    Option_isolatedModules_can_only_be_used_when_either_option_module_is_provided_or_option_target_is_ES2015_or_higher: t(5047, e.DiagnosticCategory.Error, "Option_isolatedModules_can_only_be_used_when_either_option_module_is_provided_or_option_target_is_ES_5047", "Option 'isolatedModules' can only be used when either option '--module' is provided or option 'target' is 'ES2015' or higher."),
    Option_0_can_only_be_used_when_either_option_inlineSourceMap_or_option_sourceMap_is_provided: t(5051, e.DiagnosticCategory.Error, "Option_0_can_only_be_used_when_either_option_inlineSourceMap_or_option_sourceMap_is_provided_5051", "Option '{0} can only be used when either option '--inlineSourceMap' or option '--sourceMap' is provided."),
    Option_0_cannot_be_specified_without_specifying_option_1: t(5052, e.DiagnosticCategory.Error, "Option_0_cannot_be_specified_without_specifying_option_1_5052", "Option '{0}' cannot be specified without specifying option '{1}'."),
    Option_0_cannot_be_specified_with_option_1: t(5053, e.DiagnosticCategory.Error, "Option_0_cannot_be_specified_with_option_1_5053", "Option '{0}' cannot be specified with option '{1}'."),
    A_tsconfig_json_file_is_already_defined_at_Colon_0: t(5054, e.DiagnosticCategory.Error, "A_tsconfig_json_file_is_already_defined_at_Colon_0_5054", "A 'tsconfig.json' file is already defined at: '{0}'."),
    Cannot_write_file_0_because_it_would_overwrite_input_file: t(5055, e.DiagnosticCategory.Error, "Cannot_write_file_0_because_it_would_overwrite_input_file_5055", "Cannot write file '{0}' because it would overwrite input file."),
    Cannot_write_file_0_because_it_would_be_overwritten_by_multiple_input_files: t(5056, e.DiagnosticCategory.Error, "Cannot_write_file_0_because_it_would_be_overwritten_by_multiple_input_files_5056", "Cannot write file '{0}' because it would be overwritten by multiple input files."),
    Cannot_find_a_tsconfig_json_file_at_the_specified_directory_Colon_0: t(5057, e.DiagnosticCategory.Error, "Cannot_find_a_tsconfig_json_file_at_the_specified_directory_Colon_0_5057", "Cannot find a tsconfig.json file at the specified directory: '{0}'."),
    The_specified_path_does_not_exist_Colon_0: t(5058, e.DiagnosticCategory.Error, "The_specified_path_does_not_exist_Colon_0_5058", "The specified path does not exist: '{0}'."),
    Invalid_value_for_reactNamespace_0_is_not_a_valid_identifier: t(5059, e.DiagnosticCategory.Error, "Invalid_value_for_reactNamespace_0_is_not_a_valid_identifier_5059", "Invalid value for '--reactNamespace'. '{0}' is not a valid identifier."),
    Option_paths_cannot_be_used_without_specifying_baseUrl_option: t(5060, e.DiagnosticCategory.Error, "Option_paths_cannot_be_used_without_specifying_baseUrl_option_5060", "Option 'paths' cannot be used without specifying '--baseUrl' option."),
    Pattern_0_can_have_at_most_one_Asterisk_character: t(5061, e.DiagnosticCategory.Error, "Pattern_0_can_have_at_most_one_Asterisk_character_5061", "Pattern '{0}' can have at most one '*' character."),
    Substitution_0_in_pattern_1_in_can_have_at_most_one_Asterisk_character: t(5062, e.DiagnosticCategory.Error, "Substitution_0_in_pattern_1_in_can_have_at_most_one_Asterisk_character_5062", "Substitution '{0}' in pattern '{1}' in can have at most one '*' character."),
    Substitutions_for_pattern_0_should_be_an_array: t(5063, e.DiagnosticCategory.Error, "Substitutions_for_pattern_0_should_be_an_array_5063", "Substitutions for pattern '{0}' should be an array."),
    Substitution_0_for_pattern_1_has_incorrect_type_expected_string_got_2: t(5064, e.DiagnosticCategory.Error, "Substitution_0_for_pattern_1_has_incorrect_type_expected_string_got_2_5064", "Substitution '{0}' for pattern '{1}' has incorrect type, expected 'string', got '{2}'."),
    File_specification_cannot_contain_a_parent_directory_that_appears_after_a_recursive_directory_wildcard_Asterisk_Asterisk_Colon_0: t(5065, e.DiagnosticCategory.Error, "File_specification_cannot_contain_a_parent_directory_that_appears_after_a_recursive_directory_wildca_5065", "File specification cannot contain a parent directory ('..') that appears after a recursive directory wildcard ('**'): '{0}'."),
    Substitutions_for_pattern_0_shouldn_t_be_an_empty_array: t(5066, e.DiagnosticCategory.Error, "Substitutions_for_pattern_0_shouldn_t_be_an_empty_array_5066", "Substitutions for pattern '{0}' shouldn't be an empty array."),
    Invalid_value_for_jsxFactory_0_is_not_a_valid_identifier_or_qualified_name: t(5067, e.DiagnosticCategory.Error, "Invalid_value_for_jsxFactory_0_is_not_a_valid_identifier_or_qualified_name_5067", "Invalid value for 'jsxFactory'. '{0}' is not a valid identifier or qualified-name."),
    Adding_a_tsconfig_json_file_will_help_organize_projects_that_contain_both_TypeScript_and_JavaScript_files_Learn_more_at_https_Colon_Slash_Slashaka_ms_Slashtsconfig: t(5068, e.DiagnosticCategory.Error, "Adding_a_tsconfig_json_file_will_help_organize_projects_that_contain_both_TypeScript_and_JavaScript__5068", "Adding a tsconfig.json file will help organize projects that contain both TypeScript and JavaScript files. Learn more at https://aka.ms/tsconfig."),
    Option_0_cannot_be_specified_without_specifying_option_1_or_option_2: t(5069, e.DiagnosticCategory.Error, "Option_0_cannot_be_specified_without_specifying_option_1_or_option_2_5069", "Option '{0}' cannot be specified without specifying option '{1}' or option '{2}'."),
    Option_resolveJsonModule_cannot_be_specified_without_node_module_resolution_strategy: t(5070, e.DiagnosticCategory.Error, "Option_resolveJsonModule_cannot_be_specified_without_node_module_resolution_strategy_5070", "Option '--resolveJsonModule' cannot be specified without 'node' module resolution strategy."),
    Option_resolveJsonModule_can_only_be_specified_when_module_code_generation_is_commonjs: t(5071, e.DiagnosticCategory.Error, "Option_resolveJsonModule_can_only_be_specified_when_module_code_generation_is_commonjs_5071", "Option '--resolveJsonModule' can only be specified when module code generation is 'commonjs'."),
    Generates_a_sourcemap_for_each_corresponding_d_ts_file: t(6e3, e.DiagnosticCategory.Message, "Generates_a_sourcemap_for_each_corresponding_d_ts_file_6000", "Generates a sourcemap for each corresponding '.d.ts' file."),
    Concatenate_and_emit_output_to_single_file: t(6001, e.DiagnosticCategory.Message, "Concatenate_and_emit_output_to_single_file_6001", "Concatenate and emit output to single file."),
    Generates_corresponding_d_ts_file: t(6002, e.DiagnosticCategory.Message, "Generates_corresponding_d_ts_file_6002", "Generates corresponding '.d.ts' file."),
    Specify_the_location_where_debugger_should_locate_map_files_instead_of_generated_locations: t(6003, e.DiagnosticCategory.Message, "Specify_the_location_where_debugger_should_locate_map_files_instead_of_generated_locations_6003", "Specify the location where debugger should locate map files instead of generated locations."),
    Specify_the_location_where_debugger_should_locate_TypeScript_files_instead_of_source_locations: t(6004, e.DiagnosticCategory.Message, "Specify_the_location_where_debugger_should_locate_TypeScript_files_instead_of_source_locations_6004", "Specify the location where debugger should locate TypeScript files instead of source locations."),
    Watch_input_files: t(6005, e.DiagnosticCategory.Message, "Watch_input_files_6005", "Watch input files."),
    Redirect_output_structure_to_the_directory: t(6006, e.DiagnosticCategory.Message, "Redirect_output_structure_to_the_directory_6006", "Redirect output structure to the directory."),
    Do_not_erase_const_enum_declarations_in_generated_code: t(6007, e.DiagnosticCategory.Message, "Do_not_erase_const_enum_declarations_in_generated_code_6007", "Do not erase const enum declarations in generated code."),
    Do_not_emit_outputs_if_any_errors_were_reported: t(6008, e.DiagnosticCategory.Message, "Do_not_emit_outputs_if_any_errors_were_reported_6008", "Do not emit outputs if any errors were reported."),
    Do_not_emit_comments_to_output: t(6009, e.DiagnosticCategory.Message, "Do_not_emit_comments_to_output_6009", "Do not emit comments to output."),
    Do_not_emit_outputs: t(6010, e.DiagnosticCategory.Message, "Do_not_emit_outputs_6010", "Do not emit outputs."),
    Allow_default_imports_from_modules_with_no_default_export_This_does_not_affect_code_emit_just_typechecking: t(6011, e.DiagnosticCategory.Message, "Allow_default_imports_from_modules_with_no_default_export_This_does_not_affect_code_emit_just_typech_6011", "Allow default imports from modules with no default export. This does not affect code emit, just typechecking."),
    Skip_type_checking_of_declaration_files: t(6012, e.DiagnosticCategory.Message, "Skip_type_checking_of_declaration_files_6012", "Skip type checking of declaration files."),
    Do_not_resolve_the_real_path_of_symlinks: t(6013, e.DiagnosticCategory.Message, "Do_not_resolve_the_real_path_of_symlinks_6013", "Do not resolve the real path of symlinks."),
    Only_emit_d_ts_declaration_files: t(6014, e.DiagnosticCategory.Message, "Only_emit_d_ts_declaration_files_6014", "Only emit '.d.ts' declaration files."),
    Specify_ECMAScript_target_version_Colon_ES3_default_ES5_ES2015_ES2016_ES2017_ES2018_or_ESNEXT: t(6015, e.DiagnosticCategory.Message, "Specify_ECMAScript_target_version_Colon_ES3_default_ES5_ES2015_ES2016_ES2017_ES2018_or_ESNEXT_6015", "Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017','ES2018' or 'ESNEXT'."),
    Specify_module_code_generation_Colon_none_commonjs_amd_system_umd_es2015_or_ESNext: t(6016, e.DiagnosticCategory.Message, "Specify_module_code_generation_Colon_none_commonjs_amd_system_umd_es2015_or_ESNext_6016", "Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'."),
    Print_this_message: t(6017, e.DiagnosticCategory.Message, "Print_this_message_6017", "Print this message."),
    Print_the_compiler_s_version: t(6019, e.DiagnosticCategory.Message, "Print_the_compiler_s_version_6019", "Print the compiler's version."),
    Compile_the_project_given_the_path_to_its_configuration_file_or_to_a_folder_with_a_tsconfig_json: t(6020, e.DiagnosticCategory.Message, "Compile_the_project_given_the_path_to_its_configuration_file_or_to_a_folder_with_a_tsconfig_json_6020", "Compile the project given the path to its configuration file, or to a folder with a 'tsconfig.json'."),
    Syntax_Colon_0: t(6023, e.DiagnosticCategory.Message, "Syntax_Colon_0_6023", "Syntax: {0}"),
    options: t(6024, e.DiagnosticCategory.Message, "options_6024", "options"),
    file: t(6025, e.DiagnosticCategory.Message, "file_6025", "file"),
    Examples_Colon_0: t(6026, e.DiagnosticCategory.Message, "Examples_Colon_0_6026", "Examples: {0}"),
    Options_Colon: t(6027, e.DiagnosticCategory.Message, "Options_Colon_6027", "Options:"),
    Version_0: t(6029, e.DiagnosticCategory.Message, "Version_0_6029", "Version {0}"),
    Insert_command_line_options_and_files_from_a_file: t(6030, e.DiagnosticCategory.Message, "Insert_command_line_options_and_files_from_a_file_6030", "Insert command line options and files from a file."),
    Starting_compilation_in_watch_mode: t(6031, e.DiagnosticCategory.Message, "Starting_compilation_in_watch_mode_6031", "Starting compilation in watch mode..."),
    File_change_detected_Starting_incremental_compilation: t(6032, e.DiagnosticCategory.Message, "File_change_detected_Starting_incremental_compilation_6032", "File change detected. Starting incremental compilation..."),
    KIND: t(6034, e.DiagnosticCategory.Message, "KIND_6034", "KIND"),
    FILE: t(6035, e.DiagnosticCategory.Message, "FILE_6035", "FILE"),
    VERSION: t(6036, e.DiagnosticCategory.Message, "VERSION_6036", "VERSION"),
    LOCATION: t(6037, e.DiagnosticCategory.Message, "LOCATION_6037", "LOCATION"),
    DIRECTORY: t(6038, e.DiagnosticCategory.Message, "DIRECTORY_6038", "DIRECTORY"),
    STRATEGY: t(6039, e.DiagnosticCategory.Message, "STRATEGY_6039", "STRATEGY"),
    FILE_OR_DIRECTORY: t(6040, e.DiagnosticCategory.Message, "FILE_OR_DIRECTORY_6040", "FILE OR DIRECTORY"),
    Generates_corresponding_map_file: t(6043, e.DiagnosticCategory.Message, "Generates_corresponding_map_file_6043", "Generates corresponding '.map' file."),
    Compiler_option_0_expects_an_argument: t(6044, e.DiagnosticCategory.Error, "Compiler_option_0_expects_an_argument_6044", "Compiler option '{0}' expects an argument."),
    Unterminated_quoted_string_in_response_file_0: t(6045, e.DiagnosticCategory.Error, "Unterminated_quoted_string_in_response_file_0_6045", "Unterminated quoted string in response file '{0}'."),
    Argument_for_0_option_must_be_Colon_1: t(6046, e.DiagnosticCategory.Error, "Argument_for_0_option_must_be_Colon_1_6046", "Argument for '{0}' option must be: {1}."),
    Locale_must_be_of_the_form_language_or_language_territory_For_example_0_or_1: t(6048, e.DiagnosticCategory.Error, "Locale_must_be_of_the_form_language_or_language_territory_For_example_0_or_1_6048", "Locale must be of the form <language> or <language>-<territory>. For example '{0}' or '{1}'."),
    Unsupported_locale_0: t(6049, e.DiagnosticCategory.Error, "Unsupported_locale_0_6049", "Unsupported locale '{0}'."),
    Unable_to_open_file_0: t(6050, e.DiagnosticCategory.Error, "Unable_to_open_file_0_6050", "Unable to open file '{0}'."),
    Corrupted_locale_file_0: t(6051, e.DiagnosticCategory.Error, "Corrupted_locale_file_0_6051", "Corrupted locale file {0}."),
    Raise_error_on_expressions_and_declarations_with_an_implied_any_type: t(6052, e.DiagnosticCategory.Message, "Raise_error_on_expressions_and_declarations_with_an_implied_any_type_6052", "Raise error on expressions and declarations with an implied 'any' type."),
    File_0_not_found: t(6053, e.DiagnosticCategory.Error, "File_0_not_found_6053", "File '{0}' not found."),
    File_0_has_unsupported_extension_The_only_supported_extensions_are_1: t(6054, e.DiagnosticCategory.Error, "File_0_has_unsupported_extension_The_only_supported_extensions_are_1_6054", "File '{0}' has unsupported extension. The only supported extensions are {1}."),
    Suppress_noImplicitAny_errors_for_indexing_objects_lacking_index_signatures: t(6055, e.DiagnosticCategory.Message, "Suppress_noImplicitAny_errors_for_indexing_objects_lacking_index_signatures_6055", "Suppress noImplicitAny errors for indexing objects lacking index signatures."),
    Do_not_emit_declarations_for_code_that_has_an_internal_annotation: t(6056, e.DiagnosticCategory.Message, "Do_not_emit_declarations_for_code_that_has_an_internal_annotation_6056", "Do not emit declarations for code that has an '@internal' annotation."),
    Specify_the_root_directory_of_input_files_Use_to_control_the_output_directory_structure_with_outDir: t(6058, e.DiagnosticCategory.Message, "Specify_the_root_directory_of_input_files_Use_to_control_the_output_directory_structure_with_outDir_6058", "Specify the root directory of input files. Use to control the output directory structure with --outDir."),
    File_0_is_not_under_rootDir_1_rootDir_is_expected_to_contain_all_source_files: t(6059, e.DiagnosticCategory.Error, "File_0_is_not_under_rootDir_1_rootDir_is_expected_to_contain_all_source_files_6059", "File '{0}' is not under 'rootDir' '{1}'. 'rootDir' is expected to contain all source files."),
    Specify_the_end_of_line_sequence_to_be_used_when_emitting_files_Colon_CRLF_dos_or_LF_unix: t(6060, e.DiagnosticCategory.Message, "Specify_the_end_of_line_sequence_to_be_used_when_emitting_files_Colon_CRLF_dos_or_LF_unix_6060", "Specify the end of line sequence to be used when emitting files: 'CRLF' (dos) or 'LF' (unix)."),
    NEWLINE: t(6061, e.DiagnosticCategory.Message, "NEWLINE_6061", "NEWLINE"),
    Option_0_can_only_be_specified_in_tsconfig_json_file: t(6064, e.DiagnosticCategory.Error, "Option_0_can_only_be_specified_in_tsconfig_json_file_6064", "Option '{0}' can only be specified in 'tsconfig.json' file."),
    Enables_experimental_support_for_ES7_decorators: t(6065, e.DiagnosticCategory.Message, "Enables_experimental_support_for_ES7_decorators_6065", "Enables experimental support for ES7 decorators."),
    Enables_experimental_support_for_emitting_type_metadata_for_decorators: t(6066, e.DiagnosticCategory.Message, "Enables_experimental_support_for_emitting_type_metadata_for_decorators_6066", "Enables experimental support for emitting type metadata for decorators."),
    Enables_experimental_support_for_ES7_async_functions: t(6068, e.DiagnosticCategory.Message, "Enables_experimental_support_for_ES7_async_functions_6068", "Enables experimental support for ES7 async functions."),
    Specify_module_resolution_strategy_Colon_node_Node_js_or_classic_TypeScript_pre_1_6: t(6069, e.DiagnosticCategory.Message, "Specify_module_resolution_strategy_Colon_node_Node_js_or_classic_TypeScript_pre_1_6_6069", "Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6)."),
    Initializes_a_TypeScript_project_and_creates_a_tsconfig_json_file: t(6070, e.DiagnosticCategory.Message, "Initializes_a_TypeScript_project_and_creates_a_tsconfig_json_file_6070", "Initializes a TypeScript project and creates a tsconfig.json file."),
    Successfully_created_a_tsconfig_json_file: t(6071, e.DiagnosticCategory.Message, "Successfully_created_a_tsconfig_json_file_6071", "Successfully created a tsconfig.json file."),
    Suppress_excess_property_checks_for_object_literals: t(6072, e.DiagnosticCategory.Message, "Suppress_excess_property_checks_for_object_literals_6072", "Suppress excess property checks for object literals."),
    Stylize_errors_and_messages_using_color_and_context_experimental: t(6073, e.DiagnosticCategory.Message, "Stylize_errors_and_messages_using_color_and_context_experimental_6073", "Stylize errors and messages using color and context (experimental)."),
    Do_not_report_errors_on_unused_labels: t(6074, e.DiagnosticCategory.Message, "Do_not_report_errors_on_unused_labels_6074", "Do not report errors on unused labels."),
    Report_error_when_not_all_code_paths_in_function_return_a_value: t(6075, e.DiagnosticCategory.Message, "Report_error_when_not_all_code_paths_in_function_return_a_value_6075", "Report error when not all code paths in function return a value."),
    Report_errors_for_fallthrough_cases_in_switch_statement: t(6076, e.DiagnosticCategory.Message, "Report_errors_for_fallthrough_cases_in_switch_statement_6076", "Report errors for fallthrough cases in switch statement."),
    Do_not_report_errors_on_unreachable_code: t(6077, e.DiagnosticCategory.Message, "Do_not_report_errors_on_unreachable_code_6077", "Do not report errors on unreachable code."),
    Disallow_inconsistently_cased_references_to_the_same_file: t(6078, e.DiagnosticCategory.Message, "Disallow_inconsistently_cased_references_to_the_same_file_6078", "Disallow inconsistently-cased references to the same file."),
    Specify_library_files_to_be_included_in_the_compilation: t(6079, e.DiagnosticCategory.Message, "Specify_library_files_to_be_included_in_the_compilation_6079", "Specify library files to be included in the compilation."),
    Specify_JSX_code_generation_Colon_preserve_react_native_or_react: t(6080, e.DiagnosticCategory.Message, "Specify_JSX_code_generation_Colon_preserve_react_native_or_react_6080", "Specify JSX code generation: 'preserve', 'react-native', or 'react'."),
    File_0_has_an_unsupported_extension_so_skipping_it: t(6081, e.DiagnosticCategory.Message, "File_0_has_an_unsupported_extension_so_skipping_it_6081", "File '{0}' has an unsupported extension, so skipping it."),
    Only_amd_and_system_modules_are_supported_alongside_0: t(6082, e.DiagnosticCategory.Error, "Only_amd_and_system_modules_are_supported_alongside_0_6082", "Only 'amd' and 'system' modules are supported alongside --{0}."),
    Base_directory_to_resolve_non_absolute_module_names: t(6083, e.DiagnosticCategory.Message, "Base_directory_to_resolve_non_absolute_module_names_6083", "Base directory to resolve non-absolute module names."),
    Deprecated_Use_jsxFactory_instead_Specify_the_object_invoked_for_createElement_when_targeting_react_JSX_emit: t(6084, e.DiagnosticCategory.Message, "Deprecated_Use_jsxFactory_instead_Specify_the_object_invoked_for_createElement_when_targeting_react__6084", "[Deprecated] Use '--jsxFactory' instead. Specify the object invoked for createElement when targeting 'react' JSX emit"),
    Enable_tracing_of_the_name_resolution_process: t(6085, e.DiagnosticCategory.Message, "Enable_tracing_of_the_name_resolution_process_6085", "Enable tracing of the name resolution process."),
    Resolving_module_0_from_1: t(6086, e.DiagnosticCategory.Message, "Resolving_module_0_from_1_6086", "======== Resolving module '{0}' from '{1}'. ========"),
    Explicitly_specified_module_resolution_kind_Colon_0: t(6087, e.DiagnosticCategory.Message, "Explicitly_specified_module_resolution_kind_Colon_0_6087", "Explicitly specified module resolution kind: '{0}'."),
    Module_resolution_kind_is_not_specified_using_0: t(6088, e.DiagnosticCategory.Message, "Module_resolution_kind_is_not_specified_using_0_6088", "Module resolution kind is not specified, using '{0}'."),
    Module_name_0_was_successfully_resolved_to_1: t(6089, e.DiagnosticCategory.Message, "Module_name_0_was_successfully_resolved_to_1_6089", "======== Module name '{0}' was successfully resolved to '{1}'. ========"),
    Module_name_0_was_not_resolved: t(6090, e.DiagnosticCategory.Message, "Module_name_0_was_not_resolved_6090", "======== Module name '{0}' was not resolved. ========"),
    paths_option_is_specified_looking_for_a_pattern_to_match_module_name_0: t(6091, e.DiagnosticCategory.Message, "paths_option_is_specified_looking_for_a_pattern_to_match_module_name_0_6091", "'paths' option is specified, looking for a pattern to match module name '{0}'."),
    Module_name_0_matched_pattern_1: t(6092, e.DiagnosticCategory.Message, "Module_name_0_matched_pattern_1_6092", "Module name '{0}', matched pattern '{1}'."),
    Trying_substitution_0_candidate_module_location_Colon_1: t(6093, e.DiagnosticCategory.Message, "Trying_substitution_0_candidate_module_location_Colon_1_6093", "Trying substitution '{0}', candidate module location: '{1}'."),
    Resolving_module_name_0_relative_to_base_url_1_2: t(6094, e.DiagnosticCategory.Message, "Resolving_module_name_0_relative_to_base_url_1_2_6094", "Resolving module name '{0}' relative to base url '{1}' - '{2}'."),
    Loading_module_as_file_Slash_folder_candidate_module_location_0_target_file_type_1: t(6095, e.DiagnosticCategory.Message, "Loading_module_as_file_Slash_folder_candidate_module_location_0_target_file_type_1_6095", "Loading module as file / folder, candidate module location '{0}', target file type '{1}'."),
    File_0_does_not_exist: t(6096, e.DiagnosticCategory.Message, "File_0_does_not_exist_6096", "File '{0}' does not exist."),
    File_0_exist_use_it_as_a_name_resolution_result: t(6097, e.DiagnosticCategory.Message, "File_0_exist_use_it_as_a_name_resolution_result_6097", "File '{0}' exist - use it as a name resolution result."),
    Loading_module_0_from_node_modules_folder_target_file_type_1: t(6098, e.DiagnosticCategory.Message, "Loading_module_0_from_node_modules_folder_target_file_type_1_6098", "Loading module '{0}' from 'node_modules' folder, target file type '{1}'."),
    Found_package_json_at_0: t(6099, e.DiagnosticCategory.Message, "Found_package_json_at_0_6099", "Found 'package.json' at '{0}'."),
    package_json_does_not_have_a_0_field: t(6100, e.DiagnosticCategory.Message, "package_json_does_not_have_a_0_field_6100", "'package.json' does not have a '{0}' field."),
    package_json_has_0_field_1_that_references_2: t(6101, e.DiagnosticCategory.Message, "package_json_has_0_field_1_that_references_2_6101", "'package.json' has '{0}' field '{1}' that references '{2}'."),
    Allow_javascript_files_to_be_compiled: t(6102, e.DiagnosticCategory.Message, "Allow_javascript_files_to_be_compiled_6102", "Allow javascript files to be compiled."),
    Option_0_should_have_array_of_strings_as_a_value: t(6103, e.DiagnosticCategory.Error, "Option_0_should_have_array_of_strings_as_a_value_6103", "Option '{0}' should have array of strings as a value."),
    Checking_if_0_is_the_longest_matching_prefix_for_1_2: t(6104, e.DiagnosticCategory.Message, "Checking_if_0_is_the_longest_matching_prefix_for_1_2_6104", "Checking if '{0}' is the longest matching prefix for '{1}' - '{2}'."),
    Expected_type_of_0_field_in_package_json_to_be_string_got_1: t(6105, e.DiagnosticCategory.Message, "Expected_type_of_0_field_in_package_json_to_be_string_got_1_6105", "Expected type of '{0}' field in 'package.json' to be 'string', got '{1}'."),
    baseUrl_option_is_set_to_0_using_this_value_to_resolve_non_relative_module_name_1: t(6106, e.DiagnosticCategory.Message, "baseUrl_option_is_set_to_0_using_this_value_to_resolve_non_relative_module_name_1_6106", "'baseUrl' option is set to '{0}', using this value to resolve non-relative module name '{1}'."),
    rootDirs_option_is_set_using_it_to_resolve_relative_module_name_0: t(6107, e.DiagnosticCategory.Message, "rootDirs_option_is_set_using_it_to_resolve_relative_module_name_0_6107", "'rootDirs' option is set, using it to resolve relative module name '{0}'."),
    Longest_matching_prefix_for_0_is_1: t(6108, e.DiagnosticCategory.Message, "Longest_matching_prefix_for_0_is_1_6108", "Longest matching prefix for '{0}' is '{1}'."),
    Loading_0_from_the_root_dir_1_candidate_location_2: t(6109, e.DiagnosticCategory.Message, "Loading_0_from_the_root_dir_1_candidate_location_2_6109", "Loading '{0}' from the root dir '{1}', candidate location '{2}'."),
    Trying_other_entries_in_rootDirs: t(6110, e.DiagnosticCategory.Message, "Trying_other_entries_in_rootDirs_6110", "Trying other entries in 'rootDirs'."),
    Module_resolution_using_rootDirs_has_failed: t(6111, e.DiagnosticCategory.Message, "Module_resolution_using_rootDirs_has_failed_6111", "Module resolution using 'rootDirs' has failed."),
    Do_not_emit_use_strict_directives_in_module_output: t(6112, e.DiagnosticCategory.Message, "Do_not_emit_use_strict_directives_in_module_output_6112", "Do not emit 'use strict' directives in module output."),
    Enable_strict_null_checks: t(6113, e.DiagnosticCategory.Message, "Enable_strict_null_checks_6113", "Enable strict null checks."),
    Unknown_option_excludes_Did_you_mean_exclude: t(6114, e.DiagnosticCategory.Error, "Unknown_option_excludes_Did_you_mean_exclude_6114", "Unknown option 'excludes'. Did you mean 'exclude'?"),
    Raise_error_on_this_expressions_with_an_implied_any_type: t(6115, e.DiagnosticCategory.Message, "Raise_error_on_this_expressions_with_an_implied_any_type_6115", "Raise error on 'this' expressions with an implied 'any' type."),
    Resolving_type_reference_directive_0_containing_file_1_root_directory_2: t(6116, e.DiagnosticCategory.Message, "Resolving_type_reference_directive_0_containing_file_1_root_directory_2_6116", "======== Resolving type reference directive '{0}', containing file '{1}', root directory '{2}'. ========"),
    Resolving_using_primary_search_paths: t(6117, e.DiagnosticCategory.Message, "Resolving_using_primary_search_paths_6117", "Resolving using primary search paths..."),
    Resolving_from_node_modules_folder: t(6118, e.DiagnosticCategory.Message, "Resolving_from_node_modules_folder_6118", "Resolving from node_modules folder..."),
    Type_reference_directive_0_was_successfully_resolved_to_1_primary_Colon_2: t(6119, e.DiagnosticCategory.Message, "Type_reference_directive_0_was_successfully_resolved_to_1_primary_Colon_2_6119", "======== Type reference directive '{0}' was successfully resolved to '{1}', primary: {2}. ========"),
    Type_reference_directive_0_was_not_resolved: t(6120, e.DiagnosticCategory.Message, "Type_reference_directive_0_was_not_resolved_6120", "======== Type reference directive '{0}' was not resolved. ========"),
    Resolving_with_primary_search_path_0: t(6121, e.DiagnosticCategory.Message, "Resolving_with_primary_search_path_0_6121", "Resolving with primary search path '{0}'."),
    Root_directory_cannot_be_determined_skipping_primary_search_paths: t(6122, e.DiagnosticCategory.Message, "Root_directory_cannot_be_determined_skipping_primary_search_paths_6122", "Root directory cannot be determined, skipping primary search paths."),
    Resolving_type_reference_directive_0_containing_file_1_root_directory_not_set: t(6123, e.DiagnosticCategory.Message, "Resolving_type_reference_directive_0_containing_file_1_root_directory_not_set_6123", "======== Resolving type reference directive '{0}', containing file '{1}', root directory not set. ========"),
    Type_declaration_files_to_be_included_in_compilation: t(6124, e.DiagnosticCategory.Message, "Type_declaration_files_to_be_included_in_compilation_6124", "Type declaration files to be included in compilation."),
    Looking_up_in_node_modules_folder_initial_location_0: t(6125, e.DiagnosticCategory.Message, "Looking_up_in_node_modules_folder_initial_location_0_6125", "Looking up in 'node_modules' folder, initial location '{0}'."),
    Containing_file_is_not_specified_and_root_directory_cannot_be_determined_skipping_lookup_in_node_modules_folder: t(6126, e.DiagnosticCategory.Message, "Containing_file_is_not_specified_and_root_directory_cannot_be_determined_skipping_lookup_in_node_mod_6126", "Containing file is not specified and root directory cannot be determined, skipping lookup in 'node_modules' folder."),
    Resolving_type_reference_directive_0_containing_file_not_set_root_directory_1: t(6127, e.DiagnosticCategory.Message, "Resolving_type_reference_directive_0_containing_file_not_set_root_directory_1_6127", "======== Resolving type reference directive '{0}', containing file not set, root directory '{1}'. ========"),
    Resolving_type_reference_directive_0_containing_file_not_set_root_directory_not_set: t(6128, e.DiagnosticCategory.Message, "Resolving_type_reference_directive_0_containing_file_not_set_root_directory_not_set_6128", "======== Resolving type reference directive '{0}', containing file not set, root directory not set. ========"),
    Resolving_real_path_for_0_result_1: t(6130, e.DiagnosticCategory.Message, "Resolving_real_path_for_0_result_1_6130", "Resolving real path for '{0}', result '{1}'."),
    Cannot_compile_modules_using_option_0_unless_the_module_flag_is_amd_or_system: t(6131, e.DiagnosticCategory.Error, "Cannot_compile_modules_using_option_0_unless_the_module_flag_is_amd_or_system_6131", "Cannot compile modules using option '{0}' unless the '--module' flag is 'amd' or 'system'."),
    File_name_0_has_a_1_extension_stripping_it: t(6132, e.DiagnosticCategory.Message, "File_name_0_has_a_1_extension_stripping_it_6132", "File name '{0}' has a '{1}' extension - stripping it."),
    _0_is_declared_but_its_value_is_never_read: t(6133, e.DiagnosticCategory.Error, "_0_is_declared_but_its_value_is_never_read_6133", "'{0}' is declared but its value is never read.", true),
    Report_errors_on_unused_locals: t(6134, e.DiagnosticCategory.Message, "Report_errors_on_unused_locals_6134", "Report errors on unused locals."),
    Report_errors_on_unused_parameters: t(6135, e.DiagnosticCategory.Message, "Report_errors_on_unused_parameters_6135", "Report errors on unused parameters."),
    The_maximum_dependency_depth_to_search_under_node_modules_and_load_JavaScript_files: t(6136, e.DiagnosticCategory.Message, "The_maximum_dependency_depth_to_search_under_node_modules_and_load_JavaScript_files_6136", "The maximum dependency depth to search under node_modules and load JavaScript files."),
    Cannot_import_type_declaration_files_Consider_importing_0_instead_of_1: t(6137, e.DiagnosticCategory.Error, "Cannot_import_type_declaration_files_Consider_importing_0_instead_of_1_6137", "Cannot import type declaration files. Consider importing '{0}' instead of '{1}'."),
    Property_0_is_declared_but_its_value_is_never_read: t(6138, e.DiagnosticCategory.Error, "Property_0_is_declared_but_its_value_is_never_read_6138", "Property '{0}' is declared but its value is never read.", true),
    Import_emit_helpers_from_tslib: t(6139, e.DiagnosticCategory.Message, "Import_emit_helpers_from_tslib_6139", "Import emit helpers from 'tslib'."),
    Auto_discovery_for_typings_is_enabled_in_project_0_Running_extra_resolution_pass_for_module_1_using_cache_location_2: t(6140, e.DiagnosticCategory.Error, "Auto_discovery_for_typings_is_enabled_in_project_0_Running_extra_resolution_pass_for_module_1_using__6140", "Auto discovery for typings is enabled in project '{0}'. Running extra resolution pass for module '{1}' using cache location '{2}'."),
    Parse_in_strict_mode_and_emit_use_strict_for_each_source_file: t(6141, e.DiagnosticCategory.Message, "Parse_in_strict_mode_and_emit_use_strict_for_each_source_file_6141", 'Parse in strict mode and emit "use strict" for each source file.'),
    Module_0_was_resolved_to_1_but_jsx_is_not_set: t(6142, e.DiagnosticCategory.Error, "Module_0_was_resolved_to_1_but_jsx_is_not_set_6142", "Module '{0}' was resolved to '{1}', but '--jsx' is not set."),
    Module_0_was_resolved_as_locally_declared_ambient_module_in_file_1: t(6144, e.DiagnosticCategory.Message, "Module_0_was_resolved_as_locally_declared_ambient_module_in_file_1_6144", "Module '{0}' was resolved as locally declared ambient module in file '{1}'."),
    Module_0_was_resolved_as_ambient_module_declared_in_1_since_this_file_was_not_modified: t(6145, e.DiagnosticCategory.Message, "Module_0_was_resolved_as_ambient_module_declared_in_1_since_this_file_was_not_modified_6145", "Module '{0}' was resolved as ambient module declared in '{1}' since this file was not modified."),
    Specify_the_JSX_factory_function_to_use_when_targeting_react_JSX_emit_e_g_React_createElement_or_h: t(6146, e.DiagnosticCategory.Message, "Specify_the_JSX_factory_function_to_use_when_targeting_react_JSX_emit_e_g_React_createElement_or_h_6146", "Specify the JSX factory function to use when targeting 'react' JSX emit, e.g. 'React.createElement' or 'h'."),
    Resolution_for_module_0_was_found_in_cache_from_location_1: t(6147, e.DiagnosticCategory.Message, "Resolution_for_module_0_was_found_in_cache_from_location_1_6147", "Resolution for module '{0}' was found in cache from location '{1}'."),
    Directory_0_does_not_exist_skipping_all_lookups_in_it: t(6148, e.DiagnosticCategory.Message, "Directory_0_does_not_exist_skipping_all_lookups_in_it_6148", "Directory '{0}' does not exist, skipping all lookups in it."),
    Show_diagnostic_information: t(6149, e.DiagnosticCategory.Message, "Show_diagnostic_information_6149", "Show diagnostic information."),
    Show_verbose_diagnostic_information: t(6150, e.DiagnosticCategory.Message, "Show_verbose_diagnostic_information_6150", "Show verbose diagnostic information."),
    Emit_a_single_file_with_source_maps_instead_of_having_a_separate_file: t(6151, e.DiagnosticCategory.Message, "Emit_a_single_file_with_source_maps_instead_of_having_a_separate_file_6151", "Emit a single file with source maps instead of having a separate file."),
    Emit_the_source_alongside_the_sourcemaps_within_a_single_file_requires_inlineSourceMap_or_sourceMap_to_be_set: t(6152, e.DiagnosticCategory.Message, "Emit_the_source_alongside_the_sourcemaps_within_a_single_file_requires_inlineSourceMap_or_sourceMap__6152", "Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set."),
    Transpile_each_file_as_a_separate_module_similar_to_ts_transpileModule: t(6153, e.DiagnosticCategory.Message, "Transpile_each_file_as_a_separate_module_similar_to_ts_transpileModule_6153", "Transpile each file as a separate module (similar to 'ts.transpileModule')."),
    Print_names_of_generated_files_part_of_the_compilation: t(6154, e.DiagnosticCategory.Message, "Print_names_of_generated_files_part_of_the_compilation_6154", "Print names of generated files part of the compilation."),
    Print_names_of_files_part_of_the_compilation: t(6155, e.DiagnosticCategory.Message, "Print_names_of_files_part_of_the_compilation_6155", "Print names of files part of the compilation."),
    The_locale_used_when_displaying_messages_to_the_user_e_g_en_us: t(6156, e.DiagnosticCategory.Message, "The_locale_used_when_displaying_messages_to_the_user_e_g_en_us_6156", "The locale used when displaying messages to the user (e.g. 'en-us')"),
    Do_not_generate_custom_helper_functions_like_extends_in_compiled_output: t(6157, e.DiagnosticCategory.Message, "Do_not_generate_custom_helper_functions_like_extends_in_compiled_output_6157", "Do not generate custom helper functions like '__extends' in compiled output."),
    Do_not_include_the_default_library_file_lib_d_ts: t(6158, e.DiagnosticCategory.Message, "Do_not_include_the_default_library_file_lib_d_ts_6158", "Do not include the default library file (lib.d.ts)."),
    Do_not_add_triple_slash_references_or_imported_modules_to_the_list_of_compiled_files: t(6159, e.DiagnosticCategory.Message, "Do_not_add_triple_slash_references_or_imported_modules_to_the_list_of_compiled_files_6159", "Do not add triple-slash references or imported modules to the list of compiled files."),
    Deprecated_Use_skipLibCheck_instead_Skip_type_checking_of_default_library_declaration_files: t(6160, e.DiagnosticCategory.Message, "Deprecated_Use_skipLibCheck_instead_Skip_type_checking_of_default_library_declaration_files_6160", "[Deprecated] Use '--skipLibCheck' instead. Skip type checking of default library declaration files."),
    List_of_folders_to_include_type_definitions_from: t(6161, e.DiagnosticCategory.Message, "List_of_folders_to_include_type_definitions_from_6161", "List of folders to include type definitions from."),
    Disable_size_limitations_on_JavaScript_projects: t(6162, e.DiagnosticCategory.Message, "Disable_size_limitations_on_JavaScript_projects_6162", "Disable size limitations on JavaScript projects."),
    The_character_set_of_the_input_files: t(6163, e.DiagnosticCategory.Message, "The_character_set_of_the_input_files_6163", "The character set of the input files."),
    Emit_a_UTF_8_Byte_Order_Mark_BOM_in_the_beginning_of_output_files: t(6164, e.DiagnosticCategory.Message, "Emit_a_UTF_8_Byte_Order_Mark_BOM_in_the_beginning_of_output_files_6164", "Emit a UTF-8 Byte Order Mark (BOM) in the beginning of output files."),
    Do_not_truncate_error_messages: t(6165, e.DiagnosticCategory.Message, "Do_not_truncate_error_messages_6165", "Do not truncate error messages."),
    Output_directory_for_generated_declaration_files: t(6166, e.DiagnosticCategory.Message, "Output_directory_for_generated_declaration_files_6166", "Output directory for generated declaration files."),
    A_series_of_entries_which_re_map_imports_to_lookup_locations_relative_to_the_baseUrl: t(6167, e.DiagnosticCategory.Message, "A_series_of_entries_which_re_map_imports_to_lookup_locations_relative_to_the_baseUrl_6167", "A series of entries which re-map imports to lookup locations relative to the 'baseUrl'."),
    List_of_root_folders_whose_combined_content_represents_the_structure_of_the_project_at_runtime: t(6168, e.DiagnosticCategory.Message, "List_of_root_folders_whose_combined_content_represents_the_structure_of_the_project_at_runtime_6168", "List of root folders whose combined content represents the structure of the project at runtime."),
    Show_all_compiler_options: t(6169, e.DiagnosticCategory.Message, "Show_all_compiler_options_6169", "Show all compiler options."),
    Deprecated_Use_outFile_instead_Concatenate_and_emit_output_to_single_file: t(6170, e.DiagnosticCategory.Message, "Deprecated_Use_outFile_instead_Concatenate_and_emit_output_to_single_file_6170", "[Deprecated] Use '--outFile' instead. Concatenate and emit output to single file"),
    Command_line_Options: t(6171, e.DiagnosticCategory.Message, "Command_line_Options_6171", "Command-line Options"),
    Basic_Options: t(6172, e.DiagnosticCategory.Message, "Basic_Options_6172", "Basic Options"),
    Strict_Type_Checking_Options: t(6173, e.DiagnosticCategory.Message, "Strict_Type_Checking_Options_6173", "Strict Type-Checking Options"),
    Module_Resolution_Options: t(6174, e.DiagnosticCategory.Message, "Module_Resolution_Options_6174", "Module Resolution Options"),
    Source_Map_Options: t(6175, e.DiagnosticCategory.Message, "Source_Map_Options_6175", "Source Map Options"),
    Additional_Checks: t(6176, e.DiagnosticCategory.Message, "Additional_Checks_6176", "Additional Checks"),
    Experimental_Options: t(6177, e.DiagnosticCategory.Message, "Experimental_Options_6177", "Experimental Options"),
    Advanced_Options: t(6178, e.DiagnosticCategory.Message, "Advanced_Options_6178", "Advanced Options"),
    Provide_full_support_for_iterables_in_for_of_spread_and_destructuring_when_targeting_ES5_or_ES3: t(6179, e.DiagnosticCategory.Message, "Provide_full_support_for_iterables_in_for_of_spread_and_destructuring_when_targeting_ES5_or_ES3_6179", "Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'."),
    Enable_all_strict_type_checking_options: t(6180, e.DiagnosticCategory.Message, "Enable_all_strict_type_checking_options_6180", "Enable all strict type-checking options."),
    List_of_language_service_plugins: t(6181, e.DiagnosticCategory.Message, "List_of_language_service_plugins_6181", "List of language service plugins."),
    Scoped_package_detected_looking_in_0: t(6182, e.DiagnosticCategory.Message, "Scoped_package_detected_looking_in_0_6182", "Scoped package detected, looking in '{0}'"),
    Reusing_resolution_of_module_0_to_file_1_from_old_program: t(6183, e.DiagnosticCategory.Message, "Reusing_resolution_of_module_0_to_file_1_from_old_program_6183", "Reusing resolution of module '{0}' to file '{1}' from old program."),
    Reusing_module_resolutions_originating_in_0_since_resolutions_are_unchanged_from_old_program: t(6184, e.DiagnosticCategory.Message, "Reusing_module_resolutions_originating_in_0_since_resolutions_are_unchanged_from_old_program_6184", "Reusing module resolutions originating in '{0}' since resolutions are unchanged from old program."),
    Disable_strict_checking_of_generic_signatures_in_function_types: t(6185, e.DiagnosticCategory.Message, "Disable_strict_checking_of_generic_signatures_in_function_types_6185", "Disable strict checking of generic signatures in function types."),
    Enable_strict_checking_of_function_types: t(6186, e.DiagnosticCategory.Message, "Enable_strict_checking_of_function_types_6186", "Enable strict checking of function types."),
    Enable_strict_checking_of_property_initialization_in_classes: t(6187, e.DiagnosticCategory.Message, "Enable_strict_checking_of_property_initialization_in_classes_6187", "Enable strict checking of property initialization in classes."),
    Numeric_separators_are_not_allowed_here: t(6188, e.DiagnosticCategory.Error, "Numeric_separators_are_not_allowed_here_6188", "Numeric separators are not allowed here."),
    Multiple_consecutive_numeric_separators_are_not_permitted: t(6189, e.DiagnosticCategory.Error, "Multiple_consecutive_numeric_separators_are_not_permitted_6189", "Multiple consecutive numeric separators are not permitted."),
    Found_package_json_at_0_Package_ID_is_1: t(6190, e.DiagnosticCategory.Message, "Found_package_json_at_0_Package_ID_is_1_6190", "Found 'package.json' at '{0}'. Package ID is '{1}'."),
    Whether_to_keep_outdated_console_output_in_watch_mode_instead_of_clearing_the_screen: t(6191, e.DiagnosticCategory.Message, "Whether_to_keep_outdated_console_output_in_watch_mode_instead_of_clearing_the_screen_6191", "Whether to keep outdated console output in watch mode instead of clearing the screen."),
    All_imports_in_import_declaration_are_unused: t(6192, e.DiagnosticCategory.Error, "All_imports_in_import_declaration_are_unused_6192", "All imports in import declaration are unused.", true),
    Found_1_error_Watching_for_file_changes: t(6193, e.DiagnosticCategory.Message, "Found_1_error_Watching_for_file_changes_6193", "Found 1 error. Watching for file changes."),
    Found_0_errors_Watching_for_file_changes: t(6194, e.DiagnosticCategory.Message, "Found_0_errors_Watching_for_file_changes_6194", "Found {0} errors. Watching for file changes."),
    Resolve_keyof_to_string_valued_property_names_only_no_numbers_or_symbols: t(6195, e.DiagnosticCategory.Message, "Resolve_keyof_to_string_valued_property_names_only_no_numbers_or_symbols_6195", "Resolve 'keyof' to string valued property names only (no numbers or symbols)."),
    _0_is_declared_but_never_used: t(6196, e.DiagnosticCategory.Error, "_0_is_declared_but_never_used_6196", "'{0}' is declared but never used.", true),
    Include_modules_imported_with_json_extension: t(6197, e.DiagnosticCategory.Message, "Include_modules_imported_with_json_extension_6197", "Include modules imported with '.json' extension"),
    All_destructured_elements_are_unused: t(6198, e.DiagnosticCategory.Error, "All_destructured_elements_are_unused_6198", "All destructured elements are unused.", true),
    All_variables_are_unused: t(6199, e.DiagnosticCategory.Error, "All_variables_are_unused_6199", "All variables are unused.", true),
    Definitions_of_the_following_identifiers_conflict_with_those_in_another_file_Colon_0: t(6200, e.DiagnosticCategory.Error, "Definitions_of_the_following_identifiers_conflict_with_those_in_another_file_Colon_0_6200", "Definitions of the following identifiers conflict with those in another file: {0}"),
    Conflicts_are_in_this_file: t(6201, e.DiagnosticCategory.Message, "Conflicts_are_in_this_file_6201", "Conflicts are in this file."),
    _0_was_also_declared_here: t(6203, e.DiagnosticCategory.Message, "_0_was_also_declared_here_6203", "'{0}' was also declared here."),
    and_here: t(6204, e.DiagnosticCategory.Message, "and_here_6204", "and here."),
    Projects_to_reference: t(6300, e.DiagnosticCategory.Message, "Projects_to_reference_6300", "Projects to reference"),
    Enable_project_compilation: t(6302, e.DiagnosticCategory.Message, "Enable_project_compilation_6302", "Enable project compilation"),
    Project_references_may_not_form_a_circular_graph_Cycle_detected_Colon_0: t(6202, e.DiagnosticCategory.Error, "Project_references_may_not_form_a_circular_graph_Cycle_detected_Colon_0_6202", "Project references may not form a circular graph. Cycle detected: {0}"),
    Composite_projects_may_not_disable_declaration_emit: t(6304, e.DiagnosticCategory.Error, "Composite_projects_may_not_disable_declaration_emit_6304", "Composite projects may not disable declaration emit."),
    Output_file_0_has_not_been_built_from_source_file_1: t(6305, e.DiagnosticCategory.Error, "Output_file_0_has_not_been_built_from_source_file_1_6305", "Output file '{0}' has not been built from source file '{1}'."),
    Referenced_project_0_must_have_setting_composite_Colon_true: t(6306, e.DiagnosticCategory.Error, "Referenced_project_0_must_have_setting_composite_Colon_true_6306", "Referenced project '{0}' must have setting \"composite\": true."),
    File_0_is_not_in_project_file_list_Projects_must_list_all_files_or_use_an_include_pattern: t(6307, e.DiagnosticCategory.Error, "File_0_is_not_in_project_file_list_Projects_must_list_all_files_or_use_an_include_pattern_6307", "File '{0}' is not in project file list. Projects must list all files or use an 'include' pattern."),
    Cannot_prepend_project_0_because_it_does_not_have_outFile_set: t(6308, e.DiagnosticCategory.Error, "Cannot_prepend_project_0_because_it_does_not_have_outFile_set_6308", "Cannot prepend project '{0}' because it does not have 'outFile' set"),
    Output_file_0_from_project_1_does_not_exist: t(6309, e.DiagnosticCategory.Error, "Output_file_0_from_project_1_does_not_exist_6309", "Output file '{0}' from project '{1}' does not exist"),
    Project_0_is_out_of_date_because_oldest_output_1_is_older_than_newest_input_2: t(6350, e.DiagnosticCategory.Message, "Project_0_is_out_of_date_because_oldest_output_1_is_older_than_newest_input_2_6350", "Project '{0}' is out of date because oldest output '{1}' is older than newest input '{2}'"),
    Project_0_is_up_to_date_because_newest_input_1_is_older_than_oldest_output_2: t(6351, e.DiagnosticCategory.Message, "Project_0_is_up_to_date_because_newest_input_1_is_older_than_oldest_output_2_6351", "Project '{0}' is up to date because newest input '{1}' is older than oldest output '{2}'"),
    Project_0_is_out_of_date_because_output_file_1_does_not_exist: t(6352, e.DiagnosticCategory.Message, "Project_0_is_out_of_date_because_output_file_1_does_not_exist_6352", "Project '{0}' is out of date because output file '{1}' does not exist"),
    Project_0_is_out_of_date_because_its_dependency_1_is_out_of_date: t(6353, e.DiagnosticCategory.Message, "Project_0_is_out_of_date_because_its_dependency_1_is_out_of_date_6353", "Project '{0}' is out of date because its dependency '{1}' is out of date"),
    Project_0_is_up_to_date_with_d_ts_files_from_its_dependencies: t(6354, e.DiagnosticCategory.Message, "Project_0_is_up_to_date_with_d_ts_files_from_its_dependencies_6354", "Project '{0}' is up to date with .d.ts files from its dependencies"),
    Projects_in_this_build_Colon_0: t(6355, e.DiagnosticCategory.Message, "Projects_in_this_build_Colon_0_6355", "Projects in this build: {0}"),
    A_non_dry_build_would_delete_the_following_files_Colon_0: t(6356, e.DiagnosticCategory.Message, "A_non_dry_build_would_delete_the_following_files_Colon_0_6356", "A non-dry build would delete the following files: {0}"),
    A_non_dry_build_would_build_project_0: t(6357, e.DiagnosticCategory.Message, "A_non_dry_build_would_build_project_0_6357", "A non-dry build would build project '{0}'"),
    Building_project_0: t(6358, e.DiagnosticCategory.Message, "Building_project_0_6358", "Building project '{0}'..."),
    Updating_output_timestamps_of_project_0: t(6359, e.DiagnosticCategory.Message, "Updating_output_timestamps_of_project_0_6359", "Updating output timestamps of project '{0}'..."),
    delete_this_Project_0_is_up_to_date_because_it_was_previously_built: t(6360, e.DiagnosticCategory.Message, "delete_this_Project_0_is_up_to_date_because_it_was_previously_built_6360", "delete this - Project '{0}' is up to date because it was previously built"),
    Project_0_is_up_to_date: t(6361, e.DiagnosticCategory.Message, "Project_0_is_up_to_date_6361", "Project '{0}' is up to date"),
    Skipping_build_of_project_0_because_its_dependency_1_has_errors: t(6362, e.DiagnosticCategory.Message, "Skipping_build_of_project_0_because_its_dependency_1_has_errors_6362", "Skipping build of project '{0}' because its dependency '{1}' has errors"),
    Project_0_can_t_be_built_because_its_dependency_1_has_errors: t(6363, e.DiagnosticCategory.Message, "Project_0_can_t_be_built_because_its_dependency_1_has_errors_6363", "Project '{0}' can't be built because its dependency '{1}' has errors"),
    Build_one_or_more_projects_and_their_dependencies_if_out_of_date: t(6364, e.DiagnosticCategory.Message, "Build_one_or_more_projects_and_their_dependencies_if_out_of_date_6364", "Build one or more projects and their dependencies, if out of date"),
    Delete_the_outputs_of_all_projects: t(6365, e.DiagnosticCategory.Message, "Delete_the_outputs_of_all_projects_6365", "Delete the outputs of all projects"),
    Enable_verbose_logging: t(6366, e.DiagnosticCategory.Message, "Enable_verbose_logging_6366", "Enable verbose logging"),
    Show_what_would_be_built_or_deleted_if_specified_with_clean: t(6367, e.DiagnosticCategory.Message, "Show_what_would_be_built_or_deleted_if_specified_with_clean_6367", "Show what would be built (or deleted, if specified with '--clean')"),
    Build_all_projects_including_those_that_appear_to_be_up_to_date: t(6368, e.DiagnosticCategory.Message, "Build_all_projects_including_those_that_appear_to_be_up_to_date_6368", "Build all projects, including those that appear to be up to date"),
    Option_build_must_be_the_first_command_line_argument: t(6369, e.DiagnosticCategory.Error, "Option_build_must_be_the_first_command_line_argument_6369", "Option '--build' must be the first command line argument."),
    Options_0_and_1_cannot_be_combined: t(6370, e.DiagnosticCategory.Error, "Options_0_and_1_cannot_be_combined_6370", "Options '{0}' and '{1}' cannot be combined."),
    Skipping_clean_because_not_all_projects_could_be_located: t(6371, e.DiagnosticCategory.Error, "Skipping_clean_because_not_all_projects_could_be_located_6371", "Skipping clean because not all projects could be located"),
    The_expected_type_comes_from_property_0_which_is_declared_here_on_type_1: t(6500, e.DiagnosticCategory.Message, "The_expected_type_comes_from_property_0_which_is_declared_here_on_type_1_6500", "The expected type comes from property '{0}' which is declared here on type '{1}'"),
    The_expected_type_comes_from_this_index_signature: t(6501, e.DiagnosticCategory.Message, "The_expected_type_comes_from_this_index_signature_6501", "The expected type comes from this index signature."),
    Variable_0_implicitly_has_an_1_type: t(7005, e.DiagnosticCategory.Error, "Variable_0_implicitly_has_an_1_type_7005", "Variable '{0}' implicitly has an '{1}' type."),
    Parameter_0_implicitly_has_an_1_type: t(7006, e.DiagnosticCategory.Error, "Parameter_0_implicitly_has_an_1_type_7006", "Parameter '{0}' implicitly has an '{1}' type."),
    Member_0_implicitly_has_an_1_type: t(7008, e.DiagnosticCategory.Error, "Member_0_implicitly_has_an_1_type_7008", "Member '{0}' implicitly has an '{1}' type."),
    new_expression_whose_target_lacks_a_construct_signature_implicitly_has_an_any_type: t(7009, e.DiagnosticCategory.Error, "new_expression_whose_target_lacks_a_construct_signature_implicitly_has_an_any_type_7009", "'new' expression, whose target lacks a construct signature, implicitly has an 'any' type."),
    _0_which_lacks_return_type_annotation_implicitly_has_an_1_return_type: t(7010, e.DiagnosticCategory.Error, "_0_which_lacks_return_type_annotation_implicitly_has_an_1_return_type_7010", "'{0}', which lacks return-type annotation, implicitly has an '{1}' return type."),
    Function_expression_which_lacks_return_type_annotation_implicitly_has_an_0_return_type: t(7011, e.DiagnosticCategory.Error, "Function_expression_which_lacks_return_type_annotation_implicitly_has_an_0_return_type_7011", "Function expression, which lacks return-type annotation, implicitly has an '{0}' return type."),
    Construct_signature_which_lacks_return_type_annotation_implicitly_has_an_any_return_type: t(7013, e.DiagnosticCategory.Error, "Construct_signature_which_lacks_return_type_annotation_implicitly_has_an_any_return_type_7013", "Construct signature, which lacks return-type annotation, implicitly has an 'any' return type."),
    Element_implicitly_has_an_any_type_because_index_expression_is_not_of_type_number: t(7015, e.DiagnosticCategory.Error, "Element_implicitly_has_an_any_type_because_index_expression_is_not_of_type_number_7015", "Element implicitly has an 'any' type because index expression is not of type 'number'."),
    Could_not_find_a_declaration_file_for_module_0_1_implicitly_has_an_any_type: t(7016, e.DiagnosticCategory.Error, "Could_not_find_a_declaration_file_for_module_0_1_implicitly_has_an_any_type_7016", "Could not find a declaration file for module '{0}'. '{1}' implicitly has an 'any' type."),
    Element_implicitly_has_an_any_type_because_type_0_has_no_index_signature: t(7017, e.DiagnosticCategory.Error, "Element_implicitly_has_an_any_type_because_type_0_has_no_index_signature_7017", "Element implicitly has an 'any' type because type '{0}' has no index signature."),
    Object_literal_s_property_0_implicitly_has_an_1_type: t(7018, e.DiagnosticCategory.Error, "Object_literal_s_property_0_implicitly_has_an_1_type_7018", "Object literal's property '{0}' implicitly has an '{1}' type."),
    Rest_parameter_0_implicitly_has_an_any_type: t(7019, e.DiagnosticCategory.Error, "Rest_parameter_0_implicitly_has_an_any_type_7019", "Rest parameter '{0}' implicitly has an 'any[]' type."),
    Call_signature_which_lacks_return_type_annotation_implicitly_has_an_any_return_type: t(7020, e.DiagnosticCategory.Error, "Call_signature_which_lacks_return_type_annotation_implicitly_has_an_any_return_type_7020", "Call signature, which lacks return-type annotation, implicitly has an 'any' return type."),
    _0_implicitly_has_type_any_because_it_does_not_have_a_type_annotation_and_is_referenced_directly_or_indirectly_in_its_own_initializer: t(7022, e.DiagnosticCategory.Error, "_0_implicitly_has_type_any_because_it_does_not_have_a_type_annotation_and_is_referenced_directly_or__7022", "'{0}' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer."),
    _0_implicitly_has_return_type_any_because_it_does_not_have_a_return_type_annotation_and_is_referenced_directly_or_indirectly_in_one_of_its_return_expressions: t(7023, e.DiagnosticCategory.Error, "_0_implicitly_has_return_type_any_because_it_does_not_have_a_return_type_annotation_and_is_reference_7023", "'{0}' implicitly has return type 'any' because it does not have a return type annotation and is referenced directly or indirectly in one of its return expressions."),
    Function_implicitly_has_return_type_any_because_it_does_not_have_a_return_type_annotation_and_is_referenced_directly_or_indirectly_in_one_of_its_return_expressions: t(7024, e.DiagnosticCategory.Error, "Function_implicitly_has_return_type_any_because_it_does_not_have_a_return_type_annotation_and_is_ref_7024", "Function implicitly has return type 'any' because it does not have a return type annotation and is referenced directly or indirectly in one of its return expressions."),
    Generator_implicitly_has_type_0_because_it_does_not_yield_any_values_Consider_supplying_a_return_type: t(7025, e.DiagnosticCategory.Error, "Generator_implicitly_has_type_0_because_it_does_not_yield_any_values_Consider_supplying_a_return_typ_7025", "Generator implicitly has type '{0}' because it does not yield any values. Consider supplying a return type."),
    JSX_element_implicitly_has_type_any_because_no_interface_JSX_0_exists: t(7026, e.DiagnosticCategory.Error, "JSX_element_implicitly_has_type_any_because_no_interface_JSX_0_exists_7026", "JSX element implicitly has type 'any' because no interface 'JSX.{0}' exists."),
    Unreachable_code_detected: t(7027, e.DiagnosticCategory.Error, "Unreachable_code_detected_7027", "Unreachable code detected.", true),
    Unused_label: t(7028, e.DiagnosticCategory.Error, "Unused_label_7028", "Unused label.", true),
    Fallthrough_case_in_switch: t(7029, e.DiagnosticCategory.Error, "Fallthrough_case_in_switch_7029", "Fallthrough case in switch."),
    Not_all_code_paths_return_a_value: t(7030, e.DiagnosticCategory.Error, "Not_all_code_paths_return_a_value_7030", "Not all code paths return a value."),
    Binding_element_0_implicitly_has_an_1_type: t(7031, e.DiagnosticCategory.Error, "Binding_element_0_implicitly_has_an_1_type_7031", "Binding element '{0}' implicitly has an '{1}' type."),
    Property_0_implicitly_has_type_any_because_its_set_accessor_lacks_a_parameter_type_annotation: t(7032, e.DiagnosticCategory.Error, "Property_0_implicitly_has_type_any_because_its_set_accessor_lacks_a_parameter_type_annotation_7032", "Property '{0}' implicitly has type 'any', because its set accessor lacks a parameter type annotation."),
    Property_0_implicitly_has_type_any_because_its_get_accessor_lacks_a_return_type_annotation: t(7033, e.DiagnosticCategory.Error, "Property_0_implicitly_has_type_any_because_its_get_accessor_lacks_a_return_type_annotation_7033", "Property '{0}' implicitly has type 'any', because its get accessor lacks a return type annotation."),
    Variable_0_implicitly_has_type_1_in_some_locations_where_its_type_cannot_be_determined: t(7034, e.DiagnosticCategory.Error, "Variable_0_implicitly_has_type_1_in_some_locations_where_its_type_cannot_be_determined_7034", "Variable '{0}' implicitly has type '{1}' in some locations where its type cannot be determined."),
    Try_npm_install_types_Slash_0_if_it_exists_or_add_a_new_declaration_d_ts_file_containing_declare_module_0: t(7035, e.DiagnosticCategory.Error, "Try_npm_install_types_Slash_0_if_it_exists_or_add_a_new_declaration_d_ts_file_containing_declare_mod_7035", "Try `npm install @types/{0}` if it exists or add a new declaration (.d.ts) file containing `declare module '{0}';`"),
    Dynamic_import_s_specifier_must_be_of_type_string_but_here_has_type_0: t(7036, e.DiagnosticCategory.Error, "Dynamic_import_s_specifier_must_be_of_type_string_but_here_has_type_0_7036", "Dynamic import's specifier must be of type 'string', but here has type '{0}'."),
    Enables_emit_interoperability_between_CommonJS_and_ES_Modules_via_creation_of_namespace_objects_for_all_imports_Implies_allowSyntheticDefaultImports: t(7037, e.DiagnosticCategory.Message, "Enables_emit_interoperability_between_CommonJS_and_ES_Modules_via_creation_of_namespace_objects_for__7037", "Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'."),
    Type_originates_at_this_import_A_namespace_style_import_cannot_be_called_or_constructed_and_will_cause_a_failure_at_runtime_Consider_using_a_default_import_or_import_require_here_instead: t(7038, e.DiagnosticCategory.Message, "Type_originates_at_this_import_A_namespace_style_import_cannot_be_called_or_constructed_and_will_cau_7038", "Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead."),
    Mapped_object_type_implicitly_has_an_any_template_type: t(7039, e.DiagnosticCategory.Error, "Mapped_object_type_implicitly_has_an_any_template_type_7039", "Mapped object type implicitly has an 'any' template type."),
    If_the_0_package_actually_exposes_this_module_consider_sending_a_pull_request_to_amend_https_Colon_Slash_Slashgithub_com_SlashDefinitelyTyped_SlashDefinitelyTyped_Slashtree_Slashmaster_Slashtypes_Slash_0: t(7040, e.DiagnosticCategory.Error, "If_the_0_package_actually_exposes_this_module_consider_sending_a_pull_request_to_amend_https_Colon_S_7040", "If the '{0}' package actually exposes this module, consider sending a pull request to amend 'https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/{0}`"),
    You_cannot_rename_this_element: t(8e3, e.DiagnosticCategory.Error, "You_cannot_rename_this_element_8000", "You cannot rename this element."),
    You_cannot_rename_elements_that_are_defined_in_the_standard_TypeScript_library: t(8001, e.DiagnosticCategory.Error, "You_cannot_rename_elements_that_are_defined_in_the_standard_TypeScript_library_8001", "You cannot rename elements that are defined in the standard TypeScript library."),
    import_can_only_be_used_in_a_ts_file: t(8002, e.DiagnosticCategory.Error, "import_can_only_be_used_in_a_ts_file_8002", "'import ... =' can only be used in a .ts file."),
    export_can_only_be_used_in_a_ts_file: t(8003, e.DiagnosticCategory.Error, "export_can_only_be_used_in_a_ts_file_8003", "'export=' can only be used in a .ts file."),
    type_parameter_declarations_can_only_be_used_in_a_ts_file: t(8004, e.DiagnosticCategory.Error, "type_parameter_declarations_can_only_be_used_in_a_ts_file_8004", "'type parameter declarations' can only be used in a .ts file."),
    implements_clauses_can_only_be_used_in_a_ts_file: t(8005, e.DiagnosticCategory.Error, "implements_clauses_can_only_be_used_in_a_ts_file_8005", "'implements clauses' can only be used in a .ts file."),
    interface_declarations_can_only_be_used_in_a_ts_file: t(8006, e.DiagnosticCategory.Error, "interface_declarations_can_only_be_used_in_a_ts_file_8006", "'interface declarations' can only be used in a .ts file."),
    module_declarations_can_only_be_used_in_a_ts_file: t(8007, e.DiagnosticCategory.Error, "module_declarations_can_only_be_used_in_a_ts_file_8007", "'module declarations' can only be used in a .ts file."),
    type_aliases_can_only_be_used_in_a_ts_file: t(8008, e.DiagnosticCategory.Error, "type_aliases_can_only_be_used_in_a_ts_file_8008", "'type aliases' can only be used in a .ts file."),
    _0_can_only_be_used_in_a_ts_file: t(8009, e.DiagnosticCategory.Error, "_0_can_only_be_used_in_a_ts_file_8009", "'{0}' can only be used in a .ts file."),
    types_can_only_be_used_in_a_ts_file: t(8010, e.DiagnosticCategory.Error, "types_can_only_be_used_in_a_ts_file_8010", "'types' can only be used in a .ts file."),
    type_arguments_can_only_be_used_in_a_ts_file: t(8011, e.DiagnosticCategory.Error, "type_arguments_can_only_be_used_in_a_ts_file_8011", "'type arguments' can only be used in a .ts file."),
    parameter_modifiers_can_only_be_used_in_a_ts_file: t(8012, e.DiagnosticCategory.Error, "parameter_modifiers_can_only_be_used_in_a_ts_file_8012", "'parameter modifiers' can only be used in a .ts file."),
    non_null_assertions_can_only_be_used_in_a_ts_file: t(8013, e.DiagnosticCategory.Error, "non_null_assertions_can_only_be_used_in_a_ts_file_8013", "'non-null assertions' can only be used in a .ts file."),
    enum_declarations_can_only_be_used_in_a_ts_file: t(8015, e.DiagnosticCategory.Error, "enum_declarations_can_only_be_used_in_a_ts_file_8015", "'enum declarations' can only be used in a .ts file."),
    type_assertion_expressions_can_only_be_used_in_a_ts_file: t(8016, e.DiagnosticCategory.Error, "type_assertion_expressions_can_only_be_used_in_a_ts_file_8016", "'type assertion expressions' can only be used in a .ts file."),
    Octal_literal_types_must_use_ES2015_syntax_Use_the_syntax_0: t(8017, e.DiagnosticCategory.Error, "Octal_literal_types_must_use_ES2015_syntax_Use_the_syntax_0_8017", "Octal literal types must use ES2015 syntax. Use the syntax '{0}'."),
    Octal_literals_are_not_allowed_in_enums_members_initializer_Use_the_syntax_0: t(8018, e.DiagnosticCategory.Error, "Octal_literals_are_not_allowed_in_enums_members_initializer_Use_the_syntax_0_8018", "Octal literals are not allowed in enums members initializer. Use the syntax '{0}'."),
    Report_errors_in_js_files: t(8019, e.DiagnosticCategory.Message, "Report_errors_in_js_files_8019", "Report errors in .js files."),
    JSDoc_types_can_only_be_used_inside_documentation_comments: t(8020, e.DiagnosticCategory.Error, "JSDoc_types_can_only_be_used_inside_documentation_comments_8020", "JSDoc types can only be used inside documentation comments."),
    JSDoc_typedef_tag_should_either_have_a_type_annotation_or_be_followed_by_property_or_member_tags: t(8021, e.DiagnosticCategory.Error, "JSDoc_typedef_tag_should_either_have_a_type_annotation_or_be_followed_by_property_or_member_tags_8021", "JSDoc '@typedef' tag should either have a type annotation or be followed by '@property' or '@member' tags."),
    JSDoc_0_is_not_attached_to_a_class: t(8022, e.DiagnosticCategory.Error, "JSDoc_0_is_not_attached_to_a_class_8022", "JSDoc '@{0}' is not attached to a class."),
    JSDoc_0_1_does_not_match_the_extends_2_clause: t(8023, e.DiagnosticCategory.Error, "JSDoc_0_1_does_not_match_the_extends_2_clause_8023", "JSDoc '@{0} {1}' does not match the 'extends {2}' clause."),
    JSDoc_param_tag_has_name_0_but_there_is_no_parameter_with_that_name: t(8024, e.DiagnosticCategory.Error, "JSDoc_param_tag_has_name_0_but_there_is_no_parameter_with_that_name_8024", "JSDoc '@param' tag has name '{0}', but there is no parameter with that name."),
    Class_declarations_cannot_have_more_than_one_augments_or_extends_tag: t(8025, e.DiagnosticCategory.Error, "Class_declarations_cannot_have_more_than_one_augments_or_extends_tag_8025", "Class declarations cannot have more than one `@augments` or `@extends` tag."),
    Expected_0_type_arguments_provide_these_with_an_extends_tag: t(8026, e.DiagnosticCategory.Error, "Expected_0_type_arguments_provide_these_with_an_extends_tag_8026", "Expected {0} type arguments; provide these with an '@extends' tag."),
    Expected_0_1_type_arguments_provide_these_with_an_extends_tag: t(8027, e.DiagnosticCategory.Error, "Expected_0_1_type_arguments_provide_these_with_an_extends_tag_8027", "Expected {0}-{1} type arguments; provide these with an '@extends' tag."),
    JSDoc_may_only_appear_in_the_last_parameter_of_a_signature: t(8028, e.DiagnosticCategory.Error, "JSDoc_may_only_appear_in_the_last_parameter_of_a_signature_8028", "JSDoc '...' may only appear in the last parameter of a signature."),
    JSDoc_param_tag_has_name_0_but_there_is_no_parameter_with_that_name_It_would_match_arguments_if_it_had_an_array_type: t(8029, e.DiagnosticCategory.Error, "JSDoc_param_tag_has_name_0_but_there_is_no_parameter_with_that_name_It_would_match_arguments_if_it_h_8029", "JSDoc '@param' tag has name '{0}', but there is no parameter with that name. It would match 'arguments' if it had an array type."),
    The_type_of_a_function_declaration_must_match_the_function_s_signature: t(8030, e.DiagnosticCategory.Error, "The_type_of_a_function_declaration_must_match_the_function_s_signature_8030", "The type of a function declaration must match the function's signature."),
    Only_identifiers_Slashqualified_names_with_optional_type_arguments_are_currently_supported_in_a_class_extends_clause: t(9002, e.DiagnosticCategory.Error, "Only_identifiers_Slashqualified_names_with_optional_type_arguments_are_currently_supported_in_a_clas_9002", "Only identifiers/qualified-names with optional type arguments are currently supported in a class 'extends' clause."),
    class_expressions_are_not_currently_supported: t(9003, e.DiagnosticCategory.Error, "class_expressions_are_not_currently_supported_9003", "'class' expressions are not currently supported."),
    Language_service_is_disabled: t(9004, e.DiagnosticCategory.Error, "Language_service_is_disabled_9004", "Language service is disabled."),
    JSX_attributes_must_only_be_assigned_a_non_empty_expression: t(17e3, e.DiagnosticCategory.Error, "JSX_attributes_must_only_be_assigned_a_non_empty_expression_17000", "JSX attributes must only be assigned a non-empty 'expression'."),
    JSX_elements_cannot_have_multiple_attributes_with_the_same_name: t(17001, e.DiagnosticCategory.Error, "JSX_elements_cannot_have_multiple_attributes_with_the_same_name_17001", "JSX elements cannot have multiple attributes with the same name."),
    Expected_corresponding_JSX_closing_tag_for_0: t(17002, e.DiagnosticCategory.Error, "Expected_corresponding_JSX_closing_tag_for_0_17002", "Expected corresponding JSX closing tag for '{0}'."),
    JSX_attribute_expected: t(17003, e.DiagnosticCategory.Error, "JSX_attribute_expected_17003", "JSX attribute expected."),
    Cannot_use_JSX_unless_the_jsx_flag_is_provided: t(17004, e.DiagnosticCategory.Error, "Cannot_use_JSX_unless_the_jsx_flag_is_provided_17004", "Cannot use JSX unless the '--jsx' flag is provided."),
    A_constructor_cannot_contain_a_super_call_when_its_class_extends_null: t(17005, e.DiagnosticCategory.Error, "A_constructor_cannot_contain_a_super_call_when_its_class_extends_null_17005", "A constructor cannot contain a 'super' call when its class extends 'null'."),
    An_unary_expression_with_the_0_operator_is_not_allowed_in_the_left_hand_side_of_an_exponentiation_expression_Consider_enclosing_the_expression_in_parentheses: t(17006, e.DiagnosticCategory.Error, "An_unary_expression_with_the_0_operator_is_not_allowed_in_the_left_hand_side_of_an_exponentiation_ex_17006", "An unary expression with the '{0}' operator is not allowed in the left-hand side of an exponentiation expression. Consider enclosing the expression in parentheses."),
    A_type_assertion_expression_is_not_allowed_in_the_left_hand_side_of_an_exponentiation_expression_Consider_enclosing_the_expression_in_parentheses: t(17007, e.DiagnosticCategory.Error, "A_type_assertion_expression_is_not_allowed_in_the_left_hand_side_of_an_exponentiation_expression_Con_17007", "A type assertion expression is not allowed in the left-hand side of an exponentiation expression. Consider enclosing the expression in parentheses."),
    JSX_element_0_has_no_corresponding_closing_tag: t(17008, e.DiagnosticCategory.Error, "JSX_element_0_has_no_corresponding_closing_tag_17008", "JSX element '{0}' has no corresponding closing tag."),
    super_must_be_called_before_accessing_this_in_the_constructor_of_a_derived_class: t(17009, e.DiagnosticCategory.Error, "super_must_be_called_before_accessing_this_in_the_constructor_of_a_derived_class_17009", "'super' must be called before accessing 'this' in the constructor of a derived class."),
    Unknown_type_acquisition_option_0: t(17010, e.DiagnosticCategory.Error, "Unknown_type_acquisition_option_0_17010", "Unknown type acquisition option '{0}'."),
    super_must_be_called_before_accessing_a_property_of_super_in_the_constructor_of_a_derived_class: t(17011, e.DiagnosticCategory.Error, "super_must_be_called_before_accessing_a_property_of_super_in_the_constructor_of_a_derived_class_17011", "'super' must be called before accessing a property of 'super' in the constructor of a derived class."),
    _0_is_not_a_valid_meta_property_for_keyword_1_Did_you_mean_2: t(17012, e.DiagnosticCategory.Error, "_0_is_not_a_valid_meta_property_for_keyword_1_Did_you_mean_2_17012", "'{0}' is not a valid meta-property for keyword '{1}'. Did you mean '{2}'?"),
    Meta_property_0_is_only_allowed_in_the_body_of_a_function_declaration_function_expression_or_constructor: t(17013, e.DiagnosticCategory.Error, "Meta_property_0_is_only_allowed_in_the_body_of_a_function_declaration_function_expression_or_constru_17013", "Meta-property '{0}' is only allowed in the body of a function declaration, function expression, or constructor."),
    JSX_fragment_has_no_corresponding_closing_tag: t(17014, e.DiagnosticCategory.Error, "JSX_fragment_has_no_corresponding_closing_tag_17014", "JSX fragment has no corresponding closing tag."),
    Expected_corresponding_closing_tag_for_JSX_fragment: t(17015, e.DiagnosticCategory.Error, "Expected_corresponding_closing_tag_for_JSX_fragment_17015", "Expected corresponding closing tag for JSX fragment."),
    JSX_fragment_is_not_supported_when_using_jsxFactory: t(17016, e.DiagnosticCategory.Error, "JSX_fragment_is_not_supported_when_using_jsxFactory_17016", "JSX fragment is not supported when using --jsxFactory"),
    JSX_fragment_is_not_supported_when_using_an_inline_JSX_factory_pragma: t(17017, e.DiagnosticCategory.Error, "JSX_fragment_is_not_supported_when_using_an_inline_JSX_factory_pragma_17017", "JSX fragment is not supported when using an inline JSX factory pragma"),
    Circularity_detected_while_resolving_configuration_Colon_0: t(18e3, e.DiagnosticCategory.Error, "Circularity_detected_while_resolving_configuration_Colon_0_18000", "Circularity detected while resolving configuration: {0}"),
    A_path_in_an_extends_option_must_be_relative_or_rooted_but_0_is_not: t(18001, e.DiagnosticCategory.Error, "A_path_in_an_extends_option_must_be_relative_or_rooted_but_0_is_not_18001", "A path in an 'extends' option must be relative or rooted, but '{0}' is not."),
    The_files_list_in_config_file_0_is_empty: t(18002, e.DiagnosticCategory.Error, "The_files_list_in_config_file_0_is_empty_18002", "The 'files' list in config file '{0}' is empty."),
    No_inputs_were_found_in_config_file_0_Specified_include_paths_were_1_and_exclude_paths_were_2: t(18003, e.DiagnosticCategory.Error, "No_inputs_were_found_in_config_file_0_Specified_include_paths_were_1_and_exclude_paths_were_2_18003", "No inputs were found in config file '{0}'. Specified 'include' paths were '{1}' and 'exclude' paths were '{2}'."),
    File_is_a_CommonJS_module_it_may_be_converted_to_an_ES6_module: t(80001, e.DiagnosticCategory.Suggestion, "File_is_a_CommonJS_module_it_may_be_converted_to_an_ES6_module_80001", "File is a CommonJS module; it may be converted to an ES6 module."),
    This_constructor_function_may_be_converted_to_a_class_declaration: t(80002, e.DiagnosticCategory.Suggestion, "This_constructor_function_may_be_converted_to_a_class_declaration_80002", "This constructor function may be converted to a class declaration."),
    Import_may_be_converted_to_a_default_import: t(80003, e.DiagnosticCategory.Suggestion, "Import_may_be_converted_to_a_default_import_80003", "Import may be converted to a default import."),
    JSDoc_types_may_be_moved_to_TypeScript_types: t(80004, e.DiagnosticCategory.Suggestion, "JSDoc_types_may_be_moved_to_TypeScript_types_80004", "JSDoc types may be moved to TypeScript types."),
    require_call_may_be_converted_to_an_import: t(80005, e.DiagnosticCategory.Suggestion, "require_call_may_be_converted_to_an_import_80005", "'require' call may be converted to an import."),
    Add_missing_super_call: t(90001, e.DiagnosticCategory.Message, "Add_missing_super_call_90001", "Add missing 'super()' call"),
    Make_super_call_the_first_statement_in_the_constructor: t(90002, e.DiagnosticCategory.Message, "Make_super_call_the_first_statement_in_the_constructor_90002", "Make 'super()' call the first statement in the constructor"),
    Change_extends_to_implements: t(90003, e.DiagnosticCategory.Message, "Change_extends_to_implements_90003", "Change 'extends' to 'implements'"),
    Remove_declaration_for_Colon_0: t(90004, e.DiagnosticCategory.Message, "Remove_declaration_for_Colon_0_90004", "Remove declaration for: '{0}'"),
    Remove_import_from_0: t(90005, e.DiagnosticCategory.Message, "Remove_import_from_0_90005", "Remove import from '{0}'"),
    Implement_interface_0: t(90006, e.DiagnosticCategory.Message, "Implement_interface_0_90006", "Implement interface '{0}'"),
    Implement_inherited_abstract_class: t(90007, e.DiagnosticCategory.Message, "Implement_inherited_abstract_class_90007", "Implement inherited abstract class"),
    Add_0_to_unresolved_variable: t(90008, e.DiagnosticCategory.Message, "Add_0_to_unresolved_variable_90008", "Add '{0}.' to unresolved variable"),
    Remove_destructuring: t(90009, e.DiagnosticCategory.Message, "Remove_destructuring_90009", "Remove destructuring"),
    Remove_variable_statement: t(90010, e.DiagnosticCategory.Message, "Remove_variable_statement_90010", "Remove variable statement"),
    Import_0_from_module_1: t(90013, e.DiagnosticCategory.Message, "Import_0_from_module_1_90013", "Import '{0}' from module \"{1}\""),
    Change_0_to_1: t(90014, e.DiagnosticCategory.Message, "Change_0_to_1_90014", "Change '{0}' to '{1}'"),
    Add_0_to_existing_import_declaration_from_1: t(90015, e.DiagnosticCategory.Message, "Add_0_to_existing_import_declaration_from_1_90015", "Add '{0}' to existing import declaration from \"{1}\""),
    Declare_property_0: t(90016, e.DiagnosticCategory.Message, "Declare_property_0_90016", "Declare property '{0}'"),
    Add_index_signature_for_property_0: t(90017, e.DiagnosticCategory.Message, "Add_index_signature_for_property_0_90017", "Add index signature for property '{0}'"),
    Disable_checking_for_this_file: t(90018, e.DiagnosticCategory.Message, "Disable_checking_for_this_file_90018", "Disable checking for this file"),
    Ignore_this_error_message: t(90019, e.DiagnosticCategory.Message, "Ignore_this_error_message_90019", "Ignore this error message"),
    Initialize_property_0_in_the_constructor: t(90020, e.DiagnosticCategory.Message, "Initialize_property_0_in_the_constructor_90020", "Initialize property '{0}' in the constructor"),
    Initialize_static_property_0: t(90021, e.DiagnosticCategory.Message, "Initialize_static_property_0_90021", "Initialize static property '{0}'"),
    Change_spelling_to_0: t(90022, e.DiagnosticCategory.Message, "Change_spelling_to_0_90022", "Change spelling to '{0}'"),
    Declare_method_0: t(90023, e.DiagnosticCategory.Message, "Declare_method_0_90023", "Declare method '{0}'"),
    Declare_static_method_0: t(90024, e.DiagnosticCategory.Message, "Declare_static_method_0_90024", "Declare static method '{0}'"),
    Prefix_0_with_an_underscore: t(90025, e.DiagnosticCategory.Message, "Prefix_0_with_an_underscore_90025", "Prefix '{0}' with an underscore"),
    Rewrite_as_the_indexed_access_type_0: t(90026, e.DiagnosticCategory.Message, "Rewrite_as_the_indexed_access_type_0_90026", "Rewrite as the indexed access type '{0}'"),
    Declare_static_property_0: t(90027, e.DiagnosticCategory.Message, "Declare_static_property_0_90027", "Declare static property '{0}'"),
    Call_decorator_expression: t(90028, e.DiagnosticCategory.Message, "Call_decorator_expression_90028", "Call decorator expression"),
    Add_async_modifier_to_containing_function: t(90029, e.DiagnosticCategory.Message, "Add_async_modifier_to_containing_function_90029", "Add async modifier to containing function"),
    Convert_function_to_an_ES2015_class: t(95001, e.DiagnosticCategory.Message, "Convert_function_to_an_ES2015_class_95001", "Convert function to an ES2015 class"),
    Convert_function_0_to_class: t(95002, e.DiagnosticCategory.Message, "Convert_function_0_to_class_95002", "Convert function '{0}' to class"),
    Extract_to_0_in_1: t(95004, e.DiagnosticCategory.Message, "Extract_to_0_in_1_95004", "Extract to {0} in {1}"),
    Extract_function: t(95005, e.DiagnosticCategory.Message, "Extract_function_95005", "Extract function"),
    Extract_constant: t(95006, e.DiagnosticCategory.Message, "Extract_constant_95006", "Extract constant"),
    Extract_to_0_in_enclosing_scope: t(95007, e.DiagnosticCategory.Message, "Extract_to_0_in_enclosing_scope_95007", "Extract to {0} in enclosing scope"),
    Extract_to_0_in_1_scope: t(95008, e.DiagnosticCategory.Message, "Extract_to_0_in_1_scope_95008", "Extract to {0} in {1} scope"),
    Annotate_with_type_from_JSDoc: t(95009, e.DiagnosticCategory.Message, "Annotate_with_type_from_JSDoc_95009", "Annotate with type from JSDoc"),
    Annotate_with_types_from_JSDoc: t(95010, e.DiagnosticCategory.Message, "Annotate_with_types_from_JSDoc_95010", "Annotate with types from JSDoc"),
    Infer_type_of_0_from_usage: t(95011, e.DiagnosticCategory.Message, "Infer_type_of_0_from_usage_95011", "Infer type of '{0}' from usage"),
    Infer_parameter_types_from_usage: t(95012, e.DiagnosticCategory.Message, "Infer_parameter_types_from_usage_95012", "Infer parameter types from usage"),
    Convert_to_default_import: t(95013, e.DiagnosticCategory.Message, "Convert_to_default_import_95013", "Convert to default import"),
    Install_0: t(95014, e.DiagnosticCategory.Message, "Install_0_95014", "Install '{0}'"),
    Replace_import_with_0: t(95015, e.DiagnosticCategory.Message, "Replace_import_with_0_95015", "Replace import with '{0}'."),
    Use_synthetic_default_member: t(95016, e.DiagnosticCategory.Message, "Use_synthetic_default_member_95016", "Use synthetic 'default' member."),
    Convert_to_ES6_module: t(95017, e.DiagnosticCategory.Message, "Convert_to_ES6_module_95017", "Convert to ES6 module"),
    Add_undefined_type_to_property_0: t(95018, e.DiagnosticCategory.Message, "Add_undefined_type_to_property_0_95018", "Add 'undefined' type to property '{0}'"),
    Add_initializer_to_property_0: t(95019, e.DiagnosticCategory.Message, "Add_initializer_to_property_0_95019", "Add initializer to property '{0}'"),
    Add_definite_assignment_assertion_to_property_0: t(95020, e.DiagnosticCategory.Message, "Add_definite_assignment_assertion_to_property_0_95020", "Add definite assignment assertion to property '{0}'"),
    Add_all_missing_members: t(95022, e.DiagnosticCategory.Message, "Add_all_missing_members_95022", "Add all missing members"),
    Infer_all_types_from_usage: t(95023, e.DiagnosticCategory.Message, "Infer_all_types_from_usage_95023", "Infer all types from usage"),
    Delete_all_unused_declarations: t(95024, e.DiagnosticCategory.Message, "Delete_all_unused_declarations_95024", "Delete all unused declarations"),
    Prefix_all_unused_declarations_with_where_possible: t(95025, e.DiagnosticCategory.Message, "Prefix_all_unused_declarations_with_where_possible_95025", "Prefix all unused declarations with '_' where possible"),
    Fix_all_detected_spelling_errors: t(95026, e.DiagnosticCategory.Message, "Fix_all_detected_spelling_errors_95026", "Fix all detected spelling errors"),
    Add_initializers_to_all_uninitialized_properties: t(95027, e.DiagnosticCategory.Message, "Add_initializers_to_all_uninitialized_properties_95027", "Add initializers to all uninitialized properties"),
    Add_definite_assignment_assertions_to_all_uninitialized_properties: t(95028, e.DiagnosticCategory.Message, "Add_definite_assignment_assertions_to_all_uninitialized_properties_95028", "Add definite assignment assertions to all uninitialized properties"),
    Add_undefined_type_to_all_uninitialized_properties: t(95029, e.DiagnosticCategory.Message, "Add_undefined_type_to_all_uninitialized_properties_95029", "Add undefined type to all uninitialized properties"),
    Change_all_jsdoc_style_types_to_TypeScript: t(95030, e.DiagnosticCategory.Message, "Change_all_jsdoc_style_types_to_TypeScript_95030", "Change all jsdoc-style types to TypeScript"),
    Change_all_jsdoc_style_types_to_TypeScript_and_add_undefined_to_nullable_types: t(95031, e.DiagnosticCategory.Message, "Change_all_jsdoc_style_types_to_TypeScript_and_add_undefined_to_nullable_types_95031", "Change all jsdoc-style types to TypeScript (and add '| undefined' to nullable types)"),
    Implement_all_unimplemented_interfaces: t(95032, e.DiagnosticCategory.Message, "Implement_all_unimplemented_interfaces_95032", "Implement all unimplemented interfaces"),
    Install_all_missing_types_packages: t(95033, e.DiagnosticCategory.Message, "Install_all_missing_types_packages_95033", "Install all missing types packages"),
    Rewrite_all_as_indexed_access_types: t(95034, e.DiagnosticCategory.Message, "Rewrite_all_as_indexed_access_types_95034", "Rewrite all as indexed access types"),
    Convert_all_to_default_imports: t(95035, e.DiagnosticCategory.Message, "Convert_all_to_default_imports_95035", "Convert all to default imports"),
    Make_all_super_calls_the_first_statement_in_their_constructor: t(95036, e.DiagnosticCategory.Message, "Make_all_super_calls_the_first_statement_in_their_constructor_95036", "Make all 'super()' calls the first statement in their constructor"),
    Add_qualifier_to_all_unresolved_variables_matching_a_member_name: t(95037, e.DiagnosticCategory.Message, "Add_qualifier_to_all_unresolved_variables_matching_a_member_name_95037", "Add qualifier to all unresolved variables matching a member name"),
    Change_all_extended_interfaces_to_implements: t(95038, e.DiagnosticCategory.Message, "Change_all_extended_interfaces_to_implements_95038", "Change all extended interfaces to 'implements'"),
    Add_all_missing_super_calls: t(95039, e.DiagnosticCategory.Message, "Add_all_missing_super_calls_95039", "Add all missing super calls"),
    Implement_all_inherited_abstract_classes: t(95040, e.DiagnosticCategory.Message, "Implement_all_inherited_abstract_classes_95040", "Implement all inherited abstract classes"),
    Add_all_missing_async_modifiers: t(95041, e.DiagnosticCategory.Message, "Add_all_missing_async_modifiers_95041", "Add all missing 'async' modifiers"),
    Add_ts_ignore_to_all_error_messages: t(95042, e.DiagnosticCategory.Message, "Add_ts_ignore_to_all_error_messages_95042", "Add '@ts-ignore' to all error messages"),
    Annotate_everything_with_types_from_JSDoc: t(95043, e.DiagnosticCategory.Message, "Annotate_everything_with_types_from_JSDoc_95043", "Annotate everything with types from JSDoc"),
    Add_to_all_uncalled_decorators: t(95044, e.DiagnosticCategory.Message, "Add_to_all_uncalled_decorators_95044", "Add '()' to all uncalled decorators"),
    Convert_all_constructor_functions_to_classes: t(95045, e.DiagnosticCategory.Message, "Convert_all_constructor_functions_to_classes_95045", "Convert all constructor functions to classes"),
    Generate_get_and_set_accessors: t(95046, e.DiagnosticCategory.Message, "Generate_get_and_set_accessors_95046", "Generate 'get' and 'set' accessors"),
    Convert_require_to_import: t(95047, e.DiagnosticCategory.Message, "Convert_require_to_import_95047", "Convert 'require' to 'import'"),
    Convert_all_require_to_import: t(95048, e.DiagnosticCategory.Message, "Convert_all_require_to_import_95048", "Convert all 'require' to 'import'"),
    Move_to_a_new_file: t(95049, e.DiagnosticCategory.Message, "Move_to_a_new_file_95049", "Move to a new file"),
    Remove_unreachable_code: t(95050, e.DiagnosticCategory.Message, "Remove_unreachable_code_95050", "Remove unreachable code"),
    Remove_all_unreachable_code: t(95051, e.DiagnosticCategory.Message, "Remove_all_unreachable_code_95051", "Remove all unreachable code"),
    Add_missing_typeof: t(95052, e.DiagnosticCategory.Message, "Add_missing_typeof_95052", "Add missing 'typeof'"),
    Remove_unused_label: t(95053, e.DiagnosticCategory.Message, "Remove_unused_label_95053", "Remove unused label"),
    Remove_all_unused_labels: t(95054, e.DiagnosticCategory.Message, "Remove_all_unused_labels_95054", "Remove all unused labels"),
    Convert_0_to_mapped_object_type: t(95055, e.DiagnosticCategory.Message, "Convert_0_to_mapped_object_type_95055", "Convert '{0}' to mapped object type"),
    Convert_namespace_import_to_named_imports: t(95056, e.DiagnosticCategory.Message, "Convert_namespace_import_to_named_imports_95056", "Convert namespace import to named imports"),
    Convert_named_imports_to_namespace_import: t(95057, e.DiagnosticCategory.Message, "Convert_named_imports_to_namespace_import_95057", "Convert named imports to namespace import"),
    Add_or_remove_braces_in_an_arrow_function: t(95058, e.DiagnosticCategory.Message, "Add_or_remove_braces_in_an_arrow_function_95058", "Add or remove braces in an arrow function"),
    Add_braces_to_arrow_function: t(95059, e.DiagnosticCategory.Message, "Add_braces_to_arrow_function_95059", "Add braces to arrow function"),
    Remove_braces_from_arrow_function: t(95060, e.DiagnosticCategory.Message, "Remove_braces_from_arrow_function_95060", "Remove braces from arrow function"),
    Convert_default_export_to_named_export: t(95061, e.DiagnosticCategory.Message, "Convert_default_export_to_named_export_95061", "Convert default export to named export"),
    Convert_named_export_to_default_export: t(95062, e.DiagnosticCategory.Message, "Convert_named_export_to_default_export_95062", "Convert named export to default export"),
    Add_missing_enum_member_0: t(95063, e.DiagnosticCategory.Message, "Add_missing_enum_member_0_95063", "Add missing enum member '{0}'"),
    Add_all_missing_imports: t(95064, e.DiagnosticCategory.Message, "Add_all_missing_imports_95064", "Add all missing imports")
   };
  })(s || (s = {}));
  var s;
  (function(e) {
   function t(e) {
    return e >= 71;
   }
   e.tokenIsIdentifierOrKeyword = t;
   function n(e) {
    return e === 29 || t(e);
   }
   e.tokenIsIdentifierOrKeywordOrGreaterThan = n;
   var r = e.createMapFromTemplate({
    abstract: 117,
    any: 119,
    as: 118,
    boolean: 122,
    break: 72,
    case: 73,
    catch: 74,
    class: 75,
    continue: 77,
    const: 76,
    constructor: 123,
    debugger: 78,
    declare: 124,
    default: 79,
    delete: 80,
    do: 81,
    else: 82,
    enum: 83,
    export: 84,
    extends: 85,
    false: 86,
    finally: 87,
    for: 88,
    from: 143,
    function: 89,
    get: 125,
    if: 90,
    implements: 108,
    import: 91,
    in: 92,
    infer: 126,
    instanceof: 93,
    interface: 109,
    is: 127,
    keyof: 128,
    let: 110,
    module: 129,
    namespace: 130,
    never: 131,
    new: 94,
    null: 95,
    number: 134,
    object: 135,
    package: 111,
    private: 112,
    protected: 113,
    public: 114,
    readonly: 132,
    require: 133,
    global: 144,
    return: 96,
    set: 136,
    static: 115,
    string: 137,
    super: 97,
    switch: 98,
    symbol: 138,
    this: 99,
    throw: 100,
    true: 101,
    try: 102,
    type: 139,
    typeof: 103,
    undefined: 140,
    unique: 141,
    unknown: 142,
    var: 104,
    void: 105,
    while: 106,
    with: 107,
    yield: 116,
    async: 120,
    await: 121,
    of: 145,
    "{": 17,
    "}": 18,
    "(": 19,
    ")": 20,
    "[": 21,
    "]": 22,
    ".": 23,
    "...": 24,
    ";": 25,
    ",": 26,
    "<": 27,
    ">": 29,
    "<=": 30,
    ">=": 31,
    "==": 32,
    "!=": 33,
    "===": 34,
    "!==": 35,
    "=>": 36,
    "+": 37,
    "-": 38,
    "**": 40,
    "*": 39,
    "/": 41,
    "%": 42,
    "++": 43,
    "--": 44,
    "<<": 45,
    "</": 28,
    ">>": 46,
    ">>>": 47,
    "&": 48,
    "|": 49,
    "^": 50,
    "!": 51,
    "~": 52,
    "&&": 53,
    "||": 54,
    "?": 55,
    ":": 56,
    "=": 58,
    "+=": 59,
    "-=": 60,
    "*=": 61,
    "**=": 62,
    "/=": 63,
    "%=": 64,
    "<<=": 65,
    ">>=": 66,
    ">>>=": 67,
    "&=": 68,
    "|=": 69,
    "^=": 70,
    "@": 57
   });
   var i = [ 170, 170, 181, 181, 186, 186, 192, 214, 216, 246, 248, 543, 546, 563, 592, 685, 688, 696, 699, 705, 720, 721, 736, 740, 750, 750, 890, 890, 902, 902, 904, 906, 908, 908, 910, 929, 931, 974, 976, 983, 986, 1011, 1024, 1153, 1164, 1220, 1223, 1224, 1227, 1228, 1232, 1269, 1272, 1273, 1329, 1366, 1369, 1369, 1377, 1415, 1488, 1514, 1520, 1522, 1569, 1594, 1600, 1610, 1649, 1747, 1749, 1749, 1765, 1766, 1786, 1788, 1808, 1808, 1810, 1836, 1920, 1957, 2309, 2361, 2365, 2365, 2384, 2384, 2392, 2401, 2437, 2444, 2447, 2448, 2451, 2472, 2474, 2480, 2482, 2482, 2486, 2489, 2524, 2525, 2527, 2529, 2544, 2545, 2565, 2570, 2575, 2576, 2579, 2600, 2602, 2608, 2610, 2611, 2613, 2614, 2616, 2617, 2649, 2652, 2654, 2654, 2674, 2676, 2693, 2699, 2701, 2701, 2703, 2705, 2707, 2728, 2730, 2736, 2738, 2739, 2741, 2745, 2749, 2749, 2768, 2768, 2784, 2784, 2821, 2828, 2831, 2832, 2835, 2856, 2858, 2864, 2866, 2867, 2870, 2873, 2877, 2877, 2908, 2909, 2911, 2913, 2949, 2954, 2958, 2960, 2962, 2965, 2969, 2970, 2972, 2972, 2974, 2975, 2979, 2980, 2984, 2986, 2990, 2997, 2999, 3001, 3077, 3084, 3086, 3088, 3090, 3112, 3114, 3123, 3125, 3129, 3168, 3169, 3205, 3212, 3214, 3216, 3218, 3240, 3242, 3251, 3253, 3257, 3294, 3294, 3296, 3297, 3333, 3340, 3342, 3344, 3346, 3368, 3370, 3385, 3424, 3425, 3461, 3478, 3482, 3505, 3507, 3515, 3517, 3517, 3520, 3526, 3585, 3632, 3634, 3635, 3648, 3654, 3713, 3714, 3716, 3716, 3719, 3720, 3722, 3722, 3725, 3725, 3732, 3735, 3737, 3743, 3745, 3747, 3749, 3749, 3751, 3751, 3754, 3755, 3757, 3760, 3762, 3763, 3773, 3773, 3776, 3780, 3782, 3782, 3804, 3805, 3840, 3840, 3904, 3911, 3913, 3946, 3976, 3979, 4096, 4129, 4131, 4135, 4137, 4138, 4176, 4181, 4256, 4293, 4304, 4342, 4352, 4441, 4447, 4514, 4520, 4601, 4608, 4614, 4616, 4678, 4680, 4680, 4682, 4685, 4688, 4694, 4696, 4696, 4698, 4701, 4704, 4742, 4744, 4744, 4746, 4749, 4752, 4782, 4784, 4784, 4786, 4789, 4792, 4798, 4800, 4800, 4802, 4805, 4808, 4814, 4816, 4822, 4824, 4846, 4848, 4878, 4880, 4880, 4882, 4885, 4888, 4894, 4896, 4934, 4936, 4954, 5024, 5108, 5121, 5740, 5743, 5750, 5761, 5786, 5792, 5866, 6016, 6067, 6176, 6263, 6272, 6312, 7680, 7835, 7840, 7929, 7936, 7957, 7960, 7965, 7968, 8005, 8008, 8013, 8016, 8023, 8025, 8025, 8027, 8027, 8029, 8029, 8031, 8061, 8064, 8116, 8118, 8124, 8126, 8126, 8130, 8132, 8134, 8140, 8144, 8147, 8150, 8155, 8160, 8172, 8178, 8180, 8182, 8188, 8319, 8319, 8450, 8450, 8455, 8455, 8458, 8467, 8469, 8469, 8473, 8477, 8484, 8484, 8486, 8486, 8488, 8488, 8490, 8493, 8495, 8497, 8499, 8505, 8544, 8579, 12293, 12295, 12321, 12329, 12337, 12341, 12344, 12346, 12353, 12436, 12445, 12446, 12449, 12538, 12540, 12542, 12549, 12588, 12593, 12686, 12704, 12727, 13312, 19893, 19968, 40869, 40960, 42124, 44032, 55203, 63744, 64045, 64256, 64262, 64275, 64279, 64285, 64285, 64287, 64296, 64298, 64310, 64312, 64316, 64318, 64318, 64320, 64321, 64323, 64324, 64326, 64433, 64467, 64829, 64848, 64911, 64914, 64967, 65008, 65019, 65136, 65138, 65140, 65140, 65142, 65276, 65313, 65338, 65345, 65370, 65382, 65470, 65474, 65479, 65482, 65487, 65490, 65495, 65498, 65500 ];
   var a = [ 170, 170, 181, 181, 186, 186, 192, 214, 216, 246, 248, 543, 546, 563, 592, 685, 688, 696, 699, 705, 720, 721, 736, 740, 750, 750, 768, 846, 864, 866, 890, 890, 902, 902, 904, 906, 908, 908, 910, 929, 931, 974, 976, 983, 986, 1011, 1024, 1153, 1155, 1158, 1164, 1220, 1223, 1224, 1227, 1228, 1232, 1269, 1272, 1273, 1329, 1366, 1369, 1369, 1377, 1415, 1425, 1441, 1443, 1465, 1467, 1469, 1471, 1471, 1473, 1474, 1476, 1476, 1488, 1514, 1520, 1522, 1569, 1594, 1600, 1621, 1632, 1641, 1648, 1747, 1749, 1756, 1759, 1768, 1770, 1773, 1776, 1788, 1808, 1836, 1840, 1866, 1920, 1968, 2305, 2307, 2309, 2361, 2364, 2381, 2384, 2388, 2392, 2403, 2406, 2415, 2433, 2435, 2437, 2444, 2447, 2448, 2451, 2472, 2474, 2480, 2482, 2482, 2486, 2489, 2492, 2492, 2494, 2500, 2503, 2504, 2507, 2509, 2519, 2519, 2524, 2525, 2527, 2531, 2534, 2545, 2562, 2562, 2565, 2570, 2575, 2576, 2579, 2600, 2602, 2608, 2610, 2611, 2613, 2614, 2616, 2617, 2620, 2620, 2622, 2626, 2631, 2632, 2635, 2637, 2649, 2652, 2654, 2654, 2662, 2676, 2689, 2691, 2693, 2699, 2701, 2701, 2703, 2705, 2707, 2728, 2730, 2736, 2738, 2739, 2741, 2745, 2748, 2757, 2759, 2761, 2763, 2765, 2768, 2768, 2784, 2784, 2790, 2799, 2817, 2819, 2821, 2828, 2831, 2832, 2835, 2856, 2858, 2864, 2866, 2867, 2870, 2873, 2876, 2883, 2887, 2888, 2891, 2893, 2902, 2903, 2908, 2909, 2911, 2913, 2918, 2927, 2946, 2947, 2949, 2954, 2958, 2960, 2962, 2965, 2969, 2970, 2972, 2972, 2974, 2975, 2979, 2980, 2984, 2986, 2990, 2997, 2999, 3001, 3006, 3010, 3014, 3016, 3018, 3021, 3031, 3031, 3047, 3055, 3073, 3075, 3077, 3084, 3086, 3088, 3090, 3112, 3114, 3123, 3125, 3129, 3134, 3140, 3142, 3144, 3146, 3149, 3157, 3158, 3168, 3169, 3174, 3183, 3202, 3203, 3205, 3212, 3214, 3216, 3218, 3240, 3242, 3251, 3253, 3257, 3262, 3268, 3270, 3272, 3274, 3277, 3285, 3286, 3294, 3294, 3296, 3297, 3302, 3311, 3330, 3331, 3333, 3340, 3342, 3344, 3346, 3368, 3370, 3385, 3390, 3395, 3398, 3400, 3402, 3405, 3415, 3415, 3424, 3425, 3430, 3439, 3458, 3459, 3461, 3478, 3482, 3505, 3507, 3515, 3517, 3517, 3520, 3526, 3530, 3530, 3535, 3540, 3542, 3542, 3544, 3551, 3570, 3571, 3585, 3642, 3648, 3662, 3664, 3673, 3713, 3714, 3716, 3716, 3719, 3720, 3722, 3722, 3725, 3725, 3732, 3735, 3737, 3743, 3745, 3747, 3749, 3749, 3751, 3751, 3754, 3755, 3757, 3769, 3771, 3773, 3776, 3780, 3782, 3782, 3784, 3789, 3792, 3801, 3804, 3805, 3840, 3840, 3864, 3865, 3872, 3881, 3893, 3893, 3895, 3895, 3897, 3897, 3902, 3911, 3913, 3946, 3953, 3972, 3974, 3979, 3984, 3991, 3993, 4028, 4038, 4038, 4096, 4129, 4131, 4135, 4137, 4138, 4140, 4146, 4150, 4153, 4160, 4169, 4176, 4185, 4256, 4293, 4304, 4342, 4352, 4441, 4447, 4514, 4520, 4601, 4608, 4614, 4616, 4678, 4680, 4680, 4682, 4685, 4688, 4694, 4696, 4696, 4698, 4701, 4704, 4742, 4744, 4744, 4746, 4749, 4752, 4782, 4784, 4784, 4786, 4789, 4792, 4798, 4800, 4800, 4802, 4805, 4808, 4814, 4816, 4822, 4824, 4846, 4848, 4878, 4880, 4880, 4882, 4885, 4888, 4894, 4896, 4934, 4936, 4954, 4969, 4977, 5024, 5108, 5121, 5740, 5743, 5750, 5761, 5786, 5792, 5866, 6016, 6099, 6112, 6121, 6160, 6169, 6176, 6263, 6272, 6313, 7680, 7835, 7840, 7929, 7936, 7957, 7960, 7965, 7968, 8005, 8008, 8013, 8016, 8023, 8025, 8025, 8027, 8027, 8029, 8029, 8031, 8061, 8064, 8116, 8118, 8124, 8126, 8126, 8130, 8132, 8134, 8140, 8144, 8147, 8150, 8155, 8160, 8172, 8178, 8180, 8182, 8188, 8255, 8256, 8319, 8319, 8400, 8412, 8417, 8417, 8450, 8450, 8455, 8455, 8458, 8467, 8469, 8469, 8473, 8477, 8484, 8484, 8486, 8486, 8488, 8488, 8490, 8493, 8495, 8497, 8499, 8505, 8544, 8579, 12293, 12295, 12321, 12335, 12337, 12341, 12344, 12346, 12353, 12436, 12441, 12442, 12445, 12446, 12449, 12542, 12549, 12588, 12593, 12686, 12704, 12727, 13312, 19893, 19968, 40869, 40960, 42124, 44032, 55203, 63744, 64045, 64256, 64262, 64275, 64279, 64285, 64296, 64298, 64310, 64312, 64316, 64318, 64318, 64320, 64321, 64323, 64324, 64326, 64433, 64467, 64829, 64848, 64911, 64914, 64967, 65008, 65019, 65056, 65059, 65075, 65076, 65101, 65103, 65136, 65138, 65140, 65140, 65142, 65276, 65296, 65305, 65313, 65338, 65343, 65343, 65345, 65370, 65381, 65470, 65474, 65479, 65482, 65487, 65490, 65495, 65498, 65500 ];
   var o = [ 170, 170, 181, 181, 186, 186, 192, 214, 216, 246, 248, 705, 710, 721, 736, 740, 748, 748, 750, 750, 880, 884, 886, 887, 890, 893, 902, 902, 904, 906, 908, 908, 910, 929, 931, 1013, 1015, 1153, 1162, 1319, 1329, 1366, 1369, 1369, 1377, 1415, 1488, 1514, 1520, 1522, 1568, 1610, 1646, 1647, 1649, 1747, 1749, 1749, 1765, 1766, 1774, 1775, 1786, 1788, 1791, 1791, 1808, 1808, 1810, 1839, 1869, 1957, 1969, 1969, 1994, 2026, 2036, 2037, 2042, 2042, 2048, 2069, 2074, 2074, 2084, 2084, 2088, 2088, 2112, 2136, 2208, 2208, 2210, 2220, 2308, 2361, 2365, 2365, 2384, 2384, 2392, 2401, 2417, 2423, 2425, 2431, 2437, 2444, 2447, 2448, 2451, 2472, 2474, 2480, 2482, 2482, 2486, 2489, 2493, 2493, 2510, 2510, 2524, 2525, 2527, 2529, 2544, 2545, 2565, 2570, 2575, 2576, 2579, 2600, 2602, 2608, 2610, 2611, 2613, 2614, 2616, 2617, 2649, 2652, 2654, 2654, 2674, 2676, 2693, 2701, 2703, 2705, 2707, 2728, 2730, 2736, 2738, 2739, 2741, 2745, 2749, 2749, 2768, 2768, 2784, 2785, 2821, 2828, 2831, 2832, 2835, 2856, 2858, 2864, 2866, 2867, 2869, 2873, 2877, 2877, 2908, 2909, 2911, 2913, 2929, 2929, 2947, 2947, 2949, 2954, 2958, 2960, 2962, 2965, 2969, 2970, 2972, 2972, 2974, 2975, 2979, 2980, 2984, 2986, 2990, 3001, 3024, 3024, 3077, 3084, 3086, 3088, 3090, 3112, 3114, 3123, 3125, 3129, 3133, 3133, 3160, 3161, 3168, 3169, 3205, 3212, 3214, 3216, 3218, 3240, 3242, 3251, 3253, 3257, 3261, 3261, 3294, 3294, 3296, 3297, 3313, 3314, 3333, 3340, 3342, 3344, 3346, 3386, 3389, 3389, 3406, 3406, 3424, 3425, 3450, 3455, 3461, 3478, 3482, 3505, 3507, 3515, 3517, 3517, 3520, 3526, 3585, 3632, 3634, 3635, 3648, 3654, 3713, 3714, 3716, 3716, 3719, 3720, 3722, 3722, 3725, 3725, 3732, 3735, 3737, 3743, 3745, 3747, 3749, 3749, 3751, 3751, 3754, 3755, 3757, 3760, 3762, 3763, 3773, 3773, 3776, 3780, 3782, 3782, 3804, 3807, 3840, 3840, 3904, 3911, 3913, 3948, 3976, 3980, 4096, 4138, 4159, 4159, 4176, 4181, 4186, 4189, 4193, 4193, 4197, 4198, 4206, 4208, 4213, 4225, 4238, 4238, 4256, 4293, 4295, 4295, 4301, 4301, 4304, 4346, 4348, 4680, 4682, 4685, 4688, 4694, 4696, 4696, 4698, 4701, 4704, 4744, 4746, 4749, 4752, 4784, 4786, 4789, 4792, 4798, 4800, 4800, 4802, 4805, 4808, 4822, 4824, 4880, 4882, 4885, 4888, 4954, 4992, 5007, 5024, 5108, 5121, 5740, 5743, 5759, 5761, 5786, 5792, 5866, 5870, 5872, 5888, 5900, 5902, 5905, 5920, 5937, 5952, 5969, 5984, 5996, 5998, 6e3, 6016, 6067, 6103, 6103, 6108, 6108, 6176, 6263, 6272, 6312, 6314, 6314, 6320, 6389, 6400, 6428, 6480, 6509, 6512, 6516, 6528, 6571, 6593, 6599, 6656, 6678, 6688, 6740, 6823, 6823, 6917, 6963, 6981, 6987, 7043, 7072, 7086, 7087, 7098, 7141, 7168, 7203, 7245, 7247, 7258, 7293, 7401, 7404, 7406, 7409, 7413, 7414, 7424, 7615, 7680, 7957, 7960, 7965, 7968, 8005, 8008, 8013, 8016, 8023, 8025, 8025, 8027, 8027, 8029, 8029, 8031, 8061, 8064, 8116, 8118, 8124, 8126, 8126, 8130, 8132, 8134, 8140, 8144, 8147, 8150, 8155, 8160, 8172, 8178, 8180, 8182, 8188, 8305, 8305, 8319, 8319, 8336, 8348, 8450, 8450, 8455, 8455, 8458, 8467, 8469, 8469, 8473, 8477, 8484, 8484, 8486, 8486, 8488, 8488, 8490, 8493, 8495, 8505, 8508, 8511, 8517, 8521, 8526, 8526, 8544, 8584, 11264, 11310, 11312, 11358, 11360, 11492, 11499, 11502, 11506, 11507, 11520, 11557, 11559, 11559, 11565, 11565, 11568, 11623, 11631, 11631, 11648, 11670, 11680, 11686, 11688, 11694, 11696, 11702, 11704, 11710, 11712, 11718, 11720, 11726, 11728, 11734, 11736, 11742, 11823, 11823, 12293, 12295, 12321, 12329, 12337, 12341, 12344, 12348, 12353, 12438, 12445, 12447, 12449, 12538, 12540, 12543, 12549, 12589, 12593, 12686, 12704, 12730, 12784, 12799, 13312, 19893, 19968, 40908, 40960, 42124, 42192, 42237, 42240, 42508, 42512, 42527, 42538, 42539, 42560, 42606, 42623, 42647, 42656, 42735, 42775, 42783, 42786, 42888, 42891, 42894, 42896, 42899, 42912, 42922, 43e3, 43009, 43011, 43013, 43015, 43018, 43020, 43042, 43072, 43123, 43138, 43187, 43250, 43255, 43259, 43259, 43274, 43301, 43312, 43334, 43360, 43388, 43396, 43442, 43471, 43471, 43520, 43560, 43584, 43586, 43588, 43595, 43616, 43638, 43642, 43642, 43648, 43695, 43697, 43697, 43701, 43702, 43705, 43709, 43712, 43712, 43714, 43714, 43739, 43741, 43744, 43754, 43762, 43764, 43777, 43782, 43785, 43790, 43793, 43798, 43808, 43814, 43816, 43822, 43968, 44002, 44032, 55203, 55216, 55238, 55243, 55291, 63744, 64109, 64112, 64217, 64256, 64262, 64275, 64279, 64285, 64285, 64287, 64296, 64298, 64310, 64312, 64316, 64318, 64318, 64320, 64321, 64323, 64324, 64326, 64433, 64467, 64829, 64848, 64911, 64914, 64967, 65008, 65019, 65136, 65140, 65142, 65276, 65313, 65338, 65345, 65370, 65382, 65470, 65474, 65479, 65482, 65487, 65490, 65495, 65498, 65500 ];
   var s = [ 170, 170, 181, 181, 186, 186, 192, 214, 216, 246, 248, 705, 710, 721, 736, 740, 748, 748, 750, 750, 768, 884, 886, 887, 890, 893, 902, 902, 904, 906, 908, 908, 910, 929, 931, 1013, 1015, 1153, 1155, 1159, 1162, 1319, 1329, 1366, 1369, 1369, 1377, 1415, 1425, 1469, 1471, 1471, 1473, 1474, 1476, 1477, 1479, 1479, 1488, 1514, 1520, 1522, 1552, 1562, 1568, 1641, 1646, 1747, 1749, 1756, 1759, 1768, 1770, 1788, 1791, 1791, 1808, 1866, 1869, 1969, 1984, 2037, 2042, 2042, 2048, 2093, 2112, 2139, 2208, 2208, 2210, 2220, 2276, 2302, 2304, 2403, 2406, 2415, 2417, 2423, 2425, 2431, 2433, 2435, 2437, 2444, 2447, 2448, 2451, 2472, 2474, 2480, 2482, 2482, 2486, 2489, 2492, 2500, 2503, 2504, 2507, 2510, 2519, 2519, 2524, 2525, 2527, 2531, 2534, 2545, 2561, 2563, 2565, 2570, 2575, 2576, 2579, 2600, 2602, 2608, 2610, 2611, 2613, 2614, 2616, 2617, 2620, 2620, 2622, 2626, 2631, 2632, 2635, 2637, 2641, 2641, 2649, 2652, 2654, 2654, 2662, 2677, 2689, 2691, 2693, 2701, 2703, 2705, 2707, 2728, 2730, 2736, 2738, 2739, 2741, 2745, 2748, 2757, 2759, 2761, 2763, 2765, 2768, 2768, 2784, 2787, 2790, 2799, 2817, 2819, 2821, 2828, 2831, 2832, 2835, 2856, 2858, 2864, 2866, 2867, 2869, 2873, 2876, 2884, 2887, 2888, 2891, 2893, 2902, 2903, 2908, 2909, 2911, 2915, 2918, 2927, 2929, 2929, 2946, 2947, 2949, 2954, 2958, 2960, 2962, 2965, 2969, 2970, 2972, 2972, 2974, 2975, 2979, 2980, 2984, 2986, 2990, 3001, 3006, 3010, 3014, 3016, 3018, 3021, 3024, 3024, 3031, 3031, 3046, 3055, 3073, 3075, 3077, 3084, 3086, 3088, 3090, 3112, 3114, 3123, 3125, 3129, 3133, 3140, 3142, 3144, 3146, 3149, 3157, 3158, 3160, 3161, 3168, 3171, 3174, 3183, 3202, 3203, 3205, 3212, 3214, 3216, 3218, 3240, 3242, 3251, 3253, 3257, 3260, 3268, 3270, 3272, 3274, 3277, 3285, 3286, 3294, 3294, 3296, 3299, 3302, 3311, 3313, 3314, 3330, 3331, 3333, 3340, 3342, 3344, 3346, 3386, 3389, 3396, 3398, 3400, 3402, 3406, 3415, 3415, 3424, 3427, 3430, 3439, 3450, 3455, 3458, 3459, 3461, 3478, 3482, 3505, 3507, 3515, 3517, 3517, 3520, 3526, 3530, 3530, 3535, 3540, 3542, 3542, 3544, 3551, 3570, 3571, 3585, 3642, 3648, 3662, 3664, 3673, 3713, 3714, 3716, 3716, 3719, 3720, 3722, 3722, 3725, 3725, 3732, 3735, 3737, 3743, 3745, 3747, 3749, 3749, 3751, 3751, 3754, 3755, 3757, 3769, 3771, 3773, 3776, 3780, 3782, 3782, 3784, 3789, 3792, 3801, 3804, 3807, 3840, 3840, 3864, 3865, 3872, 3881, 3893, 3893, 3895, 3895, 3897, 3897, 3902, 3911, 3913, 3948, 3953, 3972, 3974, 3991, 3993, 4028, 4038, 4038, 4096, 4169, 4176, 4253, 4256, 4293, 4295, 4295, 4301, 4301, 4304, 4346, 4348, 4680, 4682, 4685, 4688, 4694, 4696, 4696, 4698, 4701, 4704, 4744, 4746, 4749, 4752, 4784, 4786, 4789, 4792, 4798, 4800, 4800, 4802, 4805, 4808, 4822, 4824, 4880, 4882, 4885, 4888, 4954, 4957, 4959, 4992, 5007, 5024, 5108, 5121, 5740, 5743, 5759, 5761, 5786, 5792, 5866, 5870, 5872, 5888, 5900, 5902, 5908, 5920, 5940, 5952, 5971, 5984, 5996, 5998, 6e3, 6002, 6003, 6016, 6099, 6103, 6103, 6108, 6109, 6112, 6121, 6155, 6157, 6160, 6169, 6176, 6263, 6272, 6314, 6320, 6389, 6400, 6428, 6432, 6443, 6448, 6459, 6470, 6509, 6512, 6516, 6528, 6571, 6576, 6601, 6608, 6617, 6656, 6683, 6688, 6750, 6752, 6780, 6783, 6793, 6800, 6809, 6823, 6823, 6912, 6987, 6992, 7001, 7019, 7027, 7040, 7155, 7168, 7223, 7232, 7241, 7245, 7293, 7376, 7378, 7380, 7414, 7424, 7654, 7676, 7957, 7960, 7965, 7968, 8005, 8008, 8013, 8016, 8023, 8025, 8025, 8027, 8027, 8029, 8029, 8031, 8061, 8064, 8116, 8118, 8124, 8126, 8126, 8130, 8132, 8134, 8140, 8144, 8147, 8150, 8155, 8160, 8172, 8178, 8180, 8182, 8188, 8204, 8205, 8255, 8256, 8276, 8276, 8305, 8305, 8319, 8319, 8336, 8348, 8400, 8412, 8417, 8417, 8421, 8432, 8450, 8450, 8455, 8455, 8458, 8467, 8469, 8469, 8473, 8477, 8484, 8484, 8486, 8486, 8488, 8488, 8490, 8493, 8495, 8505, 8508, 8511, 8517, 8521, 8526, 8526, 8544, 8584, 11264, 11310, 11312, 11358, 11360, 11492, 11499, 11507, 11520, 11557, 11559, 11559, 11565, 11565, 11568, 11623, 11631, 11631, 11647, 11670, 11680, 11686, 11688, 11694, 11696, 11702, 11704, 11710, 11712, 11718, 11720, 11726, 11728, 11734, 11736, 11742, 11744, 11775, 11823, 11823, 12293, 12295, 12321, 12335, 12337, 12341, 12344, 12348, 12353, 12438, 12441, 12442, 12445, 12447, 12449, 12538, 12540, 12543, 12549, 12589, 12593, 12686, 12704, 12730, 12784, 12799, 13312, 19893, 19968, 40908, 40960, 42124, 42192, 42237, 42240, 42508, 42512, 42539, 42560, 42607, 42612, 42621, 42623, 42647, 42655, 42737, 42775, 42783, 42786, 42888, 42891, 42894, 42896, 42899, 42912, 42922, 43e3, 43047, 43072, 43123, 43136, 43204, 43216, 43225, 43232, 43255, 43259, 43259, 43264, 43309, 43312, 43347, 43360, 43388, 43392, 43456, 43471, 43481, 43520, 43574, 43584, 43597, 43600, 43609, 43616, 43638, 43642, 43643, 43648, 43714, 43739, 43741, 43744, 43759, 43762, 43766, 43777, 43782, 43785, 43790, 43793, 43798, 43808, 43814, 43816, 43822, 43968, 44010, 44012, 44013, 44016, 44025, 44032, 55203, 55216, 55238, 55243, 55291, 63744, 64109, 64112, 64217, 64256, 64262, 64275, 64279, 64285, 64296, 64298, 64310, 64312, 64316, 64318, 64318, 64320, 64321, 64323, 64324, 64326, 64433, 64467, 64829, 64848, 64911, 64914, 64967, 65008, 65019, 65024, 65039, 65056, 65062, 65075, 65076, 65101, 65103, 65136, 65140, 65142, 65276, 65296, 65305, 65313, 65338, 65343, 65343, 65345, 65370, 65382, 65470, 65474, 65479, 65482, 65487, 65490, 65495, 65498, 65500 ];
   function c(e, t) {
    if (e < t[0]) {
     return false;
    }
    var n = 0;
    var r = t.length;
    var i;
    while (n + 1 < r) {
     i = n + (r - n) / 2;
     i -= i % 2;
     if (t[i] <= e && e <= t[i + 1]) {
      return true;
     }
     if (e < t[i]) {
      r = i;
     } else {
      n = i + 2;
     }
    }
    return false;
   }
   function u(e, t) {
    return t >= 1 ? c(e, o) : c(e, i);
   }
   e.isUnicodeIdentifierStart = u;
   function l(e, t) {
    return t >= 1 ? c(e, s) : c(e, a);
   }
   function f(e) {
    var t = [];
    e.forEach(function(e, n) {
     t[e] = n;
    });
    return t;
   }
   var d = f(r);
   function p(e) {
    return d[e];
   }
   e.tokenToString = p;
   function m(e) {
    return r.get(e);
   }
   e.stringToToken = m;
   function _(e) {
    var t = new Array();
    var n = 0;
    var r = 0;
    while (n < e.length) {
     var i = e.charCodeAt(n);
     n++;
     switch (i) {
     case 13:
      if (e.charCodeAt(n) === 10) {
       n++;
      }

     case 10:
      t.push(r);
      r = n;
      break;

     default:
      if (i > 127 && S(i)) {
       t.push(r);
       r = n;
      }
      break;
     }
    }
    t.push(r);
    return t;
   }
   e.computeLineStarts = _;
   function g(e, t, n) {
    return h(v(e), t, n, e.text);
   }
   e.getPositionOfLineAndCharacter = g;
   function h(t, n, r, i) {
    if (n < 0 || n >= t.length) {
     e.Debug.fail("Bad line number. Line: " + n + ", lineStarts.length: " + t.length + " , line map is correct? " + (i !== undefined ? e.arraysEqual(t, _(i)) : "unknown"));
    }
    var a = t[n] + r;
    if (n < t.length - 1) {
     e.Debug.assert(a < t[n + 1]);
    } else if (i !== undefined) {
     e.Debug.assert(a <= i.length);
    }
    return a;
   }
   e.computePositionOfLineAndCharacter = h;
   function v(e) {
    return e.lineMap || (e.lineMap = _(e.text));
   }
   e.getLineStarts = v;
   function y(t, n) {
    var r = e.binarySearch(t, n, e.identity, e.compareValues);
    if (r < 0) {
     r = ~r - 1;
     e.Debug.assert(r !== -1, "position cannot precede the beginning of the file");
    }
    return {
     line: r,
     character: n - t[r]
    };
   }
   e.computeLineAndCharacterOfPosition = y;
   function b(e, t) {
    return y(v(e), t);
   }
   e.getLineAndCharacterOfPosition = b;
   function x(e) {
    return k(e) || S(e);
   }
   e.isWhiteSpaceLike = x;
   function k(e) {
    return e === 32 || e === 9 || e === 11 || e === 12 || e === 160 || e === 133 || e === 5760 || e >= 8192 && e <= 8203 || e === 8239 || e === 8287 || e === 12288 || e === 65279;
   }
   e.isWhiteSpaceSingleLine = k;
   function S(e) {
    return e === 10 || e === 13 || e === 8232 || e === 8233;
   }
   e.isLineBreak = S;
   function w(e) {
    return e >= 48 && e <= 57;
   }
   function C(e) {
    return e >= 48 && e <= 55;
   }
   e.isOctalDigit = C;
   function D(e, t) {
    var n = e.charCodeAt(t);
    switch (n) {
    case 13:
    case 10:
    case 9:
    case 11:
    case 12:
    case 32:
    case 47:
    case 60:
    case 124:
    case 61:
    case 62:
     return true;

    case 35:
     return t === 0;

    default:
     return n > 127;
    }
   }
   e.couldStartTrivia = D;
   function T(t, n, r, i) {
    if (i === void 0) {
     i = false;
    }
    if (e.positionIsSynthesized(n)) {
     return n;
    }
    while (true) {
     var a = t.charCodeAt(n);
     switch (a) {
     case 13:
      if (t.charCodeAt(n + 1) === 10) {
       n++;
      }

     case 10:
      n++;
      if (r) {
       return n;
      }
      continue;

     case 9:
     case 11:
     case 12:
     case 32:
      n++;
      continue;

     case 47:
      if (i) {
       break;
      }
      if (t.charCodeAt(n + 1) === 47) {
       n += 2;
       while (n < t.length) {
        if (S(t.charCodeAt(n))) {
         break;
        }
        n++;
       }
       continue;
      }
      if (t.charCodeAt(n + 1) === 42) {
       n += 2;
       while (n < t.length) {
        if (t.charCodeAt(n) === 42 && t.charCodeAt(n + 1) === 47) {
         n += 2;
         break;
        }
        n++;
       }
       continue;
      }
      break;

     case 60:
     case 124:
     case 61:
     case 62:
      if (N(t, n)) {
       n = A(t, n);
       continue;
      }
      break;

     case 35:
      if (n === 0 && P(t, n)) {
       n = I(t, n);
       continue;
      }
      break;

     default:
      if (a > 127 && x(a)) {
       n++;
       continue;
      }
      break;
     }
     return n;
    }
   }
   e.skipTrivia = T;
   var E = "<<<<<<<".length;
   function N(t, n) {
    e.Debug.assert(n >= 0);
    if (n === 0 || S(t.charCodeAt(n - 1))) {
     var r = t.charCodeAt(n);
     if (n + E < t.length) {
      for (var i = 0; i < E; i++) {
       if (t.charCodeAt(n + i) !== r) {
        return false;
       }
      }
      return r === 61 || t.charCodeAt(n + E) === 32;
     }
    }
    return false;
   }
   function A(t, n, r) {
    if (r) {
     r(e.Diagnostics.Merge_conflict_marker_encountered, n, E);
    }
    var i = t.charCodeAt(n);
    var a = t.length;
    if (i === 60 || i === 62) {
     while (n < a && !S(t.charCodeAt(n))) {
      n++;
     }
    } else {
     e.Debug.assert(i === 124 || i === 61);
     while (n < a) {
      var o = t.charCodeAt(n);
      if ((o === 61 || o === 62) && o !== i && N(t, n)) {
       break;
      }
      n++;
     }
    }
    return n;
   }
   var F = /^#!.*/;
   function P(t, n) {
    e.Debug.assert(n === 0);
    return F.test(t);
   }
   function I(e, t) {
    var n = F.exec(e)[0];
    t = t + n.length;
    return t;
   }
   function O(e, t, n, r, i, a, o) {
    var s;
    var c;
    var u;
    var l;
    var f = false;
    var d = r || n === 0;
    var p = o;
    e: while (n >= 0 && n < t.length) {
     var m = t.charCodeAt(n);
     switch (m) {
     case 13:
      if (t.charCodeAt(n + 1) === 10) {
       n++;
      }

     case 10:
      n++;
      if (r) {
       break e;
      }
      d = true;
      if (f) {
       l = true;
      }
      continue;

     case 9:
     case 11:
     case 12:
     case 32:
      n++;
      continue;

     case 47:
      var _ = t.charCodeAt(n + 1);
      var g = false;
      if (_ === 47 || _ === 42) {
       var h = _ === 47 ? 2 : 3;
       var v = n;
       n += 2;
       if (_ === 47) {
        while (n < t.length) {
         if (S(t.charCodeAt(n))) {
          g = true;
          break;
         }
         n++;
        }
       } else {
        while (n < t.length) {
         if (t.charCodeAt(n) === 42 && t.charCodeAt(n + 1) === 47) {
          n += 2;
          break;
         }
         n++;
        }
       }
       if (d) {
        if (f) {
         p = i(s, c, u, l, a, p);
         if (!e && p) {
          return p;
         }
        }
        s = v;
        c = n;
        u = h;
        l = g;
        f = true;
       }
       continue;
      }
      break e;

     default:
      if (m > 127 && x(m)) {
       if (f && S(m)) {
        l = true;
       }
       n++;
       continue;
      }
      break e;
     }
    }
    if (f) {
     p = i(s, c, u, l, a, p);
    }
    return p;
   }
   function M(e, t, n, r) {
    return O(false, e, t, false, n, r);
   }
   e.forEachLeadingCommentRange = M;
   function L(e, t, n, r) {
    return O(false, e, t, true, n, r);
   }
   e.forEachTrailingCommentRange = L;
   function R(e, t, n, r, i) {
    return O(true, e, t, false, n, r, i);
   }
   e.reduceEachLeadingCommentRange = R;
   function B(e, t, n, r, i) {
    return O(true, e, t, true, n, r, i);
   }
   e.reduceEachTrailingCommentRange = B;
   function z(e, t, n, r, i, a) {
    if (!a) {
     a = [];
    }
    a.push({
     kind: n,
     pos: e,
     end: t,
     hasTrailingNewLine: r
    });
    return a;
   }
   function j(e, t) {
    return R(e, t, z, undefined, undefined);
   }
   e.getLeadingCommentRanges = j;
   function q(e, t) {
    return B(e, t, z, undefined, undefined);
   }
   e.getTrailingCommentRanges = q;
   function U(e) {
    var t = F.exec(e);
    if (t) {
     return t[0];
    }
   }
   e.getShebang = U;
   function J(e, t) {
    return e >= 65 && e <= 90 || e >= 97 && e <= 122 || e === 36 || e === 95 || e > 127 && u(e, t);
   }
   e.isIdentifierStart = J;
   function K(e, t) {
    return e >= 65 && e <= 90 || e >= 97 && e <= 122 || e >= 48 && e <= 57 || e === 36 || e === 95 || e > 127 && l(e, t);
   }
   e.isIdentifierPart = K;
   function V(e, t) {
    if (!J(e.charCodeAt(0), t)) {
     return false;
    }
    for (var n = 1; n < e.length; n++) {
     if (!K(e.charCodeAt(n), t)) {
      return false;
     }
    }
    return true;
   }
   e.isIdentifierText = V;
   function W(n, i, a, o, s, c, u) {
    if (a === void 0) {
     a = 0;
    }
    var l = o;
    var f;
    var d;
    var p;
    var m;
    var _;
    var g;
    var h;
    oe(l, c, u);
    return {
     getStartPos: function() {
      return p;
     },
     getTextPos: function() {
      return f;
     },
     getToken: function() {
      return _;
     },
     getTokenPos: function() {
      return m;
     },
     getTokenText: function() {
      return l.substring(m, f);
     },
     getTokenValue: function() {
      return g;
     },
     hasExtendedUnicodeEscape: function() {
      return (h & 8) !== 0;
     },
     hasPrecedingLineBreak: function() {
      return (h & 1) !== 0;
     },
     isIdentifier: function() {
      return _ === 71 || _ > 107;
     },
     isReservedWord: function() {
      return _ >= 72 && _ <= 107;
     },
     isUnterminated: function() {
      return (h & 4) !== 0;
     },
     getTokenFlags: function() {
      return h;
     },
     reScanGreaterToken: H,
     reScanSlashToken: G,
     reScanTemplateToken: $,
     scanJsxIdentifier: Y,
     scanJsxAttributeValue: Z,
     reScanJsxToken: X,
     scanJsxToken: Q,
     scanJSDocToken: ee,
     scan: W,
     getText: ae,
     setText: oe,
     setScriptTarget: ce,
     setLanguageVariant: ue,
     setOnError: se,
     setTextPos: le,
     tryScan: ie,
     lookAhead: re,
     scanRange: ne
    };
    function v(e, t, n) {
     if (t === void 0) {
      t = f;
     }
     if (s) {
      var r = f;
      f = t;
      s(e, n || 0);
      f = r;
     }
    }
    function y() {
     var t = f;
     var n = false;
     var r = false;
     var i = "";
     while (true) {
      var a = l.charCodeAt(f);
      if (a === 95) {
       h |= 512;
       if (n) {
        n = false;
        r = true;
        i += l.substring(t, f);
       } else if (r) {
        v(e.Diagnostics.Multiple_consecutive_numeric_separators_are_not_permitted, f, 1);
       } else {
        v(e.Diagnostics.Numeric_separators_are_not_allowed_here, f, 1);
       }
       f++;
       t = f;
       continue;
      }
      if (w(a)) {
       n = true;
       r = false;
       f++;
       continue;
      }
      break;
     }
     if (l.charCodeAt(f - 1) === 95) {
      v(e.Diagnostics.Numeric_separators_are_not_allowed_here, f - 1, 1);
     }
     return i + l.substring(t, f);
    }
    function b() {
     var t = f;
     var n = y();
     var r;
     var i;
     if (l.charCodeAt(f) === 46) {
      f++;
      r = y();
     }
     var a = f;
     if (l.charCodeAt(f) === 69 || l.charCodeAt(f) === 101) {
      f++;
      h |= 16;
      if (l.charCodeAt(f) === 43 || l.charCodeAt(f) === 45) f++;
      var o = f;
      var s = y();
      if (!s) {
       v(e.Diagnostics.Digit_expected);
      } else {
       i = l.substring(a, o) + s;
       a = f;
      }
     }
     if (h & 512) {
      var c = n;
      if (r) {
       c += "." + r;
      }
      if (i) {
       c += i;
      }
      return "" + +c;
     } else {
      return "" + +l.substring(t, a);
     }
    }
    function D() {
     var e = f;
     while (C(l.charCodeAt(f))) {
      f++;
     }
     return +l.substring(e, f);
    }
    function T(e, t) {
     return F(e, false, t);
    }
    function E(e, t) {
     return F(e, true, t);
    }
    function F(t, n, r) {
     var i = 0;
     var a = 0;
     var o = false;
     var s = false;
     while (i < t || n) {
      var c = l.charCodeAt(f);
      if (r && c === 95) {
       h |= 512;
       if (o) {
        o = false;
        s = true;
       } else if (s) {
        v(e.Diagnostics.Multiple_consecutive_numeric_separators_are_not_permitted, f, 1);
       } else {
        v(e.Diagnostics.Numeric_separators_are_not_allowed_here, f, 1);
       }
       f++;
       continue;
      }
      o = r;
      if (c >= 48 && c <= 57) {
       a = a * 16 + c - 48;
      } else if (c >= 65 && c <= 70) {
       a = a * 16 + c - 65 + 10;
      } else if (c >= 97 && c <= 102) {
       a = a * 16 + c - 97 + 10;
      } else {
       break;
      }
      f++;
      i++;
      s = false;
     }
     if (i < t) {
      a = -1;
     }
     if (l.charCodeAt(f - 1) === 95) {
      v(e.Diagnostics.Numeric_separators_are_not_allowed_here, f - 1, 1);
     }
     return a;
    }
    function O(t) {
     if (t === void 0) {
      t = false;
     }
     var n = l.charCodeAt(f);
     f++;
     var r = "";
     var i = f;
     while (true) {
      if (f >= d) {
       r += l.substring(i, f);
       h |= 4;
       v(e.Diagnostics.Unterminated_string_literal);
       break;
      }
      var a = l.charCodeAt(f);
      if (a === n) {
       r += l.substring(i, f);
       f++;
       break;
      }
      if (a === 92 && !t) {
       r += l.substring(i, f);
       r += L();
       i = f;
       continue;
      }
      if (S(a) && !t) {
       r += l.substring(i, f);
       h |= 4;
       v(e.Diagnostics.Unterminated_string_literal);
       break;
      }
      f++;
     }
     return r;
    }
    function M() {
     var t = l.charCodeAt(f) === 96;
     f++;
     var n = f;
     var r = "";
     var i;
     while (true) {
      if (f >= d) {
       r += l.substring(n, f);
       h |= 4;
       v(e.Diagnostics.Unterminated_template_literal);
       i = t ? 13 : 16;
       break;
      }
      var a = l.charCodeAt(f);
      if (a === 96) {
       r += l.substring(n, f);
       f++;
       i = t ? 13 : 16;
       break;
      }
      if (a === 36 && f + 1 < d && l.charCodeAt(f + 1) === 123) {
       r += l.substring(n, f);
       f += 2;
       i = t ? 14 : 15;
       break;
      }
      if (a === 92) {
       r += l.substring(n, f);
       r += L();
       n = f;
       continue;
      }
      if (a === 13) {
       r += l.substring(n, f);
       f++;
       if (f < d && l.charCodeAt(f) === 10) {
        f++;
       }
       r += "\n";
       n = f;
       continue;
      }
      f++;
     }
     e.Debug.assert(i !== undefined);
     g = r;
     return i;
    }
    function L() {
     f++;
     if (f >= d) {
      v(e.Diagnostics.Unexpected_end_of_text);
      return "";
     }
     var t = l.charCodeAt(f);
     f++;
     switch (t) {
     case 48:
      return "\0";

     case 98:
      return "\b";

     case 116:
      return "\t";

     case 110:
      return "\n";

     case 118:
      return "\v";

     case 102:
      return "\f";

     case 114:
      return "\r";

     case 39:
      return "'";

     case 34:
      return '"';

     case 117:
      if (f < d && l.charCodeAt(f) === 123) {
       h |= 8;
       f++;
       return B();
      }
      return R(4);

     case 120:
      return R(2);

     case 13:
      if (f < d && l.charCodeAt(f) === 10) {
       f++;
      }

     case 10:
     case 8232:
     case 8233:
      return "";

     default:
      return String.fromCharCode(t);
     }
    }
    function R(t) {
     var n = T(t, false);
     if (n >= 0) {
      return String.fromCharCode(n);
     } else {
      v(e.Diagnostics.Hexadecimal_digit_expected);
      return "";
     }
    }
    function B() {
     var t = E(1, false);
     var n = false;
     if (t < 0) {
      v(e.Diagnostics.Hexadecimal_digit_expected);
      n = true;
     } else if (t > 1114111) {
      v(e.Diagnostics.An_extended_Unicode_escape_value_must_be_between_0x0_and_0x10FFFF_inclusive);
      n = true;
     }
     if (f >= d) {
      v(e.Diagnostics.Unexpected_end_of_text);
      n = true;
     } else if (l.charCodeAt(f) === 125) {
      f++;
     } else {
      v(e.Diagnostics.Unterminated_Unicode_escape_sequence);
      n = true;
     }
     if (n) {
      return "";
     }
     return z(t);
    }
    function z(t) {
     e.Debug.assert(0 <= t && t <= 1114111);
     if (t <= 65535) {
      return String.fromCharCode(t);
     }
     var n = Math.floor((t - 65536) / 1024) + 55296;
     var r = (t - 65536) % 1024 + 56320;
     return String.fromCharCode(n, r);
    }
    function j() {
     if (f + 5 < d && l.charCodeAt(f + 1) === 117) {
      var e = f;
      f += 2;
      var t = T(4, false);
      f = e;
      return t;
     }
     return -1;
    }
    function q() {
     var e = "";
     var t = f;
     while (f < d) {
      var r = l.charCodeAt(f);
      if (K(r, n)) {
       f++;
      } else if (r === 92) {
       r = j();
       if (!(r >= 0 && K(r, n))) {
        break;
       }
       e += l.substring(t, f);
       e += String.fromCharCode(r);
       f += 6;
       t = f;
      } else {
       break;
      }
     }
     e += l.substring(t, f);
     return e;
    }
    function U() {
     var e = g.length;
     if (e >= 2 && e <= 11) {
      var t = g.charCodeAt(0);
      if (t >= 97 && t <= 122) {
       _ = r.get(g);
       if (_ !== undefined) {
        return _;
       }
      }
     }
     return _ = 71;
    }
    function V(t) {
     e.Debug.assert(t === 2 || t === 8, "Expected either base 2 or base 8");
     var n = 0;
     var r = 0;
     var i = false;
     var a = false;
     while (true) {
      var o = l.charCodeAt(f);
      if (o === 95) {
       h |= 512;
       if (i) {
        i = false;
        a = true;
       } else if (a) {
        v(e.Diagnostics.Multiple_consecutive_numeric_separators_are_not_permitted, f, 1);
       } else {
        v(e.Diagnostics.Numeric_separators_are_not_allowed_here, f, 1);
       }
       f++;
       continue;
      }
      i = true;
      var s = o - 48;
      if (!w(o) || s >= t) {
       break;
      }
      n = n * t + s;
      f++;
      r++;
      a = false;
     }
     if (r === 0) {
      return -1;
     }
     if (l.charCodeAt(f - 1) === 95) {
      v(e.Diagnostics.Numeric_separators_are_not_allowed_here, f - 1, 1);
      return n;
     }
     return n;
    }
    function W() {
     p = f;
     h = 0;
     while (true) {
      m = f;
      if (f >= d) {
       return _ = 1;
      }
      var t = l.charCodeAt(f);
      if (t === 35 && f === 0 && P(l, f)) {
       f = I(l, f);
       if (i) {
        continue;
       } else {
        return _ = 6;
       }
      }
      switch (t) {
      case 10:
      case 13:
       h |= 1;
       if (i) {
        f++;
        continue;
       } else {
        if (t === 13 && f + 1 < d && l.charCodeAt(f + 1) === 10) {
         f += 2;
        } else {
         f++;
        }
        return _ = 4;
       }

      case 9:
      case 11:
      case 12:
      case 32:
       if (i) {
        f++;
        continue;
       } else {
        while (f < d && k(l.charCodeAt(f))) {
         f++;
        }
        return _ = 5;
       }

      case 33:
       if (l.charCodeAt(f + 1) === 61) {
        if (l.charCodeAt(f + 2) === 61) {
         return f += 3, _ = 35;
        }
        return f += 2, _ = 33;
       }
       f++;
       return _ = 51;

      case 34:
      case 39:
       g = O();
       return _ = 9;

      case 96:
       return _ = M();

      case 37:
       if (l.charCodeAt(f + 1) === 61) {
        return f += 2, _ = 64;
       }
       f++;
       return _ = 42;

      case 38:
       if (l.charCodeAt(f + 1) === 38) {
        return f += 2, _ = 53;
       }
       if (l.charCodeAt(f + 1) === 61) {
        return f += 2, _ = 68;
       }
       f++;
       return _ = 48;

      case 40:
       f++;
       return _ = 19;

      case 41:
       f++;
       return _ = 20;

      case 42:
       if (l.charCodeAt(f + 1) === 61) {
        return f += 2, _ = 61;
       }
       if (l.charCodeAt(f + 1) === 42) {
        if (l.charCodeAt(f + 2) === 61) {
         return f += 3, _ = 62;
        }
        return f += 2, _ = 40;
       }
       f++;
       return _ = 39;

      case 43:
       if (l.charCodeAt(f + 1) === 43) {
        return f += 2, _ = 43;
       }
       if (l.charCodeAt(f + 1) === 61) {
        return f += 2, _ = 59;
       }
       f++;
       return _ = 37;

      case 44:
       f++;
       return _ = 26;

      case 45:
       if (l.charCodeAt(f + 1) === 45) {
        return f += 2, _ = 44;
       }
       if (l.charCodeAt(f + 1) === 61) {
        return f += 2, _ = 60;
       }
       f++;
       return _ = 38;

      case 46:
       if (w(l.charCodeAt(f + 1))) {
        g = b();
        return _ = 8;
       }
       if (l.charCodeAt(f + 1) === 46 && l.charCodeAt(f + 2) === 46) {
        return f += 3, _ = 24;
       }
       f++;
       return _ = 23;

      case 47:
       if (l.charCodeAt(f + 1) === 47) {
        f += 2;
        while (f < d) {
         if (S(l.charCodeAt(f))) {
          break;
         }
         f++;
        }
        if (i) {
         continue;
        } else {
         return _ = 2;
        }
       }
       if (l.charCodeAt(f + 1) === 42) {
        f += 2;
        if (l.charCodeAt(f) === 42 && l.charCodeAt(f + 1) !== 47) {
         h |= 2;
        }
        var r = false;
        while (f < d) {
         var o = l.charCodeAt(f);
         if (o === 42 && l.charCodeAt(f + 1) === 47) {
          f += 2;
          r = true;
          break;
         }
         if (S(o)) {
          h |= 1;
         }
         f++;
        }
        if (!r) {
         v(e.Diagnostics.Asterisk_Slash_expected);
        }
        if (i) {
         continue;
        } else {
         if (!r) {
          h |= 4;
         }
         return _ = 3;
        }
       }
       if (l.charCodeAt(f + 1) === 61) {
        return f += 2, _ = 63;
       }
       f++;
       return _ = 41;

      case 48:
       if (f + 2 < d && (l.charCodeAt(f + 1) === 88 || l.charCodeAt(f + 1) === 120)) {
        f += 2;
        var s = E(1, true);
        if (s < 0) {
         v(e.Diagnostics.Hexadecimal_digit_expected);
         s = 0;
        }
        g = "" + s;
        h |= 64;
        return _ = 8;
       } else if (f + 2 < d && (l.charCodeAt(f + 1) === 66 || l.charCodeAt(f + 1) === 98)) {
        f += 2;
        var s = V(2);
        if (s < 0) {
         v(e.Diagnostics.Binary_digit_expected);
         s = 0;
        }
        g = "" + s;
        h |= 128;
        return _ = 8;
       } else if (f + 2 < d && (l.charCodeAt(f + 1) === 79 || l.charCodeAt(f + 1) === 111)) {
        f += 2;
        var s = V(8);
        if (s < 0) {
         v(e.Diagnostics.Octal_digit_expected);
         s = 0;
        }
        g = "" + s;
        h |= 256;
        return _ = 8;
       }
       if (f + 1 < d && C(l.charCodeAt(f + 1))) {
        g = "" + D();
        h |= 32;
        return _ = 8;
       }

      case 49:
      case 50:
      case 51:
      case 52:
      case 53:
      case 54:
      case 55:
      case 56:
      case 57:
       g = b();
       return _ = 8;

      case 58:
       f++;
       return _ = 56;

      case 59:
       f++;
       return _ = 25;

      case 60:
       if (N(l, f)) {
        f = A(l, f, v);
        if (i) {
         continue;
        } else {
         return _ = 7;
        }
       }
       if (l.charCodeAt(f + 1) === 60) {
        if (l.charCodeAt(f + 2) === 61) {
         return f += 3, _ = 65;
        }
        return f += 2, _ = 45;
       }
       if (l.charCodeAt(f + 1) === 61) {
        return f += 2, _ = 30;
       }
       if (a === 1 && l.charCodeAt(f + 1) === 47 && l.charCodeAt(f + 2) !== 42) {
        return f += 2, _ = 28;
       }
       f++;
       return _ = 27;

      case 61:
       if (N(l, f)) {
        f = A(l, f, v);
        if (i) {
         continue;
        } else {
         return _ = 7;
        }
       }
       if (l.charCodeAt(f + 1) === 61) {
        if (l.charCodeAt(f + 2) === 61) {
         return f += 3, _ = 34;
        }
        return f += 2, _ = 32;
       }
       if (l.charCodeAt(f + 1) === 62) {
        return f += 2, _ = 36;
       }
       f++;
       return _ = 58;

      case 62:
       if (N(l, f)) {
        f = A(l, f, v);
        if (i) {
         continue;
        } else {
         return _ = 7;
        }
       }
       f++;
       return _ = 29;

      case 63:
       f++;
       return _ = 55;

      case 91:
       f++;
       return _ = 21;

      case 93:
       f++;
       return _ = 22;

      case 94:
       if (l.charCodeAt(f + 1) === 61) {
        return f += 2, _ = 70;
       }
       f++;
       return _ = 50;

      case 123:
       f++;
       return _ = 17;

      case 124:
       if (N(l, f)) {
        f = A(l, f, v);
        if (i) {
         continue;
        } else {
         return _ = 7;
        }
       }
       if (l.charCodeAt(f + 1) === 124) {
        return f += 2, _ = 54;
       }
       if (l.charCodeAt(f + 1) === 61) {
        return f += 2, _ = 69;
       }
       f++;
       return _ = 49;

      case 125:
       f++;
       return _ = 18;

      case 126:
       f++;
       return _ = 52;

      case 64:
       f++;
       return _ = 57;

      case 92:
       var c = j();
       if (c >= 0 && J(c, n)) {
        f += 6;
        g = String.fromCharCode(c) + q();
        return _ = U();
       }
       v(e.Diagnostics.Invalid_character);
       f++;
       return _ = 0;

      default:
       if (J(t, n)) {
        f++;
        while (f < d && K(t = l.charCodeAt(f), n)) f++;
        g = l.substring(m, f);
        if (t === 92) {
         g += q();
        }
        return _ = U();
       } else if (k(t)) {
        f++;
        continue;
       } else if (S(t)) {
        h |= 1;
        f++;
        continue;
       }
       v(e.Diagnostics.Invalid_character);
       f++;
       return _ = 0;
      }
     }
    }
    function H() {
     if (_ === 29) {
      if (l.charCodeAt(f) === 62) {
       if (l.charCodeAt(f + 1) === 62) {
        if (l.charCodeAt(f + 2) === 61) {
         return f += 3, _ = 67;
        }
        return f += 2, _ = 47;
       }
       if (l.charCodeAt(f + 1) === 61) {
        return f += 2, _ = 66;
       }
       f++;
       return _ = 46;
      }
      if (l.charCodeAt(f) === 61) {
       f++;
       return _ = 31;
      }
     }
     return _;
    }
    function G() {
     if (_ === 41 || _ === 63) {
      var t = m + 1;
      var r = false;
      var i = false;
      while (true) {
       if (t >= d) {
        h |= 4;
        v(e.Diagnostics.Unterminated_regular_expression_literal);
        break;
       }
       var a = l.charCodeAt(t);
       if (S(a)) {
        h |= 4;
        v(e.Diagnostics.Unterminated_regular_expression_literal);
        break;
       }
       if (r) {
        r = false;
       } else if (a === 47 && !i) {
        t++;
        break;
       } else if (a === 91) {
        i = true;
       } else if (a === 92) {
        r = true;
       } else if (a === 93) {
        i = false;
       }
       t++;
      }
      while (t < d && K(l.charCodeAt(t), n)) {
       t++;
      }
      f = t;
      g = l.substring(m, f);
      _ = 12;
     }
     return _;
    }
    function $() {
     e.Debug.assert(_ === 18, "'reScanTemplateToken' should only be called on a '}'");
     f = m;
     return _ = M();
    }
    function X() {
     f = m = p;
     return _ = Q();
    }
    function Q() {
     p = m = f;
     if (f >= d) {
      return _ = 1;
     }
     var e = l.charCodeAt(f);
     if (e === 60) {
      if (l.charCodeAt(f + 1) === 47) {
       f += 2;
       return _ = 28;
      }
      f++;
      return _ = 27;
     }
     if (e === 123) {
      f++;
      return _ = 17;
     }
     var t = 0;
     while (f < d) {
      e = l.charCodeAt(f);
      if (e === 123) {
       break;
      }
      if (e === 60) {
       if (N(l, f)) {
        f = A(l, f, v);
        return _ = 7;
       }
       break;
      }
      if (S(e) && t === 0) {
       t = -1;
      } else if (!x(e)) {
       t = f;
      }
      f++;
     }
     return t === -1 ? 11 : 10;
    }
    function Y() {
     if (t(_)) {
      var e = f;
      while (f < d) {
       var r = l.charCodeAt(f);
       if (r === 45 || (e === f ? J(r, n) : K(r, n))) {
        f++;
       } else {
        break;
       }
      }
      g += l.substring(e, f);
     }
     return _;
    }
    function Z() {
     p = f;
     switch (l.charCodeAt(f)) {
     case 34:
     case 39:
      g = O(true);
      return _ = 9;

     default:
      return W();
     }
    }
    function ee() {
     p = m = f;
     if (f >= d) {
      return _ = 1;
     }
     var e = l.charCodeAt(f);
     f++;
     switch (e) {
     case 9:
     case 11:
     case 12:
     case 32:
      while (f < d && k(l.charCodeAt(f))) {
       f++;
      }
      return _ = 5;

     case 64:
      return _ = 57;

     case 10:
     case 13:
      return _ = 4;

     case 42:
      return _ = 39;

     case 123:
      return _ = 17;

     case 125:
      return _ = 18;

     case 91:
      return _ = 21;

     case 93:
      return _ = 22;

     case 60:
      return _ = 27;

     case 61:
      return _ = 58;

     case 44:
      return _ = 26;

     case 46:
      return _ = 23;

     case 96:
      while (f < d && l.charCodeAt(f) !== 96) {
       f++;
      }
      g = l.substring(m + 1, f);
      f++;
      return _ = 13;
     }
     if (J(e, 6)) {
      while (K(l.charCodeAt(f), 6) && f < d) {
       f++;
      }
      g = l.substring(m, f);
      return _ = 71;
     } else {
      return _ = 0;
     }
    }
    function te(e, t) {
     var n = f;
     var r = p;
     var i = m;
     var a = _;
     var o = g;
     var s = h;
     var c = e();
     if (!c || t) {
      f = n;
      p = r;
      m = i;
      _ = a;
      g = o;
      h = s;
     }
     return c;
    }
    function ne(e, t, n) {
     var r = d;
     var i = f;
     var a = p;
     var o = m;
     var s = _;
     var c = g;
     var u = h;
     oe(l, e, t);
     var v = n();
     d = r;
     f = i;
     p = a;
     m = o;
     _ = s;
     g = c;
     h = u;
     return v;
    }
    function re(e) {
     return te(e, true);
    }
    function ie(e) {
     return te(e, false);
    }
    function ae() {
     return l;
    }
    function oe(e, t, n) {
     l = e || "";
     d = n === undefined ? l.length : t + n;
     le(t || 0);
    }
    function se(e) {
     s = e;
    }
    function ce(e) {
     n = e;
    }
    function ue(e) {
     a = e;
    }
    function le(t) {
     e.Debug.assert(t >= 0);
     f = t;
     p = t;
     m = t;
     _ = 0;
     g = undefined;
     h = 0;
    }
   }
   e.createScanner = W;
  })(s || (s = {}));
  var s;
  (function(e) {
   function t(t) {
    return e.pathIsRelative(t) || e.isRootedDiskPath(t);
   }
   e.isExternalModuleNameRelative = t;
   function n(t) {
    return e.sortAndDeduplicate(t, e.compareDiagnostics);
   }
   e.sortAndDeduplicateDiagnostics = n;
  })(s || (s = {}));
  (function(e) {
   e.emptyArray = [];
   e.resolvingEmptyArray = [];
   e.emptyMap = e.createMap();
   e.emptyUnderscoreEscapedMap = e.emptyMap;
   e.externalHelpersModuleNameText = "tslib";
   e.defaultMaximumTruncationLength = 160;
   function t(e, t) {
    var n = e.declarations;
    if (n) {
     for (var r = 0, i = n; r < i.length; r++) {
      var a = i[r];
      if (a.kind === t) {
       return a;
      }
     }
    }
    return undefined;
   }
   e.getDeclarationOfKind = t;
   function n() {
    return new e.MapCtr();
   }
   e.createUnderscoreEscapedMap = n;
   function r(e) {
    return !!e && !!e.size;
   }
   e.hasEntries = r;
   function i(t) {
    var n = e.createMap();
    if (t) {
     for (var r = 0, i = t; r < i.length; r++) {
      var a = i[r];
      n.set(a.escapedName, a);
     }
    }
    return n;
   }
   e.createSymbolTable = i;
   var a = o();
   function o() {
    var t = "";
    var n = function(e) {
     return t += e;
    };
    return {
     getText: function() {
      return t;
     },
     write: n,
     rawWrite: n,
     writeTextOfNode: n,
     writeKeyword: n,
     writeOperator: n,
     writePunctuation: n,
     writeSpace: n,
     writeStringLiteral: n,
     writeLiteral: n,
     writeParameter: n,
     writeProperty: n,
     writeSymbol: n,
     getTextPos: function() {
      return t.length;
     },
     getLine: function() {
      return 0;
     },
     getColumn: function() {
      return 0;
     },
     getIndent: function() {
      return 0;
     },
     isAtStartOfLine: function() {
      return false;
     },
     writeLine: function() {
      return t += " ";
     },
     increaseIndent: e.noop,
     decreaseIndent: e.noop,
     clear: function() {
      return t = "";
     },
     trackSymbol: e.noop,
     reportInaccessibleThisError: e.noop,
     reportInaccessibleUniqueSymbolError: e.noop,
     reportPrivateInBaseOfClassExpression: e.noop
    };
   }
   function s(t, n, r) {
    var i = e.isRootedDiskPath(t) ? e.normalizePath(t) : e.getNormalizedAbsolutePath(t, n);
    return r(i);
   }
   e.toPath = s;
   function c(t, n) {
    return !t || t.module !== n.module || t.moduleResolution !== n.moduleResolution || t.noResolve !== n.noResolve || t.target !== n.target || t.noLib !== n.noLib || t.jsx !== n.jsx || t.allowJs !== n.allowJs || t.rootDir !== n.rootDir || t.configFilePath !== n.configFilePath || t.baseUrl !== n.baseUrl || t.maxNodeModuleJsDepth !== n.maxNodeModuleJsDepth || !e.arrayIsEqualTo(t.lib, n.lib) || !e.arrayIsEqualTo(t.typeRoots, n.typeRoots) || !e.arrayIsEqualTo(t.rootDirs, n.rootDirs) || !e.equalOwnProperties(t.paths, n.paths);
   }
   e.changesAffectModuleResolution = c;
   function u(e, t) {
    while (e) {
     var n = t(e);
     if (n === "quit") {
      return undefined;
     } else if (n) {
      return e;
     }
     e = e.parent;
    }
    return undefined;
   }
   e.findAncestor = u;
   function l(e, t) {
    var n;
    var r = e.entries();
    for (var i = r.next(), a = i.value, o = i.done; !o; n = r.next(), a = n.value, o = n.done, 
    n) {
     var s = a[0], c = a[1];
     var u = t(c, s);
     if (u) {
      return u;
     }
    }
    return undefined;
   }
   e.forEachEntry = l;
   function f(e, t) {
    var n;
    var r = e.keys();
    for (var i = r.next(), a = i.value, o = i.done; !o; n = r.next(), a = n.value, o = n.done, 
    n) {
     var s = t(a);
     if (s) {
      return s;
     }
    }
    return undefined;
   }
   e.forEachKey = f;
   function d(e, t) {
    e.forEach(function(e, n) {
     t.set(n, e);
    });
   }
   e.copyEntries = d;
   function p(t, n) {
    return e.arrayToMap(t, n || function(e) {
     return e;
    }, function() {
     return true;
    });
   }
   e.arrayToSet = p;
   function m(t) {
    var n = e.createMap();
    d(t, n);
    return n;
   }
   e.cloneMap = m;
   function _(e) {
    var t = a.getText();
    try {
     e(a);
     return a.getText();
    } finally {
     a.clear();
     a.writeKeyword(t);
    }
   }
   e.usingSingleLineStringWriter = _;
   function g(e) {
    return e.end - e.pos;
   }
   e.getFullWidth = g;
   function h(e, t) {
    return e && e.resolvedModules && e.resolvedModules.get(t);
   }
   e.getResolvedModule = h;
   function v(t, n, r) {
    if (!t.resolvedModules) {
     t.resolvedModules = e.createMap();
    }
    t.resolvedModules.set(n, r);
   }
   e.setResolvedModule = v;
   function y(t, n, r) {
    if (!t.resolvedTypeReferenceDirectiveNames) {
     t.resolvedTypeReferenceDirectiveNames = e.createMap();
    }
    t.resolvedTypeReferenceDirectiveNames.set(n, r);
   }
   e.setResolvedTypeReferenceDirective = y;
   function b(e, t) {
    return e.isExternalLibraryImport === t.isExternalLibraryImport && e.extension === t.extension && e.resolvedFileName === t.resolvedFileName && e.originalPath === t.originalPath && x(e.packageId, t.packageId);
   }
   e.moduleResolutionIsEqualTo = b;
   function x(e, t) {
    return e === t || !!e && !!t && e.name === t.name && e.subModuleName === t.subModuleName && e.version === t.version;
   }
   function k(e) {
    var t = e.name, n = e.subModuleName, r = e.version;
    var i = n ? t + "/" + n : t;
    return i + "@" + r;
   }
   e.packageIdToString = k;
   function S(e, t) {
    return e.resolvedFileName === t.resolvedFileName && e.primary === t.primary;
   }
   e.typeDirectiveIsEqualTo = S;
   function w(t, n, r, i) {
    e.Debug.assert(t.length === n.length);
    for (var a = 0; a < t.length; a++) {
     var o = n[a];
     var s = r && r.get(t[a]);
     var c = s ? !o || !i(s, o) : o;
     if (c) {
      return true;
     }
    }
    return false;
   }
   e.hasChangesInResolutions = w;
   function C(e) {
    D(e);
    return (e.flags & 131072) !== 0;
   }
   e.containsParseError = C;
   function D(t) {
    if (!(t.flags & 262144)) {
     var n = (t.flags & 32768) !== 0 || e.forEachChild(t, C);
     if (n) {
      t.flags |= 131072;
     }
     t.flags |= 262144;
    }
   }
   function T(e) {
    while (e && e.kind !== 277) {
     e = e.parent;
    }
    return e;
   }
   e.getSourceFileOfNode = T;
   function E(e) {
    switch (e.kind) {
    case 216:
    case 244:
    case 223:
    case 224:
    case 225:
     return true;
    }
    return false;
   }
   e.isStatementWithLocals = E;
   function N(t, n) {
    e.Debug.assert(t >= 0);
    return e.getLineStarts(n)[t];
   }
   e.getStartPositionOfLine = N;
   function A(t) {
    var n = T(t);
    var r = e.getLineAndCharacterOfPosition(n, t.pos);
    return n.fileName + "(" + (r.line + 1) + "," + (r.character + 1) + ")";
   }
   e.nodePosToString = A;
   function F(t, n) {
    e.Debug.assert(t >= 0);
    var r = e.getLineStarts(n);
    var i = t;
    var a = n.text;
    if (i + 1 === r.length) {
     return a.length - 1;
    } else {
     var o = r[i];
     var s = r[i + 1] - 1;
     e.Debug.assert(e.isLineBreak(a.charCodeAt(s)));
     while (o <= s && e.isLineBreak(a.charCodeAt(s))) {
      s--;
     }
     return s;
    }
   }
   e.getEndLinePosition = F;
   function P(e, t, n) {
    return !(n && n(t)) && !e.identifiers.has(t);
   }
   e.isFileLevelUniqueName = P;
   function I(e) {
    if (e === undefined) {
     return true;
    }
    return e.pos === e.end && e.pos >= 0 && e.kind !== 1;
   }
   e.nodeIsMissing = I;
   function O(e) {
    return !I(e);
   }
   e.nodeIsPresent = O;
   function M(e, t) {
    if (t === undefined || t.length === 0) return e;
    var n = 0;
    for (;n < e.length; ++n) {
     if (!Oe(e[n])) {
      break;
     }
    }
    e.splice.apply(e, [ n, 0 ].concat(t));
    return e;
   }
   e.addStatementsAfterPrologue = M;
   function L(t, n, r) {
    if (t.charCodeAt(n + 1) === 47 && n + 2 < r && t.charCodeAt(n + 2) === 47) {
     var i = t.substring(n, r);
     return i.match(e.fullTripleSlashReferencePathRegEx) || i.match(e.fullTripleSlashAMDReferencePathRegEx) || i.match(Re) || i.match(Be) ? true : false;
    }
    return false;
   }
   e.isRecognizedTripleSlashComment = L;
   function R(e, t) {
    return e.charCodeAt(t + 1) === 42 && e.charCodeAt(t + 2) === 33;
   }
   e.isPinnedComment = R;
   function B(t, n, r) {
    if (I(t)) {
     return t.pos;
    }
    if (e.isJSDocNode(t)) {
     return e.skipTrivia((n || T(t)).text, t.pos, false, true);
    }
    if (r && e.hasJSDocNodes(t)) {
     return B(t.jsDoc[0]);
    }
    if (t.kind === 303 && t._children.length > 0) {
     return B(t._children[0], n, r);
    }
    return e.skipTrivia((n || T(t)).text, t.pos);
   }
   e.getTokenPosOfNode = B;
   function z(t, n) {
    if (I(t) || !t.decorators) {
     return B(t, n);
    }
    return e.skipTrivia((n || T(t)).text, t.decorators.end);
   }
   e.getNonDecoratorTokenPosOfNode = z;
   function j(e, t, n) {
    if (n === void 0) {
     n = false;
    }
    return q(e.text, t, n);
   }
   e.getSourceTextOfNodeFromSourceFile = j;
   function q(t, n, r) {
    if (r === void 0) {
     r = false;
    }
    if (I(n)) {
     return "";
    }
    return t.substring(r ? n.pos : e.skipTrivia(t, n.pos), n.end);
   }
   e.getTextOfNodeFromSourceText = q;
   function U(e, t) {
    if (t === void 0) {
     t = false;
    }
    return j(T(e), e, t);
   }
   e.getTextOfNode = U;
   function J(e) {
    return e.pos;
   }
   function K(t, n) {
    return e.binarySearch(t, n, J, e.compareValues);
   }
   e.indexOfNode = K;
   function V(e) {
    var t = e.emitNode;
    return t && t.flags || 0;
   }
   e.getEmitFlags = V;
   function W(t, n) {
    if (!gr(t) && t.parent && !(e.isNumericLiteral(t) && t.numericLiteralFlags & 512)) {
     return j(n, t);
    }
    var r = V(t) & 16777216 ? Ar : Mr;
    switch (t.kind) {
    case 9:
     if (t.singleQuote) {
      return "'" + r(t.text, 39) + "'";
     } else {
      return '"' + r(t.text, 34) + '"';
     }

    case 13:
     return "`" + r(t.text, 96) + "`";

    case 14:
     return "`" + r(t.text, 96) + "${";

    case 15:
     return "}" + r(t.text, 96) + "${";

    case 16:
     return "}" + r(t.text, 96) + "`";

    case 8:
    case 12:
     return t.text;
    }
    return e.Debug.fail("Literal kind '" + t.kind + "' not accounted for.");
   }
   e.getLiteralText = W;
   function H(t) {
    return e.isString(t) ? '"' + Mr(t) + '"' : "" + t;
   }
   e.getTextOfConstantValue = H;
   function G(e) {
    return e.length >= 2 && e.charCodeAt(0) === 95 && e.charCodeAt(1) === 95 ? "_" + e : e;
   }
   e.escapeLeadingUnderscores = G;
   function $(t) {
    return e.getBaseFileName(t).replace(/^(\d)/, "_$1").replace(/\W/g, "_");
   }
   e.makeIdentifierFromModuleName = $;
   function X(t) {
    return (e.getCombinedNodeFlags(t) & 3) !== 0 || Q(t);
   }
   e.isBlockOrCatchScoped = X;
   function Q(e) {
    var t = mr(e);
    return t.kind === 235 && t.parent.kind === 272;
   }
   e.isCatchClauseVariableDeclarationOrBindingElement = Q;
   function Y(t) {
    return e.isModuleDeclaration(t) && (t.name.kind === 9 || ae(t));
   }
   e.isAmbientModule = Y;
   function Z(t) {
    return e.isModuleDeclaration(t) && t.name.kind === 9;
   }
   e.isModuleWithStringLiteralName = Z;
   function ee(t) {
    return e.isModuleDeclaration(t) && e.isStringLiteral(t.name);
   }
   e.isNonGlobalAmbientModule = ee;
   function te(t) {
    return e.isModuleDeclaration(t) || e.isIdentifier(t);
   }
   e.isEffectiveModuleDeclaration = te;
   function ne(e) {
    return re(e.valueDeclaration);
   }
   e.isShorthandAmbientModuleSymbol = ne;
   function re(e) {
    return e && e.kind === 242 && !e.body;
   }
   function ie(t) {
    return t.kind === 277 || t.kind === 242 || e.isFunctionLike(t);
   }
   e.isBlockScopedContainerTopLevel = ie;
   function ae(e) {
    return !!(e.flags & 512);
   }
   e.isGlobalScopeAugmentation = ae;
   function oe(e) {
    return Y(e) && se(e);
   }
   e.isExternalModuleAugmentation = oe;
   function se(t) {
    switch (t.parent.kind) {
    case 277:
     return e.isExternalModule(t.parent);

    case 243:
     return Y(t.parent.parent) && e.isSourceFile(t.parent.parent.parent) && !e.isExternalModule(t.parent.parent.parent);
    }
    return false;
   }
   e.isModuleAugmentationExternal = se;
   function ce(t, n) {
    return e.isExternalModule(t) || n.isolatedModules || e.getEmitModuleKind(n) === e.ModuleKind.CommonJS && !!t.commonJsModuleIndicator;
   }
   e.isEffectiveExternalModule = ce;
   function ue(t, n) {
    switch (t.kind) {
    case 277:
    case 244:
    case 272:
    case 242:
    case 223:
    case 224:
    case 225:
    case 155:
    case 154:
    case 156:
    case 157:
    case 237:
    case 194:
    case 195:
     return true;

    case 216:
     return !e.isFunctionLike(n);
    }
    return false;
   }
   e.isBlockScope = ue;
   function le(t) {
    switch (t.kind) {
    case 158:
    case 159:
    case 153:
    case 160:
    case 163:
    case 164:
    case 287:
    case 238:
    case 207:
    case 239:
    case 240:
    case 300:
    case 237:
    case 154:
    case 155:
    case 156:
    case 157:
    case 194:
    case 195:
    case 295:
    case 301:
    case 291:
     return true;

    default:
     e.assertTypeIsNever(t);
     return false;
    }
   }
   e.isDeclarationWithTypeParameters = le;
   function fe(e) {
    switch (e.kind) {
    case 247:
    case 246:
     return true;

    default:
     return false;
    }
   }
   e.isAnyImportSyntax = fe;
   function de(e) {
    switch (e.kind) {
    case 247:
    case 246:
    case 217:
    case 238:
    case 237:
    case 242:
    case 240:
    case 239:
    case 241:
     return true;

    default:
     return false;
    }
   }
   e.isLateVisibilityPaintedStatement = de;
   function pe(t) {
    return fe(t) || e.isExportDeclaration(t);
   }
   e.isAnyImportOrReExport = pe;
   function me(e) {
    return u(e.parent, function(e) {
     return ue(e, e.parent);
    });
   }
   e.getEnclosingBlockScopeContainer = me;
   function _e(e) {
    return !e || g(e) === 0 ? "(Missing)" : U(e);
   }
   e.declarationNameToString = _e;
   function ge(e) {
    return e.declaration ? _e(e.declaration.parameters[0].name) : undefined;
   }
   e.getNameFromIndexInfo = ge;
   function he(t) {
    switch (t.kind) {
    case 71:
     return t.escapedText;

    case 9:
    case 8:
     return G(t.text);

    case 147:
     return tr(t.expression) ? G(t.expression.text) : undefined;

    default:
     e.Debug.assertNever(t);
    }
   }
   e.getTextOfPropertyName = he;
   function ve(t) {
    switch (t.kind) {
    case 71:
     return g(t) === 0 ? e.idText(t) : U(t);

    case 146:
     return ve(t.left) + "." + ve(t.right);

    case 187:
     return ve(t.expression) + "." + ve(t.name);

    default:
     throw e.Debug.assertNever(t);
    }
   }
   e.entityNameToString = ve;
   function ye(e, t, n, r, i, a) {
    var o = T(e);
    return xe(o, e, t, n, r, i, a);
   }
   e.createDiagnosticForNode = ye;
   function be(t, n, r, i, a, o, s) {
    var c = e.skipTrivia(t.text, n.pos);
    return e.createFileDiagnostic(t, c, n.end - c, r, i, a, o, s);
   }
   e.createDiagnosticForNodeArray = be;
   function xe(t, n, r, i, a, o, s) {
    var c = Ce(t, n);
    return e.createFileDiagnostic(t, c.start, c.length, r, i, a, o, s);
   }
   e.createDiagnosticForNodeInSourceFile = xe;
   function ke(e, t, n) {
    var r = T(e);
    var i = Ce(r, e);
    return {
     file: r,
     start: i.start,
     length: i.length,
     code: t.code,
     category: t.category,
     messageText: t.next ? t : t.messageText,
     relatedInformation: n
    };
   }
   e.createDiagnosticForNodeFromMessageChain = ke;
   function Se(t, n) {
    var r = e.createScanner(t.languageVersion, true, t.languageVariant, t.text, undefined, n);
    r.scan();
    var i = r.getTokenPos();
    return e.createTextSpanFromBounds(i, r.getTextPos());
   }
   e.getSpanOfTokenAtPosition = Se;
   function we(t, n) {
    var r = e.skipTrivia(t.text, n.pos);
    if (n.body && n.body.kind === 216) {
     var i = e.getLineAndCharacterOfPosition(t, n.body.pos).line;
     var a = e.getLineAndCharacterOfPosition(t, n.body.end).line;
     if (i < a) {
      return e.createTextSpan(r, F(i, t) - r + 1);
     }
    }
    return e.createTextSpanFromBounds(r, n.end);
   }
   function Ce(t, n) {
    var r = n;
    switch (n.kind) {
    case 277:
     var i = e.skipTrivia(t.text, 0, false);
     if (i === t.text.length) {
      return e.createTextSpan(0, 0);
     }
     return Se(t, i);

    case 235:
    case 184:
    case 238:
    case 207:
    case 239:
    case 242:
    case 241:
    case 276:
    case 237:
    case 194:
    case 154:
    case 156:
    case 157:
    case 240:
    case 152:
    case 151:
     r = n.name;
     break;

    case 195:
     return we(t, n);
    }
    if (r === undefined) {
     return Se(t, n.pos);
    }
    var a = I(r);
    var o = a ? r.pos : e.skipTrivia(t.text, r.pos);
    if (a) {
     e.Debug.assert(o === r.pos, "This failure could trigger https://github.com/Microsoft/TypeScript/issues/20809");
     e.Debug.assert(o === r.end, "This failure could trigger https://github.com/Microsoft/TypeScript/issues/20809");
    } else {
     e.Debug.assert(o >= r.pos, "This failure could trigger https://github.com/Microsoft/TypeScript/issues/20809");
     e.Debug.assert(o <= r.end, "This failure could trigger https://github.com/Microsoft/TypeScript/issues/20809");
    }
    return e.createTextSpanFromBounds(o, r.end);
   }
   e.getErrorSpanForNode = Ce;
   function De(e) {
    return (e.externalModuleIndicator || e.commonJsModuleIndicator) !== undefined;
   }
   e.isExternalOrCommonJsModule = De;
   function Te(e) {
    return e.scriptKind === 6;
   }
   e.isJsonSourceFile = Te;
   function Ee(t) {
    return !!(e.getCombinedModifierFlags(t) & 2048);
   }
   e.isEnumConst = Ee;
   function Ne(t) {
    return !!(e.getCombinedNodeFlags(t) & 2);
   }
   e.isVarConst = Ne;
   function Ae(t) {
    return !!(e.getCombinedNodeFlags(t) & 1);
   }
   e.isLet = Ae;
   function Fe(e) {
    return e.kind === 189 && e.expression.kind === 97;
   }
   e.isSuperCall = Fe;
   function Pe(e) {
    return e.kind === 189 && e.expression.kind === 91;
   }
   e.isImportCall = Pe;
   function Ie(t) {
    return e.isImportTypeNode(t) && e.isLiteralTypeNode(t.argument) && e.isStringLiteral(t.argument.literal);
   }
   e.isLiteralImportTypeNode = Ie;
   function Oe(e) {
    return e.kind === 219 && e.expression.kind === 9;
   }
   e.isPrologueDirective = Oe;
   function Me(t, n) {
    return t.kind !== 10 ? e.getLeadingCommentRanges(n.text, t.pos) : undefined;
   }
   e.getLeadingCommentRangesOfNode = Me;
   function Le(t, n) {
    var r = t.kind === 149 || t.kind === 148 || t.kind === 194 || t.kind === 195 || t.kind === 193 ? e.concatenate(e.getTrailingCommentRanges(n, t.pos), e.getLeadingCommentRanges(n, t.pos)) : e.getLeadingCommentRanges(n, t.pos);
    return e.filter(r, function(e) {
     return n.charCodeAt(e.pos + 1) === 42 && n.charCodeAt(e.pos + 2) === 42 && n.charCodeAt(e.pos + 3) !== 47;
    });
   }
   e.getJSDocCommentRanges = Le;
   e.fullTripleSlashReferencePathRegEx = /^(\/\/\/\s*<reference\s+path\s*=\s*)('|")(.+?)\2.*?\/>/;
   var Re = /^(\/\/\/\s*<reference\s+types\s*=\s*)('|")(.+?)\2.*?\/>/;
   e.fullTripleSlashAMDReferencePathRegEx = /^(\/\/\/\s*<amd-dependency\s+path\s*=\s*)('|")(.+?)\2.*?\/>/;
   var Be = /^(\/\/\/\s*<reference\s+no-default-lib\s*=\s*)('|")(.+?)\2\s*\/>/;
   function ze(t) {
    if (161 <= t.kind && t.kind <= 181) {
     return true;
    }
    switch (t.kind) {
    case 119:
    case 142:
    case 134:
    case 137:
    case 122:
    case 138:
    case 140:
    case 131:
     return true;

    case 105:
     return t.parent.kind !== 198;

    case 209:
     return !Oi(t);

    case 148:
     return t.parent.kind === 179 || t.parent.kind === 174;

    case 71:
     if (t.parent.kind === 146 && t.parent.right === t) {
      t = t.parent;
     } else if (t.parent.kind === 187 && t.parent.name === t) {
      t = t.parent;
     }
     e.Debug.assert(t.kind === 71 || t.kind === 146 || t.kind === 187, "'node' was expected to be a qualified name, identifier or property access in 'isPartOfTypeNode'.");

    case 146:
    case 187:
    case 99:
     {
      var n = t.parent;
      if (n.kind === 165) {
       return false;
      }
      if (n.kind === 181) {
       return !n.isTypeOf;
      }
      if (161 <= n.kind && n.kind <= 181) {
       return true;
      }
      switch (n.kind) {
      case 209:
       return !Oi(n);

      case 148:
       return t === n.constraint;

      case 152:
      case 151:
      case 149:
      case 235:
       return t === n.type;

      case 237:
      case 194:
      case 195:
      case 155:
      case 154:
      case 153:
      case 156:
      case 157:
       return t === n.type;

      case 158:
      case 159:
      case 160:
       return t === n.type;

      case 192:
       return t === n.type;

      case 189:
      case 190:
       return e.contains(n.typeArguments, t);

      case 191:
       return false;
      }
     }
    }
    return false;
   }
   e.isPartOfTypeNode = ze;
   function je(e, t) {
    while (e) {
     if (e.kind === t) {
      return true;
     }
     e = e.parent;
    }
    return false;
   }
   e.isChildOfNodeWithKind = je;
   function qe(t, n) {
    return r(t);
    function r(t) {
     switch (t.kind) {
     case 228:
      return n(t);

     case 244:
     case 216:
     case 220:
     case 221:
     case 222:
     case 223:
     case 224:
     case 225:
     case 229:
     case 230:
     case 269:
     case 270:
     case 231:
     case 233:
     case 272:
      return e.forEachChild(t, r);
     }
    }
   }
   e.forEachReturnStatement = qe;
   function Ue(t, n) {
    return r(t);
    function r(t) {
     switch (t.kind) {
     case 205:
      n(t);
      var i = t.expression;
      if (i) {
       r(i);
      }
      return;

     case 241:
     case 239:
     case 242:
     case 240:
     case 238:
     case 207:
      return;

     default:
      if (e.isFunctionLike(t)) {
       if (t.name && t.name.kind === 147) {
        r(t.name.expression);
        return;
       }
      } else if (!ze(t)) {
       e.forEachChild(t, r);
      }
     }
    }
   }
   e.forEachYieldExpression = Ue;
   function Je(t) {
    if (t && t.kind === 167) {
     return t.elementType;
    } else if (t && t.kind === 162) {
     return e.singleOrUndefined(t.typeArguments);
    } else {
     return undefined;
    }
   }
   e.getRestParameterElementType = Je;
   function Ke(e) {
    switch (e.kind) {
    case 239:
    case 238:
    case 207:
    case 166:
     return e.members;

    case 186:
     return e.properties;
    }
   }
   e.getMembersOfDeclaration = Ke;
   function Ve(e) {
    if (e) {
     switch (e.kind) {
     case 184:
     case 276:
     case 149:
     case 273:
     case 152:
     case 151:
     case 274:
     case 235:
      return true;
     }
    }
    return false;
   }
   e.isVariableLike = Ve;
   function We(t) {
    return Ve(t) || e.isAccessor(t);
   }
   e.isVariableLikeOrAccessor = We;
   function He(e) {
    return e.parent.kind === 236 && e.parent.parent.kind === 217;
   }
   e.isVariableDeclarationInVariableStatement = He;
   function Ge(t) {
    return e.isVariableDeclaration(t) ? Ne(t) && e.isIdentifier(t.name) && He(t) : e.isPropertyDeclaration(t) ? wi(t) && Si(t) : e.isPropertySignature(t) && wi(t);
   }
   e.isValidESSymbolDeclaration = Ge;
   function $e(e) {
    switch (e.kind) {
    case 154:
    case 153:
    case 155:
    case 156:
    case 157:
    case 237:
    case 194:
     return true;
    }
    return false;
   }
   e.introducesArgumentsExoticObject = $e;
   function Xe(e, t) {
    while (true) {
     if (t) {
      t(e);
     }
     if (e.statement.kind !== 231) {
      return e.statement;
     }
     e = e.statement;
    }
   }
   e.unwrapInnermostStatementOfLabel = Xe;
   function Qe(t) {
    return t && t.kind === 216 && e.isFunctionLike(t.parent);
   }
   e.isFunctionBlock = Qe;
   function Ye(e) {
    return e && e.kind === 154 && e.parent.kind === 186;
   }
   e.isObjectLiteralMethod = Ye;
   function Ze(e) {
    return e.kind === 154 && (e.parent.kind === 186 || e.parent.kind === 207);
   }
   e.isObjectLiteralOrClassExpressionMethod = Ze;
   function et(e) {
    return e && e.kind === 1;
   }
   e.isIdentifierTypePredicate = et;
   function tt(e) {
    return e && e.kind === 0;
   }
   e.isThisTypePredicate = tt;
   function nt(e, t, n) {
    return e.properties.filter(function(e) {
     if (e.kind === 273) {
      var r = he(e.name);
      return t === r || !!n && n === r;
     }
     return false;
    });
   }
   e.getPropertyAssignment = nt;
   function rt(t) {
    if (t && t.statements.length) {
     var n = t.statements[0].expression;
     return e.tryCast(n, e.isObjectLiteralExpression);
    }
   }
   e.getTsConfigObjectLiteralExpression = rt;
   function it(t, n, r) {
    return e.firstDefined(at(t, n), function(t) {
     return e.isArrayLiteralExpression(t.initializer) ? e.find(t.initializer.elements, function(t) {
      return e.isStringLiteral(t) && t.text === r;
     }) : undefined;
    });
   }
   e.getTsConfigPropArrayElementValue = it;
   function at(t, n) {
    var r = rt(t);
    return r ? nt(r, n) : e.emptyArray;
   }
   e.getTsConfigPropArray = at;
   function ot(t) {
    return u(t.parent, e.isFunctionLike);
   }
   e.getContainingFunction = ot;
   function st(t) {
    return u(t.parent, e.isClassLike);
   }
   e.getContainingClass = st;
   function ct(t, n) {
    e.Debug.assert(t.kind !== 277);
    while (true) {
     t = t.parent;
     if (!t) {
      return e.Debug.fail();
     }
     switch (t.kind) {
     case 147:
      if (e.isClassLike(t.parent.parent)) {
       return t;
      }
      t = t.parent;
      break;

     case 150:
      if (t.parent.kind === 149 && e.isClassElement(t.parent.parent)) {
       t = t.parent.parent;
      } else if (e.isClassElement(t.parent)) {
       t = t.parent;
      }
      break;

     case 195:
      if (!n) {
       continue;
      }

     case 237:
     case 194:
     case 242:
     case 152:
     case 151:
     case 154:
     case 153:
     case 155:
     case 156:
     case 157:
     case 158:
     case 159:
     case 160:
     case 241:
     case 277:
      return t;
     }
    }
   }
   e.getThisContainer = ct;
   function ut(e) {
    var t = ct(e, false);
    if (t) {
     switch (t.kind) {
     case 155:
     case 237:
     case 194:
      return t;
     }
    }
    return undefined;
   }
   e.getNewTargetContainer = ut;
   function lt(t, n) {
    while (true) {
     t = t.parent;
     if (!t) {
      return t;
     }
     switch (t.kind) {
     case 147:
      t = t.parent;
      break;

     case 237:
     case 194:
     case 195:
      if (!n) {
       continue;
      }

     case 152:
     case 151:
     case 154:
     case 153:
     case 155:
     case 156:
     case 157:
      return t;

     case 150:
      if (t.parent.kind === 149 && e.isClassElement(t.parent.parent)) {
       t = t.parent.parent;
      } else if (e.isClassElement(t.parent)) {
       t = t.parent;
      }
      break;
     }
    }
   }
   e.getSuperContainer = lt;
   function ft(e) {
    if (e.kind === 194 || e.kind === 195) {
     var t = e;
     var n = e.parent;
     while (n.kind === 193) {
      t = n;
      n = n.parent;
     }
     if (n.kind === 189 && n.expression === t) {
      return n;
     }
    }
   }
   e.getImmediatelyInvokedFunctionExpression = ft;
   function dt(e) {
    var t = e.kind;
    return (t === 187 || t === 188) && e.expression.kind === 97;
   }
   e.isSuperProperty = dt;
   function pt(e) {
    var t = e.kind;
    return (t === 187 || t === 188) && e.expression.kind === 99;
   }
   e.isThisProperty = pt;
   function mt(e) {
    switch (e.kind) {
    case 162:
     return e.typeName;

    case 209:
     return Li(e.expression) ? e.expression : undefined;

    case 71:
    case 146:
     return e;
    }
    return undefined;
   }
   e.getEntityNameFromTypeNode = mt;
   function _t(e) {
    switch (e.kind) {
    case 191:
     return e.tag;

    case 260:
    case 259:
     return e.tagName;

    default:
     return e.expression;
    }
   }
   e.getInvokedExpression = _t;
   function gt(e, t, n) {
    switch (e.kind) {
    case 238:
     return true;

    case 152:
     return t.kind === 238;

    case 156:
    case 157:
    case 154:
     return e.body !== undefined && t.kind === 238;

    case 149:
     return t.body !== undefined && (t.kind === 155 || t.kind === 154 || t.kind === 157) && n.kind === 238;
    }
    return false;
   }
   e.nodeCanBeDecorated = gt;
   function ht(e, t, n) {
    return e.decorators !== undefined && gt(e, t, n);
   }
   e.nodeIsDecorated = ht;
   function vt(e, t, n) {
    return ht(e, t, n) || yt(e, t);
   }
   e.nodeOrChildIsDecorated = vt;
   function yt(t, n) {
    switch (t.kind) {
    case 238:
     return e.some(t.members, function(e) {
      return vt(e, t, n);
     });

    case 154:
    case 157:
     return e.some(t.parameters, function(e) {
      return ht(e, t, n);
     });

    default:
     return false;
    }
   }
   e.childIsDecorated = yt;
   function bt(e) {
    var t = e.parent;
    if (t.kind === 260 || t.kind === 259 || t.kind === 261) {
     return t.tagName === e;
    }
    return false;
   }
   e.isJSXTagName = bt;
   function xt(e) {
    switch (e.kind) {
    case 97:
    case 95:
    case 101:
    case 86:
    case 12:
    case 185:
    case 186:
    case 187:
    case 188:
    case 189:
    case 190:
    case 191:
    case 210:
    case 192:
    case 211:
    case 193:
    case 194:
    case 207:
    case 195:
    case 198:
    case 196:
    case 197:
    case 200:
    case 201:
    case 202:
    case 203:
    case 206:
    case 204:
    case 13:
    case 208:
    case 258:
    case 259:
    case 262:
    case 205:
    case 199:
    case 212:
     return true;

    case 146:
     while (e.parent.kind === 146) {
      e = e.parent;
     }
     return e.parent.kind === 165 || bt(e);

    case 71:
     if (e.parent.kind === 165 || bt(e)) {
      return true;
     }

    case 8:
    case 9:
    case 99:
     return kt(e);

    default:
     return false;
    }
   }
   e.isExpressionNode = xt;
   function kt(e) {
    var t = e.parent;
    switch (t.kind) {
    case 235:
    case 149:
    case 152:
    case 151:
    case 276:
    case 273:
    case 184:
     return t.initializer === e;

    case 219:
    case 220:
    case 221:
    case 222:
    case 228:
    case 229:
    case 230:
    case 269:
    case 232:
     return t.expression === e;

    case 223:
     var n = t;
     return n.initializer === e && n.initializer.kind !== 236 || n.condition === e || n.incrementor === e;

    case 224:
    case 225:
     var r = t;
     return r.initializer === e && r.initializer.kind !== 236 || r.expression === e;

    case 192:
    case 210:
     return e === t.expression;

    case 214:
     return e === t.expression;

    case 147:
     return e === t.expression;

    case 150:
    case 268:
    case 267:
    case 275:
     return true;

    case 209:
     return t.expression === e && Oi(t);

    default:
     return xt(t);
    }
   }
   e.isInExpressionContext = kt;
   function St(e) {
    return e.kind === 246 && e.moduleReference.kind === 257;
   }
   e.isExternalModuleImportEqualsDeclaration = St;
   function wt(t) {
    e.Debug.assert(St(t));
    return t.moduleReference.expression;
   }
   e.getExternalModuleImportEqualsDeclarationExpression = wt;
   function Ct(e) {
    return e.kind === 246 && e.moduleReference.kind !== 257;
   }
   e.isInternalModuleImportEqualsDeclaration = Ct;
   function Dt(e) {
    return Et(e);
   }
   e.isSourceFileJavaScript = Dt;
   function Tt(e) {
    return !Et(e);
   }
   e.isSourceFileNotJavaScript = Tt;
   function Et(e) {
    return !!e && !!(e.flags & 65536);
   }
   e.isInJavaScriptFile = Et;
   function Nt(e) {
    return !!e && !!(e.flags & 16777216);
   }
   e.isInJsonFile = Nt;
   function At(e) {
    return !!e && !!(e.flags & 2097152);
   }
   e.isInJSDoc = At;
   function Ft(t) {
    return e.isTypeReferenceNode(t) && e.isIdentifier(t.typeName) && t.typeName.escapedText === "Object" && t.typeArguments && t.typeArguments.length === 2 && (t.typeArguments[0].kind === 137 || t.typeArguments[0].kind === 134);
   }
   e.isJSDocIndexSignature = Ft;
   function Pt(t, n) {
    if (t.kind !== 189) {
     return false;
    }
    var r = t, i = r.expression, a = r.arguments;
    if (i.kind !== 71 || i.escapedText !== "require") {
     return false;
    }
    if (a.length !== 1) {
     return false;
    }
    var o = a[0];
    return !n || e.isStringLiteralLike(o);
   }
   e.isRequireCall = Pt;
   function It(e) {
    return e === 39 || e === 34;
   }
   e.isSingleOrDoubleQuote = It;
   function Ot(e, t) {
    return j(t, e).charCodeAt(0) === 34;
   }
   e.isStringDoubleQuoted = Ot;
   function Mt(t) {
    if (!Et(t) || !t.parent) {
     return undefined;
    }
    var n;
    var r;
    if (e.isVariableDeclaration(t.parent) && t.parent.initializer === t) {
     n = t.parent.name;
     r = t.parent;
    } else if (e.isBinaryExpression(t.parent) && t.parent.operatorToken.kind === 58 && t.parent.right === t) {
     n = t.parent.left;
     r = n;
    } else if (e.isBinaryExpression(t.parent) && t.parent.operatorToken.kind === 54) {
     if (e.isVariableDeclaration(t.parent.parent) && t.parent.parent.initializer === t.parent) {
      n = t.parent.parent.name;
      r = t.parent.parent;
     } else if (e.isBinaryExpression(t.parent.parent) && t.parent.parent.operatorToken.kind === 58 && t.parent.parent.right === t.parent) {
      n = t.parent.parent.left;
      r = n;
     }
     if (!n || !Li(n) || !Jt(n, t.parent.left)) {
      return undefined;
     }
    }
    if (!n || !zt(t, Bi(n))) {
     return undefined;
    }
    return r;
   }
   e.getDeclarationOfJSInitializer = Mt;
   function Lt(t) {
    if (Et(t) && t.initializer && e.isBinaryExpression(t.initializer) && t.initializer.operatorToken.kind === 54 && t.name && Li(t.name) && Jt(t.name, t.initializer.left)) {
     return t.initializer.right;
    }
    return t.initializer;
   }
   e.getEffectiveInitializer = Lt;
   function Rt(e) {
    var t = Lt(e);
    return t && zt(t, Bi(e.name));
   }
   e.getDeclaredJavascriptInitializer = Rt;
   function Bt(t) {
    if (t && t.parent && e.isBinaryExpression(t.parent) && t.parent.operatorToken.kind === 58) {
     var n = Bi(t.parent.left);
     return zt(t.parent.right, n) || jt(t.parent.left, t.parent.right, n);
    }
   }
   e.getAssignedJavascriptInitializer = Bt;
   function zt(t, n) {
    if (e.isCallExpression(t)) {
     var r = An(t.expression);
     return r.kind === 194 || r.kind === 195 ? t : undefined;
    }
    if (t.kind === 194 || t.kind === 207 || t.kind === 195) {
     return t;
    }
    if (e.isObjectLiteralExpression(t) && (t.properties.length === 0 || n)) {
     return t;
    }
   }
   e.getJavascriptInitializer = zt;
   function jt(t, n, r) {
    var i = e.isBinaryExpression(n) && n.operatorToken.kind === 54 && zt(n.right, r);
    if (i && Jt(t, n.left)) {
     return i;
    }
   }
   function qt(t) {
    var n = e.isVariableDeclaration(t.parent) ? t.parent.name : e.isBinaryExpression(t.parent) && t.parent.operatorToken.kind === 58 ? t.parent.left : undefined;
    return n && zt(t.right, Bi(n)) && Li(n) && Jt(n, t.left);
   }
   e.isDefaultedJavascriptInitializer = qt;
   function Ut(t) {
    if (e.isBinaryExpression(t.parent)) {
     var n = t.parent.operatorToken.kind === 54 && e.isBinaryExpression(t.parent.parent) ? t.parent.parent : t.parent;
     if (n.operatorToken.kind === 58 && e.isIdentifier(n.left)) {
      return n.left;
     }
    } else if (e.isVariableDeclaration(t.parent)) {
     return t.parent.name;
    }
   }
   e.getOuterNameOfJsInitializer = Ut;
   function Jt(t, n) {
    if (e.isIdentifier(t) && e.isIdentifier(n)) {
     return t.escapedText === n.escapedText;
    }
    if (e.isIdentifier(t) && e.isPropertyAccessExpression(n)) {
     return (n.expression.kind === 99 || e.isIdentifier(n.expression) && (n.expression.escapedText === "window" || n.expression.escapedText === "self" || n.expression.escapedText === "global")) && Jt(t, n.name);
    }
    if (e.isPropertyAccessExpression(t) && e.isPropertyAccessExpression(n)) {
     return t.name.escapedText === n.name.escapedText && Jt(t.expression, n.expression);
    }
    return false;
   }
   function Kt(e) {
    while (Pi(e, true)) {
     e = e.right;
    }
    return e;
   }
   e.getRightMostAssignedExpression = Kt;
   function Vt(t) {
    return e.isIdentifier(t) && t.escapedText === "exports";
   }
   e.isExportsIdentifier = Vt;
   function Wt(t) {
    return e.isPropertyAccessExpression(t) && e.isIdentifier(t.expression) && t.expression.escapedText === "module" && t.name.escapedText === "exports";
   }
   e.isModuleExportsPropertyAccessExpression = Wt;
   function Ht(t) {
    if (!Et(t) || t.operatorToken.kind !== 58 || !e.isPropertyAccessExpression(t.left)) {
     return 0;
    }
    var n = t.left;
    if (Li(n.expression) && n.name.escapedText === "prototype" && e.isObjectLiteralExpression($t(t))) {
     return 6;
    }
    return Gt(n);
   }
   e.getSpecialPropertyAssignmentKind = Ht;
   function Gt(t) {
    if (t.expression.kind === 99) {
     return 4;
    } else if (e.isIdentifier(t.expression) && t.expression.escapedText === "module" && t.name.escapedText === "exports") {
     return 2;
    } else if (Li(t.expression)) {
     if (Bi(t.expression)) {
      return 3;
     }
     var n = t;
     while (e.isPropertyAccessExpression(n.expression)) {
      n = n.expression;
     }
     e.Debug.assert(e.isIdentifier(n.expression));
     var r = n.expression;
     if (r.escapedText === "exports" || r.escapedText === "module" && n.name.escapedText === "exports") {
      return 1;
     }
     return 5;
    }
    return 0;
   }
   e.getSpecialPropertyAccessKind = Gt;
   function $t(t) {
    while (e.isBinaryExpression(t.right)) {
     t = t.right;
    }
    return t.right;
   }
   e.getInitializerOfBinaryExpression = $t;
   function Xt(t) {
    return e.isBinaryExpression(t) && Ht(t) === 3;
   }
   e.isPrototypePropertyAssignment = Xt;
   function Qt(t) {
    return Et(t) && t.parent && t.parent.kind === 219 && !!e.getJSDocTypeTag(t.parent);
   }
   e.isSpecialPropertyDeclaration = Qt;
   function Yt(t) {
    return Zt(t) || e.Debug.fail(e.Debug.showSyntaxKind(t.parent));
   }
   e.importFromModuleSpecifier = Yt;
   function Zt(t) {
    switch (t.parent.kind) {
    case 247:
    case 253:
     return t.parent;

    case 257:
     return t.parent.parent;

    case 189:
     return t.parent;

    case 180:
     e.Debug.assert(e.isStringLiteral(t));
     return e.tryCast(t.parent.parent, e.isImportTypeNode);

    default:
     return undefined;
    }
   }
   e.tryGetImportFromModuleSpecifier = Zt;
   function en(t) {
    switch (t.kind) {
    case 247:
    case 253:
     return t.moduleSpecifier;

    case 246:
     return t.moduleReference.kind === 257 ? t.moduleReference.expression : undefined;

    case 181:
     return Ie(t) ? t.argument.literal : undefined;

    default:
     return e.Debug.assertNever(t);
    }
   }
   e.getExternalModuleName = en;
   function tn(t) {
    switch (t.kind) {
    case 247:
     return t.importClause && e.tryCast(t.importClause.namedBindings, e.isNamespaceImport);

    case 246:
     return t;

    case 253:
     return undefined;

    default:
     return e.Debug.assertNever(t);
    }
   }
   e.getNamespaceDeclarationNode = tn;
   function nn(e) {
    return e.kind === 247 && !!e.importClause && !!e.importClause.name;
   }
   e.isDefaultImport = nn;
   function rn(e) {
    if (e) {
     switch (e.kind) {
     case 149:
     case 154:
     case 153:
     case 274:
     case 273:
     case 152:
     case 151:
      return e.questionToken !== undefined;
     }
    }
    return false;
   }
   e.hasQuestionToken = rn;
   function an(e) {
    return e.kind === 287 && e.parameters.length > 0 && e.parameters[0].name && e.parameters[0].name.escapedText === "new";
   }
   e.isJSDocConstructSignature = an;
   function on(e) {
    return e.kind === 301 || e.kind === 295;
   }
   e.isJSDocTypeAlias = on;
   function sn(t) {
    return on(t) || e.isTypeAliasDeclaration(t);
   }
   e.isTypeAlias = sn;
   function cn(t) {
    return e.isExpressionStatement(t) && t.expression && e.isBinaryExpression(t.expression) && t.expression.operatorToken.kind === 58 ? t.expression.right : undefined;
   }
   function un(t) {
    return e.isExpressionStatement(t) && e.isBinaryExpression(t.expression) && Ht(t.expression) !== 0 && e.isBinaryExpression(t.expression.right) && t.expression.right.operatorToken.kind === 54 ? t.expression.right.right : undefined;
   }
   function ln(e) {
    switch (e.kind) {
    case 217:
     var t = fn(e);
     return t && t.initializer;

    case 152:
     return e.initializer;

    case 273:
     return e.initializer;
    }
   }
   function fn(t) {
    return e.isVariableStatement(t) ? e.firstOrUndefined(t.declarationList.declarations) : undefined;
   }
   function dn(t) {
    return e.isModuleDeclaration(t) && t.body && t.body.kind === 242 ? t.body : undefined;
   }
   function pn(t) {
    var n;
    if (Ve(t) && e.hasInitializer(t) && e.hasJSDocNodes(t.initializer)) {
     n = e.addRange(n, t.initializer.jsDoc);
    }
    var r = t;
    while (r && r.parent) {
     if (e.hasJSDocNodes(r)) {
      n = e.addRange(n, r.jsDoc);
     }
     if (r.kind === 149) {
      n = e.addRange(n, e.getJSDocParameterTags(r));
      break;
     }
     r = mn(r);
    }
    return n || e.emptyArray;
   }
   e.getJSDocCommentsAndTags = pn;
   function mn(t) {
    var n = t.parent;
    if (n.kind === 273 || n.kind === 152 || n.kind === 219 && t.kind === 187 || dn(n) || e.isBinaryExpression(t) && t.operatorToken.kind === 58) {
     return n;
    } else if (n.parent && (fn(n.parent) === t || e.isBinaryExpression(n) && n.operatorToken.kind === 58)) {
     return n.parent;
    } else if (n.parent && n.parent.parent && (fn(n.parent.parent) || ln(n.parent.parent) === t || un(n.parent.parent))) {
     return n.parent.parent;
    }
   }
   function _n(t) {
    if (t.symbol) {
     return t.symbol;
    }
    if (!e.isIdentifier(t.name)) {
     return undefined;
    }
    var n = t.name.escapedText;
    var r = gn(t);
    if (!r) {
     return undefined;
    }
    var i = e.find(r.parameters, function(e) {
     return e.name.kind === 71 && e.name.escapedText === n;
    });
    return i && i.symbol;
   }
   e.getParameterSymbolFromJSDoc = _n;
   function gn(e) {
    return hn(vn(e));
   }
   e.getHostSignatureFromJSDoc = gn;
   function hn(t) {
    var n = un(t) || cn(t) || ln(t) || fn(t) || dn(t) || t;
    return n && e.isFunctionLike(n) ? n : undefined;
   }
   e.getHostSignatureFromJSDocHost = hn;
   function vn(t) {
    return e.Debug.assertDefined(u(t.parent, e.isJSDoc)).parent;
   }
   e.getJSDocHost = vn;
   function yn(t) {
    var n = t.name.escapedText;
    var r = t.parent.parent.parent.typeParameters;
    return e.find(r, function(e) {
     return e.name.escapedText === n;
    });
   }
   e.getTypeParameterFromJsDoc = yn;
   function bn(t) {
    var n = e.lastOrUndefined(t.parameters);
    return !!n && xn(n);
   }
   e.hasRestParameter = bn;
   function xn(t) {
    var n = e.isJSDocParameterTag(t) ? t.typeExpression && t.typeExpression.type : t.type;
    return t.dotDotDotToken !== undefined || !!n && n.kind === 288;
   }
   e.isRestParameter = xn;
   var kn;
   (function(e) {
    e[e["None"] = 0] = "None";
    e[e["Definite"] = 1] = "Definite";
    e[e["Compound"] = 2] = "Compound";
   })(kn = e.AssignmentKind || (e.AssignmentKind = {}));
   function Sn(e) {
    var t = e.parent;
    while (true) {
     switch (t.kind) {
     case 202:
      var n = t.operatorToken.kind;
      return Ai(n) && t.left === e ? n === 58 ? 1 : 2 : 0;

     case 200:
     case 201:
      var r = t.operator;
      return r === 43 || r === 44 ? 2 : 0;

     case 224:
     case 225:
      return t.initializer === e ? 1 : 0;

     case 193:
     case 185:
     case 206:
     case 211:
      e = t;
      break;

     case 274:
      if (t.name !== e) {
       return 0;
      }
      e = t.parent;
      break;

     case 273:
      if (t.name === e) {
       return 0;
      }
      e = t.parent;
      break;

     default:
      return 0;
     }
     t = e.parent;
    }
   }
   e.getAssignmentTargetKind = Sn;
   function wn(e) {
    return Sn(e) !== 0;
   }
   e.isAssignmentTarget = wn;
   function Cn(e) {
    switch (e.kind) {
    case 216:
    case 217:
    case 229:
    case 220:
    case 230:
    case 244:
    case 269:
    case 270:
    case 231:
    case 223:
    case 224:
    case 225:
    case 221:
    case 222:
    case 233:
    case 272:
     return true;
    }
    return false;
   }
   e.isNodeWithPossibleHoistedDeclaration = Cn;
   function Dn(t) {
    return e.isFunctionExpression(t) || e.isArrowFunction(t) || e.isMethodOrAccessor(t) || e.isFunctionDeclaration(t) || e.isConstructorDeclaration(t);
   }
   e.isValueSignatureDeclaration = Dn;
   function Tn(e, t) {
    while (e && e.kind === t) {
     e = e.parent;
    }
    return e;
   }
   function En(e) {
    return Tn(e, 175);
   }
   e.walkUpParenthesizedTypes = En;
   function Nn(e) {
    return Tn(e, 193);
   }
   e.walkUpParenthesizedExpressions = Nn;
   function An(e) {
    while (e.kind === 193) {
     e = e.expression;
    }
    return e;
   }
   e.skipParentheses = An;
   function Fn(e) {
    if (e.kind !== 187 && e.kind !== 188) {
     return false;
    }
    e = Nn(e.parent);
    return e && e.kind === 196;
   }
   e.isDeleteTarget = Fn;
   function Pn(e, t) {
    while (e) {
     if (e === t) return true;
     e = e.parent;
    }
    return false;
   }
   e.isNodeDescendantOf = Pn;
   function In(t) {
    return !e.isSourceFile(t) && !e.isBindingPattern(t) && e.isDeclaration(t.parent) && t.parent.name === t;
   }
   e.isDeclarationName = In;
   function On(t) {
    switch (t.kind) {
    case 71:
    case 9:
    case 8:
     {
      var n = t.parent;
      if (e.isDeclaration(n)) {
       return n.name === t;
      } else if (e.isQualifiedName(t.parent)) {
       var r = t.parent.parent;
       return e.isJSDocParameterTag(r) && r.name === t.parent;
      } else {
       var i = t.parent.parent;
       return e.isBinaryExpression(i) && Ht(i) !== 0 && e.getNameOfDeclaration(i) === t;
      }
     }

    default:
     return false;
    }
   }
   e.isAnyDeclarationName = On;
   function Mn(t) {
    return (t.kind === 9 || t.kind === 8) && t.parent.kind === 147 && e.isDeclaration(t.parent.parent);
   }
   e.isLiteralComputedPropertyDeclarationName = Mn;
   function Ln(e) {
    var t = e.parent;
    switch (t.kind) {
    case 152:
    case 151:
    case 154:
    case 153:
    case 156:
    case 157:
    case 276:
    case 273:
    case 187:
     return t.name === e;

    case 146:
     if (t.right === e) {
      while (t.kind === 146) {
       t = t.parent;
      }
      return t.kind === 165 || t.kind === 162;
     }
     return false;

    case 184:
    case 251:
     return t.propertyName === e;

    case 255:
    case 265:
     return true;
    }
    return false;
   }
   e.isIdentifierName = Ln;
   function Rn(t) {
    return t.kind === 246 || t.kind === 245 || t.kind === 248 && !!t.name || t.kind === 249 || t.kind === 251 || t.kind === 255 || t.kind === 252 && Bn(t) || e.isBinaryExpression(t) && Ht(t) === 2;
   }
   e.isAliasSymbolDeclaration = Rn;
   function Bn(t) {
    var n = e.isExportAssignment(t) ? t.expression : t.right;
    return Li(n) || e.isClassExpression(n);
   }
   e.exportAssignmentIsAlias = Bn;
   function zn(t) {
    if (Et(t)) {
     var n = e.getJSDocAugmentsTag(t);
     if (n) {
      return n.class;
     }
    }
    return jn(t);
   }
   e.getEffectiveBaseTypeNode = zn;
   function jn(e) {
    var t = Kn(e.heritageClauses, 85);
    return t && t.types.length > 0 ? t.types[0] : undefined;
   }
   e.getClassExtendsHeritageElement = jn;
   function qn(e) {
    var t = Kn(e.heritageClauses, 108);
    return t ? t.types : undefined;
   }
   e.getClassImplementsHeritageClauseElements = qn;
   function Un(t) {
    return e.isInterfaceDeclaration(t) ? Jn(t) || e.emptyArray : e.isClassLike(t) ? e.concatenate(e.singleElementArray(zn(t)), qn(t)) || e.emptyArray : e.emptyArray;
   }
   e.getAllSuperTypeNodes = Un;
   function Jn(e) {
    var t = Kn(e.heritageClauses, 85);
    return t ? t.types : undefined;
   }
   e.getInterfaceBaseTypeNodes = Jn;
   function Kn(e, t) {
    if (e) {
     for (var n = 0, r = e; n < r.length; n++) {
      var i = r[n];
      if (i.token === t) {
       return i;
      }
     }
    }
    return undefined;
   }
   e.getHeritageClause = Kn;
   function Vn(t, n, r) {
    if (!t.getCompilerOptions().noResolve) {
     var i = e.isRootedDiskPath(r.fileName) ? r.fileName : e.combinePaths(e.getDirectoryPath(n.fileName), r.fileName);
     return t.getSourceFile(i);
    }
   }
   e.tryResolveScriptReference = Vn;
   function Wn(e, t) {
    while (e) {
     if (e.kind === t) {
      return e;
     }
     e = e.parent;
    }
    return undefined;
   }
   e.getAncestor = Wn;
   function Hn(e) {
    return 72 <= e && e <= 145;
   }
   e.isKeyword = Hn;
   function Gn(e) {
    return 117 <= e && e <= 145;
   }
   e.isContextualKeyword = Gn;
   function $n(e) {
    return Hn(e) && !Gn(e);
   }
   e.isNonContextualKeyword = $n;
   function Xn(t) {
    var n = e.stringToToken(t);
    return n !== undefined && $n(n);
   }
   e.isStringANonContextualKeyword = Xn;
   function Qn(e) {
    return 2 <= e && e <= 7;
   }
   e.isTrivia = Qn;
   var Yn;
   (function(e) {
    e[e["Normal"] = 0] = "Normal";
    e[e["Generator"] = 1] = "Generator";
    e[e["Async"] = 2] = "Async";
    e[e["Invalid"] = 4] = "Invalid";
    e[e["AsyncGenerator"] = 3] = "AsyncGenerator";
   })(Yn = e.FunctionFlags || (e.FunctionFlags = {}));
   function Zn(e) {
    if (!e) {
     return 4;
    }
    var t = 0;
    switch (e.kind) {
    case 237:
    case 194:
    case 154:
     if (e.asteriskToken) {
      t |= 1;
     }

    case 195:
     if (ki(e, 256)) {
      t |= 2;
     }
     break;
    }
    if (!e.body) {
     t |= 4;
    }
    return t;
   }
   e.getFunctionFlags = Zn;
   function er(e) {
    switch (e.kind) {
    case 237:
    case 194:
    case 195:
    case 154:
     return e.body !== undefined && e.asteriskToken === undefined && ki(e, 256);
    }
    return false;
   }
   e.isAsyncFunction = er;
   function tr(e) {
    var t = e.kind;
    return t === 9 || t === 8;
   }
   e.isStringOrNumericLiteral = tr;
   function nr(t) {
    var n = e.getNameOfDeclaration(t);
    return !!n && rr(n);
   }
   e.hasDynamicName = nr;
   function rr(e) {
    return e.kind === 147 && !tr(e.expression) && !ir(e.expression);
   }
   e.isDynamicName = rr;
   function ir(t) {
    return e.isPropertyAccessExpression(t) && fr(t.expression);
   }
   e.isWellKnownSymbolSyntactically = ir;
   function ar(t) {
    if (t.kind === 71) {
     return t.escapedText;
    }
    if (t.kind === 9 || t.kind === 8) {
     return G(t.text);
    }
    if (t.kind === 147) {
     var n = t.expression;
     if (ir(n)) {
      return ur(e.idText(n.name));
     } else if (n.kind === 9 || n.kind === 8) {
      return G(n.text);
     }
    }
    return undefined;
   }
   e.getPropertyNameForPropertyNameNode = ar;
   function or(e) {
    switch (e.kind) {
    case 71:
    case 9:
    case 13:
    case 8:
     return true;

    default:
     return false;
    }
   }
   e.isPropertyNameLiteral = or;
   function sr(t) {
    return t.kind === 71 ? e.idText(t) : t.text;
   }
   e.getTextOfIdentifierOrLiteral = sr;
   function cr(e) {
    return e.kind === 71 ? e.escapedText : G(e.text);
   }
   e.getEscapedTextOfIdentifierOrLiteral = cr;
   function ur(e) {
    return "__@" + e;
   }
   e.getPropertyNameForKnownSymbolName = ur;
   function lr(t) {
    return e.startsWith(t.escapedName, "__@");
   }
   e.isKnownSymbol = lr;
   function fr(e) {
    return e.kind === 71 && e.escapedText === "Symbol";
   }
   e.isESSymbolIdentifier = fr;
   function dr(e) {
    return e.escapedText === "push" || e.escapedText === "unshift";
   }
   e.isPushOrUnshiftIdentifier = dr;
   function pr(e) {
    var t = mr(e);
    return t.kind === 149;
   }
   e.isParameterDeclaration = pr;
   function mr(e) {
    while (e.kind === 184) {
     e = e.parent.parent;
    }
    return e;
   }
   e.getRootDeclaration = mr;
   function _r(e) {
    var t = e.kind;
    return t === 155 || t === 194 || t === 237 || t === 195 || t === 154 || t === 156 || t === 157 || t === 242 || t === 277;
   }
   e.nodeStartsNewLexicalEnvironment = _r;
   function gr(t) {
    return e.positionIsSynthesized(t.pos) || e.positionIsSynthesized(t.end);
   }
   e.nodeIsSynthesized = gr;
   function hr(t) {
    return e.getParseTreeNode(t, e.isSourceFile) || t;
   }
   e.getOriginalSourceFile = hr;
   var vr;
   (function(e) {
    e[e["Left"] = 0] = "Left";
    e[e["Right"] = 1] = "Right";
   })(vr = e.Associativity || (e.Associativity = {}));
   function yr(e) {
    var t = kr(e);
    var n = e.kind === 190 && e.arguments !== undefined;
    return br(e.kind, t, n);
   }
   e.getExpressionAssociativity = yr;
   function br(e, t, n) {
    switch (e) {
    case 190:
     return n ? 0 : 1;

    case 200:
    case 197:
    case 198:
    case 196:
    case 199:
    case 203:
    case 205:
     return 1;

    case 202:
     switch (t) {
     case 40:
     case 58:
     case 59:
     case 60:
     case 62:
     case 61:
     case 63:
     case 64:
     case 65:
     case 66:
     case 67:
     case 68:
     case 70:
     case 69:
      return 1;
     }
    }
    return 0;
   }
   e.getOperatorAssociativity = br;
   function xr(e) {
    var t = kr(e);
    var n = e.kind === 190 && e.arguments !== undefined;
    return Sr(e.kind, t, n);
   }
   e.getExpressionPrecedence = xr;
   function kr(e) {
    if (e.kind === 202) {
     return e.operatorToken.kind;
    } else if (e.kind === 200 || e.kind === 201) {
     return e.operator;
    } else {
     return e.kind;
    }
   }
   e.getOperator = kr;
   function Sr(e, t, n) {
    switch (e) {
    case 306:
     return 0;

    case 206:
     return 1;

    case 205:
     return 2;

    case 203:
     return 4;

    case 202:
     switch (t) {
     case 26:
      return 0;

     case 58:
     case 59:
     case 60:
     case 62:
     case 61:
     case 63:
     case 64:
     case 65:
     case 66:
     case 67:
     case 68:
     case 70:
     case 69:
      return 3;

     default:
      return wr(t);
     }

    case 200:
    case 197:
    case 198:
    case 196:
    case 199:
     return 16;

    case 201:
     return 17;

    case 189:
     return 18;

    case 190:
     return n ? 19 : 18;

    case 191:
    case 187:
    case 188:
     return 19;

    case 99:
    case 97:
    case 71:
    case 95:
    case 101:
    case 86:
    case 8:
    case 9:
    case 185:
    case 186:
    case 194:
    case 195:
    case 207:
    case 258:
    case 259:
    case 262:
    case 12:
    case 13:
    case 204:
    case 193:
    case 208:
     return 20;

    default:
     return -1;
    }
   }
   e.getOperatorPrecedence = Sr;
   function wr(e) {
    switch (e) {
    case 54:
     return 5;

    case 53:
     return 6;

    case 49:
     return 7;

    case 50:
     return 8;

    case 48:
     return 9;

    case 32:
    case 33:
    case 34:
    case 35:
     return 10;

    case 27:
    case 29:
    case 30:
    case 31:
    case 93:
    case 92:
    case 118:
     return 11;

    case 45:
    case 46:
    case 47:
     return 12;

    case 37:
    case 38:
     return 13;

    case 39:
    case 41:
    case 42:
     return 14;

    case 40:
     return 15;
    }
    return -1;
   }
   e.getBinaryOperatorPrecedence = wr;
   function Cr() {
    var t = [];
    var n = [];
    var r = e.createMap();
    var i = false;
    return {
     add: s,
     lookup: o,
     getGlobalDiagnostics: c,
     getDiagnostics: u,
     reattachFileDiagnostics: a
    };
    function a(t) {
     e.forEach(r.get(t.fileName), function(e) {
      return e.file = t;
     });
    }
    function o(n) {
     var i;
     if (n.file) {
      i = r.get(n.file.fileName);
     } else {
      i = t;
     }
     if (!i) {
      return undefined;
     }
     var a = e.binarySearch(i, n, e.identity, e.compareDiagnosticsSkipRelatedInformation);
     if (a >= 0) {
      return i[a];
     }
     return undefined;
    }
    function s(a) {
     var o;
     if (a.file) {
      o = r.get(a.file.fileName);
      if (!o) {
       o = [];
       r.set(a.file.fileName, o);
       e.insertSorted(n, a.file.fileName, e.compareStringsCaseSensitive);
      }
     } else {
      if (i) {
       i = false;
       t = t.slice();
      }
      o = t;
     }
     e.insertSorted(o, a, e.compareDiagnostics);
    }
    function c() {
     i = true;
     return t;
    }
    function u(i) {
     if (i) {
      return r.get(i) || [];
     }
     var a = e.flatMap(n, function(e) {
      return r.get(e);
     });
     if (!t.length) {
      return a;
     }
     a.unshift.apply(a, t);
     return a;
    }
   }
   e.createDiagnosticCollection = Cr;
   var Dr = /[\\\"\u0000-\u001f\t\v\f\b\r\n\u2028\u2029\u0085]/g;
   var Tr = /[\\\'\u0000-\u001f\t\v\f\b\r\n\u2028\u2029\u0085]/g;
   var Er = /[\\\`\u0000-\u001f\t\v\f\b\r\n\u2028\u2029\u0085]/g;
   var Nr = e.createMapFromTemplate({
    "\t": "\\t",
    "\v": "\\v",
    "\f": "\\f",
    "\b": "\\b",
    "\r": "\\r",
    "\n": "\\n",
    "\\": "\\\\",
    '"': '\\"',
    "'": "\\'",
    "`": "\\`",
    "\u2028": "\\u2028",
    "\u2029": "\\u2029",
    "": "\\u0085"
   });
   function Ar(e, t) {
    var n = t === 96 ? Er : t === 39 ? Tr : Dr;
    return e.replace(n, Fr);
   }
   e.escapeString = Ar;
   function Fr(e, t, n) {
    if (e.charCodeAt(0) === 0) {
     var r = n.charCodeAt(t + e.length);
     if (r >= 48 && r <= 57) {
      return "\\x00";
     }
     return "\\0";
    }
    return Nr.get(e) || Ir(e.charCodeAt(0));
   }
   function Pr(e) {
    var t = e.charCodeAt(0);
    return t >= 97 && t <= 122 || e.indexOf("-") > -1;
   }
   e.isIntrinsicJsxName = Pr;
   function Ir(e) {
    var t = e.toString(16).toUpperCase();
    var n = ("0000" + t).slice(-4);
    return "\\u" + n;
   }
   var Or = /[^\u0000-\u007F]/g;
   function Mr(e, t) {
    e = Ar(e, t);
    return Or.test(e) ? e.replace(Or, function(e) {
     return Ir(e.charCodeAt(0));
    }) : e;
   }
   e.escapeNonAsciiString = Mr;
   var Lr = [ "", "    " ];
   function Rr(e) {
    if (Lr[e] === undefined) {
     Lr[e] = Rr(e - 1) + Lr[1];
    }
    return Lr[e];
   }
   e.getIndentString = Rr;
   function Br() {
    return Lr[1].length;
   }
   e.getIndentSize = Br;
   function zr(t) {
    var n;
    var r;
    var i;
    var a;
    var o;
    function s(t) {
     var r = e.computeLineStarts(t);
     if (r.length > 1) {
      a = a + r.length - 1;
      o = n.length - t.length + e.last(r);
      i = o - n.length === 0;
     } else {
      i = false;
     }
    }
    function c(e) {
     if (e && e.length) {
      if (i) {
       e = Rr(r) + e;
       i = false;
      }
      n += e;
      s(e);
     }
    }
    function u() {
     n = "";
     r = 0;
     i = true;
     a = 0;
     o = 0;
    }
    function l(e) {
     if (e !== undefined) {
      n += e;
      s(e);
     }
    }
    function f(e) {
     if (e && e.length) {
      c(e);
     }
    }
    function d() {
     if (!i) {
      n += t;
      a++;
      o = n.length;
      i = true;
     }
    }
    function p(e, t) {
     var n = q(e, t);
     c(n);
     s(n);
    }
    u();
    return {
     write: c,
     rawWrite: l,
     writeTextOfNode: p,
     writeLiteral: f,
     writeLine: d,
     increaseIndent: function() {
      r++;
     },
     decreaseIndent: function() {
      r--;
     },
     getIndent: function() {
      return r;
     },
     getTextPos: function() {
      return n.length;
     },
     getLine: function() {
      return a;
     },
     getColumn: function() {
      return i ? r * Br() : n.length - o;
     },
     getText: function() {
      return n;
     },
     isAtStartOfLine: function() {
      return i;
     },
     clear: u,
     reportInaccessibleThisError: e.noop,
     reportPrivateInBaseOfClassExpression: e.noop,
     reportInaccessibleUniqueSymbolError: e.noop,
     trackSymbol: e.noop,
     writeKeyword: c,
     writeOperator: c,
     writeParameter: c,
     writeProperty: c,
     writePunctuation: c,
     writeSpace: c,
     writeStringLiteral: c,
     writeSymbol: c
    };
   }
   e.createTextWriter = zr;
   function jr(e, t, n) {
    return t.moduleName || Ur(e, t.fileName, n && n.fileName);
   }
   e.getResolvedExternalModuleName = jr;
   function qr(e, t, n) {
    var r = t.getExternalModuleFileFromDeclaration(n);
    if (!r || r.isDeclarationFile) {
     return undefined;
    }
    return jr(e, r);
   }
   e.getExternalModuleNameFromDeclaration = qr;
   function Ur(t, n, r) {
    var i = function(e) {
     return t.getCanonicalFileName(e);
    };
    var a = s(r ? e.getDirectoryPath(r) : t.getCommonSourceDirectory(), t.getCurrentDirectory(), i);
    var o = e.getNormalizedAbsolutePath(n, t.getCurrentDirectory());
    var c = e.getRelativePathToDirectoryOrUrl(a, o, a, i, false);
    var u = e.removeFileExtension(c);
    return r ? e.ensurePathIsNonModuleName(u) : u;
   }
   e.getExternalModuleNameFromPath = Ur;
   function Jr(t, n, r) {
    var i = n.getCompilerOptions();
    var a;
    if (i.outDir) {
     a = e.removeFileExtension(Gr(t, n, i.outDir));
    } else {
     a = e.removeFileExtension(t);
    }
    return a + r;
   }
   e.getOwnEmitOutputFilePath = Jr;
   function Kr(t, n) {
    var r = n.getCompilerOptions();
    var i = r.declarationDir || r.outDir;
    var a = i ? Gr(t, n, i) : t;
    return e.removeFileExtension(a) + ".d.ts";
   }
   e.getDeclarationEmitOutputFilePath = Kr;
   function Vr(t, n, r, i, a) {
    var o = n.declarationDir || n.outDir;
    var s = o ? $r(t, o, r, i, a) : t;
    return e.removeFileExtension(s) + ".d.ts";
   }
   e.getDeclarationEmitOutputFilePathWorker = Vr;
   function Wr(t, n) {
    var r = t.getCompilerOptions();
    var i = function(e) {
     return t.isSourceFileFromExternalLibrary(e);
    };
    if (r.outFile || r.out) {
     var a = e.getEmitModuleKind(r);
     var o = a === e.ModuleKind.AMD || a === e.ModuleKind.System;
     return e.filter(t.getSourceFiles(), function(t) {
      return (o || !e.isExternalModule(t)) && Hr(t, r, i);
     });
    } else {
     var s = n === undefined ? t.getSourceFiles() : [ n ];
     return e.filter(s, function(e) {
      return Hr(e, r, i);
     });
    }
   }
   e.getSourceFilesToEmit = Wr;
   function Hr(e, t, n) {
    return !(t.noEmitForJsFiles && Dt(e)) && !e.isDeclarationFile && !n(e);
   }
   e.sourceFileMayBeEmitted = Hr;
   function Gr(e, t, n) {
    return $r(e, n, t.getCurrentDirectory(), t.getCommonSourceDirectory(), function(e) {
     return t.getCanonicalFileName(e);
    });
   }
   e.getSourceFilePathInNewDir = Gr;
   function $r(t, n, r, i, a) {
    var o = e.getNormalizedAbsolutePath(t, r);
    var s = a(o).indexOf(a(i)) === 0;
    o = s ? o.substring(i.length) : o;
    return e.combinePaths(n, o);
   }
   e.getSourceFilePathInNewDirWorker = $r;
   function Xr(t, n, r, i, a, o) {
    t.writeFile(r, i, a, function(t) {
     n.add(e.createCompilerDiagnostic(e.Diagnostics.Could_not_write_file_0_Colon_1, r, t));
    }, o);
   }
   e.writeFile = Xr;
   function Qr(t, n) {
    return e.getLineAndCharacterOfPosition(t, n).line;
   }
   e.getLineOfLocalPosition = Qr;
   function Yr(t, n) {
    return e.computeLineAndCharacterOfPosition(t, n).line;
   }
   e.getLineOfLocalPositionFromLineMap = Yr;
   function Zr(t) {
    return e.find(t.members, function(t) {
     return e.isConstructorDeclaration(t) && O(t.body);
    });
   }
   e.getFirstConstructorWithBody = Zr;
   function ei(e) {
    if (e && e.parameters.length > 0) {
     var t = e.parameters.length === 2 && ri(e.parameters[0]);
     return e.parameters[t ? 1 : 0];
    }
   }
   function ti(e) {
    var t = ei(e);
    return t && t.type;
   }
   e.getSetAccessorTypeAnnotationNode = ti;
   function ni(t) {
    if (t.parameters.length && !e.isJSDocSignature(t)) {
     var n = t.parameters[0];
     if (ri(n)) {
      return n;
     }
    }
   }
   e.getThisParameter = ni;
   function ri(e) {
    return ii(e.name);
   }
   e.parameterIsThisKeyword = ri;
   function ii(e) {
    return !!e && e.kind === 71 && ai(e);
   }
   e.isThisIdentifier = ii;
   function ai(e) {
    return e.originalKeywordKind === 99;
   }
   e.identifierIsThisKeyword = ai;
   function oi(t, n) {
    var r;
    var i;
    var a;
    var o;
    if (nr(n)) {
     r = n;
     if (n.kind === 156) {
      a = n;
     } else if (n.kind === 157) {
      o = n;
     } else {
      e.Debug.fail("Accessor has wrong kind");
     }
    } else {
     e.forEach(t, function(e) {
      if ((e.kind === 156 || e.kind === 157) && ki(e, 32) === ki(n, 32)) {
       var t = ar(e.name);
       var s = ar(n.name);
       if (t === s) {
        if (!r) {
         r = e;
        } else if (!i) {
         i = e;
        }
        if (e.kind === 156 && !a) {
         a = e;
        }
        if (e.kind === 157 && !o) {
         o = e;
        }
       }
      }
     });
    }
    return {
     firstAccessor: r,
     secondAccessor: i,
     getAccessor: a,
     setAccessor: o
    };
   }
   e.getAllAccessorDeclarations = oi;
   function si(t) {
    return t.type || (Et(t) ? e.getJSDocType(t) : undefined);
   }
   e.getEffectiveTypeAnnotationNode = si;
   function ci(e) {
    return e.type;
   }
   e.getTypeAnnotationNode = ci;
   function ui(t) {
    if (e.isJSDocSignature(t)) {
     return t.type && t.type.typeExpression && t.type.typeExpression.type;
    }
    return t.type || (Et(t) ? e.getJSDocReturnType(t) : undefined);
   }
   e.getEffectiveReturnTypeNode = ui;
   function li(t) {
    return e.flatMap(e.getJSDocTags(t), function(e) {
     return fi(e) ? e.typeParameters : undefined;
    });
   }
   e.getJSDocTypeParameterDeclarations = li;
   function fi(t) {
    return e.isJSDocTemplateTag(t) && !(t.parent.kind === 289 && t.parent.tags.some(on));
   }
   function di(e) {
    var t = ei(e);
    return t && si(t);
   }
   e.getEffectiveSetAccessorTypeAnnotationNode = di;
   function pi(e, t, n, r) {
    mi(e, t, n.pos, r);
   }
   e.emitNewLineBeforeLeadingComments = pi;
   function mi(e, t, n, r) {
    if (r && r.length && n !== r[0].pos && Yr(e, n) !== Yr(e, r[0].pos)) {
     t.writeLine();
    }
   }
   e.emitNewLineBeforeLeadingCommentsOfPosition = mi;
   function _i(e, t, n, r) {
    if (n !== r && Yr(e, n) !== Yr(e, r)) {
     t.writeLine();
    }
   }
   e.emitNewLineBeforeLeadingCommentOfPosition = _i;
   function gi(e, t, n, r, i, a, o, s) {
    if (r && r.length > 0) {
     if (i) {
      n.write(" ");
     }
     var c = false;
     for (var u = 0, l = r; u < l.length; u++) {
      var f = l[u];
      if (c) {
       n.write(" ");
       c = false;
      }
      s(e, t, n, f.pos, f.end, o);
      if (f.hasTrailingNewLine) {
       n.writeLine();
      } else {
       c = true;
      }
     }
     if (c && a) {
      n.write(" ");
     }
    }
   }
   e.emitComments = gi;
   function hi(t, n, r, i, a, o, s) {
    var c;
    var u;
    if (s) {
     if (a.pos === 0) {
      c = e.filter(e.getLeadingCommentRanges(t, a.pos), v);
     }
    } else {
     c = e.getLeadingCommentRanges(t, a.pos);
    }
    if (c) {
     var l = [];
     var f = void 0;
     for (var d = 0, p = c; d < p.length; d++) {
      var m = p[d];
      if (f) {
       var _ = Yr(n, f.end);
       var g = Yr(n, m.pos);
       if (g >= _ + 2) {
        break;
       }
      }
      l.push(m);
      f = m;
     }
     if (l.length) {
      var _ = Yr(n, e.last(l).end);
      var h = Yr(n, e.skipTrivia(t, a.pos));
      if (h >= _ + 2) {
       pi(n, r, a, c);
       gi(t, n, r, l, false, true, o, i);
       u = {
        nodePos: a.pos,
        detachedCommentEndPos: e.last(l).end
       };
      }
     }
    }
    return u;
    function v(e) {
     return R(t, e.pos);
    }
   }
   e.emitDetachedComments = hi;
   function vi(t, n, r, i, a, o) {
    if (t.charCodeAt(i + 1) === 42) {
     var s = e.computeLineAndCharacterOfPosition(n, i);
     var c = n.length;
     var u = void 0;
     for (var l = i, f = s.line; l < a; f++) {
      var d = f + 1 === c ? t.length + 1 : n[f + 1];
      if (l !== i) {
       if (u === undefined) {
        u = bi(t, n[s.line], i);
       }
       var p = r.getIndent() * Br();
       var m = p - u + bi(t, l, d);
       if (m > 0) {
        var _ = m % Br();
        var g = Rr((m - _) / Br());
        r.rawWrite(g);
        while (_) {
         r.rawWrite(" ");
         _--;
        }
       } else {
        r.rawWrite("");
       }
      }
      yi(t, a, r, o, l, d);
      l = d;
     }
    } else {
     r.write(t.substring(i, a));
    }
   }
   e.writeCommentRange = vi;
   function yi(e, t, n, r, i, a) {
    var o = Math.min(t, a - 1);
    var s = e.substring(i, o).replace(/^\s+|\s+$/g, "");
    if (s) {
     n.write(s);
     if (o !== t) {
      n.writeLine();
     }
    } else {
     n.writeLiteral(r);
    }
   }
   function bi(t, n, r) {
    var i = 0;
    for (;n < r && e.isWhiteSpaceSingleLine(t.charCodeAt(n)); n++) {
     if (t.charCodeAt(n) === 9) {
      i += Br() - i % Br();
     } else {
      i++;
     }
    }
    return i;
   }
   function xi(e) {
    return Di(e) !== 0;
   }
   e.hasModifiers = xi;
   function ki(e, t) {
    return !!Ci(e, t);
   }
   e.hasModifier = ki;
   function Si(e) {
    return ki(e, 32);
   }
   e.hasStaticModifier = Si;
   function wi(e) {
    return ki(e, 64);
   }
   e.hasReadonlyModifier = wi;
   function Ci(e, t) {
    return Di(e) & t;
   }
   e.getSelectedModifierFlags = Ci;
   function Di(e) {
    if (e.modifierFlagsCache & 536870912) {
     return e.modifierFlagsCache & ~536870912;
    }
    var t = Ti(e);
    e.modifierFlagsCache = t | 536870912;
    return t;
   }
   e.getModifierFlags = Di;
   function Ti(e) {
    var t = 0;
    if (e.modifiers) {
     for (var n = 0, r = e.modifiers; n < r.length; n++) {
      var i = r[n];
      t |= Ei(i.kind);
     }
    }
    if (e.flags & 4 || e.kind === 71 && e.isInJSDocNamespace) {
     t |= 1;
    }
    return t;
   }
   e.getModifierFlagsNoCache = Ti;
   function Ei(e) {
    switch (e) {
    case 115:
     return 32;

    case 114:
     return 4;

    case 113:
     return 16;

    case 112:
     return 8;

    case 117:
     return 128;

    case 84:
     return 1;

    case 124:
     return 2;

    case 76:
     return 2048;

    case 79:
     return 512;

    case 120:
     return 256;

    case 132:
     return 64;
    }
    return 0;
   }
   e.modifierToFlag = Ei;
   function Ni(e) {
    return e === 54 || e === 53 || e === 51;
   }
   e.isLogicalOperator = Ni;
   function Ai(e) {
    return e >= 58 && e <= 70;
   }
   e.isAssignmentOperator = Ai;
   function Fi(t) {
    if (e.isExpressionWithTypeArguments(t) && t.parent.token === 85 && e.isClassLike(t.parent.parent)) {
     return t.parent.parent;
    }
   }
   e.tryGetClassExtendingExpressionWithTypeArguments = Fi;
   function Pi(t, n) {
    return e.isBinaryExpression(t) && (n ? t.operatorToken.kind === 58 : Ai(t.operatorToken.kind)) && e.isLeftHandSideExpression(t.left);
   }
   e.isAssignmentExpression = Pi;
   function Ii(e) {
    if (Pi(e, true)) {
     var t = e.left.kind;
     return t === 186 || t === 185;
    }
    return false;
   }
   e.isDestructuringAssignment = Ii;
   function Oi(e) {
    return Fi(e) !== undefined;
   }
   e.isExpressionWithTypeArgumentsInClassExtendsClause = Oi;
   function Mi(t) {
    return t.kind === 209 && Li(t.expression) && t.parent && t.parent.token === 108 && t.parent.parent && e.isClassLike(t.parent.parent);
   }
   e.isExpressionWithTypeArgumentsInClassImplementsClause = Mi;
   function Li(e) {
    return e.kind === 71 || Ri(e);
   }
   e.isEntityNameExpression = Li;
   function Ri(t) {
    return e.isPropertyAccessExpression(t) && Li(t.expression);
   }
   e.isPropertyAccessEntityNameExpression = Ri;
   function Bi(t) {
    return e.isPropertyAccessExpression(t) && t.name.escapedText === "prototype";
   }
   e.isPrototypeAccess = Bi;
   function zi(e) {
    return e.parent.kind === 146 && e.parent.right === e || e.parent.kind === 187 && e.parent.name === e;
   }
   e.isRightSideOfQualifiedNameOrPropertyAccess = zi;
   function ji(e) {
    return e.kind === 186 && e.properties.length === 0;
   }
   e.isEmptyObjectLiteral = ji;
   function qi(e) {
    return e.kind === 185 && e.elements.length === 0;
   }
   e.isEmptyArrayLiteral = qi;
   function Ui(e) {
    return Ji(e) ? e.declarations[0].localSymbol : undefined;
   }
   e.getLocalSymbolForExportDefault = Ui;
   function Ji(t) {
    return t && e.length(t.declarations) > 0 && ki(t.declarations[0], 512);
   }
   function Ki(t) {
    return e.find(e.supportedTypescriptExtensionsForExtractExtension, function(n) {
     return e.fileExtensionIs(t, n);
    });
   }
   e.tryExtractTypeScriptExtension = Ki;
   function Vi(t) {
    var n = [];
    var r = t.length;
    for (var i = 0; i < r; i++) {
     var a = t.charCodeAt(i);
     if (a < 128) {
      n.push(a);
     } else if (a < 2048) {
      n.push(a >> 6 | 192);
      n.push(a & 63 | 128);
     } else if (a < 65536) {
      n.push(a >> 12 | 224);
      n.push(a >> 6 & 63 | 128);
      n.push(a & 63 | 128);
     } else if (a < 131072) {
      n.push(a >> 18 | 240);
      n.push(a >> 12 & 63 | 128);
      n.push(a >> 6 & 63 | 128);
      n.push(a & 63 | 128);
     } else {
      e.Debug.assert(false, "Unexpected code point");
     }
    }
    return n;
   }
   var Wi = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
   function Hi(e) {
    var t = "";
    var n = Vi(e);
    var r = 0;
    var i = n.length;
    var a, o, s, c;
    while (r < i) {
     a = n[r] >> 2;
     o = (n[r] & 3) << 4 | n[r + 1] >> 4;
     s = (n[r + 1] & 15) << 2 | n[r + 2] >> 6;
     c = n[r + 2] & 63;
     if (r + 1 >= i) {
      s = c = 64;
     } else if (r + 2 >= i) {
      c = 64;
     }
     t += Wi.charAt(a) + Wi.charAt(o) + Wi.charAt(s) + Wi.charAt(c);
     r += 3;
    }
    return t;
   }
   e.convertToBase64 = Hi;
   function Gi(e) {
    var t = "";
    var n = 0;
    var r = e.length;
    while (n < r) {
     var i = e[n];
     if (i < 128) {
      t += String.fromCharCode(i);
      n++;
     } else if ((i & 192) === 192) {
      var a = i & 63;
      n++;
      var o = e[n];
      while ((o & 192) === 128) {
       a = a << 6 | o & 63;
       n++;
       o = e[n];
      }
      t += String.fromCharCode(a);
     } else {
      t += String.fromCharCode(i);
      n++;
     }
    }
    return t;
   }
   function $i(e, t) {
    if (e && e.base64encode) {
     return e.base64encode(t);
    }
    return Hi(t);
   }
   e.base64encode = $i;
   function Xi(e, t) {
    if (e && e.base64decode) {
     return e.base64decode(t);
    }
    var n = t.length;
    var r = [];
    var i = 0;
    while (i < n) {
     if (t.charCodeAt(i) === Wi.charCodeAt(64)) {
      break;
     }
     var a = Wi.indexOf(t[i]);
     var o = Wi.indexOf(t[i + 1]);
     var s = Wi.indexOf(t[i + 2]);
     var c = Wi.indexOf(t[i + 3]);
     var u = (a & 63) << 2 | o >> 4 & 3;
     var l = (o & 15) << 4 | s >> 2 & 15;
     var f = (s & 3) << 6 | c & 63;
     if (l === 0 && s !== 0) {
      r.push(u);
     } else if (f === 0 && c !== 0) {
      r.push(u, l);
     } else {
      r.push(u, l, f);
     }
     i += 4;
    }
    return Gi(r);
   }
   e.base64decode = Xi;
   var Qi = "\r\n";
   var Yi = "\n";
   function Zi(t, n) {
    switch (t.newLine) {
    case 0:
     return Qi;

    case 1:
     return Yi;
    }
    return n ? n() : e.sys ? e.sys.newLine : Qi;
   }
   e.getNewLineCharacter = Zi;
   function ea(e, t, n) {
    if (e === void 0) {
     e = 0;
    }
    var r = ta(t);
    if (e === 0) {
     return r.length > 0 && r[0][0] === 0 ? r[0][1] : "0";
    }
    if (n) {
     var i = "";
     var a = e;
     for (var o = r.length - 1; o >= 0 && a !== 0; o--) {
      var s = r[o], c = s[0], u = s[1];
      if (c !== 0 && (a & c) === c) {
       a &= ~c;
       i = "" + u + (i ? ", " : "") + i;
      }
     }
     if (a === 0) {
      return i;
     }
    } else {
     for (var l = 0, f = r; l < f.length; l++) {
      var d = f[l], c = d[0], u = d[1];
      if (c === e) {
       return u;
      }
     }
    }
    return e.toString();
   }
   function ta(t) {
    var n = [];
    for (var r in t) {
     var i = t[r];
     if (typeof i === "number") {
      n.push([ i, r ]);
     }
    }
    return e.stableSort(n, function(t, n) {
     return e.compareValues(t[0], n[0]);
    });
   }
   function na(t) {
    return ea(t, e.SyntaxKind, false);
   }
   e.formatSyntaxKind = na;
   function ra(t) {
    return ea(t, e.ModifierFlags, true);
   }
   e.formatModifierFlags = ra;
   function ia(t) {
    return ea(t, e.TransformFlags, true);
   }
   e.formatTransformFlags = ia;
   function aa(t) {
    return ea(t, e.EmitFlags, true);
   }
   e.formatEmitFlags = aa;
   function oa(t) {
    return ea(t, e.SymbolFlags, true);
   }
   e.formatSymbolFlags = oa;
   function sa(t) {
    return ea(t, e.TypeFlags, true);
   }
   e.formatTypeFlags = sa;
   function ca(t) {
    return ea(t, e.ObjectFlags, true);
   }
   e.formatObjectFlags = ca;
   function ua(e, t) {
    return {
     pos: e,
     end: t
    };
   }
   e.createRange = ua;
   function la(e, t) {
    return ua(e.pos, t);
   }
   e.moveRangeEnd = la;
   function fa(e, t) {
    return ua(t, e.end);
   }
   e.moveRangePos = fa;
   function da(e) {
    return e.decorators && e.decorators.length > 0 ? fa(e, e.decorators.end) : e;
   }
   e.moveRangePastDecorators = da;
   function pa(e) {
    return e.modifiers && e.modifiers.length > 0 ? fa(e, e.modifiers.end) : da(e);
   }
   e.moveRangePastModifiers = pa;
   function ma(e) {
    return e.pos === e.end;
   }
   e.isCollapsedRange = ma;
   function _a(t, n) {
    return ua(t, t + e.tokenToString(n).length);
   }
   e.createTokenRange = _a;
   function ga(e, t) {
    return ya(e, e, t);
   }
   e.rangeIsOnSingleLine = ga;
   function ha(e, t, n) {
    return xa(ka(e, n), ka(t, n), n);
   }
   e.rangeStartPositionsAreOnSameLine = ha;
   function va(e, t, n) {
    return xa(e.end, t.end, n);
   }
   e.rangeEndPositionsAreOnSameLine = va;
   function ya(e, t, n) {
    return xa(ka(e, n), t.end, n);
   }
   e.rangeStartIsOnSameLineAsRangeEnd = ya;
   function ba(e, t, n) {
    return xa(e.end, ka(t, n), n);
   }
   e.rangeEndIsOnSameLineAsRangeStart = ba;
   function xa(e, t, n) {
    return e === t || Qr(n, e) === Qr(n, t);
   }
   e.positionsAreOnSameLine = xa;
   function ka(t, n) {
    return e.positionIsSynthesized(t.pos) ? -1 : e.skipTrivia(n.text, t.pos);
   }
   e.getStartPositionOfRange = ka;
   function Sa(t) {
    var n = e.getParseTreeNode(t);
    if (n) {
     switch (n.parent.kind) {
     case 241:
     case 242:
      return n === n.parent.name;
     }
    }
    return false;
   }
   e.isDeclarationNameOfEnumOrNamespace = Sa;
   function wa(t) {
    return e.filter(t.declarations, Ca);
   }
   e.getInitializedVariables = wa;
   function Ca(e) {
    return e.initializer !== undefined;
   }
   function Da(e) {
    return e.watch && e.hasOwnProperty("watch");
   }
   e.isWatchSet = Da;
   function Ta(e) {
    e.close();
   }
   e.closeFileWatcher = Ta;
   function Ea(e) {
    return e.flags & 33554432 ? e.checkFlags : 0;
   }
   e.getCheckFlags = Ea;
   function Na(t) {
    if (t.valueDeclaration) {
     var n = e.getCombinedModifierFlags(t.valueDeclaration);
     return t.parent && t.parent.flags & 32 ? n : n & ~28;
    }
    if (Ea(t) & 6) {
     var r = t.checkFlags;
     var i = r & 256 ? 8 : r & 64 ? 4 : 16;
     var a = r & 512 ? 32 : 0;
     return i | a;
    }
    if (t.flags & 4194304) {
     return 4 | 32;
    }
    return 0;
   }
   e.getDeclarationModifierFlagsFromSymbol = Na;
   function Aa(e, t) {
    return e.flags & 2097152 ? t.getAliasedSymbol(e) : e;
   }
   e.skipAlias = Aa;
   function Fa(e) {
    return e.exportSymbol ? e.exportSymbol.flags | e.flags : e.flags;
   }
   e.getCombinedLocalAndExportSymbolFlags = Fa;
   function Pa(e) {
    return Ma(e) === 1;
   }
   e.isWriteOnlyAccess = Pa;
   function Ia(e) {
    return Ma(e) !== 0;
   }
   e.isWriteAccess = Ia;
   var Oa;
   (function(e) {
    e[e["Read"] = 0] = "Read";
    e[e["Write"] = 1] = "Write";
    e[e["ReadWrite"] = 2] = "ReadWrite";
   })(Oa || (Oa = {}));
   function Ma(e) {
    var t = e.parent;
    if (!t) return 0;
    switch (t.kind) {
    case 201:
    case 200:
     var n = t.operator;
     return n === 43 || n === 44 ? o() : 0;

    case 202:
     var r = t, i = r.left, a = r.operatorToken;
     return i === e && Ai(a.kind) ? o() : 0;

    case 187:
     return t.name !== e ? 0 : Ma(t);

    default:
     return 0;
    }
    function o() {
     return t.parent && t.parent.kind === 219 ? 1 : 2;
    }
   }
   function La(e, t) {
    if (!e || !t || Object.keys(e).length !== Object.keys(t).length) {
     return false;
    }
    for (var n in e) {
     if (typeof e[n] === "object") {
      if (!La(e[n], t[n])) {
       return false;
      }
     } else if (typeof e[n] !== "function") {
      if (e[n] !== t[n]) {
       return false;
      }
     }
    }
    return true;
   }
   e.compareDataObjects = La;
   function Ra(e, t) {
    e.forEach(t);
    e.clear();
   }
   e.clearMap = Ra;
   function Ba(e, t, n) {
    var r = n.createNewValue, i = n.onDeleteValue, a = n.onExistingValue;
    e.forEach(function(n, r) {
     var o = t.get(r);
     if (o === undefined) {
      e.delete(r);
      i(n, r);
     } else if (a) {
      a(n, o, r);
     }
    });
    t.forEach(function(t, n) {
     if (!e.has(n)) {
      e.set(n, r(n, t));
     }
    });
   }
   e.mutateMap = Ba;
   function za(t, n) {
    while (true) {
     var r = n(t);
     if (r !== undefined) {
      return r;
     }
     var i = e.getDirectoryPath(t);
     if (i === t) {
      return undefined;
     }
     t = i;
    }
   }
   e.forEachAncestorDirectory = za;
   function ja(e) {
    return !!(Ja(e) & 16) && !!e.symbol && qa(e.symbol);
   }
   e.isAbstractConstructorType = ja;
   function qa(e) {
    if (e.flags & 32) {
     var t = Ua(e);
     return !!t && ki(t, 128);
    }
    return false;
   }
   e.isAbstractConstructorSymbol = qa;
   function Ua(t) {
    return e.find(t.declarations, e.isClassLike);
   }
   e.getClassLikeDeclarationOfSymbol = Ua;
   function Ja(e) {
    return e.flags & 131072 ? e.objectFlags : 0;
   }
   e.getObjectFlags = Ja;
   function Ka(e, t) {
    return t.getSignaturesOfType(e, 0).length !== 0 || t.getSignaturesOfType(e, 1).length !== 0;
   }
   e.typeHasCallOrConstructSignatures = Ka;
   function Va(e, t) {
    return !!za(e, function(e) {
     return t(e) ? true : undefined;
    });
   }
   e.forSomeAncestorDirectory = Va;
   function Wa(t) {
    return !!t && !!t.declarations && !!t.declarations[0] && e.isNamespaceExportDeclaration(t.declarations[0]);
   }
   e.isUMDExportSymbol = Wa;
   function Ha(t) {
    var n = t.moduleSpecifier;
    return e.isStringLiteral(n) ? n.text : U(n);
   }
   e.showModuleSpecifier = Ha;
   function Ga(t) {
    var n;
    e.forEachChild(t, function(e) {
     if (O(e)) n = e;
    }, function(e) {
     for (var t = e.length - 1; t >= 0; t--) {
      if (O(e[t])) {
       n = e[t];
       break;
      }
     }
    });
    return n;
   }
   e.getLastChild = Ga;
   function $a(e, t, n) {
    if (n === void 0) {
     n = true;
    }
    t = String(t);
    if (e.has(t)) {
     return false;
    }
    e.set(t, n);
    return true;
   }
   e.addToSeen = $a;
   function Xa(t) {
    return e.isClassLike(t) || e.isInterfaceDeclaration(t) || e.isTypeLiteralNode(t);
   }
   e.isObjectTypeDeclaration = Xa;
  })(s || (s = {}));
  (function(e) {
   function t(e) {
    switch (e.target) {
    case 6:
     return "lib.esnext.full.d.ts";

    case 5:
     return "lib.es2018.full.d.ts";

    case 4:
     return "lib.es2017.full.d.ts";

    case 3:
     return "lib.es2016.full.d.ts";

    case 2:
     return "lib.es6.d.ts";

    default:
     return "lib.d.ts";
    }
   }
   e.getDefaultLibFileName = t;
   function n(e) {
    return e.start + e.length;
   }
   e.textSpanEnd = n;
   function r(e) {
    return e.length === 0;
   }
   e.textSpanIsEmpty = r;
   function i(e, t) {
    return t >= e.start && t < n(e);
   }
   e.textSpanContainsPosition = i;
   function a(e, t) {
    return t >= e.pos && t <= e.end;
   }
   e.textRangeContainsPositionInclusive = a;
   function o(e, t) {
    return t.start >= e.start && n(t) <= n(e);
   }
   e.textSpanContainsTextSpan = o;
   function s(e, t) {
    return c(e, t) !== undefined;
   }
   e.textSpanOverlapsWith = s;
   function c(e, t) {
    var n = p(e, t);
    return n && n.length === 0 ? undefined : n;
   }
   e.textSpanOverlap = c;
   function u(e, t) {
    return f(e.start, e.length, t.start, t.length);
   }
   e.textSpanIntersectsWithTextSpan = u;
   function l(e, t, n) {
    return f(e.start, e.length, t, n);
   }
   e.textSpanIntersectsWith = l;
   function f(e, t, n, r) {
    var i = e + t;
    var a = n + r;
    return n <= i && a >= e;
   }
   e.decodedTextSpanIntersectsWith = f;
   function d(e, t) {
    return t <= n(e) && t >= e.start;
   }
   e.textSpanIntersectsWithPosition = d;
   function p(e, t) {
    var r = Math.max(e.start, t.start);
    var i = Math.min(n(e), n(t));
    return r <= i ? g(r, i) : undefined;
   }
   e.textSpanIntersection = p;
   function m(e, t) {
    if (e < 0) {
     throw new Error("start < 0");
    }
    if (t < 0) {
     throw new Error("length < 0");
    }
    return {
     start: e,
     length: t
    };
   }
   e.createTextSpan = m;
   function _(t, n) {
    if (n === void 0) {
     n = t;
    }
    e.Debug.assert(n >= t);
    return {
     pos: t,
     end: n
    };
   }
   e.createTextRange = _;
   function g(e, t) {
    return m(e, t - e);
   }
   e.createTextSpanFromBounds = g;
   function h(e) {
    return m(e.span.start, e.newLength);
   }
   e.textChangeRangeNewSpan = h;
   function v(e) {
    return r(e.span) && e.newLength === 0;
   }
   e.textChangeRangeIsUnchanged = v;
   function y(e, t) {
    if (t < 0) {
     throw new Error("newLength < 0");
    }
    return {
     span: e,
     newLength: t
    };
   }
   e.createTextChangeRange = y;
   e.unchangedTextChangeRange = y(m(0, 0), 0);
   function b(t) {
    if (t.length === 0) {
     return e.unchangedTextChangeRange;
    }
    if (t.length === 1) {
     return t[0];
    }
    var r = t[0];
    var i = r.span.start;
    var a = n(r.span);
    var o = i + r.newLength;
    for (var s = 1; s < t.length; s++) {
     var c = t[s];
     var u = i;
     var l = a;
     var f = o;
     var d = c.span.start;
     var p = n(c.span);
     var m = d + c.newLength;
     i = Math.min(u, d);
     a = Math.max(l, l + (p - f));
     o = Math.max(m, m + (f - p));
    }
    return y(g(i, a), o - i);
   }
   e.collapseTextChangeRangesAcrossMultipleVersions = b;
   function x(t) {
    if (t && t.kind === 148) {
     for (var n = t; n; n = n.parent) {
      if (e.isFunctionLike(n) || e.isClassLike(n) || n.kind === 239) {
       return n;
      }
     }
    }
   }
   e.getTypeParameterOwner = x;
   function k(t) {
    return e.hasModifier(t, 92) && t.parent.kind === 155;
   }
   e.isParameterPropertyDeclaration = k;
   function S(t) {
    if (e.isBindingPattern(t)) {
     return e.every(t.elements, w);
    }
    return false;
   }
   e.isEmptyBindingPattern = S;
   function w(t) {
    if (e.isOmittedExpression(t)) {
     return true;
    }
    return S(t.name);
   }
   e.isEmptyBindingElement = w;
   function C(t) {
    var n = t.parent;
    while (e.isBindingElement(n.parent)) {
     n = n.parent.parent;
    }
    return n.parent;
   }
   e.walkUpBindingElementsAndPatterns = C;
   function D(t, n) {
    if (e.isBindingElement(t)) {
     t = C(t);
    }
    var r = n(t);
    if (t.kind === 235) {
     t = t.parent;
    }
    if (t && t.kind === 236) {
     r |= n(t);
     t = t.parent;
    }
    if (t && t.kind === 217) {
     r |= n(t);
    }
    return r;
   }
   function T(t) {
    return D(t, e.getModifierFlags);
   }
   e.getCombinedModifierFlags = T;
   function E(e) {
    return D(e, function(e) {
     return e.flags;
    });
   }
   e.getCombinedNodeFlags = E;
   function N(t, n, r) {
    var i = /^([a-z]+)([_\-]([a-z]+))?$/.exec(t.toLowerCase());
    if (!i) {
     if (r) {
      r.push(e.createCompilerDiagnostic(e.Diagnostics.Locale_must_be_of_the_form_language_or_language_territory_For_example_0_or_1, "en", "ja-jp"));
     }
     return;
    }
    var a = i[1];
    var o = i[3];
    if (!s(a, o, r)) {
     s(a, undefined, r);
    }
    e.setUILocale(t);
    function s(t, r, i) {
     var a = e.normalizePath(n.getExecutingFilePath());
     var o = e.getDirectoryPath(a);
     var s = e.combinePaths(o, t);
     if (r) {
      s = s + "-" + r;
     }
     s = n.resolvePath(e.combinePaths(s, "diagnosticMessages.generated.json"));
     if (!n.fileExists(s)) {
      return false;
     }
     var c = "";
     try {
      c = n.readFile(s);
     } catch (t) {
      if (i) {
       i.push(e.createCompilerDiagnostic(e.Diagnostics.Unable_to_open_file_0, s));
      }
      return false;
     }
     try {
      e.localizedDiagnosticMessages = JSON.parse(c);
     } catch (t) {
      if (i) {
       i.push(e.createCompilerDiagnostic(e.Diagnostics.Corrupted_locale_file_0, s));
      }
      return false;
     }
     return true;
    }
   }
   e.validateLocaleAndSetLanguage = N;
   function A(e, t) {
    if (e) {
     while (e.original !== undefined) {
      e = e.original;
     }
    }
    return !t || t(e) ? e : undefined;
   }
   e.getOriginalNode = A;
   function F(e) {
    return (e.flags & 8) === 0;
   }
   e.isParseTreeNode = F;
   function P(e, t) {
    if (e === undefined || F(e)) {
     return e;
    }
    e = A(e);
    if (F(e) && (!t || t(e))) {
     return e;
    }
    return undefined;
   }
   e.getParseTreeNode = P;
   function I(e) {
    var t = e;
    return t.length >= 3 && t.charCodeAt(0) === 95 && t.charCodeAt(1) === 95 && t.charCodeAt(2) === 95 ? t.substr(1) : t;
   }
   e.unescapeLeadingUnderscores = I;
   function O(e) {
    return I(e.escapedText);
   }
   e.idText = O;
   function M(e) {
    return I(e.escapedName);
   }
   e.symbolName = M;
   function L(t) {
    var n = t.parent.parent;
    if (!n) {
     return undefined;
    }
    if (e.isDeclaration(n)) {
     return R(n);
    }
    switch (n.kind) {
    case 217:
     if (n.declarationList && n.declarationList.declarations[0]) {
      return R(n.declarationList.declarations[0]);
     }
     return undefined;

    case 219:
     var r = n.expression;
     switch (r.kind) {
     case 187:
      return r.name;

     case 188:
      var i = r.argumentExpression;
      if (e.isIdentifier(i)) {
       return i;
      }
     }
     return undefined;

    case 1:
     return undefined;

    case 193:
     {
      return R(n.expression);
     }

    case 231:
     {
      if (e.isDeclaration(n.statement) || e.isExpression(n.statement)) {
       return R(n.statement);
      }
      return undefined;
     }

    default:
     e.Debug.assertNever(n, "Found typedef tag attached to node which it should not be!");
    }
   }
   function R(t) {
    var n = q(t);
    return n && e.isIdentifier(n) ? n : undefined;
   }
   function B(e) {
    return e.name || L(e);
   }
   e.getNameOfJSDocTypedef = B;
   function z(e) {
    return !!e.name;
   }
   e.isNamedDeclaration = z;
   function j(t) {
    switch (t.kind) {
    case 71:
     return t;

    case 302:
    case 296:
     {
      var n = t.name;
      if (n.kind === 146) {
       return n.right;
      }
      break;
     }

    case 202:
     {
      var r = t;
      switch (e.getSpecialPropertyAssignmentKind(r)) {
      case 1:
      case 4:
      case 5:
      case 3:
       return r.left.name;

      default:
       return undefined;
      }
     }

    case 301:
     return B(t);

    case 252:
     {
      var i = t.expression;
      return e.isIdentifier(i) ? i : undefined;
     }
    }
    return t.name;
   }
   e.getNonAssignedNameOfDeclaration = j;
   function q(t) {
    if (t === undefined) return undefined;
    return j(t) || (e.isFunctionExpression(t) || e.isClassExpression(t) ? U(t) : undefined);
   }
   e.getNameOfDeclaration = q;
   function U(t) {
    if (!t.parent) {
     return undefined;
    } else if (e.isPropertyAssignment(t.parent) || e.isBindingElement(t.parent)) {
     return t.parent.name;
    } else if (e.isBinaryExpression(t.parent) && t === t.parent.right) {
     if (e.isIdentifier(t.parent.left)) {
      return t.parent.left;
     } else if (e.isPropertyAccessExpression(t.parent.left)) {
      return t.parent.left.name;
     }
    }
   }
   function J(t) {
    if (t.name) {
     if (e.isIdentifier(t.name)) {
      var n = t.name.escapedText;
      return Z(t.parent).filter(function(t) {
       return e.isJSDocParameterTag(t) && e.isIdentifier(t.name) && t.name.escapedText === n;
      });
     } else {
      var r = t.parent.parameters.indexOf(t);
      e.Debug.assert(r > -1, "Parameters should always be in their parents' parameter list");
      var i = Z(t.parent).filter(e.isJSDocParameterTag);
      if (r < i.length) {
       return [ i[r] ];
      }
     }
    }
    return e.emptyArray;
   }
   e.getJSDocParameterTags = J;
   function K(t) {
    return !!ee(t, e.isJSDocParameterTag);
   }
   e.hasJSDocParameterTags = K;
   function V(t) {
    return ee(t, e.isJSDocAugmentsTag);
   }
   e.getJSDocAugmentsTag = V;
   function W(t) {
    return ee(t, e.isJSDocClassTag);
   }
   e.getJSDocClassTag = W;
   function H(t) {
    return ee(t, e.isJSDocThisTag);
   }
   e.getJSDocThisTag = H;
   function G(t) {
    return ee(t, e.isJSDocReturnTag);
   }
   e.getJSDocReturnTag = G;
   function $(t) {
    return ee(t, e.isJSDocTemplateTag);
   }
   e.getJSDocTemplateTag = $;
   function X(t) {
    var n = ee(t, e.isJSDocTypeTag);
    if (n && n.typeExpression && n.typeExpression.type) {
     return n;
    }
    return undefined;
   }
   e.getJSDocTypeTag = X;
   function Q(t) {
    var n = ee(t, e.isJSDocTypeTag);
    if (!n && e.isParameter(t)) {
     n = e.find(J(t), function(e) {
      return !!e.typeExpression;
     });
    }
    return n && n.typeExpression && n.typeExpression.type;
   }
   e.getJSDocType = Q;
   function Y(t) {
    var n = G(t);
    if (n && n.typeExpression) {
     return n.typeExpression.type;
    }
    var r = X(t);
    if (r && r.typeExpression) {
     var i = r.typeExpression.type;
     if (e.isTypeLiteralNode(i)) {
      var a = e.find(i.members, e.isCallSignatureDeclaration);
      return a && a.type;
     }
     if (e.isFunctionTypeNode(i)) {
      return i.type;
     }
    }
   }
   e.getJSDocReturnType = Y;
   function Z(t) {
    var n = t.jsDocCache;
    if (n === undefined) {
     var r = e.getJSDocCommentsAndTags(t);
     e.Debug.assert(r.length < 2 || r[0] !== r[1]);
     t.jsDocCache = n = e.flatMap(r, function(t) {
      return e.isJSDoc(t) ? t.tags : t;
     });
    }
    return n;
   }
   e.getJSDocTags = Z;
   function ee(t, n) {
    return e.find(Z(t), n);
   }
   function te(e, t) {
    return Z(e).filter(function(e) {
     return e.kind === t;
    });
   }
   e.getAllJSDocTagsOfKind = te;
   function ne(t) {
    if (e.isJSDocSignature(t)) {
     return e.emptyArray;
    }
    if (e.isJSDocTypeAlias(t)) {
     e.Debug.assert(t.parent.kind === 289);
     return e.flatMap(t.parent.tags, function(t) {
      return e.isJSDocTemplateTag(t) ? t.typeParameters : undefined;
     });
    }
    return t.typeParameters || (e.isInJavaScriptFile(t) ? e.getJSDocTypeParameterDeclarations(t) : e.emptyArray);
   }
   e.getEffectiveTypeParameterDeclarations = ne;
  })(s || (s = {}));
  (function(e) {
   function t(e) {
    return e.kind === 8;
   }
   e.isNumericLiteral = t;
   function n(e) {
    return e.kind === 9;
   }
   e.isStringLiteral = n;
   function r(e) {
    return e.kind === 10;
   }
   e.isJsxText = r;
   function i(e) {
    return e.kind === 12;
   }
   e.isRegularExpressionLiteral = i;
   function a(e) {
    return e.kind === 13;
   }
   e.isNoSubstitutionTemplateLiteral = a;
   function o(e) {
    return e.kind === 14;
   }
   e.isTemplateHead = o;
   function s(e) {
    return e.kind === 15;
   }
   e.isTemplateMiddle = s;
   function c(e) {
    return e.kind === 16;
   }
   e.isTemplateTail = c;
   function u(e) {
    return e.kind === 71;
   }
   e.isIdentifier = u;
   function l(e) {
    return e.kind === 146;
   }
   e.isQualifiedName = l;
   function f(e) {
    return e.kind === 147;
   }
   e.isComputedPropertyName = f;
   function d(e) {
    return e.kind === 148;
   }
   e.isTypeParameterDeclaration = d;
   function p(e) {
    return e.kind === 149;
   }
   e.isParameter = p;
   function m(e) {
    return e.kind === 150;
   }
   e.isDecorator = m;
   function _(e) {
    return e.kind === 151;
   }
   e.isPropertySignature = _;
   function g(e) {
    return e.kind === 152;
   }
   e.isPropertyDeclaration = g;
   function h(e) {
    return e.kind === 153;
   }
   e.isMethodSignature = h;
   function v(e) {
    return e.kind === 154;
   }
   e.isMethodDeclaration = v;
   function y(e) {
    return e.kind === 155;
   }
   e.isConstructorDeclaration = y;
   function b(e) {
    return e.kind === 156;
   }
   e.isGetAccessorDeclaration = b;
   function x(e) {
    return e.kind === 157;
   }
   e.isSetAccessorDeclaration = x;
   function k(e) {
    return e.kind === 158;
   }
   e.isCallSignatureDeclaration = k;
   function S(e) {
    return e.kind === 159;
   }
   e.isConstructSignatureDeclaration = S;
   function w(e) {
    return e.kind === 160;
   }
   e.isIndexSignatureDeclaration = w;
   function C(e) {
    return e.kind === 157 || e.kind === 156;
   }
   e.isGetOrSetAccessorDeclaration = C;
   function D(e) {
    return e.kind === 161;
   }
   e.isTypePredicateNode = D;
   function T(e) {
    return e.kind === 162;
   }
   e.isTypeReferenceNode = T;
   function E(e) {
    return e.kind === 163;
   }
   e.isFunctionTypeNode = E;
   function N(e) {
    return e.kind === 164;
   }
   e.isConstructorTypeNode = N;
   function A(e) {
    return e.kind === 165;
   }
   e.isTypeQueryNode = A;
   function F(e) {
    return e.kind === 166;
   }
   e.isTypeLiteralNode = F;
   function P(e) {
    return e.kind === 167;
   }
   e.isArrayTypeNode = P;
   function I(e) {
    return e.kind === 168;
   }
   e.isTupleTypeNode = I;
   function O(e) {
    return e.kind === 171;
   }
   e.isUnionTypeNode = O;
   function M(e) {
    return e.kind === 172;
   }
   e.isIntersectionTypeNode = M;
   function L(e) {
    return e.kind === 173;
   }
   e.isConditionalTypeNode = L;
   function R(e) {
    return e.kind === 174;
   }
   e.isInferTypeNode = R;
   function B(e) {
    return e.kind === 175;
   }
   e.isParenthesizedTypeNode = B;
   function z(e) {
    return e.kind === 176;
   }
   e.isThisTypeNode = z;
   function j(e) {
    return e.kind === 177;
   }
   e.isTypeOperatorNode = j;
   function q(e) {
    return e.kind === 178;
   }
   e.isIndexedAccessTypeNode = q;
   function U(e) {
    return e.kind === 179;
   }
   e.isMappedTypeNode = U;
   function J(e) {
    return e.kind === 180;
   }
   e.isLiteralTypeNode = J;
   function K(e) {
    return e.kind === 181;
   }
   e.isImportTypeNode = K;
   function V(e) {
    return e.kind === 182;
   }
   e.isObjectBindingPattern = V;
   function W(e) {
    return e.kind === 183;
   }
   e.isArrayBindingPattern = W;
   function H(e) {
    return e.kind === 184;
   }
   e.isBindingElement = H;
   function G(e) {
    return e.kind === 185;
   }
   e.isArrayLiteralExpression = G;
   function $(e) {
    return e.kind === 186;
   }
   e.isObjectLiteralExpression = $;
   function X(e) {
    return e.kind === 187;
   }
   e.isPropertyAccessExpression = X;
   function Q(e) {
    return e.kind === 188;
   }
   e.isElementAccessExpression = Q;
   function Y(e) {
    return e.kind === 189;
   }
   e.isCallExpression = Y;
   function Z(e) {
    return e.kind === 190;
   }
   e.isNewExpression = Z;
   function ee(e) {
    return e.kind === 191;
   }
   e.isTaggedTemplateExpression = ee;
   function te(e) {
    return e.kind === 192;
   }
   e.isTypeAssertion = te;
   function ne(e) {
    return e.kind === 193;
   }
   e.isParenthesizedExpression = ne;
   function re(e) {
    while (e.kind === 305) {
     e = e.expression;
    }
    return e;
   }
   e.skipPartiallyEmittedExpressions = re;
   function ie(e) {
    return e.kind === 194;
   }
   e.isFunctionExpression = ie;
   function ae(e) {
    return e.kind === 195;
   }
   e.isArrowFunction = ae;
   function oe(e) {
    return e.kind === 196;
   }
   e.isDeleteExpression = oe;
   function se(e) {
    return e.kind === 197;
   }
   e.isTypeOfExpression = se;
   function ce(e) {
    return e.kind === 198;
   }
   e.isVoidExpression = ce;
   function ue(e) {
    return e.kind === 199;
   }
   e.isAwaitExpression = ue;
   function le(e) {
    return e.kind === 200;
   }
   e.isPrefixUnaryExpression = le;
   function fe(e) {
    return e.kind === 201;
   }
   e.isPostfixUnaryExpression = fe;
   function de(e) {
    return e.kind === 202;
   }
   e.isBinaryExpression = de;
   function pe(e) {
    return e.kind === 203;
   }
   e.isConditionalExpression = pe;
   function me(e) {
    return e.kind === 204;
   }
   e.isTemplateExpression = me;
   function _e(e) {
    return e.kind === 205;
   }
   e.isYieldExpression = _e;
   function ge(e) {
    return e.kind === 206;
   }
   e.isSpreadElement = ge;
   function he(e) {
    return e.kind === 207;
   }
   e.isClassExpression = he;
   function ve(e) {
    return e.kind === 208;
   }
   e.isOmittedExpression = ve;
   function ye(e) {
    return e.kind === 209;
   }
   e.isExpressionWithTypeArguments = ye;
   function be(e) {
    return e.kind === 210;
   }
   e.isAsExpression = be;
   function xe(e) {
    return e.kind === 211;
   }
   e.isNonNullExpression = xe;
   function ke(e) {
    return e.kind === 212;
   }
   e.isMetaProperty = ke;
   function Se(e) {
    return e.kind === 214;
   }
   e.isTemplateSpan = Se;
   function we(e) {
    return e.kind === 215;
   }
   e.isSemicolonClassElement = we;
   function Ce(e) {
    return e.kind === 216;
   }
   e.isBlock = Ce;
   function De(e) {
    return e.kind === 217;
   }
   e.isVariableStatement = De;
   function Te(e) {
    return e.kind === 218;
   }
   e.isEmptyStatement = Te;
   function Ee(e) {
    return e.kind === 219;
   }
   e.isExpressionStatement = Ee;
   function Ne(e) {
    return e.kind === 220;
   }
   e.isIfStatement = Ne;
   function Ae(e) {
    return e.kind === 221;
   }
   e.isDoStatement = Ae;
   function Fe(e) {
    return e.kind === 222;
   }
   e.isWhileStatement = Fe;
   function Pe(e) {
    return e.kind === 223;
   }
   e.isForStatement = Pe;
   function Ie(e) {
    return e.kind === 224;
   }
   e.isForInStatement = Ie;
   function Oe(e) {
    return e.kind === 225;
   }
   e.isForOfStatement = Oe;
   function Me(e) {
    return e.kind === 226;
   }
   e.isContinueStatement = Me;
   function Le(e) {
    return e.kind === 227;
   }
   e.isBreakStatement = Le;
   function Re(e) {
    return e.kind === 227 || e.kind === 226;
   }
   e.isBreakOrContinueStatement = Re;
   function Be(e) {
    return e.kind === 228;
   }
   e.isReturnStatement = Be;
   function ze(e) {
    return e.kind === 229;
   }
   e.isWithStatement = ze;
   function je(e) {
    return e.kind === 230;
   }
   e.isSwitchStatement = je;
   function qe(e) {
    return e.kind === 231;
   }
   e.isLabeledStatement = qe;
   function Ue(e) {
    return e.kind === 232;
   }
   e.isThrowStatement = Ue;
   function Je(e) {
    return e.kind === 233;
   }
   e.isTryStatement = Je;
   function Ke(e) {
    return e.kind === 234;
   }
   e.isDebuggerStatement = Ke;
   function Ve(e) {
    return e.kind === 235;
   }
   e.isVariableDeclaration = Ve;
   function We(e) {
    return e.kind === 236;
   }
   e.isVariableDeclarationList = We;
   function He(e) {
    return e.kind === 237;
   }
   e.isFunctionDeclaration = He;
   function Ge(e) {
    return e.kind === 238;
   }
   e.isClassDeclaration = Ge;
   function $e(e) {
    return e.kind === 239;
   }
   e.isInterfaceDeclaration = $e;
   function Xe(e) {
    return e.kind === 240;
   }
   e.isTypeAliasDeclaration = Xe;
   function Qe(e) {
    return e.kind === 241;
   }
   e.isEnumDeclaration = Qe;
   function Ye(e) {
    return e.kind === 242;
   }
   e.isModuleDeclaration = Ye;
   function Ze(e) {
    return e.kind === 243;
   }
   e.isModuleBlock = Ze;
   function et(e) {
    return e.kind === 244;
   }
   e.isCaseBlock = et;
   function tt(e) {
    return e.kind === 245;
   }
   e.isNamespaceExportDeclaration = tt;
   function nt(e) {
    return e.kind === 246;
   }
   e.isImportEqualsDeclaration = nt;
   function rt(e) {
    return e.kind === 247;
   }
   e.isImportDeclaration = rt;
   function it(e) {
    return e.kind === 248;
   }
   e.isImportClause = it;
   function at(e) {
    return e.kind === 249;
   }
   e.isNamespaceImport = at;
   function ot(e) {
    return e.kind === 250;
   }
   e.isNamedImports = ot;
   function st(e) {
    return e.kind === 251;
   }
   e.isImportSpecifier = st;
   function ct(e) {
    return e.kind === 252;
   }
   e.isExportAssignment = ct;
   function ut(e) {
    return e.kind === 253;
   }
   e.isExportDeclaration = ut;
   function lt(e) {
    return e.kind === 254;
   }
   e.isNamedExports = lt;
   function ft(e) {
    return e.kind === 255;
   }
   e.isExportSpecifier = ft;
   function dt(e) {
    return e.kind === 256;
   }
   e.isMissingDeclaration = dt;
   function pt(e) {
    return e.kind === 257;
   }
   e.isExternalModuleReference = pt;
   function mt(e) {
    return e.kind === 258;
   }
   e.isJsxElement = mt;
   function _t(e) {
    return e.kind === 259;
   }
   e.isJsxSelfClosingElement = _t;
   function gt(e) {
    return e.kind === 260;
   }
   e.isJsxOpeningElement = gt;
   function ht(e) {
    return e.kind === 261;
   }
   e.isJsxClosingElement = ht;
   function vt(e) {
    return e.kind === 262;
   }
   e.isJsxFragment = vt;
   function yt(e) {
    return e.kind === 263;
   }
   e.isJsxOpeningFragment = yt;
   function bt(e) {
    return e.kind === 264;
   }
   e.isJsxClosingFragment = bt;
   function xt(e) {
    return e.kind === 265;
   }
   e.isJsxAttribute = xt;
   function kt(e) {
    return e.kind === 266;
   }
   e.isJsxAttributes = kt;
   function St(e) {
    return e.kind === 267;
   }
   e.isJsxSpreadAttribute = St;
   function wt(e) {
    return e.kind === 268;
   }
   e.isJsxExpression = wt;
   function Ct(e) {
    return e.kind === 269;
   }
   e.isCaseClause = Ct;
   function Dt(e) {
    return e.kind === 270;
   }
   e.isDefaultClause = Dt;
   function Tt(e) {
    return e.kind === 271;
   }
   e.isHeritageClause = Tt;
   function Et(e) {
    return e.kind === 272;
   }
   e.isCatchClause = Et;
   function Nt(e) {
    return e.kind === 273;
   }
   e.isPropertyAssignment = Nt;
   function At(e) {
    return e.kind === 274;
   }
   e.isShorthandPropertyAssignment = At;
   function Ft(e) {
    return e.kind === 275;
   }
   e.isSpreadAssignment = Ft;
   function Pt(e) {
    return e.kind === 276;
   }
   e.isEnumMember = Pt;
   function It(e) {
    return e.kind === 277;
   }
   e.isSourceFile = It;
   function Ot(e) {
    return e.kind === 278;
   }
   e.isBundle = Ot;
   function Mt(e) {
    return e.kind === 279;
   }
   e.isUnparsedSource = Mt;
   function Lt(e) {
    return e.kind === 281;
   }
   e.isJSDocTypeExpression = Lt;
   function Rt(e) {
    return e.kind === 282;
   }
   e.isJSDocAllType = Rt;
   function Bt(e) {
    return e.kind === 283;
   }
   e.isJSDocUnknownType = Bt;
   function zt(e) {
    return e.kind === 284;
   }
   e.isJSDocNullableType = zt;
   function jt(e) {
    return e.kind === 285;
   }
   e.isJSDocNonNullableType = jt;
   function qt(e) {
    return e.kind === 286;
   }
   e.isJSDocOptionalType = qt;
   function Ut(e) {
    return e.kind === 287;
   }
   e.isJSDocFunctionType = Ut;
   function Jt(e) {
    return e.kind === 288;
   }
   e.isJSDocVariadicType = Jt;
   function Kt(e) {
    return e.kind === 289;
   }
   e.isJSDoc = Kt;
   function Vt(e) {
    return e.kind === 293;
   }
   e.isJSDocAugmentsTag = Vt;
   function Wt(e) {
    return e.kind === 294;
   }
   e.isJSDocClassTag = Wt;
   function Ht(e) {
    return e.kind === 298;
   }
   e.isJSDocThisTag = Ht;
   function Gt(e) {
    return e.kind === 296;
   }
   e.isJSDocParameterTag = Gt;
   function $t(e) {
    return e.kind === 297;
   }
   e.isJSDocReturnTag = $t;
   function Xt(e) {
    return e.kind === 299;
   }
   e.isJSDocTypeTag = Xt;
   function Qt(e) {
    return e.kind === 300;
   }
   e.isJSDocTemplateTag = Qt;
   function Yt(e) {
    return e.kind === 301;
   }
   e.isJSDocTypedefTag = Yt;
   function Zt(e) {
    return e.kind === 302;
   }
   e.isJSDocPropertyTag = Zt;
   function en(e) {
    return e.kind === 302 || e.kind === 296;
   }
   e.isJSDocPropertyLikeTag = en;
   function tn(e) {
    return e.kind === 290;
   }
   e.isJSDocTypeLiteral = tn;
   function nn(e) {
    return e.kind === 295;
   }
   e.isJSDocCallbackTag = nn;
   function rn(e) {
    return e.kind === 291;
   }
   e.isJSDocSignature = rn;
  })(s || (s = {}));
  (function(e) {
   function t(e) {
    return e.kind === 303;
   }
   e.isSyntaxList = t;
   function n(e) {
    return r(e.kind);
   }
   e.isNode = n;
   function r(e) {
    return e >= 146;
   }
   e.isNodeKind = r;
   function i(e) {
    return e.kind >= 0 && e.kind <= 145;
   }
   e.isToken = i;
   function a(e) {
    return e.hasOwnProperty("pos") && e.hasOwnProperty("end");
   }
   e.isNodeArray = a;
   function o(e) {
    return 8 <= e && e <= 13;
   }
   e.isLiteralKind = o;
   function s(e) {
    return o(e.kind);
   }
   e.isLiteralExpression = s;
   function c(e) {
    return 13 <= e && e <= 16;
   }
   e.isTemplateLiteralKind = c;
   function u(e) {
    return c(e.kind);
   }
   e.isTemplateLiteralToken = u;
   function l(e) {
    var t = e.kind;
    return t === 15 || t === 16;
   }
   e.isTemplateMiddleOrTemplateTail = l;
   function f(e) {
    return e.kind === 9 || c(e.kind);
   }
   e.isStringTextContainingNode = f;
   function d(t) {
    return e.isIdentifier(t) && (t.autoGenerateFlags & 7) > 0;
   }
   e.isGeneratedIdentifier = d;
   function p(e) {
    switch (e) {
    case 117:
    case 120:
    case 76:
    case 124:
    case 79:
    case 84:
    case 114:
    case 112:
    case 113:
    case 132:
    case 115:
     return true;
    }
    return false;
   }
   e.isModifierKind = p;
   function m(t) {
    return !!(e.modifierToFlag(t) & 92);
   }
   e.isParameterPropertyModifier = m;
   function _(e) {
    return m(e) || e === 115;
   }
   e.isClassMemberModifier = _;
   function g(e) {
    return p(e.kind);
   }
   e.isModifier = g;
   function h(e) {
    var t = e.kind;
    return t === 146 || t === 71;
   }
   e.isEntityName = h;
   function v(e) {
    var t = e.kind;
    return t === 71 || t === 9 || t === 8 || t === 147;
   }
   e.isPropertyName = v;
   function y(e) {
    var t = e.kind;
    return t === 71 || t === 182 || t === 183;
   }
   e.isBindingName = y;
   function b(e) {
    return e && S(e.kind);
   }
   e.isFunctionLike = b;
   function x(e) {
    return e && k(e.kind);
   }
   e.isFunctionLikeDeclaration = x;
   function k(e) {
    switch (e) {
    case 237:
    case 154:
    case 155:
    case 156:
    case 157:
    case 194:
    case 195:
     return true;

    default:
     return false;
    }
   }
   function S(e) {
    switch (e) {
    case 153:
    case 158:
    case 291:
    case 159:
    case 160:
    case 163:
    case 287:
    case 164:
     return true;

    default:
     return k(e);
    }
   }
   e.isFunctionLikeKind = S;
   function w(t) {
    return e.isSourceFile(t) || e.isModuleBlock(t) || e.isBlock(t) && b(t.parent);
   }
   e.isFunctionOrModuleBlock = w;
   function C(e) {
    var t = e.kind;
    return t === 155 || t === 152 || t === 154 || t === 156 || t === 157 || t === 160 || t === 215;
   }
   e.isClassElement = C;
   function D(e) {
    return e && (e.kind === 238 || e.kind === 207);
   }
   e.isClassLike = D;
   function T(e) {
    return e && (e.kind === 156 || e.kind === 157);
   }
   e.isAccessor = T;
   function E(e) {
    switch (e.kind) {
    case 154:
    case 156:
    case 157:
     return true;

    default:
     return false;
    }
   }
   e.isMethodOrAccessor = E;
   function N(e) {
    var t = e.kind;
    return t === 159 || t === 158 || t === 151 || t === 153 || t === 160;
   }
   e.isTypeElement = N;
   function A(e) {
    return N(e) || C(e);
   }
   e.isClassOrTypeElement = A;
   function F(e) {
    var t = e.kind;
    return t === 273 || t === 274 || t === 275 || t === 154 || t === 156 || t === 157;
   }
   e.isObjectLiteralElementLike = F;
   function P(e) {
    return e >= 161 && e <= 181 || e === 119 || e === 142 || e === 134 || e === 135 || e === 122 || e === 137 || e === 138 || e === 99 || e === 105 || e === 140 || e === 95 || e === 131 || e === 209 || e === 282 || e === 283 || e === 284 || e === 285 || e === 286 || e === 287 || e === 288;
   }
   function I(e) {
    return P(e.kind);
   }
   e.isTypeNode = I;
   function O(e) {
    switch (e.kind) {
    case 163:
    case 164:
     return true;
    }
    return false;
   }
   e.isFunctionOrConstructorTypeNode = O;
   function M(e) {
    if (e) {
     var t = e.kind;
     return t === 183 || t === 182;
    }
    return false;
   }
   e.isBindingPattern = M;
   function L(e) {
    var t = e.kind;
    return t === 185 || t === 186;
   }
   e.isAssignmentPattern = L;
   function R(e) {
    var t = e.kind;
    return t === 184 || t === 208;
   }
   e.isArrayBindingElement = R;
   function B(e) {
    switch (e.kind) {
    case 235:
    case 149:
    case 184:
     return true;
    }
    return false;
   }
   e.isDeclarationBindingElement = B;
   function z(e) {
    return j(e) || q(e);
   }
   e.isBindingOrAssignmentPattern = z;
   function j(e) {
    switch (e.kind) {
    case 182:
    case 186:
     return true;
    }
    return false;
   }
   e.isObjectBindingOrAssignmentPattern = j;
   function q(e) {
    switch (e.kind) {
    case 183:
    case 185:
     return true;
    }
    return false;
   }
   e.isArrayBindingOrAssignmentPattern = q;
   function U(e) {
    var t = e.kind;
    return t === 187 || t === 146 || t === 181;
   }
   e.isPropertyAccessOrQualifiedNameOrImportTypeNode = U;
   function J(e) {
    var t = e.kind;
    return t === 187 || t === 146;
   }
   e.isPropertyAccessOrQualifiedName = J;
   function K(e) {
    switch (e.kind) {
    case 260:
    case 259:
    case 189:
    case 190:
    case 191:
    case 150:
     return true;

    default:
     return false;
    }
   }
   e.isCallLikeExpression = K;
   function V(e) {
    return e.kind === 189 || e.kind === 190;
   }
   e.isCallOrNewExpression = V;
   function W(e) {
    var t = e.kind;
    return t === 204 || t === 13;
   }
   e.isTemplateLiteral = W;
   function H(t) {
    return G(e.skipPartiallyEmittedExpressions(t).kind);
   }
   e.isLeftHandSideExpression = H;
   function G(e) {
    switch (e) {
    case 187:
    case 188:
    case 190:
    case 189:
    case 258:
    case 259:
    case 262:
    case 191:
    case 185:
    case 193:
    case 186:
    case 207:
    case 194:
    case 71:
    case 12:
    case 8:
    case 9:
    case 13:
    case 204:
    case 86:
    case 95:
    case 99:
    case 101:
    case 97:
    case 211:
    case 212:
    case 91:
     return true;

    default:
     return false;
    }
   }
   function $(t) {
    return X(e.skipPartiallyEmittedExpressions(t).kind);
   }
   e.isUnaryExpression = $;
   function X(e) {
    switch (e) {
    case 200:
    case 201:
    case 196:
    case 197:
    case 198:
    case 199:
    case 192:
     return true;

    default:
     return G(e);
    }
   }
   function Q(e) {
    switch (e.kind) {
    case 201:
     return true;

    case 200:
     return e.operator === 43 || e.operator === 44;

    default:
     return false;
    }
   }
   e.isUnaryExpressionWithWrite = Q;
   function Y(t) {
    return Z(e.skipPartiallyEmittedExpressions(t).kind);
   }
   e.isExpression = Y;
   function Z(e) {
    switch (e) {
    case 203:
    case 205:
    case 195:
    case 202:
    case 206:
    case 210:
    case 208:
    case 306:
    case 305:
     return true;

    default:
     return X(e);
    }
   }
   function ee(e) {
    var t = e.kind;
    return t === 192 || t === 210;
   }
   e.isAssertionExpression = ee;
   function te(e) {
    return e.kind === 305;
   }
   e.isPartiallyEmittedExpression = te;
   function ne(e) {
    return e.kind === 304;
   }
   e.isNotEmittedStatement = ne;
   function re(e) {
    return ne(e) || te(e);
   }
   e.isNotEmittedOrPartiallyEmittedNode = re;
   function ie(e, t) {
    switch (e.kind) {
    case 223:
    case 224:
    case 225:
    case 221:
    case 222:
     return true;

    case 231:
     return t && ie(e.statement, t);
    }
    return false;
   }
   e.isIterationStatement = ie;
   function ae(e) {
    return e.kind === 224 || e.kind === 225;
   }
   e.isForInOrOfStatement = ae;
   function oe(t) {
    return e.isBlock(t) || Y(t);
   }
   e.isConciseBody = oe;
   function se(t) {
    return e.isBlock(t);
   }
   e.isFunctionBody = se;
   function ce(t) {
    return e.isVariableDeclarationList(t) || Y(t);
   }
   e.isForInitializer = ce;
   function ue(e) {
    var t = e.kind;
    return t === 243 || t === 242 || t === 71;
   }
   e.isModuleBody = ue;
   function le(e) {
    var t = e.kind;
    return t === 243 || t === 242;
   }
   e.isNamespaceBody = le;
   function fe(e) {
    var t = e.kind;
    return t === 71 || t === 242;
   }
   e.isJSDocNamespaceBody = fe;
   function de(e) {
    var t = e.kind;
    return t === 250 || t === 249;
   }
   e.isNamedImportBindings = de;
   function pe(e) {
    return e.kind === 242 || e.kind === 241;
   }
   e.isModuleOrEnumDeclaration = pe;
   function me(e) {
    return e === 195 || e === 184 || e === 238 || e === 207 || e === 155 || e === 241 || e === 276 || e === 255 || e === 237 || e === 194 || e === 156 || e === 248 || e === 246 || e === 251 || e === 239 || e === 265 || e === 154 || e === 153 || e === 242 || e === 245 || e === 249 || e === 149 || e === 273 || e === 152 || e === 151 || e === 157 || e === 274 || e === 240 || e === 148 || e === 235 || e === 301 || e === 295 || e === 302;
   }
   function _e(e) {
    return e === 237 || e === 256 || e === 238 || e === 239 || e === 240 || e === 241 || e === 242 || e === 247 || e === 246 || e === 253 || e === 252 || e === 245;
   }
   function ge(e) {
    return e === 227 || e === 226 || e === 234 || e === 221 || e === 219 || e === 218 || e === 224 || e === 225 || e === 223 || e === 220 || e === 231 || e === 228 || e === 230 || e === 232 || e === 233 || e === 217 || e === 222 || e === 229 || e === 304 || e === 308 || e === 307;
   }
   function he(t) {
    if (t.kind === 148) {
     return t.parent.kind !== 300 || e.isInJavaScriptFile(t);
    }
    return me(t.kind);
   }
   e.isDeclaration = he;
   function ve(e) {
    return _e(e.kind);
   }
   e.isDeclarationStatement = ve;
   function ye(e) {
    return ge(e.kind);
   }
   e.isStatementButNotDeclaration = ye;
   function be(e) {
    var t = e.kind;
    return ge(t) || _e(t) || xe(e);
   }
   e.isStatement = be;
   function xe(t) {
    if (t.kind !== 216) return false;
    if (t.parent !== undefined) {
     if (t.parent.kind === 233 || t.parent.kind === 272) {
      return false;
     }
    }
    return !e.isFunctionBlock(t);
   }
   function ke(e) {
    var t = e.kind;
    return t === 257 || t === 146 || t === 71;
   }
   e.isModuleReference = ke;
   function Se(e) {
    var t = e.kind;
    return t === 99 || t === 71 || t === 187;
   }
   e.isJsxTagNameExpression = Se;
   function we(e) {
    var t = e.kind;
    return t === 258 || t === 268 || t === 259 || t === 10 || t === 262;
   }
   e.isJsxChild = we;
   function Ce(e) {
    var t = e.kind;
    return t === 265 || t === 267;
   }
   e.isJsxAttributeLike = Ce;
   function De(e) {
    var t = e.kind;
    return t === 9 || t === 268;
   }
   e.isStringLiteralOrJsxExpression = De;
   function Te(e) {
    var t = e.kind;
    return t === 260 || t === 259;
   }
   e.isJsxOpeningLikeElement = Te;
   function Ee(e) {
    var t = e.kind;
    return t === 269 || t === 270;
   }
   e.isCaseOrDefaultClause = Ee;
   function Ne(e) {
    return e.kind >= 281 && e.kind <= 302;
   }
   e.isJSDocNode = Ne;
   function Ae(t) {
    return t.kind === 289 || Fe(t) || e.isJSDocTypeLiteral(t) || e.isJSDocSignature(t);
   }
   e.isJSDocCommentContainingNode = Ae;
   function Fe(e) {
    return e.kind >= 292 && e.kind <= 302;
   }
   e.isJSDocTag = Fe;
   function Pe(e) {
    return e.kind === 157;
   }
   e.isSetAccessor = Pe;
   function Ie(e) {
    return e.kind === 156;
   }
   e.isGetAccessor = Ie;
   function Oe(e) {
    var t = e.jsDoc;
    return !!t && t.length > 0;
   }
   e.hasJSDocNodes = Oe;
   function Me(e) {
    return !!e.type;
   }
   e.hasType = Me;
   function Le(e) {
    return !!e.initializer;
   }
   e.hasInitializer = Le;
   function Re(t) {
    return Le(t) && !e.isForStatement(t) && !e.isForInStatement(t) && !e.isForOfStatement(t) && !e.isJsxAttribute(t);
   }
   e.hasOnlyExpressionInitializer = Re;
   function Be(e) {
    switch (e.kind) {
    case 265:
    case 267:
    case 273:
    case 274:
    case 154:
    case 156:
    case 157:
     return true;

    default:
     return false;
    }
   }
   e.isObjectLiteralElement = Be;
   function ze(e) {
    return e.kind === 162 || e.kind === 209;
   }
   e.isTypeReferenceType = ze;
   var je = 1073741823;
   function qe(t) {
    var n = je;
    for (var r = 0, i = t; r < i.length; r++) {
     var a = i[r];
     if (!a.length) {
      continue;
     }
     var o = 0;
     for (;o < a.length && o < n; o++) {
      if (!e.isWhiteSpaceLike(a.charCodeAt(o))) {
       break;
      }
     }
     if (o < n) {
      n = o;
     }
     if (n === 0) {
      return 0;
     }
    }
    return n === je ? undefined : n;
   }
   e.guessIndentation = qe;
   function Ue(e) {
    return e.kind === 9 || e.kind === 13;
   }
   e.isStringLiteralLike = Ue;
  })(s || (s = {}));
  (function(e) {
   function t(e) {
    return e.kind === 250 || e.kind === 254;
   }
   e.isNamedImportsOrExports = t;
   function n(e, t) {
    this.flags = e;
    this.escapedName = t;
    this.declarations = undefined;
    this.valueDeclaration = undefined;
    this.id = undefined;
    this.mergeId = undefined;
    this.parent = undefined;
   }
   function r(t, n) {
    this.flags = n;
    if (e.Debug.isDebugging) {
     this.checker = t;
    }
   }
   function i() {}
   function a(e, t, n) {
    this.pos = t;
    this.end = n;
    this.kind = e;
    this.id = 0;
    this.flags = 0;
    this.modifierFlagsCache = 0;
    this.transformFlags = 0;
    this.parent = undefined;
    this.original = undefined;
   }
   function o(e, t, n) {
    this.fileName = e;
    this.text = t;
    this.skipTrivia = n || function(e) {
     return e;
    };
   }
   e.objectAllocator = {
    getNodeConstructor: function() {
     return a;
    },
    getTokenConstructor: function() {
     return a;
    },
    getIdentifierConstructor: function() {
     return a;
    },
    getSourceFileConstructor: function() {
     return a;
    },
    getSymbolConstructor: function() {
     return n;
    },
    getTypeConstructor: function() {
     return r;
    },
    getSignatureConstructor: function() {
     return i;
    },
    getSourceMapSourceConstructor: function() {
     return o;
    }
   };
   function s(t, n, r) {
    if (r === void 0) {
     r = 0;
    }
    return t.replace(/{(\d+)}/g, function(t, i) {
     return e.Debug.assertDefined(n[+i + r]);
    });
   }
   e.formatStringFromArgs = s;
   function c(t) {
    return e.localizedDiagnosticMessages && e.localizedDiagnosticMessages[t.key] || t.message;
   }
   e.getLocaleSpecificMessage = c;
   function u(t, n, r, i) {
    e.Debug.assertGreaterThanOrEqual(n, 0);
    e.Debug.assertGreaterThanOrEqual(r, 0);
    if (t) {
     e.Debug.assertLessThanOrEqual(n, t.text.length);
     e.Debug.assertLessThanOrEqual(n + r, t.text.length);
    }
    var a = c(i);
    if (arguments.length > 4) {
     a = s(a, arguments, 4);
    }
    return {
     file: t,
     start: n,
     length: r,
     messageText: a,
     category: i.category,
     code: i.code,
     reportsUnnecessary: i.reportsUnnecessary
    };
   }
   e.createFileDiagnostic = u;
   function l(e, t) {
    var n = c(t);
    if (arguments.length > 2) {
     n = s(n, arguments, 2);
    }
    return n;
   }
   e.formatMessage = l;
   function f(e) {
    var t = c(e);
    if (arguments.length > 1) {
     t = s(t, arguments, 1);
    }
    return {
     file: undefined,
     start: undefined,
     length: undefined,
     messageText: t,
     category: e.category,
     code: e.code,
     reportsUnnecessary: e.reportsUnnecessary
    };
   }
   e.createCompilerDiagnostic = f;
   function d(e) {
    return {
     file: undefined,
     start: undefined,
     length: undefined,
     code: e.code,
     category: e.category,
     messageText: e.next ? e : e.messageText
    };
   }
   e.createCompilerDiagnosticFromMessageChain = d;
   function p(e, t) {
    var n = c(t);
    if (arguments.length > 2) {
     n = s(n, arguments, 2);
    }
    return {
     messageText: n,
     category: t.category,
     code: t.code,
     next: e
    };
   }
   e.chainDiagnosticMessages = p;
   function m(e, t) {
    var n = e;
    while (n.next) {
     n = n.next;
    }
    n.next = t;
    return e;
   }
   e.concatenateDiagnosticMessageChains = m;
   function _(e) {
    return e.file ? e.file.path : undefined;
   }
   function g(e, t) {
    return h(e, t) || v(e, t) || 0;
   }
   e.compareDiagnostics = g;
   function h(t, n) {
    return e.compareStringsCaseSensitive(_(t), _(n)) || e.compareValues(t.start, n.start) || e.compareValues(t.length, n.length) || e.compareValues(t.code, n.code) || y(t.messageText, n.messageText) || 0;
   }
   e.compareDiagnosticsSkipRelatedInformation = h;
   function v(t, n) {
    if (!t.relatedInformation && !n.relatedInformation) {
     return 0;
    }
    if (t.relatedInformation && n.relatedInformation) {
     return e.compareValues(t.relatedInformation.length, n.relatedInformation.length) || e.forEach(t.relatedInformation, function(e, t) {
      var r = n.relatedInformation[t];
      return g(e, r);
     }) || 0;
    }
    return t.relatedInformation ? -1 : 1;
   }
   function y(t, n) {
    var r = t;
    var i = n;
    while (r && i) {
     var a = e.isString(r) ? r : r.messageText;
     var o = e.isString(i) ? i : i.messageText;
     var s = e.compareStringsCaseSensitive(a, o);
     if (s) {
      return s;
     }
     r = e.isString(r) ? undefined : r.next;
     i = e.isString(i) ? undefined : i.next;
    }
    if (!r && !i) {
     return 0;
    }
    return r ? 1 : -1;
   }
   function b(e) {
    return e.target || 0;
   }
   e.getEmitScriptTarget = b;
   function x(t) {
    return typeof t.module === "number" ? t.module : b(t) >= 2 ? e.ModuleKind.ES2015 : e.ModuleKind.CommonJS;
   }
   e.getEmitModuleKind = x;
   function k(t) {
    var n = t.moduleResolution;
    if (n === undefined) {
     n = x(t) === e.ModuleKind.CommonJS ? e.ModuleResolutionKind.NodeJs : e.ModuleResolutionKind.Classic;
    }
    return n;
   }
   e.getEmitModuleResolutionKind = k;
   function S(e) {
    return e.allowUnreachableCode === false;
   }
   e.unreachableCodeIsError = S;
   function w(e) {
    return e.allowUnusedLabels === false;
   }
   e.unusedLabelIsError = w;
   function C(e) {
    return !!(T(e) && e.declarationMap);
   }
   e.getAreDeclarationMapsEnabled = C;
   function D(t) {
    var n = x(t);
    return t.allowSyntheticDefaultImports !== undefined ? t.allowSyntheticDefaultImports : t.esModuleInterop ? n !== e.ModuleKind.None && n < e.ModuleKind.ES2015 : n === e.ModuleKind.System;
   }
   e.getAllowSyntheticDefaultImports = D;
   function T(e) {
    return !!(e.declaration || e.composite);
   }
   e.getEmitDeclarations = T;
   function E(e, t) {
    return e[t] === undefined ? !!e.strict : !!e[t];
   }
   e.getStrictOptionValue = E;
   function N(e) {
    var t = false;
    for (var n = 0; n < e.length; n++) {
     if (e.charCodeAt(n) === 42) {
      if (!t) {
       t = true;
      } else {
       return false;
      }
     }
    }
    return true;
   }
   e.hasZeroOrOneAsteriskCharacter = N;
   e.directorySeparator = "/";
   var A = "\\";
   var F = "://";
   var P = /\\/g;
   function I(t) {
    return t.replace(P, e.directorySeparator);
   }
   e.normalizeSlashes = I;
   function O(e) {
    return e >= 97 && e <= 122 || e >= 65 && e <= 90;
   }
   function M(e, t) {
    var n = e.charCodeAt(t);
    if (n === 58) return t + 1;
    if (n === 37 && e.charCodeAt(t + 1) === 51) {
     var r = e.charCodeAt(t + 2);
     if (r === 97 || r === 65) return t + 3;
    }
    return -1;
   }
   function L(t) {
    if (!t) return 0;
    var n = t.charCodeAt(0);
    if (n === 47 || n === 92) {
     if (t.charCodeAt(1) !== n) return 1;
     var r = t.indexOf(n === 47 ? e.directorySeparator : A, 2);
     if (r < 0) return t.length;
     return r + 1;
    }
    if (O(n) && t.charCodeAt(1) === 58) {
     var i = t.charCodeAt(2);
     if (i === 47 || i === 92) return 3;
     if (t.length === 2) return 2;
    }
    var a = t.indexOf(F);
    if (a !== -1) {
     var o = a + F.length;
     var s = t.indexOf(e.directorySeparator, o);
     if (s !== -1) {
      var c = t.slice(0, a);
      var u = t.slice(o, s);
      if (c === "file" && (u === "" || u === "localhost") && O(t.charCodeAt(s + 1))) {
       var l = M(t, s + 2);
       if (l !== -1) {
        if (t.charCodeAt(l) === 47) {
         return ~(l + 1);
        }
        if (l === t.length) {
         return ~l;
        }
       }
      }
      return ~(s + 1);
     }
     return ~t.length;
    }
    return 0;
   }
   function R(e) {
    var t = L(e);
    return t < 0 ? ~t : t;
   }
   e.getRootLength = R;
   function B(t) {
    return e.resolvePath(t);
   }
   e.normalizePath = B;
   function z(t) {
    t = I(t);
    var n = G(H(t)), r = n[0], i = n.slice(1);
    if (i.length) {
     var a = r + i.join(e.directorySeparator);
     return {
      path: e.hasTrailingDirectorySeparator(t) ? e.ensureTrailingDirectorySeparator(a) : a,
      parts: i
     };
    } else {
     return {
      path: r,
      parts: i
     };
    }
   }
   e.normalizePathAndParts = z;
   function j(t) {
    t = I(t);
    var n = R(t);
    if (n === t.length) return t;
    t = e.removeTrailingDirectorySeparator(t);
    return t.slice(0, Math.max(n, t.lastIndexOf(e.directorySeparator)));
   }
   e.getDirectoryPath = j;
   function q(e) {
    return L(e) < 0;
   }
   e.isUrl = q;
   function U(e) {
    return /^\.\.?($|[\\/])/.test(e);
   }
   e.pathIsRelative = U;
   function J(e) {
    return L(e) > 0;
   }
   e.isRootedDiskPath = J;
   function K(e) {
    var t = L(e);
    return t > 0 && t === e.length;
   }
   e.isDiskPathRoot = K;
   function V(t, n, r) {
    return !J(t) ? t : e.getRelativePathToDirectoryOrUrl(n, t, n, r, false);
   }
   e.convertToRelativePath = V;
   function W(t, n) {
    var r = t.substring(0, n);
    var i = t.substring(n).split(e.directorySeparator);
    if (i.length && !e.lastOrUndefined(i)) i.pop();
    return [ r ].concat(i);
   }
   function H(t, n) {
    if (n === void 0) {
     n = "";
    }
    t = e.combinePaths(n, t);
    var r = R(t);
    return W(t, r);
   }
   e.getPathComponents = H;
   function G(t) {
    if (!e.some(t)) return [];
    var n = [ t[0] ];
    for (var r = 1; r < t.length; r++) {
     var i = t[r];
     if (!i) continue;
     if (i === ".") continue;
     if (i === "..") {
      if (n.length > 1) {
       if (n[n.length - 1] !== "..") {
        n.pop();
        continue;
       }
      } else if (n[0]) continue;
     }
     n.push(i);
    }
    return n;
   }
   e.reducePathComponents = G;
   function $(e, t) {
    return G(H(e, t));
   }
   e.getNormalizedPathComponents = $;
   function X(e, t) {
    return Q($(e, t));
   }
   e.getNormalizedAbsolutePath = X;
   function Q(t) {
    if (t.length === 0) return "";
    var n = t[0] && e.ensureTrailingDirectorySeparator(t[0]);
    if (t.length === 1) return n;
    return n + t.slice(1).join(e.directorySeparator);
   }
   e.getPathFromPathComponents = Q;
  })(s || (s = {}));
  (function(e) {
   function t(t, n, r, i) {
    var a = e.reducePathComponents(e.getPathComponents(t));
    var o = e.reducePathComponents(e.getPathComponents(n));
    var s;
    for (s = 0; s < a.length && s < o.length; s++) {
     var c = i(a[s]);
     var u = i(o[s]);
     var l = s === 0 ? e.equateStringsCaseInsensitive : r;
     if (!l(c, u)) break;
    }
    if (s === 0) {
     return o;
    }
    var f = o.slice(s);
    var d = [];
    for (;s < a.length; s++) {
     d.push("..");
    }
    return [ "" ].concat(d, f);
   }
   e.getPathComponentsRelativeTo = t;
   function n(t, n, i) {
    return a(r(e.getDirectoryPath(t), n, i));
   }
   e.getRelativePathFromFile = n;
   function r(n, r, i) {
    ne.assert(e.getRootLength(n) > 0 === e.getRootLength(r) > 0, "Paths must either both be absolute or both be relative");
    var a = typeof i === "function" ? i : e.identity;
    var o = typeof i === "boolean" ? i : false;
    var s = t(n, r, o ? e.equateStringsCaseInsensitive : e.equateStringsCaseSensitive, a);
    return e.getPathFromPathComponents(s);
   }
   e.getRelativePathFromDirectory = r;
   function i(n, r, i, a, o) {
    var s = t(c(i, n), c(i, r), e.equateStringsCaseSensitive, a);
    var u = s[0];
    if (o && e.isRootedDiskPath(u)) {
     var l = u.charAt(0) === e.directorySeparator ? "file://" : "file:///";
     s[0] = l + u;
    }
    return e.getPathFromPathComponents(s);
   }
   e.getRelativePathToDirectoryOrUrl = i;
   function a(t) {
    return e.getRootLength(t) === 0 && !e.pathIsRelative(t) ? "./" + t : t;
   }
   e.ensurePathIsNonModuleName = a;
   function o(t, n, r) {
    t = e.normalizeSlashes(t);
    var i = e.getRootLength(t);
    if (i === t.length) return "";
    t = l(t);
    var a = t.slice(Math.max(e.getRootLength(t), t.lastIndexOf(e.directorySeparator) + 1));
    var o = n !== undefined && r !== undefined ? fe(a, n, r) : undefined;
    return o ? a.slice(0, a.length - o.length) : a;
   }
   e.getBaseFileName = o;
   function s(t) {
    var n = [];
    for (var r = 1; r < arguments.length; r++) {
     n[r - 1] = arguments[r];
    }
    if (t) t = e.normalizeSlashes(t);
    for (var i = 0, a = n; i < a.length; i++) {
     var o = a[i];
     if (!o) continue;
     o = e.normalizeSlashes(o);
     if (!t || e.getRootLength(o) !== 0) {
      t = o;
     } else {
      t = f(t) + o;
     }
    }
    return t;
   }
   e.combinePaths = s;
   function c(t) {
    var n = [];
    for (var r = 1; r < arguments.length; r++) {
     n[r - 1] = arguments[r];
    }
    var i = e.some(n) ? s.apply(void 0, [ t ].concat(n)) : e.normalizeSlashes(t);
    var a = e.getPathFromPathComponents(e.reducePathComponents(e.getPathComponents(i)));
    return a && u(i) ? f(a) : a;
   }
   e.resolvePath = c;
   function u(e) {
    if (e.length === 0) return false;
    var t = e.charCodeAt(e.length - 1);
    return t === 47 || t === 92;
   }
   e.hasTrailingDirectorySeparator = u;
   function l(e) {
    if (u(e)) {
     return e.substr(0, e.length - 1);
    }
    return e;
   }
   e.removeTrailingDirectorySeparator = l;
   function f(t) {
    if (!u(t)) {
     return t + e.directorySeparator;
    }
    return t;
   }
   e.ensureTrailingDirectorySeparator = f;
   function d(t, n, r) {
    if (t === n) return 0;
    if (t === undefined) return -1;
    if (n === undefined) return 1;
    var i = e.reducePathComponents(e.getPathComponents(t));
    var a = e.reducePathComponents(e.getPathComponents(n));
    var o = Math.min(i.length, a.length);
    for (var s = 0; s < o; s++) {
     var c = s === 0 ? e.compareStringsCaseInsensitive : r;
     var u = c(i[s], a[s]);
     if (u !== 0) {
      return u;
     }
    }
    return e.compareValues(i.length, a.length);
   }
   function p(t, n) {
    return d(t, n, e.compareStringsCaseSensitive);
   }
   e.comparePathsCaseSensitive = p;
   function m(t, n) {
    return d(t, n, e.compareStringsCaseInsensitive);
   }
   e.comparePathsCaseInsensitive = m;
   function _(t, n, r, i) {
    if (typeof r === "string") {
     t = s(r, t);
     n = s(r, n);
    } else if (typeof r === "boolean") {
     i = r;
    }
    return d(t, n, e.getStringComparer(i));
   }
   e.comparePaths = _;
   function g(t, n, r, i) {
    if (typeof r === "string") {
     t = s(r, t);
     n = s(r, n);
    } else if (typeof r === "boolean") {
     i = r;
    }
    if (t === undefined || n === undefined) return false;
    if (t === n) return true;
    var a = e.reducePathComponents(e.getPathComponents(t));
    var o = e.reducePathComponents(e.getPathComponents(n));
    if (o.length < a.length) {
     return false;
    }
    var c = i ? e.equateStringsCaseInsensitive : e.equateStringsCaseSensitive;
    for (var u = 0; u < a.length; u++) {
     var l = u === 0 ? e.equateStringsCaseInsensitive : c;
     if (!l(a[u], o[u])) {
      return false;
     }
    }
    return true;
   }
   e.containsPath = g;
   function h(e) {
    return e === 47 || e === 92;
   }
   function v(e) {
    return h(e.charCodeAt(0)) ? e.slice(1) : undefined;
   }
   function y(t, n, r) {
    var i = e.tryRemovePrefix(t, n, r);
    return i === undefined ? undefined : v(i);
   }
   e.tryRemoveDirectoryPrefix = y;
   var b = /[^\w\s\/]/g;
   var x = [ 42, 63 ];
   function k(t) {
    return e.stringContains(o(t), ".");
   }
   e.hasExtension = k;
   e.commonPackageFolders = [ "node_modules", "bower_components", "jspm_packages" ];
   var S = "(?!(" + e.commonPackageFolders.join("|") + ")(/|$))";
   var w = {
    singleAsteriskRegexFragment: "([^./]|(\\.(?!min\\.js$))?)*",
    doubleAsteriskRegexFragment: "(/" + S + "[^/.][^/]*)*?",
    replaceWildcardCharacter: function(e) {
     return P(e, w.singleAsteriskRegexFragment);
    }
   };
   var C = {
    singleAsteriskRegexFragment: "[^/]*",
    doubleAsteriskRegexFragment: "(/" + S + "[^/.][^/]*)*?",
    replaceWildcardCharacter: function(e) {
     return P(e, C.singleAsteriskRegexFragment);
    }
   };
   var D = {
    singleAsteriskRegexFragment: "[^/]*",
    doubleAsteriskRegexFragment: "(/.+?)?",
    replaceWildcardCharacter: function(e) {
     return P(e, D.singleAsteriskRegexFragment);
    }
   };
   var T = {
    files: w,
    directories: C,
    exclude: D
   };
   function E(e, t, n) {
    var r = N(e, t, n);
    if (!r || !r.length) {
     return undefined;
    }
    var i = r.map(function(e) {
     return "(" + e + ")";
    }).join("|");
    var a = n === "exclude" ? "($|/)" : "$";
    return "^(" + i + ")" + a;
   }
   e.getRegularExpressionForWildcard = E;
   function N(t, n, r) {
    if (t === undefined || t.length === 0) {
     return undefined;
    }
    return e.flatMap(t, function(e) {
     return e && F(e, n, r, T[r]);
    });
   }
   function A(e) {
    return !/[.*?]/.test(e);
   }
   e.isImplicitGlob = A;
   function F(t, n, r, i) {
    var a = i.singleAsteriskRegexFragment, o = i.doubleAsteriskRegexFragment, s = i.replaceWildcardCharacter;
    var c = "";
    var u = false;
    var f = e.getNormalizedPathComponents(t, n);
    var d = e.last(f);
    if (r !== "exclude" && d === "**") {
     return undefined;
    }
    f[0] = l(f[0]);
    if (A(d)) {
     f.push("**", "*");
    }
    var p = 0;
    for (var m = 0, _ = f; m < _.length; m++) {
     var g = _[m];
     if (g === "**") {
      c += o;
     } else {
      if (r === "directories") {
       c += "(";
       p++;
      }
      if (u) {
       c += e.directorySeparator;
      }
      if (r !== "exclude") {
       var h = "";
       if (g.charCodeAt(0) === 42) {
        h += "([^./]" + a + ")?";
        g = g.substr(1);
       } else if (g.charCodeAt(0) === 63) {
        h += "[^./]";
        g = g.substr(1);
       }
       h += g.replace(b, s);
       if (h !== g) {
        c += S;
       }
       c += h;
      } else {
       c += g.replace(b, s);
      }
     }
     u = true;
    }
    while (p > 0) {
     c += ")?";
     p--;
    }
    return c;
   }
   function P(e, t) {
    return e === "*" ? t : e === "?" ? "[^/]" : "\\" + e;
   }
   function I(t, n, r, i, a) {
    t = e.normalizePath(t);
    a = e.normalizePath(a);
    var o = s(a, t);
    return {
     includeFilePatterns: e.map(N(r, o, "files"), function(e) {
      return "^" + e + "$";
     }),
     includeFilePattern: E(r, o, "files"),
     includeDirectoryPattern: E(r, o, "directories"),
     excludePattern: E(n, o, "exclude"),
     basePaths: L(t, r, i)
    };
   }
   e.getFileMatcherPatterns = I;
   function O(e, t) {
    return new RegExp(e, t ? "" : "i");
   }
   e.getRegexFromPattern = O;
   function M(t, n, r, i, a, o, c, u) {
    t = e.normalizePath(t);
    o = e.normalizePath(o);
    var l = I(t, r, i, a, o);
    var f = l.includeFilePatterns && l.includeFilePatterns.map(function(e) {
     return O(e, a);
    });
    var d = l.includeDirectoryPattern && O(l.includeDirectoryPattern, a);
    var p = l.excludePattern && O(l.excludePattern, a);
    var m = f ? f.map(function() {
     return [];
    }) : [ [] ];
    for (var _ = 0, g = l.basePaths; _ < g.length; _++) {
     var h = g[_];
     v(h, s(o, h), c);
    }
    return e.flatten(m);
    function v(t, r, i) {
     var a = u(t), o = a.files, c = a.directories;
     var l = function(i) {
      var a = s(t, i);
      var o = s(r, i);
      if (n && !e.fileExtensionIsOneOf(a, n)) return "continue";
      if (p && p.test(o)) return "continue";
      if (!f) {
       m[0].push(a);
      } else {
       var c = e.findIndex(f, function(e) {
        return e.test(o);
       });
       if (c !== -1) {
        m[c].push(a);
       }
      }
     };
     for (var _ = 0, g = e.sort(o, e.compareStringsCaseSensitive); _ < g.length; _++) {
      var h = g[_];
      l(h);
     }
     if (i !== undefined) {
      i--;
      if (i === 0) {
       return;
      }
     }
     for (var y = 0, b = e.sort(c, e.compareStringsCaseSensitive); y < b.length; y++) {
      var h = b[y];
      var x = s(t, h);
      var k = s(r, h);
      if ((!d || d.test(k)) && (!p || !p.test(k))) {
       v(x, k, i);
      }
     }
    }
   }
   e.matchFiles = M;
   function L(t, n, r) {
    var i = [ t ];
    if (n) {
     var a = [];
     for (var o = 0, c = n; o < c.length; o++) {
      var u = c[o];
      var l = e.isRootedDiskPath(u) ? u : e.normalizePath(s(t, u));
      a.push(R(l));
     }
     a.sort(e.getStringComparer(!r));
     var f = function(n) {
      if (e.every(i, function(e) {
       return !g(e, n, t, !r);
      })) {
       i.push(n);
      }
     };
     for (var d = 0, p = a; d < p.length; d++) {
      var m = p[d];
      f(m);
     }
    }
    return i;
   }
   function R(t) {
    var n = e.indexOfAnyCharCode(t, x);
    if (n < 0) {
     return !k(t) ? t : l(e.getDirectoryPath(t));
    }
    return t.substring(0, t.lastIndexOf(e.directorySeparator, n));
   }
   function B(e, t) {
    return t || z(e) || 3;
   }
   e.ensureScriptKind = B;
   function z(e) {
    var t = e.substr(e.lastIndexOf("."));
    switch (t.toLowerCase()) {
    case ".js":
     return 1;

    case ".jsx":
     return 2;

    case ".ts":
     return 3;

    case ".tsx":
     return 4;

    case ".json":
     return 6;

    default:
     return 0;
    }
   }
   e.getScriptKindFromFileName = z;
   e.supportedTypeScriptExtensions = [ ".ts", ".tsx", ".d.ts" ];
   e.supportedTypescriptExtensionsForExtractExtension = [ ".d.ts", ".ts", ".tsx" ];
   e.supportedJavascriptExtensions = [ ".js", ".jsx" ];
   var j = e.supportedTypeScriptExtensions.concat(e.supportedJavascriptExtensions);
   function q(t, n) {
    var r = t && t.allowJs;
    if (!n || n.length === 0) {
     return r ? j : e.supportedTypeScriptExtensions;
    }
    var i = (r ? j : e.supportedTypeScriptExtensions).concat(e.mapDefined(n, function(e) {
     return e.scriptKind === 7 || r && U(e.scriptKind) ? e.extension : undefined;
    }));
    return e.deduplicate(i, e.equateStringsCaseSensitive, e.compareStringsCaseSensitive);
   }
   e.getSupportedExtensions = q;
   function U(e) {
    return e === 1 || e === 2;
   }
   function J(t) {
    return e.some(e.supportedJavascriptExtensions, function(n) {
     return e.fileExtensionIs(t, n);
    });
   }
   e.hasJavaScriptFileExtension = J;
   function K(t) {
    return e.some(e.supportedTypeScriptExtensions, function(n) {
     return e.fileExtensionIs(t, n);
    });
   }
   e.hasTypeScriptFileExtension = K;
   function V(t, n, r) {
    if (!t) {
     return false;
    }
    for (var i = 0, a = q(n, r); i < a.length; i++) {
     var o = a[i];
     if (e.fileExtensionIs(t, o)) {
      return true;
     }
    }
    return false;
   }
   e.isSupportedSourceFileName = V;
   var W;
   (function(e) {
    e[e["TypeScriptFiles"] = 0] = "TypeScriptFiles";
    e[e["DeclarationAndJavaScriptFiles"] = 2] = "DeclarationAndJavaScriptFiles";
    e[e["Highest"] = 0] = "Highest";
    e[e["Lowest"] = 2] = "Lowest";
   })(W = e.ExtensionPriority || (e.ExtensionPriority = {}));
   function H(t, n) {
    for (var r = n.length - 1; r >= 0; r--) {
     if (e.fileExtensionIs(t, n[r])) {
      return G(r, n);
     }
    }
    return 0;
   }
   e.getExtensionPriority = H;
   function G(e, t) {
    if (e < 2) {
     return 0;
    } else if (e < t.length) {
     return 2;
    } else {
     return t.length;
    }
   }
   e.adjustExtensionPriority = G;
   function $(e, t) {
    if (e < 2) {
     return 2;
    } else {
     return t.length;
    }
   }
   e.getNextLowestExtensionPriority = $;
   var X = [ ".d.ts", ".ts", ".js", ".tsx", ".jsx", ".json" ];
   function Q(e) {
    for (var t = 0, n = X; t < n.length; t++) {
     var r = n[t];
     var i = Y(e, r);
     if (i !== undefined) {
      return i;
     }
    }
    return e;
   }
   e.removeFileExtension = Q;
   function Y(t, n) {
    return e.fileExtensionIs(t, n) ? Z(t, n) : undefined;
   }
   e.tryRemoveExtension = Y;
   function Z(e, t) {
    return e.substring(0, e.length - t.length);
   }
   e.removeExtension = Z;
   function ee(e, t) {
    return te(e, t, X, false);
   }
   e.changeExtension = ee;
   function te(t, n, r, i) {
    var a = r !== undefined && i !== undefined ? fe(t, r, i) : fe(t);
    return a ? t.slice(0, t.length - a.length) + (e.startsWith(n, ".") ? n : "." + n) : t;
   }
   e.changeAnyExtension = te;
   var ne;
   (function(t) {
    function n(t) {
     var n = e.SymbolFlags;
     return "{ flags: " + (n ? r(t.flags, n) : t.flags) + "; declarations: " + e.map(t.declarations, i) + " }";
    }
    t.showSymbol = n;
    function r(e, t) {
     var n = [];
     for (var r = 0; r <= 30; r++) {
      var i = 1 << r;
      if (e & i) {
       n.push(t[i]);
      }
     }
     return n.join("|");
    }
    function i(t) {
     var n = e.SyntaxKind;
     return n ? n[t.kind] : t.kind.toString();
    }
    t.showSyntaxKind = i;
   })(ne = e.Debug || (e.Debug = {}));
   function re(t) {
    ne.assert(e.hasZeroOrOneAsteriskCharacter(t));
    var n = t.indexOf("*");
    return n === -1 ? undefined : {
     prefix: t.substr(0, n),
     suffix: t.substr(n + 1)
    };
   }
   e.tryParsePattern = re;
   function ie(e) {
    return !(e >= 0);
   }
   e.positionIsSynthesized = ie;
   function ae(e) {
    return e === ".ts" || e === ".tsx" || e === ".d.ts";
   }
   e.extensionIsTypeScript = ae;
   function oe(e) {
    return ae(e) || e === ".json";
   }
   e.resolutionExtensionIsTypeScriptOrJson = oe;
   function se(e) {
    var t = ue(e);
    return t !== undefined ? t : ne.fail("File " + e + " has unknown extension.");
   }
   e.extensionFromPath = se;
   function ce(e) {
    return ue(e) !== undefined;
   }
   e.isAnySupportedFileExtension = ce;
   function ue(t) {
    return e.find(X, function(n) {
     return e.fileExtensionIs(t, n);
    });
   }
   e.tryGetExtensionFromPath = ue;
   function le(t, n, r) {
    if (typeof n === "string") n = [ n ];
    for (var i = 0, a = n; i < a.length; i++) {
     var o = a[i];
     if (!e.startsWith(o, ".")) o = "." + o;
     if (t.length >= o.length && t.charAt(t.length - o.length) === ".") {
      var s = t.slice(t.length - o.length);
      if (r(s, o)) {
       return s;
      }
     }
    }
    return "";
   }
   function fe(t, n, r) {
    if (n) {
     return le(t, n, r ? e.equateStringsCaseInsensitive : e.equateStringsCaseSensitive);
    }
    var i = o(t);
    var a = i.lastIndexOf(".");
    if (a >= 0) {
     return i.substring(a);
    }
    return "";
   }
   e.getAnyExtensionFromPath = fe;
   function de(e, t) {
    return e.checkJsDirective ? e.checkJsDirective.enabled : t.checkJs;
   }
   e.isCheckJsEnabledForFile = de;
   e.emptyFileSystemEntries = {
    files: e.emptyArray,
    directories: e.emptyArray
   };
   function pe(t, n) {
    var r = [];
    for (var i = 0, a = t; i < a.length; i++) {
     var o = a[i];
     var s = re(o);
     if (s) {
      r.push(s);
     } else if (o === n) {
      return o;
     }
    }
    return e.findBestPatternMatch(r, function(e) {
     return e;
    }, n);
   }
   e.matchPatternOrExact = pe;
   function me(e, t) {
    var n = e.indexOf(t);
    ne.assert(n !== -1);
    return e.slice(n);
   }
   e.sliceAfter = me;
   function _e(e, t) {
    ne.assert(e.length !== 0);
    var n = t(e[0]);
    var r = n;
    for (var i = 1; i < e.length; i++) {
     var a = t(e[i]);
     if (a < n) {
      n = a;
     } else if (a > r) {
      r = a;
     }
    }
    return {
     min: n,
     max: r
    };
   }
   e.minAndMax = _e;
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(e) {
    e[e["None"] = 0] = "None";
    e[e["Yield"] = 1] = "Yield";
    e[e["Await"] = 2] = "Await";
    e[e["Type"] = 4] = "Type";
    e[e["IgnoreMissingOpenBrace"] = 16] = "IgnoreMissingOpenBrace";
    e[e["JSDoc"] = 32] = "JSDoc";
   })(t || (t = {}));
   var n;
   var r;
   var i;
   var a;
   function o(t, o, s) {
    if (t === 277) {
     return new (a || (a = e.objectAllocator.getSourceFileConstructor()))(t, o, s);
    } else if (t === 71) {
     return new (i || (i = e.objectAllocator.getIdentifierConstructor()))(t, o, s);
    } else if (!e.isNodeKind(t)) {
     return new (r || (r = e.objectAllocator.getTokenConstructor()))(t, o, s);
    } else {
     return new (n || (n = e.objectAllocator.getNodeConstructor()))(t, o, s);
    }
   }
   e.createNode = o;
   function s(e, t) {
    return t && e(t);
   }
   function c(e, t, n) {
    if (n) {
     if (t) {
      return t(n);
     }
     for (var r = 0, i = n; r < i.length; r++) {
      var a = i[r];
      var o = e(a);
      if (o) {
       return o;
      }
     }
    }
   }
   function u(e, t) {
    return e.charCodeAt(t + 1) === 42 && e.charCodeAt(t + 2) === 42 && e.charCodeAt(t + 3) !== 47;
   }
   e.isJSDocLikeText = u;
   function l(e, t, n) {
    if (!e || e.kind <= 145) {
     return;
    }
    switch (e.kind) {
    case 146:
     return s(t, e.left) || s(t, e.right);

    case 148:
     return s(t, e.name) || s(t, e.constraint) || s(t, e.default) || s(t, e.expression);

    case 274:
     return c(t, n, e.decorators) || c(t, n, e.modifiers) || s(t, e.name) || s(t, e.questionToken) || s(t, e.equalsToken) || s(t, e.objectAssignmentInitializer);

    case 275:
     return s(t, e.expression);

    case 149:
     return c(t, n, e.decorators) || c(t, n, e.modifiers) || s(t, e.dotDotDotToken) || s(t, e.name) || s(t, e.questionToken) || s(t, e.type) || s(t, e.initializer);

    case 152:
     return c(t, n, e.decorators) || c(t, n, e.modifiers) || s(t, e.name) || s(t, e.questionToken) || s(t, e.exclamationToken) || s(t, e.type) || s(t, e.initializer);

    case 151:
     return c(t, n, e.decorators) || c(t, n, e.modifiers) || s(t, e.name) || s(t, e.questionToken) || s(t, e.type) || s(t, e.initializer);

    case 273:
     return c(t, n, e.decorators) || c(t, n, e.modifiers) || s(t, e.name) || s(t, e.questionToken) || s(t, e.initializer);

    case 235:
     return c(t, n, e.decorators) || c(t, n, e.modifiers) || s(t, e.name) || s(t, e.exclamationToken) || s(t, e.type) || s(t, e.initializer);

    case 184:
     return c(t, n, e.decorators) || c(t, n, e.modifiers) || s(t, e.dotDotDotToken) || s(t, e.propertyName) || s(t, e.name) || s(t, e.initializer);

    case 163:
    case 164:
    case 158:
    case 159:
    case 160:
     return c(t, n, e.decorators) || c(t, n, e.modifiers) || c(t, n, e.typeParameters) || c(t, n, e.parameters) || s(t, e.type);

    case 154:
    case 153:
    case 155:
    case 156:
    case 157:
    case 194:
    case 237:
    case 195:
     return c(t, n, e.decorators) || c(t, n, e.modifiers) || s(t, e.asteriskToken) || s(t, e.name) || s(t, e.questionToken) || c(t, n, e.typeParameters) || c(t, n, e.parameters) || s(t, e.type) || s(t, e.equalsGreaterThanToken) || s(t, e.body);

    case 162:
     return s(t, e.typeName) || c(t, n, e.typeArguments);

    case 161:
     return s(t, e.parameterName) || s(t, e.type);

    case 165:
     return s(t, e.exprName);

    case 166:
     return c(t, n, e.members);

    case 167:
     return s(t, e.elementType);

    case 168:
     return c(t, n, e.elementTypes);

    case 171:
    case 172:
     return c(t, n, e.types);

    case 173:
     return s(t, e.checkType) || s(t, e.extendsType) || s(t, e.trueType) || s(t, e.falseType);

    case 174:
     return s(t, e.typeParameter);

    case 181:
     return s(t, e.argument) || s(t, e.qualifier) || c(t, n, e.typeArguments);

    case 175:
    case 177:
     return s(t, e.type);

    case 178:
     return s(t, e.objectType) || s(t, e.indexType);

    case 179:
     return s(t, e.readonlyToken) || s(t, e.typeParameter) || s(t, e.questionToken) || s(t, e.type);

    case 180:
     return s(t, e.literal);

    case 182:
    case 183:
     return c(t, n, e.elements);

    case 185:
     return c(t, n, e.elements);

    case 186:
     return c(t, n, e.properties);

    case 187:
     return s(t, e.expression) || s(t, e.name);

    case 188:
     return s(t, e.expression) || s(t, e.argumentExpression);

    case 189:
    case 190:
     return s(t, e.expression) || c(t, n, e.typeArguments) || c(t, n, e.arguments);

    case 191:
     return s(t, e.tag) || c(t, n, e.typeArguments) || s(t, e.template);

    case 192:
     return s(t, e.type) || s(t, e.expression);

    case 193:
     return s(t, e.expression);

    case 196:
     return s(t, e.expression);

    case 197:
     return s(t, e.expression);

    case 198:
     return s(t, e.expression);

    case 200:
     return s(t, e.operand);

    case 205:
     return s(t, e.asteriskToken) || s(t, e.expression);

    case 199:
     return s(t, e.expression);

    case 201:
     return s(t, e.operand);

    case 202:
     return s(t, e.left) || s(t, e.operatorToken) || s(t, e.right);

    case 210:
     return s(t, e.expression) || s(t, e.type);

    case 211:
     return s(t, e.expression);

    case 212:
     return s(t, e.name);

    case 203:
     return s(t, e.condition) || s(t, e.questionToken) || s(t, e.whenTrue) || s(t, e.colonToken) || s(t, e.whenFalse);

    case 206:
     return s(t, e.expression);

    case 216:
    case 243:
     return c(t, n, e.statements);

    case 277:
     return c(t, n, e.statements) || s(t, e.endOfFileToken);

    case 217:
     return c(t, n, e.decorators) || c(t, n, e.modifiers) || s(t, e.declarationList);

    case 236:
     return c(t, n, e.declarations);

    case 219:
     return s(t, e.expression);

    case 220:
     return s(t, e.expression) || s(t, e.thenStatement) || s(t, e.elseStatement);

    case 221:
     return s(t, e.statement) || s(t, e.expression);

    case 222:
     return s(t, e.expression) || s(t, e.statement);

    case 223:
     return s(t, e.initializer) || s(t, e.condition) || s(t, e.incrementor) || s(t, e.statement);

    case 224:
     return s(t, e.initializer) || s(t, e.expression) || s(t, e.statement);

    case 225:
     return s(t, e.awaitModifier) || s(t, e.initializer) || s(t, e.expression) || s(t, e.statement);

    case 226:
    case 227:
     return s(t, e.label);

    case 228:
     return s(t, e.expression);

    case 229:
     return s(t, e.expression) || s(t, e.statement);

    case 230:
     return s(t, e.expression) || s(t, e.caseBlock);

    case 244:
     return c(t, n, e.clauses);

    case 269:
     return s(t, e.expression) || c(t, n, e.statements);

    case 270:
     return c(t, n, e.statements);

    case 231:
     return s(t, e.label) || s(t, e.statement);

    case 232:
     return s(t, e.expression);

    case 233:
     return s(t, e.tryBlock) || s(t, e.catchClause) || s(t, e.finallyBlock);

    case 272:
     return s(t, e.variableDeclaration) || s(t, e.block);

    case 150:
     return s(t, e.expression);

    case 238:
    case 207:
     return c(t, n, e.decorators) || c(t, n, e.modifiers) || s(t, e.name) || c(t, n, e.typeParameters) || c(t, n, e.heritageClauses) || c(t, n, e.members);

    case 239:
     return c(t, n, e.decorators) || c(t, n, e.modifiers) || s(t, e.name) || c(t, n, e.typeParameters) || c(t, n, e.heritageClauses) || c(t, n, e.members);

    case 240:
     return c(t, n, e.decorators) || c(t, n, e.modifiers) || s(t, e.name) || c(t, n, e.typeParameters) || s(t, e.type);

    case 241:
     return c(t, n, e.decorators) || c(t, n, e.modifiers) || s(t, e.name) || c(t, n, e.members);

    case 276:
     return s(t, e.name) || s(t, e.initializer);

    case 242:
     return c(t, n, e.decorators) || c(t, n, e.modifiers) || s(t, e.name) || s(t, e.body);

    case 246:
     return c(t, n, e.decorators) || c(t, n, e.modifiers) || s(t, e.name) || s(t, e.moduleReference);

    case 247:
     return c(t, n, e.decorators) || c(t, n, e.modifiers) || s(t, e.importClause) || s(t, e.moduleSpecifier);

    case 248:
     return s(t, e.name) || s(t, e.namedBindings);

    case 245:
     return s(t, e.name);

    case 249:
     return s(t, e.name);

    case 250:
    case 254:
     return c(t, n, e.elements);

    case 253:
     return c(t, n, e.decorators) || c(t, n, e.modifiers) || s(t, e.exportClause) || s(t, e.moduleSpecifier);

    case 251:
    case 255:
     return s(t, e.propertyName) || s(t, e.name);

    case 252:
     return c(t, n, e.decorators) || c(t, n, e.modifiers) || s(t, e.expression);

    case 204:
     return s(t, e.head) || c(t, n, e.templateSpans);

    case 214:
     return s(t, e.expression) || s(t, e.literal);

    case 147:
     return s(t, e.expression);

    case 271:
     return c(t, n, e.types);

    case 209:
     return s(t, e.expression) || c(t, n, e.typeArguments);

    case 257:
     return s(t, e.expression);

    case 256:
     return c(t, n, e.decorators);

    case 306:
     return c(t, n, e.elements);

    case 258:
     return s(t, e.openingElement) || c(t, n, e.children) || s(t, e.closingElement);

    case 262:
     return s(t, e.openingFragment) || c(t, n, e.children) || s(t, e.closingFragment);

    case 259:
    case 260:
     return s(t, e.tagName) || c(t, n, e.typeArguments) || s(t, e.attributes);

    case 266:
     return c(t, n, e.properties);

    case 265:
     return s(t, e.name) || s(t, e.initializer);

    case 267:
     return s(t, e.expression);

    case 268:
     return s(t, e.dotDotDotToken) || s(t, e.expression);

    case 261:
     return s(t, e.tagName);

    case 169:
    case 170:
    case 281:
    case 285:
    case 284:
    case 286:
    case 288:
     return s(t, e.type);

    case 287:
     return c(t, n, e.parameters) || s(t, e.type);

    case 289:
     return c(t, n, e.tags);

    case 296:
    case 302:
     if (e.isNameFirst) {
      return s(t, e.name) || s(t, e.typeExpression);
     } else {
      return s(t, e.typeExpression) || s(t, e.name);
     }

    case 297:
     return s(t, e.typeExpression);

    case 299:
     return s(t, e.typeExpression);

    case 293:
     return s(t, e.class);

    case 300:
     return c(t, n, e.typeParameters);

    case 301:
     if (e.typeExpression && e.typeExpression.kind === 281) {
      return s(t, e.typeExpression) || s(t, e.fullName);
     } else {
      return s(t, e.fullName) || s(t, e.typeExpression);
     }

    case 295:
     return s(t, e.fullName) || s(t, e.typeExpression);

    case 298:
     return s(t, e.typeExpression);

    case 291:
     return c(t, n, e.decorators) || c(t, n, e.modifiers) || c(t, n, e.typeParameters) || c(t, n, e.parameters) || s(t, e.type);

    case 290:
     if (e.jsDocPropertyTags) {
      for (var r = 0, i = e.jsDocPropertyTags; r < i.length; r++) {
       var a = i[r];
       s(t, a);
      }
     }
     return;

    case 305:
     return s(t, e.expression);
    }
   }
   e.forEachChild = l;
   function f(t, n, r, i, a) {
    if (i === void 0) {
     i = false;
    }
    e.performance.mark("beforeParse");
    var o;
    if (r === 100) {
     o = v.parseJsonText(t, n, r, undefined, i);
    } else {
     o = v.parseSourceFile(t, n, r, undefined, i, a);
    }
    e.performance.mark("afterParse");
    e.performance.measure("Parse", "beforeParse", "afterParse");
    return o;
   }
   e.createSourceFile = f;
   function d(e, t) {
    return v.parseIsolatedEntityName(e, t);
   }
   e.parseIsolatedEntityName = d;
   function p(e, t) {
    return v.parseJsonText(e, t);
   }
   e.parseJsonText = p;
   function m(e) {
    return e.externalModuleIndicator !== undefined;
   }
   e.isExternalModule = m;
   function _(e, t, n, r) {
    if (r === void 0) {
     r = false;
    }
    var i = y.updateSourceFile(e, t, n, r);
    i.flags |= e.flags & 1572864;
    return i;
   }
   e.updateSourceFile = _;
   function g(e, t, n) {
    var r = v.JSDocParser.parseIsolatedJSDocComment(e, t, n);
    if (r && r.jsDoc) {
     v.fixupParentReferences(r.jsDoc);
    }
    return r;
   }
   e.parseIsolatedJSDocComment = g;
   function h(e, t, n) {
    return v.JSDocParser.parseJSDocTypeExpressionForTests(e, t, n);
   }
   e.parseJSDocTypeExpressionForTests = h;
   var v;
   (function(t) {
    var n = e.createScanner(6, true);
    var r = 2048 | 8192;
    var i;
    var a;
    var o;
    var s;
    var c;
    var f;
    var d;
    var p;
    var m;
    var _;
    var g;
    var h;
    var v;
    var y;
    var S = false;
    function w(t, n, r, i, a, o) {
     if (a === void 0) {
      a = false;
     }
     o = e.ensureScriptKind(t, o);
     if (o === 6) {
      var s = D(t, n, r, i, a);
      e.convertToObjectWorker(s, s.parseDiagnostics, false, undefined, undefined);
      s.typeReferenceDirectives = e.emptyArray;
      s.amdDependencies = e.emptyArray;
      return s;
     }
     E(n, r, i, o);
     var c = F(t, r, a, o);
     N();
     return c;
    }
    t.parseSourceFile = w;
    function C(e, t) {
     E(e, t, undefined, 1);
     se();
     var n = yt(true);
     var r = oe() === 1 && !f.length;
     N();
     return r ? n : undefined;
    }
    t.parseIsolatedEntityName = C;
    function D(t, n, r, i, a) {
     if (r === void 0) {
      r = 2;
     }
     E(n, r, i, 6);
     c = O(t, 2, 6, false);
     c.flags = y;
     se();
     var o = ae();
     if (oe() === 1) {
      c.statements = Te([], o, o);
      c.endOfFileToken = ke();
     } else {
      var s = Ce(219);
      switch (oe()) {
      case 21:
       s.expression = Hr();
       break;

      case 101:
      case 86:
      case 95:
       s.expression = ke();
       break;

      case 38:
       if (_e(function() {
        return se() === 8 && se() !== 56;
       })) {
        s.expression = ur();
       } else {
        s.expression = $r();
       }
       break;

      case 8:
      case 9:
       if (_e(function() {
        return se() !== 56;
       })) {
        s.expression = wt();
        break;
       }

      default:
       s.expression = $r();
       break;
      }
      Ee(s);
      c.statements = Te([ s ], o);
      c.endOfFileToken = xe(1, e.Diagnostics.Unexpected_token);
     }
     if (a) {
      I(c);
     }
     c.parseDiagnostics = f;
     var u = c;
     N();
     return u;
    }
    t.parseJsonText = D;
    function T(e) {
     return e === 4 || e === 2 || e === 1 || e === 6 ? 1 : 0;
    }
    function E(t, r, c, u) {
     i = e.objectAllocator.getNodeConstructor();
     a = e.objectAllocator.getTokenConstructor();
     o = e.objectAllocator.getIdentifierConstructor();
     s = e.objectAllocator.getSourceFileConstructor();
     m = t;
     d = c;
     f = [];
     v = 0;
     g = e.createMap();
     h = 0;
     _ = 0;
     switch (u) {
     case 1:
     case 2:
      y = 65536;
      break;

     case 6:
      y = 65536 | 16777216;
      break;

     default:
      y = 0;
      break;
     }
     S = false;
     n.setText(m);
     n.setOnError(ie);
     n.setScriptTarget(r);
     n.setLanguageVariant(T(u));
    }
    function N() {
     n.setText("");
     n.setOnError(undefined);
     f = undefined;
     c = undefined;
     g = undefined;
     d = undefined;
     m = undefined;
    }
    function F(t, n, r, i) {
     var a = b(t);
     if (a) {
      y |= 4194304;
     }
     c = O(t, n, i, a);
     c.flags = y;
     se();
     x(c, m);
     k(c, o);
     c.statements = tt(0, Ti);
     e.Debug.assert(oe() === 1);
     c.endOfFileToken = P(ke());
     Ra(c);
     c.nodeCount = _;
     c.identifierCount = h;
     c.identifiers = g;
     c.parseDiagnostics = f;
     if (r) {
      I(c);
     }
     return c;
     function o(t, n, r) {
      f.push(e.createFileDiagnostic(c, t, n, r));
     }
    }
    function P(t) {
     e.Debug.assert(!t.jsDoc);
     var n = e.mapDefined(e.getJSDocCommentRanges(t, c.text), function(e) {
      return Ka.parseJSDocComment(t, e.pos, e.end - e.pos);
     });
     if (n.length) t.jsDoc = n;
     return t;
    }
    function I(t) {
     var n = t;
     l(t, r);
     return;
     function r(t) {
      if (t.parent !== n) {
       t.parent = n;
       var i = n;
       n = t;
       l(t, r);
       if (e.hasJSDocNodes(t)) {
        for (var a = 0, o = t.jsDoc; a < o.length; a++) {
         var s = o[a];
         s.parent = t;
         n = s;
         l(s, r);
        }
       }
       n = i;
      }
     }
    }
    t.fixupParentReferences = I;
    function O(t, n, r, i) {
     var a = new s(277, 0, m.length);
     _++;
     a.text = m;
     a.bindDiagnostics = [];
     a.bindSuggestionDiagnostics = undefined;
     a.languageVersion = n;
     a.fileName = e.normalizePath(t);
     a.languageVariant = T(r);
     a.isDeclarationFile = i;
     a.scriptKind = r;
     return a;
    }
    function M(e, t) {
     if (e) {
      y |= t;
     } else {
      y &= ~t;
     }
    }
    function L(e) {
     M(e, 2048);
    }
    function R(e) {
     M(e, 4096);
    }
    function B(e) {
     M(e, 8192);
    }
    function z(e) {
     M(e, 16384);
    }
    function j(e, t) {
     var n = e & y;
     if (n) {
      M(false, n);
      var r = t();
      M(true, n);
      return r;
     }
     return t();
    }
    function q(e, t) {
     var n = e & ~y;
     if (n) {
      M(true, n);
      var r = t();
      M(false, n);
      return r;
     }
     return t();
    }
    function U(e) {
     return j(2048, e);
    }
    function J(e) {
     return q(2048, e);
    }
    function K(e) {
     return q(4096, e);
    }
    function V(e) {
     return q(8192, e);
    }
    function W(e) {
     return q(16384, e);
    }
    function H(e) {
     return j(16384, e);
    }
    function G(e) {
     return q(4096 | 16384, e);
    }
    function $(e) {
     return (y & e) !== 0;
    }
    function X() {
     return $(4096);
    }
    function Q() {
     return $(2048);
    }
    function Y() {
     return $(8192);
    }
    function Z() {
     return $(16384);
    }
    function ee(e, t) {
     ne(n.getTokenPos(), n.getTextPos(), e, t);
    }
    function te(t, n, r, i) {
     var a = e.lastOrUndefined(f);
     if (!a || t !== a.start) {
      f.push(e.createFileDiagnostic(c, t, n, r, i));
     }
     S = true;
    }
    function ne(e, t, n, r) {
     te(e, t - e, n, r);
    }
    function re(e, t, n) {
     ne(e.pos, e.end, t, n);
    }
    function ie(e, t) {
     te(n.getTextPos(), t, e);
    }
    function ae() {
     return n.getStartPos();
    }
    function oe() {
     return p;
    }
    function se() {
     return p = n.scan();
    }
    function ce() {
     return p = n.reScanGreaterToken();
    }
    function ue() {
     return p = n.reScanSlashToken();
    }
    function le() {
     return p = n.reScanTemplateToken();
    }
    function fe() {
     return p = n.scanJsxIdentifier();
    }
    function de() {
     return p = n.scanJsxToken();
    }
    function pe() {
     return p = n.scanJsxAttributeValue();
    }
    function me(t, r) {
     var i = p;
     var a = f.length;
     var o = S;
     var s = y;
     var c = r ? n.lookAhead(t) : n.tryScan(t);
     e.Debug.assert(s === y);
     if (!c || r) {
      p = i;
      f.length = a;
      S = o;
     }
     return c;
    }
    function _e(e) {
     return me(e, true);
    }
    function ge(e) {
     return me(e, false);
    }
    function he() {
     if (oe() === 71) {
      return true;
     }
     if (oe() === 116 && X()) {
      return false;
     }
     if (oe() === 121 && Z()) {
      return false;
     }
     return oe() > 107;
    }
    function ve(t, n, r) {
     if (r === void 0) {
      r = true;
     }
     if (oe() === t) {
      if (r) {
       se();
      }
      return true;
     }
     if (n) {
      ee(n);
     } else {
      ee(e.Diagnostics._0_expected, e.tokenToString(t));
     }
     return false;
    }
    function ye(e) {
     if (oe() === e) {
      se();
      return true;
     }
     return false;
    }
    function be(e) {
     if (oe() === e) {
      return ke();
     }
     return undefined;
    }
    function xe(t, n, r) {
     return be(t) || Ne(t, false, n || e.Diagnostics._0_expected, r || e.tokenToString(t));
    }
    function ke() {
     var e = Ce(oe());
     se();
     return Ee(e);
    }
    function Se() {
     if (oe() === 25) {
      return true;
     }
     return oe() === 18 || oe() === 1 || n.hasPrecedingLineBreak();
    }
    function we() {
     if (Se()) {
      if (oe() === 25) {
       se();
      }
      return true;
     } else {
      return ve(25);
     }
    }
    function Ce(t, r) {
     _++;
     var s = r >= 0 ? r : n.getStartPos();
     return e.isNodeKind(t) || t === 0 ? new i(t, s, s) : t === 71 ? new o(t, s, s) : new a(t, s, s);
    }
    function De(e, t) {
     var r = Ce(e, t);
     if (n.getTokenFlags() & 2) {
      P(r);
     }
     return r;
    }
    function Te(e, t, r) {
     var i = e.length;
     var a = i >= 1 && i <= 4 ? e.slice() : e;
     a.pos = t;
     a.end = r === undefined ? n.getStartPos() : r;
     return a;
    }
    function Ee(e, t) {
     e.end = t === undefined ? n.getStartPos() : t;
     if (y) {
      e.flags |= y;
     }
     if (S) {
      S = false;
      e.flags |= 32768;
     }
     return e;
    }
    function Ne(t, r, i, a) {
     if (r) {
      te(n.getStartPos(), 0, i, a);
     } else if (i) {
      ee(i, a);
     }
     var o = Ce(t);
     if (t === 71) {
      o.escapedText = "";
     } else if (e.isLiteralKind(t) || e.isTemplateLiteralKind(t)) {
      o.text = "";
     }
     return Ee(o);
    }
    function Ae(e) {
     var t = g.get(e);
     if (t === undefined) {
      g.set(e, t = e);
     }
     return t;
    }
    function Fe(t, r) {
     h++;
     if (t) {
      var i = Ce(71);
      if (oe() !== 71) {
       i.originalKeywordKind = oe();
      }
      i.escapedText = e.escapeLeadingUnderscores(Ae(n.getTokenValue()));
      se();
      return Ee(i);
     }
     var a = oe() === 1;
     return Ne(71, a, r || e.Diagnostics.Identifier_expected);
    }
    function Pe(e) {
     return Fe(he(), e);
    }
    function Ie(t) {
     return Fe(e.tokenIsIdentifierOrKeyword(oe()), t);
    }
    function Oe() {
     return e.tokenIsIdentifierOrKeyword(oe()) || oe() === 9 || oe() === 8;
    }
    function Me(e) {
     if (oe() === 9 || oe() === 8) {
      var t = wt();
      t.text = Ae(t.text);
      return t;
     }
     if (e && oe() === 21) {
      return Re();
     }
     return Ie();
    }
    function Le() {
     return Me(true);
    }
    function Re() {
     var e = Ce(147);
     ve(21);
     e.expression = U(qn);
     ve(22);
     return Ee(e);
    }
    function Be(e) {
     return oe() === e && ge(je);
    }
    function ze() {
     se();
     if (n.hasPrecedingLineBreak()) {
      return false;
     }
     return Ue();
    }
    function je() {
     switch (oe()) {
     case 76:
      return se() === 83;

     case 84:
      se();
      if (oe() === 79) {
       return _e(Je);
      }
      return oe() !== 39 && oe() !== 118 && oe() !== 17 && Ue();

     case 79:
      return Je();

     case 115:
     case 125:
     case 136:
      se();
      return Ue();

     default:
      return ze();
     }
    }
    function qe() {
     return e.isModifierKind(oe()) && ge(je);
    }
    function Ue() {
     return oe() === 21 || oe() === 17 || oe() === 39 || oe() === 24 || Oe();
    }
    function Je() {
     se();
     return oe() === 75 || oe() === 89 || oe() === 109 || oe() === 117 && _e(yi) || oe() === 120 && _e(bi);
    }
    function Ke(t, n) {
     var r = rt(t);
     if (r) {
      return true;
     }
     switch (t) {
     case 0:
     case 1:
     case 3:
      return !(oe() === 25 && n) && wi();

     case 2:
      return oe() === 73 || oe() === 79;

     case 4:
      return _e(Zt);

     case 5:
      return _e(Xi) || oe() === 25 && !n;

     case 6:
      return oe() === 21 || Oe();

     case 12:
      return oe() === 21 || oe() === 39 || oe() === 24 || Oe();

     case 17:
      return Oe();

     case 9:
      return oe() === 21 || oe() === 24 || Oe();

     case 7:
      if (oe() === 17) {
       return _e(Ve);
      }
      if (!n) {
       return Bn() && !$e();
      } else {
       return he() && !$e();
      }

     case 8:
      return Ri();

     case 10:
      return oe() === 26 || oe() === 24 || Ri();

     case 18:
      return he();

     case 15:
      if (oe() === 26) {
       return true;
      }

     case 11:
      return oe() === 24 || zn();

     case 16:
      return Ut();

     case 19:
     case 20:
      return oe() === 26 || bn();

     case 21:
      return la();

     case 22:
      return e.tokenIsIdentifierOrKeyword(oe());

     case 13:
      return e.tokenIsIdentifierOrKeyword(oe()) || oe() === 17;

     case 14:
      return true;
     }
     return e.Debug.fail("Non-exhaustive case in 'isListElement'.");
    }
    function Ve() {
     e.Debug.assert(oe() === 17);
     if (se() === 18) {
      var t = se();
      return t === 26 || t === 17 || t === 85 || t === 108;
     }
     return true;
    }
    function We() {
     se();
     return he();
    }
    function He() {
     se();
     return e.tokenIsIdentifierOrKeyword(oe());
    }
    function Ge() {
     se();
     return e.tokenIsIdentifierOrKeywordOrGreaterThan(oe());
    }
    function $e() {
     if (oe() === 108 || oe() === 85) {
      return _e(Xe);
     }
     return false;
    }
    function Xe() {
     se();
     return zn();
    }
    function Qe() {
     se();
     return bn();
    }
    function Ye(e) {
     if (oe() === 1) {
      return true;
     }
     switch (e) {
     case 1:
     case 2:
     case 4:
     case 5:
     case 6:
     case 12:
     case 9:
     case 22:
      return oe() === 18;

     case 3:
      return oe() === 18 || oe() === 73 || oe() === 79;

     case 7:
      return oe() === 17 || oe() === 85 || oe() === 108;

     case 8:
      return Ze();

     case 18:
      return oe() === 29 || oe() === 19 || oe() === 17 || oe() === 85 || oe() === 108;

     case 11:
      return oe() === 20 || oe() === 25;

     case 15:
     case 20:
     case 10:
      return oe() === 22;

     case 16:
     case 17:
      return oe() === 20 || oe() === 22;

     case 19:
      return oe() !== 26;

     case 21:
      return oe() === 17 || oe() === 18;

     case 13:
      return oe() === 29 || oe() === 41;

     case 14:
      return oe() === 27 && _e(ka);

     default:
      return false;
     }
    }
    function Ze() {
     if (Se()) {
      return true;
     }
     if (ir(oe())) {
      return true;
     }
     if (oe() === 36) {
      return true;
     }
     return false;
    }
    function et() {
     for (var e = 0; e < 23; e++) {
      if (v & 1 << e) {
       if (Ke(e, true) || Ye(e)) {
        return true;
       }
      }
     }
     return false;
    }
    function tt(e, t) {
     var n = v;
     v |= 1 << e;
     var r = [];
     var i = ae();
     while (!Ye(e)) {
      if (Ke(e, false)) {
       var a = nt(e, t);
       r.push(a);
       continue;
      }
      if (pt(e)) {
       break;
      }
     }
     v = n;
     return Te(r, i);
    }
    function nt(e, t) {
     var n = rt(e);
     if (n) {
      return it(n);
     }
     return t();
    }
    function rt(t) {
     if (S) {
      return undefined;
     }
     if (!d) {
      return undefined;
     }
     var r = d.currentNode(n.getStartPos());
     if (e.nodeIsMissing(r)) {
      return undefined;
     }
     if (r.intersectsChange) {
      return undefined;
     }
     if (e.containsParseError(r)) {
      return undefined;
     }
     var i = r.flags & 12679168;
     if (i !== y) {
      return undefined;
     }
     if (!at(r, t)) {
      return undefined;
     }
     if (r.jsDocCache) {
      r.jsDocCache = undefined;
     }
     return r;
    }
    function it(e) {
     n.setTextPos(e.end);
     se();
     return e;
    }
    function at(e, t) {
     switch (t) {
     case 5:
      return ot(e);

     case 2:
      return st(e);

     case 0:
     case 1:
     case 3:
      return ct(e);

     case 6:
      return ut(e);

     case 4:
      return lt(e);

     case 8:
      return ft(e);

     case 16:
      return dt(e);

     case 17:
      return false;

     case 21:
     case 18:
     case 20:
     case 19:
     case 11:
     case 12:
     case 7:
     case 13:
     case 14:
     }
     return false;
    }
    function ot(e) {
     if (e) {
      switch (e.kind) {
      case 155:
      case 160:
      case 156:
      case 157:
      case 152:
      case 215:
       return true;

      case 154:
       var t = e;
       var n = t.name.kind === 71 && t.name.originalKeywordKind === 123;
       return !n;
      }
     }
     return false;
    }
    function st(e) {
     if (e) {
      switch (e.kind) {
      case 269:
      case 270:
       return true;
      }
     }
     return false;
    }
    function ct(e) {
     if (e) {
      switch (e.kind) {
      case 237:
      case 217:
      case 216:
      case 220:
      case 219:
      case 232:
      case 228:
      case 230:
      case 227:
      case 226:
      case 224:
      case 225:
      case 223:
      case 222:
      case 229:
      case 218:
      case 233:
      case 231:
      case 221:
      case 234:
      case 247:
      case 246:
      case 253:
      case 252:
      case 242:
      case 238:
      case 239:
      case 241:
      case 240:
       return true;
      }
     }
     return false;
    }
    function ut(e) {
     return e.kind === 276;
    }
    function lt(e) {
     if (e) {
      switch (e.kind) {
      case 159:
      case 153:
      case 160:
      case 151:
      case 158:
       return true;
      }
     }
     return false;
    }
    function ft(e) {
     if (e.kind !== 235) {
      return false;
     }
     var t = e;
     return t.initializer === undefined;
    }
    function dt(e) {
     if (e.kind !== 149) {
      return false;
     }
     var t = e;
     return t.initializer === undefined;
    }
    function pt(e) {
     ee(mt(e));
     if (et()) {
      return true;
     }
     se();
     return false;
    }
    function mt(t) {
     switch (t) {
     case 0:
      return e.Diagnostics.Declaration_or_statement_expected;

     case 1:
      return e.Diagnostics.Declaration_or_statement_expected;

     case 2:
      return e.Diagnostics.case_or_default_expected;

     case 3:
      return e.Diagnostics.Statement_expected;

     case 17:
     case 4:
      return e.Diagnostics.Property_or_signature_expected;

     case 5:
      return e.Diagnostics.Unexpected_token_A_constructor_method_accessor_or_property_was_expected;

     case 6:
      return e.Diagnostics.Enum_member_expected;

     case 7:
      return e.Diagnostics.Expression_expected;

     case 8:
      return e.Diagnostics.Variable_declaration_expected;

     case 9:
      return e.Diagnostics.Property_destructuring_pattern_expected;

     case 10:
      return e.Diagnostics.Array_element_destructuring_pattern_expected;

     case 11:
      return e.Diagnostics.Argument_expression_expected;

     case 12:
      return e.Diagnostics.Property_assignment_expected;

     case 15:
      return e.Diagnostics.Expression_or_comma_expected;

     case 16:
      return e.Diagnostics.Parameter_declaration_expected;

     case 18:
      return e.Diagnostics.Type_parameter_declaration_expected;

     case 19:
      return e.Diagnostics.Type_argument_expected;

     case 20:
      return e.Diagnostics.Type_expected;

     case 21:
      return e.Diagnostics.Unexpected_token_expected;

     case 22:
      return e.Diagnostics.Identifier_expected;

     case 13:
      return e.Diagnostics.Identifier_expected;

     case 14:
      return e.Diagnostics.Identifier_expected;

     default:
      return undefined;
     }
    }
    function _t(e, t, r) {
     var i = v;
     v |= 1 << e;
     var a = [];
     var o = ae();
     var s = -1;
     while (true) {
      if (Ke(e, false)) {
       var c = n.getStartPos();
       a.push(nt(e, t));
       s = n.getTokenPos();
       if (ye(26)) {
        continue;
       }
       s = -1;
       if (Ye(e)) {
        break;
       }
       ve(26);
       if (r && oe() === 25 && !n.hasPrecedingLineBreak()) {
        se();
       }
       if (c === n.getStartPos()) {
        se();
       }
       continue;
      }
      if (Ye(e)) {
       break;
      }
      if (pt(e)) {
       break;
      }
     }
     v = i;
     var u = Te(a, o);
     if (s >= 0) {
      u.hasTrailingComma = true;
     }
     return u;
    }
    function gt() {
     var e = Te([], ae());
     e.isMissingList = true;
     return e;
    }
    function ht(e) {
     return !!e.isMissingList;
    }
    function vt(e, t, n, r) {
     if (ve(n)) {
      var i = _t(e, t);
      ve(r);
      return i;
     }
     return gt();
    }
    function yt(e, t) {
     var r = e ? Ie(t) : Pe(t);
     var i = n.getStartPos();
     while (ye(23)) {
      if (oe() === 27) {
       r.jsdocDotPos = i;
       break;
      }
      i = n.getStartPos();
      r = bt(r, xt(e));
     }
     return r;
    }
    function bt(e, t) {
     var n = Ce(146, e.pos);
     n.left = e;
     n.right = t;
     return Ee(n);
    }
    function xt(t) {
     if (n.hasPrecedingLineBreak() && e.tokenIsIdentifierOrKeyword(oe())) {
      var r = _e(vi);
      if (r) {
       return Ne(71, true, e.Diagnostics.Identifier_expected);
      }
     }
     return t ? Ie() : Pe();
    }
    function kt() {
     var t = Ce(204);
     t.head = Ct();
     e.Debug.assert(t.head.kind === 14, "Template head has wrong token kind");
     var n = [];
     var r = ae();
     do {
      n.push(St());
     } while (e.last(n).literal.kind === 15);
     t.templateSpans = Te(n, r);
     return Ee(t);
    }
    function St() {
     var t = Ce(214);
     t.expression = U(qn);
     var n;
     if (oe() === 18) {
      le();
      n = Dt();
     } else {
      n = xe(16, e.Diagnostics._0_expected, e.tokenToString(18));
     }
     t.literal = n;
     return Ee(t);
    }
    function wt() {
     return Tt(oe());
    }
    function Ct() {
     var t = Tt(oe());
     e.Debug.assert(t.kind === 14, "Template head has wrong token kind");
     return t;
    }
    function Dt() {
     var t = Tt(oe());
     e.Debug.assert(t.kind === 15 || t.kind === 16, "Template fragment has wrong token kind");
     return t;
    }
    function Tt(e) {
     var t = Ce(e);
     var r = n.getTokenValue();
     t.text = r;
     if (n.hasExtendedUnicodeEscape()) {
      t.hasExtendedUnicodeEscape = true;
     }
     if (n.isUnterminated()) {
      t.isUnterminated = true;
     }
     if (t.kind === 8) {
      t.numericLiteralFlags = n.getTokenFlags() & 1008;
     }
     se();
     Ee(t);
     return t;
    }
    function Et() {
     var t = Ce(162);
     t.typeName = yt(true, e.Diagnostics.Type_expected);
     if (!n.hasPrecedingLineBreak() && oe() === 27) {
      t.typeArguments = vt(19, Mn, 27, 29);
     }
     return Ee(t);
    }
    function Nt(t) {
     switch (t.kind) {
     case 162:
      return e.nodeIsMissing(t.typeName);

     case 163:
     case 164:
      {
       var n = t, r = n.parameters, i = n.type;
       return ht(r) || Nt(i);
      }

     case 175:
      return Nt(t.type);

     default:
      return false;
     }
    }
    function At(e) {
     se();
     var t = Ce(161, e.pos);
     t.parameterName = e;
     t.type = Mn();
     return Ee(t);
    }
    function Ft() {
     var e = Ce(176);
     se();
     return Ee(e);
    }
    function Pt(e) {
     var t = Ce(282);
     if (e) {
      return Sn(286, t);
     } else {
      se();
     }
     return Ee(t);
    }
    function It() {
     var e = Ce(285);
     se();
     e.type = yn();
     return Ee(e);
    }
    function Ot() {
     var e = n.getStartPos();
     se();
     if (oe() === 26 || oe() === 18 || oe() === 20 || oe() === 29 || oe() === 58 || oe() === 49) {
      var t = Ce(283, e);
      return Ee(t);
     } else {
      var t = Ce(284, e);
      t.type = Mn();
      return Ee(t);
     }
    }
    function Mt() {
     if (_e(xa)) {
      var e = De(287);
      se();
      Kt(56, 4 | 32, e);
      return Ee(e);
     }
     var t = Ce(162);
     t.typeName = Ie();
     return Ee(t);
    }
    function Lt() {
     var e = Ce(149);
     if (oe() === 99 || oe() === 94) {
      e.name = Ie();
      ve(56);
     }
     e.type = Rt();
     return Ee(e);
    }
    function Rt() {
     var e = be(24);
     var t = Mn();
     if (e) {
      var n = Ce(288, e.pos);
      n.type = t;
      t = Ee(n);
     }
     if (oe() === 58) {
      return Sn(286, t);
     }
     return t;
    }
    function Bt() {
     var e = Ce(165);
     ve(103);
     e.exprName = yt(true);
     return Ee(e);
    }
    function zt() {
     var e = Ce(148);
     e.name = Pe();
     if (ye(85)) {
      if (bn() || !zn()) {
       e.constraint = Mn();
      } else {
       e.expression = _r();
      }
     }
     if (ye(58)) {
      e.default = Mn();
     }
     return Ee(e);
    }
    function jt() {
     if (oe() === 27) {
      return vt(18, zt, 27, 29);
     }
    }
    function qt() {
     if (ye(56)) {
      return Mn();
     }
     return undefined;
    }
    function Ut() {
     return oe() === 24 || Ri() || e.isModifierKind(oe()) || oe() === 57 || bn(true);
    }
    function Jt() {
     var t = De(149);
     if (oe() === 99) {
      t.name = Fe(true);
      t.type = qt();
      return Ee(t);
     }
     t.decorators = Qi();
     t.modifiers = Yi();
     t.dotDotDotToken = be(24);
     t.name = Bi();
     if (e.getFullWidth(t.name) === 0 && !e.hasModifiers(t) && e.isModifierKind(oe())) {
      se();
     }
     t.questionToken = be(55);
     t.type = qt();
     t.initializer = Un();
     return Ee(t);
    }
    function Kt(e, t, n) {
     if (!(t & 32)) {
      n.typeParameters = jt();
     }
     var r = Wt(n, t);
     if (Vt(e, !!(t & 4))) {
      n.type = In();
      if (Nt(n.type)) return false;
     }
     return r;
    }
    function Vt(t, n) {
     if (t === 36) {
      ve(t);
      return true;
     } else if (ye(56)) {
      return true;
     } else if (n && oe() === 36) {
      ee(e.Diagnostics._0_expected, e.tokenToString(56));
      se();
      return true;
     }
     return false;
    }
    function Wt(e, t) {
     if (!ve(19)) {
      e.parameters = gt();
      return false;
     }
     var n = X();
     var r = Z();
     R(!!(t & 1));
     z(!!(t & 2));
     e.parameters = _t(16, t & 32 ? Lt : Jt);
     R(n);
     z(r);
     return ve(20);
    }
    function Ht() {
     if (ye(26)) {
      return;
     }
     we();
    }
    function Gt(e) {
     var t = De(e);
     if (e === 159) {
      ve(94);
     }
     Kt(56, 4, t);
     Ht();
     return Ee(t);
    }
    function $t() {
     return oe() === 21 && _e(Xt);
    }
    function Xt() {
     se();
     if (oe() === 24 || oe() === 22) {
      return true;
     }
     if (e.isModifierKind(oe())) {
      se();
      if (he()) {
       return true;
      }
     } else if (!he()) {
      return false;
     } else {
      se();
     }
     if (oe() === 56 || oe() === 26) {
      return true;
     }
     if (oe() !== 55) {
      return false;
     }
     se();
     return oe() === 56 || oe() === 26 || oe() === 22;
    }
    function Qt(e) {
     e.kind = 160;
     e.parameters = vt(16, Jt, 21, 22);
     e.type = Rn();
     Ht();
     return Ee(e);
    }
    function Yt(e) {
     e.name = Le();
     e.questionToken = be(55);
     if (oe() === 19 || oe() === 27) {
      e.kind = 153;
      Kt(56, 4, e);
     } else {
      e.kind = 151;
      e.type = Rn();
      if (oe() === 58) {
       e.initializer = Un();
      }
     }
     Ht();
     return Ee(e);
    }
    function Zt() {
     if (oe() === 19 || oe() === 27) {
      return true;
     }
     var t = false;
     while (e.isModifierKind(oe())) {
      t = true;
      se();
     }
     if (oe() === 21) {
      return true;
     }
     if (Oe()) {
      t = true;
      se();
     }
     if (t) {
      return oe() === 19 || oe() === 27 || oe() === 55 || oe() === 56 || oe() === 26 || Se();
     }
     return false;
    }
    function en() {
     if (oe() === 19 || oe() === 27) {
      return Gt(158);
     }
     if (oe() === 94 && _e(tn)) {
      return Gt(159);
     }
     var e = De(0);
     e.modifiers = Yi();
     if ($t()) {
      return Qt(e);
     }
     return Yt(e);
    }
    function tn() {
     se();
     return oe() === 19 || oe() === 27;
    }
    function nn() {
     return se() === 23;
    }
    function rn() {
     switch (se()) {
     case 19:
     case 27:
     case 23:
      return true;
     }
     return false;
    }
    function an() {
     var e = Ce(166);
     e.members = on();
     return Ee(e);
    }
    function on() {
     var e;
     if (ve(17)) {
      e = tt(4, en);
      ve(18);
     } else {
      e = gt();
     }
     return e;
    }
    function sn() {
     se();
     if (oe() === 37 || oe() === 38) {
      return se() === 132;
     }
     if (oe() === 132) {
      se();
     }
     return oe() === 21 && We() && se() === 92;
    }
    function cn() {
     var e = Ce(148);
     e.name = Pe();
     ve(92);
     e.constraint = Mn();
     return Ee(e);
    }
    function un() {
     var e = Ce(179);
     ve(17);
     if (oe() === 132 || oe() === 37 || oe() === 38) {
      e.readonlyToken = ke();
      if (e.readonlyToken.kind !== 132) {
       xe(132);
      }
     }
     ve(21);
     e.typeParameter = cn();
     ve(22);
     if (oe() === 55 || oe() === 37 || oe() === 38) {
      e.questionToken = ke();
      if (e.questionToken.kind !== 55) {
       xe(55);
      }
     }
     e.type = Rn();
     we();
     ve(18);
     return Ee(e);
    }
    function ln() {
     var e = ae();
     if (ye(24)) {
      var t = Ce(170, e);
      t.type = Mn();
      return Ee(t);
     }
     var n = Mn();
     if (!(y & 2097152) && n.kind === 284 && n.pos === n.type.pos) {
      n.kind = 169;
     }
     return n;
    }
    function fn() {
     var e = Ce(168);
     e.elementTypes = vt(20, ln, 21, 22);
     return Ee(e);
    }
    function dn() {
     var e = Ce(175);
     ve(19);
     e.type = Mn();
     ve(20);
     return Ee(e);
    }
    function pn() {
     var e = ae();
     var t = ye(94) ? 164 : 163;
     var n = De(t, e);
     Kt(36, 4, n);
     return Ee(n);
    }
    function mn() {
     var e = ke();
     return oe() === 23 ? undefined : e;
    }
    function _n(e) {
     var t = Ce(180);
     var n;
     if (e) {
      n = Ce(200);
      n.operator = 38;
      se();
     }
     var r = oe() === 101 || oe() === 86 ? ke() : Tt(oe());
     if (e) {
      n.operand = r;
      Ee(n);
      r = n;
     }
     t.literal = r;
     return Ee(t);
    }
    function gn() {
     se();
     return oe() === 91;
    }
    function hn() {
     c.flags |= 524288;
     var t = Ce(181);
     if (ye(103)) {
      t.isTypeOf = true;
     }
     ve(91);
     ve(19);
     t.argument = Mn();
     ve(20);
     if (ye(23)) {
      t.qualifier = yt(true, e.Diagnostics.Type_expected);
     }
     t.typeArguments = ua();
     return Ee(t);
    }
    function vn() {
     return se() === 8;
    }
    function yn() {
     switch (oe()) {
     case 119:
     case 142:
     case 137:
     case 134:
     case 138:
     case 122:
     case 140:
     case 131:
     case 135:
      return ge(mn) || Et();

     case 39:
      return Pt(false);

     case 61:
      return Pt(true);

     case 55:
      return Ot();

     case 89:
      return Mt();

     case 51:
      return It();

     case 13:
     case 9:
     case 8:
     case 101:
     case 86:
      return _n();

     case 38:
      return _e(vn) ? _n(true) : Et();

     case 105:
     case 95:
      return ke();

     case 99:
      {
       var e = Ft();
       if (oe() === 127 && !n.hasPrecedingLineBreak()) {
        return At(e);
       } else {
        return e;
       }
      }

     case 103:
      return _e(gn) ? hn() : Bt();

     case 17:
      return _e(sn) ? un() : an();

     case 21:
      return fn();

     case 19:
      return dn();

     case 91:
      return hn();

     default:
      return Et();
     }
    }
    function bn(e) {
     switch (oe()) {
     case 119:
     case 142:
     case 137:
     case 134:
     case 122:
     case 138:
     case 141:
     case 105:
     case 140:
     case 95:
     case 99:
     case 103:
     case 131:
     case 17:
     case 21:
     case 27:
     case 49:
     case 48:
     case 94:
     case 9:
     case 8:
     case 101:
     case 86:
     case 135:
     case 39:
     case 55:
     case 51:
     case 24:
     case 126:
     case 91:
      return true;

     case 38:
      return !e && _e(vn);

     case 19:
      return !e && _e(xn);

     default:
      return he();
     }
    }
    function xn() {
     se();
     return oe() === 20 || Ut() || bn();
    }
    function kn() {
     var e = yn();
     while (!n.hasPrecedingLineBreak()) {
      switch (oe()) {
      case 51:
       e = Sn(285, e);
       break;

      case 55:
       if (!(y & 2097152) && _e(Qe)) {
        return e;
       }
       e = Sn(284, e);
       break;

      case 21:
       ve(21);
       if (bn()) {
        var t = Ce(178, e.pos);
        t.objectType = e;
        t.indexType = Mn();
        ve(22);
        e = Ee(t);
       } else {
        var t = Ce(167, e.pos);
        t.elementType = e;
        ve(22);
        e = Ee(t);
       }
       break;

      default:
       return e;
      }
     }
     return e;
    }
    function Sn(e, t) {
     se();
     var n = Ce(e, t.pos);
     n.type = t;
     return Ee(n);
    }
    function wn(e) {
     var t = Ce(177);
     ve(e);
     t.operator = e;
     t.type = Dn();
     return Ee(t);
    }
    function Cn() {
     var e = Ce(174);
     ve(126);
     var t = Ce(148);
     t.name = Pe();
     e.typeParameter = Ee(t);
     return Ee(e);
    }
    function Dn() {
     var e = oe();
     switch (e) {
     case 128:
     case 141:
      return wn(e);

     case 126:
      return Cn();
     }
     return kn();
    }
    function Tn(e, t, n) {
     ye(n);
     var r = t();
     if (oe() === n) {
      var i = [ r ];
      while (ye(n)) {
       i.push(t());
      }
      var a = Ce(e, r.pos);
      a.types = Te(i, r.pos);
      r = Ee(a);
     }
     return r;
    }
    function En() {
     return Tn(172, Dn, 48);
    }
    function Nn() {
     return Tn(171, En, 49);
    }
    function An() {
     if (oe() === 27) {
      return true;
     }
     return oe() === 19 && _e(Pn);
    }
    function Fn() {
     if (e.isModifierKind(oe())) {
      Yi();
     }
     if (he() || oe() === 99) {
      se();
      return true;
     }
     if (oe() === 21 || oe() === 17) {
      var t = f.length;
      Bi();
      return t === f.length;
     }
     return false;
    }
    function Pn() {
     se();
     if (oe() === 20 || oe() === 24) {
      return true;
     }
     if (Fn()) {
      if (oe() === 56 || oe() === 26 || oe() === 55 || oe() === 58) {
       return true;
      }
      if (oe() === 20) {
       se();
       if (oe() === 36) {
        return true;
       }
      }
     }
     return false;
    }
    function In() {
     var e = he() && ge(On);
     var t = Mn();
     if (e) {
      var n = Ce(161, e.pos);
      n.parameterName = e;
      n.type = t;
      return Ee(n);
     } else {
      return t;
     }
    }
    function On() {
     var e = Pe();
     if (oe() === 127 && !n.hasPrecedingLineBreak()) {
      se();
      return e;
     }
    }
    function Mn() {
     return j(20480, Ln);
    }
    function Ln(e) {
     if (An() || oe() === 94) {
      return pn();
     }
     var t = Nn();
     if (!e && !n.hasPrecedingLineBreak() && ye(85)) {
      var r = Ce(173, t.pos);
      r.checkType = t;
      r.extendsType = Ln(true);
      ve(55);
      r.trueType = Ln();
      ve(56);
      r.falseType = Ln();
      return Ee(r);
     }
     return t;
    }
    function Rn() {
     return ye(56) ? Mn() : undefined;
    }
    function Bn() {
     switch (oe()) {
     case 99:
     case 97:
     case 95:
     case 101:
     case 86:
     case 8:
     case 9:
     case 13:
     case 14:
     case 19:
     case 21:
     case 17:
     case 89:
     case 75:
     case 94:
     case 41:
     case 63:
     case 71:
      return true;

     case 91:
      return _e(rn);

     default:
      return he();
     }
    }
    function zn() {
     if (Bn()) {
      return true;
     }
     switch (oe()) {
     case 37:
     case 38:
     case 52:
     case 51:
     case 80:
     case 103:
     case 105:
     case 43:
     case 44:
     case 27:
     case 121:
     case 116:
      return true;

     default:
      if (or()) {
       return true;
      }
      return he();
     }
    }
    function jn() {
     return oe() !== 17 && oe() !== 89 && oe() !== 75 && oe() !== 57 && zn();
    }
    function qn() {
     var e = Y();
     if (e) {
      B(false);
     }
     var t = Jn();
     var n;
     while (n = be(26)) {
      t = sr(t, n, Jn());
     }
     if (e) {
      B(true);
     }
     return t;
    }
    function Un() {
     return ye(58) ? Jn() : undefined;
    }
    function Jn() {
     if (Kn()) {
      return Wn();
     }
     var t = Gn() || Yn();
     if (t) {
      return t;
     }
     var n = rr(0);
     if (n.kind === 71 && oe() === 36) {
      return Hn(n);
     }
     if (e.isLeftHandSideExpression(n) && e.isAssignmentOperator(ce())) {
      return sr(n, ke(), Jn());
     }
     return nr(n);
    }
    function Kn() {
     if (oe() === 116) {
      if (X()) {
       return true;
      }
      return _e(xi);
     }
     return false;
    }
    function Vn() {
     se();
     return !n.hasPrecedingLineBreak() && he();
    }
    function Wn() {
     var e = Ce(205);
     se();
     if (!n.hasPrecedingLineBreak() && (oe() === 39 || zn())) {
      e.asteriskToken = be(39);
      e.expression = Jn();
      return Ee(e);
     } else {
      return Ee(e);
     }
    }
    function Hn(t, n) {
     e.Debug.assert(oe() === 36, "parseSimpleArrowFunctionExpression should only have been called if we had a =>");
     var r;
     if (n) {
      r = Ce(195, n.pos);
      r.modifiers = n;
     } else {
      r = Ce(195, t.pos);
     }
     var i = Ce(149, t.pos);
     i.name = t;
     Ee(i);
     r.parameters = Te([ i ], i.pos, i.end);
     r.equalsGreaterThanToken = xe(36);
     r.body = tr(!!n);
     return P(Ee(r));
    }
    function Gn() {
     var t = $n();
     if (t === 0) {
      return undefined;
     }
     var n = t === 1 ? er(true) : ge(Qn);
     if (!n) {
      return undefined;
     }
     var r = e.hasModifier(n, 256);
     var i = oe();
     n.equalsGreaterThanToken = xe(36);
     n.body = i === 36 || i === 17 ? tr(r) : Pe();
     return Ee(n);
    }
    function $n() {
     if (oe() === 19 || oe() === 27 || oe() === 120) {
      return _e(Xn);
     }
     if (oe() === 36) {
      return 1;
     }
     return 0;
    }
    function Xn() {
     if (oe() === 120) {
      se();
      if (n.hasPrecedingLineBreak()) {
       return 0;
      }
      if (oe() !== 19 && oe() !== 27) {
       return 0;
      }
     }
     var t = oe();
     var r = se();
     if (t === 19) {
      if (r === 20) {
       var i = se();
       switch (i) {
       case 36:
       case 56:
       case 17:
        return 1;

       default:
        return 0;
       }
      }
      if (r === 21 || r === 17) {
       return 2;
      }
      if (r === 24) {
       return 1;
      }
      if (e.isModifierKind(r) && r !== 120 && _e(We)) {
       return 1;
      }
      if (!he()) {
       return 0;
      }
      switch (se()) {
      case 56:
       return 1;

      case 55:
       se();
       if (oe() === 56 || oe() === 26 || oe() === 58 || oe() === 20) {
        return 1;
       }
       return 0;

      case 26:
      case 58:
      case 20:
       return 2;
      }
      return 0;
     } else {
      e.Debug.assert(t === 27);
      if (!he()) {
       return 0;
      }
      if (c.languageVariant === 1) {
       var a = _e(function() {
        var e = se();
        if (e === 85) {
         var t = se();
         switch (t) {
         case 58:
         case 29:
          return false;

         default:
          return true;
         }
        } else if (e === 26) {
         return true;
        }
        return false;
       });
       if (a) {
        return 1;
       }
       return 0;
      }
      return 2;
     }
    }
    function Qn() {
     return er(false);
    }
    function Yn() {
     if (oe() === 120) {
      if (_e(Zn) === 1) {
       var e = Zi();
       var t = rr(0);
       return Hn(t, e);
      }
     }
     return undefined;
    }
    function Zn() {
     if (oe() === 120) {
      se();
      if (n.hasPrecedingLineBreak() || oe() === 36) {
       return 0;
      }
      var e = rr(0);
      if (!n.hasPrecedingLineBreak() && e.kind === 71 && oe() === 36) {
       return 1;
      }
     }
     return 0;
    }
    function er(t) {
     var n = De(195);
     n.modifiers = Zi();
     var r = e.hasModifier(n, 256) ? 2 : 0;
     if (!Kt(56, r, n) && !t) {
      return undefined;
     }
     if (!t && oe() !== 36 && oe() !== 17) {
      return undefined;
     }
     return n;
    }
    function tr(e) {
     if (oe() === 17) {
      return ei(e ? 2 : 0);
     }
     if (oe() !== 25 && oe() !== 89 && oe() !== 75 && wi() && !jn()) {
      return ei(16 | (e ? 2 : 0));
     }
     return e ? W(Jn) : H(Jn);
    }
    function nr(t) {
     var n = be(55);
     if (!n) {
      return t;
     }
     var i = Ce(203, t.pos);
     i.condition = t;
     i.questionToken = n;
     i.whenTrue = j(r, Jn);
     i.colonToken = xe(56);
     i.whenFalse = e.nodeIsPresent(i.colonToken) ? Jn() : Ne(71, false, e.Diagnostics._0_expected, e.tokenToString(56));
     return Ee(i);
    }
    function rr(e) {
     var t = _r();
     return ar(e, t);
    }
    function ir(e) {
     return e === 92 || e === 145;
    }
    function ar(t, r) {
     while (true) {
      ce();
      var i = e.getBinaryOperatorPrecedence(oe());
      var a = oe() === 40 ? i >= t : i > t;
      if (!a) {
       break;
      }
      if (oe() === 92 && Q()) {
       break;
      }
      if (oe() === 118) {
       if (n.hasPrecedingLineBreak()) {
        break;
       } else {
        se();
        r = cr(r, Mn());
       }
      } else {
       r = sr(r, ke(), rr(i));
      }
     }
     return r;
    }
    function or() {
     if (Q() && oe() === 92) {
      return false;
     }
     return e.getBinaryOperatorPrecedence(oe()) > 0;
    }
    function sr(e, t, n) {
     var r = Ce(202, e.pos);
     r.left = e;
     r.operatorToken = t;
     r.right = n;
     return Ee(r);
    }
    function cr(e, t) {
     var n = Ce(210, e.pos);
     n.expression = e;
     n.type = t;
     return Ee(n);
    }
    function ur() {
     var e = Ce(200);
     e.operator = oe();
     se();
     e.operand = gr();
     return Ee(e);
    }
    function lr() {
     var e = Ce(196);
     se();
     e.expression = gr();
     return Ee(e);
    }
    function fr() {
     var e = Ce(197);
     se();
     e.expression = gr();
     return Ee(e);
    }
    function dr() {
     var e = Ce(198);
     se();
     e.expression = gr();
     return Ee(e);
    }
    function pr() {
     if (oe() === 121) {
      if (Z()) {
       return true;
      }
      return _e(xi);
     }
     return false;
    }
    function mr() {
     var e = Ce(199);
     se();
     e.expression = gr();
     return Ee(e);
    }
    function _r() {
     if (hr()) {
      var t = vr();
      return oe() === 40 ? ar(e.getBinaryOperatorPrecedence(oe()), t) : t;
     }
     var n = oe();
     var r = gr();
     if (oe() === 40) {
      var i = e.skipTrivia(m, r.pos);
      var a = r.end;
      if (r.kind === 192) {
       ne(i, a, e.Diagnostics.A_type_assertion_expression_is_not_allowed_in_the_left_hand_side_of_an_exponentiation_expression_Consider_enclosing_the_expression_in_parentheses);
      } else {
       ne(i, a, e.Diagnostics.An_unary_expression_with_the_0_operator_is_not_allowed_in_the_left_hand_side_of_an_exponentiation_expression_Consider_enclosing_the_expression_in_parentheses, e.tokenToString(n));
      }
     }
     return r;
    }
    function gr() {
     switch (oe()) {
     case 37:
     case 38:
     case 52:
     case 51:
      return ur();

     case 80:
      return lr();

     case 103:
      return fr();

     case 105:
      return dr();

     case 27:
      return Or();

     case 121:
      if (pr()) {
       return mr();
      }

     default:
      return vr();
     }
    }
    function hr() {
     switch (oe()) {
     case 37:
     case 38:
     case 52:
     case 51:
     case 80:
     case 103:
     case 105:
     case 121:
      return false;

     case 27:
      if (c.languageVariant !== 1) {
       return false;
      }

     default:
      return true;
     }
    }
    function vr() {
     if (oe() === 43 || oe() === 44) {
      var t = Ce(200);
      t.operator = oe();
      se();
      t.operand = yr();
      return Ee(t);
     } else if (c.languageVariant === 1 && oe() === 27 && _e(Ge)) {
      return kr(true);
     }
     var r = yr();
     e.Debug.assert(e.isLeftHandSideExpression(r));
     if ((oe() === 43 || oe() === 44) && !n.hasPrecedingLineBreak()) {
      var t = Ce(201, r.pos);
      t.operand = r;
      t.operator = oe();
      se();
      return Ee(t);
     }
     return r;
    }
    function yr() {
     var e;
     if (oe() === 91) {
      if (_e(tn)) {
       c.flags |= 524288;
       e = ke();
      } else if (_e(nn)) {
       var t = n.getStartPos();
       se();
       se();
       var r = Ce(212, t);
       r.keywordToken = 91;
       r.name = Ie();
       e = Ee(r);
       c.flags |= 1048576;
      } else {
       e = br();
      }
     } else {
      e = oe() === 97 ? xr() : br();
     }
     return Br(e);
    }
    function br() {
     var e = Ur();
     return Mr(e);
    }
    function xr() {
     var t = ke();
     if (oe() === 19 || oe() === 23 || oe() === 21) {
      return t;
     }
     var n = Ce(187, t.pos);
     n.expression = t;
     xe(23, e.Diagnostics.super_must_be_followed_by_an_argument_list_or_member_access);
     n.name = xt(true);
     return Ee(n);
    }
    function kr(t) {
     var n = Tr(t);
     var r;
     if (n.kind === 260) {
      var i = Ce(258, n.pos);
      i.openingElement = n;
      i.children = Cr(i.openingElement);
      i.closingElement = Pr(t);
      if (!A(i.openingElement.tagName, i.closingElement.tagName)) {
       re(i.closingElement, e.Diagnostics.Expected_corresponding_JSX_closing_tag_for_0, e.getTextOfNodeFromSourceText(m, i.openingElement.tagName));
      }
      r = Ee(i);
     } else if (n.kind === 263) {
      var i = Ce(262, n.pos);
      i.openingFragment = n;
      i.children = Cr(i.openingFragment);
      i.closingFragment = Ir(t);
      r = Ee(i);
     } else {
      e.Debug.assert(n.kind === 259);
      r = n;
     }
     if (t && oe() === 27) {
      var a = ge(function() {
       return kr(true);
      });
      if (a) {
       ee(e.Diagnostics.JSX_expressions_must_have_one_parent_element);
       var o = Ce(202, r.pos);
       o.end = a.end;
       o.left = r;
       o.right = a;
       o.operatorToken = Ne(26, false, undefined);
       o.operatorToken.pos = o.operatorToken.end = o.right.pos;
       return o;
      }
     }
     return r;
    }
    function Sr() {
     var e = Ce(10);
     e.containsOnlyWhiteSpaces = p === 11;
     p = n.scanJsxToken();
     return Ee(e);
    }
    function wr(t, n) {
     switch (n) {
     case 1:
      if (e.isJsxOpeningFragment(t)) {
       re(t, e.Diagnostics.JSX_fragment_has_no_corresponding_closing_tag);
      } else {
       re(t.tagName, e.Diagnostics.JSX_element_0_has_no_corresponding_closing_tag, e.getTextOfNodeFromSourceText(m, t.tagName));
      }
      return undefined;

     case 28:
     case 7:
      return undefined;

     case 10:
     case 11:
      return Sr();

     case 17:
      return Nr(false);

     case 27:
      return kr(false);

     default:
      return e.Debug.assertNever(n);
     }
    }
    function Cr(e) {
     var t = [];
     var r = ae();
     var i = v;
     v |= 1 << 14;
     while (true) {
      var a = wr(e, p = n.reScanJsxToken());
      if (!a) break;
      t.push(a);
     }
     v = i;
     return Te(t, r);
    }
    function Dr() {
     var e = Ce(266);
     e.properties = tt(13, Ar);
     return Ee(e);
    }
    function Tr(e) {
     var t = n.getStartPos();
     ve(27);
     if (oe() === 29) {
      var r = Ce(263, t);
      de();
      return Ee(r);
     }
     var i = Er();
     var a = ua();
     var o = Dr();
     var s;
     if (oe() === 29) {
      s = Ce(260, t);
      de();
     } else {
      ve(41);
      if (e) {
       ve(29);
      } else {
       ve(29, undefined, false);
       de();
      }
      s = Ce(259, t);
     }
     s.tagName = i;
     s.typeArguments = a;
     s.attributes = o;
     return Ee(s);
    }
    function Er() {
     fe();
     var e = oe() === 99 ? ke() : Ie();
     while (ye(23)) {
      var t = Ce(187, e.pos);
      t.expression = e;
      t.name = xt(true);
      e = Ee(t);
     }
     return e;
    }
    function Nr(e) {
     var t = Ce(268);
     if (!ve(17)) {
      return undefined;
     }
     if (oe() !== 18) {
      t.dotDotDotToken = be(24);
      t.expression = Jn();
     }
     if (e) {
      ve(18);
     } else {
      ve(18, undefined, false);
      de();
     }
     return Ee(t);
    }
    function Ar() {
     if (oe() === 17) {
      return Fr();
     }
     fe();
     var e = Ce(265);
     e.name = Ie();
     if (oe() === 58) {
      switch (pe()) {
      case 9:
       e.initializer = wt();
       break;

      default:
       e.initializer = Nr(true);
       break;
      }
     }
     return Ee(e);
    }
    function Fr() {
     var e = Ce(267);
     ve(17);
     ve(24);
     e.expression = qn();
     ve(18);
     return Ee(e);
    }
    function Pr(e) {
     var t = Ce(261);
     ve(28);
     t.tagName = Er();
     if (e) {
      ve(29);
     } else {
      ve(29, undefined, false);
      de();
     }
     return Ee(t);
    }
    function Ir(t) {
     var n = Ce(264);
     ve(28);
     if (e.tokenIsIdentifierOrKeyword(oe())) {
      re(Er(), e.Diagnostics.Expected_corresponding_closing_tag_for_JSX_fragment);
     }
     if (t) {
      ve(29);
     } else {
      ve(29, undefined, false);
      de();
     }
     return Ee(n);
    }
    function Or() {
     var e = Ce(192);
     ve(27);
     e.type = Mn();
     ve(29);
     e.expression = gr();
     return Ee(e);
    }
    function Mr(t) {
     while (true) {
      var r = be(23);
      if (r) {
       var i = Ce(187, t.pos);
       i.expression = t;
       i.name = xt(true);
       t = Ee(i);
       continue;
      }
      if (oe() === 51 && !n.hasPrecedingLineBreak()) {
       se();
       var a = Ce(211, t.pos);
       a.expression = t;
       t = Ee(a);
       continue;
      }
      if (!Y() && ye(21)) {
       var o = Ce(188, t.pos);
       o.expression = t;
       if (oe() === 22) {
        o.argumentExpression = Ne(71, true, e.Diagnostics.An_element_access_expression_should_take_an_argument);
       } else {
        var s = U(qn);
        if (e.isStringOrNumericLiteral(s)) {
         s.text = Ae(s.text);
        }
        o.argumentExpression = s;
       }
       ve(22);
       t = Ee(o);
       continue;
      }
      if (Lr()) {
       t = Rr(t, undefined);
       continue;
      }
      return t;
     }
    }
    function Lr() {
     return oe() === 13 || oe() === 14;
    }
    function Rr(e, t) {
     var n = Ce(191, e.pos);
     n.tag = e;
     n.typeArguments = t;
     n.template = oe() === 13 ? wt() : kt();
     return Ee(n);
    }
    function Br(e) {
     while (true) {
      e = Mr(e);
      if (oe() === 27) {
       var t = ge(jr);
       if (!t) {
        return e;
       }
       if (Lr()) {
        e = Rr(e, t);
        continue;
       }
       var n = Ce(189, e.pos);
       n.expression = e;
       n.typeArguments = t;
       n.arguments = zr();
       e = Ee(n);
       continue;
      } else if (oe() === 19) {
       var n = Ce(189, e.pos);
       n.expression = e;
       n.arguments = zr();
       e = Ee(n);
       continue;
      }
      return e;
     }
    }
    function zr() {
     ve(19);
     var e = _t(11, Wr);
     ve(20);
     return e;
    }
    function jr() {
     if (!ye(27)) {
      return undefined;
     }
     var e = _t(19, Mn);
     if (!ve(29)) {
      return undefined;
     }
     return e && qr() ? e : undefined;
    }
    function qr() {
     switch (oe()) {
     case 19:
     case 13:
     case 14:
     case 23:
     case 20:
     case 22:
     case 56:
     case 25:
     case 55:
     case 32:
     case 34:
     case 33:
     case 35:
     case 53:
     case 54:
     case 50:
     case 48:
     case 49:
     case 18:
     case 1:
      return true;

     case 26:
     case 17:
     default:
      return false;
     }
    }
    function Ur() {
     switch (oe()) {
     case 8:
     case 9:
     case 13:
      return wt();

     case 99:
     case 97:
     case 95:
     case 101:
     case 86:
      return ke();

     case 19:
      return Jr();

     case 21:
      return Hr();

     case 17:
      return $r();

     case 120:
      if (!_e(bi)) {
       break;
      }
      return Xr();

     case 75:
      return ta();

     case 89:
      return Xr();

     case 94:
      return Yr();

     case 41:
     case 63:
      if (ue() === 12) {
       return wt();
      }
      break;

     case 14:
      return kt();
     }
     return Pe(e.Diagnostics.Expression_expected);
    }
    function Jr() {
     var e = De(193);
     ve(19);
     e.expression = U(qn);
     ve(20);
     return Ee(e);
    }
    function Kr() {
     var e = Ce(206);
     ve(24);
     e.expression = Jn();
     return Ee(e);
    }
    function Vr() {
     return oe() === 24 ? Kr() : oe() === 26 ? Ce(208) : Jn();
    }
    function Wr() {
     return j(r, Vr);
    }
    function Hr() {
     var e = Ce(185);
     ve(21);
     if (n.hasPrecedingLineBreak()) {
      e.multiLine = true;
     }
     e.elements = _t(15, Vr);
     ve(22);
     return Ee(e);
    }
    function Gr() {
     var e = De(0);
     if (be(24)) {
      e.kind = 275;
      e.expression = Jn();
      return Ee(e);
     }
     e.decorators = Qi();
     e.modifiers = Yi();
     if (Be(125)) {
      return $i(e, 156);
     }
     if (Be(136)) {
      return $i(e, 157);
     }
     var t = be(39);
     var n = he();
     e.name = Le();
     e.questionToken = be(55);
     if (t || oe() === 19 || oe() === 27) {
      return Wi(e, t);
     }
     var r = n && (oe() === 26 || oe() === 18 || oe() === 58);
     if (r) {
      e.kind = 274;
      var i = be(58);
      if (i) {
       e.equalsToken = i;
       e.objectAssignmentInitializer = U(Jn);
      }
     } else {
      e.kind = 273;
      ve(56);
      e.initializer = U(Jn);
     }
     return Ee(e);
    }
    function $r() {
     var e = Ce(186);
     ve(17);
     if (n.hasPrecedingLineBreak()) {
      e.multiLine = true;
     }
     e.properties = _t(12, Gr, true);
     ve(18);
     return Ee(e);
    }
    function Xr() {
     var t = Y();
     if (t) {
      B(false);
     }
     var n = De(194);
     n.modifiers = Yi();
     ve(89);
     n.asteriskToken = be(39);
     var r = n.asteriskToken ? 1 : 0;
     var i = e.hasModifier(n, 256) ? 2 : 0;
     n.name = r && i ? G(Qr) : r ? K(Qr) : i ? W(Qr) : Qr();
     Kt(56, r | i, n);
     n.body = ei(r | i);
     if (t) {
      B(true);
     }
     return Ee(n);
    }
    function Qr() {
     return he() ? Pe() : undefined;
    }
    function Yr() {
     var t = n.getStartPos();
     ve(94);
     if (ye(23)) {
      var r = Ce(212, t);
      r.keywordToken = 94;
      r.name = Ie();
      return Ee(r);
     }
     var i = Ur();
     var a;
     while (true) {
      i = Mr(i);
      a = ge(jr);
      if (Lr()) {
       e.Debug.assert(!!a, "Expected a type argument list; all plain tagged template starts should be consumed in 'parseMemberExpressionRest'");
       i = Rr(i, a);
       a = undefined;
      }
      break;
     }
     var o = Ce(190, t);
     o.expression = i;
     o.typeArguments = a;
     if (o.typeArguments || oe() === 19) {
      o.arguments = zr();
     }
     return Ee(o);
    }
    function Zr(e, t) {
     var r = Ce(216);
     if (ve(17, t) || e) {
      if (n.hasPrecedingLineBreak()) {
       r.multiLine = true;
      }
      r.statements = tt(1, Ti);
      ve(18);
     } else {
      r.statements = gt();
     }
     return Ee(r);
    }
    function ei(e, t) {
     var n = X();
     R(!!(e & 1));
     var r = Z();
     z(!!(e & 2));
     var i = Y();
     if (i) {
      B(false);
     }
     var a = Zr(!!(e & 16), t);
     if (i) {
      B(true);
     }
     R(n);
     z(r);
     return a;
    }
    function ti() {
     var e = Ce(218);
     ve(25);
     return Ee(e);
    }
    function ni() {
     var e = Ce(220);
     ve(90);
     ve(19);
     e.expression = U(qn);
     ve(20);
     e.thenStatement = Ti();
     e.elseStatement = ye(82) ? Ti() : undefined;
     return Ee(e);
    }
    function ri() {
     var e = Ce(221);
     ve(81);
     e.statement = Ti();
     ve(106);
     ve(19);
     e.expression = U(qn);
     ve(20);
     ye(25);
     return Ee(e);
    }
    function ii() {
     var e = Ce(222);
     ve(106);
     ve(19);
     e.expression = U(qn);
     ve(20);
     e.statement = Ti();
     return Ee(e);
    }
    function ai() {
     var e = ae();
     ve(88);
     var t = be(121);
     ve(19);
     var n;
     if (oe() !== 25) {
      if (oe() === 104 || oe() === 110 || oe() === 76) {
       n = qi(true);
      } else {
       n = J(qn);
      }
     }
     var r;
     if (t ? ve(145) : ye(145)) {
      var i = Ce(225, e);
      i.awaitModifier = t;
      i.initializer = n;
      i.expression = U(Jn);
      ve(20);
      r = i;
     } else if (ye(92)) {
      var a = Ce(224, e);
      a.initializer = n;
      a.expression = U(qn);
      ve(20);
      r = a;
     } else {
      var o = Ce(223, e);
      o.initializer = n;
      ve(25);
      if (oe() !== 25 && oe() !== 20) {
       o.condition = U(qn);
      }
      ve(25);
      if (oe() !== 20) {
       o.incrementor = U(qn);
      }
      ve(20);
      r = o;
     }
     r.statement = Ti();
     return Ee(r);
    }
    function oi(e) {
     var t = Ce(e);
     ve(e === 227 ? 72 : 77);
     if (!Se()) {
      t.label = Pe();
     }
     we();
     return Ee(t);
    }
    function si() {
     var e = Ce(228);
     ve(96);
     if (!Se()) {
      e.expression = U(qn);
     }
     we();
     return Ee(e);
    }
    function ci() {
     var e = Ce(229);
     ve(107);
     ve(19);
     e.expression = U(qn);
     ve(20);
     e.statement = q(8388608, Ti);
     return Ee(e);
    }
    function ui() {
     var e = Ce(269);
     ve(73);
     e.expression = U(qn);
     ve(56);
     e.statements = tt(3, Ti);
     return Ee(e);
    }
    function li() {
     var e = Ce(270);
     ve(79);
     ve(56);
     e.statements = tt(3, Ti);
     return Ee(e);
    }
    function fi() {
     return oe() === 73 ? ui() : li();
    }
    function di() {
     var e = Ce(230);
     ve(98);
     ve(19);
     e.expression = U(qn);
     ve(20);
     var t = Ce(244);
     ve(17);
     t.clauses = tt(2, fi);
     ve(18);
     e.caseBlock = Ee(t);
     return Ee(e);
    }
    function pi() {
     var e = Ce(232);
     ve(100);
     e.expression = n.hasPrecedingLineBreak() ? undefined : U(qn);
     we();
     return Ee(e);
    }
    function mi() {
     var e = Ce(233);
     ve(102);
     e.tryBlock = Zr(false);
     e.catchClause = oe() === 74 ? _i() : undefined;
     if (!e.catchClause || oe() === 87) {
      ve(87);
      e.finallyBlock = Zr(false);
     }
     return Ee(e);
    }
    function _i() {
     var e = Ce(272);
     ve(74);
     if (ye(19)) {
      e.variableDeclaration = ji();
      ve(20);
     } else {
      e.variableDeclaration = undefined;
     }
     e.block = Zr(false);
     return Ee(e);
    }
    function gi() {
     var e = Ce(234);
     ve(78);
     we();
     return Ee(e);
    }
    function hi() {
     var e = De(0);
     var t = U(qn);
     if (t.kind === 71 && ye(56)) {
      e.kind = 231;
      e.label = t;
      e.statement = Ti();
     } else {
      e.kind = 219;
      e.expression = t;
      we();
     }
     return Ee(e);
    }
    function vi() {
     se();
     return e.tokenIsIdentifierOrKeyword(oe()) && !n.hasPrecedingLineBreak();
    }
    function yi() {
     se();
     return oe() === 75 && !n.hasPrecedingLineBreak();
    }
    function bi() {
     se();
     return oe() === 89 && !n.hasPrecedingLineBreak();
    }
    function xi() {
     se();
     return (e.tokenIsIdentifierOrKeyword(oe()) || oe() === 8 || oe() === 9) && !n.hasPrecedingLineBreak();
    }
    function ki() {
     while (true) {
      switch (oe()) {
      case 104:
      case 110:
      case 76:
      case 89:
      case 75:
      case 83:
       return true;

      case 109:
      case 139:
       return Vn();

      case 129:
      case 130:
       return Fi();

      case 117:
      case 120:
      case 124:
      case 112:
      case 113:
      case 114:
      case 132:
       se();
       if (n.hasPrecedingLineBreak()) {
        return false;
       }
       continue;

      case 144:
       se();
       return oe() === 17 || oe() === 71 || oe() === 84;

      case 91:
       se();
       return oe() === 9 || oe() === 39 || oe() === 17 || e.tokenIsIdentifierOrKeyword(oe());

      case 84:
       se();
       if (oe() === 58 || oe() === 39 || oe() === 17 || oe() === 79 || oe() === 118) {
        return true;
       }
       continue;

      case 115:
       se();
       continue;

      default:
       return false;
      }
     }
    }
    function Si() {
     return _e(ki);
    }
    function wi() {
     switch (oe()) {
     case 57:
     case 25:
     case 17:
     case 104:
     case 110:
     case 89:
     case 75:
     case 83:
     case 90:
     case 81:
     case 106:
     case 88:
     case 77:
     case 72:
     case 96:
     case 107:
     case 98:
     case 100:
     case 102:
     case 78:
     case 74:
     case 87:
      return true;

     case 91:
      return Si() || _e(rn);

     case 76:
     case 84:
      return Si();

     case 120:
     case 124:
     case 109:
     case 129:
     case 130:
     case 139:
     case 144:
      return true;

     case 114:
     case 112:
     case 113:
     case 115:
     case 132:
      return Si() || !_e(vi);

     default:
      return zn();
     }
    }
    function Ci() {
     se();
     return he() || oe() === 17 || oe() === 21;
    }
    function Di() {
     return _e(Ci);
    }
    function Ti() {
     switch (oe()) {
     case 25:
      return ti();

     case 17:
      return Zr(false);

     case 104:
      return Ji(De(235));

     case 110:
      if (Di()) {
       return Ji(De(235));
      }
      break;

     case 89:
      return Ki(De(237));

     case 75:
      return na(De(238));

     case 90:
      return ni();

     case 81:
      return ri();

     case 106:
      return ii();

     case 88:
      return ai();

     case 77:
      return oi(226);

     case 72:
      return oi(227);

     case 96:
      return si();

     case 107:
      return ci();

     case 98:
      return di();

     case 100:
      return pi();

     case 102:
     case 74:
     case 87:
      return mi();

     case 78:
      return gi();

     case 57:
      return Ni();

     case 120:
     case 109:
     case 139:
     case 129:
     case 130:
     case 124:
     case 76:
     case 83:
     case 84:
     case 91:
     case 112:
     case 113:
     case 114:
     case 117:
     case 115:
     case 132:
     case 144:
      if (Si()) {
       return Ni();
      }
      break;
     }
     return hi();
    }
    function Ei(e) {
     return e.kind === 124;
    }
    function Ni() {
     var t = De(0);
     t.decorators = Qi();
     t.modifiers = Yi();
     if (e.some(t.modifiers, Ei)) {
      for (var n = 0, r = t.modifiers; n < r.length; n++) {
       var i = r[n];
       i.flags |= 4194304;
      }
      return q(4194304, function() {
       return Ai(t);
      });
     } else {
      return Ai(t);
     }
    }
    function Ai(t) {
     switch (oe()) {
     case 104:
     case 110:
     case 76:
      return Ji(t);

     case 89:
      return Ki(t);

     case 75:
      return na(t);

     case 109:
      return da(t);

     case 139:
      return pa(t);

     case 83:
      return _a(t);

     case 144:
     case 129:
     case 130:
      return ya(t);

     case 91:
      return wa(t);

     case 84:
      se();
      switch (oe()) {
      case 79:
      case 58:
       return La(t);

      case 118:
       return Sa(t);

      default:
       return Ma(t);
      }

     default:
      if (t.decorators || t.modifiers) {
       var n = Ne(256, true, e.Diagnostics.Declaration_expected);
       n.pos = t.pos;
       n.decorators = t.decorators;
       n.modifiers = t.modifiers;
       return Ee(n);
      }
      return undefined;
     }
    }
    function Fi() {
     se();
     return !n.hasPrecedingLineBreak() && (he() || oe() === 9);
    }
    function Pi(e, t) {
     if (oe() !== 17 && Se()) {
      we();
      return;
     }
     return ei(e, t);
    }
    function Ii() {
     if (oe() === 26) {
      return Ce(208);
     }
     var e = Ce(184);
     e.dotDotDotToken = be(24);
     e.name = Bi();
     e.initializer = Un();
     return Ee(e);
    }
    function Oi() {
     var e = Ce(184);
     e.dotDotDotToken = be(24);
     var t = he();
     var n = Le();
     if (t && oe() !== 56) {
      e.name = n;
     } else {
      ve(56);
      e.propertyName = n;
      e.name = Bi();
     }
     e.initializer = Un();
     return Ee(e);
    }
    function Mi() {
     var e = Ce(182);
     ve(17);
     e.elements = _t(9, Oi);
     ve(18);
     return Ee(e);
    }
    function Li() {
     var e = Ce(183);
     ve(21);
     e.elements = _t(10, Ii);
     ve(22);
     return Ee(e);
    }
    function Ri() {
     return oe() === 17 || oe() === 21 || he();
    }
    function Bi() {
     if (oe() === 21) {
      return Li();
     }
     if (oe() === 17) {
      return Mi();
     }
     return Pe();
    }
    function zi() {
     return ji(true);
    }
    function ji(e) {
     var t = Ce(235);
     t.name = Bi();
     if (e && t.name.kind === 71 && oe() === 51 && !n.hasPrecedingLineBreak()) {
      t.exclamationToken = ke();
     }
     t.type = Rn();
     if (!ir(oe())) {
      t.initializer = Un();
     }
     return Ee(t);
    }
    function qi(t) {
     var n = Ce(236);
     switch (oe()) {
     case 104:
      break;

     case 110:
      n.flags |= 1;
      break;

     case 76:
      n.flags |= 2;
      break;

     default:
      e.Debug.fail();
     }
     se();
     if (oe() === 145 && _e(Ui)) {
      n.declarations = gt();
     } else {
      var r = Q();
      L(t);
      n.declarations = _t(8, t ? ji : zi);
      L(r);
     }
     return Ee(n);
    }
    function Ui() {
     return We() && se() === 20;
    }
    function Ji(e) {
     e.kind = 217;
     e.declarationList = qi(false);
     we();
     return Ee(e);
    }
    function Ki(t) {
     t.kind = 237;
     ve(89);
     t.asteriskToken = be(39);
     t.name = e.hasModifier(t, 512) ? Qr() : Pe();
     var n = t.asteriskToken ? 1 : 0;
     var r = e.hasModifier(t, 256) ? 2 : 0;
     Kt(56, n | r, t);
     t.body = Pi(n | r, e.Diagnostics.or_expected);
     return Ee(t);
    }
    function Vi(t) {
     t.kind = 155;
     ve(123);
     Kt(56, 0, t);
     t.body = Pi(0, e.Diagnostics.or_expected);
     return Ee(t);
    }
    function Wi(t, n, r) {
     t.kind = 154;
     t.asteriskToken = n;
     var i = n ? 1 : 0;
     var a = e.hasModifier(t, 256) ? 2 : 0;
     Kt(56, i | a, t);
     t.body = Pi(i | a, r);
     return Ee(t);
    }
    function Hi(t) {
     t.kind = 152;
     if (!t.questionToken && oe() === 51 && !n.hasPrecedingLineBreak()) {
      t.exclamationToken = ke();
     }
     t.type = Rn();
     t.initializer = e.hasModifier(t, 32) ? U(Un) : j(4096 | 2048, Un);
     we();
     return Ee(t);
    }
    function Gi(t) {
     var n = be(39);
     t.name = Le();
     t.questionToken = be(55);
     if (n || oe() === 19 || oe() === 27) {
      return Wi(t, n, e.Diagnostics.or_expected);
     }
     return Hi(t);
    }
    function $i(e, t) {
     e.kind = t;
     e.name = Le();
     Kt(56, 0, e);
     e.body = Pi(0);
     return Ee(e);
    }
    function Xi() {
     var t;
     if (oe() === 57) {
      return true;
     }
     while (e.isModifierKind(oe())) {
      t = oe();
      if (e.isClassMemberModifier(t)) {
       return true;
      }
      se();
     }
     if (oe() === 39) {
      return true;
     }
     if (Oe()) {
      t = oe();
      se();
     }
     if (oe() === 21) {
      return true;
     }
     if (t !== undefined) {
      if (!e.isKeyword(t) || t === 136 || t === 125) {
       return true;
      }
      switch (oe()) {
      case 19:
      case 27:
      case 51:
      case 56:
      case 58:
      case 55:
       return true;

      default:
       return Se();
      }
     }
     return false;
    }
    function Qi() {
     var e;
     var t = ae();
     while (true) {
      var n = ae();
      if (!ye(57)) {
       break;
      }
      var r = Ce(150, n);
      r.expression = V(yr);
      Ee(r);
      (e || (e = [])).push(r);
     }
     return e && Te(e, t);
    }
    function Yi(e) {
     var t;
     var r = ae();
     while (true) {
      var i = n.getStartPos();
      var a = oe();
      if (oe() === 76 && e) {
       if (!ge(ze)) {
        break;
       }
      } else {
       if (!qe()) {
        break;
       }
      }
      var o = Ee(Ce(a, i));
      (t || (t = [])).push(o);
     }
     return t && Te(t, r);
    }
    function Zi() {
     var e;
     if (oe() === 120) {
      var t = n.getStartPos();
      var r = oe();
      se();
      var i = Ee(Ce(r, t));
      e = Te([ i ], t);
     }
     return e;
    }
    function ea() {
     if (oe() === 25) {
      var t = Ce(215);
      se();
      return Ee(t);
     }
     var n = De(0);
     n.decorators = Qi();
     n.modifiers = Yi(true);
     if (Be(125)) {
      return $i(n, 156);
     }
     if (Be(136)) {
      return $i(n, 157);
     }
     if (oe() === 123) {
      return Vi(n);
     }
     if ($t()) {
      return Qt(n);
     }
     if (e.tokenIsIdentifierOrKeyword(oe()) || oe() === 9 || oe() === 8 || oe() === 39 || oe() === 21) {
      return Gi(n);
     }
     if (n.decorators || n.modifiers) {
      n.name = Ne(71, true, e.Diagnostics.Declaration_expected);
      return Hi(n);
     }
     return e.Debug.fail("Should not have attempted to parse class member declaration.");
    }
    function ta() {
     return ra(De(0), 207);
    }
    function na(e) {
     return ra(e, 238);
    }
    function ra(e, t) {
     e.kind = t;
     ve(75);
     e.name = ia();
     e.typeParameters = jt();
     e.heritageClauses = oa();
     if (ve(17)) {
      e.members = fa();
      ve(18);
     } else {
      e.members = gt();
     }
     return Ee(e);
    }
    function ia() {
     return he() && !aa() ? Pe() : undefined;
    }
    function aa() {
     return oe() === 108 && _e(He);
    }
    function oa() {
     if (la()) {
      return tt(21, sa);
     }
     return undefined;
    }
    function sa() {
     var t = oe();
     e.Debug.assert(t === 85 || t === 108);
     var n = Ce(271);
     n.token = t;
     se();
     n.types = _t(7, ca);
     return Ee(n);
    }
    function ca() {
     var e = Ce(209);
     e.expression = yr();
     e.typeArguments = ua();
     return Ee(e);
    }
    function ua() {
     return oe() === 27 ? vt(19, Mn, 27, 29) : undefined;
    }
    function la() {
     return oe() === 85 || oe() === 108;
    }
    function fa() {
     return tt(5, ea);
    }
    function da(e) {
     e.kind = 239;
     ve(109);
     e.name = Pe();
     e.typeParameters = jt();
     e.heritageClauses = oa();
     e.members = on();
     return Ee(e);
    }
    function pa(e) {
     e.kind = 240;
     ve(139);
     e.name = Pe();
     e.typeParameters = jt();
     ve(58);
     e.type = Mn();
     we();
     return Ee(e);
    }
    function ma() {
     var e = De(276);
     e.name = Le();
     e.initializer = U(Un);
     return Ee(e);
    }
    function _a(e) {
     e.kind = 241;
     ve(83);
     e.name = Pe();
     if (ve(17)) {
      e.members = _t(6, ma);
      ve(18);
     } else {
      e.members = gt();
     }
     return Ee(e);
    }
    function ga() {
     var e = Ce(243);
     if (ve(17)) {
      e.statements = tt(1, Ti);
      ve(18);
     } else {
      e.statements = gt();
     }
     return Ee(e);
    }
    function ha(e, t) {
     e.kind = 242;
     var n = t & 16;
     e.flags |= t;
     e.name = Pe();
     e.body = ye(23) ? ha(Ce(0), 4 | n) : ga();
     return Ee(e);
    }
    function va(e) {
     e.kind = 242;
     if (oe() === 144) {
      e.name = Pe();
      e.flags |= 512;
     } else {
      e.name = wt();
      e.name.text = Ae(e.name.text);
     }
     if (oe() === 17) {
      e.body = ga();
     } else {
      we();
     }
     return Ee(e);
    }
    function ya(e) {
     var t = 0;
     if (oe() === 144) {
      return va(e);
     } else if (ye(130)) {
      t |= 16;
     } else {
      ve(129);
      if (oe() === 9) {
       return va(e);
      }
     }
     return ha(e, t);
    }
    function ba() {
     return oe() === 133 && _e(xa);
    }
    function xa() {
     return se() === 19;
    }
    function ka() {
     return se() === 41;
    }
    function Sa(e) {
     e.kind = 245;
     ve(118);
     ve(130);
     e.name = Pe();
     we();
     return Ee(e);
    }
    function wa(e) {
     ve(91);
     var t = n.getStartPos();
     var r;
     if (he()) {
      r = Pe();
      if (oe() !== 26 && oe() !== 143) {
       return Ca(e, r);
      }
     }
     e.kind = 247;
     if (r || oe() === 39 || oe() === 17) {
      e.importClause = Da(r, t);
      ve(143);
     }
     e.moduleSpecifier = Na();
     we();
     return Ee(e);
    }
    function Ca(e, t) {
     e.kind = 246;
     e.name = t;
     ve(58);
     e.moduleReference = Ta();
     we();
     return Ee(e);
    }
    function Da(e, t) {
     var n = Ce(248, t);
     if (e) {
      n.name = e;
     }
     if (!n.name || ye(26)) {
      n.namedBindings = oe() === 39 ? Aa() : Fa(250);
     }
     return Ee(n);
    }
    function Ta() {
     return ba() ? Ea() : yt(false);
    }
    function Ea() {
     var e = Ce(257);
     ve(133);
     ve(19);
     e.expression = Na();
     ve(20);
     return Ee(e);
    }
    function Na() {
     if (oe() === 9) {
      var e = wt();
      e.text = Ae(e.text);
      return e;
     } else {
      return qn();
     }
    }
    function Aa() {
     var e = Ce(249);
     ve(39);
     ve(118);
     e.name = Pe();
     return Ee(e);
    }
    function Fa(e) {
     var t = Ce(e);
     t.elements = vt(22, e === 250 ? Ia : Pa, 17, 18);
     return Ee(t);
    }
    function Pa() {
     return Oa(255);
    }
    function Ia() {
     return Oa(251);
    }
    function Oa(t) {
     var r = Ce(t);
     var i = e.isKeyword(oe()) && !he();
     var a = n.getTokenPos();
     var o = n.getTextPos();
     var s = Ie();
     if (oe() === 118) {
      r.propertyName = s;
      ve(118);
      i = e.isKeyword(oe()) && !he();
      a = n.getTokenPos();
      o = n.getTextPos();
      r.name = Ie();
     } else {
      r.name = s;
     }
     if (t === 251 && i) {
      ne(a, o, e.Diagnostics.Identifier_expected);
     }
     return Ee(r);
    }
    function Ma(e) {
     e.kind = 253;
     if (ye(39)) {
      ve(143);
      e.moduleSpecifier = Na();
     } else {
      e.exportClause = Fa(254);
      if (oe() === 143 || oe() === 9 && !n.hasPrecedingLineBreak()) {
       ve(143);
       e.moduleSpecifier = Na();
      }
     }
     we();
     return Ee(e);
    }
    function La(e) {
     e.kind = 252;
     if (ye(58)) {
      e.isExportEquals = true;
     } else {
      ve(79);
     }
     e.expression = Jn();
     we();
     return Ee(e);
    }
    function Ra(t) {
     t.externalModuleIndicator = e.forEach(t.statements, Ba) || za(t);
    }
    function Ba(t) {
     return e.hasModifier(t, 1) || t.kind === 246 && t.moduleReference.kind === 257 || t.kind === 247 || t.kind === 252 || t.kind === 253 ? t : undefined;
    }
    function za(e) {
     return e.flags & 1048576 ? ja(e) : undefined;
    }
    function ja(e) {
     return qa(e) ? e : l(e, ja);
    }
    function qa(t) {
     return e.isMetaProperty(t) && t.keywordToken === 91 && t.name.escapedText === "meta";
    }
    var Ua;
    (function(e) {
     e[e["SourceElements"] = 0] = "SourceElements";
     e[e["BlockStatements"] = 1] = "BlockStatements";
     e[e["SwitchClauses"] = 2] = "SwitchClauses";
     e[e["SwitchClauseStatements"] = 3] = "SwitchClauseStatements";
     e[e["TypeMembers"] = 4] = "TypeMembers";
     e[e["ClassMembers"] = 5] = "ClassMembers";
     e[e["EnumMembers"] = 6] = "EnumMembers";
     e[e["HeritageClauseElement"] = 7] = "HeritageClauseElement";
     e[e["VariableDeclarations"] = 8] = "VariableDeclarations";
     e[e["ObjectBindingElements"] = 9] = "ObjectBindingElements";
     e[e["ArrayBindingElements"] = 10] = "ArrayBindingElements";
     e[e["ArgumentExpressions"] = 11] = "ArgumentExpressions";
     e[e["ObjectLiteralMembers"] = 12] = "ObjectLiteralMembers";
     e[e["JsxAttributes"] = 13] = "JsxAttributes";
     e[e["JsxChildren"] = 14] = "JsxChildren";
     e[e["ArrayLiteralMembers"] = 15] = "ArrayLiteralMembers";
     e[e["Parameters"] = 16] = "Parameters";
     e[e["RestProperties"] = 17] = "RestProperties";
     e[e["TypeParameters"] = 18] = "TypeParameters";
     e[e["TypeArguments"] = 19] = "TypeArguments";
     e[e["TupleElementTypes"] = 20] = "TupleElementTypes";
     e[e["HeritageClauses"] = 21] = "HeritageClauses";
     e[e["ImportOrExportSpecifiers"] = 22] = "ImportOrExportSpecifiers";
     e[e["Count"] = 23] = "Count";
    })(Ua || (Ua = {}));
    var Ja;
    (function(e) {
     e[e["False"] = 0] = "False";
     e[e["True"] = 1] = "True";
     e[e["Unknown"] = 2] = "Unknown";
    })(Ja || (Ja = {}));
    var Ka;
    (function(t) {
     function r(e, t, r) {
      E(e, 6, undefined, 1);
      c = O("file.js", 6, 1, false);
      n.setText(e, t, r);
      p = n.scan();
      var a = i();
      var o = f;
      N();
      return a ? {
       jsDocTypeExpression: a,
       diagnostics: o
      } : undefined;
     }
     t.parseJSDocTypeExpressionForTests = r;
     function i(e) {
      var t = Ce(281, n.getTokenPos());
      var r = (e ? ye : ve)(17);
      t.type = q(2097152, Rt);
      if (!e || r) {
       ve(18);
      }
      I(t);
      return Ee(t);
     }
     t.parseJSDocTypeExpression = i;
     function a(e, t, n) {
      E(e, 6, undefined, 1);
      c = {
       languageVariant: 0,
       text: e
      };
      var r = d(t, n);
      var i = f;
      N();
      return r ? {
       jsDoc: r,
       diagnostics: i
      } : undefined;
     }
     t.parseIsolatedJSDocComment = a;
     function o(e, t, n) {
      var r;
      var i = p;
      var a = f.length;
      var o = S;
      var s = d(t, n);
      if (s) {
       s.parent = e;
      }
      if (y & 65536) {
       if (!c.jsDocDiagnostics) {
        c.jsDocDiagnostics = [];
       }
       (r = c.jsDocDiagnostics).push.apply(r, f);
      }
      p = i;
      f.length = a;
      S = o;
      return s;
     }
     t.parseJSDocComment = o;
     var s;
     (function(e) {
      e[e["BeginningOfLine"] = 0] = "BeginningOfLine";
      e[e["SawAsterisk"] = 1] = "SawAsterisk";
      e[e["SavingComments"] = 2] = "SavingComments";
     })(s || (s = {}));
     var l;
     (function(e) {
      e[e["Property"] = 1] = "Property";
      e[e["Parameter"] = 2] = "Parameter";
      e[e["CallbackParameter"] = 4] = "CallbackParameter";
     })(l || (l = {}));
     function d(t, r) {
      if (t === void 0) {
       t = 0;
      }
      var a = m;
      var o = r === undefined ? a.length : t + r;
      r = o - t;
      e.Debug.assert(t >= 0);
      e.Debug.assert(t <= o);
      e.Debug.assert(o <= a.length);
      if (!u(a, t)) {
       return undefined;
      }
      var s;
      var c;
      var l;
      var f = [];
      return n.scanRange(t + 3, r - 5, function() {
       var e = 1;
       var r;
       var i = t - Math.max(a.lastIndexOf("\n", t), 0) + 4;
       function o(e) {
        if (!r) {
         r = i;
        }
        f.push(e);
        i += e.length;
       }
       K();
       while (V(5)) ;
       if (V(4)) {
        e = 0;
        i = 0;
       }
       e: while (true) {
        switch (oe()) {
        case 57:
         if (e === 0 || e === 1) {
          _(f);
          k(y(i));
          e = 0;
          r = undefined;
          i++;
         } else {
          o(n.getTokenText());
         }
         break;

        case 4:
         f.push(n.getTokenText());
         e = 0;
         i = 0;
         break;

        case 39:
         var s = n.getTokenText();
         if (e === 1 || e === 2) {
          e = 2;
          o(s);
         } else {
          e = 1;
          i += s.length;
         }
         break;

        case 71:
         o(n.getTokenText());
         e = 2;
         break;

        case 5:
         var c = n.getTokenText();
         if (e === 2) {
          f.push(c);
         } else if (r !== undefined && i + c.length > r) {
          f.push(c.slice(r - i - 1));
         }
         i += c.length;
         break;

        case 1:
         break e;

        default:
         e = 2;
         o(n.getTokenText());
         break;
        }
        K();
       }
       d(f);
       _(f);
       return g();
      });
      function d(e) {
       while (e.length && (e[0] === "\n" || e[0] === "\r")) {
        e.shift();
       }
      }
      function _(e) {
       while (e.length && (e[e.length - 1] === "\n" || e[e.length - 1] === "\r")) {
        e.pop();
       }
      }
      function g() {
       var e = Ce(289, t);
       e.tags = s && Te(s, c, l);
       e.comment = f.length ? f.join("") : undefined;
       return Ee(e, o);
      }
      function h() {
       while (true) {
        K();
        if (oe() === 1) {
         return true;
        }
        if (!(oe() === 5 || oe() === 4)) {
         return false;
        }
       }
      }
      function v() {
       if (oe() === 5 || oe() === 4) {
        if (_e(h)) {
         return;
        }
       }
       while (oe() === 5 || oe() === 4) {
        K();
       }
      }
      function y(t) {
       e.Debug.assert(oe() === 57);
       var r = Ce(57, n.getTokenPos());
       r.end = n.getTextPos();
       K();
       var i = H();
       v();
       var a;
       switch (i.escapedText) {
       case "augments":
       case "extends":
        a = A(r, i);
        break;

       case "class":
       case "constructor":
        a = I(r, i);
        break;

       case "this":
        a = O(r, i);
        break;

       case "arg":
       case "argument":
       case "param":
        return D(r, i, 2, t);

       case "return":
       case "returns":
        a = E(r, i);
        break;

       case "template":
        a = J(r, i);
        break;

       case "type":
        a = N(r, i);
        break;

       case "typedef":
        a = M(r, i, t);
        break;

       case "callback":
        a = R(r, i, t);
        break;

       default:
        a = x(r, i);
        break;
       }
       if (!a.comment) {
        a.comment = b(t + a.end - a.pos);
       }
       return a;
      }
      function b(t) {
       var r = [];
       var i = 0;
       var a;
       function o(e) {
        if (!a) {
         a = t;
        }
        r.push(e);
        t += e.length;
       }
       var s = oe();
       e: while (true) {
        switch (s) {
        case 4:
         if (i >= 1) {
          i = 0;
          r.push(n.getTokenText());
         }
         t = 0;
         break;

        case 57:
         n.setTextPos(n.getTextPos() - 1);

        case 1:
         break e;

        case 5:
         if (i === 2) {
          o(n.getTokenText());
         } else {
          var c = n.getTokenText();
          if (a !== undefined && t + c.length > a) {
           r.push(c.slice(a - t - 1));
          }
          t += c.length;
         }
         break;

        case 17:
         i = 2;
         if (_e(function() {
          return K() === 57 && e.tokenIsIdentifierOrKeyword(K()) && n.getTokenText() === "link";
         })) {
          o(n.getTokenText());
          K();
          o(n.getTokenText());
          K();
         }
         o(n.getTokenText());
         break;

        case 39:
         if (i === 0) {
          i = 1;
          t += 1;
          break;
         }

        default:
         i = 2;
         o(n.getTokenText());
         break;
        }
        s = K();
       }
       d(r);
       _(r);
       return r.length === 0 ? undefined : r.join("");
      }
      function x(e, t) {
       var n = Ce(292, e.pos);
       n.atToken = e;
       n.tagName = t;
       return Ee(n);
      }
      function k(e) {
       if (!e) {
        return;
       }
       if (!s) {
        s = [ e ];
        c = e.pos;
       } else {
        s.push(e);
       }
       l = e.end;
      }
      function S() {
       v();
       return oe() === 17 ? i() : undefined;
      }
      function w() {
       if (oe() === 13) {
        return {
         name: Fe(true),
         isBracketed: false
        };
       }
       var e = ye(21);
       var t = W();
       if (e) {
        v();
        if (be(58)) {
         qn();
        }
        ve(22);
       }
       return {
        name: t,
        isBracketed: e
       };
      }
      function C(t) {
       switch (t.kind) {
       case 135:
        return true;

       case 167:
        return C(t.elementType);

       default:
        return e.isTypeReferenceNode(t) && e.isIdentifier(t.typeName) && t.typeName.escapedText === "Object";
       }
      }
      function D(e, t, r, i) {
       var a = S();
       var o = !a;
       v();
       var s = w(), c = s.name, u = s.isBracketed;
       v();
       if (o) {
        a = S();
       }
       var l = r === 1 ? Ce(302, e.pos) : Ce(296, e.pos);
       var f;
       if (i !== undefined) f = b(i + n.getStartPos() - e.pos);
       var d = r !== 4 && T(a, c, r);
       if (d) {
        a = d;
        o = true;
       }
       l.atToken = e;
       l.tagName = t;
       l.typeExpression = a;
       l.name = c;
       l.isNameFirst = o;
       l.isBracketed = u;
       l.comment = f;
       return Ee(l);
      }
      function T(t, r, i) {
       if (t && C(t.type)) {
        var a = Ce(281, n.getTokenPos());
        var o = void 0;
        var s = void 0;
        var c = n.getStartPos();
        var u = void 0;
        while (o = ge(function() {
         return q(i, r);
        })) {
         if (o.kind === 296 || o.kind === 302) {
          u = e.append(u, o);
         }
        }
        if (u) {
         s = Ce(290, c);
         s.jsDocPropertyTags = u;
         if (t.type.kind === 167) {
          s.isArrayType = true;
         }
         a.type = Ee(s);
         return Ee(a);
        }
       }
      }
      function E(t, r) {
       if (e.forEach(s, function(e) {
        return e.kind === 297;
       })) {
        ne(r.pos, n.getTokenPos(), e.Diagnostics._0_tag_already_specified, r.escapedText);
       }
       var i = Ce(297, t.pos);
       i.atToken = t;
       i.tagName = r;
       i.typeExpression = S();
       return Ee(i);
      }
      function N(t, r) {
       if (e.forEach(s, function(e) {
        return e.kind === 299;
       })) {
        ne(r.pos, n.getTokenPos(), e.Diagnostics._0_tag_already_specified, r.escapedText);
       }
       var a = Ce(299, t.pos);
       a.atToken = t;
       a.tagName = r;
       a.typeExpression = i(true);
       return Ee(a);
      }
      function A(e, t) {
       var n = Ce(293, e.pos);
       n.atToken = e;
       n.tagName = t;
       n.class = F();
       return Ee(n);
      }
      function F() {
       var e = ye(17);
       var t = Ce(209);
       t.expression = P();
       t.typeArguments = ua();
       var n = Ee(t);
       if (e) {
        ve(18);
       }
       return n;
      }
      function P() {
       var e = H();
       while (ye(23)) {
        var t = Ce(187, e.pos);
        t.expression = e;
        t.name = H();
        e = Ee(t);
       }
       return e;
      }
      function I(e, t) {
       var n = Ce(294, e.pos);
       n.atToken = e;
       n.tagName = t;
       return Ee(n);
      }
      function O(e, t) {
       var n = Ce(298, e.pos);
       n.atToken = e;
       n.tagName = t;
       n.typeExpression = i(true);
       v();
       return Ee(n);
      }
      function M(t, r, i) {
       var a = S();
       v();
       var o = Ce(301, t.pos);
       o.atToken = t;
       o.tagName = r;
       o.fullName = L();
       o.name = B(o.fullName);
       v();
       o.comment = b(i);
       o.typeExpression = a;
       var s;
       if (!a || C(a.type)) {
        var c = void 0;
        var u = void 0;
        var l = void 0;
        var f = n.getStartPos();
        while (c = ge(function() {
         return j();
        })) {
         if (!u) {
          u = Ce(290, f);
         }
         if (c.kind === 299) {
          if (l) {
           break;
          } else {
           l = c;
          }
         } else {
          u.jsDocPropertyTags = e.append(u.jsDocPropertyTags, c);
         }
        }
        if (u) {
         if (a && a.type.kind === 167) {
          u.isArrayType = true;
         }
         o.typeExpression = l && l.typeExpression && !C(l.typeExpression.type) ? l.typeExpression : Ee(u);
         s = o.typeExpression.end;
        }
       }
       return Ee(o, s || o.comment !== undefined ? n.getStartPos() : (o.fullName || o.typeExpression || o.tagName).end);
      }
      function L(t) {
       var r = n.getTokenPos();
       if (!e.tokenIsIdentifierOrKeyword(oe())) {
        return undefined;
       }
       var i = H();
       if (ye(23)) {
        var a = Ce(242, r);
        if (t) {
         a.flags |= 4;
        }
        a.name = i;
        a.body = L(true);
        return Ee(a);
       }
       if (t) {
        i.isInJSDocNamespace = true;
       }
       return i;
      }
      function R(t, r, i) {
       var a = Ce(295, t.pos);
       a.atToken = t;
       a.tagName = r;
       a.fullName = L();
       a.name = B(a.fullName);
       v();
       a.comment = b(i);
       var o;
       var s = n.getStartPos();
       var c = Ce(291, s);
       c.parameters = [];
       while (o = ge(function() {
        return q(4);
       })) {
        c.parameters = e.append(c.parameters, o);
       }
       var u = ge(function() {
        if (V(57)) {
         var e = y(i);
         if (e && e.kind === 297) {
          return e;
         }
        }
       });
       if (u) {
        c.type = u;
       }
       a.typeExpression = Ee(c);
       return Ee(a);
      }
      function B(t) {
       if (t) {
        var n = t;
        while (true) {
         if (e.isIdentifier(n) || !n.body) {
          return e.isIdentifier(n) ? n : n.name;
         }
         n = n.body;
        }
       }
      }
      function z(t, n) {
       while (!e.isIdentifier(t) || !e.isIdentifier(n)) {
        if (!e.isIdentifier(t) && !e.isIdentifier(n) && t.right.escapedText === n.right.escapedText) {
         t = t.left;
         n = n.left;
        } else {
         return false;
        }
       }
       return t.escapedText === n.escapedText;
      }
      function j() {
       return q(1);
      }
      function q(t, n) {
       var r = true;
       var i = false;
       while (true) {
        switch (K()) {
        case 57:
         if (r) {
          var a = U(t);
          if (a && (a.kind === 296 || a.kind === 302) && t !== 4 && n && (e.isIdentifier(a.name) || !z(n, a.name.left))) {
           return false;
          }
          return a;
         }
         i = false;
         break;

        case 4:
         r = true;
         i = false;
         break;

        case 39:
         if (i) {
          r = false;
         }
         i = true;
         break;

        case 71:
         r = false;
         break;

        case 1:
         return false;
        }
       }
      }
      function U(t) {
       e.Debug.assert(oe() === 57);
       var r = Ce(57);
       r.end = n.getTextPos();
       K();
       var i = H();
       v();
       var a;
       switch (i.escapedText) {
       case "type":
        return t === 1 && N(r, i);

       case "prop":
       case "property":
        a = 1;
        break;

       case "arg":
       case "argument":
       case "param":
        a = 2 | 4;
        break;

       default:
        return false;
       }
       if (!(t & a)) {
        return false;
       }
       var o = D(r, i, t, undefined);
       o.comment = b(o.end - o.pos);
       return o;
      }
      function J(t, n) {
       var r;
       if (oe() === 17) {
        r = i();
       }
       var a = [];
       var o = ae();
       do {
        v();
        var s = Ce(148);
        s.name = H(e.Diagnostics.Unexpected_token_A_type_parameter_name_was_expected_without_curly_braces);
        v();
        Ee(s);
        a.push(s);
       } while (V(26));
       if (r) {
        e.first(a).constraint = r.type;
       }
       var c = Ce(300, t.pos);
       c.atToken = t;
       c.tagName = n;
       c.typeParameters = Te(a, o);
       Ee(c);
       return c;
      }
      function K() {
       return p = n.scanJSDocToken();
      }
      function V(e) {
       if (oe() === e) {
        K();
        return true;
       }
       return false;
      }
      function W() {
       var e = H();
       if (ye(21)) {
        ve(22);
       }
       while (ye(23)) {
        var t = H();
        if (ye(21)) {
         ve(22);
        }
        e = bt(e, t);
       }
       return e;
      }
      function H(t) {
       if (!e.tokenIsIdentifierOrKeyword(oe())) {
        return Ne(71, !t, t || e.Diagnostics.Identifier_expected);
       }
       var r = n.getTokenPos();
       var i = n.getTextPos();
       var a = Ce(71, r);
       a.escapedText = e.escapeLeadingUnderscores(n.getTokenText());
       Ee(a, i);
       K();
       return a;
      }
     }
     t.parseJSDocCommentWorker = d;
    })(Ka = t.JSDocParser || (t.JSDocParser = {}));
   })(v || (v = {}));
   var y;
   (function(t) {
    function n(t, n, r, i) {
     i = i || e.Debug.shouldAssert(2);
     f(t, n, r, i);
     if (e.textChangeRangeIsUnchanged(r)) {
      return t;
     }
     if (t.statements.length === 0) {
      return v.parseSourceFile(t.fileName, n, t.languageVersion, undefined, true, t.scriptKind);
     }
     var a = t;
     e.Debug.assert(!a.hasBeenIncrementallyParsed);
     a.hasBeenIncrementallyParsed = true;
     var o = t.text;
     var u = d(t);
     var l = c(t, r);
     f(t, n, l, i);
     e.Debug.assert(l.span.start <= r.span.start);
     e.Debug.assert(e.textSpanEnd(l.span) === e.textSpanEnd(r.span));
     e.Debug.assert(e.textSpanEnd(e.textChangeRangeNewSpan(l)) === e.textSpanEnd(e.textChangeRangeNewSpan(r)));
     var p = e.textChangeRangeNewSpan(l).length - l.span.length;
     s(a, l.span.start, e.textSpanEnd(l.span), e.textSpanEnd(e.textChangeRangeNewSpan(l)), p, o, n, i);
     var m = v.parseSourceFile(t.fileName, n, t.languageVersion, u, true, t.scriptKind);
     return m;
    }
    t.updateSourceFile = n;
    function r(t, n, r, a, s, c) {
     if (n) {
      f(t);
     } else {
      u(t);
     }
     return;
     function u(t) {
      var n = "";
      if (c && i(t)) {
       n = a.substring(t.pos, t.end);
      }
      if (t._children) {
       t._children = undefined;
      }
      t.pos += r;
      t.end += r;
      if (c && i(t)) {
       e.Debug.assert(n === s.substring(t.pos, t.end));
      }
      l(t, u, f);
      if (e.hasJSDocNodes(t)) {
       for (var d = 0, p = t.jsDoc; d < p.length; d++) {
        var m = p[d];
        u(m);
       }
      }
      o(t, c);
     }
     function f(e) {
      e._children = undefined;
      e.pos += r;
      e.end += r;
      for (var t = 0, n = e; t < n.length; t++) {
       var i = n[t];
       u(i);
      }
     }
    }
    function i(e) {
     switch (e.kind) {
     case 9:
     case 8:
     case 71:
      return true;
     }
     return false;
    }
    function a(t, n, r, i, a) {
     e.Debug.assert(t.end >= n, "Adjusting an element that was entirely before the change range");
     e.Debug.assert(t.pos <= r, "Adjusting an element that was entirely after the change range");
     e.Debug.assert(t.pos <= t.end);
     t.pos = Math.min(t.pos, i);
     if (t.end >= r) {
      t.end += a;
     } else {
      t.end = Math.min(t.end, i);
     }
     e.Debug.assert(t.pos <= t.end);
     if (t.parent) {
      e.Debug.assert(t.pos >= t.parent.pos);
      e.Debug.assert(t.end <= t.parent.end);
     }
    }
    function o(t, n) {
     if (n) {
      var r = t.pos;
      var i = function(t) {
       e.Debug.assert(t.pos >= r);
       r = t.end;
      };
      if (e.hasJSDocNodes(t)) {
       for (var a = 0, o = t.jsDoc; a < o.length; a++) {
        var s = o[a];
        i(s);
       }
      }
      l(t, i);
      e.Debug.assert(r <= t.end);
     }
    }
    function s(t, n, i, s, c, u, f, d) {
     p(t);
     return;
     function p(t) {
      e.Debug.assert(t.pos <= t.end);
      if (t.pos > i) {
       r(t, false, c, u, f, d);
       return;
      }
      var _ = t.end;
      if (_ >= n) {
       t.intersectsChange = true;
       t._children = undefined;
       a(t, n, i, s, c);
       l(t, p, m);
       if (e.hasJSDocNodes(t)) {
        for (var g = 0, h = t.jsDoc; g < h.length; g++) {
         var v = h[g];
         p(v);
        }
       }
       o(t, d);
       return;
      }
      e.Debug.assert(_ < n);
     }
     function m(t) {
      e.Debug.assert(t.pos <= t.end);
      if (t.pos > i) {
       r(t, true, c, u, f, d);
       return;
      }
      var o = t.end;
      if (o >= n) {
       t.intersectsChange = true;
       t._children = undefined;
       a(t, n, i, s, c);
       for (var l = 0, m = t; l < m.length; l++) {
        var _ = m[l];
        p(_);
       }
       return;
      }
      e.Debug.assert(o < n);
     }
    }
    function c(t, n) {
     var r = 1;
     var i = n.span.start;
     for (var a = 0; i > 0 && a <= r; a++) {
      var o = u(t, i);
      e.Debug.assert(o.pos <= i);
      var s = o.pos;
      i = Math.max(0, s - 1);
     }
     var c = e.createTextSpanFromBounds(i, e.textSpanEnd(n.span));
     var l = n.newLength + (n.span.start - i);
     return e.createTextChangeRange(c, l);
    }
    function u(t, n) {
     var r = t;
     var i;
     l(t, s);
     if (i) {
      var a = o(i);
      if (a.pos > r.pos) {
       r = a;
      }
     }
     return r;
     function o(t) {
      while (true) {
       var n = e.getLastChild(t);
       if (n) {
        t = n;
       } else {
        return t;
       }
      }
     }
     function s(t) {
      if (e.nodeIsMissing(t)) {
       return;
      }
      if (t.pos <= n) {
       if (t.pos >= r.pos) {
        r = t;
       }
       if (n < t.end) {
        l(t, s);
        return true;
       } else {
        e.Debug.assert(t.end <= n);
        i = t;
       }
      } else {
       e.Debug.assert(t.pos > n);
       return true;
      }
     }
    }
    function f(t, n, r, i) {
     var a = t.text;
     if (r) {
      e.Debug.assert(a.length - r.span.length + r.newLength === n.length);
      if (i || e.Debug.shouldAssert(3)) {
       var o = a.substr(0, r.span.start);
       var s = n.substr(0, r.span.start);
       e.Debug.assert(o === s);
       var c = a.substring(e.textSpanEnd(r.span), a.length);
       var u = n.substring(e.textSpanEnd(e.textChangeRangeNewSpan(r)), n.length);
       e.Debug.assert(c === u);
      }
     }
    }
    function d(t) {
     var n = t.statements;
     var r = 0;
     e.Debug.assert(r < n.length);
     var i = n[r];
     var a = -1;
     return {
      currentNode: function(t) {
       if (t !== a) {
        if (i && i.end === t && r < n.length - 1) {
         r++;
         i = n[r];
        }
        if (!i || i.pos !== t) {
         o(t);
        }
       }
       a = t;
       e.Debug.assert(!i || i.pos === t);
       return i;
      }
     };
     function o(e) {
      n = undefined;
      r = -1;
      i = undefined;
      l(t, a, o);
      return;
      function a(t) {
       if (e >= t.pos && e < t.end) {
        l(t, a, o);
        return true;
       }
       return false;
      }
      function o(t) {
       if (e >= t.pos && e < t.end) {
        for (var s = 0; s < t.length; s++) {
         var c = t[s];
         if (c) {
          if (c.pos === e) {
           n = t;
           r = s;
           i = c;
           return true;
          } else {
           if (c.pos < e && e < c.end) {
            l(c, a, o);
            return true;
           }
          }
         }
        }
       }
       return false;
      }
     }
    }
    var p;
    (function(e) {
     e[e["Value"] = -1] = "Value";
    })(p || (p = {}));
   })(y || (y = {}));
   function b(t) {
    return e.fileExtensionIs(t, ".d.ts");
   }
   e.isDeclarationFileName = b;
   function x(t, n) {
    var r = e.createScanner(t.languageVersion, false, 0, n);
    var i = [];
    while (true) {
     var a = r.scan();
     if (!e.isTrivia(a)) {
      break;
     }
     var o = {
      kind: r.getToken(),
      pos: r.getTokenPos(),
      end: r.getTextPos()
     };
     var s = n.substring(o.pos, o.end);
     T(i, o, s);
    }
    t.pragmas = e.createMap();
    for (var c = 0, u = i; c < u.length; c++) {
     var l = u[c];
     if (t.pragmas.has(l.name)) {
      var f = t.pragmas.get(l.name);
      if (f instanceof Array) {
       f.push(l.args);
      } else {
       t.pragmas.set(l.name, [ f, l.args ]);
      }
      continue;
     }
     t.pragmas.set(l.name, l.args);
    }
   }
   e.processCommentPragmas = x;
   function k(t, n) {
    t.checkJsDirective = undefined;
    t.referencedFiles = [];
    t.typeReferenceDirectives = [];
    t.libReferenceDirectives = [];
    t.amdDependencies = [];
    t.hasNoDefaultLib = false;
    t.pragmas.forEach(function(r, i) {
     switch (i) {
     case "reference":
      {
       var a = t.referencedFiles;
       var o = t.typeReferenceDirectives;
       var s = t.libReferenceDirectives;
       e.forEach(e.toArray(r), function(r) {
        if (r.arguments["no-default-lib"]) {
         t.hasNoDefaultLib = true;
        } else if (r.arguments.types) {
         o.push({
          pos: r.arguments.types.pos,
          end: r.arguments.types.end,
          fileName: r.arguments.types.value
         });
        } else if (r.arguments.lib) {
         s.push({
          pos: r.arguments.lib.pos,
          end: r.arguments.lib.end,
          fileName: r.arguments.lib.value
         });
        } else if (r.arguments.path) {
         a.push({
          pos: r.arguments.path.pos,
          end: r.arguments.path.end,
          fileName: r.arguments.path.value
         });
        } else {
         n(r.range.pos, r.range.end - r.range.pos, e.Diagnostics.Invalid_reference_directive_syntax);
        }
       });
       break;
      }

     case "amd-dependency":
      {
       t.amdDependencies = e.map(e.toArray(r), function(e) {
        return {
         name: e.arguments.name,
         path: e.arguments.path
        };
       });
       break;
      }

     case "amd-module":
      {
       if (r instanceof Array) {
        for (var c = 0, u = r; c < u.length; c++) {
         var l = u[c];
         if (t.moduleName) {
          n(l.range.pos, l.range.end - l.range.pos, e.Diagnostics.An_AMD_module_cannot_have_multiple_name_assignments);
         }
         t.moduleName = l.arguments.name;
        }
       } else {
        t.moduleName = r.arguments.name;
       }
       break;
      }

     case "ts-nocheck":
     case "ts-check":
      {
       e.forEach(e.toArray(r), function(e) {
        if (!t.checkJsDirective || e.range.pos > t.checkJsDirective.pos) {
         t.checkJsDirective = {
          enabled: i === "ts-check",
          end: e.range.end,
          pos: e.range.pos
         };
        }
       });
       break;
      }

     case "jsx":
      return;

     default:
      e.Debug.fail("Unhandled pragma kind");
     }
    });
   }
   e.processPragmasIntoFields = k;
   var S = e.createMap();
   function w(e) {
    if (S.has(e)) {
     return S.get(e);
    }
    var t = new RegExp("(\\s" + e + "\\s*=\\s*)('|\")(.+?)\\2", "im");
    S.set(e, t);
    return t;
   }
   var C = /^\/\/\/\s*<(\S+)\s.*?\/>/im;
   var D = /^\/\/\/?\s*@(\S+)\s*(.*)\s*$/im;
   function T(t, n, r) {
    var i = n.kind === 2 && C.exec(r);
    if (i) {
     var a = i[1].toLowerCase();
     var o = e.commentPragmas[a];
     if (!o || !(o.kind & 1)) {
      return;
     }
     if (o.args) {
      var s = {};
      for (var c = 0, u = o.args; c < u.length; c++) {
       var l = u[c];
       var f = w(l.name);
       var d = f.exec(r);
       if (!d && !l.optional) {
        return;
       } else if (d) {
        if (l.captureSpan) {
         var p = n.pos + d.index + d[1].length + d[2].length;
         s[l.name] = {
          value: d[3],
          pos: p,
          end: p + d[3].length
         };
        } else {
         s[l.name] = d[3];
        }
       }
      }
      t.push({
       name: a,
       args: {
        arguments: s,
        range: n
       }
      });
     } else {
      t.push({
       name: a,
       args: {
        arguments: {},
        range: n
       }
      });
     }
     return;
    }
    var m = n.kind === 2 && D.exec(r);
    if (m) {
     return E(t, n, 2, m);
    }
    if (n.kind === 3) {
     var _ = /\s*@(\S+)\s*(.*)\s*$/gim;
     var g = void 0;
     while (g = _.exec(r)) {
      E(t, n, 4, g);
     }
    }
   }
   function E(t, n, r, i) {
    if (!i) return;
    var a = i[1].toLowerCase();
    var o = e.commentPragmas[a];
    if (!o || !(o.kind & r)) {
     return;
    }
    var s = i[2];
    var c = N(o, s);
    if (c === "fail") return;
    t.push({
     name: a,
     args: {
      arguments: c,
      range: n
     }
    });
    return;
   }
   function N(t, n) {
    if (!n) return {};
    if (!t.args) return {};
    var r = n.split(/\s+/);
    var i = {};
    for (var a = 0; a < t.args.length; a++) {
     var o = t.args[a];
     if (!r[a] && !o.optional) {
      return "fail";
     }
     if (o.captureSpan) {
      return e.Debug.fail("Capture spans not yet implemented for non-xml pragmas");
     }
     i[o.name] = r[a];
    }
    return i;
   }
   function A(e, t) {
    if (e.kind !== t.kind) {
     return false;
    }
    if (e.kind === 71) {
     return e.escapedText === t.escapedText;
    }
    if (e.kind === 99) {
     return true;
    }
    return e.name.escapedText === t.name.escapedText && A(e.expression, t.expression);
   }
   e.tagNamesAreEquivalent = A;
  })(s || (s = {}));
  var s;
  (function(e) {
   e.compileOnSaveCommandLineOption = {
    name: "compileOnSave",
    type: "boolean"
   };
   var t = [ [ "es5", "lib.es5.d.ts" ], [ "es6", "lib.es2015.d.ts" ], [ "es2015", "lib.es2015.d.ts" ], [ "es7", "lib.es2016.d.ts" ], [ "es2016", "lib.es2016.d.ts" ], [ "es2017", "lib.es2017.d.ts" ], [ "es2018", "lib.es2018.d.ts" ], [ "esnext", "lib.esnext.d.ts" ], [ "dom", "lib.dom.d.ts" ], [ "dom.iterable", "lib.dom.iterable.d.ts" ], [ "webworker", "lib.webworker.d.ts" ], [ "webworker.importscripts", "lib.webworker.importscripts.d.ts" ], [ "scripthost", "lib.scripthost.d.ts" ], [ "es2015.core", "lib.es2015.core.d.ts" ], [ "es2015.collection", "lib.es2015.collection.d.ts" ], [ "es2015.generator", "lib.es2015.generator.d.ts" ], [ "es2015.iterable", "lib.es2015.iterable.d.ts" ], [ "es2015.promise", "lib.es2015.promise.d.ts" ], [ "es2015.proxy", "lib.es2015.proxy.d.ts" ], [ "es2015.reflect", "lib.es2015.reflect.d.ts" ], [ "es2015.symbol", "lib.es2015.symbol.d.ts" ], [ "es2015.symbol.wellknown", "lib.es2015.symbol.wellknown.d.ts" ], [ "es2016.array.include", "lib.es2016.array.include.d.ts" ], [ "es2017.object", "lib.es2017.object.d.ts" ], [ "es2017.sharedmemory", "lib.es2017.sharedmemory.d.ts" ], [ "es2017.string", "lib.es2017.string.d.ts" ], [ "es2017.intl", "lib.es2017.intl.d.ts" ], [ "es2017.typedarrays", "lib.es2017.typedarrays.d.ts" ], [ "es2018.intl", "lib.es2018.intl.d.ts" ], [ "es2018.promise", "lib.es2018.promise.d.ts" ], [ "es2018.regexp", "lib.es2018.regexp.d.ts" ], [ "esnext.array", "lib.esnext.array.d.ts" ], [ "esnext.symbol", "lib.esnext.symbol.d.ts" ], [ "esnext.asynciterable", "lib.esnext.asynciterable.d.ts" ], [ "esnext.intl", "lib.esnext.intl.d.ts" ] ];
   e.libs = t.map(function(e) {
    return e[0];
   });
   e.libMap = e.createMapFromEntries(t);
   e.optionDeclarations = [ {
    name: "help",
    shortName: "h",
    type: "boolean",
    showInSimplifiedHelpView: true,
    category: e.Diagnostics.Command_line_Options,
    description: e.Diagnostics.Print_this_message
   }, {
    name: "help",
    shortName: "?",
    type: "boolean"
   }, {
    name: "all",
    type: "boolean",
    showInSimplifiedHelpView: true,
    category: e.Diagnostics.Command_line_Options,
    description: e.Diagnostics.Show_all_compiler_options
   }, {
    name: "version",
    shortName: "v",
    type: "boolean",
    showInSimplifiedHelpView: true,
    category: e.Diagnostics.Command_line_Options,
    description: e.Diagnostics.Print_the_compiler_s_version
   }, {
    name: "init",
    type: "boolean",
    showInSimplifiedHelpView: true,
    category: e.Diagnostics.Command_line_Options,
    description: e.Diagnostics.Initializes_a_TypeScript_project_and_creates_a_tsconfig_json_file
   }, {
    name: "project",
    shortName: "p",
    type: "string",
    isFilePath: true,
    showInSimplifiedHelpView: true,
    category: e.Diagnostics.Command_line_Options,
    paramType: e.Diagnostics.FILE_OR_DIRECTORY,
    description: e.Diagnostics.Compile_the_project_given_the_path_to_its_configuration_file_or_to_a_folder_with_a_tsconfig_json
   }, {
    name: "build",
    type: "boolean",
    shortName: "b",
    showInSimplifiedHelpView: true,
    category: e.Diagnostics.Command_line_Options,
    description: e.Diagnostics.Build_one_or_more_projects_and_their_dependencies_if_out_of_date
   }, {
    name: "pretty",
    type: "boolean",
    showInSimplifiedHelpView: true,
    category: e.Diagnostics.Command_line_Options,
    description: e.Diagnostics.Stylize_errors_and_messages_using_color_and_context_experimental
   }, {
    name: "preserveWatchOutput",
    type: "boolean",
    showInSimplifiedHelpView: false,
    category: e.Diagnostics.Command_line_Options,
    description: e.Diagnostics.Whether_to_keep_outdated_console_output_in_watch_mode_instead_of_clearing_the_screen
   }, {
    name: "watch",
    shortName: "w",
    type: "boolean",
    showInSimplifiedHelpView: true,
    category: e.Diagnostics.Command_line_Options,
    description: e.Diagnostics.Watch_input_files
   }, {
    name: "target",
    shortName: "t",
    type: e.createMapFromTemplate({
     es3: 0,
     es5: 1,
     es6: 2,
     es2015: 2,
     es2016: 3,
     es2017: 4,
     es2018: 5,
     esnext: 6
    }),
    paramType: e.Diagnostics.VERSION,
    showInSimplifiedHelpView: true,
    category: e.Diagnostics.Basic_Options,
    description: e.Diagnostics.Specify_ECMAScript_target_version_Colon_ES3_default_ES5_ES2015_ES2016_ES2017_ES2018_or_ESNEXT
   }, {
    name: "module",
    shortName: "m",
    type: e.createMapFromTemplate({
     none: e.ModuleKind.None,
     commonjs: e.ModuleKind.CommonJS,
     amd: e.ModuleKind.AMD,
     system: e.ModuleKind.System,
     umd: e.ModuleKind.UMD,
     es6: e.ModuleKind.ES2015,
     es2015: e.ModuleKind.ES2015,
     esnext: e.ModuleKind.ESNext
    }),
    paramType: e.Diagnostics.KIND,
    showInSimplifiedHelpView: true,
    category: e.Diagnostics.Basic_Options,
    description: e.Diagnostics.Specify_module_code_generation_Colon_none_commonjs_amd_system_umd_es2015_or_ESNext
   }, {
    name: "lib",
    type: "list",
    element: {
     name: "lib",
     type: e.libMap
    },
    showInSimplifiedHelpView: true,
    category: e.Diagnostics.Basic_Options,
    description: e.Diagnostics.Specify_library_files_to_be_included_in_the_compilation
   }, {
    name: "allowJs",
    type: "boolean",
    showInSimplifiedHelpView: true,
    category: e.Diagnostics.Basic_Options,
    description: e.Diagnostics.Allow_javascript_files_to_be_compiled
   }, {
    name: "checkJs",
    type: "boolean",
    category: e.Diagnostics.Basic_Options,
    description: e.Diagnostics.Report_errors_in_js_files
   }, {
    name: "jsx",
    type: e.createMapFromTemplate({
     preserve: 1,
     "react-native": 3,
     react: 2
    }),
    paramType: e.Diagnostics.KIND,
    showInSimplifiedHelpView: true,
    category: e.Diagnostics.Basic_Options,
    description: e.Diagnostics.Specify_JSX_code_generation_Colon_preserve_react_native_or_react
   }, {
    name: "declaration",
    shortName: "d",
    type: "boolean",
    showInSimplifiedHelpView: true,
    category: e.Diagnostics.Basic_Options,
    description: e.Diagnostics.Generates_corresponding_d_ts_file
   }, {
    name: "declarationMap",
    type: "boolean",
    showInSimplifiedHelpView: true,
    category: e.Diagnostics.Basic_Options,
    description: e.Diagnostics.Generates_a_sourcemap_for_each_corresponding_d_ts_file
   }, {
    name: "emitDeclarationOnly",
    type: "boolean",
    category: e.Diagnostics.Advanced_Options,
    description: e.Diagnostics.Only_emit_d_ts_declaration_files
   }, {
    name: "sourceMap",
    type: "boolean",
    showInSimplifiedHelpView: true,
    category: e.Diagnostics.Basic_Options,
    description: e.Diagnostics.Generates_corresponding_map_file
   }, {
    name: "outFile",
    type: "string",
    isFilePath: true,
    paramType: e.Diagnostics.FILE,
    showInSimplifiedHelpView: true,
    category: e.Diagnostics.Basic_Options,
    description: e.Diagnostics.Concatenate_and_emit_output_to_single_file
   }, {
    name: "outDir",
    type: "string",
    isFilePath: true,
    paramType: e.Diagnostics.DIRECTORY,
    showInSimplifiedHelpView: true,
    category: e.Diagnostics.Basic_Options,
    description: e.Diagnostics.Redirect_output_structure_to_the_directory
   }, {
    name: "rootDir",
    type: "string",
    isFilePath: true,
    paramType: e.Diagnostics.LOCATION,
    category: e.Diagnostics.Basic_Options,
    description: e.Diagnostics.Specify_the_root_directory_of_input_files_Use_to_control_the_output_directory_structure_with_outDir
   }, {
    name: "composite",
    type: "boolean",
    isTSConfigOnly: true,
    category: e.Diagnostics.Basic_Options,
    description: e.Diagnostics.Enable_project_compilation
   }, {
    name: "removeComments",
    type: "boolean",
    showInSimplifiedHelpView: true,
    category: e.Diagnostics.Basic_Options,
    description: e.Diagnostics.Do_not_emit_comments_to_output
   }, {
    name: "noEmit",
    type: "boolean",
    showInSimplifiedHelpView: true,
    category: e.Diagnostics.Basic_Options,
    description: e.Diagnostics.Do_not_emit_outputs
   }, {
    name: "importHelpers",
    type: "boolean",
    category: e.Diagnostics.Basic_Options,
    description: e.Diagnostics.Import_emit_helpers_from_tslib
   }, {
    name: "downlevelIteration",
    type: "boolean",
    category: e.Diagnostics.Basic_Options,
    description: e.Diagnostics.Provide_full_support_for_iterables_in_for_of_spread_and_destructuring_when_targeting_ES5_or_ES3
   }, {
    name: "isolatedModules",
    type: "boolean",
    category: e.Diagnostics.Basic_Options,
    description: e.Diagnostics.Transpile_each_file_as_a_separate_module_similar_to_ts_transpileModule
   }, {
    name: "strict",
    type: "boolean",
    showInSimplifiedHelpView: true,
    category: e.Diagnostics.Strict_Type_Checking_Options,
    description: e.Diagnostics.Enable_all_strict_type_checking_options
   }, {
    name: "noImplicitAny",
    type: "boolean",
    showInSimplifiedHelpView: true,
    category: e.Diagnostics.Strict_Type_Checking_Options,
    description: e.Diagnostics.Raise_error_on_expressions_and_declarations_with_an_implied_any_type
   }, {
    name: "strictNullChecks",
    type: "boolean",
    showInSimplifiedHelpView: true,
    category: e.Diagnostics.Strict_Type_Checking_Options,
    description: e.Diagnostics.Enable_strict_null_checks
   }, {
    name: "strictFunctionTypes",
    type: "boolean",
    showInSimplifiedHelpView: true,
    category: e.Diagnostics.Strict_Type_Checking_Options,
    description: e.Diagnostics.Enable_strict_checking_of_function_types
   }, {
    name: "strictPropertyInitialization",
    type: "boolean",
    showInSimplifiedHelpView: true,
    category: e.Diagnostics.Strict_Type_Checking_Options,
    description: e.Diagnostics.Enable_strict_checking_of_property_initialization_in_classes
   }, {
    name: "noImplicitThis",
    type: "boolean",
    showInSimplifiedHelpView: true,
    category: e.Diagnostics.Strict_Type_Checking_Options,
    description: e.Diagnostics.Raise_error_on_this_expressions_with_an_implied_any_type
   }, {
    name: "alwaysStrict",
    type: "boolean",
    showInSimplifiedHelpView: true,
    category: e.Diagnostics.Strict_Type_Checking_Options,
    description: e.Diagnostics.Parse_in_strict_mode_and_emit_use_strict_for_each_source_file
   }, {
    name: "noUnusedLocals",
    type: "boolean",
    showInSimplifiedHelpView: true,
    category: e.Diagnostics.Additional_Checks,
    description: e.Diagnostics.Report_errors_on_unused_locals
   }, {
    name: "noUnusedParameters",
    type: "boolean",
    showInSimplifiedHelpView: true,
    category: e.Diagnostics.Additional_Checks,
    description: e.Diagnostics.Report_errors_on_unused_parameters
   }, {
    name: "noImplicitReturns",
    type: "boolean",
    showInSimplifiedHelpView: true,
    category: e.Diagnostics.Additional_Checks,
    description: e.Diagnostics.Report_error_when_not_all_code_paths_in_function_return_a_value
   }, {
    name: "noFallthroughCasesInSwitch",
    type: "boolean",
    showInSimplifiedHelpView: true,
    category: e.Diagnostics.Additional_Checks,
    description: e.Diagnostics.Report_errors_for_fallthrough_cases_in_switch_statement
   }, {
    name: "moduleResolution",
    type: e.createMapFromTemplate({
     node: e.ModuleResolutionKind.NodeJs,
     classic: e.ModuleResolutionKind.Classic
    }),
    paramType: e.Diagnostics.STRATEGY,
    category: e.Diagnostics.Module_Resolution_Options,
    description: e.Diagnostics.Specify_module_resolution_strategy_Colon_node_Node_js_or_classic_TypeScript_pre_1_6
   }, {
    name: "baseUrl",
    type: "string",
    isFilePath: true,
    category: e.Diagnostics.Module_Resolution_Options,
    description: e.Diagnostics.Base_directory_to_resolve_non_absolute_module_names
   }, {
    name: "paths",
    type: "object",
    isTSConfigOnly: true,
    category: e.Diagnostics.Module_Resolution_Options,
    description: e.Diagnostics.A_series_of_entries_which_re_map_imports_to_lookup_locations_relative_to_the_baseUrl
   }, {
    name: "rootDirs",
    type: "list",
    isTSConfigOnly: true,
    element: {
     name: "rootDirs",
     type: "string",
     isFilePath: true
    },
    category: e.Diagnostics.Module_Resolution_Options,
    description: e.Diagnostics.List_of_root_folders_whose_combined_content_represents_the_structure_of_the_project_at_runtime
   }, {
    name: "typeRoots",
    type: "list",
    element: {
     name: "typeRoots",
     type: "string",
     isFilePath: true
    },
    category: e.Diagnostics.Module_Resolution_Options,
    description: e.Diagnostics.List_of_folders_to_include_type_definitions_from
   }, {
    name: "types",
    type: "list",
    element: {
     name: "types",
     type: "string"
    },
    showInSimplifiedHelpView: true,
    category: e.Diagnostics.Module_Resolution_Options,
    description: e.Diagnostics.Type_declaration_files_to_be_included_in_compilation
   }, {
    name: "allowSyntheticDefaultImports",
    type: "boolean",
    category: e.Diagnostics.Module_Resolution_Options,
    description: e.Diagnostics.Allow_default_imports_from_modules_with_no_default_export_This_does_not_affect_code_emit_just_typechecking
   }, {
    name: "esModuleInterop",
    type: "boolean",
    showInSimplifiedHelpView: true,
    category: e.Diagnostics.Module_Resolution_Options,
    description: e.Diagnostics.Enables_emit_interoperability_between_CommonJS_and_ES_Modules_via_creation_of_namespace_objects_for_all_imports_Implies_allowSyntheticDefaultImports
   }, {
    name: "preserveSymlinks",
    type: "boolean",
    category: e.Diagnostics.Module_Resolution_Options,
    description: e.Diagnostics.Do_not_resolve_the_real_path_of_symlinks
   }, {
    name: "sourceRoot",
    type: "string",
    paramType: e.Diagnostics.LOCATION,
    category: e.Diagnostics.Source_Map_Options,
    description: e.Diagnostics.Specify_the_location_where_debugger_should_locate_TypeScript_files_instead_of_source_locations
   }, {
    name: "mapRoot",
    type: "string",
    paramType: e.Diagnostics.LOCATION,
    category: e.Diagnostics.Source_Map_Options,
    description: e.Diagnostics.Specify_the_location_where_debugger_should_locate_map_files_instead_of_generated_locations
   }, {
    name: "inlineSourceMap",
    type: "boolean",
    category: e.Diagnostics.Source_Map_Options,
    description: e.Diagnostics.Emit_a_single_file_with_source_maps_instead_of_having_a_separate_file
   }, {
    name: "inlineSources",
    type: "boolean",
    category: e.Diagnostics.Source_Map_Options,
    description: e.Diagnostics.Emit_the_source_alongside_the_sourcemaps_within_a_single_file_requires_inlineSourceMap_or_sourceMap_to_be_set
   }, {
    name: "experimentalDecorators",
    type: "boolean",
    category: e.Diagnostics.Experimental_Options,
    description: e.Diagnostics.Enables_experimental_support_for_ES7_decorators
   }, {
    name: "emitDecoratorMetadata",
    type: "boolean",
    category: e.Diagnostics.Experimental_Options,
    description: e.Diagnostics.Enables_experimental_support_for_emitting_type_metadata_for_decorators
   }, {
    name: "jsxFactory",
    type: "string",
    category: e.Diagnostics.Advanced_Options,
    description: e.Diagnostics.Specify_the_JSX_factory_function_to_use_when_targeting_react_JSX_emit_e_g_React_createElement_or_h
   }, {
    name: "diagnostics",
    type: "boolean",
    category: e.Diagnostics.Advanced_Options,
    description: e.Diagnostics.Show_diagnostic_information
   }, {
    name: "extendedDiagnostics",
    type: "boolean",
    category: e.Diagnostics.Advanced_Options,
    description: e.Diagnostics.Show_verbose_diagnostic_information
   }, {
    name: "traceResolution",
    type: "boolean",
    category: e.Diagnostics.Advanced_Options,
    description: e.Diagnostics.Enable_tracing_of_the_name_resolution_process
   }, {
    name: "resolveJsonModule",
    type: "boolean",
    category: e.Diagnostics.Advanced_Options,
    description: e.Diagnostics.Include_modules_imported_with_json_extension
   }, {
    name: "listFiles",
    type: "boolean",
    category: e.Diagnostics.Advanced_Options,
    description: e.Diagnostics.Print_names_of_files_part_of_the_compilation
   }, {
    name: "listEmittedFiles",
    type: "boolean",
    category: e.Diagnostics.Advanced_Options,
    description: e.Diagnostics.Print_names_of_generated_files_part_of_the_compilation
   }, {
    name: "out",
    type: "string",
    isFilePath: false,
    category: e.Diagnostics.Advanced_Options,
    paramType: e.Diagnostics.FILE,
    description: e.Diagnostics.Deprecated_Use_outFile_instead_Concatenate_and_emit_output_to_single_file
   }, {
    name: "reactNamespace",
    type: "string",
    category: e.Diagnostics.Advanced_Options,
    description: e.Diagnostics.Deprecated_Use_jsxFactory_instead_Specify_the_object_invoked_for_createElement_when_targeting_react_JSX_emit
   }, {
    name: "skipDefaultLibCheck",
    type: "boolean",
    category: e.Diagnostics.Advanced_Options,
    description: e.Diagnostics.Deprecated_Use_skipLibCheck_instead_Skip_type_checking_of_default_library_declaration_files
   }, {
    name: "charset",
    type: "string",
    category: e.Diagnostics.Advanced_Options,
    description: e.Diagnostics.The_character_set_of_the_input_files
   }, {
    name: "emitBOM",
    type: "boolean",
    category: e.Diagnostics.Advanced_Options,
    description: e.Diagnostics.Emit_a_UTF_8_Byte_Order_Mark_BOM_in_the_beginning_of_output_files
   }, {
    name: "locale",
    type: "string",
    category: e.Diagnostics.Advanced_Options,
    description: e.Diagnostics.The_locale_used_when_displaying_messages_to_the_user_e_g_en_us
   }, {
    name: "newLine",
    type: e.createMapFromTemplate({
     crlf: 0,
     lf: 1
    }),
    paramType: e.Diagnostics.NEWLINE,
    category: e.Diagnostics.Advanced_Options,
    description: e.Diagnostics.Specify_the_end_of_line_sequence_to_be_used_when_emitting_files_Colon_CRLF_dos_or_LF_unix
   }, {
    name: "noErrorTruncation",
    type: "boolean",
    category: e.Diagnostics.Advanced_Options,
    description: e.Diagnostics.Do_not_truncate_error_messages
   }, {
    name: "noLib",
    type: "boolean",
    category: e.Diagnostics.Advanced_Options,
    description: e.Diagnostics.Do_not_include_the_default_library_file_lib_d_ts
   }, {
    name: "noResolve",
    type: "boolean",
    category: e.Diagnostics.Advanced_Options,
    description: e.Diagnostics.Do_not_add_triple_slash_references_or_imported_modules_to_the_list_of_compiled_files
   }, {
    name: "stripInternal",
    type: "boolean",
    category: e.Diagnostics.Advanced_Options,
    description: e.Diagnostics.Do_not_emit_declarations_for_code_that_has_an_internal_annotation
   }, {
    name: "disableSizeLimit",
    type: "boolean",
    category: e.Diagnostics.Advanced_Options,
    description: e.Diagnostics.Disable_size_limitations_on_JavaScript_projects
   }, {
    name: "noImplicitUseStrict",
    type: "boolean",
    category: e.Diagnostics.Advanced_Options,
    description: e.Diagnostics.Do_not_emit_use_strict_directives_in_module_output
   }, {
    name: "noEmitHelpers",
    type: "boolean",
    category: e.Diagnostics.Advanced_Options,
    description: e.Diagnostics.Do_not_generate_custom_helper_functions_like_extends_in_compiled_output
   }, {
    name: "noEmitOnError",
    type: "boolean",
    category: e.Diagnostics.Advanced_Options,
    description: e.Diagnostics.Do_not_emit_outputs_if_any_errors_were_reported
   }, {
    name: "preserveConstEnums",
    type: "boolean",
    category: e.Diagnostics.Advanced_Options,
    description: e.Diagnostics.Do_not_erase_const_enum_declarations_in_generated_code
   }, {
    name: "declarationDir",
    type: "string",
    isFilePath: true,
    paramType: e.Diagnostics.DIRECTORY,
    category: e.Diagnostics.Advanced_Options,
    description: e.Diagnostics.Output_directory_for_generated_declaration_files
   }, {
    name: "skipLibCheck",
    type: "boolean",
    category: e.Diagnostics.Advanced_Options,
    description: e.Diagnostics.Skip_type_checking_of_declaration_files
   }, {
    name: "allowUnusedLabels",
    type: "boolean",
    category: e.Diagnostics.Advanced_Options,
    description: e.Diagnostics.Do_not_report_errors_on_unused_labels
   }, {
    name: "allowUnreachableCode",
    type: "boolean",
    category: e.Diagnostics.Advanced_Options,
    description: e.Diagnostics.Do_not_report_errors_on_unreachable_code
   }, {
    name: "suppressExcessPropertyErrors",
    type: "boolean",
    category: e.Diagnostics.Advanced_Options,
    description: e.Diagnostics.Suppress_excess_property_checks_for_object_literals
   }, {
    name: "suppressImplicitAnyIndexErrors",
    type: "boolean",
    category: e.Diagnostics.Advanced_Options,
    description: e.Diagnostics.Suppress_noImplicitAny_errors_for_indexing_objects_lacking_index_signatures
   }, {
    name: "forceConsistentCasingInFileNames",
    type: "boolean",
    category: e.Diagnostics.Advanced_Options,
    description: e.Diagnostics.Disallow_inconsistently_cased_references_to_the_same_file
   }, {
    name: "maxNodeModuleJsDepth",
    type: "number",
    category: e.Diagnostics.Advanced_Options,
    description: e.Diagnostics.The_maximum_dependency_depth_to_search_under_node_modules_and_load_JavaScript_files
   }, {
    name: "noStrictGenericChecks",
    type: "boolean",
    category: e.Diagnostics.Advanced_Options,
    description: e.Diagnostics.Disable_strict_checking_of_generic_signatures_in_function_types
   }, {
    name: "keyofStringsOnly",
    type: "boolean",
    category: e.Diagnostics.Advanced_Options,
    description: e.Diagnostics.Resolve_keyof_to_string_valued_property_names_only_no_numbers_or_symbols
   }, {
    name: "plugins",
    type: "list",
    isTSConfigOnly: true,
    element: {
     name: "plugin",
     type: "object"
    },
    description: e.Diagnostics.List_of_language_service_plugins
   } ];
   e.typeAcquisitionDeclarations = [ {
    name: "enableAutoDiscovery",
    type: "boolean"
   }, {
    name: "enable",
    type: "boolean"
   }, {
    name: "include",
    type: "list",
    element: {
     name: "include",
     type: "string"
    }
   }, {
    name: "exclude",
    type: "list",
    element: {
     name: "exclude",
     type: "string"
    }
   } ];
   e.defaultInitCompilerOptions = {
    module: e.ModuleKind.CommonJS,
    target: 1,
    strict: true,
    esModuleInterop: true
   };
   var n;
   function i(e) {
    if (e && e.enableAutoDiscovery !== undefined && e.enable === undefined) {
     return {
      enable: e.enableAutoDiscovery,
      include: e.include || [],
      exclude: e.exclude || []
     };
    }
    return e;
   }
   e.convertEnableAutoDiscoveryToEnable = i;
   function a() {
    if (n) {
     return n;
    }
    var t = e.createMap();
    var r = e.createMap();
    e.forEach(e.optionDeclarations, function(e) {
     t.set(e.name.toLowerCase(), e);
     if (e.shortName) {
      r.set(e.shortName, e.name);
     }
    });
    n = {
     optionNameMap: t,
     shortOptionNames: r
    };
    return n;
   }
   function o(t) {
    return s(t, e.createCompilerDiagnostic);
   }
   e.createCompilerDiagnosticForInvalidCustomType = o;
   function s(t, n) {
    var r = e.arrayFrom(t.type.keys()).map(function(e) {
     return "'" + e + "'";
    }).join(", ");
    return n(e.Diagnostics.Argument_for_0_option_must_be_Colon_1, "--" + t.name, r);
   }
   function c(e, t, n) {
    return Z(e, te(t || ""), n);
   }
   e.parseCustomTypeOption = c;
   function u(t, n, r) {
    if (n === void 0) {
     n = "";
    }
    n = te(n);
    if (e.startsWith(n, "-")) {
     return undefined;
    }
    if (n === "") {
     return [];
    }
    var i = n.split(",");
    switch (t.element.type) {
    case "number":
     return e.map(i, parseInt);

    case "string":
     return e.map(i, function(e) {
      return e || "";
     });

    default:
     return e.mapDefined(i, function(e) {
      return c(t.element, e, r);
     });
    }
   }
   e.parseListTypeOption = u;
   function l(t, n) {
    var r = {};
    var i = [];
    var a = undefined;
    var o = [];
    s(t);
    return {
     options: r,
     fileNames: i,
     projectReferences: a,
     errors: o
    };
    function s(t) {
     var n = 0;
     while (n < t.length) {
      var a = t[n];
      n++;
      if (a.charCodeAt(0) === 64) {
       l(a.slice(1));
      } else if (a.charCodeAt(0) === 45) {
       var s = f(a.slice(a.charCodeAt(1) === 45 ? 2 : 1), true);
       if (s) {
        if (s.isTSConfigOnly) {
         o.push(e.createCompilerDiagnostic(e.Diagnostics.Option_0_can_only_be_specified_in_tsconfig_json_file, s.name));
        } else {
         if (!t[n] && s.type !== "boolean") {
          o.push(e.createCompilerDiagnostic(e.Diagnostics.Compiler_option_0_expects_an_argument, s.name));
         }
         switch (s.type) {
         case "number":
          r[s.name] = parseInt(t[n]);
          n++;
          break;

         case "boolean":
          var d = t[n];
          r[s.name] = d !== "false";
          if (d === "false" || d === "true") {
           n++;
          }
          break;

         case "string":
          r[s.name] = t[n] || "";
          n++;
          break;

         case "list":
          var p = u(s, t[n], o);
          r[s.name] = p || [];
          if (p) {
           n++;
          }
          break;

         default:
          r[s.name] = c(s, t[n], o);
          n++;
          break;
         }
        }
       } else {
        o.push(e.createCompilerDiagnostic(e.Diagnostics.Unknown_compiler_option_0, a));
       }
      } else {
       i.push(a);
      }
     }
    }
    function l(t) {
     var r = n ? n(t) : e.sys.readFile(t);
     if (!r) {
      o.push(e.createCompilerDiagnostic(e.Diagnostics.File_0_not_found, t));
      return;
     }
     var i = [];
     var a = 0;
     while (true) {
      while (a < r.length && r.charCodeAt(a) <= 32) a++;
      if (a >= r.length) break;
      var c = a;
      if (r.charCodeAt(c) === 34) {
       a++;
       while (a < r.length && r.charCodeAt(a) !== 34) a++;
       if (a < r.length) {
        i.push(r.substring(c + 1, a));
        a++;
       } else {
        o.push(e.createCompilerDiagnostic(e.Diagnostics.Unterminated_quoted_string_in_response_file_0, t));
       }
      } else {
       while (r.charCodeAt(a) > 32) a++;
       i.push(r.substring(c, a));
      }
     }
     s(i);
    }
   }
   e.parseCommandLine = l;
   function f(e, t) {
    if (t === void 0) {
     t = false;
    }
    e = e.toLowerCase();
    var n = a(), r = n.optionNameMap, i = n.shortOptionNames;
    if (t) {
     var o = i.get(e);
     if (o !== undefined) {
      e = o;
     }
    }
    return r.get(e);
   }
   e.getOptionFromName = f;
   function d(t) {
    var n = [];
    for (var r = 1; r < arguments.length; r++) {
     n[r - 1] = arguments[r];
    }
    var i = e.createCompilerDiagnostic.apply(undefined, arguments);
    return i.messageText;
   }
   function p() {
    e.sys.write(d(e.Diagnostics.Version_0, e.version) + e.sys.newLine);
   }
   e.printVersion = p;
   function m(t, n) {
    if (n === void 0) {
     n = "";
    }
    var r = [];
    var i = d(e.Diagnostics.Syntax_Colon_0, "").length;
    var a = d(e.Diagnostics.Examples_Colon_0, "").length;
    var o = Math.max(i, a);
    var s = F(o - i);
    s += "tsc " + n + "[" + d(e.Diagnostics.options) + "] [" + d(e.Diagnostics.file) + "...]";
    r.push(d(e.Diagnostics.Syntax_Colon_0, s));
    r.push(e.sys.newLine + e.sys.newLine);
    var c = F(o);
    r.push(d(e.Diagnostics.Examples_Colon_0, F(o - a) + "tsc hello.ts") + e.sys.newLine);
    r.push(c + "tsc --outFile file.js file.ts" + e.sys.newLine);
    r.push(c + "tsc @args.txt" + e.sys.newLine);
    r.push(c + "tsc --build tsconfig.json" + e.sys.newLine);
    r.push(e.sys.newLine);
    r.push(d(e.Diagnostics.Options_Colon) + e.sys.newLine);
    o = 0;
    var u = [];
    var l = [];
    var f = e.createMap();
    for (var p = 0, m = t; p < m.length; p++) {
     var _ = m[p];
     if (!_.description) {
      continue;
     }
     var g = " ";
     if (_.shortName) {
      g += "-" + _.shortName;
      g += A(_);
      g += ", ";
     }
     g += "--" + _.name;
     g += A(_);
     u.push(g);
     var h = void 0;
     if (_.name === "lib") {
      h = d(_.description);
      var v = _.element;
      var y = v.type;
      f.set(h, e.arrayFrom(y.keys()).map(function(e) {
       return "'" + e + "'";
      }));
     } else {
      h = d(_.description);
     }
     l.push(h);
     o = Math.max(g.length, o);
    }
    var b = " @<" + d(e.Diagnostics.file) + ">";
    u.push(b);
    l.push(d(e.Diagnostics.Insert_command_line_options_and_files_from_a_file));
    o = Math.max(b.length, o);
    for (var x = 0; x < u.length; x++) {
     var k = u[x];
     var h = l[x];
     var S = f.get(h);
     r.push(k + F(o - k.length + 2) + h + e.sys.newLine);
     if (S) {
      r.push(F(o + 4));
      for (var w = 0, C = S; w < C.length; w++) {
       var D = C[w];
       r.push(D + " ");
      }
      r.push(e.sys.newLine);
     }
    }
    for (var T = 0, E = r; T < E.length; T++) {
     var N = E[T];
     e.sys.write(N);
    }
    return;
    function A(e) {
     if (e.paramType !== undefined) {
      return " " + d(e.paramType);
     }
     return "";
    }
    function F(e) {
     return Array(e + 1).join(" ");
    }
   }
   e.printHelp = m;
   function _(t, n, r) {
    var i;
    try {
     i = r.readFile(t);
    } catch (n) {
     var a = e.createCompilerDiagnostic(e.Diagnostics.Cannot_read_file_0_Colon_1, t, n.message);
     r.onUnRecoverableConfigFileDiagnostic(a);
     return undefined;
    }
    if (!i) {
     var a = e.createCompilerDiagnostic(e.Diagnostics.File_0_not_found, t);
     r.onUnRecoverableConfigFileDiagnostic(a);
     return undefined;
    }
    var o = e.parseJsonText(t, i);
    var s = r.getCurrentDirectory();
    return N(o, r, e.getNormalizedAbsolutePath(e.getDirectoryPath(t), s), n, e.getNormalizedAbsolutePath(t, s));
   }
   e.getParsedCommandLineOfConfigFile = _;
   function g(t, n) {
    var r = y(t, n);
    return e.isString(r) ? h(t, r) : {
     config: {},
     error: r
    };
   }
   e.readConfigFile = g;
   function h(t, n) {
    var r = e.parseJsonText(t, n);
    return {
     config: S(r, r.parseDiagnostics),
     error: r.parseDiagnostics.length ? r.parseDiagnostics[0] : undefined
    };
   }
   e.parseConfigFileTextToJson = h;
   function v(t, n) {
    var r = y(t, n);
    return e.isString(r) ? e.parseJsonText(t, r) : {
     parseDiagnostics: [ r ]
    };
   }
   e.readJsonConfigFile = v;
   function y(t, n) {
    var r;
    try {
     r = n(t);
    } catch (n) {
     return e.createCompilerDiagnostic(e.Diagnostics.Cannot_read_file_0_Colon_1, t, n.message);
    }
    return r === undefined ? e.createCompilerDiagnostic(e.Diagnostics.The_specified_path_does_not_exist_Colon_0, t) : r;
   }
   function b(t) {
    return e.arrayToMap(t, function(e) {
     return e.name;
    });
   }
   var x;
   function k() {
    if (x === undefined) {
     x = {
      name: undefined,
      type: "object",
      elementOptions: b([ {
       name: "compilerOptions",
       type: "object",
       elementOptions: b(e.optionDeclarations),
       extraKeyDiagnosticMessage: e.Diagnostics.Unknown_compiler_option_0
      }, {
       name: "typingOptions",
       type: "object",
       elementOptions: b(e.typeAcquisitionDeclarations),
       extraKeyDiagnosticMessage: e.Diagnostics.Unknown_type_acquisition_option_0
      }, {
       name: "typeAcquisition",
       type: "object",
       elementOptions: b(e.typeAcquisitionDeclarations),
       extraKeyDiagnosticMessage: e.Diagnostics.Unknown_type_acquisition_option_0
      }, {
       name: "extends",
       type: "string"
      }, {
       name: "references",
       type: "list",
       element: {
        name: "references",
        type: "object"
       }
      }, {
       name: "files",
       type: "list",
       element: {
        name: "files",
        type: "string"
       }
      }, {
       name: "include",
       type: "list",
       element: {
        name: "include",
        type: "string"
       }
      }, {
       name: "exclude",
       type: "list",
       element: {
        name: "exclude",
        type: "string"
       }
      }, e.compileOnSaveCommandLineOption ])
     };
    }
    return x;
   }
   function S(e, t) {
    return w(e, t, true, undefined, undefined);
   }
   e.convertToObject = S;
   function w(t, n, r, i, a) {
    if (!t.statements.length) {
     return r ? {} : undefined;
    }
    return l(t.statements[0].expression, i);
    function o(e) {
     return i && i.elementOptions === e;
    }
    function c(i, s, c, u) {
     var d = r ? {} : undefined;
     for (var p = 0, m = i.properties; p < m.length; p++) {
      var _ = m[p];
      if (_.kind !== 273) {
       n.push(e.createDiagnosticForNodeInSourceFile(t, _, e.Diagnostics.Property_assignment_expected));
       continue;
      }
      if (_.questionToken) {
       n.push(e.createDiagnosticForNodeInSourceFile(t, _.questionToken, e.Diagnostics._0_can_only_be_used_in_a_ts_file, "?"));
      }
      if (!f(_.name)) {
       n.push(e.createDiagnosticForNodeInSourceFile(t, _.name, e.Diagnostics.String_literal_with_double_quotes_expected));
      }
      var g = e.unescapeLeadingUnderscores(e.getTextOfPropertyName(_.name));
      var h = s ? s.get(g) : undefined;
      if (c && !h) {
       n.push(e.createDiagnosticForNodeInSourceFile(t, _.name, c, g));
      }
      var v = l(_.initializer, h);
      if (typeof g !== "undefined") {
       if (r) {
        d[g] = v;
       }
       if (a && (u || o(s))) {
        var y = D(h, v);
        if (u) {
         if (y) {
          a.onSetValidOptionKeyValueInParent(u, h, v);
         }
        } else if (o(s)) {
         if (y) {
          a.onSetValidOptionKeyValueInRoot(g, _.name, v, _.initializer);
         } else if (!h) {
          a.onSetUnknownOptionKeyValueInRoot(g, _.name, v, _.initializer);
         }
        }
       }
      }
     }
     return d;
    }
    function u(e, t) {
     return (r ? e.map : e.forEach).call(e, function(e) {
      return l(e, t);
     });
    }
    function l(r, i) {
     switch (r.kind) {
     case 101:
      g(i && i.type !== "boolean");
      return true;

     case 86:
      g(i && i.type !== "boolean");
      return false;

     case 95:
      g(i && i.name === "extends");
      return null;

     case 9:
      if (!f(r)) {
       n.push(e.createDiagnosticForNodeInSourceFile(t, r, e.Diagnostics.String_literal_with_double_quotes_expected));
      }
      g(i && (e.isString(i.type) && i.type !== "string"));
      var a = r.text;
      if (i && !e.isString(i.type)) {
       var o = i;
       if (!o.type.has(a.toLowerCase())) {
        n.push(s(o, function(n, i, a) {
         return e.createDiagnosticForNodeInSourceFile(t, r, n, i, a);
        }));
       }
      }
      return a;

     case 8:
      g(i && i.type !== "number");
      return Number(r.text);

     case 200:
      if (r.operator !== 38 || r.operand.kind !== 8) {
       break;
      }
      g(i && i.type !== "number");
      return -Number(r.operand.text);

     case 186:
      g(i && i.type !== "object");
      var l = r;
      if (i) {
       var d = i, p = d.elementOptions, m = d.extraKeyDiagnosticMessage, _ = d.name;
       return c(l, p, m, _);
      } else {
       return c(l, undefined, undefined, undefined);
      }

     case 185:
      g(i && i.type !== "list");
      return u(r.elements, i && i.element);
     }
     if (i) {
      g(true);
     } else {
      n.push(e.createDiagnosticForNodeInSourceFile(t, r, e.Diagnostics.Property_value_can_only_be_string_literal_numeric_literal_true_false_null_object_literal_or_array_literal));
     }
     return undefined;
     function g(a) {
      if (a) {
       n.push(e.createDiagnosticForNodeInSourceFile(t, r, e.Diagnostics.Compiler_option_0_requires_a_value_of_type_1, i.name, C(i)));
      }
     }
    }
    function f(n) {
     return e.isStringLiteral(n) && e.isStringDoubleQuoted(n, t);
    }
   }
   e.convertToObjectWorker = w;
   function C(t) {
    return t.type === "list" ? "Array" : e.isString(t.type) ? t.type : "string";
   }
   function D(t, n) {
    if (t) {
     if (F(n)) return true;
     if (t.type === "list") {
      return e.isArray(n);
     }
     var r = e.isString(t.type) ? t.type : "string";
     return typeof n === r;
    }
    return false;
   }
   function T(t, n, r) {
    var i = e.extend(t, e.defaultInitCompilerOptions);
    var o = u(i);
    return p();
    function s(e) {
     if (e.type === "string" || e.type === "number" || e.type === "boolean") {
      return undefined;
     } else if (e.type === "list") {
      return s(e.element);
     } else {
      return e.type;
     }
    }
    function c(t, n) {
     return e.forEachEntry(n, function(e, n) {
      if (e === t) {
       return n;
      }
     });
    }
    function u(t) {
     var n = e.createMap();
     var r = a().optionNameMap;
     var i = function(i) {
      if (e.hasProperty(t, i)) {
       if (r.has(i) && r.get(i).category === e.Diagnostics.Command_line_Options) {
        return "continue";
       }
       var a = t[i];
       var o = r.get(i.toLowerCase());
       if (o) {
        var u = s(o);
        if (!u) {
         n.set(i, a);
        } else {
         if (o.type === "list") {
          n.set(i, a.map(function(e) {
           return c(e, u);
          }));
         } else {
          n.set(i, c(a, u));
         }
        }
       }
      }
     };
     for (var o in t) {
      i(o);
     }
     return n;
    }
    function l(e) {
     switch (e.type) {
     case "number":
      return 1;

     case "boolean":
      return true;

     case "string":
      return e.isFilePath ? "./" : "";

     case "list":
      return [];

     case "object":
      return {};

     default:
      return e.type.keys().next().value;
     }
    }
    function f(e) {
     return Array(e + 1).join(" ");
    }
    function d(t) {
     var n = t.category, r = t.name;
     return n !== undefined && n !== e.Diagnostics.Command_line_Options && (n !== e.Diagnostics.Advanced_Options || o.has(r));
    }
    function p() {
     var t = e.createMultiMap();
     for (var i = 0, a = e.optionDeclarations; i < a.length; i++) {
      var s = a[i];
      var c = s.category;
      if (d(s)) {
       t.add(e.getLocaleSpecificMessage(c), s);
      }
     }
     var u = 0;
     var p = 0;
     var m = [];
     var _ = [];
     t.forEach(function(t, n) {
      if (m.length !== 0) {
       m.push("");
       _.push("");
      }
      m.push("/* " + n + " */");
      _.push("");
      for (var r = 0, i = t; r < i.length; r++) {
       var a = i[r];
       var s = void 0;
       if (o.has(a.name)) {
        s = '"' + a.name + '": ' + JSON.stringify(o.get(a.name)) + ((p += 1) === o.size ? "" : ",");
       } else {
        s = '// "' + a.name + '": ' + JSON.stringify(l(a)) + ",";
       }
       m.push(s);
       _.push("/* " + (a.description && e.getLocaleSpecificMessage(a.description) || a.name) + " */");
       u = Math.max(s.length, u);
      }
     });
     var g = f(2);
     var h = [];
     h.push("{");
     h.push(g + '"compilerOptions": {');
     for (var v = 0; v < m.length; v++) {
      var y = m[v];
      var b = _[v];
      h.push(y && "" + g + g + y + (b && f(u - y.length + 2) + b));
     }
     if (n.length) {
      h.push(g + "},");
      h.push(g + '"files": [');
      for (var v = 0; v < n.length; v++) {
       h.push("" + g + g + JSON.stringify(n[v]) + (v === n.length - 1 ? "" : ","));
      }
      h.push(g + "]");
     } else {
      h.push(g + "}");
     }
     h.push("}");
     return h.join(r);
    }
   }
   e.generateTSConfig = T;
   function E(e, t, n, r, i, a, o) {
    return I(e, undefined, t, n, r, i, a, o);
   }
   e.parseJsonConfigFileContent = E;
   function N(e, t, n, r, i, a, o) {
    return I(undefined, e, t, n, r, i, a, o);
   }
   e.parseJsonSourceFileConfigFileContent = N;
   function A(e, t) {
    if (t) {
     Object.defineProperty(e, "configFile", {
      enumerable: false,
      writable: false,
      value: t
     });
    }
   }
   e.setConfigFileInOptions = A;
   function F(e) {
    return e === undefined || e === null;
   }
   function P(t, n) {
    return e.getDirectoryPath(e.getNormalizedAbsolutePath(t, n));
   }
   function I(t, n, r, i, a, o, s, c) {
    if (a === void 0) {
     a = {};
    }
    if (s === void 0) {
     s = [];
    }
    if (c === void 0) {
     c = [];
    }
    e.Debug.assert(t === undefined && n !== undefined || t !== undefined && n === undefined);
    var u = [];
    var l = R(t, n, r, i, o, s, u);
    var f = l.raw;
    var d = e.extend(a, l.options || {});
    d.configFilePath = o && e.normalizeSlashes(o);
    A(d, n);
    var p = v(), m = p.fileNames, _ = p.wildcardDirectories, g = p.spec, h = p.projectReferences;
    return {
     options: d,
     fileNames: m,
     projectReferences: h,
     typeAcquisition: l.typeAcquisition || H(),
     raw: f,
     errors: u,
     wildcardDirectories: _,
     compileOnSave: !!f.compileOnSave,
     configFileSpecs: g
    };
    function v() {
     var t;
     if (e.hasProperty(f, "files") && !F(f.files)) {
      if (e.isArray(f.files)) {
       t = f.files;
       if (t.length === 0) {
        y(e.Diagnostics.The_files_list_in_config_file_0_is_empty, o || "tsconfig.json");
       }
      } else {
       y(e.Diagnostics.Compiler_option_0_requires_a_value_of_type_1, "files", "Array");
      }
     }
     var a;
     if (e.hasProperty(f, "include") && !F(f.include)) {
      if (e.isArray(f.include)) {
       a = f.include;
      } else {
       y(e.Diagnostics.Compiler_option_0_requires_a_value_of_type_1, "include", "Array");
      }
     }
     var l;
     if (e.hasProperty(f, "exclude") && !F(f.exclude)) {
      if (e.isArray(f.exclude)) {
       l = f.exclude;
      } else {
       y(e.Diagnostics.Compiler_option_0_requires_a_value_of_type_1, "exclude", "Array");
      }
     } else if (f.compilerOptions) {
      var p = f.compilerOptions.outDir;
      var m = f.compilerOptions.declarationDir;
      if (p || m) {
       l = [ p, m ].filter(function(e) {
        return !!e;
       });
      }
     }
     if (t === undefined && a === undefined) {
      a = [ "**/*" ];
     }
     var _ = oe(t, a, l, o ? P(o, i) : i, d, r, u, c, n);
     if (_.fileNames.length === 0 && !e.hasProperty(f, "files") && s.length === 0 && !e.hasProperty(f, "references")) {
      u.push(M(_.spec, o));
     }
     if (e.hasProperty(f, "references") && !F(f.references)) {
      if (e.isArray(f.references)) {
       var g = [];
       for (var h = 0, v = f.references; h < v.length; h++) {
        var b = v[h];
        if (typeof b.path !== "string") {
         y(e.Diagnostics.Compiler_option_0_requires_a_value_of_type_1, "reference.path", "string");
        } else {
         g.push({
          path: e.getNormalizedAbsolutePath(b.path, i),
          originalPath: b.path,
          prepend: b.prepend,
          circular: b.circular
         });
        }
       }
       _.projectReferences = g;
      } else {
       y(e.Diagnostics.Compiler_option_0_requires_a_value_of_type_1, "references", "Array");
      }
     }
     return _;
    }
    function y(t, r, i) {
     if (!n) {
      u.push(e.createCompilerDiagnostic(t, r, i));
     }
    }
   }
   function O(t) {
    return t.code === e.Diagnostics.No_inputs_were_found_in_config_file_0_Specified_include_paths_were_1_and_exclude_paths_were_2.code;
   }
   e.isErrorNoInputFiles = O;
   function M(t, n) {
    var r = t.includeSpecs, i = t.excludeSpecs;
    return e.createCompilerDiagnostic(e.Diagnostics.No_inputs_were_found_in_config_file_0_Specified_include_paths_were_1_and_exclude_paths_were_2, n || "tsconfig.json", JSON.stringify(r || []), JSON.stringify(i || []));
   }
   e.getErrorForNoInputFiles = M;
   function L(e) {
    return !!e.options;
   }
   function R(t, n, r, i, a, o, s) {
    i = e.normalizeSlashes(i);
    var c = e.getNormalizedAbsolutePath(a || "", i);
    if (o.indexOf(c) >= 0) {
     s.push(e.createCompilerDiagnostic(e.Diagnostics.Circularity_detected_while_resolving_configuration_Colon_0, o.concat([ c ]).join(" -> ")));
     return {
      raw: t || S(n, s)
     };
    }
    var u = t ? B(t, r, i, a, s) : z(n, r, i, a, s);
    if (u.extendedConfigPath) {
     o = o.concat([ c ]);
     var l = q(n, u.extendedConfigPath, r, i, o, s);
     if (l && L(l)) {
      var f = l.raw;
      var d = u.raw;
      var p = function(e) {
       var t = d[e] || f[e];
       if (t) {
        d[e] = t;
       }
      };
      p("include");
      p("exclude");
      p("files");
      if (d.compileOnSave === undefined) {
       d.compileOnSave = f.compileOnSave;
      }
      u.options = e.assign({}, l.options, u.options);
     }
    }
    return u;
   }
   function B(t, n, r, i, a) {
    if (e.hasProperty(t, "excludes")) {
     a.push(e.createCompilerDiagnostic(e.Diagnostics.Unknown_option_excludes_Did_you_mean_exclude));
    }
    var o = W(t.compilerOptions, r, a, i);
    var s = G(t.typeAcquisition || t.typingOptions, r, a, i);
    t.compileOnSave = U(t, r, a);
    var c;
    if (t.extends) {
     if (!e.isString(t.extends)) {
      a.push(e.createCompilerDiagnostic(e.Diagnostics.Compiler_option_0_requires_a_value_of_type_1, "extends", "string"));
     } else {
      var u = i ? P(i, r) : r;
      c = j(t.extends, n, u, a, e.createCompilerDiagnostic);
     }
    }
    return {
     raw: t,
     options: o,
     typeAcquisition: s,
     extendedConfigPath: c
    };
   }
   function z(t, n, r, i, a) {
    var o = V(i);
    var s, c;
    var u;
    var l = {
     onSetValidOptionKeyValueInParent: function(t, n, a) {
      e.Debug.assert(t === "compilerOptions" || t === "typeAcquisition" || t === "typingOptions");
      var u = t === "compilerOptions" ? o : t === "typeAcquisition" ? s || (s = H(i)) : c || (c = H(i));
      u[n.name] = Q(n, r, a);
     },
     onSetValidOptionKeyValueInRoot: function(o, s, c, l) {
      switch (o) {
      case "extends":
       var f = i ? P(i, r) : r;
       u = j(c, n, f, a, function(n, r) {
        return e.createDiagnosticForNodeInSourceFile(t, l, n, r);
       });
       return;

      case "files":
       if (c.length === 0) {
        a.push(e.createDiagnosticForNodeInSourceFile(t, l, e.Diagnostics.The_files_list_in_config_file_0_is_empty, i || "tsconfig.json"));
       }
       return;
      }
     },
     onSetUnknownOptionKeyValueInRoot: function(n, r, i, o) {
      if (n === "excludes") {
       a.push(e.createDiagnosticForNodeInSourceFile(t, r, e.Diagnostics.Unknown_option_excludes_Did_you_mean_exclude));
      }
     }
    };
    var f = w(t, a, true, k(), l);
    if (!s) {
     if (c) {
      s = c.enableAutoDiscovery !== undefined ? {
       enable: c.enableAutoDiscovery,
       include: c.include,
       exclude: c.exclude
      } : c;
     } else {
      s = H(i);
     }
    }
    return {
     raw: f,
     options: o,
     typeAcquisition: s,
     extendedConfigPath: u
    };
   }
   function j(t, n, r, i, a) {
    t = e.normalizeSlashes(t);
    if (!(e.isRootedDiskPath(t) || e.startsWith(t, "./") || e.startsWith(t, "../"))) {
     i.push(a(e.Diagnostics.A_path_in_an_extends_option_must_be_relative_or_rooted_but_0_is_not, t));
     return undefined;
    }
    var o = e.getNormalizedAbsolutePath(t, r);
    if (!n.fileExists(o) && !e.endsWith(o, ".json")) {
     o = o + ".json";
     if (!n.fileExists(o)) {
      i.push(a(e.Diagnostics.File_0_does_not_exist, t));
      return undefined;
     }
    }
    return o;
   }
   function q(t, n, r, i, a, o) {
    var s;
    var c = v(n, function(e) {
     return r.readFile(e);
    });
    if (t) {
     (t.extendedSourceFiles || (t.extendedSourceFiles = [])).push(c.fileName);
    }
    if (c.parseDiagnostics.length) {
     o.push.apply(o, c.parseDiagnostics);
     return undefined;
    }
    var u = e.getDirectoryPath(n);
    var l = R(undefined, c, r, u, e.getBaseFileName(n), a, o);
    if (t) {
     (s = t.extendedSourceFiles).push.apply(s, c.extendedSourceFiles);
    }
    if (L(l)) {
     var f = e.convertToRelativePath(u, i, e.identity);
     var d = function(t) {
      return e.isRootedDiskPath(t) ? t : e.combinePaths(f, t);
     };
     var p = function(t) {
      if (m[t]) {
       m[t] = e.map(m[t], d);
      }
     };
     var m = l.raw;
     p("include");
     p("exclude");
     p("files");
    }
    return l;
   }
   function U(t, n, r) {
    if (!e.hasProperty(t, e.compileOnSaveCommandLineOption.name)) {
     return false;
    }
    var i = X(e.compileOnSaveCommandLineOption, t.compileOnSave, n, r);
    return typeof i === "boolean" && i;
   }
   function J(e, t, n) {
    var r = [];
    var i = W(e, t, r, n);
    return {
     options: i,
     errors: r
    };
   }
   e.convertCompilerOptionsFromJson = J;
   function K(e, t, n) {
    var r = [];
    var i = G(e, t, r, n);
    return {
     options: i,
     errors: r
    };
   }
   e.convertTypeAcquisitionFromJson = K;
   function V(t) {
    var n = t && e.getBaseFileName(t) === "jsconfig.json" ? {
     allowJs: true,
     maxNodeModuleJsDepth: 2,
     allowSyntheticDefaultImports: true,
     skipLibCheck: true,
     noEmit: true
    } : {};
    return n;
   }
   function W(t, n, r, i) {
    var a = V(i);
    $(e.optionDeclarations, t, n, a, e.Diagnostics.Unknown_compiler_option_0, r);
    if (i) {
     a.configFilePath = e.normalizeSlashes(i);
    }
    return a;
   }
   function H(t) {
    return {
     enable: !!t && e.getBaseFileName(t) === "jsconfig.json",
     include: [],
     exclude: []
    };
   }
   function G(t, n, r, a) {
    var o = H(a);
    var s = i(t);
    $(e.typeAcquisitionDeclarations, s, n, o, e.Diagnostics.Unknown_type_acquisition_option_0, r);
    return o;
   }
   function $(t, n, r, i, a, o) {
    if (!n) {
     return;
    }
    var s = b(t);
    for (var c in n) {
     var u = s.get(c);
     if (u) {
      i[u.name] = X(u, n[c], r, o);
     } else {
      o.push(e.createCompilerDiagnostic(a, c));
     }
    }
   }
   function X(t, n, r, i) {
    if (D(t, n)) {
     var a = t.type;
     if (a === "list" && e.isArray(n)) {
      return ee(t, n, r, i);
     } else if (!e.isString(a)) {
      return Z(t, n, i);
     }
     return Y(t, r, n);
    } else {
     i.push(e.createCompilerDiagnostic(e.Diagnostics.Compiler_option_0_requires_a_value_of_type_1, t.name, C(t)));
    }
   }
   function Q(t, n, r) {
    if (F(r)) return undefined;
    if (t.type === "list") {
     var i = t;
     if (i.element.isFilePath || !e.isString(i.element.type)) {
      return e.filter(e.map(r, function(e) {
       return Q(i.element, n, e);
      }), function(e) {
       return !!e;
      });
     }
     return r;
    } else if (!e.isString(t.type)) {
     return t.type.get(e.isString(r) ? r.toLowerCase() : r);
    }
    return Y(t, n, r);
   }
   function Y(t, n, r) {
    if (t.isFilePath) {
     r = e.normalizePath(e.combinePaths(n, r));
     if (r === "") {
      r = ".";
     }
    }
    return r;
   }
   function Z(e, t, n) {
    if (F(t)) return undefined;
    var r = t.toLowerCase();
    var i = e.type.get(r);
    if (i !== undefined) {
     return i;
    } else {
     n.push(o(e));
    }
   }
   function ee(t, n, r, i) {
    return e.filter(e.map(n, function(e) {
     return X(t.element, e, r, i);
    }), function(e) {
     return !!e;
    });
   }
   function te(e) {
    return typeof e.trim === "function" ? e.trim() : e.replace(/^[\s]+|[\s]+$/g, "");
   }
   var ne = /(^|\/)\*\*\/?$/;
   var re = /(^|\/)\*\*\/(.*\/)?\.\.($|\/)/;
   var ie = /\/[^/]*?[*?][^/]*\//;
   var ae = /^[^*?]*(?=\/[^/]*[*?])/;
   function oe(t, n, r, i, a, o, s, c, u) {
    i = e.normalizePath(i);
    var l, f;
    if (n) {
     l = ce(n, s, false, u, "include");
    }
    if (r) {
     f = ce(r, s, true, u, "exclude");
    }
    var d = le(l, f, i, o.useCaseSensitiveFileNames);
    var p = {
     filesSpecs: t,
     referencesSpecs: undefined,
     includeSpecs: n,
     excludeSpecs: r,
     validatedIncludeSpecs: l,
     validatedExcludeSpecs: f,
     wildcardDirectories: d
    };
    return se(p, i, a, o, c);
   }
   function se(t, n, i, a, o) {
    if (o === void 0) {
     o = [];
    }
    n = e.normalizePath(n);
    var s = a.useCaseSensitiveFileNames ? e.identity : e.toLowerCase;
    var c = e.createMap();
    var u = e.createMap();
    var l = t.filesSpecs, f = t.validatedIncludeSpecs, d = t.validatedExcludeSpecs, p = t.wildcardDirectories;
    var m = e.getSupportedExtensions(i, o);
    if (l) {
     for (var _ = 0, g = l; _ < g.length; _++) {
      var h = g[_];
      var v = e.getNormalizedAbsolutePath(h, n);
      c.set(s(v), v);
     }
    }
    if (f && f.length > 0) {
     for (var y = 0, b = a.readDirectory(n, m, d, f, undefined); y < b.length; y++) {
      var v = b[y];
      if (de(v, c, u, m, s)) {
       continue;
      }
      pe(v, u, m, s);
      var x = s(v);
      if (!c.has(x) && !u.has(x)) {
       u.set(x, v);
      }
     }
    }
    var k = e.arrayFrom(c.values());
    var S = e.arrayFrom(u.values());
    var w = t.referencesSpecs && t.referencesSpecs.map(function(t) {
     return r({}, t, {
      path: e.getNormalizedAbsolutePath(t.path, n)
     });
    });
    return {
     fileNames: k.concat(S),
     projectReferences: w,
     wildcardDirectories: p,
     spec: t
    };
   }
   e.getFileNamesFromConfigSpecs = se;
   function ce(t, n, r, i, a) {
    return t.filter(function(e) {
     var t = ue(e, r);
     if (t !== undefined) {
      n.push(o(t, e));
     }
     return t === undefined;
    });
    function o(t, n) {
     var r = e.getTsConfigPropArrayElementValue(i, a, n);
     return r ? e.createDiagnosticForNodeInSourceFile(i, r, t, n) : e.createCompilerDiagnostic(t, n);
    }
   }
   function ue(t, n) {
    if (!n && ne.test(t)) {
     return e.Diagnostics.File_specification_cannot_end_in_a_recursive_directory_wildcard_Asterisk_Asterisk_Colon_0;
    } else if (re.test(t)) {
     return e.Diagnostics.File_specification_cannot_contain_a_parent_directory_that_appears_after_a_recursive_directory_wildcard_Asterisk_Asterisk_Colon_0;
    }
   }
   function le(t, n, r, i) {
    var a = e.getRegularExpressionForWildcard(n, r, "exclude");
    var o = a && new RegExp(a, i ? "" : "i");
    var s = {};
    if (t !== undefined) {
     var c = [];
     for (var u = 0, l = t; u < l.length; u++) {
      var f = l[u];
      var d = e.normalizePath(e.combinePaths(r, f));
      if (o && o.test(d)) {
       continue;
      }
      var p = fe(d, i);
      if (p) {
       var m = p.key, _ = p.flags;
       var g = s[m];
       if (g === undefined || g < _) {
        s[m] = _;
        if (_ === 1) {
         c.push(m);
        }
       }
      }
     }
     for (var m in s) {
      if (e.hasProperty(s, m)) {
       for (var h = 0, v = c; h < v.length; h++) {
        var y = v[h];
        if (m !== y && e.containsPath(y, m, r, !i)) {
         delete s[m];
        }
       }
      }
     }
    }
    return s;
   }
   function fe(t, n) {
    var r = ae.exec(t);
    if (r) {
     return {
      key: n ? r[0] : r[0].toLowerCase(),
      flags: ie.test(t) ? 1 : 0
     };
    }
    if (e.isImplicitGlob(t)) {
     return {
      key: t,
      flags: 1
     };
    }
    return undefined;
   }
   function de(t, n, r, i, a) {
    var o = e.getExtensionPriority(t, i);
    var s = e.adjustExtensionPriority(o, i);
    for (var c = 0; c < s; c++) {
     var u = i[c];
     var l = a(e.changeExtension(t, u));
     if (n.has(l) || r.has(l)) {
      return true;
     }
    }
    return false;
   }
   function pe(t, n, r, i) {
    var a = e.getExtensionPriority(t, r);
    var o = e.getNextLowestExtensionPriority(a, r);
    for (var s = o; s < r.length; s++) {
     var c = r[s];
     var u = i(e.changeExtension(t, c));
     n.delete(u);
    }
   }
   function me(e) {
    var t = {};
    for (var n in e) {
     if (e.hasOwnProperty(n)) {
      var r = f(n);
      if (r !== undefined) {
       t[n] = _e(e[n], r);
      }
     }
    }
    return t;
   }
   e.convertCompilerOptionsForTelemetry = me;
   function _e(t, n) {
    switch (n.type) {
    case "object":
     return "";

    case "string":
     return "";

    case "number":
     return typeof t === "number" ? t : "";

    case "boolean":
     return typeof t === "boolean" ? t : "";

    case "list":
     var r = n.element;
     return e.isArray(t) ? t.map(function(e) {
      return _e(e, r);
     }) : "";

    default:
     return e.forEachEntry(n.type, function(e, n) {
      if (e === t) {
       return n;
      }
     });
    }
   }
  })(s || (s = {}));
  var s;
  (function(e) {
   function t(t) {
    t.trace(e.formatMessage.apply(undefined, arguments));
   }
   e.trace = t;
   function n(e, t) {
    return !!e.traceResolution && t.trace !== undefined;
   }
   e.isTraceEnabled = n;
   function i(e, t) {
    return t && {
     path: t.path,
     extension: t.ext,
     packageId: e
    };
   }
   function a(e) {
    return i(undefined, e);
   }
   var o;
   (function(e) {
    e[e["TypeScript"] = 0] = "TypeScript";
    e[e["JavaScript"] = 1] = "JavaScript";
    e[e["Json"] = 2] = "Json";
    e[e["DtsOnly"] = 3] = "DtsOnly";
   })(o || (o = {}));
   function s(t) {
    if (!t) {
     return undefined;
    }
    e.Debug.assert(e.extensionIsTypeScript(t.extension));
    return {
     fileName: t.path,
     packageId: t.packageId
    };
   }
   function c(e, t, n, r) {
    return {
     resolvedModule: e && {
      resolvedFileName: e.path,
      originalPath: t,
      extension: e.extension,
      isExternalLibraryImport: n,
      packageId: e.packageId
     },
     failedLookupLocations: r
    };
   }
   function u(n, r, i, a) {
    return n ? o("typings") || o("types") : o("main");
    function o(n) {
     if (!e.hasProperty(r, n)) {
      if (a.traceEnabled) {
       t(a.host, e.Diagnostics.package_json_does_not_have_a_0_field, n);
      }
      return;
     }
     var o = r[n];
     if (!e.isString(o)) {
      if (a.traceEnabled) {
       t(a.host, e.Diagnostics.Expected_type_of_0_field_in_package_json_to_be_string_got_1, n, typeof o);
      }
      return;
     }
     var s = e.normalizePath(e.combinePaths(i, o));
     if (a.traceEnabled) {
      t(a.host, e.Diagnostics.package_json_has_0_field_1_that_references_2, n, o, s);
     }
     return s;
    }
   }
   function l(t, n) {
    try {
     var r = n.readFile(t);
     if (!r) return {};
     var i = e.parseConfigFileTextToJson(t, r);
     if (i.error) {
      return {};
     }
     return i.config;
    } catch (e) {
     return {};
    }
   }
   e.readJson = l;
   function f(t, n) {
    if (t.typeRoots) {
     return t.typeRoots;
    }
    var r;
    if (t.configFilePath) {
     r = e.getDirectoryPath(t.configFilePath);
    } else if (n.getCurrentDirectory) {
     r = n.getCurrentDirectory();
    }
    if (r !== undefined) {
     return d(r, n);
    }
   }
   e.getEffectiveTypeRoots = f;
   function d(t, n) {
    if (!n.directoryExists) {
     return [ e.combinePaths(t, p) ];
    }
    var r;
    e.forEachAncestorDirectory(e.normalizePath(t), function(t) {
     var i = e.combinePaths(t, p);
     if (n.directoryExists(i)) {
      (r || (r = [])).push(i);
     }
     return undefined;
    });
    return r;
   }
   var p = e.combinePaths("node_modules", "@types");
   function m(i, a, c, u) {
    var l = n(c, u);
    var d = {
     compilerOptions: c,
     host: u,
     traceEnabled: l
    };
    var p = f(c, u);
    if (l) {
     if (a === undefined) {
      if (p === undefined) {
       t(u, e.Diagnostics.Resolving_type_reference_directive_0_containing_file_not_set_root_directory_not_set, i);
      } else {
       t(u, e.Diagnostics.Resolving_type_reference_directive_0_containing_file_not_set_root_directory_1, i, p);
      }
     } else {
      if (p === undefined) {
       t(u, e.Diagnostics.Resolving_type_reference_directive_0_containing_file_1_root_directory_not_set, i, a);
      } else {
       t(u, e.Diagnostics.Resolving_type_reference_directive_0_containing_file_1_root_directory_2, i, a, p);
      }
     }
    }
    var m = [];
    var _ = v();
    var g = true;
    if (!_) {
     _ = y();
     g = false;
    }
    var h;
    if (_) {
     if (!c.preserveSymlinks) {
      _ = r({}, _, {
       fileName: D(_.fileName, u, l)
      });
     }
     if (l) {
      t(u, e.Diagnostics.Type_reference_directive_0_was_successfully_resolved_to_1_primary_Colon_2, i, _.fileName, g);
     }
     h = {
      primary: g,
      resolvedFileName: _.fileName,
      packageId: _.packageId
     };
    }
    return {
     resolvedTypeReferenceDirective: h,
     failedLookupLocations: m
    };
    function v() {
     if (p && p.length) {
      if (l) {
       t(u, e.Diagnostics.Resolving_with_primary_search_path_0, p.join(", "));
      }
      return e.forEach(p, function(n) {
       var r = e.combinePaths(n, i);
       var a = e.getDirectoryPath(r);
       var c = P(a, u);
       if (!c && l) {
        t(u, e.Diagnostics.Directory_0_does_not_exist_skipping_all_lookups_in_it, a);
       }
       return s(R(o.DtsOnly, r, m, !c, d));
      });
     } else {
      if (l) {
       t(u, e.Diagnostics.Root_directory_cannot_be_determined_skipping_primary_search_paths);
      }
     }
    }
    function y() {
     var n = a && e.getDirectoryPath(a);
     if (n !== undefined) {
      if (l) {
       t(u, e.Diagnostics.Looking_up_in_node_modules_folder_initial_location_0, n);
      }
      var r = W(o.DtsOnly, i, n, m, d, undefined);
      var c = s(r && r.value);
      if (!c && l) {
       t(u, e.Diagnostics.Type_reference_directive_0_was_not_resolved, i);
      }
      return c;
     } else {
      if (l) {
       t(u, e.Diagnostics.Containing_file_is_not_specified_and_root_directory_cannot_be_determined_skipping_lookup_in_node_modules_folder);
      }
     }
    }
   }
   e.resolveTypeReferenceDirective = m;
   function _(t, n) {
    if (t.types) {
     return t.types;
    }
    var r = [];
    if (n.directoryExists && n.getDirectories) {
     var i = f(t, n);
     if (i) {
      for (var a = 0, o = i; a < o.length; a++) {
       var s = o[a];
       if (n.directoryExists(s)) {
        for (var c = 0, u = n.getDirectories(s); c < u.length; c++) {
         var d = u[c];
         var p = e.normalizePath(d);
         var m = J(e.combinePaths(s, p));
         var _ = n.fileExists(m) && l(m, n).typings === null;
         if (!_) {
          r.push(e.getBaseFileName(p));
         }
        }
       }
      }
     }
    }
    return r;
   }
   e.getAutomaticTypeDirectiveNames = _;
   function g(t, n) {
    return h(e.createMap(), e.createMap(), t, n);
   }
   e.createModuleResolutionCache = g;
   function h(t, n, r, i) {
    return {
     getOrCreateCacheForDirectory: a,
     getOrCreateCacheForModuleName: o
    };
    function a(n) {
     var a = e.toPath(n, r, i);
     var o = t.get(a);
     if (!o) {
      o = e.createMap();
      t.set(a, o);
     }
     return o;
    }
    function o(t) {
     if (e.isExternalModuleNameRelative(t)) {
      return undefined;
     }
     var r = n.get(t);
     if (!r) {
      r = s();
      n.set(t, r);
     }
     return r;
    }
    function s() {
     var t = e.createMap();
     return {
      get: n,
      set: a
     };
     function n(n) {
      return t.get(e.toPath(n, r, i));
     }
     function a(n, a) {
      var s = e.toPath(n, r, i);
      if (t.has(s)) {
       return;
      }
      t.set(s, a);
      var c = a.resolvedModule && a.resolvedModule.resolvedFileName;
      var u = o(s, c);
      var l = s;
      while (true) {
       var f = e.getDirectoryPath(l);
       if (f === l || t.has(f)) {
        break;
       }
       t.set(f, a);
       l = f;
       if (l === u) {
        break;
       }
      }
     }
     function o(t, n) {
      if (n === undefined) {
       return undefined;
      }
      var a = e.toPath(e.getDirectoryPath(n), r, i);
      var o = 0;
      while (o < Math.min(t.length, a.length) && t.charCodeAt(o) === a.charCodeAt(o)) {
       o++;
      }
      var s = t.lastIndexOf(e.directorySeparator, o);
      if (s < 0) {
       return undefined;
      }
      return t.substr(0, s);
     }
    }
   }
   e.createModuleResolutionCacheWithMaps = h;
   function v(t, n, r) {
    var i = e.getDirectoryPath(n);
    var a = r && r.getOrCreateCacheForDirectory(i);
    return a && a.get(t);
   }
   e.resolveModuleNameFromCache = v;
   function y(r, i, a, o, s) {
    var c = n(a, o);
    if (c) {
     t(o, e.Diagnostics.Resolving_module_0_from_1, r, i);
    }
    var u = e.getDirectoryPath(i);
    var l = s && s.getOrCreateCacheForDirectory(u);
    var f = l && l.get(r);
    if (f) {
     if (c) {
      t(o, e.Diagnostics.Resolution_for_module_0_was_found_in_cache_from_location_1, r, u);
     }
    } else {
     var d = a.moduleResolution;
     if (d === undefined) {
      d = e.getEmitModuleKind(a) === e.ModuleKind.CommonJS ? e.ModuleResolutionKind.NodeJs : e.ModuleResolutionKind.Classic;
      if (c) {
       t(o, e.Diagnostics.Module_resolution_kind_is_not_specified_using_0, e.ModuleResolutionKind[d]);
      }
     } else {
      if (c) {
       t(o, e.Diagnostics.Explicitly_specified_module_resolution_kind_Colon_0, e.ModuleResolutionKind[d]);
      }
     }
     switch (d) {
     case e.ModuleResolutionKind.NodeJs:
      f = S(r, i, a, o, s);
      break;

     case e.ModuleResolutionKind.Classic:
      f = re(r, i, a, o, s);
      break;

     default:
      return e.Debug.fail("Unexpected moduleResolution: " + d);
     }
     if (l) {
      l.set(r, f);
      var p = s.getOrCreateCacheForModuleName(r);
      if (p) {
       p.set(u, f);
      }
     }
    }
    if (c) {
     if (f.resolvedModule) {
      t(o, e.Diagnostics.Module_name_0_was_successfully_resolved_to_1, r, f.resolvedModule.resolvedFileName);
     } else {
      t(o, e.Diagnostics.Module_name_0_was_not_resolved, r);
     }
    }
    return f;
   }
   e.resolveModuleName = y;
   function b(t, n, r, i, a, o) {
    if (!e.isExternalModuleNameRelative(n)) {
     return k(t, n, i, a, o);
    } else {
     return x(t, n, r, i, a, o);
    }
   }
   function x(n, r, i, a, o, s) {
    if (!s.compilerOptions.rootDirs) {
     return undefined;
    }
    if (s.traceEnabled) {
     t(s.host, e.Diagnostics.rootDirs_option_is_set_using_it_to_resolve_relative_module_name_0, r);
    }
    var c = e.normalizePath(e.combinePaths(i, r));
    var u;
    var l;
    for (var f = 0, d = s.compilerOptions.rootDirs; f < d.length; f++) {
     var p = d[f];
     var m = e.normalizePath(p);
     if (!e.endsWith(m, e.directorySeparator)) {
      m += e.directorySeparator;
     }
     var _ = e.startsWith(c, m) && (l === undefined || l.length < m.length);
     if (s.traceEnabled) {
      t(s.host, e.Diagnostics.Checking_if_0_is_the_longest_matching_prefix_for_1_2, m, c, _);
     }
     if (_) {
      l = m;
      u = p;
     }
    }
    if (l) {
     if (s.traceEnabled) {
      t(s.host, e.Diagnostics.Longest_matching_prefix_for_0_is_1, c, l);
     }
     var g = c.substr(l.length);
     if (s.traceEnabled) {
      t(s.host, e.Diagnostics.Loading_0_from_the_root_dir_1_candidate_location_2, g, l, c);
     }
     var h = a(n, c, o, !P(i, s.host), s);
     if (h) {
      return h;
     }
     if (s.traceEnabled) {
      t(s.host, e.Diagnostics.Trying_other_entries_in_rootDirs);
     }
     for (var v = 0, y = s.compilerOptions.rootDirs; v < y.length; v++) {
      var p = y[v];
      if (p === u) {
       continue;
      }
      var b = e.combinePaths(e.normalizePath(p), g);
      if (s.traceEnabled) {
       t(s.host, e.Diagnostics.Loading_0_from_the_root_dir_1_candidate_location_2, g, p, b);
      }
      var x = e.getDirectoryPath(b);
      var k = a(n, b, o, !P(x, s.host), s);
      if (k) {
       return k;
      }
     }
     if (s.traceEnabled) {
      t(s.host, e.Diagnostics.Module_resolution_using_rootDirs_has_failed);
     }
    }
    return undefined;
   }
   function k(n, r, i, o, s) {
    if (!s.compilerOptions.baseUrl) {
     return undefined;
    }
    if (s.traceEnabled) {
     t(s.host, e.Diagnostics.baseUrl_option_is_set_to_0_using_this_value_to_resolve_non_relative_module_name_1, s.compilerOptions.baseUrl, r);
    }
    var c;
    if (s.compilerOptions.paths) {
     if (s.traceEnabled) {
      t(s.host, e.Diagnostics.paths_option_is_specified_looking_for_a_pattern_to_match_module_name_0, r);
     }
     c = e.matchPatternOrExact(e.getOwnKeys(s.compilerOptions.paths), r);
    }
    if (c) {
     var u = e.isString(c) ? undefined : e.matchedText(c, r);
     var l = e.isString(c) ? c : e.patternText(c);
     if (s.traceEnabled) {
      t(s.host, e.Diagnostics.Module_name_0_matched_pattern_1, r, l);
     }
     return e.forEach(s.compilerOptions.paths[l], function(r) {
      var c = u ? r.replace("*", u) : r;
      var l = e.normalizePath(e.combinePaths(s.compilerOptions.baseUrl, c));
      if (s.traceEnabled) {
       t(s.host, e.Diagnostics.Trying_substitution_0_candidate_module_location_Colon_1, r, c);
      }
      var f = e.tryGetExtensionFromPath(l);
      if (f !== undefined) {
       var d = L(l, o, false, s);
       if (d !== undefined) {
        return a({
         path: d,
         ext: f
        });
       }
      }
      return i(n, l, o, !P(e.getDirectoryPath(l), s.host), s);
     });
    } else {
     var f = e.normalizePath(e.combinePaths(s.compilerOptions.baseUrl, r));
     if (s.traceEnabled) {
      t(s.host, e.Diagnostics.Resolving_module_name_0_relative_to_base_url_1_2, r, s.compilerOptions.baseUrl, f);
     }
     return i(n, f, o, !P(e.getDirectoryPath(f), s.host), s);
    }
   }
   function S(t, n, r, i, a) {
    return C(t, e.getDirectoryPath(n), r, i, a, false);
   }
   e.nodeModuleNameResolver = S;
   function w(t, n, r) {
    var i = C(t, n, {
     moduleResolution: e.ModuleResolutionKind.NodeJs,
     allowJs: true
    }, r, undefined, true), a = i.resolvedModule, o = i.failedLookupLocations;
    if (!a) {
     throw new Error("Could not resolve JS module '" + t + "' starting at '" + n + "'. Looked in: " + o.join(", "));
    }
    return a.resolvedFileName;
   }
   e.resolveJavaScriptModule = w;
   function C(i, a, s, u, l, f) {
    var d = n(s, u);
    var p = [];
    var m = {
     compilerOptions: s,
     host: u,
     traceEnabled: d
    };
    var _ = f ? x(o.JavaScript) : x(o.TypeScript) || x(o.JavaScript) || (s.resolveJsonModule ? x(o.Json) : undefined);
    if (_ && _.value) {
     var g = _.value, h = g.resolved, v = g.originalPath, y = g.isExternalLibraryImport;
     return c(h, v, y, p);
    }
    return {
     resolvedModule: undefined,
     failedLookupLocations: p
    };
    function x(n) {
     var c = function(e, t, n, r, i) {
      return T(e, t, n, r, i, true);
     };
     var f = b(n, i, a, c, p, m);
     if (f) {
      return ae({
       resolved: f,
       isExternalLibraryImport: false
      });
     }
     if (!e.isExternalModuleNameRelative(i)) {
      if (d) {
       t(u, e.Diagnostics.Loading_module_0_from_node_modules_folder_target_file_type_1, i, o[n]);
      }
      var _ = W(n, i, a, p, m, l);
      if (!_) return undefined;
      var g = _.value;
      var h = void 0;
      if (!s.preserveSymlinks && g) {
       h = g.path;
       var v = D(g.path, u, d);
       if (v === h) {
        h = undefined;
       }
       g = r({}, g, {
        path: v
       });
      }
      return {
       value: g && {
        resolved: g,
        originalPath: h,
        isExternalLibraryImport: true
       }
      };
     } else {
      var y = e.normalizePathAndParts(e.combinePaths(a, i)), x = y.path, k = y.parts;
      var S = T(n, x, p, false, m, true);
      return S && ae({
       resolved: S,
       isExternalLibraryImport: e.contains(k, "node_modules")
      });
     }
    }
   }
   function D(n, r, i) {
    if (!r.realpath) {
     return n;
    }
    var a = e.normalizePath(r.realpath(n));
    if (i) {
     t(r, e.Diagnostics.Resolving_real_path_for_0_result_1, n, a);
    }
    e.Debug.assert(r.fileExists(a), n + " linked to nonexistent file " + a);
    return a;
   }
   function T(n, r, a, s, c, u) {
    if (c.traceEnabled) {
     t(c.host, e.Diagnostics.Loading_module_as_file_Slash_folder_candidate_module_location_0_target_file_type_1, r, o[n]);
    }
    if (!e.hasTrailingDirectorySeparator(r)) {
     if (!s) {
      var l = e.getDirectoryPath(r);
      if (!P(l, c.host)) {
       if (c.traceEnabled) {
        t(c.host, e.Diagnostics.Directory_0_does_not_exist_skipping_all_lookups_in_it, l);
       }
       s = true;
      }
     }
     var f = O(n, r, a, s, c);
     if (f) {
      var d = u ? N(f) : undefined;
      var p = d && z(d.packageDirectory, d.subModuleName, a, false, c).packageId;
      return i(p, f);
     }
    }
    if (!s) {
     var m = P(r, c.host);
     if (!m) {
      if (c.traceEnabled) {
       t(c.host, e.Diagnostics.Directory_0_does_not_exist_skipping_all_lookups_in_it, r);
      }
      s = true;
     }
    }
    return R(n, r, a, s, c, u);
   }
   var E = "/node_modules/";
   function N(t) {
    var n = e.normalizePath(t.path);
    var r = n.lastIndexOf(E);
    if (r === -1) {
     return undefined;
    }
    var i = r + E.length;
    var a = A(n, i);
    if (n.charCodeAt(i) === 64) {
     a = A(n, a);
    }
    var o = n.slice(0, a);
    var s = e.removeExtension(n.slice(a + 1), t.ext) + ".d.ts";
    return {
     packageDirectory: o,
     subModuleName: s
    };
   }
   function A(t, n) {
    var r = t.indexOf(e.directorySeparator, n + 1);
    return r === -1 ? n : r;
   }
   function F(t) {
    if (t === "") {
     return "index.d.ts";
    }
    if (e.endsWith(t, ".d.ts")) {
     return t;
    }
    if (e.endsWith(t, "/index")) {
     return t + ".d.ts";
    }
    return t + "/index.d.ts";
   }
   function P(e, t) {
    return !t.directoryExists || t.directoryExists(e);
   }
   e.directoryProbablyExists = P;
   function I(e, t, n, r, i) {
    return a(O(e, t, n, r, i));
   }
   function O(n, r, i, a, s) {
    if (n === o.Json) {
     var c = e.tryRemoveExtension(r, ".json");
     return c === undefined ? undefined : M(c, n, i, a, s);
    }
    var u = M(r, n, i, a, s);
    if (u) {
     return u;
    }
    if (e.hasJavaScriptFileExtension(r)) {
     var l = e.removeFileExtension(r);
     if (s.traceEnabled) {
      var f = r.substring(l.length);
      t(s.host, e.Diagnostics.File_name_0_has_a_1_extension_stripping_it, r, f);
     }
     return M(l, n, i, a, s);
    }
   }
   function M(t, n, r, i, a) {
    if (!i) {
     var s = e.getDirectoryPath(t);
     if (s) {
      i = !P(s, a.host);
     }
    }
    switch (n) {
    case o.DtsOnly:
     return c(".d.ts");

    case o.TypeScript:
     return c(".ts") || c(".tsx") || c(".d.ts");

    case o.JavaScript:
     return c(".js") || c(".jsx");

    case o.Json:
     return c(".json");
    }
    function c(e) {
     var n = L(t + e, r, i, a);
     return n === undefined ? undefined : {
      path: n,
      ext: e
     };
    }
   }
   function L(n, r, i, a) {
    if (!i) {
     if (a.host.fileExists(n)) {
      if (a.traceEnabled) {
       t(a.host, e.Diagnostics.File_0_exist_use_it_as_a_name_resolution_result, n);
      }
      return n;
     } else {
      if (a.traceEnabled) {
       t(a.host, e.Diagnostics.File_0_does_not_exist, n);
      }
     }
    }
    r.push(n);
    return undefined;
   }
   function R(e, t, n, r, a, o) {
    if (o === void 0) {
     o = true;
    }
    var s = o ? z(t, "", n, r, a) : {
     packageJsonContent: undefined,
     packageId: undefined
    }, c = s.packageJsonContent, u = s.packageId;
    return i(u, B(e, t, n, r, a, c));
   }
   function B(t, n, r, i, a, o) {
    var s = o && j(o, t, n, r, a);
    if (s) {
     return s;
    }
    var c = !i && P(n, a.host);
    return O(t, e.combinePaths(n, "index"), r, !c, a);
   }
   function z(n, r, i, a, o) {
    var s = o.host, c = o.traceEnabled;
    var f = !a && P(n, s);
    var d = J(n);
    if (f && s.fileExists(d)) {
     var p = l(d, s);
     if (r === "") {
      var m = u(true, p, n, o);
      if (typeof m === "string") {
       r = F(m.substring(n.length + 1));
      } else {
       var _ = u(false, p, n, o);
       if (typeof _ === "string" && _.length > n.length) {
        var g = _.substring(n.length + 1);
        r = (e.forEach(e.supportedJavascriptExtensions, function(t) {
         return e.tryRemoveExtension(g, t);
        }) || g) + ".d.ts";
       } else {
        r = "index.d.ts";
       }
      }
     }
     if (!e.endsWith(r, ".d.ts")) {
      r = F(r);
     }
     var h = typeof p.name === "string" && typeof p.version === "string" ? {
      name: p.name,
      subModuleName: r,
      version: p.version
     } : undefined;
     if (c) {
      if (h) {
       t(s, e.Diagnostics.Found_package_json_at_0_Package_ID_is_1, d, e.packageIdToString(h));
      } else {
       t(s, e.Diagnostics.Found_package_json_at_0, d);
      }
     }
     return {
      found: true,
      packageJsonContent: p,
      packageId: h
     };
    } else {
     if (f && c) {
      t(s, e.Diagnostics.File_0_does_not_exist, d);
     }
     i.push(d);
     return {
      found: false,
      packageJsonContent: undefined,
      packageId: undefined
     };
    }
   }
   function j(n, r, i, a, s) {
    var c = u(r !== o.JavaScript && r !== o.Json, n, i, s);
    if (!c) {
     if (r === o.TypeScript) {
      c = u(false, n, i, s);
      if (!c) {
       return undefined;
      }
     } else {
      return undefined;
     }
    }
    var l = !P(e.getDirectoryPath(c), s.host);
    var f = L(c, a, l, s);
    if (f) {
     var d = q(r, f);
     if (d) {
      return d;
     }
     if (s.traceEnabled) {
      t(s.host, e.Diagnostics.File_0_has_an_unsupported_extension_so_skipping_it, f);
     }
    }
    var p = r === o.DtsOnly ? o.TypeScript : r;
    var m = T(p, c, a, l, s, false);
    if (m) {
     e.Debug.assert(m.packageId === undefined);
     return {
      path: m.path,
      ext: m.extension
     };
    }
   }
   function q(t, n) {
    var r = e.tryGetExtensionFromPath(n);
    return r !== undefined && U(t, r) ? {
     path: n,
     ext: r
    } : undefined;
   }
   function U(e, t) {
    switch (e) {
    case o.JavaScript:
     return t === ".js" || t === ".jsx";

    case o.Json:
     return t === ".json";

    case o.TypeScript:
     return t === ".ts" || t === ".tsx" || t === ".d.ts";

    case o.DtsOnly:
     return t === ".d.ts";
    }
   }
   function J(t) {
    return e.combinePaths(t, "package.json");
   }
   function K(t, n, r, a, o, s) {
    var c = e.normalizePath(e.combinePaths(r, n));
    var u;
    var l;
    var f = z(c, "", o, !a, s);
    if (f.found) {
     u = f.packageJsonContent, l = f.packageId;
    } else {
     var d = V(n), p = d.packageName, m = d.rest;
     if (m !== "") {
      var _ = e.combinePaths(r, p);
      l = z(_, m, o, !a, s).packageId;
     }
    }
    var g = O(t, c, o, !a, s) || B(t, c, o, !a, s, u);
    return i(l, g);
   }
   function V(t) {
    var n = t.indexOf(e.directorySeparator);
    if (t[0] === "@") {
     n = t.indexOf(e.directorySeparator, n + 1);
    }
    return n === -1 ? {
     packageName: t,
     rest: ""
    } : {
     packageName: t.slice(0, n),
     rest: t.slice(n + 1)
    };
   }
   e.getPackageName = V;
   function W(e, t, n, r, i, a) {
    return G(e, t, n, r, i, false, a);
   }
   function H(e, t, n, r) {
    return G(o.DtsOnly, e, t, n, r, true, undefined);
   }
   function G(t, n, r, i, a, o, s) {
    var c = s && s.getOrCreateCacheForModuleName(n);
    return e.forEachAncestorDirectory(e.normalizeSlashes(r), function(r) {
     if (e.getBaseFileName(r) !== "node_modules") {
      var s = ne(c, n, r, a.traceEnabled, a.host, i);
      if (s) {
       return s;
      }
      return ae($(t, n, r, i, a, o));
     }
    });
   }
   function $(n, r, i, a, s, c) {
    if (c === void 0) {
     c = false;
    }
    var u = e.combinePaths(i, "node_modules");
    var l = P(u, s.host);
    if (!l && s.traceEnabled) {
     t(s.host, e.Diagnostics.Directory_0_does_not_exist_skipping_all_lookups_in_it, u);
    }
    var f = c ? undefined : K(n, r, u, l, a, s);
    if (f) {
     return f;
    }
    if (n !== o.JavaScript && n !== o.Json) {
     var d = e.combinePaths(u, "@types");
     var p = l;
     if (l && !P(d, s.host)) {
      if (s.traceEnabled) {
       t(s.host, e.Diagnostics.Directory_0_does_not_exist_skipping_all_lookups_in_it, d);
      }
      p = false;
     }
     return K(o.DtsOnly, Q(r, s), d, p, a, s);
    }
   }
   var X = "__";
   function Q(n, r) {
    var i = Z(n);
    if (r.traceEnabled && i !== n) {
     t(r.host, e.Diagnostics.Scoped_package_detected_looking_in_0, i);
    }
    return i;
   }
   function Y(e) {
    return "@types/" + Z(e);
   }
   e.getTypesPackageName = Y;
   function Z(t) {
    if (e.startsWith(t, "@")) {
     var n = t.replace(e.directorySeparator, X);
     if (n !== t) {
      return n.slice(1);
     }
    }
    return t;
   }
   e.getMangledNameForScopedPackage = Z;
   function ee(t) {
    var n = e.removePrefix(t, "@types/");
    if (n !== t) {
     return te(n);
    }
    return t;
   }
   e.getPackageNameFromAtTypesDirectory = ee;
   function te(t) {
    return e.stringContains(t, X) ? "@" + t.replace(X, e.directorySeparator) : t;
   }
   e.getUnmangledNameForScopedPackage = te;
   function ne(n, r, i, a, o, s) {
    var c = n && n.get(i);
    if (c) {
     if (a) {
      t(o, e.Diagnostics.Resolution_for_module_0_was_found_in_cache_from_location_1, r, i);
     }
     s.push.apply(s, c.failedLookupLocations);
     return {
      value: c.resolvedModule && {
       path: c.resolvedModule.resolvedFileName,
       extension: c.resolvedModule.extension,
       packageId: c.resolvedModule.packageId
      }
     };
    }
   }
   function re(t, r, i, a, s) {
    var u = n(i, a);
    var l = {
     compilerOptions: i,
     host: a,
     traceEnabled: u
    };
    var f = [];
    var d = e.getDirectoryPath(r);
    var p = m(o.TypeScript) || m(o.JavaScript);
    return c(p && p.value, undefined, false, f);
    function m(n) {
     var r = b(n, t, d, I, f, l);
     if (r) {
      return {
       value: r
      };
     }
     var i = s && s.getOrCreateCacheForModuleName(t);
     if (!e.isExternalModuleNameRelative(t)) {
      var c = e.forEachAncestorDirectory(d, function(r) {
       var o = ne(i, t, r, u, a, f);
       if (o) {
        return o;
       }
       var s = e.normalizePath(e.combinePaths(r, t));
       return ae(I(n, s, f, false, l));
      });
      if (c) {
       return c;
      }
      if (n === o.TypeScript) {
       return H(t, d, f, l);
      }
     } else {
      var p = e.normalizePath(e.combinePaths(d, t));
      return ae(I(n, p, f, false, l));
     }
    }
   }
   e.classicNameResolver = re;
   function ie(r, i, a, s, u) {
    var l = n(a, s);
    if (l) {
     t(s, e.Diagnostics.Auto_discovery_for_typings_is_enabled_in_project_0_Running_extra_resolution_pass_for_module_1_using_cache_location_2, i, r, u);
    }
    var f = {
     compilerOptions: a,
     host: s,
     traceEnabled: l
    };
    var d = [];
    var p = $(o.DtsOnly, r, u, d, f);
    return c(p, undefined, true, d);
   }
   e.loadModuleFromGlobalCache = ie;
   function ae(e) {
    return e !== undefined ? {
     value: e
    } : undefined;
   }
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(e) {
    e[e["NonInstantiated"] = 0] = "NonInstantiated";
    e[e["Instantiated"] = 1] = "Instantiated";
    e[e["ConstEnumOnly"] = 2] = "ConstEnumOnly";
   })(t = e.ModuleInstanceState || (e.ModuleInstanceState = {}));
   function n(e) {
    return e.body ? i(e.body) : 1;
   }
   e.getModuleInstanceState = n;
   function i(t) {
    switch (t.kind) {
    case 239:
    case 240:
     return 0;

    case 241:
     if (e.isEnumConst(t)) {
      return 2;
     }
     break;

    case 247:
    case 246:
     if (!e.hasModifier(t, 1)) {
      return 0;
     }
     break;

    case 243:
     {
      var r = 0;
      e.forEachChild(t, function(t) {
       var n = i(t);
       switch (n) {
       case 0:
        return;

       case 2:
        r = 2;
        return;

       case 1:
        r = 1;
        return true;

       default:
        e.Debug.assertNever(n);
       }
      });
      return r;
     }

    case 242:
     return n(t);

    case 71:
     if (t.isInJSDocNamespace) {
      return 0;
     }
    }
    return 1;
   }
   var a;
   (function(e) {
    e[e["None"] = 0] = "None";
    e[e["IsContainer"] = 1] = "IsContainer";
    e[e["IsBlockScopedContainer"] = 2] = "IsBlockScopedContainer";
    e[e["IsControlFlowContainer"] = 4] = "IsControlFlowContainer";
    e[e["IsFunctionLike"] = 8] = "IsFunctionLike";
    e[e["IsFunctionExpression"] = 16] = "IsFunctionExpression";
    e[e["HasLocals"] = 32] = "HasLocals";
    e[e["IsInterface"] = 64] = "IsInterface";
    e[e["IsObjectLiteralOrClassExpressionMethod"] = 128] = "IsObjectLiteralOrClassExpressionMethod";
   })(a || (a = {}));
   var o = c();
   function s(t, n) {
    e.performance.mark("beforeBind");
    o(t, n);
    e.performance.mark("afterBind");
    e.performance.measure("Bind", "beforeBind", "afterBind");
   }
   e.bindSourceFile = s;
   function c() {
    var t;
    var i;
    var a;
    var o;
    var s;
    var c;
    var l;
    var f;
    var m;
    var h;
    var v;
    var y;
    var b;
    var x;
    var k;
    var S;
    var w;
    var C;
    var D;
    var T;
    var E;
    var N = 0;
    var A;
    var F;
    var P = {
     flags: 1
    };
    var I = {
     flags: 1
    };
    var O = 0;
    var M;
    function L(n, r, i, a, o) {
     return e.createDiagnosticForNodeInSourceFile(e.getSourceFileOfNode(n) || t, n, r, i, a, o);
    }
    function R(n, r) {
     t = n;
     i = r;
     a = e.getEmitScriptTarget(i);
     E = B(t, r);
     F = e.createUnderscoreEscapedMap();
     N = 0;
     M = t.isDeclarationFile;
     A = e.objectAllocator.getSymbolConstructor();
     if (!t.locals) {
      At(t);
      t.symbolCount = N;
      t.classifiableNames = F;
      lt();
     }
     t = undefined;
     i = undefined;
     a = undefined;
     o = undefined;
     s = undefined;
     c = undefined;
     l = undefined;
     f = undefined;
     m = undefined;
     h = false;
     v = undefined;
     y = undefined;
     b = undefined;
     x = undefined;
     k = undefined;
     S = undefined;
     C = undefined;
     D = false;
     T = 0;
     O = 0;
    }
    return R;
    function B(t, n) {
     if (e.getStrictOptionValue(n, "alwaysStrict") && !t.isDeclarationFile) {
      return true;
     } else {
      return !!t.externalModuleIndicator;
     }
    }
    function z(e, t) {
     N++;
     return new A(e, t);
    }
    function j(t, n, r) {
     t.flags |= r;
     n.symbol = t;
     t.declarations = e.append(t.declarations, n);
     if (r & (32 | 384 | 1536 | 3) && !t.exports) {
      t.exports = e.createSymbolTable();
     }
     if (r & (32 | 64 | 2048 | 4096) && !t.members) {
      t.members = e.createSymbolTable();
     }
     if (r & 67216319) {
      var i = t.valueDeclaration;
      if (!i || i.kind !== n.kind && e.isEffectiveModuleDeclaration(i)) {
       t.valueDeclaration = n;
      }
     }
    }
    function q(t) {
     if (t.kind === 252) {
      return t.isExportEquals ? "export=" : "default";
     }
     var n = e.getNameOfDeclaration(t);
     if (n) {
      if (e.isAmbientModule(t)) {
       var r = e.getTextOfIdentifierOrLiteral(n);
       return e.isGlobalScopeAugmentation(t) ? "__global" : '"' + r + '"';
      }
      if (n.kind === 147) {
       var i = n.expression;
       if (e.isStringOrNumericLiteral(i)) {
        return e.escapeLeadingUnderscores(i.text);
       }
       e.Debug.assert(e.isWellKnownSymbolSyntactically(i));
       return e.getPropertyNameForKnownSymbolName(e.idText(i.name));
      }
      return e.isPropertyNameLiteral(n) ? e.getEscapedTextOfIdentifierOrLiteral(n) : undefined;
     }
     switch (t.kind) {
     case 155:
      return "__constructor";

     case 163:
     case 158:
     case 291:
      return "__call";

     case 164:
     case 159:
      return "__new";

     case 160:
      return "__index";

     case 253:
      return "__export";

     case 277:
      return "export=";

     case 202:
      if (e.getSpecialPropertyAssignmentKind(t) === 2) {
       return "export=";
      }
      e.Debug.fail("Unknown binary declaration kind");
      break;

     case 287:
      return e.isJSDocConstructSignature(t) ? "__new" : "__call";

     case 149:
      e.Debug.assert(t.parent.kind === 287, "Impossible parameter parent kind", function() {
       return "parent is: " + (e.SyntaxKind ? e.SyntaxKind[t.parent.kind] : t.parent.kind) + ", expected JSDocFunctionType";
      });
      var a = t.parent;
      var o = a.parameters.indexOf(t);
      return "arg" + o;
     }
    }
    function U(t) {
     return e.isNamedDeclaration(t) ? e.declarationNameToString(t.name) : e.unescapeLeadingUnderscores(e.Debug.assertDefined(q(t)));
    }
    function J(n, r, i, a, o, s) {
     e.Debug.assert(!e.hasDynamicName(i));
     var c = e.hasModifier(i, 512);
     var u = c && r ? "default" : q(i);
     var l;
     if (u === undefined) {
      l = z(0, "__missing");
     } else {
      l = n.get(u);
      if (a & 2885600) {
       F.set(u, true);
      }
      if (!l) {
       n.set(u, l = z(0, u));
       if (s) l.isReplaceableByMethod = true;
      } else if (s && !l.isReplaceableByMethod) {
       return l;
      } else if (l.flags & o) {
       if (l.isReplaceableByMethod) {
        n.set(u, l = z(0, u));
       } else {
        if (e.isNamedDeclaration(i)) {
         i.name.parent = i;
        }
        var f = l.flags & 2 ? e.Diagnostics.Cannot_redeclare_block_scoped_variable_0 : e.Diagnostics.Duplicate_identifier_0;
        var d = true;
        if (l.flags & 384 || a & 384) {
         f = e.Diagnostics.Enum_declarations_can_only_merge_with_namespace_or_other_enum_declarations;
         d = false;
        }
        if (l.declarations && l.declarations.length) {
         if (c) {
          f = e.Diagnostics.A_module_cannot_have_multiple_default_exports;
          d = false;
         } else {
          if (l.declarations && l.declarations.length && (i.kind === 252 && !i.isExportEquals)) {
           f = e.Diagnostics.A_module_cannot_have_multiple_default_exports;
           d = false;
          }
         }
        }
        var p = function(n) {
         t.bindDiagnostics.push(L(e.getNameOfDeclaration(n) || n, f, d ? U(n) : undefined));
        };
        e.forEach(l.declarations, p);
        p(i);
        l = z(0, u);
       }
      }
     }
     j(l, i, a);
     if (l.parent) {
      e.Debug.assert(l.parent === r, "Existing symbol parent should match new one");
     } else {
      l.parent = r;
     }
     return l;
    }
    function W(t, n, r) {
     var i = e.getCombinedModifierFlags(t) & 1;
     if (n & 2097152) {
      if (t.kind === 255 || t.kind === 246 && i) {
       return J(s.symbol.exports, s.symbol, t, n, r);
      } else {
       return J(s.locals, undefined, t, n, r);
      }
     } else {
      if (e.isJSDocTypeAlias(t)) e.Debug.assert(e.isInJavaScriptFile(t));
      if (!e.isAmbientModule(t) && (i || s.flags & 32) || e.isJSDocTypeAlias(t)) {
       if (e.hasModifier(t, 512) && !q(t)) {
        return J(s.symbol.exports, s.symbol, t, n, r);
       }
       var a = n & 67216319 ? 1048576 : 0;
       var o = J(s.locals, undefined, t, a, r);
       o.exportSymbol = J(s.symbol.exports, s.symbol, t, n, r);
       t.localSymbol = o;
       return o;
      } else {
       return J(s.locals, undefined, t, n, r);
      }
     }
    }
    function H(t, n) {
     var r = s;
     var i = c;
     var a = l;
     if (n & 1) {
      if (t.kind !== 195) {
       c = s;
      }
      s = l = t;
      if (n & 32) {
       s.locals = e.createSymbolTable();
      }
      $e(s);
     } else if (n & 2) {
      l = t;
      l.locals = undefined;
     }
     if (n & 4) {
      var o = v;
      var u = y;
      var f = b;
      var d = x;
      var p = C;
      var m = D;
      var _ = n & 16 && !e.hasModifier(t, 256) && !t.asteriskToken && !!e.getImmediatelyInvokedFunctionExpression(t);
      if (!_) {
       v = {
        flags: 2
       };
       if (n & (16 | 128)) {
        v.container = t;
       }
      }
      x = _ || t.kind === 155 ? oe() : undefined;
      y = undefined;
      b = undefined;
      C = undefined;
      D = false;
      G(t);
      t.flags &= ~1408;
      if (!(v.flags & 1) && n & 8 && e.nodeIsPresent(t.body)) {
       t.flags |= 128;
       if (D) t.flags |= 256;
      }
      if (t.kind === 277) {
       t.flags |= T;
      }
      if (x) {
       ue(x, v);
       v = me(x);
       if (t.kind === 155) {
        t.returnFlowNode = v;
       }
      }
      if (!_) {
       v = o;
      }
      y = u;
      b = f;
      x = d;
      C = p;
      D = m;
     } else if (n & 64) {
      h = false;
      G(t);
      t.flags = h ? t.flags | 64 : t.flags & ~64;
     } else {
      G(t);
     }
     s = r;
     c = i;
     l = a;
    }
    function G(e) {
     if (M) {
      Y(e);
     } else if (e.transformFlags & 536870912) {
      M = true;
      Y(e);
      M = false;
      O |= e.transformFlags & ~K(e.kind);
     } else {
      var t = O;
      O = 0;
      Y(e);
      O = t | g(e, O);
     }
    }
    function $(e) {
     X(e, function(e) {
      return e.kind === 237 ? At(e) : undefined;
     });
     X(e, function(e) {
      return e.kind !== 237 ? At(e) : undefined;
     });
    }
    function X(t, n) {
     if (n === void 0) {
      n = At;
     }
     if (t === undefined) {
      return;
     }
     if (M) {
      e.forEach(t, n);
     } else {
      var r = O;
      O = 0;
      var i = 0;
      for (var a = 0, o = t; a < o.length; a++) {
       var s = o[a];
       n(s);
       i |= s.transformFlags & ~536870912;
      }
      t.transformFlags = i | 536870912;
      O |= r;
     }
    }
    function Q(t) {
     e.forEachChild(t, At, X);
    }
    function Y(e) {
     if (_n(e)) {
      Q(e);
      return;
     }
     switch (e.kind) {
     case 222:
      be(e);
      break;

     case 221:
      xe(e);
      break;

     case 223:
      ke(e);
      break;

     case 224:
     case 225:
      Se(e);
      break;

     case 220:
      we(e);
      break;

     case 228:
     case 232:
      Ce(e);
      break;

     case 227:
     case 226:
      Ee(e);
      break;

     case 233:
      Ne(e);
      break;

     case 230:
      Ae(e);
      break;

     case 244:
      Fe(e);
      break;

     case 269:
      Pe(e);
      break;

     case 231:
      Me(e);
      break;

     case 200:
      ze(e);
      break;

     case 201:
      je(e);
      break;

     case 202:
      qe(e);
      break;

     case 196:
      Ue(e);
      break;

     case 203:
      Je(e);
      break;

     case 235:
      Ve(e);
      break;

     case 189:
      He(e);
      break;

     case 301:
     case 295:
      We(e);
      break;

     case 277:
      {
       $(e.statements);
       At(e.endOfFileToken);
       break;
      }

     case 216:
     case 243:
      $(e.statements);
      break;

     default:
      Q(e);
      break;
     }
     Ft(e);
    }
    function Z(e) {
     switch (e.kind) {
     case 71:
     case 99:
     case 187:
      return ee(e);

     case 189:
      return te(e);

     case 193:
      return Z(e.expression);

     case 202:
      return ie(e);

     case 200:
      return e.operator === 51 && Z(e.operand);
     }
     return false;
    }
    function ee(e) {
     return e.kind === 71 || e.kind === 99 || e.kind === 97 || e.kind === 187 && ee(e.expression);
    }
    function te(e) {
     if (e.arguments) {
      for (var t = 0, n = e.arguments; t < n.length; t++) {
       var r = n[t];
       if (ee(r)) {
        return true;
       }
      }
     }
     if (e.expression.kind === 187 && ee(e.expression.expression)) {
      return true;
     }
     return false;
    }
    function ne(t, n) {
     return e.isTypeOfExpression(t) && ae(t.expression) && e.isStringLiteralLike(n);
    }
    function re(t, n) {
     return e.isStringLiteralLike(t) && Z(n);
    }
    function ie(e) {
     switch (e.operatorToken.kind) {
     case 58:
      return ee(e.left);

     case 32:
     case 33:
     case 34:
     case 35:
      return ae(e.left) || ae(e.right) || ne(e.right, e.left) || ne(e.left, e.right);

     case 93:
      return ae(e.left);

     case 92:
      return re(e.left, e.right);

     case 26:
      return Z(e.right);
     }
     return false;
    }
    function ae(e) {
     switch (e.kind) {
     case 193:
      return ae(e.expression);

     case 202:
      switch (e.operatorToken.kind) {
      case 58:
       return ae(e.left);

      case 26:
       return ae(e.right);
      }
     }
     return ee(e);
    }
    function oe() {
     return {
      flags: 4,
      antecedents: undefined
     };
    }
    function se() {
     return {
      flags: 8,
      antecedents: undefined
     };
    }
    function ce(e) {
     e.flags |= e.flags & 512 ? 1024 : 512;
    }
    function ue(t, n) {
     if (!(n.flags & 1) && !e.contains(t.antecedents, n)) {
      (t.antecedents || (t.antecedents = [])).push(n);
      ce(n);
     }
    }
    function le(e, t, n) {
     if (t.flags & 1) {
      return t;
     }
     if (!n) {
      return e & 32 ? t : P;
     }
     if (n.kind === 101 && e & 64 || n.kind === 86 && e & 32) {
      return P;
     }
     if (!Z(n)) {
      return t;
     }
     ce(t);
     return {
      flags: e,
      expression: n,
      antecedent: t
     };
    }
    function fe(e, t, n, r) {
     if (!Z(t.expression)) {
      return e;
     }
     ce(e);
     return {
      flags: 128,
      switchStatement: t,
      clauseStart: n,
      clauseEnd: r,
      antecedent: e
     };
    }
    function de(e, t) {
     ce(e);
     return {
      flags: 16,
      antecedent: e,
      node: t
     };
    }
    function pe(e, t) {
     ce(e);
     var n = {
      flags: 256,
      antecedent: e,
      node: t
     };
     return n;
    }
    function me(e) {
     var t = e.antecedents;
     if (!t) {
      return P;
     }
     if (t.length === 1) {
      return t[0];
     }
     return e;
    }
    function _e(e) {
     var t = e.parent;
     switch (t.kind) {
     case 220:
     case 222:
     case 221:
      return t.expression === e;

     case 223:
     case 203:
      return t.condition === e;
     }
     return false;
    }
    function ge(e) {
     while (true) {
      if (e.kind === 193) {
       e = e.expression;
      } else if (e.kind === 200 && e.operator === 51) {
       e = e.operand;
      } else {
       return e.kind === 202 && (e.operatorToken.kind === 53 || e.operatorToken.kind === 54);
      }
     }
    }
    function he(e) {
     while (e.parent.kind === 193 || e.parent.kind === 200 && e.parent.operator === 51) {
      e = e.parent;
     }
     return !_e(e) && !ge(e.parent);
    }
    function ve(e, t, n) {
     var r = k;
     var i = S;
     k = t;
     S = n;
     At(e);
     k = r;
     S = i;
     if (!e || !ge(e)) {
      ue(t, le(32, v, e));
      ue(n, le(64, v, e));
     }
    }
    function ye(e, t, n) {
     var r = y;
     var i = b;
     y = t;
     b = n;
     At(e);
     y = r;
     b = i;
    }
    function be(e) {
     var t = se();
     var n = oe();
     var r = oe();
     ue(t, v);
     v = t;
     ve(e.expression, n, r);
     v = me(n);
     ye(e.statement, r, t);
     ue(t, v);
     v = me(r);
    }
    function xe(t) {
     var n = se();
     var r = t.parent.kind === 231 ? e.lastOrUndefined(C) : undefined;
     var i = r ? r.continueTarget : oe();
     var a = r ? r.breakTarget : oe();
     ue(n, v);
     v = n;
     ye(t.statement, a, i);
     ue(i, v);
     v = me(i);
     ve(t.expression, n, a);
     v = me(a);
    }
    function ke(e) {
     var t = se();
     var n = oe();
     var r = oe();
     At(e.initializer);
     ue(t, v);
     v = t;
     ve(e.condition, n, r);
     v = me(n);
     ye(e.statement, r, t);
     At(e.incrementor);
     ue(t, v);
     v = me(r);
    }
    function Se(e) {
     var t = se();
     var n = oe();
     ue(t, v);
     v = t;
     if (e.kind === 225) {
      At(e.awaitModifier);
     }
     At(e.expression);
     ue(n, v);
     At(e.initializer);
     if (e.initializer.kind !== 236) {
      Re(e.initializer);
     }
     ye(e.statement, n, t);
     ue(t, v);
     v = me(n);
    }
    function we(e) {
     var t = oe();
     var n = oe();
     var r = oe();
     ve(e.expression, t, n);
     v = me(t);
     At(e.thenStatement);
     ue(r, v);
     v = me(n);
     At(e.elseStatement);
     ue(r, v);
     v = me(r);
    }
    function Ce(e) {
     At(e.expression);
     if (e.kind === 228) {
      D = true;
      if (x) {
       ue(x, v);
      }
     }
     v = P;
    }
    function De(e) {
     if (C) {
      for (var t = 0, n = C; t < n.length; t++) {
       var r = n[t];
       if (r.name === e) {
        return r;
       }
      }
     }
     return undefined;
    }
    function Te(e, t, n) {
     var r = e.kind === 227 ? t : n;
     if (r) {
      ue(r, v);
      v = P;
     }
    }
    function Ee(e) {
     At(e.label);
     if (e.label) {
      var t = De(e.label.escapedText);
      if (t) {
       t.referenced = true;
       Te(e, t.breakTarget, t.continueTarget);
      }
     } else {
      Te(e, y, b);
     }
    }
    function Ne(e) {
     var t = oe();
     var n = v;
     At(e.tryBlock);
     ue(t, v);
     var r = v;
     var i = P;
     if (e.catchClause) {
      v = n;
      At(e.catchClause);
      ue(t, v);
      i = v;
     }
     if (e.finallyBlock) {
      var a = {
       flags: 2048,
       antecedent: n,
       lock: {}
      };
      ue(t, a);
      v = me(t);
      At(e.finallyBlock);
      if (!(v.flags & 1)) {
       if (r.flags & 1 && i.flags & 1) {
        v = r === I || i === I ? I : P;
       }
      }
      if (!(v.flags & 1)) {
       var o = {
        flags: 4096,
        antecedent: v
       };
       a.lock = o;
       v = o;
      }
     } else {
      v = me(t);
     }
    }
    function Ae(t) {
     var n = oe();
     At(t.expression);
     var r = y;
     var i = w;
     y = n;
     w = v;
     At(t.caseBlock);
     ue(n, v);
     var a = e.forEach(t.caseBlock.clauses, function(e) {
      return e.kind === 270;
     });
     t.possiblyExhaustive = !a && !n.antecedents;
     if (!a) {
      ue(n, fe(w, t, 0, 0));
     }
     y = r;
     w = i;
     v = me(n);
    }
    function Fe(t) {
     var n = O;
     O = 0;
     var r = t.clauses;
     var a = P;
     for (var o = 0; o < r.length; o++) {
      var s = o;
      while (!r[o].statements.length && o + 1 < r.length) {
       At(r[o]);
       o++;
      }
      var c = oe();
      ue(c, fe(w, t.parent, s, o + 1));
      ue(c, fe(w, t.parent, s, o + 1));
      ue(c, a);
      v = me(c);
      var u = r[o];
      At(u);
      a = v;
      if (!(v.flags & 1) && o !== r.length - 1 && i.noFallthroughCasesInSwitch) {
       Dt(u, e.Diagnostics.Fallthrough_case_in_switch);
      }
     }
     r.transformFlags = O | 536870912;
     O |= n;
    }
    function Pe(e) {
     var t = v;
     v = w;
     At(e.expression);
     v = t;
     X(e.statements);
    }
    function Ie(e, t, n) {
     var r = {
      name: e,
      breakTarget: t,
      continueTarget: n,
      referenced: false
     };
     (C || (C = [])).push(r);
     return r;
    }
    function Oe() {
     C.pop();
    }
    function Me(t) {
     var n = se();
     var r = oe();
     At(t.label);
     ue(n, v);
     var a = Ie(t.label.escapedText, r, n);
     At(t.statement);
     Oe();
     if (!a.referenced && !i.allowUnusedLabels) {
      Tt(e.unusedLabelIsError(i), t.label, e.Diagnostics.Unused_label);
     }
     if (!t.statement || t.statement.kind !== 221) {
      ue(r, v);
      v = me(r);
     }
    }
    function Le(e) {
     if (e.kind === 202 && e.operatorToken.kind === 58) {
      Re(e.left);
     } else {
      Re(e);
     }
    }
    function Re(e) {
     if (ee(e)) {
      v = de(v, e);
     } else if (e.kind === 185) {
      for (var t = 0, n = e.elements; t < n.length; t++) {
       var r = n[t];
       if (r.kind === 206) {
        Re(r.expression);
       } else {
        Le(r);
       }
      }
     } else if (e.kind === 186) {
      for (var i = 0, a = e.properties; i < a.length; i++) {
       var o = a[i];
       if (o.kind === 273) {
        Le(o.initializer);
       } else if (o.kind === 274) {
        Re(o.name);
       } else if (o.kind === 275) {
        Re(o.expression);
       }
      }
     }
    }
    function Be(e, t, n) {
     var r = oe();
     if (e.operatorToken.kind === 53) {
      ve(e.left, r, n);
     } else {
      ve(e.left, t, r);
     }
     v = me(r);
     At(e.operatorToken);
     ve(e.right, t, n);
    }
    function ze(e) {
     if (e.operator === 51) {
      var t = k;
      k = S;
      S = t;
      Q(e);
      S = k;
      k = t;
     } else {
      Q(e);
      if (e.operator === 43 || e.operator === 44) {
       Re(e.operand);
      }
     }
    }
    function je(e) {
     Q(e);
     if (e.operator === 43 || e.operator === 44) {
      Re(e.operand);
     }
    }
    function qe(t) {
     var n = t.operatorToken.kind;
     if (n === 53 || n === 54) {
      if (he(t)) {
       var r = oe();
       Be(t, r, r);
       v = me(r);
      } else {
       Be(t, k, S);
      }
     } else {
      Q(t);
      if (e.isAssignmentOperator(n) && !e.isAssignmentTarget(t)) {
       Re(t.left);
       if (n === 58 && t.left.kind === 188) {
        var i = t.left;
        if (ae(i.expression)) {
         v = pe(v, t);
        }
       }
      }
     }
    }
    function Ue(e) {
     Q(e);
     if (e.expression.kind === 187) {
      Re(e.expression);
     }
    }
    function Je(e) {
     var t = oe();
     var n = oe();
     var r = oe();
     ve(e.condition, t, n);
     v = me(t);
     At(e.questionToken);
     At(e.whenTrue);
     ue(r, v);
     v = me(n);
     At(e.colonToken);
     At(e.whenFalse);
     ue(r, v);
     v = me(r);
    }
    function Ke(t) {
     var n = !e.isOmittedExpression(t) ? t.name : undefined;
     if (e.isBindingPattern(n)) {
      for (var r = 0, i = n.elements; r < i.length; r++) {
       var a = i[r];
       Ke(a);
      }
     } else {
      v = de(v, t);
     }
    }
    function Ve(t) {
     Q(t);
     if (t.initializer || e.isForInOrOfStatement(t.parent.parent)) {
      Ke(t);
     }
    }
    function We(e) {
     if (e.fullName) {
      V(e, e.fullName);
     }
    }
    function He(t) {
     var n = t.expression;
     while (n.kind === 193) {
      n = n.expression;
     }
     if (n.kind === 194 || n.kind === 195) {
      X(t.typeArguments);
      X(t.arguments);
      At(t.expression);
     } else {
      Q(t);
     }
     if (t.expression.kind === 187) {
      var r = t.expression;
      if (ae(r.expression) && e.isPushOrUnshiftIdentifier(r.name)) {
       v = pe(v, t);
      }
     }
    }
    function Ge(t) {
     switch (t.kind) {
     case 207:
     case 238:
     case 241:
     case 186:
     case 166:
     case 290:
     case 266:
      return 1;

     case 239:
      return 1 | 64;

     case 242:
     case 240:
     case 179:
      return 1 | 32;

     case 277:
      return 1 | 4 | 32;

     case 154:
      if (e.isObjectLiteralOrClassExpressionMethod(t)) {
       return 1 | 4 | 32 | 8 | 128;
      }

     case 155:
     case 237:
     case 153:
     case 156:
     case 157:
     case 158:
     case 291:
     case 287:
     case 163:
     case 159:
     case 160:
     case 164:
      return 1 | 4 | 32 | 8;

     case 194:
     case 195:
      return 1 | 4 | 32 | 8 | 16;

     case 243:
      return 4;

     case 152:
      return t.initializer ? 4 : 0;

     case 272:
     case 223:
     case 224:
     case 225:
     case 244:
      return 2;

     case 216:
      return e.isFunctionLike(t.parent) ? 0 : 2;
     }
     return 0;
    }
    function $e(e) {
     if (f) {
      f.nextContainer = e;
     }
     f = e;
    }
    function Xe(e, t, n) {
     switch (s.kind) {
     case 242:
      return W(e, t, n);

     case 277:
      return Ye(e, t, n);

     case 207:
     case 238:
      return Qe(e, t, n);

     case 241:
      return J(s.symbol.exports, s.symbol, e, t, n);

     case 166:
     case 290:
     case 186:
     case 239:
     case 266:
      return J(s.symbol.members, s.symbol, e, t, n);

     case 163:
     case 164:
     case 158:
     case 159:
     case 291:
     case 160:
     case 154:
     case 153:
     case 155:
     case 156:
     case 157:
     case 237:
     case 194:
     case 195:
     case 287:
     case 301:
     case 295:
     case 240:
     case 179:
      return J(s.locals, undefined, e, t, n);
     }
    }
    function Qe(t, n, r) {
     return e.hasModifier(t, 32) ? J(s.symbol.exports, s.symbol, t, n, r) : J(s.symbol.members, s.symbol, t, n, r);
    }
    function Ye(n, r, i) {
     return e.isExternalModule(t) ? W(n, r, i) : J(t.locals, undefined, n, r, i);
    }
    function Ze(e) {
     var t = e.kind === 277 ? e : e.body;
     if (t && (t.kind === 277 || t.kind === 243)) {
      for (var n = 0, r = t.statements; n < r.length; n++) {
       var i = r[n];
       if (i.kind === 253 || i.kind === 252) {
        return true;
       }
      }
     }
     return false;
    }
    function et(e) {
     if (e.flags & 4194304 && !Ze(e)) {
      e.flags |= 32;
     } else {
      e.flags &= ~32;
     }
    }
    function tt(n) {
     et(n);
     if (e.isAmbientModule(n)) {
      if (e.hasModifier(n, 1)) {
       Dt(n, e.Diagnostics.export_modifier_cannot_be_applied_to_ambient_modules_and_module_augmentations_since_they_are_always_visible);
      }
      if (e.isModuleAugmentationExternal(n)) {
       nt(n);
      } else {
       var r = void 0;
       if (n.name.kind === 9) {
        var i = n.name.text;
        if (e.hasZeroOrOneAsteriskCharacter(i)) {
         r = e.tryParsePattern(i);
        } else {
         Dt(n.name, e.Diagnostics.Pattern_0_can_have_at_most_one_Asterisk_character, i);
        }
       }
       var a = Xe(n, 512, 67215503);
       t.patternAmbientModules = e.append(t.patternAmbientModules, r && {
        pattern: r,
        symbol: a
       });
      }
     } else {
      var o = nt(n);
      if (o !== 0) {
       var a = n.symbol;
       a.constEnumOnlyModule = !(a.flags & (16 | 32 | 256)) && o === 2 && a.constEnumOnlyModule !== false;
      }
     }
    }
    function nt(e) {
     var t = n(e);
     var r = t !== 0;
     Xe(e, r ? 512 : 1024, r ? 67215503 : 0);
     return t;
    }
    function rt(t) {
     var n = z(131072, q(t));
     j(n, t, 131072);
     var r = z(2048, "__type");
     j(r, t, 2048);
     r.members = e.createSymbolTable();
     r.members.set(n.escapedName, n);
    }
    function it(n) {
     var r;
     (function(e) {
      e[e["Property"] = 1] = "Property";
      e[e["Accessor"] = 2] = "Accessor";
     })(r || (r = {}));
     if (E) {
      var i = e.createUnderscoreEscapedMap();
      for (var a = 0, o = n.properties; a < o.length; a++) {
       var s = o[a];
       if (s.kind === 275 || s.name.kind !== 71) {
        continue;
       }
       var c = s.name;
       var u = s.kind === 273 || s.kind === 274 || s.kind === 154 ? 1 : 2;
       var l = i.get(c.escapedText);
       if (!l) {
        i.set(c.escapedText, u);
        continue;
       }
       if (u === 1 && l === 1) {
        var f = e.getErrorSpanForNode(t, c);
        t.bindDiagnostics.push(e.createFileDiagnostic(t, f.start, f.length, e.Diagnostics.An_object_literal_cannot_have_multiple_properties_with_the_same_name_in_strict_mode));
       }
      }
     }
     return st(n, 4096, "__object");
    }
    function at(e) {
     return st(e, 4096, "__jsxAttributes");
    }
    function ot(e, t, n) {
     return Xe(e, t, n);
    }
    function st(e, t, n) {
     var r = z(t, n);
     if (t & (8 | 106500)) {
      r.parent = s.symbol;
     }
     j(r, e, t);
     return r;
    }
    function ct(t, n, r) {
     switch (l.kind) {
     case 242:
      W(t, n, r);
      break;

     case 277:
      if (e.isExternalOrCommonJsModule(s)) {
       W(t, n, r);
       break;
      }

     default:
      if (!l.locals) {
       l.locals = e.createSymbolTable();
       $e(l);
      }
      J(l.locals, undefined, t, n, r);
     }
    }
    function ut(e) {
     ct(e, 2, 67216319);
    }
    function lt() {
     if (!m) {
      return;
     }
     var n = s;
     var r = f;
     var i = l;
     var a = o;
     var c = v;
     for (var u = 0, d = m; u < d.length; u++) {
      var p = d[u];
      var _ = e.getJSDocHost(p);
      s = e.findAncestor(_.parent, function(e) {
       return !!(Ge(e) & 1);
      }) || t;
      l = e.getEnclosingBlockScopeContainer(_) || t;
      v = {
       flags: 2
      };
      o = p;
      At(p.typeExpression);
      if (!p.fullName || p.fullName.kind === 71) {
       o = p.parent;
       ct(p, 524288, 67901928);
      } else {
       At(p.fullName);
      }
     }
     s = n;
     f = r;
     l = i;
     o = a;
     v = c;
    }
    function ft(n) {
     if (E && n.originalKeywordKind >= 108 && n.originalKeywordKind <= 116 && !e.isIdentifierName(n) && !(n.flags & 4194304)) {
      if (!t.parseDiagnostics.length) {
       t.bindDiagnostics.push(L(n, dt(n), e.declarationNameToString(n)));
      }
     }
    }
    function dt(n) {
     if (e.getContainingClass(n)) {
      return e.Diagnostics.Identifier_expected_0_is_a_reserved_word_in_strict_mode_Class_definitions_are_automatically_in_strict_mode;
     }
     if (t.externalModuleIndicator) {
      return e.Diagnostics.Identifier_expected_0_is_a_reserved_word_in_strict_mode_Modules_are_automatically_in_strict_mode;
     }
     return e.Diagnostics.Identifier_expected_0_is_a_reserved_word_in_strict_mode;
    }
    function pt(t) {
     if (E && e.isLeftHandSideExpression(t.left) && e.isAssignmentOperator(t.operatorToken.kind)) {
      ht(t, t.left);
     }
    }
    function mt(e) {
     if (E && e.variableDeclaration) {
      ht(e, e.variableDeclaration.name);
     }
    }
    function _t(n) {
     if (E && n.expression.kind === 71) {
      var r = e.getErrorSpanForNode(t, n.expression);
      t.bindDiagnostics.push(e.createFileDiagnostic(t, r.start, r.length, e.Diagnostics.delete_cannot_be_called_on_an_identifier_in_strict_mode));
     }
    }
    function gt(t) {
     return e.isIdentifier(t) && (t.escapedText === "eval" || t.escapedText === "arguments");
    }
    function ht(n, r) {
     if (r && r.kind === 71) {
      var i = r;
      if (gt(i)) {
       var a = e.getErrorSpanForNode(t, r);
       t.bindDiagnostics.push(e.createFileDiagnostic(t, a.start, a.length, vt(n), e.idText(i)));
      }
     }
    }
    function vt(n) {
     if (e.getContainingClass(n)) {
      return e.Diagnostics.Invalid_use_of_0_Class_definitions_are_automatically_in_strict_mode;
     }
     if (t.externalModuleIndicator) {
      return e.Diagnostics.Invalid_use_of_0_Modules_are_automatically_in_strict_mode;
     }
     return e.Diagnostics.Invalid_use_of_0_in_strict_mode;
    }
    function yt(e) {
     if (E) {
      ht(e, e.name);
     }
    }
    function bt(n) {
     if (e.getContainingClass(n)) {
      return e.Diagnostics.Function_declarations_are_not_allowed_inside_blocks_in_strict_mode_when_targeting_ES3_or_ES5_Class_definitions_are_automatically_in_strict_mode;
     }
     if (t.externalModuleIndicator) {
      return e.Diagnostics.Function_declarations_are_not_allowed_inside_blocks_in_strict_mode_when_targeting_ES3_or_ES5_Modules_are_automatically_in_strict_mode;
     }
     return e.Diagnostics.Function_declarations_are_not_allowed_inside_blocks_in_strict_mode_when_targeting_ES3_or_ES5;
    }
    function xt(n) {
     if (a < 2) {
      if (l.kind !== 277 && l.kind !== 242 && !e.isFunctionLike(l)) {
       var r = e.getErrorSpanForNode(t, n);
       t.bindDiagnostics.push(e.createFileDiagnostic(t, r.start, r.length, bt(n)));
      }
     }
    }
    function kt(n) {
     if (E && n.numericLiteralFlags & 32) {
      t.bindDiagnostics.push(L(n, e.Diagnostics.Octal_literals_are_not_allowed_in_strict_mode));
     }
    }
    function St(e) {
     if (E) {
      ht(e, e.operand);
     }
    }
    function wt(e) {
     if (E) {
      if (e.operator === 43 || e.operator === 44) {
       ht(e, e.operand);
      }
     }
    }
    function Ct(t) {
     if (E) {
      Dt(t, e.Diagnostics.with_statements_are_not_allowed_in_strict_mode);
     }
    }
    function Dt(n, r, i, a, o) {
     var s = e.getSpanOfTokenAtPosition(t, n.pos);
     t.bindDiagnostics.push(e.createFileDiagnostic(t, s.start, s.length, r, i, a, o));
    }
    function Tt(e, t, n) {
     Et(e, t, t, n);
    }
    function Et(n, r, i, a) {
     Nt(n, {
      pos: e.getTokenPosOfNode(r, t),
      end: i.end
     }, a);
    }
    function Nt(n, i, a) {
     var o = e.createFileDiagnostic(t, i.pos, i.end - i.pos, a);
     if (n) {
      t.bindDiagnostics.push(o);
     } else {
      t.bindSuggestionDiagnostics = e.append(t.bindSuggestionDiagnostics, r({}, o, {
       category: e.DiagnosticCategory.Suggestion
      }));
     }
    }
    function At(e) {
     if (!e) {
      return;
     }
     e.parent = o;
     var t = E;
     Ot(e);
     if (e.kind > 145) {
      var n = o;
      o = e;
      var r = Ge(e);
      if (r === 0) {
       G(e);
      } else {
       H(e, r);
      }
      o = n;
     } else if (!M && (e.transformFlags & 536870912) === 0) {
      O |= g(e, 0);
      var n = o;
      if (e.kind === 1) o = e;
      Ft(e);
      o = n;
     }
     E = t;
    }
    function Ft(t) {
     if (e.hasJSDocNodes(t)) {
      if (e.isInJavaScriptFile(t)) {
       for (var n = 0, r = t.jsDoc; n < r.length; n++) {
        var i = r[n];
        At(i);
       }
      } else {
       for (var a = 0, o = t.jsDoc; a < o.length; a++) {
        var i = o[a];
        V(t, i);
       }
      }
     }
    }
    function Pt(t) {
     if (!E) {
      for (var n = 0, r = t; n < r.length; n++) {
       var i = r[n];
       if (!e.isPrologueDirective(i)) {
        return;
       }
       if (It(i)) {
        E = true;
        return;
       }
      }
     }
    }
    function It(n) {
     var r = e.getSourceTextOfNodeFromSourceFile(t, n.expression);
     return r === '"use strict"' || r === "'use strict'";
    }
    function Ot(t) {
     switch (t.kind) {
     case 71:
      if (t.isInJSDocNamespace) {
       var n = t.parent;
       while (n && !e.isJSDocTypeAlias(n)) {
        n = n.parent;
       }
       ct(n, 524288, 67901928);
       break;
      }

     case 99:
      if (v && (e.isExpression(t) || o.kind === 274)) {
       t.flowNode = v;
      }
      return ft(t);

     case 187:
      if (v && ee(t)) {
       t.flowNode = v;
      }
      if (e.isSpecialPropertyDeclaration(t)) {
       Ht(t);
      }
      break;

     case 202:
      var r = e.getSpecialPropertyAssignmentKind(t);
      switch (r) {
      case 1:
       Kt(t);
       break;

      case 2:
       Vt(t);
       break;

      case 3:
       $t(t.left, t);
       break;

      case 6:
       Gt(t);
       break;

      case 4:
       Wt(t);
       break;

      case 5:
       Xt(t);
       break;

      case 0:
       break;

      default:
       e.Debug.fail("Unknown special property assignment kind");
      }
      return pt(t);

     case 272:
      return mt(t);

     case 196:
      return _t(t);

     case 8:
      return kt(t);

     case 201:
      return St(t);

     case 200:
      return wt(t);

     case 229:
      return Ct(t);

     case 176:
      h = true;
      return;

     case 161:
      break;

     case 148:
      return pn(t);

     case 149:
      return cn(t);

     case 235:
      return sn(t);

     case 184:
      t.flowNode = v;
      return sn(t);

     case 152:
     case 151:
      return Mt(t);

     case 273:
     case 274:
      return fn(t, 4, 0);

     case 276:
      return fn(t, 8, 68008959);

     case 158:
     case 159:
     case 160:
      return Xe(t, 131072, 0);

     case 154:
     case 153:
      return fn(t, 8192 | (t.questionToken ? 16777216 : 0), e.isObjectLiteralMethod(t) ? 0 : 67208127);

     case 237:
      return un(t);

     case 155:
      return Xe(t, 16384, 0);

     case 156:
      return fn(t, 32768, 67150783);

     case 157:
      return fn(t, 65536, 67183551);

     case 163:
     case 287:
     case 291:
     case 164:
      return rt(t);

     case 166:
     case 290:
     case 179:
      return Lt(t);

     case 186:
      return it(t);

     case 194:
     case 195:
      return ln(t);

     case 189:
      if (e.isInJavaScriptFile(t)) {
       rn(t);
      }
      break;

     case 207:
     case 238:
      E = true;
      return an(t);

     case 239:
      return ct(t, 64, 67901832);

     case 240:
      return ct(t, 524288, 67901928);

     case 241:
      return on(t);

     case 242:
      return tt(t);

     case 266:
      return at(t);

     case 265:
      return ot(t, 4, 0);

     case 246:
     case 249:
     case 251:
     case 255:
      return Xe(t, 2097152, 2097152);

     case 245:
      return jt(t);

     case 248:
      return Ut(t);

     case 253:
      return qt(t);

     case 252:
      return zt(t);

     case 277:
      Pt(t.statements);
      return Rt();

     case 216:
      if (!e.isFunctionLike(t.parent)) {
       return;
      }

     case 243:
      return Pt(t.statements);

     case 296:
      if (t.parent.kind === 291) {
       return cn(t);
      }
      if (t.parent.kind !== 290) {
       break;
      }

     case 302:
      var i = t;
      var a = i.isBracketed || i.typeExpression && i.typeExpression.type.kind === 286 ? 4 | 16777216 : 4;
      return Xe(i, a, 0);

     case 301:
     case 295:
      return (m || (m = [])).push(t);
     }
    }
    function Mt(e) {
     return fn(e, 4 | (e.questionToken ? 16777216 : 0), 0);
    }
    function Lt(e) {
     return st(e, 2048, "__type");
    }
    function Rt() {
     et(t);
     if (e.isExternalModule(t)) {
      Bt();
     } else if (e.isJsonSourceFile(t)) {
      Bt();
      var n = t.symbol;
      J(t.symbol.exports, t.symbol, t, 4, 67108863);
      t.symbol = n;
     }
    }
    function Bt() {
     st(t, 512, '"' + e.removeFileExtension(t.fileName) + '"');
    }
    function zt(t) {
     if (!s.symbol || !s.symbol.exports) {
      st(t, 2097152, q(t));
     } else {
      var n = t.kind === 252 && e.exportAssignmentIsAlias(t) ? 2097152 : 4;
      J(s.symbol.exports, s.symbol, t, n, 67108863);
     }
    }
    function jt(n) {
     if (n.modifiers && n.modifiers.length) {
      t.bindDiagnostics.push(L(n, e.Diagnostics.Modifiers_cannot_appear_here));
     }
     if (n.parent.kind !== 277) {
      t.bindDiagnostics.push(L(n, e.Diagnostics.Global_module_exports_may_only_appear_at_top_level));
      return;
     } else {
      var r = n.parent;
      if (!e.isExternalModule(r)) {
       t.bindDiagnostics.push(L(n, e.Diagnostics.Global_module_exports_may_only_appear_in_module_files));
       return;
      }
      if (!r.isDeclarationFile) {
       t.bindDiagnostics.push(L(n, e.Diagnostics.Global_module_exports_may_only_appear_in_declaration_files));
       return;
      }
     }
     t.symbol.globalExports = t.symbol.globalExports || e.createSymbolTable();
     J(t.symbol.globalExports, t.symbol, n, 2097152, 2097152);
    }
    function qt(e) {
     if (!s.symbol || !s.symbol.exports) {
      st(e, 8388608, q(e));
     } else if (!e.exportClause) {
      J(s.symbol.exports, s.symbol, e, 8388608, 0);
     }
    }
    function Ut(e) {
     if (e.name) {
      Xe(e, 2097152, 2097152);
     }
    }
    function Jt(e) {
     if (t.externalModuleIndicator) {
      return false;
     }
     if (!t.commonJsModuleIndicator) {
      t.commonJsModuleIndicator = e;
      Bt();
     }
     return true;
    }
    function Kt(t) {
     if (!Jt(t)) {
      return;
     }
     var n = t.left;
     var r = nn(n.expression, undefined, function(e, t) {
      if (t) {
       j(t, e, 1536 | 67108864);
      }
      return t;
     });
     if (r) {
      var i = e.isClassExpression(t.right) ? 4 | 1048576 | 32 : 4 | 1048576;
      J(r.exports, r, n, i, 0);
     }
    }
    function Vt(n) {
     if (!Jt(n)) {
      return;
     }
     var r = e.getRightMostAssignedExpression(n.right);
     if (e.isEmptyObjectLiteral(r) || s === t && d(t, r)) {
      return;
     }
     var i = e.exportAssignmentIsAlias(n) ? 2097152 : 4 | 1048576 | 512;
     J(t.symbol.exports, t.symbol, n, i, 0);
    }
    function Wt(t) {
     e.Debug.assert(e.isInJavaScriptFile(t));
     var n = e.getThisContainer(t, false);
     switch (n.kind) {
     case 237:
     case 194:
      var r = n.symbol;
      if (e.isBinaryExpression(n.parent) && n.parent.operatorToken.kind === 58) {
       var i = n.parent.left;
       if (e.isPropertyAccessEntityNameExpression(i) && e.isPrototypeAccess(i.expression)) {
        r = tn(i.expression.expression, c);
       }
      }
      if (r) {
       r.members = r.members || e.createSymbolTable();
       J(r.members, r, t, 4, 0 & ~4);
      }
      break;

     case 155:
     case 152:
     case 154:
     case 156:
     case 157:
      var a = n.parent;
      var o = e.hasModifier(n, 32) ? a.symbol.exports : a.symbol.members;
      J(o, a.symbol, t, 4, 0, true);
      break;

     case 277:
      break;

     default:
      e.Debug.fail(e.Debug.showSyntaxKind(n));
     }
    }
    function Ht(t) {
     if (t.expression.kind === 99) {
      Wt(t);
     } else if (e.isPropertyAccessEntityNameExpression(t) && t.parent.parent.kind === 277) {
      if (e.isPrototypeAccess(t.expression)) {
       $t(t, t.parent);
      } else {
       Qt(t);
      }
     }
    }
    function Gt(e) {
     e.left.parent = e;
     e.right.parent = e;
     var t = e.left;
     Yt(t, t, false);
    }
    function $t(e, t) {
     var n = e.expression;
     var r = n.expression;
     e.parent = t;
     r.parent = n;
     n.parent = e;
     Yt(r, e, true);
    }
    function Xt(n) {
     var r = n.left;
     n.left.parent = n;
     n.right.parent = n;
     if (e.isIdentifier(r.expression) && s === t && p(t, r.expression)) {
      Kt(n);
     } else {
      Qt(r);
     }
    }
    function Qt(e) {
     e.expression.parent = e;
     Yt(e.expression, e, false);
    }
    function Yt(t, n, r) {
     var i = tn(t);
     var a = e.isBinaryExpression(n.parent) ? en(n.parent).parent.kind === 277 && !!e.getJavascriptInitializer(e.getInitializerOfBinaryExpression(n.parent), e.isPrototypeAccess(n.parent.left)) : n.parent.parent.kind === 277;
     if (!r && (!i || !(i.flags & 1920)) && a) {
      var o = 1536 | 67108864;
      var c = 67215503 & ~67108864;
      i = nn(n.expression, i, function(e, t, n) {
       if (t) {
        j(t, e, o);
        return t;
       } else {
        return J(n ? n.exports : s.locals, n, e, o, c);
       }
      });
     }
     if (!i || !Zt(i)) {
      return;
     }
     var u = r ? i.members || (i.members = e.createSymbolTable()) : i.exports || (i.exports = e.createSymbolTable());
     var l = a ? 67108864 : 0;
     var f = e.isFunctionLikeDeclaration(e.getAssignedJavascriptInitializer(n));
     var d = (f ? 8192 : 4) | l;
     var p = (f ? 67208127 : 0) & ~l;
     J(u, i, n, d, p);
    }
    function Zt(t) {
     if (t.flags & (16 | 32 | 1024)) {
      return true;
     }
     var n = t.valueDeclaration;
     var r = !n ? undefined : e.isVariableDeclaration(n) ? n.initializer : e.isBinaryExpression(n) ? n.right : e.isPropertyAccessExpression(n) && e.isBinaryExpression(n.parent) ? n.parent.right : undefined;
     r = r && e.getRightMostAssignedExpression(r);
     if (r) {
      var i = e.isPrototypeAccess(e.isVariableDeclaration(n) ? n.name : e.isBinaryExpression(n) ? n.left : n);
      return !!e.getJavascriptInitializer(e.isBinaryExpression(r) && r.operatorToken.kind === 54 ? r.right : r, i);
     }
     return false;
    }
    function en(t) {
     while (e.isBinaryExpression(t.parent)) {
      t = t.parent;
     }
     return t.parent;
    }
    function tn(t, n) {
     if (n === void 0) {
      n = s;
     }
     if (e.isIdentifier(t)) {
      return _(n, t.escapedText);
     } else {
      var r = tn(t.expression);
      return r && r.exports && r.exports.get(t.name.escapedText);
     }
    }
    function nn(n, r, i) {
     if (d(t, n)) {
      return t.symbol;
     } else if (e.isIdentifier(n)) {
      return i(n, tn(n), r);
     } else {
      var a = nn(n.expression, r, i);
      if (!a || !a.exports) return e.Debug.fail();
      return i(n.name, a.exports.get(n.name.escapedText), a);
     }
    }
    function rn(n) {
     if (!t.commonJsModuleIndicator && e.isRequireCall(n, false)) {
      Jt(n);
     }
    }
    function an(n) {
     if (n.kind === 238) {
      ct(n, 32, 68008383);
     } else {
      var r = n.name ? n.name.escapedText : "__class";
      st(n, 32, r);
      if (n.name) {
       F.set(n.name.escapedText, true);
      }
     }
     var i = n.symbol;
     var a = z(4 | 4194304, "prototype");
     var o = i.exports.get(a.escapedName);
     if (o) {
      if (n.name) {
       n.name.parent = n;
      }
      t.bindDiagnostics.push(L(o.declarations[0], e.Diagnostics.Duplicate_identifier_0, e.symbolName(a)));
     }
     i.exports.set(a.escapedName, a);
     a.parent = i;
    }
    function on(t) {
     return e.isEnumConst(t) ? ct(t, 128, 68008831) : ct(t, 256, 68008191);
    }
    function sn(t) {
     if (E) {
      ht(t, t.name);
     }
     if (!e.isBindingPattern(t.name)) {
      if (e.isBlockOrCatchScoped(t)) {
       ut(t);
      } else if (e.isParameterDeclaration(t)) {
       Xe(t, 1, 67216319);
      } else {
       Xe(t, 1, 67216318);
      }
     }
    }
    function cn(t) {
     if (t.kind === 296 && s.kind !== 291) {
      return;
     }
     if (E && !(t.flags & 4194304)) {
      ht(t, t.name);
     }
     if (e.isBindingPattern(t.name)) {
      st(t, 1, "__" + t.parent.parameters.indexOf(t));
     } else {
      Xe(t, 1, 67216319);
     }
     if (e.isParameterPropertyDeclaration(t)) {
      var n = t.parent.parent;
      J(n.symbol.members, n.symbol, t, 4 | (t.questionToken ? 16777216 : 0), 0);
     }
    }
    function un(n) {
     if (!t.isDeclarationFile && !(n.flags & 4194304)) {
      if (e.isAsyncFunction(n)) {
       T |= 1024;
      }
     }
     yt(n);
     if (E) {
      xt(n);
      ct(n, 16, 67215791);
     } else {
      Xe(n, 16, 67215791);
     }
    }
    function ln(n) {
     if (!t.isDeclarationFile && !(n.flags & 4194304)) {
      if (e.isAsyncFunction(n)) {
       T |= 1024;
      }
     }
     if (v) {
      n.flowNode = v;
     }
     yt(n);
     var r = n.name ? n.name.escapedText : "__function";
     return st(n, 16, r);
    }
    function fn(n, r, i) {
     if (!t.isDeclarationFile && !(n.flags & 4194304) && e.isAsyncFunction(n)) {
      T |= 1024;
     }
     if (v && e.isObjectLiteralOrClassExpressionMethod(n)) {
      n.flowNode = v;
     }
     return e.hasDynamicName(n) ? st(n, r, "__computed") : Xe(n, r, i);
    }
    function dn(t) {
     var n = e.findAncestor(t, function(t) {
      return t.parent && e.isConditionalTypeNode(t.parent) && t.parent.extendsType === t;
     });
     return n && n.parent;
    }
    function pn(t) {
     if (e.isJSDocTemplateTag(t.parent)) {
      var n = e.find(t.parent.parent.tags, e.isJSDocTypeAlias) || e.getHostSignatureFromJSDoc(t.parent);
      if (n) {
       if (!n.locals) {
        n.locals = e.createSymbolTable();
       }
       J(n.locals, undefined, t, 262144, 67639784);
      } else {
       Xe(t, 262144, 67639784);
      }
     } else if (t.parent.kind === 174) {
      var r = dn(t.parent);
      if (r) {
       if (!r.locals) {
        r.locals = e.createSymbolTable();
       }
       J(r.locals, undefined, t, 262144, 67639784);
      } else {
       st(t, 262144, q(t));
      }
     } else {
      Xe(t, 262144, 67639784);
     }
    }
    function mn(e) {
     var t = n(e);
     return t === 1 || t === 2 && !!i.preserveConstEnums;
    }
    function _n(t) {
     if (!(v.flags & 1)) {
      return false;
     }
     if (v === P) {
      var n = e.isStatementButNotDeclaration(t) && t.kind !== 218 || t.kind === 238 || t.kind === 242 && mn(t) || e.isEnumDeclaration(t) && (!e.isEnumConst(t) || i.preserveConstEnums);
      if (n) {
       v = I;
       if (!i.allowUnreachableCode) {
        var r = e.unreachableCodeIsError(i) && !(t.flags & 4194304) && (!e.isVariableStatement(t) || !!(e.getCombinedNodeFlags(t.declarationList) & 3) || t.declarationList.declarations.some(function(e) {
         return !!e.initializer;
        }));
        u(t, function(t, n) {
         return Et(r, t, n, e.Diagnostics.Unreachable_code_detected);
        });
       }
      }
     }
     return true;
    }
   }
   function u(t, n) {
    if (e.isStatement(t) && l(t) && e.isBlock(t.parent)) {
     var r = t.parent.statements;
     var i = e.sliceAfter(r, t);
     e.getRangesWhere(i, l, function(e, t) {
      return n(i[e], i[t - 1]);
     });
    } else {
     n(t, t);
    }
   }
   function l(t) {
    return !e.isFunctionDeclaration(t) && !f(t) && !(e.isVariableStatement(t) && !(e.getCombinedNodeFlags(t) & (1 | 2)) && t.declarationList.declarations.some(function(e) {
     return !e.initializer;
    }));
   }
   function f(t) {
    switch (t.kind) {
    case 239:
    case 240:
     return true;

    case 242:
     return n(t) !== 1;

    case 241:
     return e.hasModifier(t, 2048);

    default:
     return false;
    }
   }
   function d(t, n) {
    return e.isExportsIdentifier(n) || e.isModuleExportsPropertyAccessExpression(n) || e.isIdentifier(n) && p(t, n);
   }
   e.isExportsOrModuleExportsOrAlias = d;
   function p(t, n) {
    var r = _(t, n.escapedText);
    return !!r && !!r.valueDeclaration && e.isVariableDeclaration(r.valueDeclaration) && !!r.valueDeclaration.initializer && m(t, r.valueDeclaration.initializer);
   }
   function m(t, n) {
    return d(t, n) || e.isAssignmentExpression(n, true) && (m(t, n.left) || m(t, n.right));
   }
   function _(e, t) {
    var n = e.locals && e.locals.get(t);
    if (n) {
     return n.exportSymbol || n;
    }
    return e.symbol && e.symbol.exports && e.symbol.exports.get(t);
   }
   function g(e, t) {
    var n = e.kind;
    switch (n) {
    case 189:
     return h(e, t);

    case 190:
     return v(e, t);

    case 242:
     return q(e, t);

    case 193:
     return x(e, t);

    case 202:
     return y(e, t);

    case 219:
     return j(e, t);

    case 149:
     return b(e, t);

    case 195:
     return I(e, t);

    case 194:
     return P(e, t);

    case 237:
     return F(e, t);

    case 235:
     return L(e, t);

    case 236:
     return U(e, t);

    case 217:
     return R(e, t);

    case 231:
     return B(e, t);

    case 238:
     return k(e, t);

    case 207:
     return S(e, t);

    case 271:
     return w(e, t);

    case 272:
     return C(e, t);

    case 209:
     return D(e, t);

    case 155:
     return T(e, t);

    case 152:
     return A(e, t);

    case 154:
     return E(e, t);

    case 156:
    case 157:
     return N(e, t);

    case 246:
     return z(e, t);

    case 187:
     return O(e, t);

    case 188:
     return M(e, t);

    default:
     return J(e, n, t);
    }
   }
   e.computeTransformFlagsForNode = g;
   function h(e, t) {
    var n = t;
    var r = e.expression;
    if (e.typeArguments) {
     n |= 3;
    }
    if (t & 524288 || r.transformFlags & (134217728 | 268435456)) {
     n |= 192;
     if (r.transformFlags & 268435456) {
      n |= 16384;
     }
    }
    if (r.kind === 91) {
     n |= 67108864;
     if (t & 16384) {
      n |= 32768;
     }
    }
    e.transformFlags = n | 536870912;
    return n & ~940049729;
   }
   function v(e, t) {
    var n = t;
    if (e.typeArguments) {
     n |= 3;
    }
    if (t & 524288) {
     n |= 192;
    }
    e.transformFlags = n | 536870912;
    return n & ~940049729;
   }
   function y(e, t) {
    var n = t;
    var r = e.operatorToken.kind;
    var i = e.left.kind;
    if (r === 58 && i === 186) {
     n |= 8 | 192 | 3072;
    } else if (r === 58 && i === 185) {
     n |= 192 | 3072;
    } else if (r === 40 || r === 62) {
     n |= 32;
    }
    e.transformFlags = n | 536870912;
    return n & ~939525441;
   }
   function b(t, n) {
    var r = n;
    var i = t.name;
    var a = t.initializer;
    var o = t.dotDotDotToken;
    if (t.questionToken || t.type || n & 4096 || e.isThisIdentifier(i)) {
     r |= 3;
    }
    if (e.hasModifier(t, 92)) {
     r |= 3 | 262144;
    }
    if (n & 1048576) {
     r |= 8;
    }
    if (n & 8388608 || a || o) {
     r |= 192 | 131072;
    }
    t.transformFlags = r | 536870912;
    return r & ~939525441;
   }
   function x(e, t) {
    var n = t;
    var r = e.expression;
    var i = r.kind;
    var a = r.transformFlags;
    if (i === 210 || i === 192) {
     n |= 3;
    }
    if (a & 1024) {
     n |= 1024;
    }
    e.transformFlags = n | 536870912;
    return n & ~536872257;
   }
   function k(t, n) {
    var r;
    if (e.hasModifier(t, 2)) {
     r = 3;
    } else {
     r = n | 192;
     if (n & 274432 || t.typeParameters) {
      r |= 3;
     }
     if (n & 65536) {
      r |= 16384;
     }
    }
    t.transformFlags = r | 536870912;
    return r & ~942011713;
   }
   function S(e, t) {
    var n = t | 192;
    if (t & 274432 || e.typeParameters) {
     n |= 3;
    }
    if (t & 65536) {
     n |= 16384;
    }
    e.transformFlags = n | 536870912;
    return n & ~942011713;
   }
   function w(t, n) {
    var r = n;
    switch (t.token) {
    case 85:
     r |= 192;
     break;

    case 108:
     r |= 3;
     break;

    default:
     e.Debug.fail("Unexpected token for heritage clause");
     break;
    }
    t.transformFlags = r | 536870912;
    return r & ~939525441;
   }
   function C(t, n) {
    var r = n;
    if (!t.variableDeclaration) {
     r |= 8;
    } else if (e.isBindingPattern(t.variableDeclaration.name)) {
     r |= 192;
    }
    t.transformFlags = r | 536870912;
    return r & ~940574017;
   }
   function D(e, t) {
    var n = t | 192;
    if (e.typeArguments) {
     n |= 3;
    }
    e.transformFlags = n | 536870912;
    return n & ~939525441;
   }
   function T(t, n) {
    var r = n;
    if (e.hasModifier(t, 2270) || !t.body) {
     r |= 3;
    }
    if (n & 1048576) {
     r |= 8;
    }
    t.transformFlags = r | 536870912;
    return r & ~1003668801;
   }
   function E(t, n) {
    var r = n | 192;
    if (t.decorators || e.hasModifier(t, 2270) || t.typeParameters || t.type || t.name && e.isComputedPropertyName(t.name) || !t.body) {
     r |= 3;
    }
    if (n & 1048576) {
     r |= 8;
    }
    if (e.hasModifier(t, 256)) {
     r |= t.asteriskToken ? 8 : 16;
    }
    if (t.asteriskToken) {
     r |= 768;
    }
    t.transformFlags = r | 536870912;
    return r & ~1003668801;
   }
   function N(t, n) {
    var r = n;
    if (t.decorators || e.hasModifier(t, 2270) || t.type || t.name && e.isComputedPropertyName(t.name) || !t.body) {
     r |= 3;
    }
    if (n & 1048576) {
     r |= 8;
    }
    t.transformFlags = r | 536870912;
    return r & ~1003668801;
   }
   function A(t, n) {
    var r = n | 3;
    if (t.initializer || e.isComputedPropertyName(t.name)) {
     r |= 8192;
    }
    t.transformFlags = r | 536870912;
    return r & ~939525441;
   }
   function F(t, n) {
    var r;
    var i = e.getModifierFlags(t);
    var a = t.body;
    if (!a || i & 2) {
     r = 3;
    } else {
     r = n | 33554432;
     if (i & 2270 || t.typeParameters || t.type) {
      r |= 3;
     }
     if (i & 256) {
      r |= t.asteriskToken ? 8 : 16;
     }
     if (n & 1048576) {
      r |= 8;
     }
     if (n & 163840) {
      r |= 192;
     }
     if (t.asteriskToken) {
      r |= 768;
     }
    }
    t.transformFlags = r | 536870912;
    return r & ~1003935041;
   }
   function P(t, n) {
    var r = n;
    if (e.hasModifier(t, 2270) || t.typeParameters || t.type) {
     r |= 3;
    }
    if (e.hasModifier(t, 256)) {
     r |= t.asteriskToken ? 8 : 16;
    }
    if (n & 1048576) {
     r |= 8;
    }
    if (n & 163840) {
     r |= 192;
    }
    if (t.asteriskToken) {
     r |= 768;
    }
    t.transformFlags = r | 536870912;
    return r & ~1003935041;
   }
   function I(t, n) {
    var r = n | 192;
    if (e.hasModifier(t, 2270) || t.typeParameters || t.type) {
     r |= 3;
    }
    if (e.hasModifier(t, 256)) {
     r |= 16;
    }
    if (n & 1048576) {
     r |= 8;
    }
    if (n & 16384) {
     r |= 32768;
    }
    t.transformFlags = r | 536870912;
    return r & ~1003902273;
   }
   function O(e, t) {
    var n = t;
    if (n & 134217728) {
     n ^= 134217728;
     n |= 268435456;
    }
    e.transformFlags = n | 536870912;
    return n & ~671089985;
   }
   function M(e, t) {
    var n = t;
    var r = e.expression;
    var i = r.transformFlags;
    if (i & 134217728) {
     n &= ~134217728;
     n |= 268435456;
    }
    e.transformFlags = n | 536870912;
    return n & ~671089985;
   }
   function L(e, t) {
    var n = t;
    n |= 192 | 8388608;
    if (t & 1048576) {
     n |= 8;
    }
    if (e.type) {
     n |= 3;
    }
    e.transformFlags = n | 536870912;
    return n & ~939525441;
   }
   function R(t, n) {
    var r;
    var i = t.declarationList.transformFlags;
    if (e.hasModifier(t, 2)) {
     r = 3;
    } else {
     r = n;
     if (i & 8388608) {
      r |= 192;
     }
    }
    t.transformFlags = r | 536870912;
    return r & ~939525441;
   }
   function B(t, n) {
    var r = n;
    if (n & 4194304 && e.isIterationStatement(t, true)) {
     r |= 192;
    }
    t.transformFlags = r | 536870912;
    return r & ~939525441;
   }
   function z(t, n) {
    var r = n;
    if (!e.isExternalModuleImportEqualsDeclaration(t)) {
     r |= 3;
    }
    t.transformFlags = r | 536870912;
    return r & ~939525441;
   }
   function j(e, t) {
    var n = t;
    if (e.expression.transformFlags & 1024) {
     n |= 192;
    }
    e.transformFlags = n | 536870912;
    return n & ~939525441;
   }
   function q(t, n) {
    var r = 3;
    var i = e.getModifierFlags(t);
    if ((i & 2) === 0) {
     r |= n;
    }
    t.transformFlags = r | 536870912;
    return r & ~977327425;
   }
   function U(e, t) {
    var n = t | 33554432;
    if (t & 8388608) {
     n |= 192;
    }
    if (e.flags & 3) {
     n |= 192 | 4194304;
    }
    e.transformFlags = n | 536870912;
    return n & ~948962625;
   }
   function J(e, t, n) {
    var r = n;
    var i = 939525441;
    switch (t) {
    case 120:
    case 199:
     r |= 8 | 16;
     break;

    case 192:
    case 210:
    case 305:
     r |= 3;
     i = 536872257;
     break;

    case 114:
    case 112:
    case 113:
    case 117:
    case 124:
    case 76:
    case 241:
    case 276:
    case 211:
    case 132:
     r |= 3;
     break;

    case 258:
    case 259:
    case 260:
    case 10:
    case 261:
    case 262:
    case 263:
    case 264:
    case 265:
    case 266:
    case 267:
    case 268:
     r |= 4;
     break;

    case 13:
    case 14:
    case 15:
    case 16:
    case 204:
    case 191:
    case 274:
    case 115:
    case 212:
     r |= 192;
     break;

    case 9:
     if (e.hasExtendedUnicodeEscape) {
      r |= 192;
     }
     break;

    case 8:
     if (e.numericLiteralFlags & 384) {
      r |= 192;
     }
     break;

    case 225:
     if (e.awaitModifier) {
      r |= 8;
     }
     r |= 192;
     break;

    case 205:
     r |= 8 | 192 | 16777216;
     break;

    case 119:
    case 134:
    case 131:
    case 135:
    case 137:
    case 122:
    case 138:
    case 105:
    case 148:
    case 151:
    case 153:
    case 158:
    case 159:
    case 160:
    case 161:
    case 162:
    case 163:
    case 164:
    case 165:
    case 166:
    case 167:
    case 168:
    case 169:
    case 170:
    case 171:
    case 172:
    case 173:
    case 174:
    case 175:
    case 239:
    case 240:
    case 176:
    case 177:
    case 178:
    case 179:
    case 180:
    case 245:
     r = 3;
     i = -3;
     break;

    case 147:
     r |= 2097152;
     if (n & 16384) {
      r |= 65536;
     }
     break;

    case 206:
     r |= 192 | 524288;
     break;

    case 275:
     r |= 8 | 1048576;
     break;

    case 97:
     r |= 192 | 134217728;
     i = 536872257;
     break;

    case 99:
     r |= 16384;
     break;

    case 182:
     r |= 192 | 8388608;
     if (n & 524288) {
      r |= 8 | 1048576;
     }
     i = 940049729;
     break;

    case 183:
     r |= 192 | 8388608;
     i = 940049729;
     break;

    case 184:
     r |= 192;
     if (e.dotDotDotToken) {
      r |= 524288;
     }
     break;

    case 150:
     r |= 3 | 4096;
     break;

    case 186:
     i = 942740801;
     if (n & 2097152) {
      r |= 192;
     }
     if (n & 65536) {
      r |= 16384;
     }
     if (n & 1048576) {
      r |= 8;
     }
     break;

    case 185:
    case 190:
     i = 940049729;
     if (n & 524288) {
      r |= 192;
     }
     break;

    case 221:
    case 222:
    case 223:
    case 224:
     if (n & 4194304) {
      r |= 192;
     }
     break;

    case 277:
     if (n & 32768) {
      r |= 192;
     }
     break;

    case 228:
     r |= 33554432 | 8;
     break;

    case 226:
    case 227:
     r |= 33554432;
     break;
    }
    e.transformFlags = r | 536870912;
    return r & ~i;
   }
   function K(e) {
    if (e >= 161 && e <= 181) {
     return -3;
    }
    switch (e) {
    case 189:
    case 190:
    case 185:
     return 940049729;

    case 242:
     return 977327425;

    case 149:
     return 939525441;

    case 195:
     return 1003902273;

    case 194:
    case 237:
     return 1003935041;

    case 236:
     return 948962625;

    case 238:
    case 207:
     return 942011713;

    case 155:
     return 1003668801;

    case 154:
    case 156:
    case 157:
     return 1003668801;

    case 119:
    case 134:
    case 131:
    case 137:
    case 135:
    case 122:
    case 138:
    case 105:
    case 148:
    case 151:
    case 153:
    case 158:
    case 159:
    case 160:
    case 239:
    case 240:
     return -3;

    case 186:
     return 942740801;

    case 272:
     return 940574017;

    case 182:
    case 183:
     return 940049729;

    case 192:
    case 210:
    case 305:
    case 193:
    case 97:
     return 536872257;

    case 187:
    case 188:
     return 671089985;

    default:
     return 939525441;
    }
   }
   e.getTransformFlagsSubtreeExclusions = K;
   function V(t, n) {
    n.parent = t;
    e.forEachChild(n, function(e) {
     return V(n, e);
    });
   }
  })(s || (s = {}));
  var s;
  (function(e) {
   function t(t, n, r, i, a, o, s, c, u, l) {
    return f;
    function f(f) {
     if (f === void 0) {
      f = function() {
       return true;
      };
     }
     var d = [];
     var p = [];
     return {
      walkType: function(t) {
       try {
        m(t);
        return {
         visitedTypes: e.getOwnValues(d),
         visitedSymbols: e.getOwnValues(p)
        };
       } finally {
        e.clear(d);
        e.clear(p);
       }
      },
      walkSymbol: function(t) {
       try {
        w(t);
        return {
         visitedTypes: e.getOwnValues(d),
         visitedSymbols: e.getOwnValues(p)
        };
       } finally {
        e.clear(d);
        e.clear(p);
       }
      }
     };
     function m(e) {
      if (!e) {
       return;
      }
      if (d[e.id]) {
       return;
      }
      d[e.id] = e;
      var t = w(e.symbol);
      if (t) return;
      if (e.flags & 131072) {
       var n = e;
       var r = n.objectFlags;
       if (r & 4) {
        _(e);
       }
       if (r & 32) {
        b(e);
       }
       if (r & (1 | 2)) {
        k(e);
       }
       if (r & (8 | 16)) {
        S(n);
       }
      }
      if (e.flags & 65536) {
       g(e);
      }
      if (e.flags & 786432) {
       h(e);
      }
      if (e.flags & 1048576) {
       v(e);
      }
      if (e.flags & 2097152) {
       y(e);
      }
     }
     function _(t) {
      m(t.target);
      e.forEach(t.typeArguments, m);
     }
     function g(e) {
      m(u(e));
     }
     function h(t) {
      e.forEach(t.types, m);
     }
     function v(e) {
      m(e.type);
     }
     function y(e) {
      m(e.objectType);
      m(e.indexType);
      m(e.constraint);
     }
     function b(e) {
      m(e.typeParameter);
      m(e.constraintType);
      m(e.templateType);
      m(e.modifiersType);
     }
     function x(i) {
      var a = n(i);
      if (a) {
       m(a.type);
      }
      e.forEach(i.typeParameters, m);
      for (var o = 0, s = i.parameters; o < s.length; o++) {
       var c = s[o];
       w(c);
      }
      m(t(i));
      m(r(i));
     }
     function k(t) {
      S(t);
      e.forEach(t.typeParameters, m);
      e.forEach(i(t), m);
      m(t.thisType);
     }
     function S(e) {
      var t = c(e, 0);
      m(t);
      var n = c(e, 1);
      m(n);
      var r = a(e);
      for (var i = 0, o = r.callSignatures; i < o.length; i++) {
       var s = o[i];
       x(s);
      }
      for (var u = 0, l = r.constructSignatures; u < l.length; u++) {
       var s = l[u];
       x(s);
      }
      for (var f = 0, d = r.properties; f < d.length; f++) {
       var p = d[f];
       w(p);
      }
     }
     function w(t) {
      if (!t) {
       return false;
      }
      var n = e.getSymbolId(t);
      if (p[n]) {
       return false;
      }
      p[n] = t;
      if (!f(t)) {
       return true;
      }
      var r = o(t);
      m(r);
      if (t.exports) {
       t.exports.forEach(w);
      }
      e.forEach(t.declarations, function(e) {
       if (e.type && e.type.kind === 165) {
        var t = e.type;
        var n = s(l(t.exprName));
        w(n);
       }
      });
      return false;
     }
    }
   }
   e.createGetSymbolWalker = t;
  })(s || (s = {}));
  var s;
  (function(e) {
   var t = /^".+"$/;
   var n = 1;
   var a = 1;
   var o = 1;
   var s = 1;
   function c(e) {
    if (!e.id) {
     e.id = a;
     a++;
    }
    return e.id;
   }
   e.getNodeId = c;
   function u(e) {
    if (!e.id) {
     e.id = n;
     n++;
    }
    return e.id;
   }
   e.getSymbolId = u;
   function l(t, n) {
    var r = e.getModuleInstanceState(t);
    return r === 1 || n && r === 2;
   }
   e.isInstantiatedModule = l;
   function f(n, a) {
    var f;
    var g;
    var h;
    var v = e.objectAllocator.getSymbolConstructor();
    var y = e.objectAllocator.getTypeConstructor();
    var b = e.objectAllocator.getSignatureConstructor();
    var x = 0;
    var k = 0;
    var S = 0;
    var w = 0;
    var C = e.createSymbolTable();
    var D = e.identity;
    var T = n.getCompilerOptions();
    var E = e.getEmitScriptTarget(T);
    var N = e.getEmitModuleKind(T);
    var A = e.getAllowSyntheticDefaultImports(T);
    var F = e.getStrictOptionValue(T, "strictNullChecks");
    var P = e.getStrictOptionValue(T, "strictFunctionTypes");
    var I = e.getStrictOptionValue(T, "strictPropertyInitialization");
    var O = e.getStrictOptionValue(T, "noImplicitAny");
    var M = e.getStrictOptionValue(T, "noImplicitThis");
    var L = !!T.keyofStringsOnly;
    var R = Cw();
    var B = Ci();
    var z = Sn(4, "undefined");
    z.declarations = [];
    var j = Sn(4, "arguments");
    var q = Sn(4, "require");
    var U = Sn(4, "module");
    var J;
    var K = {
     getNodeCount: function() {
      return e.sum(n.getSourceFiles(), "nodeCount");
     },
     getIdentifierCount: function() {
      return e.sum(n.getSourceFiles(), "identifierCount");
     },
     getSymbolCount: function() {
      return e.sum(n.getSourceFiles(), "symbolCount") + k;
     },
     getTypeCount: function() {
      return x;
     },
     isUndefinedSymbol: function(e) {
      return e === z;
     },
     isArgumentsSymbol: function(e) {
      return e === j;
     },
     isUnknownSymbol: function(e) {
      return e === Y;
     },
     getMergedSymbol: Kr,
     getDiagnostics: vS,
     getGlobalDiagnostics: bS,
     getTypeOfSymbolAtLocation: function(t, n) {
      n = e.getParseTreeNode(n);
      return n ? Km(t, n) : re;
     },
     getSymbolsOfParameterPropertyDeclaration: function(t, n) {
      var r = e.getParseTreeNode(t, e.isParameter);
      if (r === undefined) return e.Debug.fail("Cannot get symbols of a synthetic parameter that cannot be resolved to a parse-tree node.");
      return zn(r, e.escapeLeadingUnderscores(n));
     },
     getDeclaredTypeOfSymbol: Ya,
     getPropertiesOfType: rs,
     getPropertyOfType: function(t, n) {
      return Ds(t, e.escapeLeadingUnderscores(n));
     },
     getTypeOfPropertyOfType: function(t, n) {
      return qi(t, e.escapeLeadingUnderscores(n));
     },
     getIndexInfoOfType: Fs,
     getSignaturesOfType: Es,
     getIndexTypeOfType: Ps,
     getBaseTypes: La,
     getBaseTypeOfLiteralType: Nd,
     getWidenedType: tp,
     getTypeFromTypeNode: function(t) {
      var n = e.getParseTreeNode(t, e.isTypeNode);
      return n ? Ul(n) : re;
     },
     getParameterType: $v,
     getReturnTypeOfSignature: tc,
     getNullableType: qd,
     getNonNullableType: Kd,
     typeToTypeNode: B.typeToTypeNode,
     indexInfoToIndexSignatureDeclaration: B.indexInfoToIndexSignatureDeclaration,
     signatureToSignatureDeclaration: B.signatureToSignatureDeclaration,
     symbolToEntityName: B.symbolToEntityName,
     symbolToExpression: B.symbolToExpression,
     symbolToTypeParameterDeclarations: B.symbolToTypeParameterDeclarations,
     symbolToParameterDeclaration: B.symbolToParameterDeclaration,
     typeParameterToDeclaration: B.typeParameterToDeclaration,
     getSymbolsInScope: function(t, n) {
      t = e.getParseTreeNode(t);
      return t ? kS(t, n) : [];
     },
     getSymbolAtLocation: function(t) {
      t = e.getParseTreeNode(t);
      return t ? MS(t) : undefined;
     },
     getShorthandAssignmentValueSymbol: function(t) {
      t = e.getParseTreeNode(t);
      return t ? LS(t) : undefined;
     },
     getExportSpecifierLocalTargetSymbol: function(t) {
      var n = e.getParseTreeNode(t, e.isExportSpecifier);
      return n ? RS(n) : undefined;
     },
     getExportSymbolOfSymbol: function(e) {
      return Kr(e.exportSymbol || e);
     },
     getTypeAtLocation: function(t) {
      t = e.getParseTreeNode(t);
      return t ? BS(t) : re;
     },
     getPropertySymbolOfDestructuringAssignment: function(t) {
      var n = e.getParseTreeNode(t, e.isIdentifier);
      return n ? jS(n) : undefined;
     },
     signatureToString: function(t, n, r, i) {
      return ki(t, e.getParseTreeNode(n), r, i);
     },
     typeToString: function(t, n, r) {
      return Si(t, e.getParseTreeNode(n), r);
     },
     symbolToString: function(t, n, r, i) {
      return xi(t, e.getParseTreeNode(n), r, i);
     },
     typePredicateToString: function(t, n, r) {
      return Di(t, e.getParseTreeNode(n), r);
     },
     writeSignature: function(t, n, r, i, a) {
      return ki(t, e.getParseTreeNode(n), r, i, a);
     },
     writeType: function(t, n, r, i) {
      return Si(t, e.getParseTreeNode(n), r, i);
     },
     writeSymbol: function(t, n, r, i, a) {
      return xi(t, e.getParseTreeNode(n), r, i, a);
     },
     writeTypePredicate: function(t, n, r, i) {
      return Di(t, e.getParseTreeNode(n), r, i);
     },
     getAugmentedPropertiesOfType: JS,
     getRootSymbols: VS,
     getContextualType: function(t) {
      var n = e.getParseTreeNode(t, e.isExpression);
      return n ? U_(n) : undefined;
     },
     getContextualTypeForArgumentAtIndex: function(t, n) {
      var r = e.getParseTreeNode(t, e.isCallLikeExpression);
      return r && D_(r, n);
     },
     getContextualTypeForJsxAttribute: function(t) {
      var n = e.getParseTreeNode(t, e.isJsxAttributeLike);
      return n && z_(n);
     },
     isContextSensitive: yf,
     getFullyQualifiedName: Sr,
     getResolvedSignature: function(t, n, r) {
      var i = e.getParseTreeNode(t, e.isCallLikeExpression);
      J = r;
      var a = i ? Ev(i, n) : undefined;
      J = undefined;
      return a;
     },
     getConstantValue: function(t) {
      var n = e.getParseTreeNode(t, dw);
      return n ? pw(n) : undefined;
     },
     isValidPropertyAccess: function(t, n) {
      var r = e.getParseTreeNode(t, e.isPropertyAccessOrQualifiedNameOrImportTypeNode);
      return !!r && Sh(r, e.escapeLeadingUnderscores(n));
     },
     isValidPropertyAccessForCompletions: function(t, n, r) {
      var i = e.getParseTreeNode(t, e.isPropertyAccessExpression);
      return !!i && wh(i, n, r);
     },
     getSignatureFromDeclaration: function(t) {
      var n = e.getParseTreeNode(t, e.isFunctionLike);
      return n ? Vs(n) : undefined;
     },
     isImplementationOfOverload: function(t) {
      var n = e.getParseTreeNode(t, e.isFunctionLike);
      return n ? sw(n) : undefined;
     },
     getImmediateAliasedSymbol: function(t) {
      e.Debug.assert((t.flags & 2097152) !== 0, "Should only get Alias here.");
      var n = Mn(t);
      if (!n.immediateTarget) {
       var r = tr(t);
       if (!r) return e.Debug.fail();
       n.immediateTarget = gr(r, true);
      }
      return n.immediateTarget;
     },
     getAliasedSymbol: yr,
     getEmitResolver: hn,
     getExportsOfModule: Lr,
     getExportsAndPropertiesOfModule: Rr,
     getSymbolWalker: e.createGetSymbolWalker(rc, ec, tc, La, Zo, xa, Ip, As, ss, Gk),
     getAmbientModules: MC,
     getAllAttributesTypeFromJsxOpeningLikeElement: function(t) {
      var n = e.getParseTreeNode(t, e.isJsxOpeningLikeElement);
      return n ? qg(n) : undefined;
     },
     getJsxIntrinsicTagNamesAt: Hg,
     isOptionalParameter: function(t) {
      var n = e.getParseTreeNode(t, e.isParameter);
      return n ? Bs(n) : false;
     },
     tryGetMemberInModuleExports: function(t, n) {
      return Br(e.escapeLeadingUnderscores(t), n);
     },
     tryGetMemberInModuleExportsAndProperties: function(t, n) {
      return zr(e.escapeLeadingUnderscores(t), n);
     },
     tryFindAmbientModuleWithoutAugmentations: function(e) {
      return Rs(e, false);
     },
     getApparentType: ks,
     getUnionType: Ru,
     createAnonymousType: oi,
     createSignature: Co,
     createSymbol: Sn,
     createIndexInfo: hc,
     getAnyType: function() {
      return ee;
     },
     getStringType: function() {
      return ue;
     },
     getNumberType: function() {
      return le;
     },
     createPromiseType: uy,
     createArrayType: bu,
     getBooleanType: function() {
      return pe;
     },
     getFalseType: function() {
      return fe;
     },
     getTrueType: function() {
      return de;
     },
     getVoidType: function() {
      return _e;
     },
     getUndefinedType: function() {
      return ae;
     },
     getNullType: function() {
      return se;
     },
     getESSymbolType: function() {
      return me;
     },
     getNeverType: function() {
      return ge;
     },
     isSymbolAccessible: _i,
     isArrayLikeType: kd,
     isTypeInvalidDueToUnionDiscriminant: is,
     getAllPossiblePropertiesOfTypes: as,
     getSuggestionForNonexistentProperty: function(e, t) {
      return gh(e, t);
     },
     getSuggestionForNonexistentSymbol: function(t, n, r) {
      return vh(t, e.escapeLeadingUnderscores(n), r);
     },
     getSuggestionForNonexistentExport: function(e, t) {
      return bh(e, t);
     },
     getBaseConstraintOfType: ps,
     getDefaultFromTypeParameter: function(e) {
      return e && e.flags & 65536 ? ys(e) : undefined;
     },
     resolveName: function(t, n, r, i) {
      return qn(n, e.escapeLeadingUnderscores(t), r, undefined, undefined, false, i);
     },
     getJsxNamespace: function(t) {
      return e.unescapeLeadingUnderscores(gn(t));
     },
     getAccessibleSymbolChain: ui,
     getTypePredicateOfSignature: ec,
     resolveExternalModuleSymbol: Pr,
     tryGetThisTypeAt: function(t) {
      t = e.getParseTreeNode(t);
      return t && f_(t);
     },
     getTypeArgumentConstraint: function(t) {
      var n = e.getParseTreeNode(t, e.isTypeNode);
      return n && Bb(n);
     },
     getSuggestionDiagnostics: function(t, n) {
      var i;
      try {
       f = n;
       mS(t);
       e.Debug.assert(!!(Ln(t).flags & 1));
       i = e.addRange(i, Wt.get(t.fileName));
       if (!t.isDeclarationFile && (!_S(0) || !_S(1))) {
        a();
       }
       return i || e.emptyArray;
      } finally {
       f = undefined;
      }
      function a() {
       xx(gS(t), function(t, n, a) {
        if (!e.containsParseError(t) && !_S(n)) {
         (i || (i = [])).push(r({}, a, {
          category: e.DiagnosticCategory.Suggestion
         }));
        }
       });
      }
     },
     runWithCancellationToken: function(e, t) {
      try {
       f = e;
       return t(K);
      } finally {
       f = undefined;
      }
     }
    };
    var V = e.createMap();
    var W = e.createMap();
    var H = e.createMap();
    var G = e.createMap();
    var $ = e.createMap();
    var X = [];
    var Q = e.createMap();
    var Y = Sn(4, "unknown");
    var Z = Sn(0, "__resolving__");
    var ee = Zr(1, "any");
    var te = Zr(1, "any");
    var ne = Zr(1, "any");
    var re = Zr(1, "error");
    var ie = Zr(2, "unknown");
    var ae = Zr(8192, "undefined");
    var oe = F ? ae : Zr(8192 | 134217728, "undefined");
    var se = Zr(16384, "null");
    var ce = F ? se : Zr(16384 | 134217728, "null");
    var ue = Zr(4, "string");
    var le = Zr(8, "number");
    var fe = Zr(256, "false");
    var de = Zr(256, "true");
    var pe = ei([ fe, de ]);
    var me = Zr(1024, "symbol");
    var _e = Zr(4096, "void");
    var ge = Zr(32768, "never");
    var he = Zr(32768, "never");
    var ve = Zr(32768, "never");
    var ye = Zr(16777216, "object");
    var be = Ru([ ue, le, me ]);
    var xe = L ? ue : be;
    var ke = oi(undefined, C, e.emptyArray, e.emptyArray, undefined, undefined);
    var Se = Sn(2048, "__type");
    Se.members = e.createSymbolTable();
    var we = oi(Se, C, e.emptyArray, e.emptyArray, undefined, undefined);
    var Ce = oi(undefined, C, e.emptyArray, e.emptyArray, undefined, undefined);
    Ce.instantiations = e.createMap();
    var De = oi(undefined, C, e.emptyArray, e.emptyArray, undefined, undefined);
    De.flags |= 536870912;
    var Te = oi(undefined, C, e.emptyArray, e.emptyArray, undefined, undefined);
    var Ee = oi(undefined, C, e.emptyArray, e.emptyArray, undefined, undefined);
    var Ne = oi(undefined, C, e.emptyArray, e.emptyArray, undefined, undefined);
    var Ae = Yr(65536);
    var Fe = Yr(65536);
    Fe.constraint = Ae;
    var Pe = Yr(65536);
    var Ie = qs("<<unresolved>>", 0, ee);
    var Oe = Co(undefined, undefined, undefined, e.emptyArray, ee, undefined, 0, false, false);
    var Me = Co(undefined, undefined, undefined, e.emptyArray, re, undefined, 0, false, false);
    var Le = Co(undefined, undefined, undefined, e.emptyArray, ee, undefined, 0, false, false);
    var Re = Co(undefined, undefined, undefined, e.emptyArray, he, undefined, 0, false, false);
    var Be = [ Le ];
    var ze = hc(ue, true);
    var je = hc(ee, false);
    var qe = e.createSymbolTable();
    var Ue;
    var Je = e.createMap();
    var Ke;
    var Ve;
    var We;
    var He;
    var Ge;
    var $e;
    var Xe;
    var Qe;
    var Ye;
    var Ze;
    var et;
    var tt;
    var nt;
    var rt;
    var it;
    var at;
    var ot;
    var st;
    var ct;
    var ut;
    var lt;
    var ft;
    var dt;
    var pt;
    var mt;
    var _t;
    var gt;
    var ht;
    var vt;
    var yt;
    var bt;
    var xt = e.createMap();
    var kt = 0;
    var St = 0;
    var wt = 0;
    var Ct = false;
    var Dt = Ll("");
    var Tt = Ll(0);
    var Et = [];
    var Nt = [];
    var At = [];
    var Ft = 0;
    var Pt = 10;
    var It = [];
    var Ot = [];
    var Mt = [];
    var Lt = [];
    var Rt = [];
    var Bt = [];
    var zt = [];
    var jt = [];
    var qt = [];
    var Ut = [];
    var Jt = [];
    var Kt = [];
    var Vt = e.createDiagnosticCollection();
    var Wt = e.createMultiMap();
    var Ht;
    (function(e) {
     e[e["None"] = 0] = "None";
     e[e["TypeofEQString"] = 1] = "TypeofEQString";
     e[e["TypeofEQNumber"] = 2] = "TypeofEQNumber";
     e[e["TypeofEQBoolean"] = 4] = "TypeofEQBoolean";
     e[e["TypeofEQSymbol"] = 8] = "TypeofEQSymbol";
     e[e["TypeofEQObject"] = 16] = "TypeofEQObject";
     e[e["TypeofEQFunction"] = 32] = "TypeofEQFunction";
     e[e["TypeofEQHostObject"] = 64] = "TypeofEQHostObject";
     e[e["TypeofNEString"] = 128] = "TypeofNEString";
     e[e["TypeofNENumber"] = 256] = "TypeofNENumber";
     e[e["TypeofNEBoolean"] = 512] = "TypeofNEBoolean";
     e[e["TypeofNESymbol"] = 1024] = "TypeofNESymbol";
     e[e["TypeofNEObject"] = 2048] = "TypeofNEObject";
     e[e["TypeofNEFunction"] = 4096] = "TypeofNEFunction";
     e[e["TypeofNEHostObject"] = 8192] = "TypeofNEHostObject";
     e[e["EQUndefined"] = 16384] = "EQUndefined";
     e[e["EQNull"] = 32768] = "EQNull";
     e[e["EQUndefinedOrNull"] = 65536] = "EQUndefinedOrNull";
     e[e["NEUndefined"] = 131072] = "NEUndefined";
     e[e["NENull"] = 262144] = "NENull";
     e[e["NEUndefinedOrNull"] = 524288] = "NEUndefinedOrNull";
     e[e["Truthy"] = 1048576] = "Truthy";
     e[e["Falsy"] = 2097152] = "Falsy";
     e[e["All"] = 4194303] = "All";
     e[e["BaseStringStrictFacts"] = 933633] = "BaseStringStrictFacts";
     e[e["BaseStringFacts"] = 3145473] = "BaseStringFacts";
     e[e["StringStrictFacts"] = 4079361] = "StringStrictFacts";
     e[e["StringFacts"] = 4194049] = "StringFacts";
     e[e["EmptyStringStrictFacts"] = 3030785] = "EmptyStringStrictFacts";
     e[e["EmptyStringFacts"] = 3145473] = "EmptyStringFacts";
     e[e["NonEmptyStringStrictFacts"] = 1982209] = "NonEmptyStringStrictFacts";
     e[e["NonEmptyStringFacts"] = 4194049] = "NonEmptyStringFacts";
     e[e["BaseNumberStrictFacts"] = 933506] = "BaseNumberStrictFacts";
     e[e["BaseNumberFacts"] = 3145346] = "BaseNumberFacts";
     e[e["NumberStrictFacts"] = 4079234] = "NumberStrictFacts";
     e[e["NumberFacts"] = 4193922] = "NumberFacts";
     e[e["ZeroStrictFacts"] = 3030658] = "ZeroStrictFacts";
     e[e["ZeroFacts"] = 3145346] = "ZeroFacts";
     e[e["NonZeroStrictFacts"] = 1982082] = "NonZeroStrictFacts";
     e[e["NonZeroFacts"] = 4193922] = "NonZeroFacts";
     e[e["BaseBooleanStrictFacts"] = 933252] = "BaseBooleanStrictFacts";
     e[e["BaseBooleanFacts"] = 3145092] = "BaseBooleanFacts";
     e[e["BooleanStrictFacts"] = 4078980] = "BooleanStrictFacts";
     e[e["BooleanFacts"] = 4193668] = "BooleanFacts";
     e[e["FalseStrictFacts"] = 3030404] = "FalseStrictFacts";
     e[e["FalseFacts"] = 3145092] = "FalseFacts";
     e[e["TrueStrictFacts"] = 1981828] = "TrueStrictFacts";
     e[e["TrueFacts"] = 4193668] = "TrueFacts";
     e[e["SymbolStrictFacts"] = 1981320] = "SymbolStrictFacts";
     e[e["SymbolFacts"] = 4193160] = "SymbolFacts";
     e[e["ObjectStrictFacts"] = 1972176] = "ObjectStrictFacts";
     e[e["ObjectFacts"] = 4184016] = "ObjectFacts";
     e[e["FunctionStrictFacts"] = 1970144] = "FunctionStrictFacts";
     e[e["FunctionFacts"] = 4181984] = "FunctionFacts";
     e[e["UndefinedFacts"] = 2457472] = "UndefinedFacts";
     e[e["NullFacts"] = 2340752] = "NullFacts";
    })(Ht || (Ht = {}));
    var Gt = e.createMapFromTemplate({
     string: 1,
     number: 2,
     boolean: 4,
     symbol: 8,
     undefined: 16384,
     object: 16,
     function: 32
    });
    var $t = e.createMapFromTemplate({
     string: 128,
     number: 256,
     boolean: 512,
     symbol: 1024,
     undefined: 131072,
     object: 2048,
     function: 4096
    });
    var Xt = e.createMapFromTemplate({
     string: ue,
     number: le,
     boolean: pe,
     symbol: me,
     undefined: ae
    });
    var Qt = ni();
    var Yt;
    var Zt;
    var en = e.createMap();
    var tn = e.createMap();
    var nn = e.createMap();
    var rn = e.createMap();
    var an = e.createMap();
    var on = e.createMap();
    var sn;
    (function(e) {
     e[e["Type"] = 0] = "Type";
     e[e["ResolvedBaseConstructorType"] = 1] = "ResolvedBaseConstructorType";
     e[e["DeclaredType"] = 2] = "DeclaredType";
     e[e["ResolvedReturnType"] = 3] = "ResolvedReturnType";
     e[e["ImmediateBaseConstraint"] = 4] = "ImmediateBaseConstraint";
    })(sn || (sn = {}));
    var cn;
    (function(e) {
     e[e["Normal"] = 0] = "Normal";
     e[e["SkipContextSensitive"] = 1] = "SkipContextSensitive";
     e[e["Inferential"] = 2] = "Inferential";
     e[e["Contextual"] = 3] = "Contextual";
    })(cn || (cn = {}));
    var un;
    (function(e) {
     e[e["None"] = 0] = "None";
     e[e["Bivariant"] = 1] = "Bivariant";
     e[e["Strict"] = 2] = "Strict";
    })(un || (un = {}));
    var ln;
    (function(e) {
     e[e["IncludeReadonly"] = 1] = "IncludeReadonly";
     e[e["ExcludeReadonly"] = 2] = "ExcludeReadonly";
     e[e["IncludeOptional"] = 4] = "IncludeOptional";
     e[e["ExcludeOptional"] = 8] = "ExcludeOptional";
    })(ln || (ln = {}));
    var fn;
    (function(e) {
     e[e["None"] = 0] = "None";
     e[e["Source"] = 1] = "Source";
     e[e["Target"] = 2] = "Target";
     e[e["Both"] = 3] = "Both";
    })(fn || (fn = {}));
    var dn;
    (function(e) {
     e["resolvedExports"] = "resolvedExports";
     e["resolvedMembers"] = "resolvedMembers";
    })(dn || (dn = {}));
    var pn;
    (function(e) {
     e[e["Local"] = 0] = "Local";
     e[e["Parameter"] = 1] = "Parameter";
    })(pn || (pn = {}));
    var mn = e.createSymbolTable();
    mn.set(z.escapedName, z);
    var _n = e.and(sS, oS);
    Tw();
    return K;
    function gn(t) {
     if (t) {
      var n = e.getSourceFileOfNode(t);
      if (n) {
       if (n.localJsxNamespace) {
        return n.localJsxNamespace;
       }
       var r = n.pragmas.get("jsx");
       if (r) {
        var i = e.isArray(r) ? r[0] : r;
        n.localJsxFactory = e.parseIsolatedEntityName(i.arguments.factory, E);
        if (n.localJsxFactory) {
         return n.localJsxNamespace = Gk(n.localJsxFactory).escapedText;
        }
       }
      }
     }
     if (!Yt) {
      Yt = "React";
      if (T.jsxFactory) {
       Zt = e.parseIsolatedEntityName(T.jsxFactory, E);
       if (Zt) {
        Yt = Gk(Zt).escapedText;
       }
      } else if (T.reactNamespace) {
       Yt = e.escapeLeadingUnderscores(T.reactNamespace);
      }
     }
     return Yt;
    }
    function hn(e, t) {
     vS(e, t);
     return R;
    }
    function vn(t, n, r, i, a, o) {
     var s = t ? e.createDiagnosticForNode(t, n, r, i, a, o) : e.createCompilerDiagnostic(n, r, i, a, o);
     var c = Vt.lookup(s);
     if (c) {
      return c;
     } else {
      Vt.add(s);
      return s;
     }
    }
    function yn(e) {
     var t = [];
     for (var n = 1; n < arguments.length; n++) {
      t[n - 1] = arguments[n];
     }
     var r;
     if (!e.relatedInformation) {
      e.relatedInformation = [];
     }
     (r = e.relatedInformation).push.apply(r, t);
     return e;
    }
    function bn(t, n, r, i, a, o) {
     var s = t ? e.createDiagnosticForNode(t, n, r, i, a, o) : e.createCompilerDiagnostic(n, r, i, a, o);
     Vt.add(s);
     return s;
    }
    function xn(t, n) {
     if (t) {
      Vt.add(n);
     } else {
      Wt.add(n.file.fileName, r({}, n, {
       category: e.DiagnosticCategory.Suggestion
      }));
     }
    }
    function kn(t, n, r, i, a, o, s) {
     xn(t, "message" in r ? e.createDiagnosticForNode(n, r, i, a, o, s) : e.createDiagnosticForNodeFromMessageChain(n, r));
    }
    function Sn(e, t, n) {
     k++;
     var r = new v(e | 33554432, t);
     r.checkFlags = n || 0;
     return r;
    }
    function wn(e) {
     return (e.flags & 33554432) !== 0;
    }
    function Cn(e) {
     var t = 0;
     if (e & 2) t |= 67216319;
     if (e & 1) t |= 67216318;
     if (e & 4) t |= 0;
     if (e & 8) t |= 68008959;
     if (e & 16) t |= 67215791;
     if (e & 32) t |= 68008383;
     if (e & 64) t |= 67901832;
     if (e & 256) t |= 68008191;
     if (e & 128) t |= 68008831;
     if (e & 512) t |= 67215503;
     if (e & 8192) t |= 67208127;
     if (e & 32768) t |= 67150783;
     if (e & 65536) t |= 67183551;
     if (e & 262144) t |= 67639784;
     if (e & 524288) t |= 67901928;
     if (e & 2097152) t |= 2097152;
     return t;
    }
    function Dn(e, t) {
     if (!t.mergeId) {
      t.mergeId = o;
      o++;
     }
     It[t.mergeId] = e;
    }
    function Tn(t) {
     var n = Sn(t.flags, t.escapedName);
     n.declarations = t.declarations ? t.declarations.slice() : [];
     n.parent = t.parent;
     if (t.valueDeclaration) n.valueDeclaration = t.valueDeclaration;
     if (t.constEnumOnlyModule) n.constEnumOnlyModule = true;
     if (t.members) n.members = e.cloneMap(t.members);
     if (t.exports) n.exports = e.cloneMap(t.exports);
     Dn(n, t);
     return n;
    }
    function En(t, n) {
     if (!(t.flags & Cn(n.flags)) || (n.flags | t.flags) & 67108864) {
      e.Debug.assert(n !== t);
      if (!(t.flags & 33554432)) {
       t = Tn(t);
      }
      if (n.flags & 512 && t.flags & 512 && t.constEnumOnlyModule && !n.constEnumOnlyModule) {
       t.constEnumOnlyModule = false;
      }
      t.flags |= n.flags;
      if (n.valueDeclaration && (!t.valueDeclaration || e.isEffectiveModuleDeclaration(t.valueDeclaration) && !e.isEffectiveModuleDeclaration(n.valueDeclaration))) {
       t.valueDeclaration = n.valueDeclaration;
      }
      e.addRange(t.declarations, n.declarations);
      if (n.members) {
       if (!t.members) t.members = e.createSymbolTable();
       Pn(t.members, n.members);
      }
      if (n.exports) {
       if (!t.exports) t.exports = e.createSymbolTable();
       Pn(t.exports, n.exports);
      }
      Dn(t, n);
     } else if (t.flags & 1024) {
      bn(e.getNameOfDeclaration(n.declarations[0]), e.Diagnostics.Cannot_augment_module_0_with_value_exports_because_it_resolves_to_a_non_module_entity, xi(t));
     } else {
      var r = !!(t.flags & 384 || n.flags & 384);
      var i = !!(t.flags & 2 || n.flags & 2);
      var a = r ? e.Diagnostics.Enum_declarations_can_only_merge_with_namespace_or_other_enum_declarations : i ? e.Diagnostics.Cannot_redeclare_block_scoped_variable_0 : e.Diagnostics.Duplicate_identifier_0;
      var o = n.declarations && e.getSourceFileOfNode(n.declarations[0]);
      var s = t.declarations && e.getSourceFileOfNode(t.declarations[0]);
      if (o && s && Ue && !r && o !== s) {
       var c = e.comparePaths(o.path, s.path) === -1 ? o : s;
       var u = c === o ? s : o;
       var l = c.path + "|" + u.path;
       var f = Ue.get(l) || {
        firstFile: c,
        secondFile: u,
        firstFileInstances: e.createMap(),
        secondFileInstances: e.createMap()
       };
       var d = xi(n);
       var p = f.firstFileInstances.get(d) || {
        instances: [],
        blockScoped: i
       };
       var m = f.secondFileInstances.get(d) || {
        instances: [],
        blockScoped: i
       };
       e.forEach(n.declarations, function(t) {
        var n = (e.getJavascriptInitializer(t, false) ? e.getOuterNameOfJsInitializer(t) : e.getNameOfDeclaration(t)) || t;
        var r = o === c ? p : m;
        r.instances.push(n);
       });
       e.forEach(t.declarations, function(t) {
        var n = (e.getJavascriptInitializer(t, false) ? e.getOuterNameOfJsInitializer(t) : e.getNameOfDeclaration(t)) || t;
        var r = s === c ? p : m;
        r.instances.push(n);
       });
       f.firstFileInstances.set(d, p);
       f.secondFileInstances.set(d, m);
       Ue.set(l, f);
       return t;
      }
      var _ = xi(n);
      Nn(n, a, _, t);
      Nn(t, a, _, n);
     }
     return t;
    }
    function Nn(t, n, r, i) {
     e.forEach(t.declarations, function(t) {
      var a = (e.getJavascriptInitializer(t, false) ? e.getOuterNameOfJsInitializer(t) : e.getNameOfDeclaration(t)) || t;
      An(a, n, r, i.declarations && i.declarations[0]);
     });
    }
    function An(t, n, r, i) {
     var a = vn(t, n, r);
     if (i && e.length(a.relatedInformation) < 5) {
      yn(a, !e.length(a.relatedInformation) ? e.createDiagnosticForNode(i, e.Diagnostics._0_was_also_declared_here, r) : e.createDiagnosticForNode(i, e.Diagnostics.and_here));
     }
    }
    function Fn(t, n) {
     if (!e.hasEntries(t)) return n;
     if (!e.hasEntries(n)) return t;
     var r = e.createSymbolTable();
     Pn(r, t);
     Pn(r, n);
     return r;
    }
    function Pn(e, t) {
     t.forEach(function(t, n) {
      e.set(n, e.has(n) ? En(e.get(n), t) : t);
     });
    }
    function In(t) {
     var n = t.parent;
     if (n.symbol.declarations[0] !== n) {
      e.Debug.assert(n.symbol.declarations.length > 1);
      return;
     }
     if (e.isGlobalScopeAugmentation(n)) {
      Pn(qe, n.symbol.exports);
     } else {
      var r = !(t.parent.parent.flags & 4194304) ? e.Diagnostics.Invalid_module_name_in_augmentation_module_0_cannot_be_found : undefined;
      var i = Er(t, t, r, true);
      if (!i) {
       return;
      }
      i = Pr(i);
      if (i.flags & 1920) {
       i = En(i, n.symbol);
      } else {
       bn(t, e.Diagnostics.Cannot_augment_module_0_because_it_resolves_to_a_non_module_entity, t.text);
      }
     }
    }
    function On(t, n, r) {
     n.forEach(function(n, a) {
      var o = t.get(a);
      if (o) {
       e.forEach(o.declarations, i(e.unescapeLeadingUnderscores(a), r));
      } else {
       t.set(a, n);
      }
     });
     function i(t, n) {
      return function(r) {
       return Vt.add(e.createDiagnosticForNode(r, n, t));
      };
     }
    }
    function Mn(e) {
     if (e.flags & 33554432) return e;
     var t = u(e);
     return Ot[t] || (Ot[t] = {});
    }
    function Ln(e) {
     var t = c(e);
     return Mt[t] || (Mt[t] = {
      flags: 0
     });
    }
    function Rn(t) {
     return t.kind === 277 && !e.isExternalOrCommonJsModule(t);
    }
    function Bn(t, n, r) {
     if (r) {
      var i = t.get(n);
      if (i) {
       e.Debug.assert((e.getCheckFlags(i) & 1) === 0, "Should never get an instantiated symbol here.");
       if (i.flags & r) {
        return i;
       }
       if (i.flags & 2097152) {
        var a = yr(i);
        if (a === Y || a.flags & r) {
         return i;
        }
       }
      }
     }
    }
    function zn(t, n) {
     var r = t.parent;
     var i = t.parent.parent;
     var a = Bn(r.locals, n, 67216319);
     var o = Bn(yo(i.symbol), n, 67216319);
     if (a && o) {
      return [ a, o ];
     }
     return e.Debug.fail("There should exist two symbols, one as property declaration and one as parameter declaration");
    }
    function jn(t, r) {
     var i = e.getSourceFileOfNode(t);
     var a = e.getSourceFileOfNode(r);
     if (i !== a) {
      if (N && (i.externalModuleIndicator || a.externalModuleIndicator) || !T.outFile && !T.out || Op(r) || t.flags & 4194304) {
       return true;
      }
      if (l(r, t)) {
       return true;
      }
      var o = n.getSourceFiles();
      return o.indexOf(i) <= o.indexOf(a);
     }
     if (t.pos <= r.pos) {
      if (t.kind === 184) {
       var s = e.getAncestor(r, 184);
       if (s) {
        return e.findAncestor(s, e.isBindingElement) !== e.findAncestor(t, e.isBindingElement) || t.pos < s.pos;
       }
       return jn(e.getAncestor(t, 235), r);
      } else if (t.kind === 235) {
       return !u(t, r);
      } else if (e.isClassDeclaration(t)) {
       return !e.findAncestor(r, function(n) {
        return e.isComputedPropertyName(n) && n.parent.parent === t;
       });
      }
      return true;
     }
     if (r.parent.kind === 255 || r.parent.kind === 252 && r.parent.isExportEquals) {
      return true;
     }
     if (r.kind === 252 && r.isExportEquals) {
      return true;
     }
     var c = e.getEnclosingBlockScopeContainer(t);
     return !!(r.flags & 2097152) || Op(r) || l(r, t, c);
     function u(t, n) {
      var r = e.getEnclosingBlockScopeContainer(t);
      switch (t.parent.parent.kind) {
      case 217:
      case 223:
      case 225:
       if (Zn(n, t, r)) {
        return true;
       }
       break;
      }
      var i = t.parent.parent;
      return e.isForInOrOfStatement(i) && Zn(n, i.expression, r);
     }
     function l(t, n, r) {
      return !!e.findAncestor(t, function(i) {
       if (i === r) {
        return "quit";
       }
       if (e.isFunctionLike(i)) {
        return true;
       }
       var a = i.parent && i.parent.kind === 152 && i.parent.initializer === i;
       if (a) {
        if (e.hasModifier(i.parent, 32)) {
         if (n.kind === 154) {
          return true;
         }
        } else {
         var o = n.kind === 152 && !e.hasModifier(n, 32);
         if (!o || e.getContainingClass(t) !== e.getContainingClass(n)) {
          return true;
         }
        }
       }
       return false;
      });
     }
    }
    function qn(e, t, n, r, i, a, o, s) {
     if (o === void 0) {
      o = false;
     }
     return Un(e, t, n, r, i, a, o, Bn, s);
    }
    function Un(t, n, r, i, a, o, s, c, u) {
     var l = t;
     var f;
     var d;
     var p;
     var m;
     var _ = t;
     var g;
     var h = false;
     e: while (t) {
      if (t.locals && !Rn(t)) {
       if (f = c(t.locals, n, r)) {
        var v = true;
        if (e.isFunctionLike(t) && d && d !== t.body) {
         if (r & f.flags & 67901928 && d.kind !== 289) {
          v = f.flags & 262144 ? d === t.type || d.kind === 149 || d.kind === 148 : false;
         }
         if (r & 67216319 && f.flags & 1) {
          v = d.kind === 149 || d === t.type && !!e.findAncestor(f.valueDeclaration, e.isParameter);
         }
        } else if (t.kind === 173) {
         v = d === t.trueType;
        }
        if (v) {
         break e;
        } else {
         f = undefined;
        }
       }
      }
      switch (t.kind) {
      case 277:
       if (!e.isExternalOrCommonJsModule(t)) break;
       h = true;

      case 242:
       var y = Vr(t).exports;
       if (t.kind === 277 || e.isAmbientModule(t)) {
        if (f = y.get("default")) {
         var b = e.getLocalSymbolForExportDefault(f);
         if (b && f.flags & r && b.escapedName === n) {
          break e;
         }
         f = undefined;
        }
        var x = y.get(n);
        if (x && x.flags === 2097152 && e.getDeclarationOfKind(x, 255)) {
         break;
        }
       }
       if (n !== "default" && (f = c(y, n, r & 2623475))) {
        if (e.isSourceFile(t) && t.commonJsModuleIndicator && !f.declarations.some(e.isJSDocTypeAlias)) {
         f = undefined;
        } else {
         break e;
        }
       }
       break;

      case 241:
       if (f = c(Vr(t).exports, n, r & 8)) {
        break e;
       }
       break;

      case 152:
      case 151:
       if (e.isClassLike(t.parent) && !e.hasModifier(t, 32)) {
        var k = Qr(t.parent);
        if (k && k.locals) {
         if (c(k.locals, n, r & 67216319)) {
          m = t;
         }
        }
       }
       break;

      case 238:
      case 207:
      case 239:
       if (f = c(yo(Vr(t)), n, r & 67901928)) {
        if (!Vn(f, t)) {
         f = undefined;
         break;
        }
        if (d && e.hasModifier(d, 32)) {
         bn(_, e.Diagnostics.Static_members_cannot_reference_class_type_parameters);
         return undefined;
        }
        break e;
       }
       if (t.kind === 207 && r & 32) {
        var S = t.name;
        if (S && n === S.escapedText) {
         f = t.symbol;
         break e;
        }
       }
       break;

      case 209:
       if (d === t.expression && t.parent.token === 85) {
        var w = t.parent.parent;
        if (e.isClassLike(w) && (f = c(Vr(w).members, n, r & 67901928))) {
         if (i) {
          bn(_, e.Diagnostics.Base_class_expressions_cannot_reference_class_type_parameters);
         }
         return undefined;
        }
       }
       break;

      case 147:
       g = t.parent.parent;
       if (e.isClassLike(g) || g.kind === 239) {
        if (f = c(Vr(g).members, n, r & 67901928)) {
         bn(_, e.Diagnostics.A_computed_property_name_cannot_reference_a_type_parameter_from_its_containing_type);
         return undefined;
        }
       }
       break;

      case 154:
      case 153:
      case 155:
      case 156:
      case 157:
      case 237:
      case 195:
       if (r & 3 && n === "arguments") {
        f = j;
        break e;
       }
       break;

      case 194:
       if (r & 3 && n === "arguments") {
        f = j;
        break e;
       }
       if (r & 16) {
        var C = t.name;
        if (C && n === C.escapedText) {
         f = t.symbol;
         break e;
        }
       }
       break;

      case 150:
       if (t.parent && t.parent.kind === 149) {
        t = t.parent;
       }
       if (t.parent && e.isClassElement(t.parent)) {
        t = t.parent;
       }
       break;

      case 301:
      case 295:
       t = e.getJSDocHost(t);
       break;
      }
      if (Jn(t)) {
       p = t;
      }
      d = t;
      t = t.parent;
     }
     if (o && f && (!p || f !== p.symbol)) {
      f.isReferenced |= r;
     }
     if (!f) {
      if (d) {
       e.Debug.assert(d.kind === 277);
       if (d.commonJsModuleIndicator && n === "exports") {
        return d.symbol;
       }
      }
      if (!s) {
       f = c(qe, n, r);
      }
     }
     if (!f) {
      if (l && e.isInJavaScriptFile(l) && l.parent) {
       if (e.isRequireCall(l.parent, false)) {
        return q;
       }
       if (e.isIdentifier(l) && e.isPropertyAccessExpression(l.parent) && l.escapedText === "module" && l.parent.name.escapedText === "exports") {
        return U;
       }
      }
     }
     if (!f) {
      if (i) {
       if (!_ || !Wn(_, n, a) && !Hn(_) && !$n(_, n, r) && !Xn(_, n, r) && !Qn(_, n, r)) {
        var D = void 0;
        if (u && Ft < Pt) {
         D = hh(l, n, r);
         if (D) {
          var T = xi(D);
          var E = bn(_, u, Kn(a), T);
          if (D.valueDeclaration) {
           yn(E, e.createDiagnosticForNode(D.valueDeclaration, e.Diagnostics._0_is_declared_here, T));
          }
         }
        }
        if (!D) {
         bn(_, i, Kn(a));
        }
        Ft++;
       }
      }
      return undefined;
     }
     if (i) {
      if (m) {
       var N = m.name;
       bn(_, e.Diagnostics.Initializer_of_instance_member_variable_0_cannot_reference_identifier_1_declared_in_the_constructor, e.declarationNameToString(N), Kn(a));
       return undefined;
      }
      if (_ && (r & 2 || (r & 32 || r & 384) && (r & 67216319) === 67216319)) {
       var A = $r(f);
       if (A.flags & 2 || A.flags & 32 || A.flags & 384) {
        Yn(A, _);
       }
      }
      if (f && h && (r & 67216319) === 67216319 && !(l.flags & 2097152)) {
       var F = f.declarations;
       if (F && F.length === 1 && F[0].kind === 245) {
        bn(_, e.Diagnostics._0_refers_to_a_UMD_global_but_the_current_file_is_a_module_Consider_adding_an_import_instead, e.unescapeLeadingUnderscores(n));
       }
      }
     }
     return f;
    }
    function Jn(e) {
     switch (e.kind) {
     case 237:
     case 238:
     case 239:
     case 241:
     case 240:
     case 242:
      return true;

     default:
      return false;
     }
    }
    function Kn(t) {
     return e.isString(t) ? e.unescapeLeadingUnderscores(t) : e.declarationNameToString(t);
    }
    function Vn(t, n) {
     for (var r = 0, i = t.declarations; r < i.length; r++) {
      var a = i[r];
      if (a.kind === 148) {
       var o = e.isJSDocTemplateTag(a.parent) ? e.getJSDocHost(a.parent) : a.parent;
       if (o === n) {
        return !(e.isJSDocTemplateTag(a.parent) && e.find(a.parent.parent.tags, e.isJSDocTypeAlias));
       }
      }
     }
     return false;
    }
    function Wn(t, n, r) {
     if (!e.isIdentifier(t) || t.escapedText !== n || CS(t) || Op(t)) {
      return false;
     }
     var i = e.getThisContainer(t, false);
     var a = i;
     while (a) {
      if (e.isClassLike(a.parent)) {
       var o = Vr(a.parent);
       if (!o) {
        break;
       }
       var s = xa(o);
       if (Ds(s, n)) {
        bn(t, e.Diagnostics.Cannot_find_name_0_Did_you_mean_the_static_member_1_0, Kn(r), xi(o));
        return true;
       }
       if (a === i && !e.hasModifier(a, 32)) {
        var c = Ya(o).thisType;
        if (Ds(c, n)) {
         bn(t, e.Diagnostics.Cannot_find_name_0_Did_you_mean_the_instance_member_this_0, Kn(r));
         return true;
        }
       }
      }
      a = a.parent;
     }
     return false;
    }
    function Hn(t) {
     var n = Gn(t);
     if (n && wr(n, 64, true)) {
      bn(t, e.Diagnostics.Cannot_extend_an_interface_0_Did_you_mean_implements, e.getTextOfNode(n));
      return true;
     }
     return false;
    }
    function Gn(t) {
     switch (t.kind) {
     case 71:
     case 187:
      return t.parent ? Gn(t.parent) : undefined;

     case 209:
      if (e.isEntityNameExpression(t.expression)) {
       return t.expression;
      }

     default:
      return undefined;
     }
    }
    function $n(t, n, r) {
     var i = 1920 | (e.isInJavaScriptFile(t) ? 67216319 : 0);
     if (r === i) {
      var a = vr(qn(t, n, 67901928 & ~i, undefined, undefined, false));
      var o = t.parent;
      if (a) {
       if (e.isQualifiedName(o)) {
        e.Debug.assert(o.left === t, "Should only be resolving left side of qualified name as a namespace");
        var s = o.right.escapedText;
        var c = Ds(Ya(a), s);
        if (c) {
         bn(o, e.Diagnostics.Cannot_access_0_1_because_0_is_a_type_but_not_a_namespace_Did_you_mean_to_retrieve_the_type_of_the_property_1_in_0_with_0_1, e.unescapeLeadingUnderscores(n), e.unescapeLeadingUnderscores(s));
         return true;
        }
       }
       bn(t, e.Diagnostics._0_only_refers_to_a_type_but_is_being_used_as_a_namespace_here, e.unescapeLeadingUnderscores(n));
       return true;
      }
     }
     return false;
    }
    function Xn(t, n, r) {
     if (r & (67216319 & ~1024)) {
      if (n === "any" || n === "string" || n === "number" || n === "boolean" || n === "never") {
       bn(t, e.Diagnostics._0_only_refers_to_a_type_but_is_being_used_as_a_value_here, e.unescapeLeadingUnderscores(n));
       return true;
      }
      var i = vr(qn(t, n, 67901928 & ~67216319, undefined, undefined, false));
      if (i && !(i.flags & 1024)) {
       bn(t, e.Diagnostics._0_only_refers_to_a_type_but_is_being_used_as_a_value_here, e.unescapeLeadingUnderscores(n));
       return true;
      }
     }
     return false;
    }
    function Qn(t, n, r) {
     if (r & (67216319 & ~1024 & ~67901928)) {
      var i = vr(qn(t, n, 1024 & ~67216319, undefined, undefined, false));
      if (i) {
       bn(t, e.Diagnostics.Cannot_use_namespace_0_as_a_value, e.unescapeLeadingUnderscores(n));
       return true;
      }
     } else if (r & (67901928 & ~1024 & ~67216319)) {
      var i = vr(qn(t, n, (512 | 1024) & ~67901928, undefined, undefined, false));
      if (i) {
       bn(t, e.Diagnostics.Cannot_use_namespace_0_as_a_type, e.unescapeLeadingUnderscores(n));
       return true;
      }
     }
     return false;
    }
    function Yn(t, n) {
     e.Debug.assert(!!(t.flags & 2 || t.flags & 32 || t.flags & 384));
     var r = e.forEach(t.declarations, function(t) {
      return e.isBlockOrCatchScoped(t) || e.isClassLike(t) || t.kind === 241 ? t : undefined;
     });
     if (r === undefined) return e.Debug.fail("Declaration to checkResolvedBlockScopedVariable is undefined");
     if (!(r.flags & 4194304) && !jn(r, n)) {
      var i = void 0;
      var a = e.declarationNameToString(e.getNameOfDeclaration(r));
      if (t.flags & 2) {
       i = bn(n, e.Diagnostics.Block_scoped_variable_0_used_before_its_declaration, a);
      } else if (t.flags & 32) {
       i = bn(n, e.Diagnostics.Class_0_used_before_its_declaration, a);
      } else if (t.flags & 256) {
       i = bn(n, e.Diagnostics.Enum_0_used_before_its_declaration, a);
      } else {
       e.Debug.assert(!!(t.flags & 128));
      }
      if (i) {
       yn(i, e.createDiagnosticForNode(r, e.Diagnostics._0_is_declared_here, a));
      }
     }
    }
    function Zn(t, n, r) {
     return !!n && !!e.findAncestor(t, function(t) {
      return t === r || e.isFunctionLike(t) ? "quit" : t === n;
     });
    }
    function er(e) {
     switch (e.kind) {
     case 246:
      return e;

     case 248:
      return e.parent;

     case 249:
      return e.parent.parent;

     case 251:
      return e.parent.parent.parent;

     default:
      return undefined;
     }
    }
    function tr(t) {
     return e.find(t.declarations, e.isAliasSymbolDeclaration);
    }
    function nr(t, n) {
     if (t.moduleReference.kind === 257) {
      return Pr(Tr(t, e.getExternalModuleImportEqualsDeclarationExpression(t)));
     }
     return kr(t.moduleReference, n);
    }
    function rr(e, t, n) {
     var r = e.exports.get("export=");
     return r ? Ds(xa(r), t) : vr(e.exports.get(t), n);
    }
    function ir(t) {
     return e.isExportAssignment(t) && !t.isExportEquals || e.hasModifier(t, 512) || e.isExportSpecifier(t);
    }
    function ar(t, n, r) {
     if (!A) {
      return false;
     }
     if (!t || t.isDeclarationFile) {
      var i = rr(n, "default", true);
      if (i && e.some(i.declarations, ir)) {
       return false;
      }
      if (rr(n, e.escapeLeadingUnderscores("__esModule"), r)) {
       return false;
      }
      return true;
     }
     if (!e.isSourceFileJavaScript(t)) {
      return Mr(n);
     }
     return !t.externalModuleIndicator && !rr(n, e.escapeLeadingUnderscores("__esModule"), r);
    }
    function or(t, n) {
     var r = Tr(t, t.parent.moduleSpecifier);
     if (r) {
      var i = void 0;
      if (e.isShorthandAmbientModuleSymbol(r)) {
       i = r;
      } else {
       i = rr(r, "default", n);
      }
      var a = e.find(r.declarations, e.isSourceFile);
      var o = ar(a, r, n);
      if (!i && !o) {
       bn(t.name, e.Diagnostics.Module_0_has_no_default_export, xi(r));
      } else if (o) {
       return Pr(r, n) || vr(r, n);
      }
      return i;
     }
    }
    function sr(e, t) {
     var n = e.parent.parent.moduleSpecifier;
     return Or(Tr(e, n), n, t);
    }
    function cr(t, n) {
     if (t === Y && n === Y) {
      return Y;
     }
     if (t.flags & (67901928 | 1920)) {
      return t;
     }
     var r = Sn(t.flags | n.flags, t.escapedName);
     r.declarations = e.deduplicate(e.concatenate(t.declarations, n.declarations), e.equateValues);
     r.parent = t.parent || n.parent;
     if (t.valueDeclaration) r.valueDeclaration = t.valueDeclaration;
     if (n.members) r.members = n.members;
     if (t.exports) r.exports = t.exports;
     return r;
    }
    function ur(e, t, n) {
     if (e.flags & 1536) {
      return vr(jr(e).get(t), n);
     }
    }
    function lr(e, t) {
     if (e.flags & 3) {
      var n = e.valueDeclaration.type;
      if (n) {
       return vr(Ds(Ul(n), t));
      }
     }
    }
    function fr(t, n, r) {
     if (r === void 0) {
      r = false;
     }
     var i = Tr(t, t.moduleSpecifier);
     var a = Or(i, t.moduleSpecifier, r);
     if (a) {
      var o = n.propertyName || n.name;
      if (o.escapedText) {
       if (e.isShorthandAmbientModuleSymbol(i)) {
        return i;
       }
       var s = void 0;
       if (i && i.exports && i.exports.get("export=")) {
        s = Ds(xa(a), o.escapedText);
       } else {
        s = lr(a, o.escapedText);
       }
       s = vr(s, r);
       var c = ur(a, o.escapedText, r);
       if (!c && A && o.escapedText === "default") {
        c = Pr(i, r) || vr(i, r);
       }
       var u = c && s && c !== s ? cr(s, c) : c || s;
       if (!u) {
        var l = Sr(i);
        var f = e.declarationNameToString(o);
        var d = yh(o, a);
        if (d !== undefined) {
         var p = xi(d);
         var m = bn(o, e.Diagnostics.Module_0_has_no_exported_member_1_Did_you_mean_2, l, f, p);
         if (d.valueDeclaration) {
          yn(m, e.createDiagnosticForNode(d.valueDeclaration, e.Diagnostics._0_is_declared_here, p));
         }
        } else {
         bn(o, e.Diagnostics.Module_0_has_no_exported_member_1, l, f);
        }
       }
       return u;
      }
     }
    }
    function dr(e, t) {
     return fr(e.parent.parent.parent, e, t);
    }
    function pr(e, t) {
     return Pr(e.parent.symbol, t);
    }
    function mr(e, t, n) {
     return e.parent.parent.moduleSpecifier ? fr(e.parent.parent, e, n) : wr(e.propertyName || e.name, t, false, n);
    }
    function _r(t, n) {
     var r = e.isExportAssignment(t) ? t.expression : t.right;
     if (e.isClassExpression(r)) {
      return pb(r).symbol;
     }
     var i = wr(r, 67216319 | 67901928 | 1920, true, n);
     if (i) {
      return i;
     }
     pb(r);
     return Ln(r).resolvedSymbol;
    }
    function gr(t, n) {
     if (n === void 0) {
      n = false;
     }
     switch (t.kind) {
     case 246:
      return nr(t, n);

     case 248:
      return or(t, n);

     case 249:
      return sr(t, n);

     case 251:
      return dr(t, n);

     case 255:
      return mr(t, 67216319 | 67901928 | 1920, n);

     case 252:
     case 202:
      return _r(t, n);

     case 245:
      return pr(t, n);

     default:
      return e.Debug.fail();
     }
    }
    function hr(e, t) {
     if (t === void 0) {
      t = 67216319 | 67901928 | 1920;
     }
     if (!e) return false;
     return (e.flags & (2097152 | t)) === 2097152 || !!(e.flags & 2097152 && e.flags & 67108864);
    }
    function vr(e, t) {
     return !t && hr(e) ? yr(e) : e;
    }
    function yr(t) {
     e.Debug.assert((t.flags & 2097152) !== 0, "Should only get Alias here.");
     var n = Mn(t);
     if (!n.target) {
      n.target = Z;
      var r = tr(t);
      if (!r) return e.Debug.fail();
      var i = gr(r);
      if (n.target === Z) {
       n.target = i || Y;
      } else {
       bn(r, e.Diagnostics.Circular_definition_of_import_alias_0, xi(t));
      }
     } else if (n.target === Z) {
      n.target = Y;
     }
     return n.target;
    }
    function br(e) {
     var t = Vr(e);
     var n = yr(t);
     if (n) {
      var r = n === Y || n.flags & 67216319 && !aw(n);
      if (r) {
       xr(t);
      }
     }
    }
    function xr(t) {
     var n = Mn(t);
     if (!n.referenced) {
      n.referenced = true;
      var r = tr(t);
      if (!r) return e.Debug.fail();
      if (r.kind === 252) {
       nb(r.expression);
      } else if (r.kind === 255) {
       nb(r.propertyName || r.name);
      } else if (e.isInternalModuleImportEqualsDeclaration(r)) {
       nb(r.moduleReference);
      }
     }
    }
    function kr(t, n) {
     if (t.kind === 71 && e.isRightSideOfQualifiedNameOrPropertyAccess(t)) {
      t = t.parent;
     }
     if (t.kind === 71 || t.parent.kind === 146) {
      return wr(t, 1920, false, n);
     } else {
      e.Debug.assert(t.parent.kind === 246);
      return wr(t, 67216319 | 67901928 | 1920, false, n);
     }
    }
    function Sr(e) {
     return e.parent ? Sr(e.parent) + "." + xi(e) : xi(e);
    }
    function wr(t, n, r, i, a) {
     if (e.nodeIsMissing(t)) {
      return undefined;
     }
     var o = 1920 | (e.isInJavaScriptFile(t) ? n & 67216319 : 0);
     var s;
     if (t.kind === 71) {
      var c = n === o ? e.Diagnostics.Cannot_find_namespace_0 : e.Diagnostics.Cannot_find_name_0;
      var u = e.isInJavaScriptFile(t) ? Cr(t, n) : undefined;
      s = qn(a || t, t.escapedText, n, r || u ? undefined : c, t, true);
      if (!s) {
       return u;
      }
     } else if (t.kind === 146 || t.kind === 187) {
      var l = t.kind === 146 ? t.left : t.expression;
      var f = t.kind === 146 ? t.right : t.name;
      var d = wr(l, o, r, false, a);
      if (!d || e.nodeIsMissing(f)) {
       return undefined;
      } else if (d === Y) {
       return d;
      }
      if (e.isInJavaScriptFile(t)) {
       if (d.valueDeclaration && e.isVariableDeclaration(d.valueDeclaration) && d.valueDeclaration.initializer && zv(d.valueDeclaration.initializer)) {
        var p = d.valueDeclaration.initializer.arguments[0];
        var m = Tr(p, p);
        if (m) {
         var _ = Pr(m);
         if (_) {
          d = _;
         }
        }
       }
      }
      s = Bn(jr(d), f.escapedText, n);
      if (!s) {
       if (!r) {
        bn(f, e.Diagnostics.Namespace_0_has_no_exported_member_1, Sr(d), e.declarationNameToString(f));
       }
       return undefined;
      }
     } else {
      throw e.Debug.assertNever(t, "Unknown entity name kind.");
     }
     e.Debug.assert((e.getCheckFlags(s) & 1) === 0, "Should never get an instantiated symbol here.");
     return s.flags & n || i ? s : yr(s);
    }
    function Cr(e, t) {
     if (jc(e.parent)) {
      var n = Dr(e.parent);
      if (n) {
       return qn(n, e.escapedText, t, undefined, e, true);
      }
     }
    }
    function Dr(t) {
     var n = e.findAncestor(t, function(t) {
      return !(e.isJSDocNode(t) || t.flags & 2097152) ? "quit" : e.isJSDocTypeAlias(t);
     });
     if (n) {
      return;
     }
     var r = e.getJSDocHost(t);
     if (e.isExpressionStatement(r) && e.isBinaryExpression(r.expression) && e.getSpecialPropertyAssignmentKind(r.expression) === 3) {
      var i = Vr(r.expression.left);
      return i && i.parent.valueDeclaration;
     }
     var a = e.getHostSignatureFromJSDocHost(r);
     if (a) {
      var i = Vr(a);
      return i && i.valueDeclaration;
     }
    }
    function Tr(t, n) {
     return Er(t, n, e.Diagnostics.Cannot_find_module_0);
    }
    function Er(t, n, r, i) {
     if (i === void 0) {
      i = false;
     }
     return e.isStringLiteralLike(n) ? Nr(t, n.text, r, n, i) : undefined;
    }
    function Nr(t, r, i, a, o) {
     if (o === void 0) {
      o = false;
     }
     if (r === undefined) {
      return;
     }
     if (e.startsWith(r, "@types/")) {
      var s = e.Diagnostics.Cannot_import_type_declaration_files_Consider_importing_0_instead_of_1;
      var c = e.removePrefix(r, "@types/");
      bn(a, s, c, r);
     }
     var u = Rs(r, true);
     if (u) {
      return u;
     }
     var l = e.getSourceFileOfNode(t);
     var f = e.getResolvedModule(l, r);
     var d = f && e.getResolutionDiagnostic(T, f);
     var p = f && !d && n.getSourceFile(f.resolvedFileName);
     if (p) {
      if (p.symbol) {
       if (f.isExternalLibraryImport && !e.extensionIsTypeScript(f.extension)) {
        Ar(false, a, f, r);
       }
       return Kr(p.symbol);
      }
      if (i) {
       bn(a, e.Diagnostics.File_0_is_not_a_module, p.fileName);
      }
      return undefined;
     }
     if (Ve) {
      var m = e.findBestPatternMatch(Ve, function(e) {
       return e.pattern;
      }, r);
      if (m) {
       return Kr(m.symbol);
      }
     }
     if (f && !e.resolutionExtensionIsTypeScriptOrJson(f.extension) && d === undefined || d === e.Diagnostics.Could_not_find_a_declaration_file_for_module_0_1_implicitly_has_an_any_type) {
      if (o) {
       var s = e.Diagnostics.Invalid_module_name_in_augmentation_Module_0_resolves_to_an_untyped_module_at_1_which_cannot_be_augmented;
       bn(a, s, r, f.resolvedFileName);
      } else {
       Ar(O && !!i, a, f, r);
      }
      return undefined;
     }
     if (i) {
      if (e.pathIsRelative(r)) {
       var _ = e.getSourceFileOfNode(t);
       var g = _.redirectedReferences;
       if (g) {
        var h = e.getNormalizedAbsolutePath(r, e.getDirectoryPath(_.fileName));
        for (var v = 0, y = [ ".ts", ".tsx" ]; v < y.length; v++) {
         var b = y[v];
         var x = h + b;
         if (g.indexOf(x) >= 0) {
          bn(a, e.Diagnostics.Output_file_0_has_not_been_built_from_source_file_1, r, x);
          return undefined;
         }
        }
       }
      }
      if (d) {
       bn(a, d, r, f.resolvedFileName);
      } else {
       var k = e.tryExtractTypeScriptExtension(r);
       if (k) {
        var s = e.Diagnostics.An_import_path_cannot_end_with_a_0_extension_Consider_importing_1_instead;
        bn(a, s, k, e.removeExtension(r, k));
       } else {
        bn(a, i, r);
       }
      }
     }
     return undefined;
    }
    function Ar(t, n, r, i) {
     var a = r.packageId, o = r.resolvedFileName;
     var s = a ? e.chainDiagnosticMessages(undefined, Fr(a.name) ? e.Diagnostics.If_the_0_package_actually_exposes_this_module_consider_sending_a_pull_request_to_amend_https_Colon_Slash_Slashgithub_com_SlashDefinitelyTyped_SlashDefinitelyTyped_Slashtree_Slashmaster_Slashtypes_Slash_0 : e.Diagnostics.Try_npm_install_types_Slash_0_if_it_exists_or_add_a_new_declaration_d_ts_file_containing_declare_module_0, e.getMangledNameForScopedPackage(a.name)) : undefined;
     kn(t, n, e.chainDiagnosticMessages(s, e.Diagnostics.Could_not_find_a_declaration_file_for_module_0_1_implicitly_has_an_any_type, i, o));
    }
    function Fr(t) {
     return n.getSourceFiles().some(function(n) {
      return !!n.resolvedModules && !!e.forEachEntry(n.resolvedModules, function(n) {
       return n && n.packageId && n.packageId.name === e.getTypesPackageName(t);
      });
     });
    }
    function Pr(e, t) {
     return e && Kr(Ir(vr(e.exports.get("export="), t), e)) || e;
    }
    function Ir(t, n) {
     if (!t || n.exports.size === 1) {
      return t;
     }
     var r = Tn(t);
     if (r.exports === undefined) {
      r.flags = r.flags | 512;
      r.exports = e.createSymbolTable();
     }
     n.exports.forEach(function(e, t) {
      if (t === "export=") return;
      r.exports.set(t, r.exports.has(t) ? En(r.exports.get(t), e) : e);
     });
     return r;
    }
    function Or(t, n, r) {
     var i = Pr(t, r);
     if (!r && i) {
      if (!(i.flags & (1536 | 3)) && !e.getDeclarationOfKind(i, 277)) {
       bn(n, e.Diagnostics.Module_0_resolves_to_a_non_module_entity_and_cannot_be_imported_using_this_construct, xi(t));
       return i;
      }
      if (T.esModuleInterop) {
       var a = n.parent;
       if (e.isImportDeclaration(a) && e.getNamespaceDeclarationNode(a) || e.isImportCall(a)) {
        var o = xa(i);
        var s = Ts(o, 0);
        if (!s || !s.length) {
         s = Ts(o, 1);
        }
        if (s && s.length) {
         var c = Bv(o, i, t);
         var u = Sn(i.flags, i.escapedName);
         u.declarations = i.declarations ? i.declarations.slice() : [];
         u.parent = i.parent;
         u.target = i;
         u.originatingImport = a;
         if (i.valueDeclaration) u.valueDeclaration = i.valueDeclaration;
         if (i.constEnumOnlyModule) u.constEnumOnlyModule = true;
         if (i.members) u.members = e.cloneMap(i.members);
         if (i.exports) u.exports = e.cloneMap(i.exports);
         var l = Zo(c);
         u.type = oi(u, l.members, e.emptyArray, e.emptyArray, l.stringIndexInfo, l.numberIndexInfo);
         return u;
        }
       }
      }
     }
     return i;
    }
    function Mr(e) {
     return e.exports.get("export=") !== undefined;
    }
    function Lr(e) {
     return Ms(qr(e));
    }
    function Rr(t) {
     var n = Lr(t);
     var r = Pr(t);
     if (r !== t) {
      e.addRange(n, rs(xa(r)));
     }
     return n;
    }
    function Br(e, t) {
     var n = qr(t);
     if (n) {
      return n.get(e);
     }
    }
    function zr(e, t) {
     var n = Br(e, t);
     if (n) {
      return n;
     }
     var r = Pr(t);
     if (r === t) {
      return undefined;
     }
     var i = xa(r);
     return i.flags & 32764 ? undefined : Ds(i, e);
    }
    function jr(e) {
     return e.flags & 32 ? vo(e, "resolvedExports") : e.flags & 1536 ? qr(e) : e.exports || C;
    }
    function qr(e) {
     var t = Mn(e);
     return t.resolvedExports || (t.resolvedExports = Jr(e));
    }
    function Ur(t, n, r, i) {
     if (!n) return;
     n.forEach(function(n, a) {
      if (a === "default") return;
      var o = t.get(a);
      if (!o) {
       t.set(a, n);
       if (r && i) {
        r.set(a, {
         specifierText: e.getTextOfNode(i.moduleSpecifier)
        });
       }
      } else if (r && i && o && vr(o) !== vr(n)) {
       var s = r.get(a);
       if (!s.exportsWithDuplicate) {
        s.exportsWithDuplicate = [ i ];
       } else {
        s.exportsWithDuplicate.push(i);
       }
      }
     });
    }
    function Jr(t) {
     var n = [];
     t = Pr(t);
     return r(t) || C;
     function r(t) {
      if (!(t && t.exports && e.pushIfUnique(n, t))) {
       return;
      }
      var i = e.cloneMap(t.exports);
      var a = t.exports.get("__export");
      if (a) {
       var o = e.createSymbolTable();
       var s = e.createMap();
       for (var c = 0, u = a.declarations; c < u.length; c++) {
        var l = u[c];
        var f = Tr(l, l.moduleSpecifier);
        var d = r(f);
        Ur(o, d, s, l);
       }
       s.forEach(function(t, n) {
        var r = t.exportsWithDuplicate;
        if (n === "export=" || !(r && r.length) || i.has(n)) {
         return;
        }
        for (var a = 0, o = r; a < o.length; a++) {
         var c = o[a];
         Vt.add(e.createDiagnosticForNode(c, e.Diagnostics.Module_0_has_already_exported_a_member_named_1_Consider_explicitly_re_exporting_to_resolve_the_ambiguity, s.get(n).specifierText, e.unescapeLeadingUnderscores(n)));
        }
       });
       Ur(i, o);
      }
      return i;
     }
    }
    function Kr(e) {
     var t;
     return e && e.mergeId && (t = It[e.mergeId]) ? t : e;
    }
    function Vr(e) {
     return Kr(e.symbol && bo(e.symbol));
    }
    function Wr(e) {
     return Kr(e.parent && bo(e.parent));
    }
    function Hr(t, n) {
     var r = Wr(t);
     if (r) {
      var i = e.mapDefined(r.declarations, o);
      if (n && ui(r, n, 1920, false)) {
       return e.concatenate([ r ], i);
      }
      return e.append(i, r);
     }
     var a = e.mapDefined(t.declarations, function(t) {
      return !e.isAmbientModule(t) && t.parent && vi(t.parent) ? Vr(t.parent) : undefined;
     });
     if (!e.length(a)) {
      return undefined;
     }
     return e.mapDefined(a, function(e) {
      return Gr(e, t) ? e : undefined;
     });
     function o(e) {
      var t = gi(e);
      var n = t && t.exports && t.exports.get("export=");
      return vr(n) === vr(r) ? t : undefined;
     }
    }
    function Gr(t, n) {
     if (t === Wr(n)) {
      return n;
     }
     var r = jr(t);
     var i = r.get(n.escapedName);
     if (i && a(i)) {
      return i;
     }
     return e.forEachEntry(r, function(e) {
      if (a(e)) {
       return e;
      }
     });
     function a(e) {
      if (e === n || vr(e) === n || vr(e) === vr(n)) {
       return e;
      }
     }
    }
    function $r(e) {
     return e && (e.flags & 1048576) !== 0 ? Kr(e.exportSymbol) : e;
    }
    function Xr(e) {
     return !!(e.flags & 67216319 || e.flags & 2097152 && yr(e).flags & 67216319);
    }
    function Qr(t) {
     var n = t.members;
     for (var r = 0, i = n; r < i.length; r++) {
      var a = i[r];
      if (a.kind === 155 && e.nodeIsPresent(a.body)) {
       return a;
      }
     }
    }
    function Yr(e) {
     var t = new y(K, e);
     x++;
     t.id = x;
     return t;
    }
    function Zr(e, t) {
     var n = Yr(e);
     n.intrinsicName = t;
     return n;
    }
    function ei(e) {
     var t = Ru(e);
     t.flags |= 16;
     t.intrinsicName = "boolean";
     return t;
    }
    function ti(e, t) {
     var n = Yr(131072);
     n.objectFlags = e;
     n.symbol = t;
     n.members = undefined;
     n.properties = undefined;
     n.callSignatures = undefined;
     n.constructSignatures = undefined;
     n.stringIndexInfo = undefined;
     n.numberIndexInfo = undefined;
     return n;
    }
    function ni() {
     return Ru(e.arrayFrom(Gt.keys(), Ll));
    }
    function ri(e) {
     return e.charCodeAt(0) === 95 && e.charCodeAt(1) === 95 && e.charCodeAt(2) !== 95 && e.charCodeAt(2) !== 64;
    }
    function ii(t) {
     var n;
     t.forEach(function(e, t) {
      if (!ri(t) && Xr(e)) {
       (n || (n = [])).push(e);
      }
     });
     return n || e.emptyArray;
    }
    function ai(t, n, r, i, a, o) {
     t.members = n;
     t.properties = n === C ? e.emptyArray : ii(n);
     t.callSignatures = r;
     t.constructSignatures = i;
     t.stringIndexInfo = a;
     t.numberIndexInfo = o;
     return t;
    }
    function oi(e, t, n, r, i, a) {
     return ai(ti(16, e), t, n, r, i, a);
    }
    function si(t, n) {
     var r;
     for (var i = t; i; i = i.parent) {
      if (i.locals && !Rn(i)) {
       if (r = n(i.locals)) {
        return r;
       }
      }
      switch (i.kind) {
      case 277:
       if (!e.isExternalOrCommonJsModule(i)) {
        break;
       }

      case 242:
       if (r = n(Vr(i).exports)) {
        return r;
       }
       break;
      }
     }
     return n(qe);
    }
    function ci(e) {
     return e === 67216319 ? 67216319 : 1920;
    }
    function ui(t, n, r, i, a) {
     if (a === void 0) {
      a = e.createMap();
     }
     if (!(t && !fi(t))) {
      return undefined;
     }
     var o = "" + u(t);
     var s = a.get(o);
     if (!s) {
      a.set(o, s = []);
     }
     return si(n, c);
     function c(t, n) {
      if (!e.pushIfUnique(s, t)) {
       return undefined;
      }
      var r = d(t, n);
      s.pop();
      return r;
     }
     function l(e, t) {
      return !li(e, n, t) || !!ui(e.parent, n, ci(t), i, a);
     }
     function f(n, i, a) {
      return t === (i || n) && !e.some(n.declarations, vi) && (a || l(n, r));
     }
     function d(a, o) {
      if (f(a.get(t.escapedName), undefined, o)) {
       return [ t ];
      }
      return e.forEachEntry(a, function(a) {
       if (a.flags & 2097152 && a.escapedName !== "export=" && a.escapedName !== "default" && !(e.isUMDExportSymbol(a) && n && e.isExternalModule(e.getSourceFileOfNode(n))) && (!i || e.some(a.declarations, e.isExternalModuleImportEqualsDeclaration))) {
        var s = yr(a);
        if (f(a, s, o)) {
         return [ a ];
        }
        var u = jr(s);
        var d = u && c(u, true);
        if (d && l(a, ci(r))) {
         return [ a ].concat(d);
        }
       }
       if (a.escapedName === t.escapedName && a.exportSymbol) {
        if (f(Kr(a.exportSymbol), undefined, o)) {
         return [ t ];
        }
       }
      });
     }
    }
    function li(t, n, r) {
     var i = false;
     si(n, function(n) {
      var a = Kr(n.get(t.escapedName));
      if (!a) {
       return false;
      }
      if (a === t) {
       return true;
      }
      a = a.flags & 2097152 && !e.getDeclarationOfKind(a, 255) ? yr(a) : a;
      if (a.flags & r) {
       i = true;
       return true;
      }
      return false;
     });
     return i;
    }
    function fi(e) {
     if (e.declarations && e.declarations.length) {
      for (var t = 0, n = e.declarations; t < n.length; t++) {
       var r = n[t];
       switch (r.kind) {
       case 152:
       case 154:
       case 156:
       case 157:
        continue;

       default:
        return false;
       }
      }
      return true;
     }
     return false;
    }
    function di(e, t) {
     var n = _i(e, t, 67901928, false);
     return n.accessibility === 0;
    }
    function pi(e, t) {
     var n = _i(e, t, 67216319, false);
     return n.accessibility === 0;
    }
    function mi(t, n, r, i, a) {
     if (!e.length(t)) return;
     var o;
     for (var s = 0, c = t; s < c.length; s++) {
      var u = c[s];
      var l = ui(u, n, i, false);
      if (l) {
       o = u;
       var f = yi(l[0], a);
       if (f) {
        return f;
       }
      } else {
       if (e.some(u.declarations, vi)) {
        return {
         accessibility: 0
        };
       }
      }
      var d = mi(Hr(u, n), n, r, r === u ? ci(i) : i, a);
      if (d) {
       return d;
      }
     }
     if (o) {
      return {
       accessibility: 1,
       errorSymbolName: xi(r, n, i),
       errorModuleName: o !== r ? xi(o, n, 1920) : undefined
      };
     }
    }
    function _i(t, n, r, i) {
     if (t && n) {
      var a = mi([ t ], n, t, r, i);
      if (a) {
       return a;
      }
      var o = e.forEach(t.declarations, gi);
      if (o) {
       var s = gi(n);
       if (o !== s) {
        return {
         accessibility: 2,
         errorSymbolName: xi(t, n, r),
         errorModuleName: xi(o)
        };
       }
      }
      return {
       accessibility: 1,
       errorSymbolName: xi(t, n, r)
      };
     }
     return {
      accessibility: 0
     };
    }
    function gi(t) {
     var n = e.findAncestor(t, hi);
     return n && Vr(n);
    }
    function hi(t) {
     return e.isAmbientModule(t) || t.kind === 277 && e.isExternalOrCommonJsModule(t);
    }
    function vi(t) {
     return e.isModuleWithStringLiteralName(t) || t.kind === 277 && e.isExternalOrCommonJsModule(t);
    }
    function yi(t, n) {
     var r;
     if (!e.every(t.declarations, i)) {
      return undefined;
     }
     return {
      accessibility: 0,
      aliasesToMakeVisible: r
     };
     function i(t) {
      if (!Ii(t)) {
       var n = er(t);
       if (n && !e.hasModifier(n, 1) && Ii(n.parent)) {
        return a(t, n);
       } else if (e.isVariableDeclaration(t) && e.isVariableStatement(t.parent.parent) && !e.hasModifier(t.parent.parent, 1) && Ii(t.parent.parent.parent)) {
        return a(t, t.parent.parent);
       } else if (e.isLateVisibilityPaintedStatement(t) && !e.hasModifier(t, 1) && Ii(t.parent)) {
        return a(t, t);
       }
       return false;
      }
      return true;
     }
     function a(t, i) {
      if (n) {
       Ln(t).isVisible = true;
       r = e.appendIfUnique(r, i);
      }
      return true;
     }
    }
    function bi(t, n) {
     var r;
     if (t.parent.kind === 165 || e.isExpressionWithTypeArgumentsInClassExtendsClause(t.parent) || t.parent.kind === 147) {
      r = 67216319 | 1048576;
     } else if (t.kind === 146 || t.kind === 187 || t.parent.kind === 246) {
      r = 1920;
     } else {
      r = 67901928;
     }
     var i = Gk(t);
     var a = qn(n, i.escapedText, r, undefined, undefined, false);
     return a && yi(a, true) || {
      accessibility: 1,
      errorSymbolName: e.getTextOfNode(i),
      errorNode: i
     };
    }
    function xi(t, n, r, i, a) {
     if (i === void 0) {
      i = 4;
     }
     var o = 3112960;
     if (i & 2) {
      o |= 128;
     }
     if (i & 1) {
      o |= 512;
     }
     if (i & 8) {
      o |= 16384;
     }
     var s = i & 4 ? B.symbolToExpression : B.symbolToEntityName;
     return a ? c(a).getText() : e.usingSingleLineStringWriter(c);
     function c(i) {
      var a = s(t, r, n, o);
      var c = e.createPrinter({
       removeComments: true
      });
      var u = n && e.getSourceFileOfNode(n);
      c.writeNode(4, a, u, i);
      return i;
     }
    }
    function ki(t, n, r, i, a) {
     if (r === void 0) {
      r = 0;
     }
     return a ? o(a).getText() : e.usingSingleLineStringWriter(o);
     function o(a) {
      var o;
      if (r & 262144) {
       o = i === 1 ? 164 : 163;
      } else {
       o = i === 1 ? 159 : 158;
      }
      var s = B.signatureToSignatureDeclaration(t, o, n, wi(r) | 3112960 | 512);
      var c = e.createPrinter({
       removeComments: true,
       omitTrailingSemicolon: true
      });
      var u = n && e.getSourceFileOfNode(n);
      c.writeNode(4, s, u, a);
      return a;
     }
    }
    function Si(t, n, r, i) {
     if (r === void 0) {
      r = 1048576 | 16384;
     }
     if (i === void 0) {
      i = e.createTextWriter("");
     }
     var a = T.noErrorTruncation || r & 1;
     var o = B.typeToTypeNode(t, n, wi(r) | 3112960 | (a ? 1 : 0), i);
     if (o === undefined) return e.Debug.fail("should always get typenode");
     var s = {
      removeComments: true
     };
     var c = e.createPrinter(s);
     var u = n && e.getSourceFileOfNode(n);
     c.writeNode(4, o, u, i);
     var l = i.getText();
     var f = a ? undefined : e.defaultMaximumTruncationLength * 2;
     if (f && l && l.length >= f) {
      return l.substr(0, f - "...".length) + "...";
     }
     return l;
    }
    function wi(e) {
     if (e === void 0) {
      e = 0;
     }
     return e & 9469291;
    }
    function Ci() {
     return {
      typeToTypeNode: function(e, n, i, a) {
       return t(n, i, a, function(t) {
        return r(e, t);
       });
      },
      indexInfoToIndexSignatureDeclaration: function(e, n, r, i, a) {
       return t(r, i, a, function(t) {
        return o(e, n, t);
       });
      },
      signatureToSignatureDeclaration: function(e, n, r, i, a) {
       return t(r, i, a, function(t) {
        return s(e, n, t);
       });
      },
      symbolToEntityName: function(e, n, r, i, a) {
       return t(r, i, a, function(t) {
        return b(e, t, n, false);
       });
      },
      symbolToExpression: function(e, n, r, i, a) {
       return t(r, i, a, function(t) {
        return x(e, t, n);
       });
      },
      symbolToTypeParameterDeclarations: function(e, n, r, i) {
       return t(n, r, i, function(t) {
        return _(e, t);
       });
      },
      symbolToParameterDeclaration: function(e, n, r, i) {
       return t(n, r, i, function(t) {
        return p(e, t);
       });
      },
      typeParameterToDeclaration: function(e, n, r, i) {
       return t(n, r, i, function(t) {
        return d(e, t);
       });
      }
     };
     function t(t, n, r, i) {
      e.Debug.assert(t === undefined || (t.flags & 8) === 0);
      var a = {
       enclosingDeclaration: t,
       flags: n || 0,
       tracker: r && r.trackSymbol ? r : {
        trackSymbol: e.noop
       },
       encounteredError: false,
       visitedSymbols: undefined,
       inferTypeParameters: undefined,
       approximateLength: 0
      };
      var o = i(a);
      return a.encounteredError ? undefined : o;
     }
     function n(t) {
      if (t.truncating) return t.truncating;
      return t.truncating = !(t.flags & 1) && t.approximateLength > e.defaultMaximumTruncationLength;
     }
     function r(t, d) {
      if (f && f.throwIfCancellationRequested) {
       f.throwIfCancellationRequested();
      }
      var p = d.flags & 8388608;
      d.flags &= ~8388608;
      if (!t) {
       d.encounteredError = true;
       return undefined;
      }
      if (t.flags & 1) {
       d.approximateLength += 3;
       return e.createKeywordTypeNode(119);
      }
      if (t.flags & 2) {
       return e.createKeywordTypeNode(142);
      }
      if (t.flags & 4) {
       d.approximateLength += 6;
       return e.createKeywordTypeNode(137);
      }
      if (t.flags & 8) {
       d.approximateLength += 6;
       return e.createKeywordTypeNode(134);
      }
      if (t.flags & 16) {
       d.approximateLength += 7;
       return e.createKeywordTypeNode(122);
      }
      if (t.flags & 512 && !(t.flags & 262144)) {
       var m = Wr(t.symbol);
       var _ = b(m, d, 67901928, false);
       var g = Ya(m) === t ? _ : e.createQualifiedName(_, e.symbolName(t.symbol));
       d.approximateLength += e.symbolName(t.symbol).length;
       return e.createTypeReferenceNode(g, undefined);
      }
      if (t.flags & 544) {
       var h = b(t.symbol, d, 67901928, false);
       d.approximateLength += e.symbolName(t.symbol).length;
       return e.createTypeReferenceNode(h, undefined);
      }
      if (t.flags & 64) {
       d.approximateLength += t.value.length + 2;
       return e.createLiteralTypeNode(e.setEmitFlags(e.createLiteral(t.value), 16777216));
      }
      if (t.flags & 128) {
       d.approximateLength += ("" + t.value).length;
       return e.createLiteralTypeNode(e.createLiteral(t.value));
      }
      if (t.flags & 256) {
       d.approximateLength += t.intrinsicName.length;
       return t.intrinsicName === "true" ? e.createTrue() : e.createFalse();
      }
      if (t.flags & 2048) {
       if (!(d.flags & 1048576)) {
        if (pi(t.symbol, d.enclosingDeclaration)) {
         d.approximateLength += 6;
         return y(t.symbol, d, 67216319);
        }
        if (d.tracker.reportInaccessibleUniqueSymbolError) {
         d.tracker.reportInaccessibleUniqueSymbolError();
        }
       }
       d.approximateLength += 13;
       return e.createTypeOperatorNode(141, e.createKeywordTypeNode(138));
      }
      if (t.flags & 4096) {
       d.approximateLength += 4;
       return e.createKeywordTypeNode(105);
      }
      if (t.flags & 8192) {
       d.approximateLength += 9;
       return e.createKeywordTypeNode(140);
      }
      if (t.flags & 16384) {
       d.approximateLength += 4;
       return e.createKeywordTypeNode(95);
      }
      if (t.flags & 32768) {
       d.approximateLength += 5;
       return e.createKeywordTypeNode(131);
      }
      if (t.flags & 1024) {
       d.approximateLength += 6;
       return e.createKeywordTypeNode(138);
      }
      if (t.flags & 16777216) {
       d.approximateLength += 6;
       return e.createKeywordTypeNode(135);
      }
      if (t.flags & 65536 && t.isThisType) {
       if (d.flags & 4194304) {
        if (!d.encounteredError && !(d.flags & 32768)) {
         d.encounteredError = true;
        }
        if (d.tracker.reportInaccessibleThisError) {
         d.tracker.reportInaccessibleThisError();
        }
       }
       d.approximateLength += 4;
       return e.createThis();
      }
      var v = e.getObjectFlags(t);
      if (v & 4) {
       e.Debug.assert(!!(t.flags & 131072));
       return L(t);
      }
      if (t.flags & 65536 || v & 3) {
       if (t.flags & 65536 && e.contains(d.inferTypeParameters, t)) {
        d.approximateLength += e.symbolName(t.symbol).length + 6;
        return e.createInferTypeNode(l(t, d, undefined));
       }
       if (d.flags & 4 && t.flags & 65536 && e.length(t.symbol.declarations) && e.isTypeParameterDeclaration(t.symbol.declarations[0]) && c(t, d) && !di(t.symbol, d.enclosingDeclaration)) {
        var h = t.symbol.declarations[0].name;
        d.approximateLength += e.idText(h).length;
        return e.createTypeReferenceNode(e.getGeneratedNameForNode(h, 16 | 8), undefined);
       }
       return t.symbol ? y(t.symbol, d, 67901928) : e.createTypeReferenceNode(e.createIdentifier("?"), undefined);
      }
      if (!p && t.aliasSymbol && (d.flags & 16384 || di(t.aliasSymbol, d.enclosingDeclaration))) {
       var x = a(t.aliasTypeArguments, d);
       if (ri(t.aliasSymbol.escapedName) && !(t.aliasSymbol.flags & 32)) return e.createTypeReferenceNode(e.createIdentifier(""), x);
       return y(t.aliasSymbol, d, 67901928, x);
      }
      if (t.flags & (262144 | 524288)) {
       var k = t.flags & 262144 ? Ti(t.types) : t.types;
       var S = a(k, d, true);
       if (S && S.length > 0) {
        var w = e.createUnionOrIntersectionTypeNode(t.flags & 262144 ? 171 : 172, S);
        return w;
       } else {
        if (!d.encounteredError && !(d.flags & 262144)) {
         d.encounteredError = true;
        }
        return undefined;
       }
      }
      if (v & (16 | 32)) {
       e.Debug.assert(!!(t.flags & 131072));
       return O(t);
      }
      if (t.flags & 1048576) {
       var C = t.type;
       d.approximateLength += 6;
       var D = r(C, d);
       return e.createTypeOperatorNode(D);
      }
      if (t.flags & 2097152) {
       var T = r(t.objectType, d);
       var D = r(t.indexType, d);
       d.approximateLength += 2;
       return e.createIndexedAccessTypeNode(T, D);
      }
      if (t.flags & 4194304) {
       var E = r(t.checkType, d);
       var N = d.inferTypeParameters;
       d.inferTypeParameters = t.root.inferTypeParameters;
       var A = r(t.extendsType, d);
       d.inferTypeParameters = N;
       var F = r(hl(t), d);
       var P = r(vl(t), d);
       d.approximateLength += 15;
       return e.createConditionalTypeNode(E, A, F, P);
      }
      if (t.flags & 8388608) {
       return r(t.typeVariable, d);
      }
      return e.Debug.fail("Should be unreachable.");
      function I(t) {
       e.Debug.assert(!!(t.flags & 131072));
       var n = t.declaration.readonlyToken ? e.createToken(t.declaration.readonlyToken.kind) : undefined;
       var i = t.declaration.questionToken ? e.createToken(t.declaration.questionToken.kind) : undefined;
       var a;
       if (Wo(t)) {
        a = e.createTypeOperatorNode(r(Ho(t), d));
       } else {
        a = r(Jo(t), d);
       }
       var o = l(Uo(t), d, a);
       var s = r(Ko(t), d);
       var c = e.createMappedTypeNode(n, o, i, s);
       d.approximateLength += 10;
       return e.setEmitFlags(c, 1);
      }
      function O(t) {
       var n = t.symbol;
       var r;
       if (n) {
        var i = e.getObjectFlags(t) & 16 && t.symbol && t.symbol.flags & 32;
        r = (i ? "+" : "") + u(n);
        if (Nv(n.valueDeclaration)) {
         var a = t === Iv(n) ? 67901928 : 67216319;
         return y(n, d, a);
        } else if (n.flags & 32 && !_a(n) && !(n.valueDeclaration.kind === 207 && d.flags & 2048) || n.flags & (384 | 512) || c()) {
         return y(n, d, 67216319);
        } else if (d.visitedSymbols && d.visitedSymbols.has(r)) {
         var o = Ni(t);
         if (o) {
          return y(o, d, 67901928);
         } else {
          d.approximateLength += 3;
          return e.createKeywordTypeNode(119);
         }
        } else {
         if (!d.visitedSymbols) {
          d.visitedSymbols = e.createMap();
         }
         d.visitedSymbols.set(r, true);
         var s = M(t);
         d.visitedSymbols.delete(r);
         return s;
        }
       } else {
        return M(t);
       }
       function c() {
        var t = !!(n.flags & 8192) && e.some(n.declarations, function(t) {
         return e.hasModifier(t, 32);
        });
        var i = !!(n.flags & 16) && (n.parent || e.forEach(n.declarations, function(e) {
         return e.parent.kind === 277 || e.parent.kind === 243;
        }));
        if (t || i) {
         return (!!(d.flags & 4096) || d.visitedSymbols && d.visitedSymbols.has(r)) && (!(d.flags & 8) || pi(n, d.enclosingDeclaration));
        }
       }
      }
      function M(t) {
       if (Yo(t)) {
        return I(t);
       }
       var n = Zo(t);
       if (!n.properties.length && !n.stringIndexInfo && !n.numberIndexInfo) {
        if (!n.callSignatures.length && !n.constructSignatures.length) {
         d.approximateLength += 2;
         return e.setEmitFlags(e.createTypeLiteralNode(undefined), 1);
        }
        if (n.callSignatures.length === 1 && !n.constructSignatures.length) {
         var r = n.callSignatures[0];
         var i = s(r, 163, d);
         return i;
        }
        if (n.constructSignatures.length === 1 && !n.callSignatures.length) {
         var r = n.constructSignatures[0];
         var i = s(r, 164, d);
         return i;
        }
       }
       var a = d.flags;
       d.flags |= 4194304;
       var o = z(n);
       d.flags = a;
       var c = e.createTypeLiteralNode(o);
       d.approximateLength += 2;
       return e.setEmitFlags(c, d.flags & 1024 ? 0 : 1);
      }
      function L(t) {
       var n = t.typeArguments || e.emptyArray;
       if (t.target === Ge) {
        if (d.flags & 2) {
         var i = r(n[0], d);
         return e.createTypeReferenceNode("Array", [ i ]);
        }
        var o = r(n[0], d);
        return e.createArrayTypeNode(o);
       } else if (t.target.objectFlags & 8) {
        if (n.length > 0) {
         var s = Tc(t);
         var c = a(n.slice(0, s), d);
         var u = t.target.hasRestElement;
         if (c && c.length > 0) {
          for (var l = t.target.minLength; l < s; l++) {
           c[l] = u && l === s - 1 ? e.createRestTypeNode(e.createArrayTypeNode(c[l])) : e.createOptionalTypeNode(c[l]);
          }
          return e.createTupleTypeNode(c);
         }
        }
        if (d.encounteredError || d.flags & 524288) {
         return e.createTupleTypeNode([]);
        }
        d.encounteredError = true;
        return undefined;
       } else if (d.flags & 2048 && t.symbol.valueDeclaration && e.isClassLike(t.symbol.valueDeclaration) && !pi(t.symbol, d.enclosingDeclaration)) {
        return O(t);
       } else {
        var f = t.target.outerTypeParameters;
        var l = 0;
        var p = void 0;
        if (f) {
         var m = f.length;
         while (l < m) {
          var _ = l;
          var g = kc(f[l]);
          do {
           l++;
          } while (l < m && kc(f[l]) === g);
          if (!e.rangeEquals(f, n, _, l)) {
           var h = a(n.slice(_, l), d);
           var v = d.flags;
           d.flags |= 16;
           var b = y(g, d, 67901928, h);
           d.flags = v;
           p = !p ? b : R(p, b);
          }
         }
        }
        var x = void 0;
        if (n.length > 0) {
         var k = (t.target.typeParameters || e.emptyArray).length;
         x = a(n.slice(l, k), d);
        }
        var S = d.flags;
        d.flags |= 16;
        var w = y(t.symbol, d, 67901928, x);
        d.flags = S;
        return !p ? w : R(p, w);
       }
      }
      function R(t, n) {
       if (e.isImportTypeNode(t)) {
        var r = t.typeArguments;
        if (t.qualifier) {
         (e.isIdentifier(t.qualifier) ? t.qualifier : t.qualifier.right).typeArguments = r;
        }
        t.typeArguments = n.typeArguments;
        var i = B(n);
        for (var a = 0, o = i; a < o.length; a++) {
         var s = o[a];
         t.qualifier = t.qualifier ? e.createQualifiedName(t.qualifier, s) : s;
        }
        return t;
       } else {
        var r = t.typeArguments;
        (e.isIdentifier(t.typeName) ? t.typeName : t.typeName.right).typeArguments = r;
        t.typeArguments = n.typeArguments;
        var i = B(n);
        for (var c = 0, u = i; c < u.length; c++) {
         var s = u[c];
         t.typeName = e.createQualifiedName(t.typeName, s);
        }
        return t;
       }
      }
      function B(t) {
       var n = t.typeName;
       var r = [];
       while (!e.isIdentifier(n)) {
        r.unshift(n.right);
        n = n.left;
       }
       r.unshift(n);
       return r;
      }
      function z(t) {
       if (n(d)) {
        return [ e.createPropertySignature(undefined, "...", undefined, undefined, undefined) ];
       }
       var r = [];
       for (var a = 0, c = t.callSignatures; a < c.length; a++) {
        var u = c[a];
        r.push(s(u, 158, d));
       }
       for (var l = 0, f = t.constructSignatures; l < f.length; l++) {
        var u = f[l];
        r.push(s(u, 159, d));
       }
       if (t.stringIndexInfo) {
        var p = t.objectFlags & 2048 ? hc(ee, t.stringIndexInfo.isReadonly, t.stringIndexInfo.declaration) : t.stringIndexInfo;
        r.push(o(p, 0, d));
       }
       if (t.numberIndexInfo) {
        r.push(o(t.numberIndexInfo, 1, d));
       }
       var m = t.properties;
       if (!m) {
        return r;
       }
       var _ = 0;
       for (var g = 0, h = m; g < h.length; g++) {
        var v = h[g];
        _++;
        if (d.flags & 2048) {
         if (v.flags & 4194304) {
          continue;
         }
         if (e.getDeclarationModifierFlagsFromSymbol(v) & (8 | 16) && d.tracker.reportPrivateInBaseOfClassExpression) {
          d.tracker.reportPrivateInBaseOfClassExpression(e.unescapeLeadingUnderscores(v.escapedName));
         }
        }
        if (n(d) && _ + 2 < m.length - 1) {
         r.push(e.createPropertySignature(undefined, "... " + (m.length - _) + " more ...", undefined, undefined, undefined));
         i(m[m.length - 1], d, r);
         break;
        }
        i(v, d, r);
       }
       return r.length ? r : undefined;
      }
     }
     function i(t, n, i) {
      var a = e.getCheckFlags(t) & 2048 && n.flags & 33554432 ? ee : xa(t);
      var o = n.enclosingDeclaration;
      n.enclosingDeclaration = undefined;
      if (e.getCheckFlags(t) & 1024) {
       var c = e.first(t.declarations);
       if (n.tracker.trackSymbol && fo(c)) {
        var u = Gk(c.name.expression);
        var l = qn(u, u.escapedText, 67216319 | 1048576, undefined, undefined, true);
        if (l) {
         n.tracker.trackSymbol(l, o, 67216319);
        }
       }
      }
      var f = b(t, n, 67216319, true);
      n.approximateLength += e.symbolName(t).length + 1;
      n.enclosingDeclaration = o;
      var d = t.flags & 16777216 ? e.createToken(55) : undefined;
      if (t.flags & (16 | 8192) && !es(a).length) {
       var p = Es(a, 0);
       for (var m = 0, _ = p; m < _.length; m++) {
        var g = _[m];
        var h = s(g, 153, n);
        h.name = f;
        h.questionToken = d;
        if (t.valueDeclaration) {
         e.setCommentRange(h, t.valueDeclaration);
        }
        i.push(h);
       }
      } else {
       var v = n.flags;
       n.flags |= !!(e.getCheckFlags(t) & 2048) ? 33554432 : 0;
       var y = a ? r(a, n) : e.createKeywordTypeNode(119);
       n.flags = v;
       var x = Sy(t) ? [ e.createToken(132) ] : undefined;
       if (x) {
        n.approximateLength += 9;
       }
       var k = e.createPropertySignature(x, f, d, y, undefined);
       if (t.valueDeclaration) {
        e.setCommentRange(k, t.valueDeclaration);
       }
       i.push(k);
      }
     }
     function a(t, i, a) {
      if (e.some(t)) {
       if (n(i)) {
        if (!a) {
         return [ e.createTypeReferenceNode("...", undefined) ];
        } else if (t.length > 2) {
         return [ r(t[0], i), e.createTypeReferenceNode("... " + (t.length - 2) + " more ...", undefined), r(t[t.length - 1], i) ];
        }
       }
       var o = [];
       var s = 0;
       for (var c = 0, u = t; c < u.length; c++) {
        var l = u[c];
        s++;
        if (n(i) && s + 2 < t.length - 1) {
         o.push(e.createTypeReferenceNode("... " + (t.length - s) + " more ...", undefined));
         var f = r(t[t.length - 1], i);
         if (f) {
          o.push(f);
         }
         break;
        }
        i.approximateLength += 2;
        var d = r(l, i);
        if (d) {
         o.push(d);
        }
       }
       return o;
      }
     }
     function o(t, n, i) {
      var a = e.getNameFromIndexInfo(t) || "x";
      var o = e.createKeywordTypeNode(n === 0 ? 137 : 134);
      var s = e.createParameter(undefined, undefined, undefined, a, undefined, o, undefined);
      var c = r(t.type || ee, i);
      if (!t.type && !(i.flags & 2097152)) {
       i.encounteredError = true;
      }
      i.approximateLength += a.length + 4;
      return e.createIndexSignature(undefined, t.isReadonly ? [ e.createToken(132) ] : undefined, [ s ], c);
     }
     function s(t, n, i) {
      var a;
      var o;
      if (i.flags & 32 && t.target && t.mapper && t.target.typeParameters) {
       o = t.target.typeParameters.map(function(e) {
        return r(gf(e, t.mapper), i);
       });
      } else {
       a = t.typeParameters && t.typeParameters.map(function(e) {
        return d(e, i);
       });
      }
      var s = To(t).map(function(e) {
       return p(e, i, n === 155);
      });
      if (t.thisParameter) {
       var c = p(t.thisParameter, i);
       s.unshift(c);
      }
      var u;
      var l = ec(t);
      if (l) {
       var f = l.kind === 1 ? e.setEmitFlags(e.createIdentifier(l.parameterName), 16777216) : e.createThisTypeNode();
       var m = r(l.type, i);
       u = e.createTypePredicateNode(f, m);
      } else {
       var _ = tc(t);
       u = _ && r(_, i);
      }
      if (i.flags & 256) {
       if (u && u.kind === 119) {
        u = undefined;
       }
      } else if (!u) {
       u = e.createKeywordTypeNode(119);
      }
      i.approximateLength += 3;
      return e.createSignatureDeclaration(n, a, s, u, o);
     }
     function c(e, t) {
      return !!qn(t.enclosingDeclaration, e.symbol.escapedName, 67901928, undefined, e.symbol.escapedName, false);
     }
     function l(t, n, i) {
      var a = n.flags;
      n.flags &= ~512;
      var o = n.flags & 4 && t.symbol.declarations[0] && e.isTypeParameterDeclaration(t.symbol.declarations[0]) && c(t, n);
      var s = o ? e.getGeneratedNameForNode(t.symbol.declarations[0].name, 16 | 8) : b(t.symbol, n, 67901928, true);
      var u = ys(t);
      var l = u && r(u, n);
      n.flags = a;
      return e.createTypeParameterDeclaration(s, i, l);
     }
     function d(e, t, n) {
      if (n === void 0) {
       n = ss(e);
      }
      var i = n && r(n, t);
      return l(e, t, i);
     }
     function p(t, n, i) {
      var a = e.getDeclarationOfKind(t, 149);
      if (!a && !wn(t)) {
       a = e.getDeclarationOfKind(t, 296);
      }
      var o = xa(t);
      if (a && cw(a)) {
       o = Ud(o);
      }
      var s = r(o, n);
      var c = !(n.flags & 8192) && i && a && a.modifiers ? a.modifiers.map(e.getSynthesizedClone) : undefined;
      var u = a && e.isRestParameter(a) || e.getCheckFlags(t) & 8192;
      var l = u ? e.createToken(24) : undefined;
      var f = a ? a.name ? a.name.kind === 71 ? e.setEmitFlags(e.getSynthesizedClone(a.name), 16777216) : a.name.kind === 146 ? e.setEmitFlags(e.getSynthesizedClone(a.name.right), 16777216) : _(a.name) : e.symbolName(t) : e.symbolName(t);
      var d = a && Bs(a) || e.getCheckFlags(t) & 4096;
      var p = d ? e.createToken(55) : undefined;
      var m = e.createParameter(undefined, c, l, f, p, s, undefined);
      n.approximateLength += e.symbolName(t).length + 3;
      return m;
      function _(t) {
       return n(t);
       function n(t) {
        var r = e.visitEachChild(t, n, e.nullTransformationContext, undefined, n);
        var i = e.nodeIsSynthesized(r) ? r : e.getSynthesizedClone(r);
        if (i.kind === 184) {
         i.initializer = undefined;
        }
        return e.setEmitFlags(i, 1 | 16777216);
       }
      }
     }
     function m(t, n, r, i) {
      n.tracker.trackSymbol(t, n.enclosingDeclaration, r);
      var a;
      var o = t.flags & 262144;
      if (!o && (n.enclosingDeclaration || n.flags & 64)) {
       a = e.Debug.assertDefined(s(t, r, true));
       e.Debug.assert(a && a.length > 0);
      } else {
       a = [ t ];
      }
      return a;
      function s(t, r, a) {
       var o = ui(t, n.enclosingDeclaration, r, !!(n.flags & 128));
       if (!o || li(o[0], n.enclosingDeclaration, o.length === 1 ? r : ci(r))) {
        var c = Hr(o ? o[0] : t, n.enclosingDeclaration);
        if (e.length(c)) {
         for (var u = 0, l = c; u < l.length; u++) {
          var f = l[u];
          var d = s(f, ci(r), false);
          if (d) {
           o = d.concat(o || [ Gr(f, t) || t ]);
           break;
          }
         }
        }
       }
       if (o) {
        return o;
       }
       if (a || !(t.flags & (2048 | 4096))) {
        if (!a && !i && !!e.forEach(t.declarations, vi)) {
         return;
        }
        return [ t ];
       }
      }
     }
     function _(t, n) {
      var r;
      var i = Ak(t);
      if (i.flags & (32 | 64 | 524288)) {
       r = e.createNodeArray(e.map(Ea(t), function(e) {
        return d(e, n);
       }));
      }
      return r;
     }
     function g(t, n, r) {
      e.Debug.assert(t && 0 <= n && n < t.length);
      var i = t[n];
      var o;
      if (r.flags & 512 && n < t.length - 1) {
       var s = i;
       var c = t[n + 1];
       if (e.getCheckFlags(c) & 1) {
        var u = Na(s.flags & 2097152 ? yr(s) : s);
        o = a(e.map(u, c.mapper), r);
       } else {
        o = _(i, r);
       }
      }
      return o;
     }
     function h(t) {
      if (e.isIndexedAccessTypeNode(t.objectType)) {
       return h(t.objectType);
      }
      return t;
     }
     function v(t, n) {
      var r = e.getDeclarationOfKind(t, 277);
      if (r && r.moduleName !== undefined) {
       return r.moduleName;
      }
      if (!r) {
       if (n.tracker.trackReferencedAmbientModule) {
        var i = e.filter(t.declarations, e.isAmbientModule);
        if (e.length(i)) {
         for (var a = 0, o = i; a < o.length; a++) {
          var s = o[a];
          n.tracker.trackReferencedAmbientModule(s, t);
         }
        }
       }
       return t.escapedName.substring(1, t.escapedName.length - 1);
      } else {
       if (!n.enclosingDeclaration || !n.tracker.moduleResolverHost) {
        return t.escapedName.substring(1, t.escapedName.length - 1);
       }
       var c = e.getSourceFileOfNode(e.getOriginalNode(n.enclosingDeclaration));
       var u = Mn(t);
       var l = u.specifierCache && u.specifierCache.get(c.path);
       if (!l) {
        l = e.flatten(e.moduleSpecifiers.getModuleSpecifiers(t, T, c, n.tracker.moduleResolverHost, n.tracker.moduleResolverHost.getSourceFiles(), {
         importModuleSpecifierPreference: "non-relative"
        }))[0];
        u.specifierCache = u.specifierCache || e.createMap();
        u.specifierCache.set(c.path, l);
       }
       return l;
      }
     }
     function y(t, n, r, i) {
      var a = m(t, n, r, !(n.flags & 16384));
      var o = r === 67216319;
      if (e.some(a[0].declarations, vi)) {
       var s = a.length > 1 ? b(a, a.length - 1, 1) : undefined;
       var c = i || g(a, 0, n);
       var u = v(a[0], n);
       var l = e.createLiteralTypeNode(e.createLiteral(u));
       n.approximateLength += u.length + 10;
       if (!s || e.isEntityName(s)) {
        if (s) {
         var f = e.isIdentifier(s) ? s : s.right;
         f.typeArguments = undefined;
        }
        return e.createImportTypeNode(l, s, c, o);
       } else {
        var d = h(s);
        var p = d.objectType.typeName;
        return e.createIndexedAccessTypeNode(e.createImportTypeNode(l, p, c, o), d.indexType);
       }
      }
      var _ = b(a, a.length - 1, 0);
      if (e.isIndexedAccessTypeNode(_)) {
       return _;
      }
      if (o) {
       return e.createTypeQueryNode(_);
      } else {
       var f = e.isIdentifier(_) ? _ : _.right;
       var y = f.typeArguments;
       f.typeArguments = undefined;
       return e.createTypeReferenceNode(_, y);
      }
      function b(t, r, a) {
       var o = r === t.length - 1 ? i : g(t, r, n);
       var s = t[r];
       if (r === 0) {
        n.flags |= 16777216;
       }
       var c = Pi(s, n);
       n.approximateLength += c.length + 1;
       if (r === 0) {
        n.flags ^= 16777216;
       }
       var u = t[r - 1];
       if (!(n.flags & 16) && u && yo(u) && yo(u).get(s.escapedName) === s) {
        var l = b(t, r - 1, a);
        if (e.isIndexedAccessTypeNode(l)) {
         return e.createIndexedAccessTypeNode(l, e.createLiteralTypeNode(e.createLiteral(c)));
        } else {
         return e.createIndexedAccessTypeNode(e.createTypeReferenceNode(l, o), e.createLiteralTypeNode(e.createLiteral(c)));
        }
       }
       var f = e.setEmitFlags(e.createIdentifier(c, o), 16777216);
       f.symbol = s;
       if (r > a) {
        var l = b(t, r - 1, a);
        if (!e.isEntityName(l)) {
         return e.Debug.fail("Impossible construct - an export of an indexed access cannot be reachable");
        }
        return e.createQualifiedName(l, f);
       }
       return f;
      }
     }
     function b(t, n, r, i) {
      var a = m(t, n, r);
      if (i && a.length !== 1 && !n.encounteredError && !(n.flags & 65536)) {
       n.encounteredError = true;
      }
      return o(a, a.length - 1);
      function o(t, r) {
       var i = g(t, r, n);
       var a = t[r];
       if (r === 0) {
        n.flags |= 16777216;
       }
       var s = Pi(a, n);
       if (r === 0) {
        n.flags ^= 16777216;
       }
       var c = e.setEmitFlags(e.createIdentifier(s, i), 16777216);
       c.symbol = a;
       return r > 0 ? e.createQualifiedName(o(t, r - 1), c) : c;
      }
     }
     function x(t, n, r) {
      var i = m(t, n, r);
      return a(i, i.length - 1);
      function a(t, r) {
       var i = g(t, r, n);
       var o = t[r];
       if (r === 0) {
        n.flags |= 16777216;
       }
       var s = Pi(o, n);
       if (r === 0) {
        n.flags ^= 16777216;
       }
       var c = s.charCodeAt(0);
       var u = e.isIdentifierStart(c, E);
       if (r === 0 || u) {
        var l = e.setEmitFlags(e.createIdentifier(s, i), 16777216);
        l.symbol = o;
        return r > 0 ? e.createPropertyAccess(a(t, r - 1), l) : l;
       } else {
        if (c === 91) {
         s = s.substring(1, s.length - 1);
         c = s.charCodeAt(0);
        }
        var f = void 0;
        if (e.isSingleOrDoubleQuote(c)) {
         f = e.createLiteral(s.substring(1, s.length - 1).replace(/\\./g, function(e) {
          return e.substring(1);
         }));
         f.singleQuote = c === 39;
        } else if ("" + +s === s) {
         f = e.createLiteral(+s);
        }
        if (!f) {
         f = e.setEmitFlags(e.createIdentifier(s, i), 16777216);
         f.symbol = o;
        }
        return e.createElementAccess(a(t, r - 1), f);
       }
      }
     }
    }
    function Di(t, n, r, i) {
     if (r === void 0) {
      r = 16384;
     }
     return i ? a(i).getText() : e.usingSingleLineStringWriter(a);
     function a(i) {
      var a = e.createTypePredicateNode(t.kind === 1 ? e.createIdentifier(t.parameterName) : e.createThisTypeNode(), B.typeToTypeNode(t.type, n, wi(r) | 3112960 | 512));
      var o = e.createPrinter({
       removeComments: true
      });
      var s = n && e.getSourceFileOfNode(n);
      o.writeNode(4, a, s, i);
      return i;
     }
    }
    function Ti(e) {
     var t = [];
     var n = 0;
     for (var r = 0; r < e.length; r++) {
      var i = e[r];
      n |= i.flags;
      if (!(i.flags & 24576)) {
       if (i.flags & (256 | 512)) {
        var a = i.flags & 256 ? pe : Ha(i);
        if (a.flags & 262144) {
         var o = a.types.length;
         if (r + o <= e.length && e[r + o - 1] === a.types[o - 1]) {
          t.push(a);
          r += o - 1;
          continue;
         }
        }
       }
       t.push(i);
      }
     }
     if (n & 16384) t.push(se);
     if (n & 8192) t.push(ae);
     return t || e;
    }
    function Ei(e) {
     if (e === 8) {
      return "private";
     }
     if (e === 16) {
      return "protected";
     }
     return "public";
    }
    function Ni(t) {
     if (t.symbol && t.symbol.flags & 2048) {
      var n = e.findAncestor(t.symbol.declarations[0].parent, function(e) {
       return e.kind !== 175;
      });
      if (n.kind === 240) {
       return Vr(n);
      }
     }
     return undefined;
    }
    function Ai(t) {
     return t && t.parent && t.parent.kind === 243 && e.isExternalModuleAugmentation(t.parent.parent);
    }
    function Fi(t) {
     return t.kind === 277 || e.isAmbientModule(t);
    }
    function Pi(t, n) {
     if (n && t.escapedName === "default" && !(n.flags & 16384) && (!(n.flags & 16777216) || !t.declarations || n.enclosingDeclaration && e.findAncestor(t.declarations[0], Fi) !== e.findAncestor(n.enclosingDeclaration, Fi))) {
      return "default";
     }
     if (t.declarations && t.declarations.length) {
      var r = t.declarations[0];
      var i = e.getNameOfDeclaration(r);
      if (i) {
       return e.declarationNameToString(i);
      }
      if (r.parent && r.parent.kind === 235) {
       return e.declarationNameToString(r.parent.name);
      }
      switch (r.kind) {
      case 207:
      case 194:
      case 195:
       if (n && !n.encounteredError && !(n.flags & 131072)) {
        n.encounteredError = true;
       }
       return r.kind === 207 ? "(Anonymous class)" : "(Anonymous function)";
      }
     }
     var a = t.nameType;
     if (a) {
      if (a.flags & 64 && !e.isIdentifierText(a.value, T.target)) {
       return '"' + e.escapeString(a.value, 34) + '"';
      }
      if (a && a.flags & 2048) {
       return "[" + Pi(a.symbol, n) + "]";
      }
     }
     return e.symbolName(t);
    }
    function Ii(t) {
     if (t) {
      var n = Ln(t);
      if (n.isVisible === undefined) {
       n.isVisible = !!r();
      }
      return n.isVisible;
     }
     return false;
     function r() {
      switch (t.kind) {
      case 295:
      case 301:
       return !!(t.parent && t.parent.parent && t.parent.parent.parent && e.isSourceFile(t.parent.parent.parent));

      case 184:
       return Ii(t.parent.parent);

      case 235:
       if (e.isBindingPattern(t.name) && !t.name.elements.length) {
        return false;
       }

      case 242:
      case 238:
      case 239:
      case 240:
      case 237:
      case 241:
      case 246:
       if (e.isExternalModuleAugmentation(t)) {
        return true;
       }
       var n = zi(t);
       if (!(e.getCombinedModifierFlags(t) & 1) && !(t.kind !== 246 && n.kind !== 277 && n.flags & 4194304)) {
        return Rn(n);
       }
       return Ii(n);

      case 152:
      case 151:
      case 156:
      case 157:
      case 154:
      case 153:
       if (e.hasModifier(t, 8 | 16)) {
        return false;
       }

      case 155:
      case 159:
      case 158:
      case 160:
      case 149:
      case 243:
      case 163:
      case 164:
      case 166:
      case 162:
      case 167:
      case 168:
      case 171:
      case 172:
      case 175:
       return Ii(t.parent);

      case 248:
      case 249:
      case 251:
       return false;

      case 148:
      case 277:
      case 245:
       return true;

      case 252:
       return false;

      default:
       return false;
      }
     }
    }
    function Oi(t, n) {
     var r;
     if (t.parent && t.parent.kind === 252) {
      r = qn(t, t.escapedText, 67216319 | 67901928 | 1920 | 2097152, undefined, t, false);
     } else if (t.parent.kind === 255) {
      r = mr(t.parent, 67216319 | 67901928 | 1920 | 2097152);
     }
     var i;
     if (r) {
      a(r.declarations);
     }
     return i;
     function a(t) {
      e.forEach(t, function(t) {
       var r = er(t) || t;
       if (n) {
        Ln(t).isVisible = true;
       } else {
        i = i || [];
        e.pushIfUnique(i, r);
       }
       if (e.isInternalModuleImportEqualsDeclaration(t)) {
        var o = t.moduleReference;
        var s = Gk(o);
        var c = qn(t, s.escapedText, 67216319 | 67901928 | 1920, undefined, undefined, false);
        if (c) {
         a(c.declarations);
        }
       }
      });
     }
    }
    function Mi(e, t) {
     var n = Li(e, t);
     if (n >= 0) {
      var r = Et.length;
      for (var i = n; i < r; i++) {
       Nt[i] = false;
      }
      return false;
     }
     Et.push(e);
     Nt.push(true);
     At.push(t);
     return true;
    }
    function Li(e, t) {
     for (var n = Et.length - 1; n >= 0; n--) {
      if (Ri(Et[n], At[n])) {
       return -1;
      }
      if (Et[n] === e && At[n] === t) {
       return n;
      }
     }
     return -1;
    }
    function Ri(t, n) {
     switch (n) {
     case 0:
      return !!Mn(t).type;

     case 2:
      return !!Mn(t).declaredType;

     case 1:
      return !!t.resolvedBaseConstructorType;

     case 3:
      return !!t.resolvedReturnType;

     case 4:
      return !!t.immediateBaseConstraint;
     }
     return e.Debug.assertNever(n);
    }
    function Bi() {
     Et.pop();
     At.pop();
     return Nt.pop();
    }
    function zi(t) {
     return e.findAncestor(e.getRootDeclaration(t), function(e) {
      switch (e.kind) {
      case 235:
      case 236:
      case 251:
      case 250:
      case 249:
      case 248:
       return false;

      default:
       return true;
      }
     }).parent;
    }
    function ji(t) {
     var n = Ya(Wr(t));
     return n.typeParameters ? Cc(n, e.map(n.typeParameters, function(e) {
      return ee;
     })) : n;
    }
    function qi(e, t) {
     var n = Ds(e, t);
     return n ? xa(n) : undefined;
    }
    function Ui(e) {
     return e && (e.flags & 1) !== 0;
    }
    function Ji(e) {
     var t = Vr(e);
     return t && Mn(t).type || Qi(e, false);
    }
    function Ki(t) {
     return t.kind === 147 && !e.isStringOrNumericLiteral(t.expression);
    }
    function Vi(t, n, r) {
     t = Sm(t, function(e) {
      return !(e.flags & 24576);
     });
     if (t.flags & 32768) {
      return ke;
     }
     if (t.flags & 262144) {
      return wm(t, function(e) {
       return Vi(e, n, r);
      });
     }
     var i = e.createSymbolTable();
     var a = e.createUnderscoreEscapedMap();
     for (var o = 0, s = n; o < s.length; o++) {
      var c = s[o];
      a.set(e.getTextOfPropertyName(c), true);
     }
     for (var u = 0, l = rs(t); u < l.length; u++) {
      var f = l[u];
      var d = a.has(f.escapedName);
      var p = e.getDeclarationModifierFlagsFromSymbol(f) & (8 | 16);
      var m = f.flags & 65536 && !(f.flags & 32768);
      if (!d && !p && !Pl(f) && !m) {
       i.set(f.escapedName, Al(f));
      }
     }
     var _ = Fs(t, 0);
     var g = Fs(t, 1);
     return oi(r, i, e.emptyArray, e.emptyArray, _, g);
    }
    function Wi(t) {
     var n = t.parent;
     var r = Ji(n.parent);
     if (r === re) {
      return re;
     }
     if (!r) {
      return t.initializer ? ib(t) : r;
     }
     if (Ui(r)) {
      return r;
     }
     var i;
     if (n.kind === 182) {
      if (t.dotDotDotToken) {
       if (r.flags & 2 || !pg(r)) {
        bn(t, e.Diagnostics.Rest_types_may_only_be_created_from_object_types);
        return re;
       }
       var a = [];
       for (var o = 0, s = n.elements; o < s.length; o++) {
        var c = s[o];
        if (!c.dotDotDotToken) {
         a.push(c.propertyName || c.name);
        }
       }
       i = Vi(r, a, t.symbol);
      } else {
       var u = t.propertyName || t.name;
       var l = uo(u);
       var f = e.isComputedPropertyName(u) && e.isWellKnownSymbolSyntactically(u.expression);
       if (!l && !f && Ki(u)) {
        var d = pb(u.expression);
        if (Oy(d, 3072)) {
         if (O) {
          bn(t, e.Diagnostics.Type_0_cannot_be_used_to_index_type_1, Si(d), Si(r));
         }
         return ee;
        }
        var p = Oy(d, 168) && Ps(r, 1) || Ps(r, 0);
        if (!p && O && !T.suppressImplicitAnyIndexErrors) {
         if (Ps(r, 1)) {
          bn(t, e.Diagnostics.Element_implicitly_has_an_any_type_because_index_expression_is_not_of_type_number);
         } else {
          bn(t, e.Diagnostics.Element_implicitly_has_an_any_type_because_type_0_has_no_index_signature, Si(r));
         }
        }
        return p || ee;
       }
       var m = l ? lg(u) : undefined;
       var _ = l ? _o(m) : f ? e.getPropertyNameForKnownSymbolName(e.idText(u.expression.name)) : e.getTextOfPropertyName(u);
       if (F && t.flags & 4194304 && e.isParameterDeclaration(t)) {
        r = Kd(r);
       }
       if (l && m && !Ds(r, _) && Oy(m, 3072)) {
        if (O) {
         bn(t, e.Diagnostics.Type_0_cannot_be_used_to_index_type_1, Si(m), Si(r));
        }
        return ee;
       }
       var g = Zm(qi(r, _), t.name);
       i = g && Jm(t, g) || ug(_) && Ps(r, 1) || Ps(r, 0);
       if (!i) {
        bn(u, e.Diagnostics.Type_0_has_no_property_1_and_no_string_index_signature, Si(r), e.declarationNameToString(u));
        return re;
       }
      }
     } else {
      var h = rk(r, n, false, false);
      var v = n.elements.indexOf(t);
      if (t.dotDotDotToken) {
       i = Id(r) ? ag((r.typeArguments || e.emptyArray).slice(v, Tc(r))) : bu(h);
      } else {
       var y = n.elements.indexOf(t);
       i = wd(r) ? Cd(r, y) || t.initializer && ib(t) : h;
       if (!i) {
        if (Id(r)) {
         bn(t, e.Diagnostics.Tuple_type_0_with_length_1_cannot_be_assigned_to_tuple_with_length_2, Si(r), Tc(r), n.elements.length);
        } else {
         bn(t, e.Diagnostics.Type_0_has_no_property_1, Si(r), "" + y);
        }
        return re;
       }
      }
     }
     if (F && t.initializer && !(Rd(nb(t.initializer)) & 8192)) {
      i = Qp(i, 131072);
     }
     return t.initializer && !e.getEffectiveTypeAnnotationNode(e.walkUpBindingElementsAndPatterns(t)) ? Ru([ i, nb(t.initializer) ], 2) : i;
    }
    function Hi(t) {
     var n = e.getJSDocType(t);
     if (n) {
      return Ul(n);
     }
     return undefined;
    }
    function Gi(t) {
     var n = e.skipParentheses(t);
     return n.kind === 95 || n.kind === 71 && Ip(n) === z;
    }
    function $i(t) {
     var n = e.skipParentheses(t);
     return n.kind === 185 && n.elements.length === 0;
    }
    function Xi(e, t) {
     if (t === void 0) {
      t = true;
     }
     return F && t ? Ud(e) : e;
    }
    function Qi(t, n) {
     if (e.isVariableDeclaration(t) && t.parent.parent.kind === 224) {
      var r = Zu(ah(t.parent.parent.expression));
      return r.flags & (65536 | 1048576) ? el(r) : ue;
     }
     if (e.isVariableDeclaration(t) && t.parent.parent.kind === 225) {
      var i = t.parent.parent;
      return nk(i.expression, i.awaitModifier) || ee;
     }
     if (e.isBindingPattern(t.parent)) {
      return Wi(t);
     }
     var a = n && (e.isParameter(t) && Ls(t) || !e.isBindingElement(t) && !e.isVariableDeclaration(t) && !!t.questionToken);
     var o = sa(t);
     if (o) {
      return Xi(o, a);
     }
     if ((O || e.isInJavaScriptFile(t)) && t.kind === 235 && !e.isBindingPattern(t.name) && !(e.getCombinedModifierFlags(t) & 1) && !(t.flags & 4194304)) {
      if (!(e.getCombinedNodeFlags(t) & 2) && (!t.initializer || Gi(t.initializer))) {
       return te;
      }
      if (t.initializer && $i(t.initializer)) {
       return nt;
      }
     }
     if (t.kind === 149) {
      var s = t.parent;
      if (s.kind === 157 && !po(s)) {
       var c = e.getDeclarationOfKind(Vr(t.parent), 156);
       if (c) {
        var u = Vs(c);
        var l = cC(s);
        if (l && t === l) {
         e.Debug.assert(!l.type);
         return xa(u.thisParameter);
        }
        return tc(u);
       }
      }
      var f = t.symbol.escapedName === "this" ? v_(s) : y_(t);
      if (f) {
       return Xi(f, a);
      }
     }
     if (t.initializer) {
      var f = ib(t);
      return Xi(f, a);
     }
     if (e.isJsxAttribute(t)) {
      return de;
     }
     if (e.isBindingPattern(t.name)) {
      return ra(t.name, false, true);
     }
     return undefined;
    }
    function Yi(t) {
     var n = e.getAssignedJavascriptInitializer(t.valueDeclaration);
     if (n) {
      return Ad(nb(n));
     }
     var r = [];
     var i;
     var a = false;
     var o = false;
     var s;
     var c = function(n) {
      var c = false;
      var u = e.isBinaryExpression(n) ? n : e.isPropertyAccessExpression(n) ? e.isBinaryExpression(n.parent) ? n.parent : n : undefined;
      if (!u) {
       return {
        value: re
       };
      }
      var l = e.isPropertyAccessExpression(u) ? e.getSpecialPropertyAccessKind(u) : e.getSpecialPropertyAssignmentKind(u);
      if (l === 4) {
       var f = e.getThisContainer(u, false);
       c = f.kind === 155 || f.kind === 237 || f.kind === 194 && !e.isPrototypePropertyAssignment(f.parent);
       if (c) {
        a = true;
       } else {
        o = true;
       }
      }
      var d = Hi(u.parent);
      if (d) {
       var p = tp(d);
       if (!s) {
        s = p;
       } else if (s !== re && p !== re && !Sf(s, p) && !(t.flags & 67108864)) {
        Jx(s, n, p);
       }
      } else if (!s && e.isBinaryExpression(u)) {
       var m = Ad(nb(u.right));
       if (e.getObjectFlags(m) & 16 && l === 2 && t.escapedName === "export=") {
        var _ = Zo(m);
        var g = e.createSymbolTable();
        e.copyEntries(_.members, g);
        t.exports.forEach(function(e, t) {
         if (g.has(t)) {
          var n = _.members.get(t);
          var r = Sn(e.flags | n.flags, t);
          r.type = Ru([ xa(e), xa(n) ]);
          g.set(t, r);
         } else {
          g.set(t, e);
         }
        });
        m = oi(_.symbol, g, _.callSignatures, _.constructSignatures, _.stringIndexInfo, _.numberIndexInfo);
       }
       var h = m;
       if (Sd(m)) {
        h = tt;
        if (O) {
         ip(u, tt);
        }
       }
       r.push(h);
       if (c) {
        (i || (i = [])).push(h);
       }
      }
     };
     for (var u = 0, l = t.declarations; u < l.length; u++) {
      var f = l[u];
      var d = c(f);
      if (typeof d === "object") return d.value;
     }
     var p = s;
     if (!p) {
      if (o) {
       var m = Zi(t);
       if (m) {
        (i || (i = [])).push(m);
        a = true;
       }
      }
      var _ = e.some(i, function(e) {
       return !!(e.flags & ~(24576 | 134217728));
      }) ? i : r;
      p = Ru(_, 2);
     }
     var g = tp(Xi(p, o && !a));
     if (Sm(g, function(e) {
      return !!(e.flags & ~24576);
     }) === ge) {
      if (O) {
       ip(t.valueDeclaration, ee);
      }
      return ee;
     }
     return g;
    }
    function Zi(t) {
     var n = e.forEach(t.declarations, function(t) {
      var n = e.getThisContainer(t, false).parent;
      return e.isClassLike(n) && n;
     });
     if (n) {
      var r = Ya(Vr(n));
      var i = r && La(r)[0];
      if (i) {
       return qi(i, t.escapedName);
      }
     }
    }
    function ea(t, n, r) {
     if (t.initializer) {
      return Xi(ib(t));
     }
     if (e.isBindingPattern(t.name)) {
      return ra(t.name, n, r);
     }
     if (r && O && !oa(t)) {
      ip(t, ee);
     }
     return ee;
    }
    function ta(t, n, r) {
     var i = e.createSymbolTable();
     var a;
     var o = 128;
     e.forEach(t.elements, function(t) {
      var s = t.propertyName || t.name;
      if (Ki(s)) {
       o |= 512;
       return;
      }
      if (t.dotDotDotToken) {
       a = hc(ee, false);
       return;
      }
      var c = e.getTextOfPropertyName(s);
      var u = 4 | (t.initializer ? 16777216 : 0);
      var l = Sn(u, c);
      l.type = ea(t, n, r);
      l.bindingElement = t;
      i.set(l.escapedName, l);
     });
     var s = oi(undefined, i, e.emptyArray, e.emptyArray, a, undefined);
     s.flags |= 268435456;
     s.objectFlags |= o;
     if (n) {
      s.pattern = t;
     }
     return s;
    }
    function na(t, n, r) {
     var i = t.elements;
     var a = e.lastOrUndefined(i);
     var o = !!(a && a.kind === 184 && a.dotDotDotToken);
     if (i.length === 0 || i.length === 1 && o) {
      return E >= 2 ? vu(ee) : tt;
     }
     var s = e.map(i, function(t) {
      return e.isOmittedExpression(t) ? ee : ea(t, n, r);
     });
     var c = e.findLastIndex(i, function(t) {
      return !e.isOmittedExpression(t) && !rg(t);
     }, i.length - (o ? 2 : 1)) + 1;
     var u = wu(s, c, o);
     if (n) {
      u = Dc(u);
      u.pattern = t;
     }
     return u;
    }
    function ra(e, t, n) {
     if (t === void 0) {
      t = false;
     }
     if (n === void 0) {
      n = false;
     }
     return e.kind === 182 ? ta(e, t, n) : na(e, t, n);
    }
    function ia(e, t) {
     return aa(Qi(e, true), e, t);
    }
    function aa(t, n, r) {
     if (t) {
      if (r) {
       ap(n, t);
      }
      if (t.flags & 2048 && (e.isBindingElement(n) || !n.type) && t.symbol !== Vr(n)) {
       t = me;
      }
      return tp(t);
     }
     t = e.isParameter(n) && n.dotDotDotToken ? tt : ee;
     if (r && O) {
      if (!oa(n)) {
       ip(n, t);
      }
     }
     return t;
    }
    function oa(t) {
     var n = e.getRootDeclaration(t);
     var r = n.kind === 149 ? n.parent : n;
     return Qb(r);
    }
    function sa(t) {
     var n = e.getEffectiveTypeAnnotationNode(t);
     if (n) {
      return Ul(n);
     }
    }
    function ca(t) {
     var n = Mn(t);
     if (!n.type) {
      if (t.flags & 4194304) {
       return n.type = ji(t);
      }
      if (t === q || t === U) {
       return n.type = ee;
      }
      var r = t.valueDeclaration;
      if (e.isCatchClauseVariableDeclarationOrBindingElement(r)) {
       return n.type = ee;
      }
      if (e.isSourceFile(r)) {
       var i = e.cast(r, e.isJsonSourceFile);
       return n.type = i.statements.length ? pb(i.statements[0].expression) : ke;
      }
      if (r.kind === 252) {
       return n.type = pb(r.expression);
      }
      if (!Mi(t, 0)) {
       return re;
      }
      var a = ua(t, r);
      if (!a) {
       if (e.isJSDocPropertyLikeTag(r) || e.isPropertyAccessExpression(r) || e.isIdentifier(r) || e.isClassDeclaration(r) || e.isFunctionDeclaration(r) || e.isMethodDeclaration(r) && !e.isObjectLiteralMethod(r) || e.isMethodSignature(r)) {
        if (t.flags & (16 | 8192 | 32 | 384 | 512)) {
         return ga(t);
        }
        a = sa(r) || ee;
       } else if (e.isPropertyAssignment(r)) {
        a = sa(r) || sb(r);
       } else if (e.isJsxAttribute(r)) {
        a = sa(r) || xg(r);
       } else if (e.isShorthandPropertyAssignment(r)) {
        a = sa(r) || ob(r.name, 0);
       } else if (e.isObjectLiteralMethod(r)) {
        a = sa(r) || cb(r, 0);
       } else if (e.isParameter(r) || e.isPropertyDeclaration(r) || e.isPropertySignature(r) || e.isVariableDeclaration(r) || e.isBindingElement(r)) {
        a = ia(r, true);
       } else {
        return e.Debug.fail("Unhandled declaration kind! " + e.Debug.showSyntaxKind(r) + " for " + e.Debug.showSymbol(t));
       }
      }
      if (!Bi()) {
       a = ba(t);
      }
      n.type = a;
     }
     return n.type;
    }
    function ua(t, n) {
     if (!e.isInJavaScriptFile(n)) {
      return undefined;
     } else if (e.isJSDocPropertyLikeTag(n) && n.typeExpression) {
      return Ul(n.typeExpression.type);
     } else if (e.isBinaryExpression(n) || e.isPropertyAccessExpression(n) && e.isBinaryExpression(n.parent)) {
      return la(n, t, e.getAssignedJavascriptInitializer(e.isBinaryExpression(n) ? n.left : n)) || Yi(t);
     } else if (e.isParameter(n) || e.isPropertyDeclaration(n) || e.isPropertySignature(n) || e.isVariableDeclaration(n) || e.isBindingElement(n)) {
      var r = e.isParameter(n) && Ls(n) || !e.isBindingElement(n) && !e.isVariableDeclaration(n) && !!n.questionToken;
      var i = sa(n);
      return i && Xi(i, r) || la(n, t, e.getDeclaredJavascriptInitializer(n)) || ia(n, true);
     }
    }
    function la(t, n, r) {
     if (r && e.isInJavaScriptFile(r) && e.isObjectLiteralExpression(r)) {
      var i = e.createSymbolTable();
      while (e.isBinaryExpression(t) || e.isPropertyAccessExpression(t)) {
       var a = Vr(t);
       if (a && e.hasEntries(a.exports)) {
        Pn(i, a.exports);
       }
       t = e.isBinaryExpression(t) ? t.parent : t.parent.parent;
      }
      var o = Vr(t);
      if (o && e.hasEntries(o.exports)) {
       Pn(i, o.exports);
      }
      return oi(n, i, e.emptyArray, e.emptyArray, je, undefined);
     }
    }
    function fa(t) {
     if (t) {
      if (t.kind === 156) {
       var n = e.getEffectiveReturnTypeNode(t);
       return n && Ul(n);
      } else {
       var r = e.getEffectiveSetAccessorTypeAnnotationNode(t);
       return r && Ul(r);
      }
     }
     return undefined;
    }
    function da(e) {
     var t = cC(e);
     return t && t.symbol;
    }
    function pa(e) {
     return Ys(Vs(e));
    }
    function ma(t) {
     var n = Mn(t);
     if (!n.type) {
      var r = e.getDeclarationOfKind(t, 156);
      var i = e.getDeclarationOfKind(t, 157);
      if (r && e.isInJavaScriptFile(r)) {
       var a = Hi(r);
       if (a) {
        return n.type = a;
       }
      }
      if (!Mi(t, 0)) {
       return re;
      }
      var o = void 0;
      var s = fa(r);
      if (s) {
       o = s;
      } else {
       var c = fa(i);
       if (c) {
        o = c;
       } else {
        if (r && r.body) {
         o = fy(r);
        } else {
         if (O) {
          if (i) {
           bn(i, e.Diagnostics.Property_0_implicitly_has_type_any_because_its_set_accessor_lacks_a_parameter_type_annotation, xi(t));
          } else {
           e.Debug.assert(!!r, "there must existed getter as we are current checking either setter or getter in this function");
           bn(r, e.Diagnostics.Property_0_implicitly_has_type_any_because_its_get_accessor_lacks_a_return_type_annotation, xi(t));
          }
         }
         o = ee;
        }
       }
      }
      if (!Bi()) {
       o = ee;
       if (O) {
        var u = e.getDeclarationOfKind(t, 156);
        bn(u, e.Diagnostics._0_implicitly_has_return_type_any_because_it_does_not_have_a_return_type_annotation_and_is_referenced_directly_or_indirectly_in_one_of_its_return_expressions, xi(t));
       }
      }
      n.type = o;
     }
     return n.type;
    }
    function _a(e) {
     var t = Ma(Ua(e));
     return t.flags & 2162688 ? t : undefined;
    }
    function ga(t) {
     var n = Mn(t);
     if (!n.type) {
      var r = e.getDeclarationOfJSInitializer(t.valueDeclaration);
      if (r) {
       var i = Vr(r);
       if (i && (e.hasEntries(i.exports) || e.hasEntries(i.members))) {
        t = Tn(t);
        n = t;
        if (e.hasEntries(i.exports)) {
         t.exports = t.exports || e.createSymbolTable();
         Pn(t.exports, i.exports);
        }
        if (e.hasEntries(i.members)) {
         t.members = t.members || e.createSymbolTable();
         Pn(t.members, i.members);
        }
       }
      }
      if (t.flags & 1536 && e.isShorthandAmbientModuleSymbol(t)) {
       n.type = ee;
      } else if (t.valueDeclaration.kind === 202 || t.valueDeclaration.kind === 187 && t.valueDeclaration.parent.kind === 202) {
       n.type = Yi(t);
      } else {
       var a = ti(16, t);
       if (t.flags & 32) {
        var o = _a(t);
        n.type = o ? Wu([ a, o ]) : a;
       } else {
        n.type = F && t.flags & 16777216 ? Ud(a) : a;
       }
      }
     }
     return n.type;
    }
    function ha(e) {
     var t = Mn(e);
     if (!t.type) {
      t.type = $a(e);
     }
     return t.type;
    }
    function va(e) {
     var t = Mn(e);
     if (!t.type) {
      var n = yr(e);
      t.type = n.flags & 67216319 ? xa(n) : re;
     }
     return t.type;
    }
    function ya(t) {
     var n = Mn(t);
     if (!n.type) {
      if (w === 100) {
       bn(t.valueDeclaration, e.Diagnostics.Generic_type_instantiation_is_excessively_deep_and_possibly_infinite);
       n.type = re;
      } else {
       if (!Mi(t, 0)) {
        return re;
       }
       w++;
       var r = gf(xa(n.target), n.mapper);
       w--;
       if (!Bi()) {
        r = ba(t);
       }
       n.type = r;
      }
     }
     return n.type;
    }
    function ba(t) {
     if (e.getEffectiveTypeAnnotationNode(t.valueDeclaration)) {
      bn(t.valueDeclaration, e.Diagnostics._0_is_referenced_directly_or_indirectly_in_its_own_type_annotation, xi(t));
      return re;
     }
     if (O) {
      bn(t.valueDeclaration, e.Diagnostics._0_implicitly_has_type_any_because_it_does_not_have_a_type_annotation_and_is_referenced_directly_or_indirectly_in_its_own_initializer, xi(t));
     }
     return ee;
    }
    function xa(t) {
     if (e.getCheckFlags(t) & 1) {
      return ya(t);
     }
     if (e.getCheckFlags(t) & 2048) {
      return gp(t);
     }
     if (t.flags & (3 | 4)) {
      return ca(t);
     }
     if (t.flags & (16 | 8192 | 32 | 384 | 512)) {
      return ga(t);
     }
     if (t.flags & 8) {
      return ha(t);
     }
     if (t.flags & 98304) {
      return ma(t);
     }
     if (t.flags & 2097152) {
      return va(t);
     }
     return re;
    }
    function ka(t, n) {
     return t !== undefined && n !== undefined && (e.getObjectFlags(t) & 4) !== 0 && t.target === n;
    }
    function Sa(t) {
     return e.getObjectFlags(t) & 4 ? t.target : t;
    }
    function wa(t, n) {
     return r(t);
     function r(t) {
      if (e.getObjectFlags(t) & (3 | 4)) {
       var i = Sa(t);
       return i === n || e.some(La(i), r);
      } else if (t.flags & 524288) {
       return e.some(t.types, r);
      }
      return false;
     }
    }
    function Ca(t, n) {
     for (var r = 0, i = n; r < i.length; r++) {
      var a = i[r];
      t = e.appendIfUnique(t, Xa(Vr(a)));
     }
     return t;
    }
    function Da(t, n) {
     while (true) {
      t = t.parent;
      if (!t) {
       return undefined;
      }
      switch (t.kind) {
      case 238:
      case 207:
      case 239:
      case 158:
      case 159:
      case 153:
      case 163:
      case 164:
      case 287:
      case 237:
      case 154:
      case 194:
      case 195:
      case 240:
      case 300:
      case 301:
      case 295:
      case 179:
      case 173:
       var r = Da(t, n);
       if (t.kind === 179) {
        return e.append(r, Xa(Vr(t.typeParameter)));
       } else if (t.kind === 173) {
        return e.concatenate(r, yl(t));
       }
       var i = Ca(r, e.getEffectiveTypeParameterDeclarations(t));
       var a = n && (t.kind === 238 || t.kind === 207 || t.kind === 239) && Ua(Vr(t)).thisType;
       return a ? e.append(i, a) : i;
      }
     }
    }
    function Ta(t) {
     var n = t.flags & 32 ? t.valueDeclaration : e.getDeclarationOfKind(t, 239);
     return Da(n);
    }
    function Ea(t) {
     var n;
     for (var r = 0, i = t.declarations; r < i.length; r++) {
      var a = i[r];
      if (a.kind === 239 || a.kind === 238 || a.kind === 207 || e.isTypeAlias(a)) {
       var o = a;
       n = Ca(n, e.getEffectiveTypeParameterDeclarations(o));
      }
     }
     return n;
    }
    function Na(t) {
     return e.concatenate(Ta(t), Ea(t));
    }
    function Aa(e) {
     var t = Es(e, 1);
     if (t.length === 1) {
      var n = t[0];
      return !n.typeParameters && n.parameters.length === 1 && n.hasRestParameter && Hv(n.parameters[0]) === tt;
     }
     return false;
    }
    function Fa(e) {
     if (za(e) && Es(e, 1).length > 0) {
      return true;
     }
     if (e.flags & 2162688) {
      var t = ps(e);
      return !!t && za(t) && Aa(t);
     }
     return false;
    }
    function Pa(t) {
     return e.getEffectiveBaseTypeNode(t.symbol.valueDeclaration);
    }
    function Ia(t, n, r) {
     var i = e.length(n);
     var a = e.isInJavaScriptFile(r);
     return e.filter(Es(t, 1), function(t) {
      return (a || i >= Js(t.typeParameters)) && i <= e.length(t.typeParameters);
     });
    }
    function Oa(t, n, r) {
     var i = Ia(t, n, r);
     var a = e.map(n, Ul);
     return e.sameMap(i, function(t) {
      return e.some(t.typeParameters) ? ac(t, a, e.isInJavaScriptFile(r)) : t;
     });
    }
    function Ma(t) {
     if (!t.resolvedBaseConstructorType) {
      var n = t.symbol.valueDeclaration;
      var r = e.getEffectiveBaseTypeNode(n);
      var i = Pa(t);
      if (!i) {
       return t.resolvedBaseConstructorType = ae;
      }
      if (!Mi(t, 1)) {
       return re;
      }
      var a = pb(i.expression);
      if (r && i !== r) {
       e.Debug.assert(!r.typeArguments);
       pb(r.expression);
      }
      if (a.flags & (131072 | 524288)) {
       Zo(a);
      }
      if (!Bi()) {
       bn(t.symbol.valueDeclaration, e.Diagnostics._0_is_referenced_directly_or_indirectly_in_its_own_base_expression, xi(t.symbol));
       return t.resolvedBaseConstructorType = re;
      }
      if (!(a.flags & 1) && a !== ce && !Fa(a)) {
       bn(i.expression, e.Diagnostics.Type_0_is_not_a_constructor_function_type, Si(a));
       return t.resolvedBaseConstructorType = re;
      }
      t.resolvedBaseConstructorType = a;
     }
     return t.resolvedBaseConstructorType;
    }
    function La(t) {
     if (!t.resolvedBaseTypes) {
      if (t.objectFlags & 8) {
       t.resolvedBaseTypes = [ bu(Ru(t.typeParameters || e.emptyArray)) ];
      } else if (t.symbol.flags & (32 | 64)) {
       if (t.symbol.flags & 32) {
        Ra(t);
       }
       if (t.symbol.flags & 64) {
        ja(t);
       }
      } else {
       e.Debug.fail("type must be class or interface");
      }
     }
     return t.resolvedBaseTypes;
    }
    function Ra(t) {
     t.resolvedBaseTypes = e.resolvingEmptyArray;
     var n = ks(Ma(t));
     if (!(n.flags & (131072 | 524288 | 1))) {
      return t.resolvedBaseTypes = e.emptyArray;
     }
     var r = Pa(t);
     var i = Vc(r);
     var a;
     var o = n && n.symbol ? Ya(n.symbol) : undefined;
     if (n.symbol && n.symbol.flags & 32 && Ba(o)) {
      a = Ec(r, n.symbol, i);
     } else if (n.flags & 1) {
      a = n;
     } else {
      var s = Oa(n, r.typeArguments, r);
      if (!s.length) {
       bn(r.expression, e.Diagnostics.No_base_constructor_has_the_specified_number_of_type_arguments);
       return t.resolvedBaseTypes = e.emptyArray;
      }
      a = tc(s[0]);
     }
     if (a === re) {
      return t.resolvedBaseTypes = e.emptyArray;
     }
     if (!za(a)) {
      bn(r.expression, e.Diagnostics.Base_constructor_return_type_0_is_not_a_class_or_interface_type, Si(a));
      return t.resolvedBaseTypes = e.emptyArray;
     }
     if (t === a || wa(a, t)) {
      bn(t.symbol.valueDeclaration, e.Diagnostics.Type_0_recursively_references_itself_as_a_base_type, Si(t, undefined, 2));
      return t.resolvedBaseTypes = e.emptyArray;
     }
     if (t.resolvedBaseTypes === e.resolvingEmptyArray) {
      t.members = undefined;
     }
     return t.resolvedBaseTypes = [ a ];
    }
    function Ba(e) {
     var t = e.outerTypeParameters;
     if (t) {
      var n = t.length - 1;
      var r = e.typeArguments;
      return t[n].symbol !== r[n].symbol;
     }
     return true;
    }
    function za(t) {
     return !!(t.flags & (131072 | 16777216 | 1)) && !Yo(t) || !!(t.flags & 524288) && e.every(t.types, za);
    }
    function ja(t) {
     t.resolvedBaseTypes = t.resolvedBaseTypes || e.emptyArray;
     for (var n = 0, r = t.symbol.declarations; n < r.length; n++) {
      var i = r[n];
      if (i.kind === 239 && e.getInterfaceBaseTypeNodes(i)) {
       for (var a = 0, o = e.getInterfaceBaseTypeNodes(i); a < o.length; a++) {
        var s = o[a];
        var c = Ul(s);
        if (c !== re) {
         if (za(c)) {
          if (t !== c && !wa(c, t)) {
           if (t.resolvedBaseTypes === e.emptyArray) {
            t.resolvedBaseTypes = [ c ];
           } else {
            t.resolvedBaseTypes.push(c);
           }
          } else {
           bn(i, e.Diagnostics.Type_0_recursively_references_itself_as_a_base_type, Si(t, undefined, 2));
          }
         } else {
          bn(s, e.Diagnostics.An_interface_may_only_extend_a_class_or_another_interface);
         }
        }
       }
      }
     }
    }
    function qa(t) {
     for (var n = 0, r = t.declarations; n < r.length; n++) {
      var i = r[n];
      if (i.kind === 239) {
       if (i.flags & 64) {
        return false;
       }
       var a = e.getInterfaceBaseTypeNodes(i);
       if (a) {
        for (var o = 0, s = a; o < s.length; o++) {
         var c = s[o];
         if (e.isEntityNameExpression(c.expression)) {
          var u = wr(c.expression, 67901928, true);
          if (!u || !(u.flags & 64) || Ua(u).thisType) {
           return false;
          }
         }
        }
       }
      }
     }
     return true;
    }
    function Ua(t) {
     var n = Mn(t);
     if (!n.declaredType) {
      var r = t.flags & 32 ? 1 : 2;
      var i = n.declaredType = ti(r, t);
      var a = Ta(t);
      var o = Ea(t);
      if (a || o || r === 1 || !qa(t)) {
       i.objectFlags |= 4;
       i.typeParameters = e.concatenate(a, o);
       i.outerTypeParameters = a;
       i.localTypeParameters = o;
       i.instantiations = e.createMap();
       i.instantiations.set(Sc(i.typeParameters), i);
       i.target = i;
       i.typeArguments = i.typeParameters;
       i.thisType = Yr(65536);
       i.thisType.isThisType = true;
       i.thisType.symbol = t;
       i.thisType.constraint = i;
      }
     }
     return n.declaredType;
    }
    function Ja(t) {
     var n = Mn(t);
     if (!n.declaredType) {
      if (!Mi(t, 2)) {
       return re;
      }
      var r = e.find(t.declarations, function(t) {
       return e.isJSDocTypeAlias(t) || t.kind === 240;
      });
      var i = e.isJSDocTypeAlias(r) ? r.typeExpression : r.type;
      var a = i ? Ul(i) : re;
      if (Bi()) {
       var o = Ea(t);
       if (o) {
        n.typeParameters = o;
        n.instantiations = e.createMap();
        n.instantiations.set(Sc(o), a);
       }
      } else {
       a = re;
       bn(r.name, e.Diagnostics.Type_alias_0_circularly_references_itself, xi(t));
      }
      n.declaredType = a;
     }
     return n.declaredType;
    }
    function Ka(e) {
     if (e.kind === 9) {
      return true;
     } else if (e.kind === 202) {
      return Ka(e.left) && Ka(e.right);
     }
     return false;
    }
    function Va(t) {
     var n = t.initializer;
     if (!n) {
      return !(t.flags & 4194304);
     }
     switch (n.kind) {
     case 9:
     case 8:
      return true;

     case 200:
      return n.operator === 38 && n.operand.kind === 8;

     case 71:
      return e.nodeIsMissing(n) || !!Vr(t.parent).exports.get(n.escapedText);

     case 202:
      return Ka(n);

     default:
      return false;
     }
    }
    function Wa(e) {
     var t = Mn(e);
     if (t.enumKind !== undefined) {
      return t.enumKind;
     }
     var n = false;
     for (var r = 0, i = e.declarations; r < i.length; r++) {
      var a = i[r];
      if (a.kind === 241) {
       for (var o = 0, s = a.members; o < s.length; o++) {
        var c = s[o];
        if (c.initializer && c.initializer.kind === 9) {
         return t.enumKind = 1;
        }
        if (!Va(c)) {
         n = true;
        }
       }
      }
     }
     return t.enumKind = n ? 0 : 1;
    }
    function Ha(e) {
     return e.flags & 512 && !(e.flags & 262144) ? Ya(Wr(e.symbol)) : e;
    }
    function Ga(e) {
     var t = Mn(e);
     if (t.declaredType) {
      return t.declaredType;
     }
     if (Wa(e) === 1) {
      S++;
      var n = [];
      for (var r = 0, i = e.declarations; r < i.length; r++) {
       var a = i[r];
       if (a.kind === 241) {
        for (var o = 0, s = a.members; o < s.length; o++) {
         var c = s[o];
         var u = Ll(fw(c), S, Vr(c));
         Mn(Vr(c)).declaredType = u;
         n.push(u);
        }
       }
      }
      if (n.length) {
       var l = Ru(n, 1, e, undefined);
       if (l.flags & 262144) {
        l.flags |= 512;
        l.symbol = e;
       }
       return t.declaredType = l;
      }
     }
     var f = Yr(32);
     f.symbol = e;
     return t.declaredType = f;
    }
    function $a(e) {
     var t = Mn(e);
     if (!t.declaredType) {
      var n = Ga(Wr(e));
      if (!t.declaredType) {
       t.declaredType = n;
      }
     }
     return t.declaredType;
    }
    function Xa(e) {
     var t = Mn(e);
     if (!t.declaredType) {
      var n = Yr(65536);
      n.symbol = e;
      t.declaredType = n;
     }
     return t.declaredType;
    }
    function Qa(e) {
     var t = Mn(e);
     if (!t.declaredType) {
      t.declaredType = Ya(yr(e));
     }
     return t.declaredType;
    }
    function Ya(e) {
     return Za(e) || re;
    }
    function Za(e) {
     if (e.flags & (32 | 64)) {
      return Ua(e);
     }
     if (e.flags & 524288) {
      return Ja(e);
     }
     if (e.flags & 262144) {
      return Xa(e);
     }
     if (e.flags & 384) {
      return Ga(e);
     }
     if (e.flags & 8) {
      return $a(e);
     }
     if (e.flags & 2097152) {
      return Qa(e);
     }
     return undefined;
    }
    function eo(e) {
     switch (e.kind) {
     case 119:
     case 142:
     case 137:
     case 134:
     case 122:
     case 138:
     case 135:
     case 105:
     case 140:
     case 95:
     case 131:
     case 180:
      return true;

     case 167:
      return eo(e.elementType);

     case 162:
      return !e.typeArguments || e.typeArguments.every(eo);
     }
     return false;
    }
    function to(e) {
     return !e.constraint || eo(e.constraint);
    }
    function no(t) {
     var n = e.getEffectiveTypeAnnotationNode(t);
     return n ? eo(n) : !e.hasInitializer(t);
    }
    function ro(t) {
     var n = e.getEffectiveReturnTypeNode(t);
     var r = e.getEffectiveTypeParameterDeclarations(t);
     return (t.kind === 155 || !!n && eo(n)) && t.parameters.every(no) && r.every(to);
    }
    function io(e) {
     if (e.declarations && e.declarations.length === 1) {
      var t = e.declarations[0];
      if (t) {
       switch (t.kind) {
       case 152:
       case 151:
        return no(t);

       case 154:
       case 153:
       case 155:
        return ro(t);
       }
      }
     }
     return false;
    }
    function ao(t, n, r) {
     var i = e.createSymbolTable();
     for (var a = 0, o = t; a < o.length; a++) {
      var s = o[a];
      i.set(s.escapedName, r && io(s) ? s : sf(s, n));
     }
     return i;
    }
    function oo(e, t) {
     for (var n = 0, r = t; n < r.length; n++) {
      var i = r[n];
      if (!e.has(i.escapedName)) {
       e.set(i.escapedName, i);
      }
     }
    }
    function so(t) {
     if (!t.declaredProperties) {
      var n = t.symbol;
      var r = yo(n);
      t.declaredProperties = ii(r);
      t.declaredCallSignatures = e.emptyArray;
      t.declaredConstructSignatures = e.emptyArray;
      t.declaredCallSignatures = Xs(r.get("__call"));
      t.declaredConstructSignatures = Xs(r.get("__new"));
      t.declaredStringIndexInfo = vc(n, 0);
      t.declaredNumberIndexInfo = vc(n, 1);
     }
     return t;
    }
    function co(e) {
     return !!(e.flags & 2240);
    }
    function uo(t) {
     return e.isComputedPropertyName(t) && e.isEntityNameExpression(t.expression) && co(lg(t));
    }
    function lo(e) {
     return e.charCodeAt(0) === 95 && e.charCodeAt(1) === 95 && e.charCodeAt(2) === 64;
    }
    function fo(t) {
     var n = e.getNameOfDeclaration(t);
     return !!n && uo(n);
    }
    function po(t) {
     return e.hasDynamicName(t) && !fo(t);
    }
    function mo(t) {
     return e.isDynamicName(t) && !uo(t);
    }
    function _o(t) {
     if (t.flags & 2048) {
      return "__@" + t.symbol.escapedName + "@" + u(t.symbol);
     }
     if (t.flags & 192) {
      return e.escapeLeadingUnderscores("" + t.value);
     }
     return e.Debug.fail();
    }
    function go(t, n, r) {
     e.Debug.assert(!!(e.getCheckFlags(t) & 1024), "Expected a late-bound symbol.");
     t.flags |= r;
     Mn(n.symbol).lateSymbol = t;
     if (!t.declarations) {
      t.declarations = [ n ];
     } else {
      t.declarations.push(n);
     }
     if (r & 67216319) {
      if (!t.valueDeclaration || t.valueDeclaration.kind !== n.kind) {
       t.valueDeclaration = n;
      }
     }
    }
    function ho(t, n, r, i) {
     e.Debug.assert(!!i.symbol, "The member is expected to have a symbol.");
     var a = Ln(i);
     if (!a.resolvedSymbol) {
      a.resolvedSymbol = i.symbol;
      var o = lg(i.name);
      if (co(o)) {
       var s = _o(o);
       var c = i.symbol.flags;
       var u = r.get(s);
       if (!u) r.set(s, u = Sn(0, s, 1024));
       var l = n && n.get(s);
       if (u.flags & Cn(c) || l) {
        var f = l ? e.concatenate(l.declarations, u.declarations) : u.declarations;
        var d = e.declarationNameToString(i.name);
        e.forEach(f, function(t) {
         return bn(e.getNameOfDeclaration(t) || t, e.Diagnostics.Duplicate_declaration_0, d);
        });
        bn(i.name || i, e.Diagnostics.Duplicate_declaration_0, d);
        u = Sn(0, s, 1024);
       }
       u.nameType = o;
       go(u, i, c);
       if (u.parent) {
        e.Debug.assert(u.parent === t, "Existing symbol parent should match new one");
       } else {
        u.parent = t;
       }
       return a.resolvedSymbol = u;
      }
     }
     return a.resolvedSymbol;
    }
    function vo(t, n) {
     var r = Mn(t);
     if (!r[n]) {
      var i = n === "resolvedExports";
      var a = !i ? t.members : t.flags & 1536 ? Jr(t) : t.exports;
      r[n] = a || C;
      var o = e.createSymbolTable();
      for (var s = 0, c = t.declarations; s < c.length; s++) {
       var u = c[s];
       var l = e.getMembersOfDeclaration(u);
       if (l) {
        for (var f = 0, d = l; f < d.length; f++) {
         var p = d[f];
         if (i === e.hasStaticModifier(p) && fo(p)) {
          ho(t, a, o, p);
         }
        }
       }
      }
      r[n] = Fn(a, o) || C;
     }
     return r[n];
    }
    function yo(e) {
     return e.flags & 6240 ? vo(e, "resolvedMembers") : e.members || C;
    }
    function bo(t) {
     if (t.flags & 106500 && t.escapedName === "__computed") {
      var n = Mn(t);
      if (!n.lateSymbol && e.some(t.declarations, fo)) {
       if (e.some(t.declarations, e.hasStaticModifier)) {
        jr(t.parent);
       } else {
        yo(t.parent);
       }
      }
      return n.lateSymbol || (n.lateSymbol = t);
     }
     return t;
    }
    function xo(t, n, r) {
     if (e.getObjectFlags(t) & 4) {
      var i = t.target;
      var a = t.typeArguments;
      if (e.length(i.typeParameters) === e.length(a)) {
       var o = Cc(i, e.concatenate(a, [ n || i.thisType ]));
       return r ? ks(o) : o;
      }
     } else if (t.flags & 524288) {
      return Wu(e.map(t.types, function(e) {
       return xo(e, n, r);
      }));
     }
     return r ? ks(t) : t;
    }
    function ko(t, n, r, i) {
     var a;
     var o;
     var s;
     var c;
     var u;
     var l;
     if (e.rangeEquals(r, i, 0, r.length)) {
      a = D;
      o = n.symbol ? yo(n.symbol) : e.createSymbolTable(n.declaredProperties);
      s = n.declaredCallSignatures;
      c = n.declaredConstructSignatures;
      u = n.declaredStringIndexInfo;
      l = n.declaredNumberIndexInfo;
     } else {
      a = $l(r, i);
      o = ao(n.declaredProperties, a, r.length === 1);
      s = Vl(n.declaredCallSignatures, a);
      c = Vl(n.declaredConstructSignatures, a);
      u = vf(n.declaredStringIndexInfo, a);
      l = vf(n.declaredNumberIndexInfo, a);
     }
     var f = La(n);
     if (f.length) {
      if (n.symbol && o === yo(n.symbol)) {
       o = e.createSymbolTable(n.declaredProperties);
      }
      ai(t, o, s, c, u, l);
      var d = e.lastOrUndefined(i);
      for (var p = 0, m = f; p < m.length; p++) {
       var _ = m[p];
       var g = d ? xo(gf(_, a), d) : _;
       oo(o, rs(g));
       s = e.concatenate(s, Es(g, 0));
       c = e.concatenate(c, Es(g, 1));
       if (!u) {
        u = g === ee ? hc(ee, false) : Fs(g, 0);
       }
       l = l || Fs(g, 1);
      }
     }
     ai(t, o, s, c, u, l);
    }
    function So(t) {
     ko(t, so(t), e.emptyArray, e.emptyArray);
    }
    function wo(t) {
     var n = so(t.target);
     var r = e.concatenate(n.typeParameters, [ n.thisType ]);
     var i = t.typeArguments && t.typeArguments.length === r.length ? t.typeArguments : e.concatenate(t.typeArguments, [ t ]);
     ko(t, n, r, i);
    }
    function Co(e, t, n, r, i, a, o, s, c) {
     var u = new b(K);
     u.declaration = e;
     u.typeParameters = t;
     u.parameters = r;
     u.thisParameter = n;
     u.resolvedReturnType = i;
     u.resolvedTypePredicate = a;
     u.minArgumentCount = o;
     u.hasRestParameter = s;
     u.hasLiteralTypes = c;
     u.target = undefined;
     u.mapper = undefined;
     return u;
    }
    function Do(e) {
     return Co(e.declaration, e.typeParameters, e.thisParameter, e.parameters, undefined, undefined, e.minArgumentCount, e.hasRestParameter, e.hasLiteralTypes);
    }
    function To(t) {
     if (t.hasRestParameter) {
      var n = t.parameters.length - 1;
      var r = t.parameters[n];
      var i = xa(r);
      if (Id(i)) {
       var a = i.typeArguments || e.emptyArray;
       var o = i.target.minLength;
       var s = i.target.hasRestElement ? a.length - 1 : -1;
       var c = e.map(a, function(e, r) {
        var i = Gv(t, n + r);
        var a = r === s ? 8192 : r >= o ? 4096 : 0;
        var c = Sn(1, i, a);
        c.type = r === s ? bu(e) : e;
        return c;
       });
       return e.concatenate(t.parameters.slice(0, n), c);
      }
     }
     return t.parameters;
    }
    function Eo(t) {
     var n = Ma(t);
     var r = Es(n, 1);
     if (r.length === 0) {
      return [ Co(undefined, t.localTypeParameters, undefined, e.emptyArray, t, undefined, 0, false, false) ];
     }
     var i = Pa(t);
     var a = e.isInJavaScriptFile(i);
     var o = Vc(i);
     var s = e.length(o);
     var c = [];
     for (var u = 0, l = r; u < l.length; u++) {
      var f = l[u];
      var d = Js(f.typeParameters);
      var p = e.length(f.typeParameters);
      if (a || s >= d && s <= p) {
       var m = p ? sc(f, Ks(o, f.typeParameters, d, a)) : Do(f);
       m.typeParameters = t.localTypeParameters;
       m.resolvedReturnType = t;
       c.push(m);
      }
     }
     return c;
    }
    function No(e, t, n, r, i) {
     for (var a = 0, o = e; a < o.length; a++) {
      var s = o[a];
      if (_d(s, t, n, r, i, wf)) {
       return s;
      }
     }
    }
    function Ao(t, n, r) {
     if (n.typeParameters) {
      if (r > 0) {
       return undefined;
      }
      for (var i = 1; i < t.length; i++) {
       if (!No(t[i], n, false, false, false)) {
        return undefined;
       }
      }
      return [ n ];
     }
     var a;
     for (var i = 0; i < t.length; i++) {
      var o = i === r ? n : No(t[i], n, true, true, true);
      if (!o) {
       return undefined;
      }
      a = e.appendIfUnique(a, o);
     }
     return a;
    }
    function Fo(t, n) {
     var r = e.map(t, function(e) {
      return Es(e, n);
     });
     var i;
     for (var a = 0; a < r.length; a++) {
      for (var o = 0, s = r[a]; o < s.length; o++) {
       var c = s[o];
       if (!i || !No(i, c, false, true, true)) {
        var u = Ao(r, c, a);
        if (u) {
         var l = c;
         if (u.length > 1) {
          var f = c.thisParameter;
          if (e.forEach(u, function(e) {
           return e.thisParameter;
          })) {
           var d = Ru(e.map(u, function(e) {
            return e.thisParameter ? xa(e.thisParameter) : ee;
           }), 2);
           f = Wd(c.thisParameter, d);
          }
          l = Do(c);
          l.thisParameter = f;
          l.unionSignatures = u;
         }
         (i || (i = [])).push(l);
        }
       }
      }
     }
     return i || e.emptyArray;
    }
    function Po(e, t) {
     var n = [];
     var r = false;
     for (var i = 0, a = e; i < a.length; i++) {
      var o = a[i];
      var s = Fs(o, t);
      if (!s) {
       return undefined;
      }
      n.push(s.type);
      r = r || s.isReadonly;
     }
     return hc(Ru(n, 2), r);
    }
    function Io(e) {
     var t = Fo(e.types, 0);
     var n = Fo(e.types, 1);
     var r = Po(e.types, 0);
     var i = Po(e.types, 1);
     ai(e, C, t, n, r, i);
    }
    function Oo(e, t) {
     return !e ? t : !t ? e : Wu([ e, t ]);
    }
    function Mo(e, t) {
     return !e ? t : !t ? e : hc(Wu([ e.type, t.type ]), e.isReadonly && t.isReadonly);
    }
    function Lo(e, t) {
     return e && t && hc(Ru([ e.type, t.type ]), e.isReadonly || t.isReadonly);
    }
    function Ro(e, t, n) {
     var r = [];
     for (var i = 0; i < t.length; i++) {
      if (i === n) {
       r.push(e);
      } else if (Aa(t[i])) {
       r.push(tc(Es(t[i], 1)[0]));
      }
     }
     return Wu(r);
    }
    function Bo(t) {
     var n = e.emptyArray;
     var r = e.emptyArray;
     var i;
     var a;
     var o = t.types;
     var s = e.countWhere(o, Aa);
     var c = function(c) {
      var u = t.types[c];
      if (s === 0 || s === o.length && c === 0 || !Aa(u)) {
       var l = Es(u, 1);
       if (l.length && s > 0) {
        l = e.map(l, function(e) {
         var t = Do(e);
         t.resolvedReturnType = Ro(tc(e), o, c);
         return t;
        });
       }
       r = e.concatenate(r, l);
      }
      n = e.concatenate(n, Es(u, 0));
      i = Mo(i, Fs(u, 0));
      a = Mo(a, Fs(u, 1));
     };
     for (var u = 0; u < o.length; u++) {
      c(u);
     }
     ai(t, C, n, r, i, a);
    }
    function zo(t) {
     var n = t.symbol;
     if (t.target) {
      ai(t, C, e.emptyArray, e.emptyArray, undefined, undefined);
      var r = ao(es(t.target), t.mapper, false);
      var i = Vl(Es(t.target, 0), t.mapper);
      var a = Vl(Es(t.target, 1), t.mapper);
      var o = vf(Fs(t.target, 0), t.mapper);
      var s = vf(Fs(t.target, 1), t.mapper);
      ai(t, r, i, a, o, s);
     } else if (n.flags & 2048) {
      ai(t, C, e.emptyArray, e.emptyArray, undefined, undefined);
      var r = yo(n);
      var i = Xs(r.get("__call"));
      var a = Xs(r.get("__new"));
      var o = vc(n, 0);
      var s = vc(n, 1);
      ai(t, r, i, a, o, s);
     } else {
      var r = C;
      var o = void 0;
      if (n.exports) {
       r = jr(n);
      }
      ai(t, r, e.emptyArray, e.emptyArray, undefined, undefined);
      if (n.flags & 32) {
       var c = Ua(n);
       var u = Ma(c);
       if (u.flags & (131072 | 524288 | 2162688)) {
        r = e.createSymbolTable(ii(r));
        oo(r, rs(u));
       } else if (u === ee) {
        o = hc(ee, false);
       }
      }
      var s = n.flags & 384 ? ze : undefined;
      ai(t, r, e.emptyArray, e.emptyArray, o, s);
      if (n.flags & (16 | 8192)) {
       t.callSignatures = Xs(n);
      }
      if (n.flags & 32) {
       var c = Ua(n);
       var a = Xs(n.members.get("__constructor"));
       if (!a.length) {
        a = Eo(c);
       }
       t.constructSignatures = a;
      }
     }
    }
    function jo(t) {
     var n = Fs(t.source, 0);
     var r = Go(t.mappedType);
     var i = r & 1 ? false : true;
     var a = r & 4 ? 0 : 16777216;
     var o = n && hc(hp(n.type, t.mappedType), i && n.isReadonly);
     var s = e.createSymbolTable();
     for (var c = 0, u = rs(t.source); c < u.length; c++) {
      var l = u[c];
      var f = 2048 | (i && Sy(l) ? 8 : 0);
      var d = Sn(4 | l.flags & a, l.escapedName, f);
      d.declarations = l.declarations;
      d.nameType = l.nameType;
      d.propertyType = xa(l);
      d.mappedType = t.mappedType;
      s.set(l.escapedName, d);
     }
     ai(t, s, e.emptyArray, e.emptyArray, o, undefined);
    }
    function qo(t) {
     var n = e.createSymbolTable();
     var r;
     var i;
     ai(t, C, e.emptyArray, e.emptyArray, undefined, undefined);
     var a = Uo(t);
     var o = Jo(t);
     var s = Ko(t.target || t);
     var c = ks(Ho(t));
     var u = Go(t);
     var l = L ? 64 : 2240;
     if (Wo(t)) {
      for (var f = 0, d = rs(c); f < d.length; f++) {
       var p = d[f];
       g(Xu(p, l), undefined, p);
      }
      if (c.flags & 1 || Fs(c, 0)) {
       g(ue);
      }
      if (!L && Fs(c, 1)) {
       g(le);
      }
     } else {
      var m = o.flags & 14745600 ? ks(o) : o;
      var _ = m.flags & 1048576 ? Zu(ks(m.type)) : m;
      km(_, g);
     }
     ai(t, n, e.emptyArray, e.emptyArray, r, i);
     function g(e, o, l) {
      var f = ef(t.mapper, $l([ a ], [ e ]));
      var d = gf(s, f);
      if (e.flags & 2240) {
       var p = _o(e);
       var m = Ds(c, p);
       var _ = !!(u & 4 || !(u & 8) && m && m.flags & 16777216);
       var g = !!(u & 1 || !(u & 2) && m && Sy(m));
       var h = Sn(4 | (_ ? 16777216 : 0), p, g ? 8 : 0);
       h.type = F && _ && !Tf(ae, d) ? Ud(d) : F && !_ && m && m.flags & 16777216 ? Qp(d, 131072) : d;
       if (l) {
        h.syntheticOrigin = l;
        h.declarations = l.declarations;
       }
       h.nameType = e;
       n.set(p, h);
      } else if (e.flags & (1 | 4)) {
       r = hc(d, !!(u & 1));
      } else if (e.flags & 8) {
       i = hc(d, !!(u & 1));
      }
     }
    }
    function Uo(e) {
     return e.typeParameter || (e.typeParameter = Xa(Vr(e.declaration.typeParameter)));
    }
    function Jo(e) {
     return e.constraintType || (e.constraintType = gf(ss(Uo(e)), e.mapper || D) || re);
    }
    function Ko(e) {
     return e.templateType || (e.templateType = e.declaration.type ? gf(Xi(Ul(e.declaration.type), !!(Go(e) & 4)), e.mapper || D) : re);
    }
    function Vo(e) {
     return e.declaration.typeParameter.constraint;
    }
    function Wo(e) {
     var t = Vo(e);
     return t.kind === 177 && t.operator === 128;
    }
    function Ho(e) {
     if (!e.modifiersType) {
      if (Wo(e)) {
       e.modifiersType = gf(Ul(Vo(e).type), e.mapper || D);
      } else {
       var t = ml(e.declaration);
       var n = Jo(t);
       var r = n && n.flags & 65536 ? ss(n) : n;
       e.modifiersType = r && r.flags & 1048576 ? gf(r.type, e.mapper || D) : ke;
      }
     }
     return e.modifiersType;
    }
    function Go(e) {
     var t = e.declaration;
     return (t.readonlyToken ? t.readonlyToken.kind === 38 ? 2 : 1 : 0) | (t.questionToken ? t.questionToken.kind === 38 ? 8 : 4 : 0);
    }
    function $o(e) {
     var t = Go(e);
     return t & 8 ? -1 : t & 4 ? 1 : 0;
    }
    function Xo(e) {
     var t = $o(e);
     var n = Ho(e);
     return t || (Yo(n) ? $o(n) : 0);
    }
    function Qo(t) {
     return !!(e.getObjectFlags(t) & 32 && Go(t) & 4);
    }
    function Yo(t) {
     return !!(e.getObjectFlags(t) & 32) && ol(Jo(t));
    }
    function Zo(e) {
     if (!e.members) {
      if (e.flags & 131072) {
       if (e.objectFlags & 4) {
        wo(e);
       } else if (e.objectFlags & 3) {
        So(e);
       } else if (e.objectFlags & 2048) {
        jo(e);
       } else if (e.objectFlags & 16) {
        zo(e);
       } else if (e.objectFlags & 32) {
        qo(e);
       }
      } else if (e.flags & 262144) {
       Io(e);
      } else if (e.flags & 524288) {
       Bo(e);
      }
     }
     return e;
    }
    function es(t) {
     if (t.flags & 131072) {
      return Zo(t).properties;
     }
     return e.emptyArray;
    }
    function ts(e, t) {
     if (e.flags & 131072) {
      var n = Zo(e);
      var r = n.members.get(t);
      if (r && Xr(r)) {
       return r;
      }
     }
    }
    function ns(t) {
     if (!t.resolvedProperties) {
      var n = e.createSymbolTable();
      for (var r = 0, i = t.types; r < i.length; r++) {
       var a = i[r];
       for (var o = 0, s = rs(a); o < s.length; o++) {
        var c = s[o];
        if (!n.has(c.escapedName)) {
         var u = Cs(t, c.escapedName);
         if (u) {
          n.set(c.escapedName, u);
         }
        }
       }
       if (t.flags & 262144) {
        break;
       }
      }
      t.resolvedProperties = ii(n);
     }
     return t.resolvedProperties;
    }
    function rs(e) {
     e = ks(e);
     return e.flags & 786432 ? ns(e) : es(e);
    }
    function is(t, n) {
     return n.properties.some(function(n) {
      var r = n.name && e.getTextOfPropertyName(n.name);
      var i = r === undefined ? undefined : qi(t, r);
      if (i && _(i)) {
       var a = BS(n);
       return !!a && !Sf(a, i);
      }
      return false;
     });
    }
    function as(t) {
     var n = Ru(t);
     if (!(n.flags & 262144)) {
      return JS(n);
     }
     var r = e.createSymbolTable();
     for (var i = 0, a = t; i < a.length; i++) {
      var o = a[i];
      for (var s = 0, c = JS(o); s < c.length; s++) {
       var u = c[s].escapedName;
       if (!r.has(u)) {
        var l = Ss(n, u);
        if (l) r.set(u, l);
       }
      }
     }
     return e.arrayFrom(r.values());
    }
    function os(e) {
     return e.flags & 65536 ? ss(e) : e.flags & 2097152 ? cs(e) : e.flags & 4194304 ? fs(e) : ps(e);
    }
    function ss(e) {
     return _s(e) ? xc(e) : undefined;
    }
    function cs(e) {
     var t = ps(e.objectType) || e.objectType;
     var n = ps(e.indexType) || e.indexType;
     var r = !al(t) && !ol(n) ? dl(t, n) : undefined;
     return r && r !== re ? r : undefined;
    }
    function us(e) {
     if (!e.resolvedDefaultConstraint) {
      var t = e.root.trueType;
      var n = t.flags & 8388608 ? t.substitute : t;
      e.resolvedDefaultConstraint = Ru([ gf(n, e.combinedMapper || e.mapper), vl(e) ]);
     }
     return e.resolvedDefaultConstraint;
    }
    function ls(e) {
     if (e.root.isDistributive) {
      var t = os(ul(e.checkType));
      if (t) {
       var n = Wl(e.root.checkType, t);
       var r = mf(e, ef(n, e.mapper));
       if (!(r.flags & 32768)) {
        return r;
       }
      }
     }
     return undefined;
    }
    function fs(e) {
     return ls(e) || us(e);
    }
    function ds(t, n) {
     var r;
     var i = false;
     for (var a = 0, o = t.types; a < o.length; a++) {
      var s = o[a];
      if (s.flags & 15794176) {
       var c = os(s);
       while (c && c.flags & (65536 | 1048576 | 4194304)) {
        c = os(c);
       }
       if (c) {
        if (!(c.flags & 262144)) {
         return undefined;
        }
        r = e.append(r, c);
       }
      } else if (s.flags & 16809468) {
       i = true;
      }
     }
     if (r && (n || i)) {
      if (i) {
       for (var u = 0, l = t.types; u < l.length; u++) {
        var s = l[u];
        if (s.flags & 16809468) {
         r = e.append(r, s);
        }
       }
      }
      return Wu(r);
     }
     return undefined;
    }
    function ps(e) {
     if (e.flags & (14745600 | 786432)) {
      var t = gs(e);
      return t !== Te && t !== Ee ? t : undefined;
     }
     return e.flags & 1048576 ? xe : undefined;
    }
    function ms(e) {
     return ps(e) || e;
    }
    function _s(e) {
     return gs(e) !== Ee;
    }
    function gs(e) {
     return e.resolvedBaseConstraint || (e.resolvedBaseConstraint = xo(t(e), e));
     function t(e) {
      if (!e.immediateBaseConstraint) {
       if (!Mi(e, 4)) {
        return Ee;
       }
       var t = r(ul(e));
       if (!Bi()) {
        t = Ee;
       }
       e.immediateBaseConstraint = t || Te;
      }
      return e.immediateBaseConstraint;
     }
     function n(e) {
      var n = t(e);
      return n !== Te && n !== Ee ? n : undefined;
     }
     function r(e) {
      if (e.flags & 65536) {
       var t = xc(e);
       return e.isThisType || !t ? t : n(t);
      }
      if (e.flags & 786432) {
       var r = e.types;
       var i = [];
       for (var a = 0, o = r; a < o.length; a++) {
        var s = o[a];
        var c = n(s);
        if (c) {
         i.push(c);
        }
       }
       return e.flags & 262144 && i.length === r.length ? Ru(i) : e.flags & 524288 && i.length ? Wu(i) : undefined;
      }
      if (e.flags & 1048576) {
       return xe;
      }
      if (e.flags & 2097152) {
       var u = n(e.objectType);
       var l = n(e.indexType);
       var f = u && l ? dl(u, l) : undefined;
       return f && f !== re ? n(f) : undefined;
      }
      if (e.flags & 4194304) {
       var t = fs(e);
       return t && n(t);
      }
      if (e.flags & 8388608) {
       return n(e.substitute);
      }
      if (Yo(e)) {
       return ke;
      }
      return e;
     }
    }
    function hs(e) {
     return e.resolvedApparentType || (e.resolvedApparentType = xo(e, e, true));
    }
    function vs(t) {
     if (!t.default) {
      if (t.target) {
       var n = vs(t.target);
       t.default = n ? gf(n, t.mapper) : Te;
      } else {
       t.default = Ne;
       var r = t.symbol && e.forEach(t.symbol.declarations, function(t) {
        return e.isTypeParameterDeclaration(t) && t.default;
       });
       var i = r ? Ul(r) : Te;
       if (t.default === Ne) {
        t.default = i;
       }
      }
     } else if (t.default === Ne) {
      t.default = Ee;
     }
     return t.default;
    }
    function ys(e) {
     var t = vs(e);
     return t !== Te && t !== Ee ? t : undefined;
    }
    function bs(e) {
     return vs(e) !== Ee;
    }
    function xs(t) {
     return !!(t.symbol && e.forEach(t.symbol.declarations, function(t) {
      return e.isTypeParameterDeclaration(t) && t.default;
     }));
    }
    function ks(e) {
     var t = e.flags & 15794176 ? ps(e) || ke : e;
     return t.flags & 524288 ? hs(t) : t.flags & 68 ? Xe : t.flags & 168 ? Qe : t.flags & 272 ? Ye : t.flags & 3072 ? nu(E >= 2) : t.flags & 16777216 ? ke : t.flags & 1048576 ? xe : t;
    }
    function Ss(t, n) {
     var r;
     var i;
     var a = t.flags & 262144;
     var o = a ? 24 : 0;
     var s = a ? 0 : 16777216;
     var c = 4;
     var u = 0;
     for (var l = 0, f = t.types; l < f.length; l++) {
      var d = f[l];
      var p = ks(d);
      if (p !== re) {
       var m = Ds(p, n);
       var _ = m ? e.getDeclarationModifierFlagsFromSymbol(m) : 0;
       if (m && !(_ & o)) {
        s &= m.flags;
        r = e.appendIfUnique(r, m);
        u |= (Sy(m) ? 8 : 0) | (!(_ & 24) ? 64 : 0) | (_ & 16 ? 128 : 0) | (_ & 8 ? 256 : 0) | (_ & 32 ? 512 : 0);
        if (!th(m)) {
         c = 2;
        }
       } else if (a) {
        var g = !lo(n) && (ug(n) && Fs(p, 1) || Fs(p, 0));
        if (g) {
         u |= g.isReadonly ? 8 : 0;
         i = e.append(i, g.type);
        } else {
         u |= 16;
        }
       }
      }
     }
     if (!r) {
      return undefined;
     }
     if (r.length === 1 && !(u & 16) && !i) {
      return r[0];
     }
     var h;
     var v;
     var y;
     var b = [];
     var x = true;
     var k;
     var S = false;
     for (var w = 0, C = r; w < C.length; w++) {
      var m = C[w];
      if (!k) {
       k = m.valueDeclaration;
      } else if (m.valueDeclaration !== k) {
       S = true;
      }
      h = e.addRange(h, m.declarations);
      var p = xa(m);
      if (x) {
       v = p;
       y = m.nameType;
       x = false;
      } else {
       if (p !== v) {
        u |= 32;
       }
      }
      b.push(p);
     }
     e.addRange(b, i);
     var D = Sn(4 | s, n, c | u);
     D.containingType = t;
     if (!S && k) {
      D.valueDeclaration = k;
     }
     D.declarations = h;
     D.nameType = y;
     D.type = a ? Ru(b) : Wu(b);
     return D;
    }
    function ws(t, n) {
     var r = t.propertyCache || (t.propertyCache = e.createSymbolTable());
     var i = r.get(n);
     if (!i) {
      i = Ss(t, n);
      if (i) {
       r.set(n, i);
      }
     }
     return i;
    }
    function Cs(t, n) {
     var r = ws(t, n);
     return r && !(e.getCheckFlags(r) & 16) ? r : undefined;
    }
    function Ds(e, t) {
     e = ks(e);
     if (e.flags & 131072) {
      var n = Zo(e);
      var r = n.members.get(t);
      if (r && Xr(r)) {
       return r;
      }
      if (n === De || n.callSignatures.length || n.constructSignatures.length) {
       var i = ts(He, t);
       if (i) {
        return i;
       }
      }
      return ts(We, t);
     }
     if (e.flags & 786432) {
      return Cs(e, t);
     }
     return undefined;
    }
    function Ts(t, n) {
     if (t.flags & 917504) {
      var r = Zo(t);
      return n === 0 ? r.callSignatures : r.constructSignatures;
     }
     return e.emptyArray;
    }
    function Es(e, t) {
     return Ts(ks(e), t);
    }
    function Ns(e, t) {
     if (e.flags & 917504) {
      var n = Zo(e);
      return t === 0 ? n.stringIndexInfo : n.numberIndexInfo;
     }
    }
    function As(e, t) {
     var n = Ns(e, t);
     return n && n.type;
    }
    function Fs(e, t) {
     return Ns(ks(e), t);
    }
    function Ps(e, t) {
     return As(ks(e), t);
    }
    function Is(e, t) {
     if (Vd(e)) {
      var n = [];
      for (var r = 0, i = rs(e); r < i.length; r++) {
       var a = i[r];
       if (t === 0 || ug(a.escapedName)) {
        n.push(xa(a));
       }
      }
      if (n.length) {
       return Ru(n, 2);
      }
     }
     return undefined;
    }
    function Os(t) {
     var n;
     for (var r = 0, i = e.getEffectiveTypeParameterDeclarations(t); r < i.length; r++) {
      var a = i[r];
      n = e.appendIfUnique(n, Xa(a.symbol));
     }
     return n;
    }
    function Ms(e) {
     var t = [];
     e.forEach(function(e, n) {
      if (!ri(n)) {
       t.push(e);
      }
     });
     return t;
    }
    function Ls(t) {
     return e.isInJavaScriptFile(t) && (t.type && t.type.kind === 286 || e.getJSDocParameterTags(t).some(function(e) {
      var t = e.isBracketed, n = e.typeExpression;
      return t || !!n && n.type.kind === 286;
     }));
    }
    function Rs(t, n) {
     if (e.isExternalModuleNameRelative(t)) {
      return undefined;
     }
     var r = Bn(qe, '"' + t + '"', 512);
     return r && n ? Kr(r) : r;
    }
    function Bs(t) {
     if (e.hasQuestionToken(t) || zs(t) || Ls(t)) {
      return true;
     }
     if (t.initializer) {
      var n = Vs(t.parent);
      var r = t.parent.parameters.indexOf(t);
      e.Debug.assert(r >= 0);
      return r >= ey(n);
     }
     var i = e.getImmediatelyInvokedFunctionExpression(t.parent);
     if (i) {
      return !t.type && !t.dotDotDotToken && t.parent.parameters.indexOf(t) >= i.arguments.length;
     }
     return false;
    }
    function zs(t) {
     if (!e.isJSDocParameterTag(t)) {
      return false;
     }
     var n = t.isBracketed, r = t.typeExpression;
     return n || !!r && r.type.kind === 286;
    }
    function js(e) {
     var t = e.parameterName;
     var n = Ul(e.type);
     if (t.kind === 71) {
      return qs(t && t.escapedText, t && yb(e.parent.parameters, t), n);
     } else {
      return Us(n);
     }
    }
    function qs(e, t, n) {
     return {
      kind: 1,
      parameterName: e,
      parameterIndex: t,
      type: n
     };
    }
    function Us(e) {
     return {
      kind: 0,
      type: e
     };
    }
    function Js(e) {
     var t = 0;
     if (e) {
      for (var n = 0; n < e.length; n++) {
       if (!xs(e[n])) {
        t = n + 1;
       }
      }
     }
     return t;
    }
    function Ks(t, n, r, i) {
     var a = e.length(n);
     if (a) {
      var o = e.length(t);
      if (i || o >= r && o <= a) {
       if (!t) {
        t = [];
       }
       for (var s = o; s < a; s++) {
        t[s] = Fp(i);
       }
       for (var s = o; s < a; s++) {
        var c = $l(n, t);
        var u = ys(n[s]);
        if (i && u && Sf(u, ke)) {
         u = ee;
        }
        t[s] = u ? gf(u, c) : Fp(i);
       }
       t.length = n.length;
      }
     }
     return t;
    }
    function Vs(t) {
     var n = Ln(t);
     if (!n.resolvedSignature) {
      var r = [];
      var i = false;
      var a = 0;
      var o = void 0;
      var s = false;
      var c = e.getImmediatelyInvokedFunctionExpression(t);
      var u = e.isJSDocConstructSignature(t);
      var l = !c && e.isInJavaScriptFile(t) && e.isValueSignatureDeclaration(t) && !e.hasJSDocParameterTags(t) && !e.getJSDocType(t);
      for (var f = u ? 1 : 0; f < t.parameters.length; f++) {
       var d = t.parameters[f];
       var p = d.symbol;
       var m = e.isJSDocParameterTag(d) ? d.typeExpression && d.typeExpression.type : d.type;
       if (p && !!(p.flags & 4) && !e.isBindingPattern(d.name)) {
        var _ = qn(d, p.escapedName, 67216319, undefined, undefined, false);
        p = _;
       }
       if (f === 0 && p.escapedName === "this") {
        s = true;
        o = d.symbol;
       } else {
        r.push(p);
       }
       if (m && m.kind === 180) {
        i = true;
       }
       var g = zs(d) || d.initializer || d.questionToken || d.dotDotDotToken || c && r.length > c.arguments.length && !m || l || Ls(d);
       if (!g) {
        a = r.length;
       }
      }
      if ((t.kind === 156 || t.kind === 157) && !po(t) && (!s || !o)) {
       var h = t.kind === 156 ? 157 : 156;
       var v = e.getDeclarationOfKind(Vr(t), h);
       if (v) {
        o = da(v);
       }
      }
      var y = t.kind === 155 ? Ua(Kr(t.parent.symbol)) : undefined;
      var b = y ? y.localTypeParameters : Os(t);
      var x = Hs(t, u, y);
      var k = e.hasRestParameter(t) || e.isInJavaScriptFile(t) && Ws(t, r);
      n.resolvedSignature = Co(t, b, o, r, x, undefined, a, k, i);
     }
     return n.resolvedSignature;
    }
    function Ws(t, n) {
     if (e.isJSDocSignature(t) || !$s(t)) {
      return false;
     }
     var r = e.lastOrUndefined(t.parameters);
     var i = r ? e.getJSDocParameterTags(r) : e.getJSDocTags(t).filter(e.isJSDocParameterTag);
     var a = e.firstDefined(i, function(t) {
      return t.typeExpression && e.isJSDocVariadicType(t.typeExpression.type) ? t.typeExpression.type : undefined;
     });
     var o = Sn(3, "args", 8192);
     o.type = a ? bu(Ul(a.type)) : tt;
     if (a) {
      n.pop();
     }
     n.push(o);
     return true;
    }
    function Hs(t, n, r) {
     if (n) {
      return Ul(t.parameters[0].type);
     } else if (r) {
      return r;
     }
     var i = e.getEffectiveReturnTypeNode(t);
     if (i) {
      return Ul(i);
     }
     if (t.kind === 156 && !po(t)) {
      var a = e.getDeclarationOfKind(Vr(t), 157);
      return fa(a);
     }
     var o = Gs(t);
     if (o) {
      return o;
     }
     if (e.nodeIsMissing(t.body)) {
      return ee;
     }
    }
    function Gs(t) {
     var n = e.isInJavaScriptFile(t) ? e.getJSDocTypeTag(t) : undefined;
     var r = n && n.typeExpression && Es(Ul(n.typeExpression), 0);
     return r && r.length === 1 ? tc(r[0]) : undefined;
    }
    function $s(t) {
     var n = Ln(t);
     if (n.containsArgumentsReference === undefined) {
      if (n.flags & 8192) {
       n.containsArgumentsReference = true;
      } else {
       n.containsArgumentsReference = r(t.body);
      }
     }
     return n.containsArgumentsReference;
     function r(t) {
      if (!t) return false;
      switch (t.kind) {
      case 71:
       return t.escapedText === "arguments" && e.isExpressionNode(t);

      case 152:
      case 154:
      case 156:
      case 157:
       return t.name.kind === 147 && r(t.name);

      default:
       return !e.nodeStartsNewLexicalEnvironment(t) && !e.isPartOfTypeNode(t) && !!e.forEachChild(t, r);
      }
     }
    }
    function Xs(t) {
     if (!t) return e.emptyArray;
     var n = [];
     for (var r = 0; r < t.declarations.length; r++) {
      var i = t.declarations[r];
      if (!e.isFunctionLike(i)) continue;
      if (r > 0 && i.body) {
       var a = t.declarations[r - 1];
       if (i.parent === a.parent && i.kind === a.kind && i.pos === a.end) {
        continue;
       }
      }
      n.push(Vs(i));
     }
     return n;
    }
    function Qs(e) {
     var t = Tr(e, e);
     if (t) {
      var n = Pr(t);
      if (n) {
       return xa(n);
      }
     }
     return ee;
    }
    function Ys(e) {
     if (e.thisParameter) {
      return xa(e.thisParameter);
     }
    }
    function Zs(e) {
     return ec(e) !== undefined;
    }
    function ec(t) {
     if (!t.resolvedTypePredicate) {
      if (t.target) {
       var n = ec(t.target);
       t.resolvedTypePredicate = n ? af(n, t.mapper) : Ie;
      } else if (t.unionSignatures) {
       t.resolvedTypePredicate = Bu(t.unionSignatures) || Ie;
      } else {
       var r = t.declaration && e.getEffectiveReturnTypeNode(t.declaration);
       t.resolvedTypePredicate = r && e.isTypePredicateNode(r) ? js(r) : Ie;
      }
      e.Debug.assert(!!t.resolvedTypePredicate);
     }
     return t.resolvedTypePredicate === Ie ? undefined : t.resolvedTypePredicate;
    }
    function tc(t) {
     if (!t.resolvedReturnType) {
      if (!Mi(t, 3)) {
       return re;
      }
      var n = void 0;
      if (t.target) {
       n = gf(tc(t.target), t.mapper);
      } else if (t.unionSignatures) {
       n = Ru(e.map(t.unionSignatures, tc), 2);
      } else {
       n = fy(t.declaration);
      }
      if (!Bi()) {
       n = ee;
       if (O) {
        var r = t.declaration;
        var i = e.getNameOfDeclaration(r);
        if (i) {
         bn(i, e.Diagnostics._0_implicitly_has_return_type_any_because_it_does_not_have_a_return_type_annotation_and_is_referenced_directly_or_indirectly_in_one_of_its_return_expressions, e.declarationNameToString(i));
        } else {
         bn(r, e.Diagnostics.Function_implicitly_has_return_type_any_because_it_does_not_have_a_return_type_annotation_and_is_referenced_directly_or_indirectly_in_one_of_its_return_expressions);
        }
       }
      }
      t.resolvedReturnType = n;
     }
     return t.resolvedReturnType;
    }
    function nc(e) {
     return !e.resolvedReturnType && Li(e, 3) >= 0;
    }
    function rc(e) {
     return ic(e) || ee;
    }
    function ic(e) {
     var t = Yv(e);
     return t && Ps(t, 1);
    }
    function ac(e, t, n) {
     return oc(e, Ks(t, e.typeParameters, Js(e.typeParameters), n));
    }
    function oc(t, n) {
     var r = t.instantiations || (t.instantiations = e.createMap());
     var i = Sc(n);
     var a = r.get(i);
     if (!a) {
      r.set(i, a = sc(t, n));
     }
     return a;
    }
    function sc(e, t) {
     return of(e, cc(e, t), true);
    }
    function cc(e, t) {
     return $l(e.typeParameters, t);
    }
    function uc(e) {
     return e.typeParameters ? e.erasedSignatureCache || (e.erasedSignatureCache = lc(e)) : e;
    }
    function lc(e) {
     return of(e, Xl(e.typeParameters), true);
    }
    function fc(e) {
     return e.typeParameters ? e.canonicalSignatureCache || (e.canonicalSignatureCache = dc(e)) : e;
    }
    function dc(t) {
     return ac(t, e.map(t.typeParameters, function(e) {
      return e.target && !ss(e.target) ? e.target : e;
     }), e.isInJavaScriptFile(t.declaration));
    }
    function pc(t) {
     var n = t.typeParameters;
     if (n) {
      var r = Xl(n);
      var i = e.map(n, function(e) {
       return gf(ps(e), r) || ke;
      });
      return of(t, $l(n, i), true);
     }
     return t;
    }
    function mc(t) {
     if (!t.isolatedSignatureType) {
      var n = t.declaration.kind === 155 || t.declaration.kind === 159;
      var r = ti(16);
      r.members = C;
      r.properties = e.emptyArray;
      r.callSignatures = !n ? [ t ] : e.emptyArray;
      r.constructSignatures = n ? [ t ] : e.emptyArray;
      t.isolatedSignatureType = r;
     }
     return t.isolatedSignatureType;
    }
    function _c(e) {
     return e.members.get("__index");
    }
    function gc(t, n) {
     var r = n === 1 ? 134 : 137;
     var i = _c(t);
     if (i) {
      for (var a = 0, o = i.declarations; a < o.length; a++) {
       var s = o[a];
       var c = e.cast(s, e.isIndexSignatureDeclaration);
       if (c.parameters.length === 1) {
        var u = c.parameters[0];
        if (u.type && u.type.kind === r) {
         return c;
        }
       }
      }
     }
     return undefined;
    }
    function hc(e, t, n) {
     return {
      type: e,
      isReadonly: t,
      declaration: n
     };
    }
    function vc(t, n) {
     var r = gc(t, n);
     if (r) {
      return hc(r.type ? Ul(r.type) : ee, e.hasModifier(r, 64), r);
     }
     return undefined;
    }
    function yc(t) {
     var n = t.symbol && e.getDeclarationOfKind(t.symbol, 148);
     return n && n.constraint;
    }
    function bc(t) {
     var n;
     if (t.symbol) {
      for (var r = 0, i = t.symbol.declarations; r < i.length; r++) {
       var a = i[r];
       if (a.parent.kind === 174) {
        var o = a.parent.parent;
        if (o.kind === 162) {
         var s = o;
         var c = Lb(s);
         if (c) {
          var u = s.typeArguments.indexOf(a.parent);
          if (u < c.length) {
           var l = ss(c[u]);
           if (l) {
            var f = $l(c, Ob(s, c));
            var d = gf(l, f);
            if (d !== t) {
             n = e.append(n, d);
            }
           }
          }
         }
        } else if (o.kind === 149 && o.dotDotDotToken) {
         n = e.append(n, bu(ie));
        }
       }
      }
     }
     return n && Wu(n);
    }
    function xc(e) {
     if (!e.constraint) {
      if (e.target) {
       var t = ss(e.target);
       e.constraint = t ? gf(t, e.mapper) : Te;
      } else {
       var n = yc(e);
       e.constraint = n ? Ul(n) : bc(e) || Te;
      }
     }
     return e.constraint === Te ? undefined : e.constraint;
    }
    function kc(t) {
     return Vr(e.getDeclarationOfKind(t.symbol, 148).parent);
    }
    function Sc(e) {
     var t = "";
     if (e) {
      var n = e.length;
      var r = 0;
      while (r < n) {
       var i = e[r].id;
       var a = 1;
       while (r + a < n && e[r + a].id === i + a) {
        a++;
       }
       if (t.length) {
        t += ",";
       }
       t += i;
       if (a > 1) {
        t += ":" + a;
       }
       r += a;
      }
     }
     return t;
    }
    function wc(e, t) {
     var n = 0;
     for (var r = 0, i = e; r < i.length; r++) {
      var a = i[r];
      if (!(a.flags & t)) {
       n |= a.flags;
      }
     }
     return n & 939524096;
    }
    function Cc(e, t) {
     var n = Sc(t);
     var r = e.instantiations.get(n);
     if (!r) {
      r = ti(4, e.symbol);
      e.instantiations.set(n, r);
      r.flags |= t ? wc(t, 0) : 0;
      r.target = e;
      r.typeArguments = t;
     }
     return r;
    }
    function Dc(e) {
     var t = Yr(e.flags);
     t.symbol = e.symbol;
     t.objectFlags = e.objectFlags;
     t.target = e.target;
     t.typeArguments = e.typeArguments;
     return t;
    }
    function Tc(t) {
     return e.length(t.target.typeParameters);
    }
    function Ec(t, n, r) {
     var i = Ya(Kr(n));
     var a = i.localTypeParameters;
     if (a) {
      var o = e.length(t.typeArguments);
      var s = Js(a);
      var c = e.isInJavaScriptFile(t);
      var u = !O && c;
      if (!u && (o < s || o > a.length)) {
       var l = c && t.parent.kind !== 293;
       var f = s === a.length ? l ? e.Diagnostics.Expected_0_type_arguments_provide_these_with_an_extends_tag : e.Diagnostics.Generic_type_0_requires_1_type_argument_s : l ? e.Diagnostics.Expected_0_1_type_arguments_provide_these_with_an_extends_tag : e.Diagnostics.Generic_type_0_requires_between_1_and_2_type_arguments;
       var d = Si(i, undefined, 2);
       bn(t, f, d, s, a.length);
       if (!c) {
        return re;
       }
      }
      var p = e.concatenate(i.outerTypeParameters, Ks(r, a, s, c));
      return Cc(i, p);
     }
     return qc(t, n) ? i : re;
    }
    function Nc(t, n) {
     var r = Ya(t);
     var i = Mn(t);
     var a = i.typeParameters;
     var o = Sc(n);
     var s = i.instantiations.get(o);
     if (!s) {
      i.instantiations.set(o, s = gf(r, $l(a, Ks(n, a, Js(a), e.isInJavaScriptFile(t.valueDeclaration)))));
     }
     return s;
    }
    function Ac(t, n, r) {
     var i = Ya(n);
     var a = Mn(n).typeParameters;
     if (a) {
      var o = e.length(t.typeArguments);
      var s = Js(a);
      if (o < s || o > a.length) {
       bn(t, s === a.length ? e.Diagnostics.Generic_type_0_requires_1_type_argument_s : e.Diagnostics.Generic_type_0_requires_between_1_and_2_type_arguments, xi(n), s, a.length);
       return re;
      }
      return Nc(n, r);
     }
     return qc(t, n) ? i : re;
    }
    function Fc(t) {
     switch (t.kind) {
     case 162:
      return t.typeName;

     case 209:
      var n = t.expression;
      if (e.isEntityNameExpression(n)) {
       return n;
      }
     }
     return undefined;
    }
    function Pc(e, t) {
     if (!e) {
      return Y;
     }
     return wr(e, t) || Y;
    }
    function Ic(e, t) {
     var n = Vc(e);
     if (t === Y) {
      return re;
     }
     var r = Mc(e, t, n);
     if (r) {
      return r;
     }
     var i = Za(t);
     if (i) {
      return qc(e, t) ? i.flags & 65536 ? zc(i, e) : i : re;
     }
     if (!(t.flags & 67216319 && jc(e))) {
      return re;
     }
     var a = Oc(e, t, n);
     if (a) {
      return a;
     }
     Pc(Fc(e), 67901928);
     return xa(t);
    }
    function Oc(e, t, n) {
     var r = Fv(t);
     var i = xa(t);
     var a = i.symbol && i.symbol !== t && !Ov(i) && Mc(e, i.symbol, n);
     if (a || r) {
      return a && r ? Wu([ r, a ]) : a || r;
     }
    }
    function Mc(t, n, r) {
     if (n.flags & (32 | 64)) {
      if (n.valueDeclaration && e.isBinaryExpression(n.valueDeclaration.parent)) {
       var i = Oc(t, n, r);
       if (i) {
        return i;
       }
      }
      return Ec(t, n, r);
     }
     if (n.flags & 524288) {
      return Ac(t, n, r);
     }
     if (n.flags & 16 && jc(t) && (n.members || e.getJSDocClassTag(n.valueDeclaration))) {
      return Iv(n);
     }
    }
    function Lc(e, t) {
     var n = Yr(8388608);
     n.typeVariable = e;
     n.substitute = t;
     return n;
    }
    function Rc(e) {
     return e.kind === 168 && e.elementTypes.length === 1;
    }
    function Bc(e, t, n) {
     return Rc(t) && Rc(n) ? Bc(e, t.elementTypes[0], n.elementTypes[0]) : _l(Ul(t)) === e ? Ul(n) : undefined;
    }
    function zc(t, n) {
     var r;
     while (n && !e.isStatement(n) && n.kind !== 289) {
      var i = n.parent;
      if (i.kind === 173 && n === i.trueType) {
       var a = Bc(t, i.checkType, i.extendsType);
       if (a) {
        r = e.append(r, a);
       }
      }
      n = i;
     }
     return r ? Lc(t, Wu(e.append(r, t))) : t;
    }
    function jc(e) {
     return !!(e.flags & 2097152) && e.kind === 162;
    }
    function qc(t, n) {
     if (t.typeArguments) {
      bn(t, e.Diagnostics.Type_0_is_not_generic, n ? xi(n) : t.typeName ? e.declarationNameToString(t.typeName) : "(anonymous)");
      return false;
     }
     return true;
    }
    function Uc(t) {
     if (e.isIdentifier(t.typeName)) {
      var n = t.typeArguments;
      switch (t.typeName.escapedText) {
      case "String":
       qc(t);
       return ue;

      case "Number":
       qc(t);
       return le;

      case "Boolean":
       qc(t);
       return pe;

      case "Void":
       qc(t);
       return _e;

      case "Undefined":
       qc(t);
       return ae;

      case "Null":
       qc(t);
       return se;

      case "Function":
      case "function":
       qc(t);
       return He;

      case "Array":
      case "array":
       return !n || !n.length ? tt : undefined;

      case "Promise":
      case "promise":
       return !n || !n.length ? uy(ee) : undefined;

      case "Object":
       if (n && n.length === 2) {
        if (e.isJSDocIndexSignature(t)) {
         var r = Ul(n[0]);
         var i = Ul(n[1]);
         var a = hc(i, false);
         return oi(undefined, C, e.emptyArray, e.emptyArray, r === ue ? a : undefined, r === le ? a : undefined);
        }
        return ee;
       }
       qc(t);
       return ee;
      }
     }
    }
    function Jc(e) {
     var t = Ul(e.type);
     return F ? qd(t, 16384) : t;
    }
    function Kc(e) {
     var t = Ln(e);
     if (!t.resolvedType) {
      var n = void 0;
      var r = void 0;
      var i = 67901928;
      if (jc(e)) {
       r = Uc(e);
       i |= 67216319;
      }
      if (!r) {
       n = Pc(Fc(e), i);
       r = Ic(e, n);
      }
      t.resolvedSymbol = n;
      t.resolvedType = r;
     }
     return t.resolvedType;
    }
    function Vc(t) {
     return e.map(t.typeArguments, Ul);
    }
    function Wc(e) {
     var t = Ln(e);
     if (!t.resolvedType) {
      t.resolvedType = Ml(tp(pb(e.exprName)));
     }
     return t.resolvedType;
    }
    function Hc(t, n) {
     function r(e) {
      var t = e.declarations;
      for (var n = 0, r = t; n < r.length; n++) {
       var i = r[n];
       switch (i.kind) {
       case 238:
       case 239:
       case 241:
        return i;
       }
      }
     }
     if (!t) {
      return n ? Ce : ke;
     }
     var i = Ya(t);
     if (!(i.flags & 131072)) {
      bn(r(t), e.Diagnostics.Global_type_0_must_be_a_class_or_interface_type, e.symbolName(t));
      return n ? Ce : ke;
     }
     if (e.length(i.typeParameters) !== n) {
      bn(r(t), e.Diagnostics.Global_type_0_must_have_1_type_parameter_s, e.symbolName(t), n);
      return n ? Ce : ke;
     }
     return i;
    }
    function Gc(t, n) {
     return Xc(t, 67216319, n ? e.Diagnostics.Cannot_find_global_value_0 : undefined);
    }
    function $c(t, n) {
     return Xc(t, 67901928, n ? e.Diagnostics.Cannot_find_global_type_0 : undefined);
    }
    function Xc(e, t, n) {
     return qn(undefined, e, t, n, e, false);
    }
    function Qc(e, t, n) {
     var r = $c(e, n);
     return r || n ? Hc(r, t) : undefined;
    }
    function Yc() {
     return st || (st = Qc("TypedPropertyDescriptor", 1, true)) || Ce;
    }
    function Zc() {
     return ht || (ht = Qc("TemplateStringsArray", 0, true)) || ke;
    }
    function eu() {
     return vt || (vt = Qc("ImportMeta", 0, true)) || ke;
    }
    function tu(e) {
     return at || (at = Gc("Symbol", e));
    }
    function nu(e) {
     return ot || (ot = Qc("Symbol", 0, e)) || ke;
    }
    function ru(e) {
     return ct || (ct = Qc("Promise", 1, e)) || Ce;
    }
    function iu(e) {
     return ut || (ut = Gc("Promise", e));
    }
    function au(e) {
     return lt || (lt = Qc("PromiseConstructorLike", 0, e)) || ke;
    }
    function ou(e) {
     return mt || (mt = Qc("AsyncIterable", 1, e)) || Ce;
    }
    function su(e) {
     return _t || (_t = Qc("AsyncIterator", 1, e)) || Ce;
    }
    function cu(e) {
     return gt || (gt = Qc("AsyncIterableIterator", 1, e)) || Ce;
    }
    function uu(e) {
     return ft || (ft = Qc("Iterable", 1, e)) || Ce;
    }
    function lu(e) {
     return dt || (dt = Qc("Iterator", 1, e)) || Ce;
    }
    function fu(e) {
     return pt || (pt = Qc("IterableIterator", 1, e)) || Ce;
    }
    function du(e, t) {
     if (t === void 0) {
      t = 0;
     }
     var n = Xc(e, 67901928, undefined);
     return n && Hc(n, t);
    }
    function pu() {
     return yt || (yt = Xc("Extract", 524288, e.Diagnostics.Cannot_find_global_type_0));
    }
    function mu(e, t) {
     return e !== Ce ? Cc(e, t) : ke;
    }
    function _u(e) {
     return mu(Yc(), [ e ]);
    }
    function gu(e) {
     return mu(ou(true), [ e ]);
    }
    function hu(e) {
     return mu(cu(true), [ e ]);
    }
    function vu(e) {
     return mu(uu(true), [ e ]);
    }
    function yu(e) {
     return mu(fu(true), [ e ]);
    }
    function bu(e) {
     return mu(Ge, [ e ]);
    }
    function xu(e) {
     var t = Ln(e);
     if (!t.resolvedType) {
      t.resolvedType = bu(Ul(e.elementType));
     }
     return t.resolvedType;
    }
    function ku(t, n, r, i) {
     var a;
     var o = [];
     var s = r ? t - 1 : t;
     if (t) {
      a = new Array(t);
      for (var c = 0; c < t; c++) {
       var u = a[c] = Yr(65536);
       if (c < s) {
        var l = Sn(4 | (c >= n ? 16777216 : 0), "" + c);
        l.type = u;
        o.push(l);
       }
      }
     }
     var f = [];
     for (var c = n; c <= s; c++) f.push(Ll(c));
     var d = Sn(4, "length");
     d.type = r ? le : Ru(f);
     o.push(d);
     var p = ti(8 | 4);
     p.typeParameters = a;
     p.outerTypeParameters = undefined;
     p.localTypeParameters = a;
     p.instantiations = e.createMap();
     p.instantiations.set(Sc(p.typeParameters), p);
     p.target = p;
     p.typeArguments = p.typeParameters;
     p.thisType = Yr(65536);
     p.thisType.isThisType = true;
     p.thisType.constraint = p;
     p.declaredProperties = o;
     p.declaredCallSignatures = e.emptyArray;
     p.declaredConstructSignatures = e.emptyArray;
     p.declaredStringIndexInfo = undefined;
     p.declaredNumberIndexInfo = undefined;
     p.minLength = n;
     p.hasRestElement = r;
     p.associatedNames = i;
     return p;
    }
    function Su(e, t, n, r) {
     var i = e + (n ? "+" : ",") + t + (r && r.length ? "," + r.join(",") : "");
     var a = V.get(i);
     if (!a) {
      V.set(i, a = ku(e, t, n, r));
     }
     return a;
    }
    function wu(e, t, n, r) {
     if (t === void 0) {
      t = e.length;
     }
     if (n === void 0) {
      n = false;
     }
     var i = e.length;
     if (i === 1 && n) {
      return bu(e[0]);
     }
     var a = Su(i, t, i > 0 && n, r);
     return e.length ? Cc(a, e) : a;
    }
    function Cu(t) {
     var n = Ln(t);
     if (!n.resolvedType) {
      var r = e.lastOrUndefined(t.elementTypes);
      var i = r && r.kind === 170 ? r : undefined;
      var a = e.findLastIndex(t.elementTypes, function(e) {
       return e.kind !== 169 && e !== i;
      }) + 1;
      var o = e.map(t.elementTypes, function(e) {
       var t = Ul(e);
       return e === i && Ps(t, 1) || t;
      });
      n.resolvedType = wu(o, a, !!i);
     }
     return n.resolvedType;
    }
    function Du(e) {
     var t = Ul(e.type);
     return F ? Ud(t) : t;
    }
    function Tu(e) {
     return e.id;
    }
    function Eu(t, n) {
     return e.binarySearch(t, n, Tu, e.compareValues) >= 0;
    }
    function Nu(e) {
     var t = 0;
     for (var n = 0, r = e.types; n < r.length; n++) {
      var i = r[n];
      if (i.flags & 27072 && t & 27072) {
       return true;
      }
      t |= i.flags;
      if (t & 24576 && t & (131072 | 16777216) || t & 16777216 && t & (16809468 & ~16777216) || t & 68 && t & (16809468 & ~68) || t & 168 && t & (16809468 & ~168) || t & 3072 && t & (16809468 & ~3072) || t & 12288 && t & (16809468 & ~12288)) {
       return true;
      }
     }
     return false;
    }
    function Au(t, n, r) {
     var i = r.flags;
     if (i & 262144) {
      return Fu(t, n, r.types);
     }
     if (!(i & 32768 || i & 524288 && Nu(r))) {
      n |= i & ~939524096;
      if (i & 3) {
       if (r === ne) n |= 268435456;
      } else if (!F && i & 24576) {
       if (!(i & 134217728)) n |= 134217728;
      } else {
       var a = t.length;
       var o = a && r.id > t[a - 1].id ? ~a : e.binarySearch(t, r, Tu, e.compareValues);
       if (o < 0) {
        if (!(i & 131072 && r.objectFlags & 16 && r.symbol && r.symbol.flags & (16 | 8192) && Pu(t, r))) {
         t.splice(~o, 0, r);
        }
       }
      }
     }
     return n;
    }
    function Fu(e, t, n) {
     for (var r = 0, i = n; r < i.length; r++) {
      var a = i[r];
      t = Au(e, t, a);
     }
     return t;
    }
    function Pu(e, t) {
     for (var n = 0, r = e; n < r.length; n++) {
      var i = r[n];
      if (Sf(i, t)) {
       return true;
      }
     }
     return false;
    }
    function Iu(t, n) {
     for (var r = 0, i = n; r < i.length; r++) {
      var a = i[r];
      if (t !== a && Df(t, a) && (!(e.getObjectFlags(Sa(t)) & 1) || !(e.getObjectFlags(Sa(a)) & 1) || Ef(t, a))) {
       return true;
      }
     }
     return false;
    }
    function Ou(e) {
     var t = e[0];
     if (t.flags & 512) {
      var n = Wr(t.symbol);
      for (var r = 1; r < e.length; r++) {
       var i = e[r];
       if (!(i.flags & 512) || n !== Wr(i.symbol)) {
        return false;
       }
      }
      return true;
     }
     return false;
    }
    function Mu(t) {
     if (t.length === 0 || Ou(t)) {
      return;
     }
     var n = t.length;
     while (n > 0) {
      n--;
      if (Iu(t[n], t)) {
       e.orderedRemoveItemAt(t, n);
      }
     }
    }
    function Lu(t, n) {
     var r = t.length;
     while (r > 0) {
      r--;
      var i = t[r];
      var a = i.flags & 64 && n & 4 || i.flags & 128 && n & 8 || i.flags & 2048 && n & 1024 || i.flags & 192 && i.flags & 33554432 && Eu(t, i.regularType);
      if (a) {
       e.orderedRemoveItemAt(t, r);
      }
     }
    }
    function Ru(e, t, n, r) {
     if (t === void 0) {
      t = 1;
     }
     if (e.length === 0) {
      return ge;
     }
     if (e.length === 1) {
      return e[0];
     }
     var i = [];
     var a = Fu(i, 0, e);
     if (a & 3) {
      return a & 1 ? a & 268435456 ? ne : ee : ie;
     }
     switch (t) {
     case 1:
      if (a & 2240) {
       Lu(i, a);
      }
      break;

     case 2:
      Mu(i);
      break;
     }
     if (i.length === 0) {
      return a & 16384 ? a & 134217728 ? se : ce : a & 8192 ? a & 134217728 ? ae : oe : ge;
     }
     return ju(i, a & 16749629 ? 0 : 67108864, n, r);
    }
    function Bu(t) {
     var n;
     var r = [];
     for (var i = 0, a = t; i < a.length; i++) {
      var o = a[i];
      var s = ec(o);
      if (!s) {
       continue;
      }
      if (n) {
       if (!zu(n, s)) {
        return undefined;
       }
      } else {
       n = s;
      }
      r.push(s.type);
     }
     if (!n) {
      return undefined;
     }
     var c = Ru(r);
     return e.isIdentifierTypePredicate(n) ? qs(n.parameterName, n.parameterIndex, c) : Us(c);
    }
    function zu(t, n) {
     return e.isIdentifierTypePredicate(t) ? e.isIdentifierTypePredicate(n) && t.parameterIndex === n.parameterIndex : !e.isIdentifierTypePredicate(n);
    }
    function ju(e, t, n, r) {
     if (e.length === 0) {
      return ge;
     }
     if (e.length === 1) {
      return e[0];
     }
     var i = Sc(e);
     var a = W.get(i);
     if (!a) {
      var o = wc(e, 24576);
      a = Yr(262144 | o | t);
      W.set(i, a);
      a.types = e;
      a.aliasSymbol = n;
      a.aliasTypeArguments = r;
     }
     return a;
    }
    function qu(t) {
     var n = Ln(t);
     if (!n.resolvedType) {
      var r = Tl(t);
      n.resolvedType = Ru(e.map(t.types, Ul), 1, r, El(r));
     }
     return n.resolvedType;
    }
    function Uu(t, n, r) {
     var i = r.flags;
     if (i & 524288) {
      return Ju(t, n, r.types);
     }
     if (e.getObjectFlags(r) & 16 && Hf(r)) {
      n |= 536870912;
     } else {
      n |= i & ~939524096;
      if (i & 3) {
       if (r === ne) n |= 268435456;
      } else if ((F || !(i & 24576)) && !e.contains(t, r) && !(i & 131072 && r.objectFlags & 16 && r.symbol && r.symbol.flags & (16 | 8192) && Pu(t, r))) {
       t.push(r);
      }
     }
     return n;
    }
    function Ju(e, t, n) {
     for (var r = 0, i = n; r < i.length; r++) {
      var a = i[r];
      t = Uu(e, t, Ml(a));
     }
     return t;
    }
    function Ku(t, n) {
     var r = t.length;
     while (r > 0) {
      r--;
      var i = t[r];
      var a = i.flags & 4 && n & 64 || i.flags & 8 && n & 128 || i.flags & 1024 && n & 2048;
      if (a) {
       e.orderedRemoveItemAt(t, r);
      }
     }
    }
    function Vu(t) {
     var n = e.findIndex(t, function(e) {
      return (e.flags & 67108864) !== 0;
     });
     var r = t[n];
     var i = r.types;
     var a = t.length - 1;
     var o = function() {
      var n = t[a];
      if (n.flags & 67108864) {
       i = e.filter(i, function(e) {
        return Eu(n.types, e);
       });
       e.orderedRemoveItemAt(t, a);
      }
      a--;
     };
     while (a > n) {
      o();
     }
     if (i === r.types) {
      return false;
     }
     t[n] = ju(i, r.flags & 67108864);
     return true;
    }
    function Wu(t, n, r) {
     var i = [];
     var a = Ju(i, 0, t);
     if (a & 32768) {
      return ge;
     }
     if (a & 1) {
      return a & 268435456 ? ne : ee;
     }
     if (!F && a & 24576) {
      return a & 8192 ? ae : se;
     }
     if (a & 4 && a & 64 || a & 8 && a & 128 || a & 1024 && a & 2048) {
      Ku(i, a);
     }
     if (a & 536870912 && !(a & 131072)) {
      i.push(ke);
     }
     if (i.length === 0) {
      return ie;
     }
     if (i.length === 1) {
      return i[0];
     }
     if (a & 262144) {
      if (a & 67108864 && Vu(i)) {
       return Wu(i, n, r);
      }
      var o = e.findIndex(i, function(e) {
       return (e.flags & 262144) !== 0;
      });
      var s = i[o];
      return Ru(e.map(s.types, function(t) {
       return Wu(e.replaceElement(i, o, t));
      }), 1, n, r);
     }
     var c = Sc(i);
     var u = H.get(c);
     if (!u) {
      var l = wc(i, 24576);
      u = Yr(524288 | l);
      H.set(c, u);
      u.types = i;
      u.aliasSymbol = n;
      u.aliasTypeArguments = r;
     }
     return u;
    }
    function Hu(t) {
     var n = Ln(t);
     if (!n.resolvedType) {
      var r = Tl(t);
      n.resolvedType = Wu(e.map(t.types, Ul), r, El(r));
     }
     return n.resolvedType;
    }
    function Gu(e, t) {
     var n = Yr(1048576);
     n.type = e;
     n.stringsOnly = t;
     return n;
    }
    function $u(e, t) {
     return t ? e.resolvedStringIndexType || (e.resolvedStringIndexType = Gu(e, true)) : e.resolvedIndexType || (e.resolvedIndexType = Gu(e, false));
    }
    function Xu(t, n) {
     if (!(e.getDeclarationModifierFlagsFromSymbol(t) & 24)) {
      var r = bo(t).nameType;
      if (!r && !e.isKnownSymbol(t)) {
       var i = t.valueDeclaration && e.getNameOfDeclaration(t.valueDeclaration);
       r = i && e.isNumericLiteral(i) ? Ll(+i.text) : i && i.kind === 147 && e.isNumericLiteral(i.expression) ? Ll(+i.expression.text) : Ll(e.symbolName(t));
      }
      if (r && r.flags & n) {
       return r;
      }
     }
     return ge;
    }
    function Qu(t, n) {
     return Ru(e.map(rs(t), function(e) {
      return Xu(e, n);
     }));
    }
    function Yu(e) {
     var t = Fs(e, 1);
     return t !== ze ? t : undefined;
    }
    function Zu(t, n) {
     if (n === void 0) {
      n = L;
     }
     return t.flags & 262144 ? Wu(e.map(t.types, function(e) {
      return Zu(e, n);
     })) : t.flags & 524288 ? Ru(e.map(t.types, function(e) {
      return Zu(e, n);
     })) : Iy(t, 14745600) ? $u(t, n) : e.getObjectFlags(t) & 32 ? Jo(t) : t === ne ? ne : t.flags & 1 ? xe : n ? Fs(t, 0) ? ue : Qu(t, 64) : Fs(t, 0) ? Ru([ ue, le, Qu(t, 2048) ]) : Yu(t) ? Ru([ le, Qu(t, 64 | 2048) ]) : Qu(t, 2240);
    }
    function el(e) {
     if (L) {
      return e;
     }
     var t = pu();
     return t ? Nc(t, [ e, ue ]) : ue;
    }
    function tl(e) {
     var t = el(Zu(e));
     return t.flags & 32768 ? ue : t;
    }
    function nl(t) {
     var n = Ln(t);
     if (!n.resolvedType) {
      switch (t.operator) {
      case 128:
       n.resolvedType = Zu(Ul(t.type));
       break;

      case 141:
       n.resolvedType = t.type.kind === 138 ? zl(e.walkUpParenthesizedTypes(t.parent)) : re;
       break;
      }
     }
     return n.resolvedType;
    }
    function rl(e, t) {
     var n = Yr(2097152);
     n.objectType = e;
     n.indexType = t;
     return n;
    }
    function il(t, n, r, i) {
     var a = r && r.kind === 188 ? r : undefined;
     var o = co(n) ? _o(n) : a && Ph(a.argumentExpression, n, false) ? e.getPropertyNameForKnownSymbolName(e.idText(a.argumentExpression.name)) : undefined;
     if (o !== undefined) {
      var s = Ds(t, o);
      if (s) {
       if (a) {
        kh(s, a, a.expression.kind === 99);
        if (e.isAssignmentTarget(a) && (wy(a, s) || Cy(a))) {
         bn(a.argumentExpression, e.Diagnostics.Cannot_assign_to_0_because_it_is_a_constant_or_a_read_only_property, xi(s));
         return re;
        }
        if (i) {
         Ln(r).resolvedSymbol = s;
        }
       }
       return xa(s);
      }
      if (Id(t)) {
       var c = Od(t);
       if (c && ug(o) && +o >= 0) {
        return c;
       }
      }
     }
     if (!(n.flags & 24576) && Oy(n, 68 | 168 | 3072)) {
      if (Ui(t)) {
       return t;
      }
      var u = Oy(n, 168) && Fs(t, 1) || Fs(t, 0) || undefined;
      if (u) {
       if (r && !Oy(n, 4 | 8)) {
        var l = r.kind === 188 ? r.argumentExpression : r.indexType;
        bn(l, e.Diagnostics.Type_0_cannot_be_used_as_an_index_type, Si(n));
       } else if (a && u.isReadonly && (e.isAssignmentTarget(a) || e.isDeleteTarget(a))) {
        bn(a, e.Diagnostics.Index_signature_in_type_0_only_permits_reading, Si(t));
       }
       return u.type;
      }
      if (n.flags & 32768) {
       return ge;
      }
      if (a && !Ly(t)) {
       if (O && !T.suppressImplicitAnyIndexErrors) {
        if (Ps(t, 1)) {
         bn(a.argumentExpression, e.Diagnostics.Element_implicitly_has_an_any_type_because_index_expression_is_not_of_type_number);
        } else {
         var f = void 0;
         if (o !== undefined && (f = gh(o, t))) {
          if (f !== undefined) {
           bn(a.argumentExpression, e.Diagnostics.Property_0_does_not_exist_on_type_1_Did_you_mean_2, o, Si(t), f);
          }
         } else {
          bn(a, e.Diagnostics.Element_implicitly_has_an_any_type_because_type_0_has_no_index_signature, Si(t));
         }
        }
       }
       return ee;
      }
     }
     if (r) {
      var l = r.kind === 188 ? r.argumentExpression : r.indexType;
      if (n.flags & (64 | 128)) {
       bn(l, e.Diagnostics.Property_0_does_not_exist_on_type_1, "" + n.value, Si(t));
      } else if (n.flags & (4 | 8)) {
       bn(l, e.Diagnostics.Type_0_has_no_matching_index_signature_for_type_1, Si(t), Si(n));
      } else {
       bn(l, e.Diagnostics.Type_0_cannot_be_used_as_an_index_type, Si(n));
      }
     }
     return re;
    }
    function al(e) {
     return Iy(e, 14745600 | 134217728);
    }
    function ol(e) {
     return Iy(e, 14745600 | 1048576);
    }
    function sl(e) {
     if (e.flags & 131072 && !Yo(e)) {
      var t = Zo(e);
      return t.properties.length === 0 && t.callSignatures.length === 0 && t.constructSignatures.length === 0 && !!t.stringIndexInfo && !t.numberIndexInfo;
     }
     return false;
    }
    function cl(t) {
     return !!(e.getObjectFlags(t) & 32) && Ko(t) === ge;
    }
    function ul(e) {
     return e.flags & 2097152 ? ll(e) : e;
    }
    function ll(t) {
     if (t.simplified) {
      return t.simplified === Ee ? t : t.simplified;
     }
     t.simplified = Ee;
     var n = ul(t.objectType);
     if (n.flags & 524288 && al(n)) {
      if (e.some(n.types, sl)) {
       var r = [];
       var i = [];
       for (var a = 0, o = n.types; a < o.length; a++) {
        var s = o[a];
        if (sl(s)) {
         i.push(Ps(s, 0));
        } else {
         r.push(s);
        }
       }
       return t.simplified = Ru([ ul(dl(Wu(r), t.indexType)), Wu(i) ]);
      }
      if (e.some(n.types, cl)) {
       var c = e.filter(n.types, function(e) {
        return !cl(e);
       });
       return t.simplified = ul(dl(Wu(c), t.indexType));
      }
     }
     if (Yo(n)) {
      return t.simplified = fl(n, t);
     }
     if (n.flags & 65536) {
      var u = ss(n);
      if (u && Yo(u)) {
       return t.simplified = fl(u, t);
      }
     }
     return t.simplified = t;
    }
    function fl(e, t) {
     var n = $l([ Uo(e) ], [ t.indexType ]);
     var r = ef(e.mapper, n);
     return gf(Ko(e), r);
    }
    function dl(e, t, n) {
     if (e === ne || t === ne) {
      return ne;
     }
     if (ol(t) || !(n && n.kind === 188) && al(e)) {
      if (e.flags & 3) {
       return e;
      }
      var r = e.id + "," + t.id;
      var i = $.get(r);
      if (!i) {
       $.set(r, i = rl(e, t));
      }
      return i;
     }
     var a = ks(e);
     if (t.flags & 262144 && !(t.flags & 16)) {
      var o = [];
      for (var s = 0, c = t.types; s < c.length; s++) {
       var u = c[s];
       var l = il(a, u, n, false);
       if (l === re) {
        return re;
       }
       o.push(l);
      }
      return Ru(o);
     }
     return il(a, t, n, true);
    }
    function pl(e) {
     var t = Ln(e);
     if (!t.resolvedType) {
      var n = Ul(e.objectType);
      var r = Ul(e.indexType);
      var i = dl(n, r, e);
      t.resolvedType = i.flags & 2097152 && i.objectType === n && i.indexType === r ? zc(i, e) : i;
     }
     return t.resolvedType;
    }
    function ml(e) {
     var t = Ln(e);
     if (!t.resolvedType) {
      var n = ti(32, e.symbol);
      n.declaration = e;
      n.aliasSymbol = Tl(e);
      n.aliasTypeArguments = El(n.aliasSymbol);
      t.resolvedType = n;
      Jo(n);
     }
     return t.resolvedType;
    }
    function _l(e) {
     return e.flags & 8388608 ? e.typeVariable : e;
    }
    function gl(e, t) {
     var n = gf(e.checkType, t);
     var r = gf(e.extendsType, t);
     if (n === ne || r === ne) {
      return ne;
     }
     var i = e.isDistributive && Iy(n, 15794176);
     var a;
     if (e.inferTypeParameters) {
      var o = sp(e.inferTypeParameters, undefined, 0);
      if (!i) {
       kp(o.inferences, n, r, 32 | 64);
      }
      a = ef(t, o);
     }
     if (!i) {
      if (r.flags & 3) {
       return gf(e.trueType, t);
      }
      if (n.flags & 1) {
       return Ru([ gf(e.trueType, a || t), gf(e.falseType, t) ]);
      }
      var s = a ? gf(e.extendsType, a) : r;
      if (!Tf(hf(n), hf(s))) {
       return gf(e.falseType, t);
      }
      if (Yf(n, s, nn, undefined)) {
       return gf(e.trueType, a || t);
      }
     }
     var c = _l(n);
     var u = Yr(4194304);
     u.root = e;
     u.checkType = c;
     u.extendsType = r;
     u.mapper = t;
     u.combinedMapper = a;
     u.aliasSymbol = e.aliasSymbol;
     u.aliasTypeArguments = Kl(e.aliasTypeArguments, t);
     return u;
    }
    function hl(e) {
     return e.resolvedTrueType || (e.resolvedTrueType = gf(e.root.trueType, e.mapper));
    }
    function vl(e) {
     return e.resolvedFalseType || (e.resolvedFalseType = gf(e.root.falseType, e.mapper));
    }
    function yl(t) {
     var n;
     if (t.locals) {
      t.locals.forEach(function(t) {
       if (t.flags & 262144) {
        n = e.append(n, Ya(t));
       }
      });
     }
     return n;
    }
    function bl(e, t) {
     if (lf(e, t)) {
      return true;
     }
     while (t) {
      if (t.kind === 173) {
       if (lf(e, t.extendsType)) {
        return true;
       }
      }
      t = t.parent;
     }
     return false;
    }
    function xl(t) {
     var n = Ln(t);
     if (!n.resolvedType) {
      var r = Ul(t.checkType);
      var i = Tl(t);
      var a = El(i);
      var o = Da(t, true);
      var s = a ? o : e.filter(o, function(e) {
       return bl(e, t);
      });
      var c = {
       node: t,
       checkType: r,
       extendsType: Ul(t.extendsType),
       trueType: Ul(t.trueType),
       falseType: Ul(t.falseType),
       isDistributive: !!(r.flags & 65536),
       inferTypeParameters: yl(t),
       outerTypeParameters: s,
       instantiations: undefined,
       aliasSymbol: i,
       aliasTypeArguments: a
      };
      n.resolvedType = gl(c, undefined);
      if (s) {
       c.instantiations = e.createMap();
       c.instantiations.set(Sc(s), n.resolvedType);
      }
     }
     return n.resolvedType;
    }
    function kl(e) {
     var t = Ln(e);
     if (!t.resolvedType) {
      t.resolvedType = Xa(Vr(e.typeParameter));
     }
     return t.resolvedType;
    }
    function Sl(t) {
     if (e.isIdentifier(t)) {
      return [ t ];
     } else {
      return e.append(Sl(t.left), t.right);
     }
    }
    function wl(t) {
     var n = Ln(t);
     if (!n.resolvedType) {
      if (t.isTypeOf && t.typeArguments) {
       bn(t, e.Diagnostics.Type_arguments_cannot_be_used_here);
       n.resolvedSymbol = Y;
       return n.resolvedType = re;
      }
      if (!e.isLiteralImportTypeNode(t)) {
       bn(t.argument, e.Diagnostics.String_literal_expected);
       n.resolvedSymbol = Y;
       return n.resolvedType = re;
      }
      var r = t.isTypeOf ? 67216319 : 67901928;
      var i = Tr(t, t.argument.literal);
      if (!i) {
       n.resolvedSymbol = Y;
       return n.resolvedType = re;
      }
      var a = Pr(i, false);
      if (!e.nodeIsMissing(t.qualifier)) {
       var o = Sl(t.qualifier);
       var s = a;
       var c = void 0;
       while (c = o.shift()) {
        var u = o.length ? 1920 : r;
        var l = Bn(jr(Kr(vr(s))), c.escapedText, u);
        if (!l) {
         bn(c, e.Diagnostics.Namespace_0_has_no_exported_member_1, Sr(s), e.declarationNameToString(c));
         return n.resolvedType = re;
        }
        Ln(c).resolvedSymbol = l;
        Ln(c.parent).resolvedSymbol = l;
        s = l;
       }
       Cl(t, n, s, r);
      } else {
       if (a.flags & r) {
        Cl(t, n, a, r);
       } else {
        var f = r === 67216319 ? e.Diagnostics.Module_0_does_not_refer_to_a_value_but_is_used_as_a_value_here : e.Diagnostics.Module_0_does_not_refer_to_a_type_but_is_used_as_a_type_here_Did_you_mean_typeof_import_0;
        bn(t, f, t.argument.literal.text);
        n.resolvedSymbol = Y;
        n.resolvedType = re;
       }
      }
     }
     return n.resolvedType;
    }
    function Cl(e, t, n, r) {
     var i = vr(n);
     t.resolvedSymbol = i;
     if (r === 67216319) {
      return t.resolvedType = xa(n);
     } else {
      return t.resolvedType = Ic(e, i);
     }
    }
    function Dl(t) {
     var n = Ln(t);
     if (!n.resolvedType) {
      var r = Tl(t);
      if (yo(t.symbol).size === 0 && !r) {
       n.resolvedType = we;
      } else {
       var i = ti(16, t.symbol);
       i.aliasSymbol = r;
       i.aliasTypeArguments = El(r);
       if (e.isJSDocTypeLiteral(t) && t.isArrayType) {
        i = bu(i);
       }
       n.resolvedType = i;
      }
     }
     return n.resolvedType;
    }
    function Tl(t) {
     return e.isTypeAlias(t.parent) ? Vr(t.parent) : undefined;
    }
    function El(e) {
     return e ? Ea(e) : undefined;
    }
    function Nl(t, n, r, i, a) {
     if (t.flags & 1 || n.flags & 1) {
      return ee;
     }
     if (t.flags & 2 || n.flags & 2) {
      return ie;
     }
     if (t.flags & 32768) {
      return n;
     }
     if (n.flags & 32768) {
      return t;
     }
     if (t.flags & 262144) {
      return wm(t, function(e) {
       return Nl(e, n, r, i, a);
      });
     }
     if (n.flags & 262144) {
      return wm(n, function(e) {
       return Nl(t, e, r, i, a);
      });
     }
     if (n.flags & (272 | 168 | 68 | 544 | 16777216 | 1048576)) {
      return t;
     }
     var o = e.createSymbolTable();
     var s = e.createUnderscoreEscapedMap();
     var c;
     var u;
     if (t === ke) {
      c = Fs(n, 0);
      u = Fs(n, 1);
     } else {
      c = Lo(Fs(t, 0), Fs(n, 0));
      u = Lo(Fs(t, 1), Fs(n, 1));
     }
     for (var l = 0, f = rs(n); l < f.length; l++) {
      var d = f[l];
      var p = d.flags & 65536 && !(d.flags & 32768);
      if (e.getDeclarationModifierFlagsFromSymbol(d) & (8 | 16)) {
       s.set(d.escapedName, true);
      } else if (!Pl(d) && !p) {
       o.set(d.escapedName, Al(d));
      }
     }
     for (var m = 0, _ = rs(t); m < _.length; m++) {
      var g = _[m];
      if (g.flags & 65536 && !(g.flags & 32768) || s.has(g.escapedName) || Pl(g)) {
       continue;
      }
      if (o.has(g.escapedName)) {
       var d = o.get(g.escapedName);
       var h = xa(d);
       if (d.flags & 16777216) {
        var v = e.concatenate(g.declarations, d.declarations);
        var y = 4 | g.flags & 16777216;
        var b = Sn(y, g.escapedName);
        b.type = Ru([ xa(g), Qp(h, 131072) ]);
        b.leftSpread = g;
        b.rightSpread = d;
        b.declarations = v;
        b.nameType = g.nameType;
        o.set(g.escapedName, b);
       }
      } else {
       o.set(g.escapedName, Al(g));
      }
     }
     var x = oi(r, o, e.emptyArray, e.emptyArray, Fl(c), Fl(u));
     x.flags |= i | 268435456;
     x.objectFlags |= a | (128 | 1024);
     return x;
    }
    function Al(e) {
     if (!Sy(e)) {
      return e;
     }
     var t = 4 | e.flags & 16777216;
     var n = Sn(t, e.escapedName);
     n.type = xa(e);
     n.declarations = e.declarations;
     n.nameType = e.nameType;
     n.syntheticOrigin = e;
     return n;
    }
    function Fl(e) {
     if (e && e.isReadonly) {
      return hc(e.type, false, e.declaration);
     }
     return e;
    }
    function Pl(t) {
     return t.flags & 8192 && e.find(t.declarations, function(t) {
      return e.isClassLike(t.parent);
     });
    }
    function Il(e, t, n) {
     var r = Yr(e);
     r.symbol = n;
     r.value = t;
     return r;
    }
    function Ol(e) {
     if (e.flags & 192 && !(e.flags & 33554432)) {
      if (!e.freshType) {
       var t = Il(e.flags | 33554432, e.value, e.symbol);
       t.regularType = e;
       e.freshType = t;
      }
      return e.freshType;
     }
     return e;
    }
    function Ml(t) {
     return t.flags & 192 && t.flags & 33554432 ? t.regularType : t.flags & 262144 ? Ru(e.sameMap(t.types, Ml)) : t;
    }
    function Ll(e, t, n) {
     var r = typeof e === "number" ? "#" : "@";
     var i = t ? t + r + e : r + e;
     var a = G.get(i);
     if (!a) {
      var o = (typeof e === "number" ? 128 : 64) | (t ? 512 : 0);
      G.set(i, a = Il(o, e, n));
     }
     return a;
    }
    function Rl(e) {
     var t = Ln(e);
     if (!t.resolvedType) {
      t.resolvedType = Ml(pb(e.literal));
     }
     return t.resolvedType;
    }
    function Bl(e) {
     var t = Yr(2048);
     t.symbol = e;
     return t;
    }
    function zl(t) {
     if (e.isValidESSymbolDeclaration(t)) {
      var n = Vr(t);
      var r = Mn(n);
      return r.uniqueESSymbolType || (r.uniqueESSymbolType = Bl(n));
     }
     return me;
    }
    function jl(t) {
     var n = e.getThisContainer(t, false);
     var r = n && n.parent;
     if (r && (e.isClassLike(r) || r.kind === 239)) {
      if (!e.hasModifier(n, 32) && (n.kind !== 155 || e.isNodeDescendantOf(t, n.body))) {
       return Ua(Vr(r)).thisType;
      }
     }
     bn(t, e.Diagnostics.A_this_type_is_available_only_in_a_non_static_member_of_a_class_or_interface);
     return re;
    }
    function ql(e) {
     var t = Ln(e);
     if (!t.resolvedType) {
      t.resolvedType = jl(e);
     }
     return t.resolvedType;
    }
    function Ul(e) {
     switch (e.kind) {
     case 119:
     case 282:
     case 283:
      return ee;

     case 142:
      return ie;

     case 137:
      return ue;

     case 134:
      return le;

     case 122:
      return pe;

     case 138:
      return me;

     case 105:
      return _e;

     case 140:
      return ae;

     case 95:
      return se;

     case 131:
      return ge;

     case 135:
      return e.flags & 65536 ? ee : ye;

     case 176:
     case 99:
      return ql(e);

     case 180:
      return Rl(e);

     case 162:
      return Kc(e);

     case 161:
      return pe;

     case 209:
      return Kc(e);

     case 165:
      return Wc(e);

     case 167:
      return xu(e);

     case 168:
      return Cu(e);

     case 169:
      return Du(e);

     case 171:
      return qu(e);

     case 172:
      return Hu(e);

     case 284:
      return Jc(e);

     case 286:
      return Xi(Ul(e.type));

     case 175:
     case 170:
     case 285:
     case 281:
      return Ul(e.type);

     case 288:
      return fS(e);

     case 163:
     case 164:
     case 166:
     case 290:
     case 287:
     case 291:
      return Dl(e);

     case 177:
      return nl(e);

     case 178:
      return pl(e);

     case 179:
      return ml(e);

     case 173:
      return xl(e);

     case 174:
      return kl(e);

     case 181:
      return wl(e);

     case 71:
     case 146:
      var t = MS(e);
      return t && Ya(t);

     default:
      return re;
     }
    }
    function Jl(e, t, n) {
     if (e && e.length) {
      for (var r = 0; r < e.length; r++) {
       var i = e[r];
       var a = n(i, t);
       if (i !== a) {
        var o = r === 0 ? [] : e.slice(0, r);
        o.push(a);
        for (r++; r < e.length; r++) {
         o.push(n(e[r], t));
        }
        return o;
       }
      }
     }
     return e;
    }
    function Kl(e, t) {
     return Jl(e, t, gf);
    }
    function Vl(e, t) {
     return Jl(e, t, of);
    }
    function Wl(e, t) {
     return function(n) {
      return n === e ? t : n;
     };
    }
    function Hl(e, t, n, r) {
     return function(i) {
      return i === e ? t : i === n ? r : i;
     };
    }
    function Gl(e, t) {
     return function(n) {
      for (var r = 0; r < e.length; r++) {
       if (n === e[r]) {
        return t ? t[r] : ee;
       }
      }
      return n;
     };
    }
    function $l(t, n) {
     e.Debug.assert(n === undefined || t.length === n.length);
     return t.length === 1 ? Wl(t[0], n ? n[0] : ee) : t.length === 2 ? Hl(t[0], n ? n[0] : ee, t[1], n ? n[1] : ee) : Gl(t, n);
    }
    function Xl(e) {
     return $l(e, undefined);
    }
    function Ql(e, t) {
     return function(n) {
      return e.indexOf(n) >= t ? ke : n;
     };
    }
    function Yl(e) {
     return !!e.typeParameters;
    }
    function Zl(e) {
     return e && Yl(e) ? sp(e.typeParameters, e.signature, e.flags | 2, e.compareTypes, e.inferences) : e;
    }
    function ef(e, t) {
     if (!e) return t;
     if (!t) return e;
     return function(n) {
      return gf(e(n), t);
     };
    }
    function tf(e, t, n) {
     return function(r) {
      return r === e ? t : n(r);
     };
    }
    function nf(e) {
     return e.flags & 65536 ? ne : e;
    }
    function rf(e) {
     var t = Yr(65536);
     t.symbol = e.symbol;
     t.target = e;
     return t;
    }
    function af(t, n) {
     if (e.isIdentifierTypePredicate(t)) {
      return {
       kind: 1,
       parameterName: t.parameterName,
       parameterIndex: t.parameterIndex,
       type: gf(t.type, n)
      };
     } else {
      return {
       kind: 0,
       type: gf(t.type, n)
      };
     }
    }
    function of(t, n, r) {
     var i;
     if (t.typeParameters && !r) {
      i = e.map(t.typeParameters, rf);
      n = ef($l(t.typeParameters, i), n);
      for (var a = 0, o = i; a < o.length; a++) {
       var s = o[a];
       s.mapper = n;
      }
     }
     var c = Co(t.declaration, i, t.thisParameter && sf(t.thisParameter, n), Jl(t.parameters, n, sf), undefined, undefined, t.minArgumentCount, t.hasRestParameter, t.hasLiteralTypes);
     c.target = t;
     c.mapper = n;
     return c;
    }
    function sf(t, n) {
     var r = Mn(t);
     if (r.type && !Iy(r.type, 131072 | 15794176)) {
      return t;
     }
     if (e.getCheckFlags(t) & 1) {
      t = r.target;
      n = ef(r.mapper, n);
     }
     var i = Sn(t.flags, t.escapedName, 1 | e.getCheckFlags(t) & (1024 | 4096 | 8192));
     i.declarations = t.declarations;
     i.parent = t.parent;
     i.target = t;
     i.mapper = n;
     if (t.valueDeclaration) {
      i.valueDeclaration = t.valueDeclaration;
     }
     if (t.nameType) {
      i.nameType = t.nameType;
     }
     return i;
    }
    function cf(t, n) {
     var r = t.objectFlags & 64 ? t.target : t;
     var i = r.symbol;
     var a = Mn(i);
     var o = a.outerTypeParameters;
     if (!o) {
      var s = i.declarations[0];
      if (e.isInJavaScriptFile(s)) {
       var c = e.findAncestor(s, e.isJSDocParameterTag);
       if (c) {
        var u = e.getParameterSymbolFromJSDoc(c);
        if (u) {
         s = u.valueDeclaration;
        }
       }
      }
      var l = Da(s, true);
      if (Nv(s)) {
       var f = Os(s);
       l = e.addRange(l, f);
      }
      o = l || e.emptyArray;
      o = i.flags & 2048 && !r.aliasTypeArguments ? e.filter(o, function(e) {
       return lf(e, s);
      }) : o;
      a.outerTypeParameters = o;
      if (o.length) {
       a.instantiations = e.createMap();
       a.instantiations.set(Sc(o), r);
      }
     }
     if (o.length) {
      var d = t.objectFlags & 64 ? ef(t.mapper, n) : n;
      var p = e.map(o, d);
      var m = Sc(p);
      var _ = a.instantiations.get(m);
      if (!_) {
       var g = $l(o, p);
       _ = r.objectFlags & 32 ? ff(r, g) : pf(r, g);
       a.instantiations.set(m, _);
      }
      return _;
     }
     return t;
    }
    function uf(e) {
     return !(e.kind === 146 || e.parent.kind === 162 && e.parent.typeArguments && e === e.parent.typeName);
    }
    function lf(t, n) {
     if (t.symbol && t.symbol.declarations && t.symbol.declarations.length === 1) {
      var r = t.symbol.declarations[0].parent;
      if (e.findAncestor(n, function(e) {
       return e.kind === 216 ? "quit" : e === r;
      })) {
       return !!e.forEachChild(n, i);
      }
     }
     return true;
     function i(n) {
      switch (n.kind) {
      case 176:
       return !!t.isThisType;

      case 71:
       return !t.isThisType && e.isPartOfTypeNode(n) && uf(n) && Ul(n) === t;

      case 165:
       return true;
      }
      return !!e.forEachChild(n, i);
     }
    }
    function ff(e, t) {
     var n = Jo(e);
     if (n.flags & 1048576) {
      var r = n.type;
      if (r.flags & 65536) {
       var i = gf(r, t);
       if (r !== i) {
        return wm(i, function(n) {
         if (df(n)) {
          return pf(e, tf(r, n, t));
         }
         return n;
        });
       }
      }
     }
     return pf(e, t);
    }
    function df(e) {
     return e.flags & (3 | 14745600 | 131072 | 524288);
    }
    function pf(e, t) {
     var n = ti(e.objectFlags | 64, e.symbol);
     if (e.objectFlags & 32) {
      n.declaration = e.declaration;
     }
     n.target = e;
     n.mapper = t;
     n.aliasSymbol = e.aliasSymbol;
     n.aliasTypeArguments = Kl(e.aliasTypeArguments, t);
     return n;
    }
    function mf(t, n) {
     var r = t.root;
     if (r.outerTypeParameters) {
      var i = e.map(r.outerTypeParameters, n);
      var a = Sc(i);
      var o = r.instantiations.get(a);
      if (!o) {
       var s = $l(r.outerTypeParameters, i);
       o = _f(r, s);
       r.instantiations.set(a, o);
      }
      return o;
     }
     return t;
    }
    function _f(e, t) {
     if (e.isDistributive) {
      var n = e.checkType;
      var r = t(n);
      if (n !== r && r.flags & (262144 | 32768)) {
       return wm(r, function(r) {
        return gl(e, tf(n, r, t));
       });
      }
     }
     return gl(e, t);
    }
    function gf(e, t) {
     if (e && t && t !== D) {
      if (e.flags & 65536) {
       return t(e);
      }
      if (e.flags & 131072) {
       if (e.objectFlags & 16) {
        return e.symbol && e.symbol.flags & (16 | 8192 | 32 | 2048 | 4096) && e.symbol.declarations ? cf(e, t) : e;
       }
       if (e.objectFlags & 32) {
        return cf(e, t);
       }
       if (e.objectFlags & 4) {
        var n = e.typeArguments;
        var r = Kl(n, t);
        return r !== n ? Cc(e.target, r) : e;
       }
      }
      if (e.flags & 262144 && !(e.flags & 32764)) {
       var i = e.types;
       var a = Kl(i, t);
       return a !== i ? Ru(a, 1, e.aliasSymbol, Kl(e.aliasTypeArguments, t)) : e;
      }
      if (e.flags & 524288) {
       var i = e.types;
       var a = Kl(i, t);
       return a !== i ? Wu(a, e.aliasSymbol, Kl(e.aliasTypeArguments, t)) : e;
      }
      if (e.flags & 1048576) {
       return Zu(gf(e.type, t));
      }
      if (e.flags & 2097152) {
       return dl(gf(e.objectType, t), gf(e.indexType, t));
      }
      if (e.flags & 4194304) {
       return mf(e, ef(e.mapper, t));
      }
      if (e.flags & 8388608) {
       return gf(e.typeVariable, t);
      }
     }
     return e;
    }
    function hf(e) {
     return e.flags & (32764 | 3 | 32768) ? e : e.wildcardInstantiation || (e.wildcardInstantiation = gf(e, nf));
    }
    function vf(e, t) {
     return e && hc(gf(e.type, t), e.isReadonly, e.declaration);
    }
    function yf(t) {
     e.Debug.assert(t.kind !== 154 || e.isObjectLiteralMethod(t));
     switch (t.kind) {
     case 194:
     case 195:
     case 154:
      return bf(t);

     case 186:
      return e.some(t.properties, yf);

     case 185:
      return e.some(t.elements, yf);

     case 203:
      return yf(t.whenTrue) || yf(t.whenFalse);

     case 202:
      return t.operatorToken.kind === 54 && (yf(t.left) || yf(t.right));

     case 273:
      return yf(t.initializer);

     case 193:
      return yf(t.expression);

     case 266:
      return e.some(t.properties, yf);

     case 265:
      {
       var n = t.initializer;
       return !!n && yf(n);
      }

     case 268:
      {
       var r = t.expression;
       return !!r && yf(r);
      }
     }
     return false;
    }
    function bf(t) {
     if (t.typeParameters) {
      return false;
     }
     if (e.some(t.parameters, function(t) {
      return !e.getEffectiveTypeAnnotationNode(t);
     })) {
      return true;
     }
     if (t.kind !== 195) {
      var n = e.firstOrUndefined(t.parameters);
      if (!(n && e.parameterIsThisKeyword(n))) {
       return true;
      }
     }
     var r = t.body;
     return r.kind === 216 ? false : yf(r);
    }
    function xf(t) {
     return (e.isInJavaScriptFile(t) && e.isFunctionDeclaration(t) || Y_(t) || e.isObjectLiteralMethod(t)) && bf(t);
    }
    function kf(t) {
     if (t.flags & 131072) {
      var n = Zo(t);
      if (n.constructSignatures.length) {
       var r = ti(16, t.symbol);
       r.members = n.members;
       r.properties = n.properties;
       r.callSignatures = e.emptyArray;
       r.constructSignatures = e.emptyArray;
       return r;
      }
     } else if (t.flags & 524288) {
      return Wu(e.map(t.types, kf));
     }
     return t;
    }
    function Sf(e, t) {
     return Xf(e, t, an);
    }
    function wf(e, t) {
     return Xf(e, t, an) ? -1 : 0;
    }
    function Cf(e, t) {
     return Xf(e, t, tn) ? -1 : 0;
    }
    function Df(e, t) {
     return Xf(e, t, en);
    }
    function Tf(e, t) {
     return Xf(e, t, tn);
    }
    function Ef(t, n) {
     return t.flags & 262144 ? e.every(t.types, function(e) {
      return Ef(e, n);
     }) : n.flags & 262144 ? e.some(n.types, function(e) {
      return Ef(t, e);
     }) : t.flags & 14745600 ? Ef(ps(t) || ke, n) : n === We || n === He ? Df(t, n) : wa(t, Sa(n));
    }
    function Nf(e, t) {
     return Xf(e, t, rn);
    }
    function Af(e, t) {
     return Nf(e, t) || Nf(t, e);
    }
    function Ff(e, t, n, r, i, a) {
     return Yf(e, t, tn, n, r, i, a);
    }
    function Pf(e, t, n, r, i, a) {
     if (Tf(e, t)) return true;
     if (!If(r, e, t)) {
      return Yf(e, t, tn, n, i, a);
     }
     return false;
    }
    function If(e, t, n) {
     if (!e) return false;
     switch (e.kind) {
     case 268:
     case 193:
      return If(e.expression, t, n);

     case 202:
      switch (e.operatorToken.kind) {
      case 58:
      case 26:
       return If(e.right, t, n);
      }
      break;

     case 186:
      return jf(e, t, n);

     case 185:
      return Bf(e, t, n);

     case 266:
      return Lf(e, t, n);
     }
     return false;
    }
    function Of(t, n, r) {
     var i = false;
     for (var a = t.next(); !a.done; a = t.next()) {
      var o = a.value, s = o.errorNode, c = o.innerExpression, u = o.nameType, l = o.errorMessage;
      var f = dl(n, u);
      var d = dl(r, u);
      if (!Tf(f, d)) {
       var p = c && If(c, f, d);
       if (p) {
        i = true;
       } else {
        var m = {};
        var _ = c ? ob(c, 0, f) : f;
        var g = Ff(_, d, s, l, undefined, m);
        if (g && _ !== f) {
         Ff(f, d, s, l, undefined, m);
        }
        if (m.error) {
         var h = m.error;
         var v = co(u) ? _o(u) : undefined;
         var y = v !== undefined ? Ds(r, v) : undefined;
         var b = false;
         if (!y) {
          var x = Oy(u, 168) && Fs(r, 1) || Fs(r, 0) || undefined;
          if (x && x.declaration) {
           b = true;
           yn(h, e.createDiagnosticForNode(x.declaration, e.Diagnostics.The_expected_type_comes_from_this_index_signature));
          }
         }
         if (!b && (y && e.length(y.declarations) || r.symbol && e.length(r.symbol.declarations))) {
          yn(h, e.createDiagnosticForNode(y && e.length(y.declarations) ? y.declarations[0] : r.symbol.declarations[0], e.Diagnostics.The_expected_type_comes_from_property_0_which_is_declared_here_on_type_1, v && !(u.flags & 2048) ? e.unescapeLeadingUnderscores(v) : Si(u), Si(r)));
         }
        }
        i = true;
       }
      }
     }
     return i;
    }
    function Mf(t) {
     var n, r, a;
     return i(this, function(i) {
      switch (i.label) {
      case 0:
       if (!e.length(t.properties)) return [ 2 ];
       n = 0, r = t.properties;
       i.label = 1;

      case 1:
       if (!(n < r.length)) return [ 3, 4 ];
       a = r[n];
       if (e.isJsxSpreadAttribute(a)) return [ 3, 3 ];
       return [ 4, {
        errorNode: a.name,
        innerExpression: a.initializer,
        nameType: Ll(e.idText(a.name))
       } ];

      case 2:
       i.sent();
       i.label = 3;

      case 3:
       n++;
       return [ 3, 1 ];

      case 4:
       return [ 2 ];
      }
     });
    }
    function Lf(e, t, n) {
     return Of(Mf(e), t, n);
    }
    function Rf(t, n) {
     var r, a, o, s;
     return i(this, function(i) {
      switch (i.label) {
      case 0:
       r = e.length(t.elements);
       if (!r) return [ 2 ];
       a = 0;
       i.label = 1;

      case 1:
       if (!(a < r)) return [ 3, 4 ];
       if (wd(n) && !Ds(n, "" + a)) return [ 3, 3 ];
       o = t.elements[a];
       if (e.isOmittedExpression(o)) return [ 3, 3 ];
       s = Ll(a);
       return [ 4, {
        errorNode: o,
        innerExpression: o,
        nameType: s
       } ];

      case 2:
       i.sent();
       i.label = 3;

      case 3:
       a++;
       return [ 3, 1 ];

      case 4:
       return [ 2 ];
      }
     });
    }
    function Bf(e, t, n) {
     if (wd(t)) {
      return Of(Rf(e, n), t, n);
     }
     return false;
    }
    function zf(t) {
     var n, r, a, o, s;
     return i(this, function(i) {
      switch (i.label) {
      case 0:
       if (!e.length(t.properties)) return [ 2 ];
       n = 0, r = t.properties;
       i.label = 1;

      case 1:
       if (!(n < r.length)) return [ 3, 8 ];
       a = r[n];
       if (e.isSpreadAssignment(a)) return [ 3, 7 ];
       o = Xu(Vr(a), 2240);
       if (!o || o.flags & 32768) {
        return [ 3, 7 ];
       }
       s = a.kind;
       switch (s) {
       case 157:
        return [ 3, 2 ];

       case 156:
        return [ 3, 2 ];

       case 154:
        return [ 3, 2 ];

       case 274:
        return [ 3, 2 ];

       case 273:
        return [ 3, 4 ];
       }
       return [ 3, 6 ];

      case 2:
       return [ 4, {
        errorNode: a.name,
        innerExpression: undefined,
        nameType: o
       } ];

      case 3:
       i.sent();
       return [ 3, 7 ];

      case 4:
       return [ 4, {
        errorNode: a.name,
        innerExpression: a.initializer,
        nameType: o,
        errorMessage: Ki(a.name) ? e.Diagnostics.Type_of_computed_property_s_value_is_0_which_is_not_assignable_to_type_1 : undefined
       } ];

      case 5:
       i.sent();
       return [ 3, 7 ];

      case 6:
       e.Debug.assertNever(a);
       i.label = 7;

      case 7:
       n++;
       return [ 3, 1 ];

      case 8:
       return [ 2 ];
      }
     });
    }
    function jf(e, t, n) {
     return Of(zf(e), t, n);
    }
    function qf(e, t, n, r, i) {
     return Yf(e, t, rn, n, r, i);
    }
    function Uf(e, t, n) {
     return Jf(e, t, 0, n, false, undefined, Cf) !== 0;
    }
    function Jf(t, n, r, i, a, o, s) {
     if (t === n) {
      return -1;
     }
     var c = Zv(n);
     if (!ny(n) && ey(t) > c) {
      return 0;
     }
     if (t.typeParameters && t.typeParameters !== n.typeParameters) {
      n = fc(n);
      t = Uh(t, n, undefined, s);
     }
     var u = Zv(t);
     var l = ty(t);
     var f = l ? ty(n) : undefined;
     if (l && !(f && u === c)) {
      return 0;
     }
     var d = n.declaration ? n.declaration.kind : 0;
     var p = !r && P && d !== 154 && d !== 153 && d !== 155;
     var m = -1;
     var _ = Ys(t);
     if (_ && _ !== _e) {
      var g = Ys(n);
      if (g) {
       var h = !p && s(_, g, false) || s(g, _, a);
       if (!h) {
        if (a) {
         o(e.Diagnostics.The_this_types_of_each_signature_are_incompatible);
        }
        return 0;
       }
       m &= h;
      }
     }
     var v = Math.max(u, c);
     var y = v - 1;
     for (var b = 0; b < v; b++) {
      var x = b === y && l || $v(t, b);
      var k = b === y && f || $v(n, b);
      var S = r ? undefined : qh(Kd(x));
      var w = r ? undefined : qh(Kd(k));
      var C = S && w && !Zs(S) && !Zs(w) && (Rd(x) & 24576) === (Rd(k) & 24576);
      var h = C ? Jf(w, S, p ? 2 : 1, false, a, o, s) : !r && !p && s(x, k, false) || s(k, x, a);
      if (!h) {
       if (a) {
        o(e.Diagnostics.Types_of_parameters_0_and_1_are_incompatible, e.unescapeLeadingUnderscores(Gv(t, b)), e.unescapeLeadingUnderscores(Gv(n, b)));
       }
       return 0;
      }
      m &= h;
     }
     if (!i) {
      var D = tc(n);
      if (D === _e) {
       return m;
      }
      var T = tc(t);
      var E = ec(n);
      if (E) {
       var N = ec(t);
       if (N) {
        m &= Kf(N, E, t.declaration, n.declaration, a, o, s);
       } else if (e.isIdentifierTypePredicate(E)) {
        if (a) {
         o(e.Diagnostics.Signature_0_must_be_a_type_predicate, ki(t));
        }
        return 0;
       }
      } else {
       m &= r === 1 && s(D, T, false) || s(T, D, a);
      }
     }
     return m;
    }
    function Kf(t, n, r, i, a, o, s) {
     if (t.kind !== n.kind) {
      if (a) {
       o(e.Diagnostics.A_this_based_type_guard_is_not_compatible_with_a_parameter_based_type_guard);
       o(e.Diagnostics.Type_predicate_0_is_not_assignable_to_1, Di(t), Di(n));
      }
      return 0;
     }
     if (t.kind === 1) {
      var c = n;
      var u = t.parameterIndex - (e.getThisParameter(r) ? 1 : 0);
      var l = c.parameterIndex - (e.getThisParameter(i) ? 1 : 0);
      if (u !== l) {
       if (a) {
        o(e.Diagnostics.Parameter_0_is_not_in_the_same_position_as_parameter_1, t.parameterName, c.parameterName);
        o(e.Diagnostics.Type_predicate_0_is_not_assignable_to_1, Di(t), Di(n));
       }
       return 0;
      }
     }
     var f = s(t.type, n.type, a);
     if (f === 0 && a) {
      o(e.Diagnostics.Type_predicate_0_is_not_assignable_to_1, Di(t), Di(n));
     }
     return f;
    }
    function Vf(e, t) {
     var n = uc(e);
     var r = uc(t);
     var i = tc(n);
     var a = tc(r);
     if (a === _e || Xf(a, i, tn) || Xf(i, a, tn)) {
      return Uf(n, r, true);
     }
     return false;
    }
    function Wf(e) {
     return e.properties.length === 0 && e.callSignatures.length === 0 && e.constructSignatures.length === 0 && !e.stringIndexInfo && !e.numberIndexInfo;
    }
    function Hf(t) {
     return t.flags & 131072 ? Wf(Zo(t)) : t.flags & 16777216 ? true : t.flags & 262144 ? e.some(t.types, Hf) : t.flags & 524288 ? e.every(t.types, Hf) : false;
    }
    function Gf(t, n, r) {
     if (t === n) {
      return true;
     }
     var i = u(t) + "," + u(n);
     var a = on.get(i);
     if (a !== undefined && !(a === 2 && r)) {
      return a === 1;
     }
     if (t.escapedName !== n.escapedName || !(t.flags & 256) || !(n.flags & 256)) {
      on.set(i, 3);
      return false;
     }
     var o = xa(n);
     for (var s = 0, c = rs(xa(t)); s < c.length; s++) {
      var l = c[s];
      if (l.flags & 8) {
       var f = Ds(o, l.escapedName);
       if (!f || !(f.flags & 8)) {
        if (r) {
         r(e.Diagnostics.Property_0_is_missing_in_type_1, e.symbolName(l), Si(Ya(n), undefined, 64));
         on.set(i, 3);
        } else {
         on.set(i, 2);
        }
        return false;
       }
      }
     }
     on.set(i, 1);
     return true;
    }
    function $f(e, t, n, r) {
     var i = e.flags;
     var a = t.flags;
     if (a & 3 || i & 32768 || e === ne) return true;
     if (a & 32768) return false;
     if (i & 68 && a & 4) return true;
     if (i & 64 && i & 512 && a & 64 && !(a & 512) && e.value === t.value) return true;
     if (i & 168 && a & 8) return true;
     if (i & 128 && i & 512 && a & 128 && !(a & 512) && e.value === t.value) return true;
     if (i & 272 && a & 16) return true;
     if (i & 3072 && a & 1024) return true;
     if (i & 32 && a & 32 && Gf(e.symbol, t.symbol, r)) return true;
     if (i & 512 && a & 512) {
      if (i & 262144 && a & 262144 && Gf(e.symbol, t.symbol, r)) return true;
      if (i & 448 && a & 448 && e.value === t.value && Gf(Wr(e.symbol), Wr(t.symbol), r)) return true;
     }
     if (i & 8192 && (!F || a & (8192 | 4096))) return true;
     if (i & 16384 && (!F || a & 16384)) return true;
     if (i & 131072 && a & 16777216) return true;
     if (i & 2048 || a & 2048) return false;
     if (n === tn || n === nn || n === rn) {
      if (i & 1) return true;
      if (i & (8 | 128) && !(i & 512) && (a & 32 || a & 128 && a & 512)) return true;
     }
     return false;
    }
    function Xf(e, t, n) {
     if (e.flags & 192 && e.flags & 33554432) {
      e = e.regularType;
     }
     if (t.flags & 192 && t.flags & 33554432) {
      t = t.regularType;
     }
     if (e === t || n === rn && !(t.flags & 32768) && $f(t, e, n) || n !== an && $f(e, t, n)) {
      return true;
     }
     if (e.flags & 131072 && t.flags & 131072) {
      var r = n.get(ad(e, t, n));
      if (r !== undefined) {
       return r === 1;
      }
     }
     if (e.flags & 16711680 || t.flags & 16711680) {
      return Yf(e, t, n, undefined);
     }
     return false;
    }
    function Qf(t, n, r) {
     return e.getObjectFlags(t) & 4096 && !(yg(n.escapedName) || r);
    }
    function Yf(t, n, r, i, a, o, s) {
     var c;
     var u;
     var l;
     var f;
     var d = 0;
     var p = 0;
     var _ = 0;
     var g = false;
     var h = false;
     e.Debug.assert(r !== an || !i, "no error reporting in identity checking");
     var v = A(t, n, !!i, a);
     if (g) {
      bn(i, e.Diagnostics.Excessive_stack_depth_comparing_types_0_and_1, Si(t), Si(n));
     } else if (c) {
      if (o) {
       var y = o();
       if (y) {
        c = e.concatenateDiagnosticMessageChains(y, c);
       }
      }
      var b = void 0;
      if (a && i && !v && t.symbol) {
       var x = Mn(t.symbol);
       if (x.originatingImport && !e.isImportCall(x.originatingImport)) {
        var k = Yf(xa(x.target), n, r, undefined);
        if (k) {
         var S = e.createDiagnosticForNode(x.originatingImport, e.Diagnostics.Type_originates_at_this_import_A_namespace_style_import_cannot_be_called_or_constructed_and_will_cause_a_failure_at_runtime_Consider_using_a_default_import_or_import_require_here_instead);
         b = e.append(b, S);
        }
       }
      }
      var w = e.createDiagnosticForNodeFromMessageChain(i, c, b);
      if (s) {
       s.error = w;
      }
      Vt.add(w);
     }
     return v !== 0;
     function C(t, n, r, a) {
      e.Debug.assert(!!i);
      c = e.chainDiagnosticMessages(c, t, n, r, a);
     }
     function D(t, n, i) {
      var a = Si(n);
      var o = Si(i);
      if (a === o) {
       a = Si(n, undefined, 64);
       o = Si(i, undefined, 64);
      }
      if (!t) {
       if (r === rn) {
        t = e.Diagnostics.Type_0_is_not_comparable_to_type_1;
       } else if (a === o) {
        t = e.Diagnostics.Type_0_is_not_assignable_to_type_1_Two_different_types_with_this_name_exist_but_they_are_unrelated;
       } else {
        t = e.Diagnostics.Type_0_is_not_assignable_to_type_1;
       }
      }
      C(t, a, o);
     }
     function E(t, n) {
      var r = Si(t);
      var i = Si(n);
      if (Xe === t && ue === n || Qe === t && le === n || Ye === t && pe === n || nu(false) === t && me === n) {
       C(e.Diagnostics._0_is_a_primitive_but_1_is_a_wrapper_object_Prefer_using_0_when_possible, i, r);
      }
     }
     function N(e) {
      if (!(e.flags & 786432)) {
       return false;
      }
      var t = false;
      for (var n = 0, r = e.types; n < r.length; n++) {
       var i = r[n];
       if (i.flags & 24576) {
        continue;
       }
       if (t) {
        return true;
       }
       t = true;
      }
      return false;
     }
     function A(t, n, a, o) {
      if (a === void 0) {
       a = false;
      }
      if (t.flags & 192 && t.flags & 33554432) {
       t = t.regularType;
      }
      if (n.flags & 192 && n.flags & 33554432) {
       n = n.regularType;
      }
      if (t.flags & 8388608) {
       t = r === nn ? t.typeVariable : t.substitute;
      }
      if (n.flags & 8388608) {
       n = n.typeVariable;
      }
      if (t.flags & 2097152) {
       t = ul(t);
      }
      if (n.flags & 2097152) {
       n = ul(n);
      }
      if (n.flags & 262144 && t.flags & 131072 && n.types.length <= 3 && Iy(n, 24576)) {
       var s = Cm(n, ~24576);
       if (!(s.flags & (262144 | 32768))) {
        n = s;
       }
      }
      if (t === n) return -1;
      if (r === an) {
       return F(t, n);
      }
      if (r === rn && !(n.flags & 32768) && $f(n, t, r) || $f(t, n, r, a ? C : undefined)) return -1;
      if (Dp(t) && t.flags & 33554432) {
       var u = n.flags & 262144 ? R(t, n) : undefined;
       if (P(t, n, u, a)) {
        if (a) {
         D(o, t, n);
        }
        return 0;
       }
       if (N(n) && !u) {
        t = Gd(t);
       }
      }
      if (r !== rn && !(t.flags & 786432) && !(n.flags & 262144) && !h && t !== We && (rs(t).length > 0 || KS(t)) && H(n) && !G(t, n)) {
       if (a) {
        var l = Es(t, 0);
        var f = Es(t, 1);
        if (l.length > 0 && A(tc(l[0]), n, false) || f.length > 0 && A(tc(f[0]), n, false)) {
         C(e.Diagnostics.Value_of_type_0_has_no_properties_in_common_with_type_1_Did_you_mean_to_call_it, Si(t), Si(n));
        } else {
         C(e.Diagnostics.Type_0_has_no_properties_in_common_with_type_1, Si(t), Si(n));
        }
       }
       return 0;
      }
      var d = 0;
      var p = c;
      var _ = h;
      h = false;
      if (t.flags & 262144) {
       d = r === rn ? z(t, n, a && !(t.flags & 32764)) : j(t, n, a && !(t.flags & 32764));
      } else {
       if (n.flags & 262144) {
        d = O(t, n, a && !(t.flags & 32764) && !(n.flags & 32764));
       } else if (n.flags & 524288) {
        h = true;
        d = B(t, n, a);
       } else if (t.flags & 524288) {
        d = z(t, n, false);
       }
       if (!d && (t.flags & 16711680 || n.flags & 16711680)) {
        if (d = U(t, n, a)) {
         c = p;
        }
       }
      }
      if (!d && t.flags & 524288) {
       var g = ds(t, !!(n.flags & 262144));
       if (g) {
        if (d = A(g, n, a)) {
         c = p;
        }
       }
      }
      h = _;
      if (!d && a) {
       if (t.flags & 131072 && n.flags & 32764) {
        E(t, n);
       } else if (t.symbol && t.flags & 131072 && We === t) {
        C(e.Diagnostics.The_Object_type_is_assignable_to_very_few_other_types_Did_you_mean_to_use_the_any_type_instead);
       } else if (e.getObjectFlags(t) & 4096 && n.flags & 524288) {
        var v = n.types;
        var y = Cg(m.IntrinsicAttributes, i);
        var b = Cg(m.IntrinsicClassAttributes, i);
        if (y !== re && b !== re && (e.contains(v, y) || e.contains(v, b))) {
         return d;
        }
       }
       D(o, t, n);
      }
      return d;
     }
     function F(e, t) {
      var n;
      var r = e.flags & t.flags;
      if (r & 131072) {
       return U(e, t, false);
      }
      if (r & (262144 | 524288)) {
       if (n = I(e, t)) {
        if (n &= I(t, e)) {
         return n;
        }
       }
      }
      if (r & 1048576) {
       return A(e.type, t.type, false);
      }
      if (r & 2097152) {
       if (n = A(e.objectType, t.objectType, false)) {
        if (n &= A(e.indexType, t.indexType, false)) {
         return n;
        }
       }
      }
      if (r & 4194304) {
       if (e.root.isDistributive === t.root.isDistributive) {
        if (n = A(e.checkType, t.checkType, false)) {
         if (n &= A(e.extendsType, t.extendsType, false)) {
          if (n &= A(hl(e), hl(t), false)) {
           if (n &= A(vl(e), vl(t), false)) {
            return n;
           }
          }
         }
        }
       }
      }
      if (r & 8388608) {
       return A(e.substitute, t.substitute, false);
      }
      return 0;
     }
     function P(t, n, a, o) {
      if (Iy(n, 131072) && !(e.getObjectFlags(n) & 512)) {
       var s = !!(e.getObjectFlags(t) & 4096);
       if ((r === tn || r === nn || r === rn) && (bm(We, n) || !s && Hf(n))) {
        return false;
       }
       if (a) {
        return P(t, a, undefined, o);
       }
       var c = function(r) {
        if (!Xg(n, r.escapedName, s)) {
         if (o) {
          if (!i) return {
           value: e.Debug.fail()
          };
          if (e.isJsxAttributes(i) || e.isJsxOpeningLikeElement(i)) {
           C(e.Diagnostics.Property_0_does_not_exist_on_type_1, xi(r), Si(n));
          } else {
           var a = t.symbol && e.firstOrUndefined(t.symbol.declarations);
           var c = void 0;
           if (r.valueDeclaration && e.findAncestor(r.valueDeclaration, function(e) {
            return e === a;
           })) {
            var u = r.valueDeclaration;
            e.Debug.assertNode(u, e.isObjectLiteralElementLike);
            i = u;
            var l = u.name;
            if (e.isIdentifier(l)) {
             c = gh(l, n);
            }
           }
           if (c !== undefined) {
            C(e.Diagnostics.Object_literal_may_only_specify_known_properties_but_0_does_not_exist_in_type_1_Did_you_mean_to_write_2, xi(r), Si(n), c);
           } else {
            C(e.Diagnostics.Object_literal_may_only_specify_known_properties_and_0_does_not_exist_in_type_1, xi(r), Si(n));
           }
          }
         }
         return {
          value: true
         };
        }
       };
       for (var u = 0, l = es(t); u < l.length; u++) {
        var f = l[u];
        var d = c(f);
        if (typeof d === "object") return d.value;
       }
      }
      return false;
     }
     function I(e, t) {
      var n = -1;
      var r = e.types;
      for (var i = 0, a = r; i < a.length; i++) {
       var o = a[i];
       var s = O(o, t, false);
       if (!s) {
        return 0;
       }
       n &= s;
      }
      return n;
     }
     function O(e, t, n) {
      var r = t.types;
      if (t.flags & 262144 && Eu(r, e)) {
       return -1;
      }
      for (var i = 0, a = r; i < a.length; i++) {
       var o = a[i];
       var s = A(e, o, false);
       if (s) {
        return s;
       }
      }
      if (n) {
       var c = R(e, t) || M(e, t) || L(e, t);
       A(e, c || r[r.length - 1], true);
      }
      return 0;
     }
     function M(t, n) {
      var r = e.getObjectFlags(t);
      if (r & (4 | 16) && n.flags & 262144) {
       return e.find(n.types, function(n) {
        if (n.flags & 131072) {
         var i = r & e.getObjectFlags(n);
         if (i & 4) {
          return t.target === n.target;
         }
         if (i & 16) {
          return !!t.aliasSymbol && t.aliasSymbol === n.aliasSymbol;
         }
        }
        return false;
       });
      }
     }
     function L(t, n) {
      if (e.getObjectFlags(t) & 128 && km(n, kd)) {
       return e.find(n.types, function(e) {
        return !kd(e);
       });
      }
     }
     function R(e, t) {
      var n;
      var r = es(e);
      if (r) {
       var i = Up(r, t);
       if (i) {
        for (var a = 0, o = i; a < o.length; a++) {
         var s = o[a];
         var c = xa(s);
         for (var u = 0, l = t.types; u < l.length; u++) {
          var f = l[u];
          var d = qi(f, s.escapedName);
          if (d && A(c, d)) {
           if (f === n) continue;
           if (n) {
            return undefined;
           }
           n = f;
          }
         }
        }
       }
      }
      return n;
     }
     function B(e, t, n) {
      var r = -1;
      var i = t.types;
      for (var a = 0, o = i; a < o.length; a++) {
       var s = o[a];
       var c = A(e, s, n);
       if (!c) {
        return 0;
       }
       r &= c;
      }
      return r;
     }
     function z(e, t, n) {
      var r = e.types;
      if (e.flags & 262144 && Eu(r, t)) {
       return -1;
      }
      var i = r.length;
      for (var a = 0; a < i; a++) {
       var o = A(r[a], t, n && a === i - 1);
       if (o) {
        return o;
       }
      }
      return 0;
     }
     function j(e, t, n) {
      var r = -1;
      var i = e.types;
      for (var a = 0, o = i; a < o.length; a++) {
       var s = o[a];
       var c = A(s, t, n);
       if (!c) {
        return 0;
       }
       r &= c;
      }
      return r;
     }
     function q(t, n, i, a) {
      var o = t.typeArguments || e.emptyArray;
      var s = n.typeArguments || e.emptyArray;
      if (o.length !== s.length && r === an) {
       return 0;
      }
      var c = o.length <= s.length ? o.length : s.length;
      var u = -1;
      for (var l = 0; l < c; l++) {
       var f = l < i.length ? i[l] : 1;
       if (f !== 4) {
        var d = o[l];
        var p = s[l];
        var m = -1;
        if (f === 1) {
         m = A(d, p, a);
        } else if (f === 2) {
         m = A(p, d, a);
        } else if (f === 3) {
         m = A(p, d, false);
         if (!m) {
          m = A(d, p, a);
         }
        } else {
         m = A(d, p, a);
         if (m) {
          m &= A(p, d, a);
         }
        }
        if (!m) {
         return 0;
        }
        u &= m;
       }
      }
      return u;
     }
     function U(e, t, n) {
      if (g) {
       return 0;
      }
      var i = ad(e, t, r);
      var a = r.get(i);
      if (a !== undefined) {
       if (n && a === 2) {} else {
        return a === 1 ? -1 : 0;
       }
      }
      if (!u) {
       u = [];
       l = [];
       f = [];
      } else {
       for (var o = 0; o < d; o++) {
        if (i === u[o]) {
         return 1;
        }
       }
       if (p === 100) {
        g = true;
        return 0;
       }
      }
      var s = d;
      u[d] = i;
      d++;
      l[p] = e;
      f[p] = t;
      p++;
      var c = _;
      if (!(_ & 1) && fd(e, l, p)) _ |= 1;
      if (!(_ & 2) && fd(t, f, p)) _ |= 2;
      var m = _ !== 3 ? K(e, t, n) : 1;
      _ = c;
      p--;
      if (m) {
       if (m === -1 || p === 0) {
        for (var o = s; o < d; o++) {
         r.set(u[o], 1);
        }
        d = s;
       }
      } else {
       r.set(i, n ? 3 : 2);
       d = s;
      }
      return m;
     }
     function J(e) {
      return r === nn ? undefined : os(e);
     }
     function K(t, n, i) {
      var a;
      var o;
      var s = c;
      if (n.flags & 65536) {
       if (e.getObjectFlags(t) & 32 && Jo(t) === Zu(n)) {
        if (!(Go(t) & 4)) {
         var u = Ko(t);
         var l = dl(n, Uo(t));
         if (a = A(u, l, i)) {
          return a;
         }
        }
       }
      } else if (n.flags & 1048576) {
       if (t.flags & 1048576) {
        if (a = A(n.type, t.type, false)) {
         return a;
        }
       }
       if (r !== nn) {
        var f = ul(n.type);
        var d = f !== n.type ? f : os(n.type);
        if (d) {
         if (a = A(t, Zu(d, n.stringsOnly), i)) {
          return a;
         }
        }
       }
      } else if (n.flags & 2097152) {
       var d = J(n);
       if (d) {
        if (a = A(t, d, i)) {
         c = s;
         return a;
        }
       }
      } else if (Yo(n)) {
       var p = Ko(n);
       var m = Go(n);
       if (!(m & 8)) {
        if (p.flags & 2097152 && p.objectType === t && p.indexType === Uo(n)) {
         return -1;
        }
        if (!Yo(t) && Jo(n) === Zu(t)) {
         var l = dl(t, Uo(n));
         var u = Ko(n);
         if (a = A(l, u, i)) {
          c = s;
          return a;
         }
        }
       }
      }
      if (t.flags & 2162688) {
       if (t.flags & 2097152 && n.flags & 2097152) {
        if (a = A(t.objectType, n.objectType, i)) {
         a &= A(t.indexType, n.indexType, i);
        }
        if (a) {
         c = s;
         return a;
        }
       }
       var d = J(t);
       if (!d || t.flags & 65536 && d.flags & 3) {
        if (a = A(ke, Cm(n, ~16777216))) {
         c = s;
         return a;
        }
       } else {
        var _ = xo(d, t);
        if (a = A(_, n, i)) {
         c = s;
         return a;
        }
       }
      } else if (t.flags & 1048576) {
       if (a = A(xe, n, i)) {
        c = s;
        return a;
       }
      } else if (t.flags & 4194304) {
       if (n.flags & 4194304) {
        if (Sf(t.extendsType, n.extendsType) && (A(t.checkType, n.checkType) || A(n.checkType, t.checkType))) {
         if (a = A(hl(t), hl(n), i)) {
          a &= A(vl(t), vl(n), i);
         }
         if (a) {
          c = s;
          return a;
         }
        }
       } else if (r !== nn) {
        var g = ls(t);
        if (g) {
         if (a = A(g, n, i)) {
          c = s;
          return a;
         }
        }
        var h = us(t);
        if (h) {
         if (a = A(h, n, i)) {
          c = s;
          return a;
         }
        }
       }
      } else {
       if (e.getObjectFlags(t) & 4 && e.getObjectFlags(n) & 4 && t.target === n.target && !(e.getObjectFlags(t) & 8192 || e.getObjectFlags(n) & 8192)) {
        var v = ed(t.target);
        if (a = q(t, n, v, i)) {
         return a;
        }
        if (v !== e.emptyArray && !td(n, v)) {
         if (!(i && e.some(v, function(e) {
          return e === 0;
         }))) {
          return 0;
         }
         o = c;
         c = s;
        }
       }
       var y = !!(t.flags & 32764);
       if (r !== an) {
        t = ks(t);
       }
       if (t.flags & (131072 | 524288) && n.flags & 131072) {
        var b = i && c === s && !y;
        if (Qo(n) && !Yo(t) && Hf(t)) {
         a = -1;
        } else if (Yo(n)) {
         a = Yo(t) ? V(t, n, b) : 0;
        } else {
         a = W(t, n, b);
         if (a) {
          a &= X(t, n, 0, b);
          if (a) {
           a &= X(t, n, 1, b);
           if (a) {
            a &= te(t, n, 0, y, b);
            if (a) {
             a &= te(t, n, 1, y, b);
            }
           }
          }
         }
        }
        if (a) {
         if (!o) {
          c = s;
          return a;
         }
         c = o;
        }
       }
      }
      return 0;
     }
     function V(e, t, n) {
      var i = r === rn || (r === an ? Go(e) === Go(t) : Xo(e) <= Xo(t));
      if (i) {
       var a;
       if (a = A(Jo(t), Jo(e), n)) {
        var o = $l([ Uo(e) ], [ Uo(t) ]);
        return a & A(gf(Ko(e), o), Ko(t), n);
       }
      }
      return 0;
     }
     function W(t, n, i) {
      if (r === an) {
       return $(t, n);
      }
      var a = r === en && !Dp(t) && !Sd(t) && !Id(t);
      var o = vp(t, n, a);
      if (o) {
       if (i) {
        C(e.Diagnostics.Property_0_is_missing_in_type_1, xi(o), Si(t));
       }
       return 0;
      }
      if (Dp(n)) {
       for (var s = 0, c = rs(t); s < c.length; s++) {
        var u = c[s];
        if (!ts(n, u.escapedName)) {
         var l = xa(u);
         if (!(l === ae || l === oe)) {
          if (i) {
           C(e.Diagnostics.Property_0_does_not_exist_on_type_1, xi(u), Si(n));
          }
          return 0;
         }
        }
       }
      }
      var f = -1;
      if (Id(n)) {
       var d = Od(n);
       if (d) {
        if (!Id(t)) {
         return 0;
        }
        var p = Od(t);
        if (p && !A(p, d, i)) {
         if (i) {
          C(e.Diagnostics.Rest_signatures_are_incompatible);
         }
         return 0;
        }
        var m = Tc(n) - 1;
        var _ = Tc(t) - (p ? 1 : 0);
        for (var g = m; g < _; g++) {
         var h = A(t.typeArguments[g], d, i);
         if (!h) {
          if (i) {
           C(e.Diagnostics.Property_0_is_incompatible_with_rest_element_type, "" + g);
          }
          return 0;
         }
         f &= h;
        }
       }
      }
      var v = es(n);
      for (var y = 0, b = v; y < b.length; y++) {
       var x = b[y];
       if (!(x.flags & 4194304)) {
        var u = Ds(t, x.escapedName);
        if (u && u !== x) {
         if (Qf(t, u, xa(x))) {
          continue;
         }
         var k = e.getDeclarationModifierFlagsFromSymbol(u);
         var S = e.getDeclarationModifierFlagsFromSymbol(x);
         if (k & 8 || S & 8) {
          var w = u.valueDeclaration !== x.valueDeclaration;
          if (e.getCheckFlags(u) & 256 && w) {
           if (i) {
            C(e.Diagnostics.Property_0_has_conflicting_declarations_and_is_inaccessible_in_type_1, xi(u), Si(t));
           }
           return 0;
          }
          if (w) {
           if (i) {
            if (k & 8 && S & 8) {
             C(e.Diagnostics.Types_have_separate_declarations_of_a_private_property_0, xi(x));
            } else {
             C(e.Diagnostics.Property_0_is_private_in_type_1_but_not_in_type_2, xi(x), Si(k & 8 ? t : n), Si(k & 8 ? n : t));
            }
           }
           return 0;
          }
         } else if (S & 16) {
          if (!ud(u, x)) {
           if (i) {
            C(e.Diagnostics.Property_0_is_protected_but_type_1_is_not_a_class_derived_from_2, xi(x), Si(sd(u) || t), Si(sd(x) || n));
           }
           return 0;
          }
         } else if (k & 16) {
          if (i) {
           C(e.Diagnostics.Property_0_is_protected_in_type_1_but_public_in_type_2, xi(x), Si(t), Si(n));
          }
          return 0;
         }
         var h = A(xa(u), xa(x), i);
         if (!h) {
          if (i) {
           C(e.Diagnostics.Types_of_property_0_are_incompatible, xi(x));
          }
          return 0;
         }
         f &= h;
         if (r !== rn && u.flags & 16777216 && !(x.flags & 16777216)) {
          if (i) {
           C(e.Diagnostics.Property_0_is_optional_in_type_1_but_required_in_type_2, xi(x), Si(t), Si(n));
          }
          return 0;
         }
        }
       }
      }
      return f;
     }
     function H(t) {
      if (t.flags & 131072) {
       var n = Zo(t);
       return n.callSignatures.length === 0 && n.constructSignatures.length === 0 && !n.stringIndexInfo && !n.numberIndexInfo && n.properties.length > 0 && e.every(n.properties, function(e) {
        return !!(e.flags & 16777216);
       });
      }
      if (t.flags & 524288) {
       return e.every(t.types, H);
      }
      return false;
     }
     function G(t, n) {
      var r = !!(e.getObjectFlags(t) & 4096);
      for (var i = 0, a = rs(t); i < a.length; i++) {
       var o = a[i];
       if (Xg(n, o.escapedName, r)) {
        return true;
       }
      }
      return false;
     }
     function $(e, t) {
      if (!(e.flags & 131072 && t.flags & 131072)) {
       return 0;
      }
      var n = es(e);
      var r = es(t);
      if (n.length !== r.length) {
       return 0;
      }
      var i = -1;
      for (var a = 0, o = n; a < o.length; a++) {
       var s = o[a];
       var c = ts(t, s.escapedName);
       if (!c) {
        return 0;
       }
       var u = pd(s, c, A);
       if (!u) {
        return 0;
       }
       i &= u;
      }
      return i;
     }
     function X(t, n, i, a) {
      if (r === an) {
       return Y(t, n, i);
      }
      if (n === De || t === De) {
       return -1;
      }
      var o = Es(t, i);
      var s = Es(n, i);
      if (i === 1 && o.length && s.length) {
       if (e.isAbstractConstructorType(t) && !e.isAbstractConstructorType(n)) {
        if (a) {
         C(e.Diagnostics.Cannot_assign_an_abstract_constructor_type_to_a_non_abstract_constructor_type);
        }
        return 0;
       }
       if (!ie(o[0], s[0], a)) {
        return 0;
       }
      }
      var u = -1;
      var l = c;
      if (e.getObjectFlags(t) & 64 && e.getObjectFlags(n) & 64 && t.symbol === n.symbol) {
       for (var f = 0; f < s.length; f++) {
        var d = Q(o[f], s[f], true, a);
        if (!d) {
         return 0;
        }
        u &= d;
       }
      } else if (o.length === 1 && s.length === 1) {
       var p = r === rn || !!T.noStrictGenericChecks;
       u = Q(o[0], s[0], p, a);
      } else {
       e: for (var m = 0, _ = s; m < _.length; m++) {
        var g = _[m];
        var h = a;
        for (var v = 0, y = o; v < y.length; v++) {
         var b = y[v];
         var d = Q(b, g, true, h);
         if (d) {
          u &= d;
          c = l;
          continue e;
         }
         h = false;
        }
        if (h) {
         C(e.Diagnostics.Type_0_provides_no_match_for_the_signature_1, Si(t), ki(g, undefined, undefined, i));
        }
        return 0;
       }
      }
      return u;
     }
     function Q(e, t, n, r) {
      return Jf(n ? uc(e) : e, n ? uc(t) : t, 0, false, r, C, A);
     }
     function Y(e, t, n) {
      var r = Es(e, n);
      var i = Es(t, n);
      if (r.length !== i.length) {
       return 0;
      }
      var a = -1;
      for (var o = 0; o < r.length; o++) {
       var s = _d(r[o], i[o], false, false, false, A);
       if (!s) {
        return 0;
       }
       a &= s;
      }
      return a;
     }
     function Z(t, n, r, i) {
      var a = -1;
      for (var o = 0, s = es(t); o < s.length; o++) {
       var c = s[o];
       if (Qf(t, c, undefined)) {
        continue;
       }
       if (c.nameType && c.nameType.flags & 2048) {
        continue;
       }
       if (r === 0 || ug(c.escapedName)) {
        var u = A(xa(c), n, i);
        if (!u) {
         if (i) {
          C(e.Diagnostics.Property_0_is_incompatible_with_index_signature, xi(c));
         }
         return 0;
        }
        a &= u;
       }
      }
      return a;
     }
     function ee(t, n, r) {
      var i = A(t.type, n.type, r);
      if (!i && r) {
       C(e.Diagnostics.Index_signatures_are_incompatible);
      }
      return i;
     }
     function te(t, n, i, a, o) {
      if (r === an) {
       return ne(t, n, i);
      }
      var s = Fs(n, i);
      if (!s || s.type.flags & 3 && !a) {
       return -1;
      }
      var c = Fs(t, i) || i === 1 && Fs(t, 0);
      if (c) {
       return ee(c, s, o);
      }
      if (Yo(t)) {
       return i === 0 && A(Ko(t), s.type, o);
      }
      if (Vd(t)) {
       var u = -1;
       if (i === 0) {
        var l = Fs(t, 1);
        if (l) {
         u = ee(l, s, o);
        }
       }
       if (u) {
        u &= Z(t, s.type, i, o);
       }
       return u;
      }
      if (o) {
       C(e.Diagnostics.Index_signature_is_missing_in_type_0, Si(t));
      }
      return 0;
     }
     function ne(e, t, n) {
      var r = Fs(t, n);
      var i = Fs(e, n);
      if (!i && !r) {
       return -1;
      }
      if (i && r && i.isReadonly === r.isReadonly) {
       return A(i.type, r.type);
      }
      return 0;
     }
     function ie(t, n, r) {
      if (!t.declaration || !n.declaration) {
       return true;
      }
      var i = e.getSelectedModifierFlags(t.declaration, 24);
      var a = e.getSelectedModifierFlags(n.declaration, 24);
      if (a === 8) {
       return true;
      }
      if (a === 16 && i !== 8) {
       return true;
      }
      if (a !== 16 && !i) {
       return true;
      }
      if (r) {
       C(e.Diagnostics.Cannot_assign_a_0_constructor_type_to_a_1_constructor_type, Ei(i), Ei(a));
      }
      return false;
     }
    }
    function Zf(t, n, r) {
     var i = Cc(t, e.map(t.typeParameters, function(e) {
      return e === n ? r : e;
     }));
     i.objectFlags |= 8192;
     return i;
    }
    function ed(t) {
     if (!P) {
      return e.emptyArray;
     }
     var n = t.typeParameters || e.emptyArray;
     var r = t.variances;
     if (!r) {
      if (t === Ge || t === $e) {
       r = [ 1 ];
      } else {
       t.variances = e.emptyArray;
       r = [];
       for (var i = 0, a = n; i < a.length; i++) {
        var o = a[i];
        var s = Zf(t, o, Ae);
        var c = Zf(t, o, Fe);
        var u = (Tf(c, s) ? 1 : 0) | (Tf(s, c) ? 2 : 0);
        if (u === 3 && Tf(Zf(t, o, Pe), s)) {
         u = 4;
        }
        r.push(u);
       }
      }
      t.variances = r;
     }
     return r;
    }
    function td(e, t) {
     for (var n = 0; n < t.length; n++) {
      if (t[n] === 1 && e.typeArguments[n].flags & 4096) {
       return true;
      }
     }
     return false;
    }
    function nd(e) {
     return e.flags & 65536 && !ss(e);
    }
    function rd(t) {
     return !!(e.getObjectFlags(t) & 4) && e.some(t.typeArguments, function(e) {
      return nd(e) || rd(e);
     });
    }
    function id(e, t, n) {
     if (n === void 0) {
      n = 0;
     }
     var r = "" + e.target.id;
     for (var i = 0, a = e.typeArguments; i < a.length; i++) {
      var o = a[i];
      if (nd(o)) {
       var s = t.indexOf(o);
       if (s < 0) {
        s = t.length;
        t.push(o);
       }
       r += "=" + s;
      } else if (n < 4 && rd(o)) {
       r += "<" + id(o, t, n + 1) + ">";
      } else {
       r += "-" + o.id;
      }
     }
     return r;
    }
    function ad(e, t, n) {
     if (n === an && e.id > t.id) {
      var r = e;
      e = t;
      t = r;
     }
     if (rd(e) && rd(t)) {
      var i = [];
      return id(e, i) + "," + id(t, i);
     }
     return e.id + "," + t.id;
    }
    function od(t, n) {
     if (e.getCheckFlags(t) & 6) {
      for (var r = 0, i = t.containingType.types; r < i.length; r++) {
       var a = i[r];
       var o = Ds(a, t.escapedName);
       var s = o && od(o, n);
       if (s) {
        return s;
       }
      }
      return undefined;
     }
     return n(t);
    }
    function sd(e) {
     return e.parent && e.parent.flags & 32 ? Ya(Wr(e)) : undefined;
    }
    function cd(e, t) {
     return od(e, function(e) {
      var n = sd(e);
      return n ? wa(n, t) : false;
     });
    }
    function ud(t, n) {
     return !od(n, function(n) {
      return e.getDeclarationModifierFlagsFromSymbol(n) & 16 ? !cd(t, sd(n)) : false;
     });
    }
    function ld(t, n) {
     return od(n, function(n) {
      return e.getDeclarationModifierFlagsFromSymbol(n) & 16 ? !wa(t, sd(n)) : false;
     }) ? undefined : t;
    }
    function fd(e, t, n) {
     if (n >= 5 && e.flags & 131072) {
      var r = e.symbol;
      if (r) {
       var i = 0;
       for (var a = 0; a < n; a++) {
        var o = t[a];
        if (o.flags & 131072 && o.symbol === r) {
         i++;
         if (i >= 5) return true;
        }
       }
      }
     }
     return false;
    }
    function dd(e, t) {
     return pd(e, t, wf) !== 0;
    }
    function pd(t, n, r) {
     if (t === n) {
      return -1;
     }
     var i = e.getDeclarationModifierFlagsFromSymbol(t) & 24;
     var a = e.getDeclarationModifierFlagsFromSymbol(n) & 24;
     if (i !== a) {
      return 0;
     }
     if (i) {
      if (Ak(t) !== Ak(n)) {
       return 0;
      }
     } else {
      if ((t.flags & 16777216) !== (n.flags & 16777216)) {
       return 0;
      }
     }
     if (Sy(t) !== Sy(n)) {
      return 0;
     }
     return r(xa(t), xa(n));
    }
    function md(e, t, n) {
     var r = Zv(e);
     var i = Zv(t);
     var a = ey(e);
     var o = ey(t);
     var s = ny(e);
     var c = ny(t);
     if (r === i && a === o && s === c) {
      return true;
     }
     var u = s ? 1 : 0;
     var l = c ? 1 : 0;
     if (n && a <= o && (u > l || u === l && r >= i)) {
      return true;
     }
     return false;
    }
    function _d(t, n, r, i, a, o) {
     if (t === n) {
      return -1;
     }
     if (!md(t, n, r)) {
      return 0;
     }
     if (e.length(t.typeParameters) !== e.length(n.typeParameters)) {
      return 0;
     }
     t = uc(t);
     n = uc(n);
     var s = -1;
     if (!i) {
      var c = Ys(t);
      if (c) {
       var u = Ys(n);
       if (u) {
        var l = o(c, u);
        if (!l) {
         return 0;
        }
        s &= l;
       }
      }
     }
     var f = Zv(n);
     for (var d = 0; d < f; d++) {
      var p = $v(t, d);
      var m = $v(n, d);
      var l = o(p, m);
      if (!l) {
       return 0;
      }
      s &= l;
     }
     if (!a) {
      var _ = ec(t);
      var g = ec(n);
      s &= _ !== undefined || g !== undefined ? gd(_, g, o) : o(tc(t), tc(n));
     }
     return s;
    }
    function gd(e, t, n) {
     return e === undefined || t === undefined || !zu(e, t) ? 0 : n(e.type, t.type);
    }
    function hd(e) {
     var t;
     for (var n = 0, r = e; n < r.length; n++) {
      var i = r[n];
      var a = Nd(i);
      if (!t) {
       t = a;
      }
      if (a === i || a !== t) {
       return false;
      }
     }
     return true;
    }
    function vd(t) {
     return hd(t) ? Ru(t) : e.reduceLeft(t, function(e, t) {
      return Df(e, t) ? t : e;
     });
    }
    function yd(t) {
     if (!F) {
      return vd(t);
     }
     var n = e.filter(t, function(e) {
      return !(e.flags & 24576);
     });
     return n.length ? qd(vd(n), Ld(t) & 24576) : Ru(t, 2);
    }
    function bd(t) {
     return e.reduceLeft(t, function(e, t) {
      return Df(t, e) ? t : e;
     });
    }
    function xd(t) {
     return !!(e.getObjectFlags(t) & 4) && t.target === Ge;
    }
    function kd(t) {
     return e.getObjectFlags(t) & 4 && (t.target === Ge || t.target === $e) || !(t.flags & 24576) && Tf(t, rt);
    }
    function Sd(e) {
     var t = xd(e) ? e.typeArguments[0] : undefined;
     return t === oe || t === ve;
    }
    function wd(e) {
     return Id(e) || !!Ds(e, "0");
    }
    function Cd(e, t) {
     return Id(e) ? t < Md(e) ? e.typeArguments[t] : Od(e) : qi(e, "" + t);
    }
    function Dd(e) {
     return !(e.flags & (27072 | 32768));
    }
    function Td(e) {
     return !!(e.flags & 27072);
    }
    function Ed(t) {
     return t.flags & 16 ? true : t.flags & 262144 ? t.flags & 512 ? true : e.every(t.types, Td) : Td(t);
    }
    function Nd(t) {
     return t.flags & 512 ? Ha(t) : t.flags & 64 ? ue : t.flags & 128 ? le : t.flags & 256 ? pe : t.flags & 262144 ? Ru(e.sameMap(t.types, Nd)) : t;
    }
    function Ad(t) {
     return t.flags & 512 ? Ha(t) : t.flags & 64 && t.flags & 33554432 ? ue : t.flags & 128 && t.flags & 33554432 ? le : t.flags & 256 ? pe : t.flags & 262144 ? Ru(e.sameMap(t.types, Ad)) : t;
    }
    function Fd(t) {
     return t.flags & 2048 ? me : t.flags & 262144 ? Ru(e.sameMap(t.types, Fd)) : t;
    }
    function Pd(e, t) {
     if (!ab(e, t)) {
      e = Fd(Ad(e));
     }
     return e;
    }
    function Id(t) {
     return !!(e.getObjectFlags(t) & 4 && t.target.objectFlags & 8);
    }
    function Od(e) {
     return e.target.hasRestElement ? e.typeArguments[e.target.typeParameters.length - 1] : undefined;
    }
    function Md(e) {
     return Tc(e) - (e.target.hasRestElement ? 1 : 0);
    }
    function Ld(e) {
     var t = 0;
     for (var n = 0, r = e; n < r.length; n++) {
      var i = r[n];
      t |= Rd(i);
     }
     return t;
    }
    function Rd(e) {
     return e.flags & 262144 ? Ld(e.types) : e.flags & 64 ? e.value === "" ? 64 : 0 : e.flags & 128 ? e.value === 0 ? 128 : 0 : e.flags & 256 ? e === fe ? 256 : 0 : e.flags & 29148;
    }
    function Bd(e) {
     return Rd(e) & 29120 ? Sm(e, function(e) {
      return !(Rd(e) & 29120);
     }) : e;
    }
    function zd(e) {
     return wm(e, jd);
    }
    function jd(e) {
     return e.flags & 4 ? Dt : e.flags & 8 ? Tt : e.flags & 16 || e === fe ? fe : e.flags & (4096 | 8192 | 16384) || e.flags & 64 && e.value === "" || e.flags & 128 && e.value === 0 ? e : ge;
    }
    function qd(e, t) {
     var n = t & ~e.flags & (8192 | 16384);
     return n === 0 ? e : n === 8192 ? Ru([ e, ae ]) : n === 16384 ? Ru([ e, se ]) : Ru([ e, ae, se ]);
    }
    function Ud(t) {
     e.Debug.assert(F);
     return t.flags & 8192 ? t : Ru([ t, ae ]);
    }
    function Jd(e) {
     if (!it) {
      it = Xc("NonNullable", 524288, undefined) || Y;
     }
     if (it !== Y) {
      return Nc(it, [ e ]);
     }
     return Qp(e, 524288);
    }
    function Kd(e) {
     return F ? Jd(e) : e;
    }
    function Vd(e) {
     return e.symbol && (e.symbol.flags & (4096 | 2048 | 512)) !== 0 && !KS(e);
    }
    function Wd(e, t) {
     var n = Sn(e.flags, e.escapedName);
     n.declarations = e.declarations;
     n.parent = e.parent;
     n.type = t;
     n.target = e;
     if (e.valueDeclaration) {
      n.valueDeclaration = e.valueDeclaration;
     }
     if (e.nameType) {
      n.nameType = e.nameType;
     }
     return n;
    }
    function Hd(t, n) {
     var r = e.createSymbolTable();
     for (var i = 0, a = es(t); i < a.length; i++) {
      var o = a[i];
      var s = xa(o);
      var c = n(s);
      r.set(o.escapedName, c === s ? o : Wd(o, c));
     }
     return r;
    }
    function Gd(e) {
     if (!(Dp(e) && e.flags & 33554432)) {
      return e;
     }
     var t = e.regularType;
     if (t) {
      return t;
     }
     var n = e;
     var r = Hd(e, Gd);
     var i = oi(n.symbol, r, n.callSignatures, n.constructSignatures, n.stringIndexInfo, n.numberIndexInfo);
     i.flags = n.flags & ~33554432;
     i.objectFlags |= 128;
     e.regularType = i;
     return i;
    }
    function $d(e, t, n) {
     return {
      parent: e,
      propertyName: t,
      siblings: n,
      resolvedProperties: undefined
     };
    }
    function Xd(e) {
     if (!e.siblings) {
      var t = [];
      for (var n = 0, r = Xd(e.parent); n < r.length; n++) {
       var i = r[n];
       if (Dp(i)) {
        var a = ts(i, e.propertyName);
        if (a) {
         km(xa(a), function(e) {
          t.push(e);
         });
        }
       }
      }
      e.siblings = t;
     }
     return e.siblings;
    }
    function Qd(t) {
     if (!t.resolvedProperties) {
      var n = e.createMap();
      for (var r = 0, i = Xd(t); r < i.length; r++) {
       var a = i[r];
       if (Dp(a) && !(e.getObjectFlags(a) & 1024)) {
        for (var o = 0, s = rs(a); o < s.length; o++) {
         var c = s[o];
         n.set(c.escapedName, c);
        }
       }
      }
      t.resolvedProperties = e.arrayFrom(n.values());
     }
     return t.resolvedProperties;
    }
    function Yd(e, t) {
     if (!(e.flags & 4)) {
      return e;
     }
     var n = xa(e);
     var r = t && $d(t, e.escapedName, undefined);
     var i = np(n, r);
     return i === n ? e : Wd(e, i);
    }
    function Zd(e) {
     var t = Q.get(e.escapedName);
     if (t) {
      return t;
     }
     var n = Wd(e, ae);
     n.flags |= 16777216;
     Q.set(e.escapedName, n);
     return n;
    }
    function ep(t, n) {
     var r = e.createSymbolTable();
     for (var i = 0, a = es(t); i < a.length; i++) {
      var o = a[i];
      r.set(o.escapedName, Yd(o, n));
     }
     if (n) {
      for (var s = 0, c = Qd(n); s < c.length; s++) {
       var o = c[s];
       if (!r.has(o.escapedName)) {
        r.set(o.escapedName, Zd(o));
       }
      }
     }
     var u = Fs(t, 0);
     var l = Fs(t, 1);
     return oi(t.symbol, r, e.emptyArray, e.emptyArray, u && hc(tp(u.type), u.isReadonly), l && hc(tp(l.type), l.isReadonly));
    }
    function tp(e) {
     return np(e, undefined);
    }
    function np(t, n) {
     if (t.flags & 402653184) {
      if (t.flags & 24576) {
       return ee;
      }
      if (Dp(t)) {
       return ep(t, n);
      }
      if (t.flags & 262144) {
       var r = n || $d(undefined, undefined, t.types);
       var i = e.sameMap(t.types, function(e) {
        return e.flags & 24576 ? e : np(e, r);
       });
       return Ru(i, e.some(i, Hf) ? 2 : 1);
      }
      if (xd(t) || Id(t)) {
       return Cc(t.target, e.sameMap(t.typeArguments, tp));
      }
     }
     return t;
    }
    function rp(t) {
     var n = false;
     if (t.flags & 134217728) {
      if (t.flags & 262144) {
       if (e.some(t.types, Hf)) {
        n = true;
       } else {
        for (var r = 0, i = t.types; r < i.length; r++) {
         var a = i[r];
         if (rp(a)) {
          n = true;
         }
        }
       }
      }
      if (xd(t) || Id(t)) {
       for (var o = 0, s = t.typeArguments; o < s.length; o++) {
        var a = s[o];
        if (rp(a)) {
         n = true;
        }
       }
      }
      if (Dp(t)) {
       for (var c = 0, u = es(t); c < u.length; c++) {
        var l = u[c];
        var a = xa(l);
        if (a.flags & 134217728) {
         if (!rp(a)) {
          bn(l.valueDeclaration, e.Diagnostics.Object_literal_s_property_0_implicitly_has_an_1_type, xi(l), Si(tp(a)));
         }
         n = true;
        }
       }
      }
     }
     return n;
    }
    function ip(t, n) {
     var r = Si(tp(n));
     var i;
     switch (t.kind) {
     case 202:
     case 152:
     case 151:
      i = e.Diagnostics.Member_0_implicitly_has_an_1_type;
      break;

     case 149:
      i = t.dotDotDotToken ? e.Diagnostics.Rest_parameter_0_implicitly_has_an_any_type : e.Diagnostics.Parameter_0_implicitly_has_an_1_type;
      break;

     case 184:
      i = e.Diagnostics.Binding_element_0_implicitly_has_an_1_type;
      break;

     case 237:
     case 154:
     case 153:
     case 156:
     case 157:
     case 194:
     case 195:
      if (!t.name) {
       bn(t, e.Diagnostics.Function_expression_which_lacks_return_type_annotation_implicitly_has_an_0_return_type, r);
       return;
      }
      i = e.Diagnostics._0_which_lacks_return_type_annotation_implicitly_has_an_1_return_type;
      break;

     case 179:
      bn(t, e.Diagnostics.Mapped_object_type_implicitly_has_an_any_template_type);
      return;

     default:
      i = e.Diagnostics.Variable_0_implicitly_has_an_1_type;
     }
     bn(t, i, e.declarationNameToString(e.getNameOfDeclaration(t)), r);
    }
    function ap(e, t) {
     if (a && O && t.flags & 134217728) {
      if (!rp(t)) {
       ip(e, t);
      }
     }
    }
    function op(e, t, n) {
     var r = Zv(e);
     var i = Zv(t);
     var a = ny(e);
     var o = ny(t);
     var s = a && o ? Math.max(r, i) : a ? i : o ? r : Math.min(r, i);
     var c = ty(t);
     var u = c ? Math.min(i - 1, s) : s;
     for (var l = 0; l < u; l++) {
      n($v(e, l), $v(t, l));
     }
     if (c) {
      n(Qv(e, u), c);
     }
    }
    function sp(e, t, n, r, i) {
     var a = i ? i.map(up) : e.map(cp);
     var o = s;
     o.typeParameters = e;
     o.signature = t;
     o.inferences = a;
     o.flags = n;
     o.compareTypes = r || Cf;
     return o;
     function s(e) {
      for (var t = 0; t < a.length; t++) {
       if (e === a[t].typeParameter) {
        a[t].isFixed = true;
        return Ap(o, t);
       }
      }
      return e;
     }
    }
    function cp(e) {
     return {
      typeParameter: e,
      candidates: undefined,
      contraCandidates: undefined,
      inferredType: undefined,
      priority: undefined,
      topLevel: true,
      isFixed: false
     };
    }
    function up(e) {
     return {
      typeParameter: e.typeParameter,
      candidates: e.candidates && e.candidates.slice(),
      contraCandidates: e.contraCandidates && e.contraCandidates.slice(),
      inferredType: e.inferredType,
      priority: e.priority,
      topLevel: e.topLevel,
      isFixed: e.isFixed
     };
    }
    function lp(t) {
     var n = e.getObjectFlags(t);
     return !!(t.flags & 15794176 || n & 4 && e.forEach(t.typeArguments, lp) || n & 16 && t.symbol && t.symbol.flags & (16 | 8192 | 2048 | 32) || n & 32 || t.flags & 786432 && fp(t));
    }
    function fp(t) {
     if (t.couldContainTypeVariables === undefined) {
      t.couldContainTypeVariables = e.some(t.types, lp);
     }
     return t.couldContainTypeVariables;
    }
    function dp(t, n) {
     return t === n || !!(t.flags & 786432) && e.some(t.types, function(e) {
      return dp(e, n);
     });
    }
    function pp(t) {
     var n = e.createSymbolTable();
     km(t, function(t) {
      if (!(t.flags & 64)) {
       return;
      }
      var r = e.escapeLeadingUnderscores(t.value);
      var i = Sn(4, r);
      i.type = ee;
      if (t.symbol) {
       i.declarations = t.symbol.declarations;
       i.valueDeclaration = t.symbol.valueDeclaration;
      }
      n.set(r, i);
     });
     var r = t.flags & 4 ? hc(ke, false) : undefined;
     return oi(undefined, n, e.emptyArray, e.emptyArray, r, undefined);
    }
    function mp(e, t) {
     var n = e.id + "," + t.id;
     if (Je.has(n)) {
      return Je.get(n);
     }
     Je.set(n, undefined);
     var r = _p(e, t);
     Je.set(n, r);
     return r;
    }
    function _p(e, t) {
     var n = rs(e);
     if (n.length === 0 && !Fs(e, 0)) {
      return undefined;
     }
     for (var r = 0, i = n; r < i.length; r++) {
      var a = i[r];
      if (xa(a).flags & 536870912) {
       return undefined;
      }
     }
     var o = ti(2048 | 16, undefined);
     o.source = e;
     o.mappedType = t;
     return o;
    }
    function gp(e) {
     return hp(e.propertyType, e.mappedType);
    }
    function hp(e, t) {
     var n = dl(Jo(t).type, Uo(t));
     var r = Ko(t);
     var i = cp(n);
     kp([ i ], e, r);
     return xp(i);
    }
    function vp(e, t, n) {
     var r = t.flags & 524288 ? ns(t) : es(t);
     for (var i = 0, a = r; i < a.length; i++) {
      var o = a[i];
      if (n || !(o.flags & 16777216)) {
       var s = Ds(e, o.escapedName);
       if (!s) {
        return o;
       }
      }
     }
     return undefined;
    }
    function yp(e, t) {
     return t.target.minLength > e.target.minLength || !Od(t) && (!!Od(e) || Md(t) < Md(e));
    }
    function bp(e, t) {
     return Id(e) && Id(t) && yp(e, t) || !!vp(e, t, false) && !!vp(t, e, false);
    }
    function xp(e) {
     return e.candidates ? Ru(e.candidates, 2) : e.contraCandidates ? Wu(e.contraCandidates) : ke;
    }
    function kp(t, n, r, i) {
     if (i === void 0) {
      i = 0;
     }
     var a;
     var o;
     var s = false;
     var c;
     u(n, r);
     function u(t, n) {
      if (!lp(n)) {
       return;
      }
      if (t === ne) {
       var p = c;
       c = t;
       u(n, n);
       c = p;
       return;
      }
      if (t.aliasSymbol && t.aliasTypeArguments && t.aliasSymbol === n.aliasSymbol) {
       var m = t.aliasTypeArguments;
       var _ = n.aliasTypeArguments;
       for (var g = 0; g < m.length; g++) {
        u(m[g], _[g]);
       }
       return;
      }
      if (t.flags & 262144 && n.flags & 262144 && !(t.flags & 512 && n.flags & 512) || t.flags & 524288 && n.flags & 524288) {
       if (t === n) {
        for (var h = 0, v = t.types; h < v.length; h++) {
         var y = v[h];
         u(y, y);
        }
        return;
       }
       var b = void 0;
       for (var x = 0, k = t.types; x < k.length; x++) {
        var y = k[x];
        if (Sp(y, n.types)) {
         (b || (b = [])).push(y);
         u(y, y);
        } else if (y.flags & (128 | 64)) {
         var S = Nd(y);
         if (Sp(S, n.types)) {
          (b || (b = [])).push(y, S);
         }
        }
       }
       if (b) {
        t = wp(t, b);
        n = wp(n, b);
       }
      }
      if (n.flags & 2162688) {
       if (t.flags & 536870912 || t === he) {
        return;
       }
       var w = f(n);
       if (w) {
        if (!w.isFixed) {
         if (w.priority === undefined || i < w.priority) {
          w.candidates = undefined;
          w.contraCandidates = undefined;
          w.priority = i;
         }
         if (i === w.priority) {
          var C = c || t;
          if (s) {
           w.contraCandidates = e.append(w.contraCandidates, C);
          } else {
           w.candidates = e.append(w.candidates, C);
          }
         }
         if (!(i & 8) && n.flags & 65536 && !dp(r, n)) {
          w.topLevel = false;
         }
        }
        return;
       }
      }
      if (e.getObjectFlags(t) & 4 && e.getObjectFlags(n) & 4 && t.target === n.target) {
       var m = t.typeArguments || e.emptyArray;
       var _ = n.typeArguments || e.emptyArray;
       var D = m.length < _.length ? m.length : _.length;
       var T = ed(t.target);
       for (var g = 0; g < D; g++) {
        if (g < T.length && T[g] === 2) {
         l(m[g], _[g]);
        } else {
         u(m[g], _[g]);
        }
       }
      } else if (t.flags & 1048576 && n.flags & 1048576) {
       s = !s;
       u(t.type, n.type);
       s = !s;
      } else if ((Ed(t) || t.flags & 4) && n.flags & 1048576) {
       var E = pp(t);
       s = !s;
       var N = i;
       i |= 16;
       u(E, n.type);
       i = N;
       s = !s;
      } else if (t.flags & 2097152 && n.flags & 2097152) {
       u(t.objectType, n.objectType);
       u(t.indexType, n.indexType);
      } else if (t.flags & 4194304 && n.flags & 4194304) {
       u(t.checkType, n.checkType);
       u(t.extendsType, n.extendsType);
       u(hl(t), hl(n));
       u(vl(t), vl(n));
      } else if (n.flags & 786432) {
       var _ = n.types;
       var A = 0;
       var F = void 0;
       for (var P = 0, I = _; P < I.length; P++) {
        var y = I[P];
        if (f(y)) {
         F = y;
         A++;
        } else {
         u(t, y);
        }
       }
       if (A === 1) {
        var N = i;
        i |= 1;
        u(t, F);
        i = N;
       }
      } else if (t.flags & 262144) {
       var m = t.types;
       for (var O = 0, M = m; O < M.length; O++) {
        var L = M[O];
        u(L, n);
       }
      } else {
       if (!(i & 32 && t.flags & (524288 | 15794176))) {
        t = ks(t);
       }
       if (t.flags & (131072 | 524288)) {
        var R = t.id + "," + n.id;
        if (o && o.get(R)) {
         return;
        }
        (o || (o = e.createMap())).set(R, true);
        var B = n.flags & 131072 && !(e.getObjectFlags(n) & 16 && n.symbol && n.symbol.flags & 32);
        var z = B ? n.symbol : undefined;
        if (z) {
         if (e.contains(a, z)) {
          return;
         }
         (a || (a = [])).push(z);
         d(t, n);
         a.pop();
        } else {
         d(t, n);
        }
       }
      }
     }
     function l(e, t) {
      if (P || i & 64) {
       s = !s;
       u(e, t);
       s = !s;
      } else {
       u(e, t);
      }
     }
     function f(e) {
      if (e.flags & 2162688) {
       for (var n = 0, r = t; n < r.length; n++) {
        var i = r[n];
        if (e === i.typeParameter) {
         return i;
        }
       }
      }
      return undefined;
     }
     function d(t, n) {
      if (Yo(t) && Yo(n)) {
       u(Jo(t), Jo(n));
       u(Ko(t), Ko(n));
      }
      if (e.getObjectFlags(n) & 32) {
       var r = Jo(n);
       if (r.flags & 1048576) {
        var a = f(r.type);
        if (a && !a.isFixed) {
         var o = mp(t, n);
         if (o) {
          var s = i;
          i |= 2;
          u(o, a.typeParameter);
          i = s;
         }
        }
        return;
       }
       if (r.flags & 65536) {
        var s = i;
        i |= 4;
        u(Zu(t), r);
        i = s;
        u(Ru(e.map(rs(t), xa)), Ko(n));
        return;
       }
      }
      if (!bp(t, n)) {
       p(t, n);
       m(t, n, 0);
       m(t, n, 1);
       g(t, n);
      }
     }
     function p(e, t) {
      if (Id(e) && Id(t)) {
       var n = Md(e);
       var r = Md(t);
       var i = Od(e);
       var a = Od(t);
       var o = r < n || i ? r : n;
       for (var s = 0; s < o; s++) {
        u(s < n ? e.typeArguments[s] : i, t.typeArguments[s]);
       }
       if (a) {
        var c = o < n ? e.typeArguments.slice(o, n) : [];
        if (i) {
         c.push(i);
        }
        if (c.length) {
         u(Ru(c), a);
        }
       }
      } else {
       var l = es(t);
       for (var f = 0, d = l; f < d.length; f++) {
        var p = d[f];
        var m = Ds(e, p.escapedName);
        if (m) {
         u(xa(m), xa(p));
        }
       }
      }
     }
     function m(e, t, n) {
      var r = Es(e, n);
      var i = Es(t, n);
      var a = r.length;
      var o = i.length;
      var s = a < o ? a : o;
      for (var c = 0; c < s; c++) {
       _(pc(r[a - s + c]), pc(i[o - s + c]));
      }
     }
     function _(e, t) {
      op(e, t, l);
      var n = ec(e);
      var r = ec(t);
      if (n && r && n.kind === r.kind) {
       u(n.type, r.type);
      } else {
       u(tc(e), tc(t));
      }
     }
     function g(e, t) {
      var n = Ps(t, 0);
      if (n) {
       var r = Ps(e, 0) || Is(e, 0);
       if (r) {
        u(r, n);
       }
      }
      var i = Ps(t, 1);
      if (i) {
       var r = Ps(e, 1) || Ps(e, 0) || Is(e, 1);
       if (r) {
        u(r, i);
       }
      }
     }
    }
    function Sp(e, t) {
     for (var n = 0, r = t; n < r.length; n++) {
      var i = r[n];
      if (Sf(i, e)) {
       return true;
      }
     }
     return false;
    }
    function wp(e, t) {
     var n = [];
     for (var r = 0, i = e.types; r < i.length; r++) {
      var a = i[r];
      if (!Sp(a, t)) {
       n.push(a);
      }
     }
     return e.flags & 262144 ? Ru(n) : Wu(n);
    }
    function Cp(e) {
     var t = ss(e);
     return !!t && Iy(t, 32764 | 1048576);
    }
    function Dp(t) {
     return !!(e.getObjectFlags(t) & 128);
    }
    function Tp(t) {
     if (t.length > 1) {
      var n = e.filter(t, Dp);
      if (n.length) {
       var r = tp(Ru(n, 2));
       return e.concatenate(e.filter(t, function(e) {
        return !Dp(e);
       }), [ r ]);
      }
     }
     return t;
    }
    function Ep(e) {
     return e.priority & 28 ? Wu(e.contraCandidates) : bd(e.contraCandidates);
    }
    function Np(t, n, r) {
     var i = Tp(t.candidates);
     var a = Cp(t.typeParameter);
     var o = !a && t.topLevel && (t.isFixed || !dp(tc(r), t.typeParameter));
     var s = a ? e.sameMap(i, Ml) : o ? e.sameMap(i, Ad) : i;
     var c = n.flags & 1 || t.priority & 28 ? Ru(s, 2) : yd(s);
     return tp(c);
    }
    function Ap(t, n) {
     var r = t.inferences[n];
     var i = r.inferredType;
     if (!i) {
      var a = t.signature;
      if (a) {
       if (r.contraCandidates) {
        r.candidates = e.append(r.candidates, Ep(r));
        r.contraCandidates = undefined;
       }
       if (r.candidates) {
        i = Np(r, t, a);
       } else if (t.flags & 2) {
        i = he;
       } else {
        var o = ys(r.typeParameter);
        if (o) {
         i = gf(o, ef(Ql(t.signature.typeParameters, n), t));
        } else {
         i = Fp(!!(t.flags & 4));
        }
       }
      } else {
       i = xp(r);
      }
      r.inferredType = i;
      var s = ss(r.typeParameter);
      if (s) {
       var c = gf(s, t);
       if (!t.compareTypes(i, xo(c, i))) {
        r.inferredType = i = c;
       }
      }
     }
     return i;
    }
    function Fp(e) {
     return e ? ee : ke;
    }
    function Pp(e) {
     var t = [];
     for (var n = 0; n < e.inferences.length; n++) {
      t.push(Ap(e, n));
     }
     return t;
    }
    function Ip(t) {
     var n = Ln(t);
     if (!n.resolvedSymbol) {
      n.resolvedSymbol = !e.nodeIsMissing(t) && qn(t, t.escapedText, 67216319 | 1048576, e.Diagnostics.Cannot_find_name_0, t, !e.isWriteOnlyAccess(t), false, e.Diagnostics.Cannot_find_name_0_Did_you_mean_1) || Y;
     }
     return n.resolvedSymbol;
    }
    function Op(t) {
     return !!e.findAncestor(t, function(e) {
      return e.kind === 165 ? true : e.kind === 71 || e.kind === 146 ? false : "quit";
     });
    }
    function Mp(t) {
     if (t.kind === 71) {
      var n = Ip(t);
      return n !== Y ? (Qm(t) ? "@" : "") + u(n) : undefined;
     }
     if (t.kind === 99) {
      return "0";
     }
     if (t.kind === 187) {
      var r = Mp(t.expression);
      return r && r + "." + e.idText(t.name);
     }
     if (t.kind === 184) {
      var i = t.parent.parent;
      var r = i.kind === 184 ? Mp(i) : i.initializer && Mp(i.initializer);
      var a = Lp(t);
      var o = r && a && r + "." + a;
      return o;
     }
     return undefined;
    }
    function Lp(t) {
     var n = t.parent;
     if (n.kind === 182) {
      var r = t.propertyName || t.name;
      switch (r.kind) {
      case 71:
       return e.idText(r);

      case 147:
       return e.isStringOrNumericLiteral(r.expression) ? r.expression.text : undefined;

      case 9:
      case 8:
       return r.text;

      default:
       e.Debug.fail("Unexpected name kind for binding element name");
      }
     } else {
      return "" + n.elements.indexOf(t);
     }
    }
    function Rp(e, t) {
     switch (e.kind) {
     case 71:
      return t.kind === 71 && Ip(e) === Ip(t) || (t.kind === 235 || t.kind === 184) && $r(Ip(e)) === Vr(t);

     case 99:
      return t.kind === 99;

     case 97:
      return t.kind === 97;

     case 187:
      return t.kind === 187 && e.name.escapedText === t.name.escapedText && Rp(e.expression, t.expression);

     case 184:
      if (t.kind !== 187) return false;
      var n = t;
      if (n.name.escapedText !== Lp(e)) return false;
      if (e.parent.parent.kind === 184 && Rp(e.parent.parent, n.expression)) {
       return true;
      }
      if (e.parent.parent.kind === 235) {
       var r = e.parent.parent.initializer;
       return !!r && Rp(r, n.expression);
      }
     }
     return false;
    }
    function Bp(e, t) {
     while (e.kind === 187) {
      e = e.expression;
      if (Rp(e, t)) {
       return true;
      }
     }
     return false;
    }
    function zp(e, t) {
     return t.kind === 187 && Bp(e, t.expression) && qp(jp(t.expression), t.name.escapedText);
    }
    function jp(e) {
     if (e.kind === 71) {
      return xa(Ip(e));
     }
     if (e.kind === 187) {
      var t = jp(e.expression);
      return t && qi(t, e.name.escapedText);
     }
     return undefined;
    }
    function qp(t, n) {
     if (t && t.flags & 262144) {
      var r = ws(t, n);
      if (r && e.getCheckFlags(r) & 2) {
       if (r.isDiscriminantProperty === undefined) {
        r.isDiscriminantProperty = !!(r.checkFlags & 32) && Ed(xa(r));
       }
       return r.isDiscriminantProperty;
      }
     }
     return false;
    }
    function Up(e, t) {
     var n;
     for (var r = 0, i = e; r < i.length; r++) {
      var a = i[r];
      if (qp(t, a.escapedName)) {
       if (n) {
        n.push(a);
        continue;
       }
       n = [ a ];
      }
     }
     return n;
    }
    function Jp(e, t) {
     return Rp(e, t) || Bp(e, t);
    }
    function Kp(e, t) {
     if (e.arguments) {
      for (var n = 0, r = e.arguments; n < r.length; n++) {
       var i = r[n];
       if (Jp(t, i)) {
        return true;
       }
      }
     }
     if (e.expression.kind === 187 && Jp(t, e.expression.expression)) {
      return true;
     }
     return false;
    }
    function Vp(e) {
     if (!e.id) {
      e.id = s;
      s++;
     }
     return e.id;
    }
    function Wp(e, t) {
     if (!(e.flags & 262144)) {
      return Tf(e, t);
     }
     for (var n = 0, r = e.types; n < r.length; n++) {
      var i = r[n];
      if (Tf(i, t)) {
       return true;
      }
     }
     return false;
    }
    function Hp(e, t) {
     if (e !== t) {
      if (t.flags & 32768) {
       return t;
      }
      var n = Sm(e, function(e) {
       return Wp(t, e);
      });
      if (!(n.flags & 32768)) {
       return n;
      }
     }
     return e;
    }
    function Gp(e) {
     var t = 0;
     for (var n = 0, r = e; n < r.length; n++) {
      var i = r[n];
      t |= Xp(i);
     }
     return t;
    }
    function $p(e) {
     var t = Zo(e);
     return !!(t.callSignatures.length || t.constructSignatures.length || t.members.get("bind") && Df(e, He));
    }
    function Xp(e) {
     var t = e.flags;
     if (t & 4) {
      return F ? 4079361 : 4194049;
     }
     if (t & 64) {
      var n = e.value === "";
      return F ? n ? 3030785 : 1982209 : n ? 3145473 : 4194049;
     }
     if (t & (8 | 32)) {
      return F ? 4079234 : 4193922;
     }
     if (t & 128) {
      var r = e.value === 0;
      return F ? r ? 3030658 : 1982082 : r ? 3145346 : 4193922;
     }
     if (t & 16) {
      return F ? 4078980 : 4193668;
     }
     if (t & 272) {
      return F ? e === fe ? 3030404 : 1981828 : e === fe ? 3145092 : 4193668;
     }
     if (t & 131072) {
      return $p(e) ? F ? 1970144 : 4181984 : F ? 1972176 : 4184016;
     }
     if (t & (4096 | 8192)) {
      return 2457472;
     }
     if (t & 16384) {
      return 2340752;
     }
     if (t & 3072) {
      return F ? 1981320 : 4193160;
     }
     if (t & 16777216) {
      return F ? 1972176 : 4184016;
     }
     if (t & 15794176) {
      return Xp(ps(e) || ke);
     }
     if (t & 786432) {
      return Gp(e.types);
     }
     return 4194303;
    }
    function Qp(e, t) {
     return Sm(e, function(e) {
      return (Xp(e) & t) !== 0;
     });
    }
    function Yp(e, t) {
     if (t) {
      var n = lb(t);
      return Ru([ Qp(e, 131072), n ]);
     }
     return e;
    }
    function Zp(t, n) {
     var r = e.getTextOfPropertyName(n);
     return Zm(qi(t, r), n) || ug(r) && Ps(t, 1) || Ps(t, 0) || re;
    }
    function em(e, t) {
     return wd(e) && Cd(e, t) || rk(e, undefined, false, false) || re;
    }
    function tm(e) {
     return bu(rk(e, undefined, false, false) || re);
    }
    function nm(e) {
     var t = e.parent.kind === 185 && rm(e.parent) || e.parent.kind === 273 && rm(e.parent.parent);
     return t ? Yp(cm(e), e.right) : lb(e.right);
    }
    function rm(e) {
     return e.parent.kind === 202 && e.parent.left === e || e.parent.kind === 225 && e.parent.initializer === e;
    }
    function im(e, t) {
     return em(cm(e), e.elements.indexOf(t));
    }
    function am(e) {
     return tm(cm(e.parent));
    }
    function om(e) {
     return Zp(cm(e.parent), e.name);
    }
    function sm(e) {
     return Yp(om(e), e.objectAssignmentInitializer);
    }
    function cm(e) {
     var t = e.parent;
     switch (t.kind) {
     case 224:
      return ue;

     case 225:
      return nk(t.expression, t.awaitModifier) || re;

     case 202:
      return nm(t);

     case 196:
      return ae;

     case 185:
      return im(t, e);

     case 206:
      return am(t);

     case 273:
      return om(t);

     case 274:
      return sm(t);
     }
     return re;
    }
    function um(e) {
     var t = e.parent;
     var n = dm(t.parent);
     var r = t.kind === 182 ? Zp(n, e.propertyName || e.name) : !e.dotDotDotToken ? em(n, t.elements.indexOf(e)) : tm(n);
     return Yp(r, e.initializer);
    }
    function lm(e) {
     var t = Ln(e);
     return t.resolvedType || lb(e);
    }
    function fm(e) {
     if (e.initializer) {
      return lm(e.initializer);
     }
     if (e.parent.parent.kind === 224) {
      return ue;
     }
     if (e.parent.parent.kind === 225) {
      return nk(e.parent.parent.expression, e.parent.parent.awaitModifier) || re;
     }
     return re;
    }
    function dm(e) {
     return e.kind === 235 ? fm(e) : um(e);
    }
    function pm(e) {
     return e.kind === 235 || e.kind === 184 ? dm(e) : cm(e);
    }
    function mm(e) {
     return e.kind === 235 && e.initializer && $i(e.initializer) || e.kind !== 184 && e.parent.kind === 202 && $i(e.parent.right);
    }
    function _m(e) {
     switch (e.kind) {
     case 193:
      return _m(e.expression);

     case 202:
      switch (e.operatorToken.kind) {
      case 58:
       return _m(e.left);

      case 26:
       return _m(e.right);
      }
     }
     return e;
    }
    function gm(e) {
     var t = e.parent;
     return t.kind === 193 || t.kind === 202 && t.operatorToken.kind === 58 && t.left === e || t.kind === 202 && t.operatorToken.kind === 26 && t.right === e ? gm(t) : e;
    }
    function hm(e) {
     if (e.kind === 269) {
      return Ml(lb(e.expression));
     }
     return ge;
    }
    function vm(e) {
     var t = Ln(e);
     if (!t.switchTypes) {
      t.switchTypes = [];
      for (var n = 0, r = e.caseBlock.clauses; n < r.length; n++) {
       var i = r[n];
       t.switchTypes.push(hm(i));
      }
     }
     return t.switchTypes;
    }
    function ym(t, n) {
     return t.flags & 262144 ? !e.forEach(t.types, function(t) {
      return !e.contains(n, t);
     }) : e.contains(n, t);
    }
    function bm(e, t) {
     return e === t || t.flags & 262144 && xm(e, t);
    }
    function xm(e, t) {
     if (e.flags & 262144) {
      for (var n = 0, r = e.types; n < r.length; n++) {
       var i = r[n];
       if (!Eu(t.types, i)) {
        return false;
       }
      }
      return true;
     }
     if (e.flags & 512 && Ha(e) === t) {
      return true;
     }
     return Eu(t.types, e);
    }
    function km(t, n) {
     return t.flags & 262144 ? e.forEach(t.types, n) : n(t);
    }
    function Sm(t, n) {
     if (t.flags & 262144) {
      var r = t.types;
      var i = e.filter(r, n);
      return i === r ? t : ju(i, t.flags & 67108864);
     }
     return n(t) ? t : ge;
    }
    function wm(e, t, n) {
     if (e.flags & 32768) {
      return e;
     }
     if (!(e.flags & 262144)) {
      return t(e);
     }
     var r = e.types;
     var i;
     var a;
     for (var o = 0, s = r; o < s.length; o++) {
      var c = s[o];
      var u = t(c);
      if (u) {
       if (!i) {
        i = u;
       } else if (!a) {
        a = [ i, u ];
       } else {
        a.push(u);
       }
      }
     }
     return a ? Ru(a, n ? 0 : 1) : i;
    }
    function Cm(e, t) {
     return Sm(e, function(e) {
      return (e.flags & t) !== 0;
     });
    }
    function Dm(e, t) {
     if (bm(ue, e) && Iy(t, 64) || bm(le, e) && Iy(t, 128)) {
      return wm(e, function(e) {
       return e.flags & 4 ? Cm(t, 4 | 64) : e.flags & 8 ? Cm(t, 8 | 128) : e;
      });
     }
     return e;
    }
    function Tm(e) {
     return e.flags === 0;
    }
    function Em(e) {
     return e.flags === 0 ? e.type : e;
    }
    function Nm(e, t) {
     return t ? {
      flags: 0,
      type: e
     } : e;
    }
    function Am(e) {
     var t = ti(256);
     t.elementType = e;
     return t;
    }
    function Fm(e) {
     return X[e.id] || (X[e.id] = Am(e));
    }
    function Pm(e, t) {
     var n = Nd(fb(t));
     return bm(n, e.elementType) ? e : Fm(Ru([ e.elementType, n ]));
    }
    function Im(e) {
     return e.flags & 32768 ? nt : bu(e.flags & 262144 ? Ru(e.types, 2) : e);
    }
    function Om(e) {
     return e.finalArrayType || (e.finalArrayType = Im(e.elementType));
    }
    function Mm(t) {
     return e.getObjectFlags(t) & 256 ? Om(t) : t;
    }
    function Lm(t) {
     return e.getObjectFlags(t) & 256 ? t.elementType : ge;
    }
    function Rm(t) {
     var n = false;
     for (var r = 0, i = t; r < i.length; r++) {
      var a = i[r];
      if (!(a.flags & 32768)) {
       if (!(e.getObjectFlags(a) & 256)) {
        return false;
       }
       n = true;
      }
     }
     return n;
    }
    function Bm(t, n) {
     return Rm(t) ? Fm(Ru(e.map(t, Lm))) : Ru(e.sameMap(t, Mm), n);
    }
    function zm(t) {
     var n = gm(t);
     var r = n.parent;
     var i = r.kind === 187 && (r.name.escapedText === "length" || r.parent.kind === 189 && e.isPushOrUnshiftIdentifier(r.name));
     var a = r.kind === 188 && r.expression === n && r.parent.kind === 202 && r.parent.operatorToken.kind === 58 && r.parent.left === r && !e.isAssignmentTarget(r.parent) && Oy(lb(r.argumentExpression), 168);
     return i || a;
    }
    function jm(e) {
     var t = Ln(e);
     if (t.maybeTypePredicate === undefined) {
      t.maybeTypePredicate = qm(e);
     }
     return t.maybeTypePredicate;
    }
    function qm(t) {
     if (t.expression.kind !== 97) {
      var n = ah(t.expression);
      if (n !== he) {
       var r = ks(n);
       return r !== re && e.some(Es(r, 0), Zs);
      }
     }
     return false;
    }
    function Um(t) {
     var n = e.findAncestor(t, e.isFunctionOrModuleBlock);
     var r = e.getSourceFileOfNode(t);
     var i = e.getSpanOfTokenAtPosition(r, n.statements.pos);
     Vt.add(e.createFileDiagnostic(r, i.start, i.length, e.Diagnostics.The_containing_function_or_module_body_is_too_large_for_control_flow_analysis));
    }
    function Jm(t, n, r, i, a) {
     if (r === void 0) {
      r = n;
     }
     var o;
     var s = 0;
     if (Ct) {
      return re;
     }
     if (!t.flowNode || !a && !(n.flags & 33492479)) {
      return n;
     }
     var c = wt;
     var u = Em(f(t.flowNode));
     wt = c;
     var l = e.getObjectFlags(u) & 256 && zm(t) ? tt : Mm(u);
     if (t.parent && t.parent.kind === 211 && Qp(l, 524288).flags & 32768) {
      return n;
     }
     return l;
     function f(e) {
      if (s === 2500) {
       Ct = true;
       Um(t);
       return re;
      }
      s++;
      while (true) {
       var a = e.flags;
       if (a & 1024) {
        for (var o = c; o < wt; o++) {
         if (jt[o] === e) {
          s--;
          return qt[o];
         }
        }
       }
       var u = void 0;
       if (a & 4096) {
        e.locked = true;
        u = f(e.antecedent);
        e.locked = false;
       } else if (a & 2048) {
        e = e.antecedent;
        continue;
       } else if (a & 16) {
        u = d(e);
        if (!u) {
         e = e.antecedent;
         continue;
        }
       } else if (a & 96) {
        u = m(e);
       } else if (a & 128) {
        u = _(e);
       } else if (a & 12) {
        if (e.antecedents.length === 1) {
         e = e.antecedents[0];
         continue;
        }
        u = a & 4 ? g(e) : h(e);
       } else if (a & 256) {
        u = p(e);
        if (!u) {
         e = e.antecedent;
         continue;
        }
       } else if (a & 2) {
        var l = e.container;
        if (l && l !== i && t.kind !== 187 && t.kind !== 99) {
         e = l.flowNode;
         continue;
        }
        u = r;
       } else {
        u = qx(n);
       }
       if (a & 1024) {
        jt[wt] = e;
        qt[wt] = u;
        wt++;
       }
       s--;
       return u;
      }
     }
     function d(r) {
      var i = r.node;
      if (Rp(t, i)) {
       if (e.getAssignmentTargetKind(i) === 2) {
        var a = f(r.antecedent);
        return Nm(Nd(Em(a)), Tm(a));
       }
       if (n === te || n === nt) {
        if (mm(i)) {
         return Fm(ge);
        }
        var o = Nd(pm(i));
        return Tf(o, n) ? o : tt;
       }
       if (n.flags & 262144) {
        return Hp(n, pm(i));
       }
       return n;
      }
      if (Bp(t, i)) {
       return n;
      }
      return undefined;
     }
     function p(r) {
      if (n === te || n === nt) {
       var i = r.node;
       var a = i.kind === 189 ? i.expression.expression : i.left.expression;
       if (Rp(t, _m(a))) {
        var o = f(r.antecedent);
        var s = Em(o);
        if (e.getObjectFlags(s) & 256) {
         var c = s;
         if (i.kind === 189) {
          for (var u = 0, l = i.arguments; u < l.length; u++) {
           var d = l[u];
           c = Pm(c, d);
          }
         } else {
          var p = lb(i.left.argumentExpression);
          if (Oy(p, 168)) {
           c = Pm(c, i.right);
          }
         }
         return c === s ? o : Nm(c, Tm(o));
        }
        return o;
       }
      }
      return undefined;
     }
     function m(e) {
      var t = f(e.antecedent);
      var n = Em(t);
      if (n.flags & 32768) {
       return t;
      }
      var r = (e.flags & 32) !== 0;
      var i = Mm(n);
      var a = A(i, e.expression, r);
      if (a === i) {
       return t;
      }
      var o = Tm(t);
      var s = o && a.flags & 32768 ? he : a;
      return Nm(s, o);
     }
     function _(e) {
      var n = f(e.antecedent);
      var r = Em(n);
      var i = e.switchStatement.expression;
      if (Rp(t, i)) {
       r = D(r, e.switchStatement, e.clauseStart, e.clauseEnd);
      } else if (v(i, r)) {
       r = y(r, i, function(t) {
        return D(t, e.switchStatement, e.clauseStart, e.clauseEnd);
       });
      }
      return Nm(r, Tm(n));
     }
     function g(t) {
      var i = [];
      var a = false;
      var o = false;
      for (var s = 0, c = t.antecedents; s < c.length; s++) {
       var u = c[s];
       if (u.flags & 2048 && u.lock.locked) {
        continue;
       }
       var l = f(u);
       var d = Em(l);
       if (d === n && n === r) {
        return d;
       }
       e.pushIfUnique(i, d);
       if (!bm(d, n)) {
        a = true;
       }
       if (Tm(l)) {
        o = true;
       }
      }
      return Nm(Bm(i, a ? 2 : 1), o);
     }
     function h(r) {
      var i = Vp(r);
      var a = Lt[i] || (Lt[i] = e.createMap());
      if (!o) {
       o = Mp(t);
       if (!o) {
        return n;
       }
      }
      var s = a.get(o);
      if (s) {
       return s;
      }
      for (var c = kt; c < St; c++) {
       if (Rt[c] === r && Bt[c] === o && zt[c].length) {
        return Nm(Bm(zt[c], 1), true);
       }
      }
      var u = [];
      var l = false;
      var d;
      Rt[St] = r;
      Bt[St] = o;
      zt[St] = u;
      for (var p = 0, m = r.antecedents; p < m.length; p++) {
       var _ = m[p];
       St++;
       var g = f(_);
       St--;
       if (!d) {
        d = g;
       }
       var h = Em(g);
       var v = a.get(o);
       if (v) {
        return v;
       }
       e.pushIfUnique(u, h);
       if (!bm(h, n)) {
        l = true;
       }
       if (h === n) {
        break;
       }
      }
      var y = Bm(u, l ? 2 : 1);
      if (Tm(d)) {
       return Nm(y, true);
      }
      a.set(o, y);
      return y;
     }
     function v(e, n) {
      return e.kind === 187 && n.flags & 262144 && Rp(t, e.expression) && qp(n, e.name.escapedText);
     }
     function y(e, t, n) {
      var r = t.name.escapedText;
      var i = qi(e, r);
      var a = i && n(i);
      return i === a ? e : Sm(e, function(e) {
       return Nf(qi(e, r), a);
      });
     }
     function b(e, r, i) {
      if (Rp(t, r)) {
       return Qp(e, i ? 1048576 : 2097152);
      }
      if (v(r, n)) {
       return y(e, r, function(e) {
        return Qp(e, i ? 1048576 : 2097152);
       });
      }
      if (zp(t, r)) {
       return n;
      }
      return e;
     }
     function x(e, t, n) {
      if (Fs(e, 0)) {
       return true;
      }
      var r = Ds(e, t);
      if (r) {
       return r.flags & 16777216 ? true : n;
      }
      return !n;
     }
     function k(t, n, r) {
      if (t.flags & (262144 | 131072) || t.flags & 65536 && t.isThisType) {
       var i = e.escapeLeadingUnderscores(n.text);
       return Sm(t, function(e) {
        return x(e, i, r);
       });
      }
      return t;
     }
     function S(r, i, a) {
      switch (i.operatorToken.kind) {
      case 58:
       return b(r, i.left, a);

      case 32:
      case 33:
      case 34:
      case 35:
       var o = i.operatorToken.kind;
       var s = _m(i.left);
       var c = _m(i.right);
       if (s.kind === 197 && e.isStringLiteralLike(c)) {
        return C(r, s, o, c, a);
       }
       if (c.kind === 197 && e.isStringLiteralLike(s)) {
        return C(r, c, o, s, a);
       }
       if (Rp(t, s)) {
        return w(r, o, c, a);
       }
       if (Rp(t, c)) {
        return w(r, o, s, a);
       }
       if (v(s, n)) {
        return y(r, s, function(e) {
         return w(e, o, c, a);
        });
       }
       if (v(c, n)) {
        return y(r, c, function(e) {
         return w(e, o, s, a);
        });
       }
       if (zp(t, s) || zp(t, c)) {
        return n;
       }
       break;

      case 93:
       return T(r, i, a);

      case 92:
       var u = _m(i.right);
       if (e.isStringLiteralLike(i.left) && Rp(t, u)) {
        return k(r, i.left, a);
       }
       break;

      case 26:
       return A(r, i.right, a);
      }
      return r;
     }
     function w(e, t, n, r) {
      if (e.flags & 1) {
       return e;
      }
      if (t === 33 || t === 35) {
       r = !r;
      }
      var i = lb(n);
      if (i.flags & 24576) {
       if (!F) {
        return e;
       }
       var a = t === 32 || t === 33;
       var o = a ? r ? 65536 : 524288 : i.flags & 16384 ? r ? 32768 : 262144 : r ? 16384 : 131072;
       return Qp(e, o);
      }
      if (e.flags & 16909315) {
       return e;
      }
      if (r) {
       var s = Sm(e, function(e) {
        return Af(e, i);
       });
       return s.flags & 32768 ? e : Dm(s, i);
      }
      if (Td(i)) {
       var c = Ml(i);
       return Sm(e, function(e) {
        return Ml(e) !== c;
       });
      }
      return e;
     }
     function C(e, r, i, a, o) {
      var s = _m(r.expression);
      if (!Rp(t, s)) {
       if (Bp(t, s)) {
        return n;
       }
       return e;
      }
      if (i === 33 || i === 35) {
       o = !o;
      }
      if (e.flags & 1 && a.text === "function") {
       return e;
      }
      if (o && !(e.flags & 262144)) {
       var c = a.text === "function" ? He : Xt.get(a.text);
       if (c) {
        if (Df(c, e)) {
         return c;
        }
        if (e.flags & 15794176) {
         var u = ps(e) || ee;
         if (Df(c, u)) {
          return Wu([ e, c ]);
         }
        }
       }
      }
      var l = o ? Gt.get(a.text) || 64 : $t.get(a.text) || 8192;
      return Qp(e, l);
     }
     function D(t, n, r, i) {
      var a = vm(n);
      if (!a.length) {
       return t;
      }
      var o = a.slice(r, i);
      var s = r === i || e.contains(o, ge);
      var c = Ru(o);
      var u = c.flags & 32768 ? ge : Dm(Sm(t, function(e) {
       return Af(c, e);
      }), c);
      if (!s) {
       return u;
      }
      var l = Sm(t, function(t) {
       return !(Td(t) && e.contains(a, Ml(t)));
      });
      return u.flags & 32768 ? l : Ru([ u, l ]);
     }
     function T(r, i, a) {
      var o = _m(i.left);
      if (!Rp(t, o)) {
       if (Bp(t, o)) {
        return n;
       }
       return r;
      }
      var s = lb(i.right);
      if (!Df(s, He)) {
       return r;
      }
      var c;
      var u = Ds(s, "prototype");
      if (u) {
       var l = xa(u);
       if (!Ui(l)) {
        c = l;
       }
      }
      if (Ui(r) && (c === We || c === He)) {
       return r;
      }
      if (!c) {
       var f = void 0;
       if (e.getObjectFlags(s) & 2) {
        f = so(s).declaredConstructSignatures;
       } else if (e.getObjectFlags(s) & 16) {
        f = Es(s, 1);
       }
       if (f && f.length) {
        c = Ru(e.map(f, function(e) {
         return tc(uc(e));
        }));
       }
      }
      if (c) {
       return E(r, c, a, Ef);
      }
      return r;
     }
     function E(e, t, n, r) {
      if (!n) {
       return Sm(e, function(e) {
        return !r(e, t);
       });
      }
      if (e.flags & 262144) {
       var i = Sm(e, function(e) {
        return r(e, t);
       });
       if (!(i.flags & 32768)) {
        return i;
       }
      }
      return Df(t, e) ? t : Tf(e, t) ? e : Tf(t, e) ? t : Wu([ e, t ]);
     }
     function N(r, i, a) {
      if (!Kp(i, t) || !jm(i)) {
       return r;
      }
      var o = Ev(i);
      var s = ec(o);
      if (!s) {
       return r;
      }
      if (Ui(r) && (s.type === We || s.type === He)) {
       return r;
      }
      if (e.isIdentifierTypePredicate(s)) {
       var c = i.arguments[s.parameterIndex - (o.thisParameter ? 1 : 0)];
       if (c) {
        if (Rp(t, c)) {
         return E(r, s.type, a, Df);
        }
        if (Bp(t, c)) {
         return n;
        }
       }
      } else {
       var u = e.skipParentheses(i.expression);
       if (u.kind === 188 || u.kind === 187) {
        var l = u;
        var f = e.skipParentheses(l.expression);
        if (Rp(t, f)) {
         return E(r, s.type, a, Df);
        }
        if (Bp(t, f)) {
         return n;
        }
       }
      }
      return r;
     }
     function A(e, t, n) {
      switch (t.kind) {
      case 71:
      case 99:
      case 97:
      case 187:
       return b(e, t, n);

      case 189:
       return N(e, t, n);

      case 193:
       return A(e, t.expression, n);

      case 202:
       return S(e, t, n);

      case 200:
       if (t.operator === 51) {
        return A(e, t.operand, !n);
       }
       break;
      }
      return e;
     }
    }
    function Km(t, n) {
     t = t.exportSymbol || t;
     if (n.kind === 71) {
      if (e.isRightSideOfQualifiedNameOrPropertyAccess(n)) {
       n = n.parent;
      }
      if (e.isExpressionNode(n) && !e.isAssignmentTarget(n)) {
       var r = lb(n);
       if ($r(Ln(n).resolvedSymbol) === t) {
        return r;
       }
      }
     }
     return xa(t);
    }
    function Vm(t) {
     return e.findAncestor(t.parent, function(t) {
      return e.isFunctionLike(t) && !e.getImmediatelyInvokedFunctionExpression(t) || t.kind === 243 || t.kind === 277 || t.kind === 152;
     });
    }
    function Wm(t) {
     var n = e.getRootDeclaration(t.valueDeclaration).parent;
     var r = Ln(n);
     if (!(r.flags & 4194304)) {
      r.flags |= 4194304;
      if (!Hm(n)) {
       Gm(n);
      }
     }
     return t.isAssigned || false;
    }
    function Hm(t) {
     return !!e.findAncestor(t.parent, function(t) {
      return e.isFunctionLike(t) && !!(Ln(t).flags & 4194304);
     });
    }
    function Gm(t) {
     if (t.kind === 71) {
      if (e.isAssignmentTarget(t)) {
       var n = Ip(t);
       if (n.valueDeclaration && e.getRootDeclaration(n.valueDeclaration).kind === 149) {
        n.isAssigned = true;
       }
      }
     } else {
      e.forEachChild(t, Gm);
     }
    }
    function $m(e) {
     return e.flags & 3 && (eh(e) & 2) !== 0 && xa(e) !== nt;
    }
    function Xm(e, t) {
     var n = F && t.kind === 149 && t.initializer && Rd(e) & 8192 && !(Rd(pb(t.initializer)) & 8192);
     return n ? Qp(e, 131072) : e;
    }
    function Qm(e) {
     var t = e.parent;
     return t.kind === 187 || t.kind === 189 && t.expression === e || t.kind === 188 && t.expression === e || t.kind === 184 && t.name === e && !!t.initializer;
    }
    function Ym(e) {
     return e.flags & 14745600 && Iy(ps(e) || ke, 24576);
    }
    function Zm(e, t) {
     if (e && Qm(t) && km(e, Ym)) {
      return wm(tp(e), ms);
     }
     return e;
    }
    function e_(e, t) {
     if (hr(e, 67216319) && !Op(t) && !aw(yr(e))) {
      xr(e);
     }
    }
    function t_(t) {
     var n = Ip(t);
     if (n === Y) {
      return re;
     }
     if (n === j) {
      var r = e.getContainingFunction(t);
      if (E < 2) {
       if (r.kind === 195) {
        bn(t, e.Diagnostics.The_arguments_object_cannot_be_referenced_in_an_arrow_function_in_ES3_and_ES5_Consider_using_a_standard_function_expression);
       } else if (e.hasModifier(r, 256)) {
        bn(t, e.Diagnostics.The_arguments_object_cannot_be_referenced_in_an_async_function_or_method_in_ES3_and_ES5_Consider_using_a_standard_function_or_method);
       }
      }
      Ln(r).flags |= 8192;
      return xa(n);
     }
     if (!(t.parent && e.isPropertyAccessExpression(t.parent) && t.parent.expression === t)) {
      e_(n, t);
     }
     var i = $r(n);
     var a = i.valueDeclaration;
     if (i.flags & 32) {
      if (a.kind === 238 && e.nodeIsDecorated(a)) {
       var r = e.getContainingClass(t);
       while (r !== undefined) {
        if (r === a && r.name !== t) {
         Ln(a).flags |= 8388608;
         Ln(t).flags |= 16777216;
         break;
        }
        r = e.getContainingClass(r);
       }
      } else if (a.kind === 207) {
       var r = e.getThisContainer(t, false);
       while (r.kind !== 277) {
        if (r.parent === a) {
         if (r.kind === 152 && e.hasModifier(r, 32)) {
          Ln(a).flags |= 8388608;
          Ln(t).flags |= 16777216;
         }
         break;
        }
        r = e.getThisContainer(r, false);
       }
      }
     }
     r_(t, n);
     var o = Zm(xa(i), t);
     var s = e.getAssignmentTargetKind(t);
     if (s) {
      if (!(i.flags & 3) && !(e.isInJavaScriptFile(t) && i.flags & 512)) {
       bn(t, e.Diagnostics.Cannot_assign_to_0_because_it_is_not_a_variable, xi(n));
       return re;
      }
      if (Sy(i)) {
       bn(t, e.Diagnostics.Cannot_assign_to_0_because_it_is_a_constant_or_a_read_only_property, xi(n));
       return re;
      }
     }
     var c = i.flags & 2097152;
     if (i.flags & 3) {
      if (s === 1) {
       return o;
      }
     } else if (c) {
      a = e.find(n.declarations, p);
     } else {
      return o;
     }
     if (!a) {
      return o;
     }
     var u = e.getRootDeclaration(a).kind === 149;
     var l = Vm(a);
     var f = Vm(t);
     var d = f !== l;
     var m = t.parent && t.parent.parent && e.isSpreadAssignment(t.parent) && rm(t.parent.parent);
     while (f !== l && (f.kind === 194 || f.kind === 195 || e.isObjectLiteralOrClassExpressionMethod(f)) && ($m(i) || u && !Wm(i))) {
      f = Vm(f);
     }
     var _ = u || c || d || m || o !== te && o !== nt && (!F || (o.flags & 3) !== 0 || Op(t) || t.parent.kind === 255) || t.parent.kind === 211 || a.kind === 235 && a.exclamationToken || a.flags & 4194304;
     var g = _ ? u ? Xm(o, a) : o : o === te || o === nt ? ae : Ud(o);
     var h = Jm(t, o, g, f, !_);
     if (o === te || o === nt) {
      if (h === te || h === nt) {
       if (O) {
        bn(e.getNameOfDeclaration(a), e.Diagnostics.Variable_0_implicitly_has_type_1_in_some_locations_where_its_type_cannot_be_determined, xi(n), Si(h));
        bn(t, e.Diagnostics.Variable_0_implicitly_has_an_1_type, xi(n), Si(h));
       }
       return qx(h);
      }
     } else if (!_ && !(Rd(o) & 8192) && Rd(h) & 8192) {
      bn(t, e.Diagnostics.Variable_0_is_used_before_being_assigned, xi(n));
      return o;
     }
     return s ? Nd(h) : h;
    }
    function n_(t, n) {
     return !!e.findAncestor(t, function(t) {
      return t === n ? "quit" : e.isFunctionLike(t);
     });
    }
    function r_(t, n) {
     if (E >= 2 || (n.flags & (2 | 32)) === 0 || n.valueDeclaration.parent.kind === 272) {
      return;
     }
     var r = e.getEnclosingBlockScopeContainer(n.valueDeclaration);
     var i = n_(t.parent, r);
     var a = r;
     var o = false;
     while (a && !e.nodeStartsNewLexicalEnvironment(a)) {
      if (e.isIterationStatement(a, false)) {
       o = true;
       break;
      }
      a = a.parent;
     }
     if (o) {
      if (i) {
       Ln(a).flags |= 65536;
      }
      if (r.kind === 223 && e.getAncestor(n.valueDeclaration, 236).parent === r && i_(t, r)) {
       Ln(n.valueDeclaration).flags |= 2097152;
      }
      Ln(n.valueDeclaration).flags |= 262144;
     }
     if (i) {
      Ln(n.valueDeclaration).flags |= 131072;
     }
    }
    function i_(t, n) {
     var r = t;
     while (r.parent.kind === 193) {
      r = r.parent;
     }
     var i = false;
     if (e.isAssignmentTarget(r)) {
      i = true;
     } else if (r.parent.kind === 200 || r.parent.kind === 201) {
      var a = r.parent;
      i = a.operator === 43 || a.operator === 44;
     }
     if (!i) {
      return false;
     }
     return !!e.findAncestor(r, function(e) {
      return e === n ? "quit" : e === n.statement;
     });
    }
    function a_(e, t) {
     Ln(e).flags |= 2;
     if (t.kind === 152 || t.kind === 155) {
      var n = t.parent;
      Ln(n).flags |= 4;
     } else {
      Ln(t).flags |= 4;
     }
    }
    function o_(t) {
     if (e.isSuperCall(t)) {
      return t;
     } else if (e.isFunctionLike(t)) {
      return undefined;
     }
     return e.forEachChild(t, o_);
    }
    function s_(e) {
     var t = Ln(e);
     if (t.hasSuperCall === undefined) {
      t.superCall = o_(e.body);
      t.hasSuperCall = t.superCall ? true : false;
     }
     return t.superCall;
    }
    function c_(e) {
     var t = Vr(e);
     var n = Ya(t);
     var r = Ma(n);
     return r === ce;
    }
    function u_(t, n, r) {
     var i = n.parent;
     var a = e.getEffectiveBaseTypeNode(i);
     if (a && !c_(i)) {
      var o = s_(n);
      if (!o || o.end > t.pos) {
       bn(t, r);
      }
     }
    }
    function l_(t) {
     var n = e.getThisContainer(t, true);
     var r = false;
     if (n.kind === 155) {
      u_(t, n, e.Diagnostics.super_must_be_called_before_accessing_this_in_the_constructor_of_a_derived_class);
     }
     if (n.kind === 195) {
      n = e.getThisContainer(n, false);
      r = E < 2;
     }
     switch (n.kind) {
     case 242:
      bn(t, e.Diagnostics.this_cannot_be_referenced_in_a_module_or_namespace_body);
      break;

     case 241:
      bn(t, e.Diagnostics.this_cannot_be_referenced_in_current_location);
      break;

     case 155:
      if (p_(t, n)) {
       bn(t, e.Diagnostics.this_cannot_be_referenced_in_constructor_arguments);
      }
      break;

     case 152:
     case 151:
      if (e.hasModifier(n, 32)) {
       bn(t, e.Diagnostics.this_cannot_be_referenced_in_a_static_property_initializer);
      }
      break;

     case 147:
      bn(t, e.Diagnostics.this_cannot_be_referenced_in_a_computed_property_name);
      break;
     }
     if (r) {
      a_(t, n);
     }
     var i = f_(t, n);
     if (!i && M) {
      bn(t, e.Diagnostics.this_implicitly_has_type_any_because_it_does_not_have_a_type_annotation);
     }
     return i || ee;
    }
    function f_(t, n) {
     if (n === void 0) {
      n = e.getThisContainer(t, false);
     }
     if (e.isFunctionLike(n) && (!S_(t) || e.getThisParameter(n))) {
      if (n.kind === 194 && n.parent.kind === 202 && e.getSpecialPropertyAssignmentKind(n.parent) === 3) {
       var r = n.parent.left.expression.expression;
       var i = pb(r).symbol;
       if (i && i.members && i.flags & 16) {
        return Jm(t, Iv(i));
       }
      }
      var a = pa(n) || v_(n);
      if (a) {
       return Jm(t, a);
      }
     }
     if (e.isClassLike(n.parent)) {
      var o = Vr(n.parent);
      var s = e.hasModifier(n, 32) ? xa(o) : Ya(o).thisType;
      return Jm(t, s);
     }
     if (e.isInJavaScriptFile(t)) {
      var s = d_(n);
      if (s && s !== re) {
       return Jm(t, s);
      }
     }
    }
    function d_(t) {
     var n = e.getJSDocType(t);
     if (n && n.kind === 287) {
      var r = n;
      if (r.parameters.length > 0 && r.parameters[0].name && r.parameters[0].name.escapedText === "this") {
       return Ul(r.parameters[0].type);
      }
     }
     var i = e.getJSDocThisTag(t);
     if (i && i.typeExpression) {
      return Ul(i.typeExpression);
     }
    }
    function p_(t, n) {
     return !!e.findAncestor(t, function(e) {
      return e === n ? "quit" : e.kind === 149;
     });
    }
    function m_(t) {
     var n = t.parent.kind === 189 && t.parent.expression === t;
     var r = e.getSuperContainer(t, true);
     var i = false;
     if (!n) {
      while (r && r.kind === 195) {
       r = e.getSuperContainer(r, true);
       i = E < 2;
      }
     }
     var a = f(r);
     var o = 0;
     if (!a) {
      var s = e.findAncestor(t, function(e) {
       return e === r ? "quit" : e.kind === 147;
      });
      if (s && s.kind === 147) {
       bn(t, e.Diagnostics.super_cannot_be_referenced_in_a_computed_property_name);
      } else if (n) {
       bn(t, e.Diagnostics.Super_calls_are_not_permitted_outside_constructors_or_in_nested_functions_inside_constructors);
      } else if (!r || !r.parent || !(e.isClassLike(r.parent) || r.parent.kind === 186)) {
       bn(t, e.Diagnostics.super_can_only_be_referenced_in_members_of_derived_classes_or_object_literal_expressions);
      } else {
       bn(t, e.Diagnostics.super_property_access_is_permitted_only_in_a_constructor_member_function_or_member_accessor_of_a_derived_class);
      }
      return re;
     }
     if (!n && r.kind === 155) {
      u_(t, r, e.Diagnostics.super_must_be_called_before_accessing_a_property_of_super_in_the_constructor_of_a_derived_class);
     }
     if (e.hasModifier(r, 32) || n) {
      o = 512;
     } else {
      o = 256;
     }
     Ln(t).flags |= o;
     if (r.kind === 154 && e.hasModifier(r, 256)) {
      if (e.isSuperProperty(t.parent) && e.isAssignmentTarget(t.parent)) {
       Ln(r).flags |= 4096;
      } else {
       Ln(r).flags |= 2048;
      }
     }
     if (i) {
      a_(t.parent, r);
     }
     if (r.parent.kind === 186) {
      if (E < 2) {
       bn(t, e.Diagnostics.super_is_only_allowed_in_members_of_object_literal_expressions_when_option_target_is_ES2015_or_higher);
       return re;
      } else {
       return ee;
      }
     }
     var c = r.parent;
     if (!e.getEffectiveBaseTypeNode(c)) {
      bn(t, e.Diagnostics.super_can_only_be_referenced_in_a_derived_class);
      return re;
     }
     var u = Ya(Vr(c));
     var l = u && La(u)[0];
     if (!l) {
      return re;
     }
     if (r.kind === 155 && p_(t, r)) {
      bn(t, e.Diagnostics.super_cannot_be_referenced_in_constructor_arguments);
      return re;
     }
     return o === 512 ? Ma(u) : xo(l, u.thisType);
     function f(t) {
      if (!t) {
       return false;
      }
      if (n) {
       return t.kind === 155;
      } else {
       if (e.isClassLike(t.parent) || t.parent.kind === 186) {
        if (e.hasModifier(t, 32)) {
         return t.kind === 154 || t.kind === 153 || t.kind === 156 || t.kind === 157;
        } else {
         return t.kind === 154 || t.kind === 153 || t.kind === 156 || t.kind === 157 || t.kind === 152 || t.kind === 151 || t.kind === 155;
        }
       }
      }
      return false;
     }
    }
    function __(e) {
     return (e.kind === 154 || e.kind === 156 || e.kind === 157) && e.parent.kind === 186 ? e.parent : e.kind === 194 && e.parent.kind === 273 ? e.parent.parent : undefined;
    }
    function g_(t) {
     return e.getObjectFlags(t) & 4 && t.target === et ? t.typeArguments[0] : undefined;
    }
    function h_(t) {
     return wm(t, function(t) {
      return t.flags & 524288 ? e.forEach(t.types, g_) : g_(t);
     });
    }
    function v_(t) {
     if (t.kind === 195) {
      return undefined;
     }
     if (xf(t)) {
      var n = tg(t);
      if (n) {
       var r = n.thisParameter;
       if (r) {
        return xa(r);
       }
      }
     }
     var i = e.isInJavaScriptFile(t);
     if (M || i) {
      var a = __(t);
      if (a) {
       var o = q_(a);
       var s = a;
       var c = o;
       while (c) {
        var u = h_(c);
        if (u) {
         return gf(u, J_(a));
        }
        if (s.parent.kind !== 273) {
         break;
        }
        s = s.parent.parent;
        c = q_(s);
       }
       return o ? Kd(o) : nb(a);
      }
      var l = t.parent;
      if (l.kind === 202 && l.operatorToken.kind === 58) {
       var f = l.left;
       if (f.kind === 187 || f.kind === 188) {
        var d = f.expression;
        if (i && e.isIdentifier(d)) {
         var p = e.getSourceFileOfNode(l);
         if (p.commonJsModuleIndicator && Ip(d) === p.symbol) {
          return undefined;
         }
        }
        return nb(d);
       }
      }
     }
     return undefined;
    }
    function y_(t) {
     var n = t.parent;
     if (!xf(n)) {
      return undefined;
     }
     var r = e.getImmediatelyInvokedFunctionExpression(n);
     if (r && r.arguments) {
      var i = Xh(r);
      var a = n.parameters.indexOf(t);
      if (t.dotDotDotToken) {
       return Vh(r, i, a, i.length, ee, undefined);
      }
      var o = Ln(r);
      var s = o.resolvedSignature;
      o.resolvedSignature = Oe;
      var c = a < i.length ? Ad(pb(i[a])) : t.initializer ? undefined : oe;
      o.resolvedSignature = s;
      return c;
     }
     var u = tg(n);
     if (u) {
      var l = e.hasRestParameter(n);
      var f = n.parameters.length - (l ? 1 : 0);
      var a = n.parameters.indexOf(t);
      if (e.getThisParameter(n) !== undefined && !u.thisParameter) {
       e.Debug.assert(a !== 0);
       a -= 1;
      }
      if (a < f) {
       return $v(u, a);
      }
      if (l && a === f) {
       return Qv(u, a);
      }
     }
    }
    function b_(t) {
     var n = t.parent;
     if (e.hasInitializer(n) && t === n.initializer) {
      var r = e.getEffectiveTypeAnnotationNode(n);
      if (r) {
       return Ul(r);
      }
      if (n.kind === 149) {
       var i = y_(n);
       if (i) {
        return i;
       }
      }
      if (e.isBindingPattern(n.name)) {
       return ra(n.name, true, false);
      }
      if (e.isBindingPattern(n.parent)) {
       var a = n.parent.parent;
       var o = n.propertyName || n.name;
       if (a.kind !== 184) {
        var s = e.getEffectiveTypeAnnotationNode(a);
        if (s && !e.isBindingPattern(o)) {
         var c = e.getTextOfPropertyName(o);
         if (c) {
          return qi(Ul(s), c);
         }
        }
       }
      }
     }
     return undefined;
    }
    function x_(t) {
     var n = e.getContainingFunction(t);
     if (n) {
      var r = e.getFunctionFlags(n);
      if (r & 1) {
       return undefined;
      }
      var i = w_(n);
      return r & 2 ? i && tx(i) : i;
     }
     return undefined;
    }
    function k_(t) {
     var n = e.getContainingFunction(t);
     if (n) {
      var r = e.getFunctionFlags(n);
      var i = w_(n);
      if (i) {
       return t.asteriskToken ? i : ck(i, (r & 2) !== 0);
      }
     }
     return undefined;
    }
    function S_(t) {
     var n = false;
     while (t.parent && !e.isFunctionLike(t.parent)) {
      if (e.isParameter(t.parent) && (n || t.parent.initializer === t)) {
       return true;
      }
      if (e.isBindingElement(t.parent) && t.parent.initializer === t) {
       n = true;
      }
      t = t.parent;
     }
     return false;
    }
    function w_(t) {
     if (t.kind === 155 || e.getEffectiveReturnTypeNode(t) || lk(t)) {
      return tc(Vs(t));
     }
     var n = Z_(t);
     if (n && !nc(n)) {
      return tc(n);
     }
     return undefined;
    }
    function C_(e, t) {
     var n = Xh(e);
     var r = n.indexOf(t);
     return r === -1 ? undefined : D_(e, r);
    }
    function D_(e, t) {
     var n = Ln(e).resolvedSignature === Le ? Le : Ev(e);
     return $v(n, t);
    }
    function T_(e, t) {
     if (e.parent.kind === 191) {
      return C_(e.parent, t);
     }
     return undefined;
    }
    function E_(t) {
     var n = t.parent;
     var r = n.left, i = n.operatorToken, a = n.right;
     switch (i.kind) {
     case 58:
      return t === a && N_(n) ? lb(r) : undefined;

     case 54:
      var o = U_(n);
      return !o && t === a && !e.isDefaultedJavascriptInitializer(n) ? lb(r) : o;

     case 53:
     case 26:
      return t === a ? U_(n) : undefined;

     default:
      return undefined;
     }
    }
    function N_(t) {
     var n = e.getSpecialPropertyAssignmentKind(t);
     switch (n) {
     case 0:
      return true;

     case 5:
      return !t.left.symbol;

     case 1:
     case 2:
     case 3:
     case 4:
     case 6:
      return false;

     default:
      return e.Debug.assertNever(n);
     }
    }
    function A_(e, t) {
     return wm(e, function(e) {
      if (e.flags & 917504) {
       var n = Ds(e, t);
       if (n) {
        return xa(n);
       }
       if (Id(e)) {
        var r = Od(e);
        if (r && ug(t) && +t >= 0) {
         return r;
        }
       }
      }
      return undefined;
     }, true);
    }
    function F_(e, t) {
     return wm(e, function(e) {
      return As(e, t);
     }, true);
    }
    function P_(t) {
     return !!(t.flags & 262144 ? e.forEach(t.types, wd) : wd(t));
    }
    function I_(t) {
     e.Debug.assert(e.isObjectLiteralMethod(t));
     if (t.flags & 8388608) {
      return undefined;
     }
     return O_(t);
    }
    function O_(e) {
     var t = e.parent;
     var n = q_(t);
     if (n) {
      if (!po(e)) {
       var r = Vr(e).escapedName;
       var i = A_(n, r);
       if (i) {
        return i;
       }
      }
      return og(e.name) && F_(n, 1) || F_(n, 0);
     }
     return undefined;
    }
    function M_(e, t) {
     return e && (A_(e, "" + t) || F_(e, 1) || ik(e, undefined, false, false, false));
    }
    function L_(e) {
     var t = e.parent;
     return e === t.whenTrue || e === t.whenFalse ? U_(t) : undefined;
    }
    function R_(e) {
     var t = q_(e.openingElement.tagName);
     var n = Ig(Ng(e));
     return t && !Ui(t) && n && n !== "" ? A_(t, n) : undefined;
    }
    function B_(t) {
     var n = t.parent;
     return e.isJsxAttributeLike(n) ? U_(t) : e.isJsxElement(n) ? R_(n) : undefined;
    }
    function z_(t) {
     if (e.isJsxAttribute(t)) {
      var n = q_(t.parent);
      if (!n || Ui(n)) {
       return undefined;
      }
      return A_(n, t.name.escapedText);
     } else {
      return U_(t.parent);
     }
    }
    function j_(e) {
     switch (e.kind) {
     case 9:
     case 8:
     case 13:
     case 101:
     case 86:
     case 95:
     case 71:
      return true;

     case 187:
     case 193:
      return j_(e.expression);
     }
     return false;
    }
    function q_(t) {
     var n = U_(t);
     n = n && wm(n, ks);
     if (!(n && n.flags & 262144 && e.isObjectLiteralExpression(t))) {
      return n;
     }
     var r;
     e: for (var i = 0, a = t.properties; i < a.length; i++) {
      var o = a[i];
      if (!o.symbol) continue;
      if (o.kind !== 273) continue;
      if (j_(o.initializer) && qp(n, o.symbol.escapedName)) {
       var s = pb(o.initializer);
       for (var c = 0, u = n.types; c < u.length; c++) {
        var l = u[c];
        var f = qi(l, o.symbol.escapedName);
        if (f && Tf(s, f)) {
         if (r) {
          if (l === r) continue;
          r = undefined;
          break e;
         }
         r = l;
        }
       }
      }
     }
     return r || n;
    }
    function U_(t) {
     if (t.flags & 8388608) {
      return undefined;
     }
     if (t.contextualType) {
      return t.contextualType;
     }
     var n = t.parent;
     switch (n.kind) {
     case 235:
     case 149:
     case 152:
     case 151:
     case 184:
      return b_(t);

     case 195:
     case 228:
      return x_(t);

     case 205:
      return k_(n);

     case 189:
     case 190:
      return C_(n, t);

     case 192:
     case 210:
      return Ul(n.type);

     case 202:
      return E_(t);

     case 273:
     case 274:
      return O_(n);

     case 275:
      return q_(n.parent);

     case 185:
      {
       var r = n;
       var i = q_(r);
       return M_(i, e.indexOfNode(r.elements, t));
      }

     case 203:
      return L_(t);

     case 214:
      e.Debug.assert(n.parent.kind === 204);
      return T_(n.parent, t);

     case 193:
      {
       var a = e.isInJavaScriptFile(n) ? e.getJSDocTypeTag(n) : undefined;
       return a ? Ul(a.typeExpression.type) : U_(n);
      }

     case 268:
      return B_(n);

     case 265:
     case 267:
      return z_(n);

     case 260:
     case 259:
      return K_(n);
     }
     return undefined;
    }
    function J_(t) {
     var n = e.findAncestor(t, function(e) {
      return !!e.contextualMapper;
     });
     return n ? n.contextualMapper : D;
    }
    function K_(t) {
     if (bg(t.tagName)) {
      return zg(t);
     }
     var n = pb(t.tagName);
     if (Ui(n)) {
      return ee;
     }
     var r = e.isInJavaScriptFile(t);
     return wm(n, function(e) {
      return V_(e, r, t);
     });
    }
    function V_(t, n, r) {
     if (t.flags & 4) {
      return ee;
     } else if (t.flags & 64) {
      var i = Cg(m.IntrinsicElements, r);
      if (i !== re) {
       var a = t.value;
       var o = Ds(i, e.escapeLeadingUnderscores(a));
       if (o) {
        return xa(o);
       }
       var s = Ps(i, 0);
       if (s) {
        return s;
       }
      }
      return ee;
     }
     var c = Es(t, 1);
     var u = true;
     if (c.length === 0) {
      c = Es(t, 0);
      u = false;
      if (c.length === 0) {
       return re;
      }
     }
     var l = Ln(r);
     if (!l.resolvedSignatures) {
      l.resolvedSignatures = e.createMap();
     }
     var f = "" + Tu(t);
     var d = l.resolvedSignatures.get(f);
     if (d && d !== Be) {
      c = d;
     } else if (!d) {
      l.resolvedSignatures.set(f, Be);
      l.resolvedSignatures.set(f, c = Tg(r, c));
     }
     return Ru(e.map(c, u ? function(e) {
      return $_(e, n, r, false);
     } : function(e) {
      return W_(e, r);
     }), 0);
    }
    function W_(e, t) {
     var n = iy(e, ke);
     n = G_(t, Ng(t), n);
     var r = Cg(m.IntrinsicAttributes, t);
     if (r !== re) {
      n = Oo(r, n);
     }
     return n;
    }
    function H_(e, t) {
     var n = tc(e);
     return Ui(n) ? n : qi(n, t);
    }
    function G_(t, n, r) {
     var i = Fg(n);
     if (i) {
      var a = Ya(i);
      if (e.length(a.typeParameters) >= 2) {
       var o = Ks([ nb(t.tagName), r ], a.typeParameters, 2, e.isInJavaScriptFile(t));
       return Cc(a, o);
      } else if (e.length(a.aliasTypeArguments) >= 2) {
       var o = Ks([ nb(t.tagName), r ], a.aliasTypeArguments, 2, e.isInJavaScriptFile(t));
       return Nc(a.aliasSymbol, o);
      }
     }
     return r;
    }
    function $_(t, n, r, i) {
     var a = Ng(r);
     var o = Pg(a);
     var s = o === undefined ? iy(t, ke) : o === "" ? tc(t) : H_(t, o);
     if (!s) {
      if (i && !!o && !!e.length(r.attributes.properties)) {
       bn(r, e.Diagnostics.JSX_element_class_does_not_support_attributes_because_it_does_not_have_a_0_property, e.unescapeLeadingUnderscores(o));
      }
      return ke;
     }
     s = G_(r, a, s);
     if (Ui(s)) {
      return s;
     } else {
      var c = s;
      var u = Cg(m.IntrinsicClassAttributes, r);
      if (u !== re) {
       var l = Ea(u.symbol);
       var f = tc(t);
       c = Oo(l ? Cc(u, Ks([ f ], l, Js(l), n)) : u, c);
      }
      var d = Cg(m.IntrinsicAttributes, r);
      if (d !== re) {
       c = Oo(d, c);
      }
      return c;
     }
    }
    function X_(e, t) {
     var n = Es(e, 0);
     if (n.length === 1) {
      var r = n[0];
      if (!Q_(r, t)) {
       return r;
      }
     }
    }
    function Q_(t, n) {
     var r = 0;
     for (;r < n.parameters.length; r++) {
      var i = n.parameters[r];
      if (i.initializer || i.questionToken || i.dotDotDotToken || Ls(i)) {
       break;
      }
     }
     if (n.parameters.length && e.parameterIsThisKeyword(n.parameters[0])) {
      r--;
     }
     return !ny(t) && Zv(t) < r;
    }
    function Y_(e) {
     return e.kind === 194 || e.kind === 195;
    }
    function Z_(t) {
     return Y_(t) || e.isObjectLiteralMethod(t) ? tg(t) : undefined;
    }
    function eg(t) {
     return e.isObjectLiteralMethod(t) ? I_(t) : q_(t);
    }
    function tg(t) {
     e.Debug.assert(t.kind !== 154 || e.isObjectLiteralMethod(t));
     var n;
     if (e.isInJavaScriptFile(t)) {
      var r = e.getJSDocType(t);
      if (r) {
       n = Ul(r);
      }
     }
     if (!n) {
      n = eg(t);
     }
     if (!n) {
      return undefined;
     }
     if (!(n.flags & 262144)) {
      return X_(n, t);
     }
     var i;
     var a = n.types;
     for (var o = 0, s = a; o < s.length; o++) {
      var c = s[o];
      var u = X_(c, t);
      if (u) {
       if (!i) {
        i = [ u ];
       } else if (!_d(i[0], u, false, true, true, wf)) {
        return undefined;
       } else {
        i.push(u);
       }
      }
     }
     var l;
     if (i) {
      l = Do(i[0]);
      l.unionSignatures = i;
     }
     return l;
    }
    function ng(e, t) {
     if (E < 2 && T.downlevelIteration) {
      Ew(e, 1536);
     }
     var n = pb(e.expression, t);
     return rk(n, e.expression, false, false);
    }
    function rg(e) {
     return e.kind === 184 && !!e.initializer || e.kind === 202 && e.operatorToken.kind === 58;
    }
    function ig(t, n) {
     var r = t.elements;
     var i = r.length;
     var a = false;
     var o = [];
     var s = e.isAssignmentTarget(t);
     var c = q_(t);
     for (var u = 0; u < i; u++) {
      var l = r[u];
      if (s && l.kind === 206) {
       var f = pb(l.expression, n);
       var d = Ps(f, 1) || ik(f, undefined, false, false, false);
       if (d) {
        o.push(d);
       }
      } else {
       var p = M_(c, u);
       var m = ob(l, n, p);
       o.push(m);
      }
      if (u < i - 1 && l.kind === 206) {
       a = true;
      }
     }
     if (!a) {
      var _ = i > 0 && r[i - 1].kind === 206;
      var g = i - (_ ? 1 : 0);
      if (s && g > 0) {
       var m = Dc(wu(o, g, _));
       m.pattern = t;
       return m;
      }
      if (c && P_(c)) {
       var h = c.pattern;
       if (!_ && h && (h.kind === 183 || h.kind === 185)) {
        var v = h.elements;
        for (var y = i; y < v.length; y++) {
         var l = v[y];
         if (rg(l)) {
          o.push(c.typeArguments[y]);
         } else if (y < v.length - 1 || !(l.kind === 184 && l.dotDotDotToken || l.kind === 206)) {
          if (l.kind !== 208) {
           bn(l, e.Diagnostics.Initializer_provides_no_value_for_this_binding_element_and_the_binding_element_has_no_default_value);
          }
          o.push(F ? ve : oe);
         }
        }
       }
       return wu(o, g, _);
      }
     }
     return ag(o, 2);
    }
    function ag(e, t) {
     if (t === void 0) {
      t = 1;
     }
     return bu(e.length ? Ru(e, t) : F ? ve : oe);
    }
    function og(e) {
     switch (e.kind) {
     case 147:
      return sg(e);

     case 71:
      return ug(e.escapedText);

     case 8:
     case 9:
      return ug(e.text);

     default:
      return false;
     }
    }
    function sg(e) {
     return Oy(lg(e), 168);
    }
    function cg(e) {
     return e === "Infinity" || e === "-Infinity" || e === "NaN";
    }
    function ug(e) {
     return (+e).toString() === e;
    }
    function lg(t) {
     var n = Ln(t.expression);
     if (!n.resolvedType) {
      n.resolvedType = pb(t.expression);
      if (n.resolvedType.flags & 24576 || !Oy(n.resolvedType, 68 | 168 | 3072) && !Tf(n.resolvedType, be)) {
       bn(t, e.Diagnostics.A_computed_property_name_must_be_of_type_string_number_symbol_or_any);
      } else {
       Ph(t.expression, n.resolvedType, true);
      }
     }
     return n.resolvedType;
    }
    function fg(e, t, n, r) {
     var i = [];
     for (var a = 0; a < n.length; a++) {
      if (r === 0 || og(e[a + t].name)) {
       i.push(xa(n[a]));
      }
     }
     var o = i.length ? Ru(i, 2) : ae;
     return hc(o, false);
    }
    function dg(t, n) {
     var r = e.isAssignmentTarget(t);
     rC(t, r);
     var i;
     var a = [];
     var o = ke;
     var s = 33554432;
     var c = q_(t);
     var u = c && c.pattern && (c.pattern.kind === 182 || c.pattern.kind === 186);
     var l = e.isInJavaScriptFile(t) && !e.isInJsonFile(t);
     var f = !c && l;
     var d = 0;
     var p = false;
     var m = false;
     var _ = false;
     i = e.createSymbolTable();
     var g = 0;
     for (var h = 0; h < t.properties.length; h++) {
      var v = t.properties[h];
      var y = Vr(v);
      var b = v.name && v.name.kind === 147 && !e.isWellKnownSymbolSyntactically(v.name.expression) ? lg(v.name) : undefined;
      if (v.kind === 273 || v.kind === 274 || e.isObjectLiteralMethod(v)) {
       var x = v.kind === 273 ? sb(v, n) : v.kind === 274 ? ob(v.name, n) : cb(v, n);
       if (l) {
        var k = Hi(v);
        if (k) {
         Ff(x, k, v);
         x = k;
        }
       }
       d |= x.flags;
       var S = b && b.flags & 2240 ? b : undefined;
       var w = S ? Sn(4 | y.flags, _o(S), 1024) : Sn(4 | y.flags, y.escapedName);
       if (S) {
        w.nameType = S;
       }
       if (r) {
        var C = v.kind === 273 && rg(v.initializer) || v.kind === 274 && v.objectAssignmentInitializer;
        if (C) {
         w.flags |= 16777216;
        }
       } else if (u && !(e.getObjectFlags(c) & 512)) {
        var D = Ds(c, y.escapedName);
        if (D) {
         w.flags |= D.flags & 16777216;
        } else if (!T.suppressExcessPropertyErrors && !Fs(c, 0)) {
         bn(v.name, e.Diagnostics.Object_literal_may_only_specify_known_properties_and_0_does_not_exist_in_type_1, xi(y), Si(c));
        }
       }
       w.declarations = y.declarations;
       w.parent = y.parent;
       if (y.valueDeclaration) {
        w.valueDeclaration = y.valueDeclaration;
       }
       w.type = x;
       w.target = y;
       y = w;
      } else if (v.kind === 275) {
       if (E < 2) {
        Ew(v, 2);
       }
       if (a.length > 0) {
        o = Nl(o, F(), t.symbol, s, 0);
        a = [];
        i = e.createSymbolTable();
        m = false;
        _ = false;
        d = 0;
       }
       var x = pb(v.expression);
       if (!pg(x)) {
        bn(v, e.Diagnostics.Spread_types_may_only_be_created_from_object_types);
        return re;
       }
       o = Nl(o, x, t.symbol, s, 0);
       g = h + 1;
       continue;
      } else {
       e.Debug.assert(v.kind === 156 || v.kind === 157);
       dS(v);
      }
      if (b && !(b.flags & 2240)) {
       if (Tf(b, be)) {
        if (Tf(b, le)) {
         _ = true;
        } else {
         m = true;
        }
        if (r) {
         p = true;
        }
       }
      } else {
       i.set(y.escapedName, y);
      }
      a.push(y);
     }
     if (u) {
      for (var N = 0, A = rs(c); N < A.length; N++) {
       var w = A[N];
       if (!i.get(w.escapedName) && !(o && Ds(o, w.escapedName))) {
        if (!(w.flags & 16777216)) {
         bn(w.valueDeclaration || w.bindingElement, e.Diagnostics.Initializer_provides_no_value_for_this_binding_element_and_the_binding_element_has_no_default_value);
        }
        i.set(w.escapedName, w);
        a.push(w);
       }
      }
     }
     if (o !== ke) {
      if (a.length > 0) {
       o = Nl(o, F(), t.symbol, s, 0);
      }
      return o;
     }
     return F();
     function F() {
      var n = f ? je : m ? fg(t.properties, g, a, 0) : undefined;
      var o = _ && !f ? fg(t.properties, g, a, 1) : undefined;
      var c = oi(t.symbol, i, e.emptyArray, e.emptyArray, n, o);
      var u = T.suppressExcessPropertyErrors ? 0 : 33554432;
      c.flags |= 268435456 | u | d & 939524096;
      c.objectFlags |= 128;
      if (p) {
       c.objectFlags |= 512;
      }
      if (r) {
       c.pattern = t;
      }
      if (!(c.flags & 24576)) {
       s |= c.flags & 939524096;
      }
      return c;
     }
    }
    function pg(t) {
     return !!(t.flags & (3 | 16777216) || Rd(t) & 29120 && pg(Bd(t)) || t.flags & 131072 && !Yo(t) || t.flags & 786432 && e.every(t.types, pg));
    }
    function mg(e) {
     $g(e, 0);
    }
    function _g(e, t) {
     dS(e);
     return Vg(e) || ee;
    }
    function gg(e) {
     $g(e.openingElement, 0);
     if (bg(e.closingElement.tagName)) {
      Dg(e.closingElement);
     } else {
      pb(e.closingElement.tagName);
     }
    }
    function hg(e, t) {
     dS(e);
     return Vg(e) || ee;
    }
    function vg(t, n) {
     $g(t.openingFragment, n);
     if (T.jsx === 2 && (T.jsxFactory || e.getSourceFileOfNode(t).pragmas.has("jsx"))) {
      bn(t, T.jsxFactory ? e.Diagnostics.JSX_fragment_is_not_supported_when_using_jsxFactory : e.Diagnostics.JSX_fragment_is_not_supported_when_using_an_inline_JSX_factory_pragma);
     }
     return Vg(t) || ee;
    }
    function yg(t) {
     return !e.stringContains(t, "-");
    }
    function bg(t) {
     return t.kind === 71 && e.isIntrinsicJsxName(t.escapedText);
    }
    function xg(e, t) {
     return e.initializer ? ob(e.initializer, t) : de;
    }
    function kg(t, n) {
     var r = t.attributes;
     var i = e.createSymbolTable();
     var a = ke;
     var o = false;
     var s;
     var c = false;
     var u = Ig(Ng(t));
     for (var l = 0, f = r.properties; l < f.length; l++) {
      var d = f[l];
      var p = d.symbol;
      if (e.isJsxAttribute(d)) {
       var m = xg(d, n);
       var _ = Sn(4 | 33554432 | p.flags, p.escapedName);
       _.declarations = p.declarations;
       _.parent = p.parent;
       if (p.valueDeclaration) {
        _.valueDeclaration = p.valueDeclaration;
       }
       _.type = m;
       _.target = p;
       i.set(_.escapedName, _);
       if (d.name.escapedText === u) {
        c = true;
       }
      } else {
       e.Debug.assert(d.kind === 267);
       if (i.size > 0) {
        a = Nl(a, b(), r.symbol, 0, 4096);
        i = e.createSymbolTable();
       }
       var m = nb(d.expression, n);
       if (Ui(m)) {
        o = true;
       }
       if (pg(m)) {
        a = Nl(a, m, t.symbol, 0, 4096);
       } else {
        s = s ? Wu([ s, m ]) : m;
       }
      }
     }
     if (!o) {
      if (i.size > 0) {
       a = Nl(a, b(), r.symbol, 0, 4096);
      }
     }
     var g = t.parent.kind === 258 ? t.parent : undefined;
     if (g && g.openingElement === t && g.children.length > 0) {
      var h = Sg(g, n);
      if (!o && u && u !== "") {
       if (c) {
        bn(r, e.Diagnostics._0_are_specified_twice_The_attribute_named_0_will_be_overwritten, e.unescapeLeadingUnderscores(u));
       }
       var v = Sn(4 | 33554432, u);
       v.type = h.length === 1 ? h[0] : bu(Ru(h));
       var y = e.createSymbolTable();
       y.set(u, v);
       a = Nl(a, oi(r.symbol, y, e.emptyArray, e.emptyArray, undefined, undefined), r.symbol, 0, 4096);
      }
     }
     if (o) {
      return ee;
     }
     if (s && a !== ke) {
      return Wu([ s, a ]);
     }
     return s || (a === ke ? b() : a);
     function b() {
      var t = oi(r.symbol, i, e.emptyArray, e.emptyArray, undefined, undefined);
      t.flags |= 268435456;
      t.objectFlags |= 128 | 4096;
      return t;
     }
    }
    function Sg(e, t) {
     var n = [];
     for (var r = 0, i = e.children; r < i.length; r++) {
      var a = i[r];
      if (a.kind === 10) {
       if (!a.containsOnlyWhiteSpaces) {
        n.push(ue);
       }
      } else {
       n.push(ob(a, t));
      }
     }
     return n;
    }
    function wg(e, t) {
     return kg(e.parent, t);
    }
    function Cg(e, t) {
     var n = Ng(t);
     var r = n && jr(n);
     var i = r && Bn(r, e, 67901928);
     return i ? Ya(i) : re;
    }
    function Dg(t) {
     var n = Ln(t);
     if (!n.resolvedSymbol) {
      var r = Cg(m.IntrinsicElements, t);
      if (r !== re) {
       if (!e.isIdentifier(t.tagName)) return e.Debug.fail();
       var i = Ds(r, t.tagName.escapedText);
       if (i) {
        n.jsxFlags |= 1;
        return n.resolvedSymbol = i;
       }
       var a = Ps(r, 0);
       if (a) {
        n.jsxFlags |= 2;
        return n.resolvedSymbol = r.symbol;
       }
       bn(t, e.Diagnostics.Property_0_does_not_exist_on_type_1, e.idText(t.tagName), "JSX." + m.IntrinsicElements);
       return n.resolvedSymbol = Y;
      } else {
       if (O) {
        bn(t, e.Diagnostics.JSX_element_implicitly_has_type_any_because_no_interface_JSX_0_exists, e.unescapeLeadingUnderscores(m.IntrinsicElements));
       }
       return n.resolvedSymbol = Y;
      }
     }
     return n.resolvedSymbol;
    }
    function Tg(t, n) {
     var r = [];
     var i;
     var a = !!t.typeArguments;
     for (var o = 0, s = n; o < s.length; o++) {
      var c = s[o];
      if (c.typeParameters) {
       var u = e.isInJavaScriptFile(t);
       var l = Eg(c, t, u, false);
       if (l) {
        a = false;
        r.push(l);
       } else {
        if (t.typeArguments && jh(c, t.typeArguments)) {
         i = c;
        }
        var f = sp(c.typeParameters, c, u ? 4 : 0);
        var d = Jh(c, t, f);
        r.push(ac(c, d, u));
       }
      } else {
       r.push(c);
      }
     }
     if (t.typeArguments && a) {
      if (i) {
       Wh(i, t.typeArguments, true);
      } else if (t.typeArguments.length !== 0) {
       Vt.add(ov(t, n, t.typeArguments));
      }
     }
     return r;
    }
    function Eg(e, t, n, r) {
     if (r === void 0) {
      r = false;
     }
     if (!t.typeArguments) {
      return;
     }
     if (!jh(e, t.typeArguments)) {
      return;
     }
     var i = Wh(e, t.typeArguments, r);
     if (!i) {
      return;
     }
     return ac(e, i, n);
    }
    function Ng(e) {
     var t = e && Ln(e);
     if (t && t.jsxNamespace) {
      return t.jsxNamespace;
     }
     if (!t || t.jsxNamespace !== false) {
      var n = gn(e);
      var r = qn(e, n, 1920, undefined, n, false);
      if (r) {
       var i = Bn(jr(vr(r)), m.JSX, 1920);
       if (i) {
        if (t) {
         t.jsxNamespace = i;
        }
        return i;
       }
       if (t) {
        t.jsxNamespace = false;
       }
      }
     }
     return Xc(m.JSX, 1920, undefined);
    }
    function Ag(t, n) {
     var r = n && Bn(n.exports, t, 67901928);
     var i = r && Ya(r);
     var a = i && rs(i);
     if (a) {
      if (a.length === 0) {
       return "";
      } else if (a.length === 1) {
       return a[0].escapedName;
      } else if (a.length > 1) {
       bn(r.declarations[0], e.Diagnostics.The_global_type_JSX_0_may_not_have_more_than_one_property, e.unescapeLeadingUnderscores(t));
      }
     }
     return undefined;
    }
    function Fg(e) {
     return e && Bn(e.exports, m.LibraryManagedAttributes, 67901928);
    }
    function Pg(e) {
     return Ag(m.ElementAttributesPropertyNameContainer, e);
    }
    function Ig(e) {
     return Ag(m.ElementChildrenAttributeNameContainer, e);
    }
    function Og(e) {
     if (!e) {
      return undefined;
     }
     if (e.flags & 524288) {
      var t = [];
      for (var n = 0, r = e.types; n < r.length; n++) {
       var i = r[n];
       t.push(ks(i));
      }
      return Wu(t);
     }
     return ks(e);
    }
    function Mg(t, n, r, i) {
     e.Debug.assert(!(n.flags & 262144));
     if (!i || !Tf(r, i)) {
      var a = Wg(t);
      if (a) {
       var o = Dv(t, n, undefined);
       if (o !== Me) {
        var s = o && tc(o);
        var c = s && (o.parameters.length === 0 ? ke : xa(o.parameters[0]));
        c = Og(c);
        if (s && Tf(s, a)) {
         var u = Cg(m.IntrinsicAttributes, t);
         if (u !== re) {
          c = Oo(u, c);
         }
         return c;
        }
       }
      }
     }
     return undefined;
    }
    function Lg(t, n, r, i) {
     e.Debug.assert(!(n.flags & 262144));
     if (!i || !Tf(r, i)) {
      var a = Wg(t);
      if (a) {
       var o = [];
       Dv(t, n, o);
       var s = void 0;
       var c = void 0;
       for (var u = 0, l = o; u < l.length; u++) {
        var f = l[u];
        var d = tc(f);
        var p = d && (f.parameters.length === 0 ? ke : xa(f.parameters[0]));
        p = Og(p);
        if (d && Tf(d, a)) {
         var _ = true;
         for (var g = 0, h = t.attributes.properties; g < h.length; g++) {
          var v = h[g];
          if (e.isJsxAttribute(v) && yg(v.name.escapedText) && !Ds(p, v.name.escapedText)) {
           _ = false;
           break;
          }
         }
         if (_) {
          s = Oo(s, p);
         }
         c = Oo(c, p);
        }
       }
       if (!s) {
        s = c;
       }
       var y = Cg(m.IntrinsicAttributes, t);
       if (y !== re) {
        s = Oo(y, s);
       }
       return s;
      }
     }
     return undefined;
    }
    function Rg(t, n, r) {
     var i = Ln(t);
     if (!i.resolvedSignatures) {
      i.resolvedSignatures = e.createMap();
     }
     var a = "" + Tu(n);
     if (i.resolvedSignatures.get(a) && i.resolvedSignatures.get(a) === Be) {
      return;
     } else if (i.resolvedSignatures.get(a)) {
      return i.resolvedSignatures.get(a);
     }
     i.resolvedSignatures.set(a, Be);
     var o = Es(n, 1);
     if (o.length === 0) {
      o = Es(n, 0);
      if (o.length === 0) {
       if (r) {
        bn(t.tagName, e.Diagnostics.JSX_element_type_0_does_not_have_any_construct_or_call_signatures, e.getTextOfNode(t.tagName));
       }
       return;
      }
     }
     var s = Tg(t, o);
     i.resolvedSignatures.set(a, s);
     return s;
    }
    function Bg(t, n, r, i) {
     if (r.flags & 262144) {
      var a = r.types;
      return Ru(a.map(function(e) {
       return Bg(t, n, e, i);
      }), 2);
     }
     if (Ui(r)) {
      return r;
     } else if (r.flags & 4) {
      return ee;
     } else if (r.flags & 64) {
      var o = Cg(m.IntrinsicElements, t);
      if (o !== re) {
       var s = r.value;
       var c = Ds(o, e.escapeLeadingUnderscores(s));
       if (c) {
        return xa(c);
       }
       var u = Ps(o, 0);
       if (u) {
        return u;
       }
       bn(t, e.Diagnostics.Property_0_does_not_exist_on_type_1, s, "JSX." + m.IntrinsicElements);
      }
      return ee;
     }
     var l = Rg(t, r, true);
     if (!e.length(l)) {
      return re;
     }
     var f = Ru(l.map(tc), 2);
     var d = n ? Lg(t, r, f, i) : Mg(t, r, f, i);
     if (d) {
      return d;
     }
     if (i) {
      Yf(f, i, tn, t, e.Diagnostics.JSX_element_type_0_is_not_a_constructor_function_for_JSX_elements);
     }
     var p = e.isInJavaScriptFile(t);
     return Ru(l.map(function(e) {
      return $_(e, p, t, true);
     }));
    }
    function zg(t) {
     e.Debug.assert(bg(t.tagName));
     var n = Ln(t);
     if (!n.resolvedJsxElementAttributesType) {
      var r = Dg(t);
      if (n.jsxFlags & 1) {
       return n.resolvedJsxElementAttributesType = xa(r);
      } else if (n.jsxFlags & 2) {
       return n.resolvedJsxElementAttributesType = vc(r, 0).type;
      } else {
       return n.resolvedJsxElementAttributesType = re;
      }
     }
     return n.resolvedJsxElementAttributesType;
    }
    function jg(e, t) {
     return Bg(e, t, pb(e.tagName), Kg(e));
    }
    function qg(e) {
     if (bg(e.tagName)) {
      return zg(e);
     } else {
      return jg(e, true);
     }
    }
    function Ug(e) {
     if (bg(e.tagName)) {
      return zg(e);
     } else {
      return jg(e, false);
     }
    }
    function Jg(e) {
     var t = Ug(e.parent.parent);
     var n = Ds(t, e.name.escapedText);
     return n || Y;
    }
    function Kg(e) {
     var t = Cg(m.ElementClass, e);
     if (t === re) return undefined;
     return t;
    }
    function Vg(e) {
     return Cg(m.Element, e);
    }
    function Wg(e) {
     var t = Vg(e);
     if (t) {
      return Ru([ t, se ]);
     }
    }
    function Hg(t) {
     var n = Cg(m.IntrinsicElements, t);
     return n ? rs(n) : e.emptyArray;
    }
    function Gg(t) {
     if ((T.jsx || 0) === 0) {
      bn(t, e.Diagnostics.Cannot_use_JSX_unless_the_jsx_flag_is_provided);
     }
     if (Vg(t) === undefined) {
      if (O) {
       bn(t, e.Diagnostics.JSX_element_implicitly_has_type_any_because_the_global_type_JSX_Element_does_not_exist);
      }
     }
    }
    function $g(t, n) {
     var r = e.isJsxOpeningLikeElement(t);
     if (r) {
      iC(t);
     }
     Gg(t);
     var i = Vt && T.jsx === 2 ? e.Diagnostics.Cannot_find_name_0 : undefined;
     var a = gn(t);
     var o = r ? t.tagName : t;
     var s = qn(o, a, 67216319, i, a, true);
     if (s) {
      s.isReferenced = 67108863;
      if (s.flags & 2097152 && !aw(yr(s))) {
       xr(s);
      }
     }
     if (r) {
      Qg(t, n);
     } else {
      Sg(t.parent);
     }
    }
    function Xg(e, t, n) {
     if (e.flags & 131072) {
      var r = Zo(e);
      if (r.stringIndexInfo || r.numberIndexInfo && ug(t) || ts(e, t) || n && !yg(t)) {
       return true;
      }
     } else if (e.flags & 786432) {
      for (var i = 0, a = e.types; i < a.length; i++) {
       var o = a[i];
       if (Xg(o, t, n)) {
        return true;
       }
      }
     } else if (e.flags & 4194304) {
      return Xg(e.root.trueType, t, n) || Xg(e.root.falseType, t, n);
     }
     return false;
    }
    function Qg(t, n) {
     var r = bg(t.tagName) ? zg(t) : jg(t, false);
     var i = nb(t.attributes, n);
     var a = Tf(i, r);
     if (a && !Ui(i) && !Ui(r)) {
      for (var o = 0, s = t.attributes.properties; o < s.length; o++) {
       var c = s[o];
       if (!e.isJsxAttribute(c)) {
        continue;
       }
       var u = c.name;
       var l = yg(e.idText(u)) || !!Ds(r, u.escapedText);
       if (l && !Xg(r, u.escapedText, true)) {
        bn(c, e.Diagnostics.Property_0_does_not_exist_on_type_1, e.idText(u), Si(r));
        break;
       }
      }
     } else if (!a) {
      Pf(i, r, t.tagName, t.attributes);
     }
    }
    function Yg(t, n) {
     if (t.expression) {
      var r = pb(t.expression, n);
      if (t.dotDotDotToken && r !== ee && !xd(r)) {
       bn(t, e.Diagnostics.JSX_spread_child_must_be_an_array_type);
      }
      return r;
     } else {
      return re;
     }
    }
    function Zg(e) {
     return e.valueDeclaration ? e.valueDeclaration.kind : 152;
    }
    function eh(t) {
     return t.valueDeclaration ? e.getCombinedNodeFlags(t.valueDeclaration) : 0;
    }
    function th(t) {
     if (t.flags & 8192 || e.getCheckFlags(t) & 4) {
      return true;
     }
     if (e.isInJavaScriptFile(t.valueDeclaration)) {
      var n = t.valueDeclaration.parent;
      return n && e.isBinaryExpression(n) && e.getSpecialPropertyAssignmentKind(n) === 3;
     }
    }
    function nh(t, n, r, i) {
     var a = e.getDeclarationModifierFlagsFromSymbol(i);
     var o = t.kind === 187 || t.kind === 235 ? t.name : t.kind === 181 ? t : t.right;
     if (e.getCheckFlags(i) & 256) {
      bn(o, e.Diagnostics.Property_0_has_conflicting_declarations_and_is_inaccessible_in_type_1, xi(i), Si(r));
      return false;
     }
     if (n.kind === 97) {
      if (E < 2) {
       if (ih(i)) {
        bn(o, e.Diagnostics.Only_public_and_protected_methods_of_the_base_class_are_accessible_via_the_super_keyword);
        return false;
       }
      }
      if (a & 128) {
       bn(o, e.Diagnostics.Abstract_method_0_in_class_1_cannot_be_accessed_via_super_expression, xi(i), Si(sd(i)));
       return false;
      }
     }
     if (a & 128 && e.isThisProperty(t) && ih(i)) {
      var s = e.getClassLikeDeclarationOfSymbol(Wr(i));
      if (s && ES(t, s)) {
       bn(o, e.Diagnostics.Abstract_property_0_in_class_1_cannot_be_accessed_in_the_constructor, xi(i), e.getTextOfIdentifierOrLiteral(s.name));
       return false;
      }
     }
     if (!(a & 24)) {
      return true;
     }
     if (a & 8) {
      var s = e.getClassLikeDeclarationOfSymbol(Wr(i));
      if (!NS(t, s)) {
       bn(o, e.Diagnostics.Property_0_is_private_and_only_accessible_within_class_1, xi(i), Si(sd(i)));
       return false;
      }
      return true;
     }
     if (n.kind === 97) {
      return true;
     }
     var c = TS(t, function(e) {
      var t = Ya(Vr(e));
      return ld(t, i) ? t : undefined;
     });
     if (!c) {
      var u = void 0;
      if (a & 32 || !(u = rh(t)) || !u.type) {
       bn(o, e.Diagnostics.Property_0_is_protected_and_only_accessible_within_class_1_and_its_subclasses, xi(i), Si(sd(i) || r));
       return false;
      }
      var l = Ul(u.type);
      c = l.flags & 65536 ? ss(l) : l;
     }
     if (a & 32) {
      return true;
     }
     if (r.flags & 65536) {
      r = r.isThisType ? ss(r) : ps(r);
     }
     if (!r || !wa(r, c)) {
      bn(o, e.Diagnostics.Property_0_is_protected_and_only_accessible_through_an_instance_of_class_1, xi(i), Si(c));
      return false;
     }
     return true;
    }
    function rh(t) {
     var n = e.getThisContainer(t, false);
     return n && e.isFunctionLike(n) ? e.getThisParameter(n) : undefined;
    }
    function ih(e) {
     return od(e, function(e) {
      var t = Zg(e);
      return t !== 154 && t !== 153;
     });
    }
    function ah(e, t, n, r) {
     return oh(pb(e), e, t, n, r);
    }
    function oh(t, n, r, i, a) {
     if (t.flags & 2) {
      bn(n, e.Diagnostics.Object_is_of_type_unknown);
      return re;
     }
     var o = (F ? Rd(t) : t.flags) & 24576;
     if (o) {
      bn(n, o & 8192 ? o & 16384 ? a || e.Diagnostics.Object_is_possibly_null_or_undefined : i || e.Diagnostics.Object_is_possibly_undefined : r || e.Diagnostics.Object_is_possibly_null);
      var s = Kd(t);
      return s.flags & (24576 | 32768) ? re : s;
     }
     return t;
    }
    function sh(e) {
     return uh(e, e.expression, e.name);
    }
    function ch(e) {
     return uh(e, e.left, e.right);
    }
    function uh(t, n, r) {
     var i;
     var a = ah(n);
     var o = Ln(n).resolvedSymbol;
     var s = ks(tp(a));
     if (Ui(s) || s === he) {
      if (e.isIdentifier(n) && o) {
       e_(o, t);
      }
      return s;
     }
     var c = e.getAssignmentTargetKind(t);
     var u = Ds(s, r.escapedText);
     if (e.isIdentifier(n) && o && !(u && aw(u))) {
      e_(o, t);
     }
     if (!u) {
      var l = Fs(s, 0);
      if (!(l && l.type)) {
       if (r.escapedText && !Hn(t)) {
        mh(r, a.flags & 65536 && a.isThisType ? s : a);
       }
       return re;
      }
      if (l.isReadonly && (e.isAssignmentTarget(t) || e.isDeleteTarget(t))) {
       bn(t, e.Diagnostics.Index_signature_in_type_0_only_permits_reading, Si(s));
      }
      i = l.type;
     } else {
      lh(u, t, r);
      kh(u, t, n.kind === 99);
      Ln(t).resolvedSymbol = u;
      nh(t, n, s, u);
      if (c) {
       if (wy(t, u) || Cy(t)) {
        bn(r, e.Diagnostics.Cannot_assign_to_0_because_it_is_a_constant_or_a_read_only_property, e.idText(r));
        return re;
       }
      }
      i = Zm(xa(u), t);
     }
     if (t.kind !== 187 || c === 1 || u && !(u.flags & (3 | 4 | 98304)) && !(u.flags & 8192 && i.flags & 262144)) {
      return i;
     }
     var f = false;
     if (F && I && n.kind === 99) {
      var d = u && u.valueDeclaration;
      if (d && Mk(d)) {
       var p = Vm(t);
       if (p.kind === 155 && p.parent === d.parent) {
        f = true;
       }
      }
     }
     var m = Jm(t, i, f ? Ud(i) : i);
     if (f && !(Rd(i) & 8192) && Rd(m) & 8192) {
      bn(r, e.Diagnostics.Property_0_is_used_before_being_assigned, xi(u));
      return i;
     }
     return c ? Nd(m) : m;
    }
    function lh(t, n, r) {
     var i = t.valueDeclaration;
     if (!i) {
      return;
     }
     var a;
     var o = e.idText(r);
     if (fh(n) && !jn(i, r) && !dh(t)) {
      a = bn(r, e.Diagnostics.Property_0_is_used_before_its_initialization, o);
     } else if (i.kind === 238 && n.parent.kind !== 162 && !(i.flags & 4194304) && !jn(i, r)) {
      a = bn(r, e.Diagnostics.Class_0_used_before_its_declaration, o);
     }
     if (a) {
      yn(a, e.createDiagnosticForNode(i, e.Diagnostics._0_is_declared_here, o));
     }
    }
    function fh(t) {
     return !!e.findAncestor(t, function(t) {
      switch (t.kind) {
      case 152:
       return true;

      case 273:
       return false;

      default:
       return e.isExpressionNode(t) ? false : "quit";
      }
     });
    }
    function dh(e) {
     if (!(e.parent.flags & 32)) {
      return false;
     }
     var t = xa(e.parent);
     while (true) {
      t = t.symbol && ph(t);
      if (!t) {
       return false;
      }
      var n = Ds(t, e.escapedName);
      if (n && n.valueDeclaration) {
       return true;
      }
     }
    }
    function ph(e) {
     var t = La(e);
     if (t.length === 0) {
      return undefined;
     }
     return Wu(t);
    }
    function mh(t, n) {
     var r;
     var i;
     if (n.flags & 262144 && !(n.flags & 32764)) {
      for (var a = 0, o = n.types; a < o.length; a++) {
       var s = o[a];
       if (!Ds(s, t.escapedText)) {
        r = e.chainDiagnosticMessages(r, e.Diagnostics.Property_0_does_not_exist_on_type_1, e.declarationNameToString(t), Si(s));
        break;
       }
      }
     }
     var c = nx(n);
     if (c && Ds(c, t.escapedText)) {
      r = e.chainDiagnosticMessages(r, e.Diagnostics.Property_0_does_not_exist_on_type_1_Did_you_forget_to_use_await, e.declarationNameToString(t), Si(n));
     } else {
      var u = _h(t, n);
      if (u !== undefined) {
       var l = e.symbolName(u);
       r = e.chainDiagnosticMessages(r, e.Diagnostics.Property_0_does_not_exist_on_type_1_Did_you_mean_2, e.declarationNameToString(t), Si(n), l);
       i = u.valueDeclaration && e.createDiagnosticForNode(u.valueDeclaration, e.Diagnostics._0_is_declared_here, l);
      } else {
       r = e.chainDiagnosticMessages(r, e.Diagnostics.Property_0_does_not_exist_on_type_1, e.declarationNameToString(t), Si(n));
      }
     }
     var f = e.createDiagnosticForNodeFromMessageChain(t, r);
     if (i) {
      yn(f, i);
     }
     Vt.add(f);
    }
    function _h(t, n) {
     return xh(e.isString(t) ? t : e.idText(t), rs(n), 67216319);
    }
    function gh(t, n) {
     var r = _h(t, n);
     return r && e.symbolName(r);
    }
    function hh(t, n, r) {
     e.Debug.assert(n !== undefined, "outername should always be defined");
     var i = Un(t, n, r, undefined, n, false, false, function(t, r, i) {
      e.Debug.assertEqual(n, r, "name should equal outerName");
      var a = Bn(t, r, i);
      return a || xh(e.unescapeLeadingUnderscores(r), e.arrayFrom(t.values()), i);
     });
     return i;
    }
    function vh(t, n, r) {
     var i = hh(t, n, r);
     return i && e.symbolName(i);
    }
    function yh(t, n) {
     return n.exports && xh(e.idText(t), Lr(n), 2623475);
    }
    function bh(t, n) {
     var r = yh(t, n);
     return r && e.symbolName(r);
    }
    function xh(t, n, r) {
     return e.getSpellingSuggestion(t, n, i);
     function i(t) {
      var n = e.symbolName(t);
      return !e.startsWith(n, '"') && t.flags & r ? n : undefined;
     }
    }
    function kh(t, n, r) {
     if (!t || !(t.flags & 106500) || !t.valueDeclaration || !e.hasModifier(t.valueDeclaration, 8)) {
      return;
     }
     if (n && e.isWriteOnlyAccess(n) && !(t.flags & 65536 && !(t.flags & 32768))) {
      return;
     }
     if (r) {
      var i = e.findAncestor(n, e.isFunctionLikeDeclaration);
      if (i && i.symbol === t) {
       return;
      }
     }
     (e.getCheckFlags(t) & 1 ? Mn(t).target : t).isReferenced = 67108863;
    }
    function Sh(e, t) {
     switch (e.kind) {
     case 187:
      return Th(e, e.expression, t, tp(pb(e.expression)));

     case 146:
      return Th(e, e.left, t, tp(pb(e.left)));

     case 181:
      return Th(e, e, t, Ul(e));
     }
    }
    function wh(e, t, n) {
     return Th(e, e.kind === 181 ? e : e.expression, n.escapedName, t) && (!(n.flags & 8192) || Ch(n, t));
    }
    function Ch(t, n) {
     var r = qi(n, t.escapedName);
     var i = Es(Kd(r), 0);
     e.Debug.assert(i.length !== 0);
     return i.some(function(e) {
      var t = Ys(e);
      return !t || Tf(n, Dh(e, t, n));
     });
    }
    function Dh(e, t, n) {
     if (!e.typeParameters) {
      return t;
     }
     var r = sp(e.typeParameters, e, 0);
     kp(r.inferences, n, t);
     return gf(t, cc(e, Pp(r)));
    }
    function Th(t, n, r, i) {
     if (i === re || Ui(i)) {
      return true;
     }
     var a = Ds(i, r);
     return a ? nh(t, n, i, a) : e.isInJavaScriptFile(t) && (i.flags & 262144) !== 0 && i.types.some(function(e) {
      return Th(t, n, r, e);
     });
    }
    function Eh(t) {
     var n = t.initializer;
     if (n.kind === 236) {
      var r = n.declarations[0];
      if (r && !e.isBindingPattern(r.name)) {
       return Vr(r);
      }
     } else if (n.kind === 71) {
      return Ip(n);
     }
     return undefined;
    }
    function Nh(e) {
     return Ps(e, 1) && !Ps(e, 0);
    }
    function Ah(t) {
     var n = e.skipParentheses(t);
     if (n.kind === 71) {
      var r = Ip(n);
      if (r.flags & 3) {
       var i = t;
       var a = t.parent;
       while (a) {
        if (a.kind === 224 && i === a.statement && Eh(a) === r && Nh(lb(a.expression))) {
         return true;
        }
        i = a;
        a = a.parent;
       }
      }
     }
     return false;
    }
    function Fh(t) {
     var n = ah(t.expression);
     var r = t.argumentExpression;
     if (!r) {
      var i = e.getSourceFileOfNode(t);
      if (t.parent.kind === 190 && t.parent.expression === t) {
       var a = e.skipTrivia(i.text, t.expression.end);
       var o = t.end;
       wC(i, a, o - a, e.Diagnostics.new_T_cannot_be_used_to_create_an_array_Use_new_Array_T_instead);
      } else {
       var a = t.end - "]".length;
       var o = t.end;
       wC(i, a, o - a, e.Diagnostics.Expression_expected);
      }
      return re;
     }
     var s = Ah(r) ? le : pb(r);
     if (n === re || n === he) {
      return n;
     }
     if (Ly(n) && r.kind !== 9) {
      bn(r, e.Diagnostics.A_const_enum_member_can_only_be_accessed_using_a_string_literal);
      return re;
     }
     return Kb(dl(n, s, t), t);
    }
    function Ph(t, n, r) {
     if (n === re) {
      return false;
     }
     if (!e.isWellKnownSymbolSyntactically(t)) {
      return false;
     }
     if ((n.flags & 3072) === 0) {
      if (r) {
       bn(t, e.Diagnostics.A_computed_property_name_of_the_form_0_must_be_of_type_symbol, e.getTextOfNode(t));
      }
      return false;
     }
     var i = t.expression;
     var a = Ip(i);
     if (!a) {
      return false;
     }
     var o = tu(true);
     if (!o) {
      return false;
     }
     if (a !== o) {
      if (r) {
       bn(i, e.Diagnostics.Symbol_reference_does_not_refer_to_the_global_Symbol_constructor_object);
      }
      return false;
     }
     return true;
    }
    function Ih(t) {
     return e.isCallOrNewExpression(t);
    }
    function Oh(t) {
     if (Ih(t)) {
      e.forEach(t.typeArguments, cS);
     }
     if (t.kind === 191) {
      pb(t.template);
     } else if (t.kind !== 150) {
      e.forEach(t.arguments, function(e) {
       pb(e);
      });
     }
     return Oe;
    }
    function Mh(e) {
     Oh(e);
     return Me;
    }
    function Lh(t, n) {
     var r;
     var i;
     var a = 0;
     var o;
     var s = -1;
     var c;
     e.Debug.assert(!n.length);
     for (var u = 0, l = t; u < l.length; u++) {
      var f = l[u];
      var d = f.declaration && Vr(f.declaration);
      var p = f.declaration && f.declaration.parent;
      if (!i || d === i) {
       if (r && p === r) {
        o = o + 1;
       } else {
        r = p;
        o = a;
       }
      } else {
       o = a = n.length;
       r = p;
      }
      i = d;
      if (f.hasLiteralTypes) {
       s++;
       c = s;
       a++;
      } else {
       c = o;
      }
      n.splice(c, 0, f);
     }
    }
    function Rh(e) {
     return !!e && (e.kind === 206 || e.kind === 213 && e.isSpread);
    }
    function Bh(t) {
     return e.findIndex(t, Rh);
    }
    function zh(t, n, r, i) {
     if (i === void 0) {
      i = false;
     }
     var a;
     var o = false;
     var s = -1;
     if (e.isJsxOpeningLikeElement(t)) {
      return true;
     }
     if (t.kind === 191) {
      a = n.length;
      if (t.template.kind === 204) {
       var c = e.last(t.template.templateSpans);
       o = e.nodeIsMissing(c.literal) || !!c.literal.isUnterminated;
      } else {
       var u = t.template;
       e.Debug.assert(u.kind === 13);
       o = !!u.isUnterminated;
      }
     } else if (t.kind === 150) {
      a = Qh(t, undefined, r);
     } else {
      if (!t.arguments) {
       e.Debug.assert(t.kind === 190);
       return ey(r) === 0;
      }
      a = i ? n.length + 1 : n.length;
      o = t.arguments.end === t.end;
      s = Bh(n);
     }
     if (s >= 0) {
      return s >= ey(r) && (ny(r) || s < Zv(r));
     }
     if (!ny(r) && a > Zv(r)) {
      return false;
     }
     var l = a >= ey(r);
     return o || l;
    }
    function jh(t, n) {
     var r = e.length(t.typeParameters);
     var i = Js(t.typeParameters);
     return !n || n.length >= i && n.length <= r;
    }
    function qh(e) {
     if (e.flags & 131072) {
      var t = Zo(e);
      if (t.callSignatures.length === 1 && t.constructSignatures.length === 0 && t.properties.length === 0 && !t.stringIndexInfo && !t.numberIndexInfo) {
       return t.callSignatures[0];
      }
     }
     return undefined;
    }
    function Uh(t, n, r, i) {
     var a = sp(t.typeParameters, t, 1, i);
     var o = r ? of(n, r) : n;
     op(o, t, function(e, t) {
      kp(a.inferences, e, t);
     });
     if (!r) {
      kp(a.inferences, tc(n), tc(t), 8);
     }
     return ac(t, Pp(a), e.isInJavaScriptFile(n.declaration));
    }
    function Jh(e, t, n) {
     var r = $v(e, 0);
     var i = tb(t.attributes, r, D);
     kp(n.inferences, i, r);
     var a = $v(e, 0);
     var o = tb(t.attributes, a, n);
     kp(n.inferences, o, a);
     return Pp(n);
    }
    function Kh(e, t, n, r, i) {
     for (var a = 0, o = i.inferences; a < o.length; a++) {
      var s = o[a];
      if (!s.isFixed) {
       s.inferredType = undefined;
      }
     }
     if (e.kind !== 150) {
      var c = U_(e);
      if (c) {
       var u = gf(c, Zl(J_(e)));
       var l = qh(u);
       var f = l && l.typeParameters ? mc(oc(l, l.typeParameters)) : u;
       var d = tc(t);
       kp(i.inferences, f, d, 8);
      }
     }
     var p = Ys(t);
     if (p) {
      var m = $h(e);
      var _ = m ? pb(m) : _e;
      kp(i.inferences, _, p);
     }
     var g = Qh(e, n, t);
     var h = ty(t);
     var v = h ? Math.min(Zv(t) - 1, g) : g;
     for (var y = 0; y < v; y++) {
      var b = rv(e, n, y);
      if (b === undefined || b.kind !== 208) {
       var x = $v(t, y);
       var k = nv(e, y);
       if (k === undefined) {
        var S = r && r[y] !== undefined ? D : i;
        k = tb(b, x, S);
       }
       kp(i.inferences, k, x);
      }
     }
     if (h) {
      var w = Vh(e, n, v, g, h, i);
      kp(i.inferences, w, h);
     }
     if (r) {
      for (var y = 0; y < v; y++) {
       if (r[y] === false) {
        var b = n[y];
        var x = $v(t, y);
        kp(i.inferences, tb(b, x, i), x);
       }
      }
     }
     return Pp(i);
    }
    function Vh(t, n, r, i, a, o) {
     if (r >= i - 1) {
      var s = rv(t, n, i - 1);
      if (Rh(s)) {
       return s.kind === 213 ? bu(s.type) : tb(s.expression, a, o);
      }
     }
     var c = Ps(a, 1) || ee;
     var u = Iy(c, 32764 | 1048576);
     var l = [];
     var f = -1;
     for (var d = r; d < i; d++) {
      var p = nv(t, d);
      if (!p) {
       p = tb(n[d], c, o);
       if (f < 0 && Rh(n[d])) {
        f = d - r;
       }
      }
      l.push(u ? Ml(p) : Ad(p));
     }
     return f < 0 ? wu(l) : wu(e.append(l.slice(0, f), Ru(l.slice(f))), f, true);
    }
    function Wh(t, n, r, i) {
     var a = e.isInJavaScriptFile(t.declaration);
     var o = t.typeParameters;
     var s = Ks(e.map(n, Ul), o, Js(o), a);
     var c;
     for (var u = 0; u < n.length; u++) {
      e.Debug.assert(o[u] !== undefined, "Should not call checkTypeArguments with too many type arguments");
      var l = ss(o[u]);
      if (!l) continue;
      var f = r && i ? function() {
       return e.chainDiagnosticMessages(undefined, e.Diagnostics.Type_0_does_not_satisfy_the_constraint_1);
      } : undefined;
      var d = i || e.Diagnostics.Type_0_does_not_satisfy_the_constraint_1;
      if (!c) {
       c = $l(o, s);
      }
      var p = s[u];
      if (!Ff(p, xo(gf(l, c), p), r ? n[u] : undefined, d, f)) {
       return false;
      }
     }
     return s;
    }
    function Hh(t, n, r) {
     var i = t.attributes.end === t.end;
     if (i) {
      return true;
     }
     var a = e.Diagnostics.Argument_of_type_0_is_not_assignable_to_parameter_of_type_1;
     var o = $v(n, 0);
     var s = tb(t.attributes, o, undefined);
     var c = rs(s);
     for (var u = 0, l = c; u < l.length; u++) {
      var f = l[u];
      if (!Ds(o, f.escapedName) && yg(f.escapedName)) {
       return false;
      }
     }
     return Yf(s, o, r, undefined, a);
    }
    function Gh(t, n, r, i, a, o) {
     if (e.isJsxOpeningLikeElement(t)) {
      return Hh(t, r, i);
     }
     var s = Ys(r);
     if (s && s !== _e && t.kind !== 190) {
      var c = $h(t);
      var u = c ? pb(c) : _e;
      var l = o ? c || t : undefined;
      var f = e.Diagnostics.The_this_context_of_type_0_is_not_assignable_to_method_s_this_of_type_1;
      if (!Yf(u, s, i, l, f)) {
       return false;
      }
     }
     var d = e.Diagnostics.Argument_of_type_0_is_not_assignable_to_parameter_of_type_1;
     var p = Qh(t, n, r);
     var m = r.hasRestParameter ? r.parameters.length - 1 : -1;
     var _ = m >= 0 ? xa(r.parameters[m]) : ee;
     for (var g = 0; g < p; g++) {
      var h = rv(t, n, g);
      if (h === undefined || h.kind !== 208) {
       if (g === m && (_.flags & 65536 || Rh(h) && !xd(_))) {
        var v = Vh(t, n, g, p, _, undefined);
        return Yf(v, _, i, h, d);
       } else {
        var y = $v(r, g);
        var b = nv(t, g) || tb(h, y, a && a[g] ? D : undefined);
        var x = a ? Gd(b) : b;
        var l = o ? iv(t, g, h) : undefined;
        if (!Yf(x, y, i, l, d)) {
         return false;
        }
       }
      }
     }
     return true;
    }
    function $h(t) {
     if (t.kind === 189) {
      var n = e.skipOuterExpressions(t.expression);
      if (n.kind === 187 || n.kind === 188) {
       return n.expression;
      }
     }
    }
    function Xh(t) {
     if (t.kind === 191) {
      var n = t.template;
      var r = [ undefined ];
      if (n.kind === 204) {
       e.forEach(n.templateSpans, function(e) {
        r.push(e.expression);
       });
      }
      return r;
     } else if (t.kind === 150) {
      return undefined;
     } else if (e.isJsxOpeningLikeElement(t)) {
      return t.attributes.properties.length > 0 ? [ t.attributes ] : e.emptyArray;
     } else {
      var i = t.arguments || e.emptyArray;
      var a = i.length;
      if (a && Rh(i[a - 1]) && Bh(i) === a - 1) {
       var o = i[a - 1];
       var s = nb(o.expression);
       if (Id(s)) {
        var c = s.typeArguments || e.emptyArray;
        var u = s.target.hasRestElement ? c.length - 1 : -1;
        var l = e.map(c, function(t, n) {
         var r = e.createNode(213, o.pos, o.end);
         r.parent = o;
         r.type = t;
         r.isSpread = n === u;
         return r;
        });
        return e.concatenate(i.slice(0, a - 1), l);
       }
      }
      return i;
     }
    }
    function Qh(t, n, r) {
     if (t.kind === 150) {
      switch (t.parent.kind) {
      case 238:
      case 207:
       return 1;

      case 152:
       return 2;

      case 154:
      case 156:
      case 157:
       if (E === 0) {
        return 2;
       }
       return r.parameters.length >= 3 ? 3 : 2;

      case 149:
       return 3;

      default:
       return e.Debug.fail();
      }
     } else {
      return n.length;
     }
    }
    function Yh(t) {
     if (t.kind === 238) {
      var n = Vr(t);
      return xa(n);
     }
     if (t.kind === 149) {
      t = t.parent;
      if (t.kind === 155) {
       var n = Vr(t);
       return xa(n);
      }
     }
     if (t.kind === 152 || t.kind === 154 || t.kind === 156 || t.kind === 157) {
      return US(t);
     }
     e.Debug.fail("Unsupported decorator target.");
     return re;
    }
    function Zh(t) {
     if (t.kind === 238) {
      e.Debug.fail("Class decorators should not have a second synthetic argument.");
      return re;
     }
     if (t.kind === 149) {
      t = t.parent;
      if (t.kind === 155) {
       return ee;
      }
     }
     if (t.kind === 152 || t.kind === 154 || t.kind === 156 || t.kind === 157) {
      var n = t;
      var r = n.name;
      switch (r.kind) {
      case 71:
       return Ll(e.idText(r));

      case 8:
      case 9:
       return Ll(r.text);

      case 147:
       var i = lg(r);
       if (Oy(i, 3072)) {
        return i;
       } else {
        return ue;
       }

      default:
       e.Debug.fail("Unsupported property name.");
       return re;
      }
     }
     e.Debug.fail("Unsupported decorator target.");
     return re;
    }
    function ev(t) {
     if (t.kind === 238) {
      e.Debug.fail("Class decorators should not have a third synthetic argument.");
      return re;
     }
     if (t.kind === 149) {
      return le;
     }
     if (t.kind === 152) {
      e.Debug.fail("Property decorators should not have a third synthetic argument.");
      return re;
     }
     if (t.kind === 154 || t.kind === 156 || t.kind === 157) {
      var n = BS(t);
      return _u(n);
     }
     e.Debug.fail("Unsupported decorator target.");
     return re;
    }
    function tv(t, n) {
     if (n === 0) {
      return Yh(t.parent);
     } else if (n === 1) {
      return Zh(t.parent);
     } else if (n === 2) {
      return ev(t.parent);
     }
     e.Debug.fail("Decorators should not have a fourth synthetic argument.");
     return re;
    }
    function nv(e, t) {
     if (e.kind === 150) {
      return tv(e, t);
     } else if (t === 0 && e.kind === 191) {
      return Zc();
     }
     return undefined;
    }
    function rv(e, t, n) {
     if (e.kind === 150 || n === 0 && e.kind === 191) {
      return undefined;
     }
     return t[n];
    }
    function iv(e, t, n) {
     if (e.kind === 150) {
      return e.expression;
     } else if (t === 0 && e.kind === 191) {
      return e.template;
     } else {
      return n;
     }
    }
    function av(t, n, r) {
     var i = Number.POSITIVE_INFINITY;
     var a = Number.NEGATIVE_INFINITY;
     var o = Number.NEGATIVE_INFINITY;
     var s = Number.POSITIVE_INFINITY;
     var c = r.length;
     for (var u = 0, l = n; u < l.length; u++) {
      var f = l[u];
      var d = ey(f);
      var p = Zv(f);
      if (d < c && d > o) o = d;
      if (c < p && p < s) s = p;
      i = Math.min(i, d);
      a = Math.max(a, p);
     }
     var m = e.some(n, ny);
     var _ = m ? i : i < a ? i + "-" + a : i;
     var g = Bh(r) > -1;
     if (c <= a && g) {
      c--;
     }
     if (m || g) {
      var h = m && g ? e.Diagnostics.Expected_at_least_0_arguments_but_got_1_or_more : m ? e.Diagnostics.Expected_at_least_0_arguments_but_got_1 : e.Diagnostics.Expected_0_arguments_but_got_1_or_more;
      return e.createDiagnosticForNode(t, h, _, c);
     }
     if (i < c && c < a) {
      return e.createDiagnosticForNode(t, e.Diagnostics.No_overload_expects_0_arguments_but_overloads_do_exist_that_expect_either_1_or_2_arguments, c, o, s);
     }
     return e.createDiagnosticForNode(t, e.Diagnostics.Expected_0_arguments_but_got_1, _, c);
    }
    function ov(t, n, r) {
     var i = Infinity;
     var a = -Infinity;
     for (var o = 0, s = n; o < s.length; o++) {
      var c = s[o];
      i = Math.min(i, Js(c.typeParameters));
      a = Math.max(a, e.length(c.typeParameters));
     }
     var u = i === a ? i : i + "-" + a;
     return e.createDiagnosticForNodeArray(e.getSourceFileOfNode(t), r, e.Diagnostics.Expected_0_type_arguments_but_got_1, u, r.length);
    }
    function sv(t, n, r, i) {
     var o = t.kind === 191;
     var s = t.kind === 150;
     var c = e.isJsxOpeningLikeElement(t);
     var u;
     if (!s) {
      u = t.typeArguments;
      if (o || c || t.expression.kind !== 97) {
       e.forEach(u, cS);
      }
     }
     var l = r || [];
     Lh(n, l);
     if (!l.length) {
      Vt.add(e.createDiagnosticForNode(t, e.Diagnostics.Call_target_does_not_contain_any_signatures));
      return Mh(t);
     }
     var f = Xh(t);
     var d = l.length === 1 && !l[0].typeParameters;
     var p;
     var m = 0;
     if (!s && !d) {
      for (var _ = o ? 1 : 0; _ < f.length; _++) {
       if (yf(f[_])) {
        if (!p) {
         p = new Array(f.length);
        }
        p[_] = true;
        m++;
       }
      }
     }
     var g;
     var h;
     var v;
     var y;
     var b = r && t.kind === 189 && t.arguments.hasTrailingComma;
     if (l.length > 1) {
      y = x(l, en, b);
     }
     if (!y) {
      y = x(l, tn, b);
     }
     if (y) {
      return y;
     }
     if (g) {
      if (c) {
       return g;
      }
      Gh(t, f, g, tn, undefined, true);
     } else if (h) {
      Vt.add(av(t, [ h ], f));
     } else if (v) {
      Wh(v, t.typeArguments, true, i);
     } else if (u && e.every(n, function(t) {
      return e.length(t.typeParameters) !== u.length;
     })) {
      Vt.add(ov(t, n, u));
     } else if (f) {
      Vt.add(av(t, n, f));
     } else if (i) {
      Vt.add(e.createDiagnosticForNode(t, i));
     }
     return a || !f ? Mh(t) : cv(t, l, f, !!r);
     function x(n, r, i) {
      if (i === void 0) {
       i = false;
      }
      g = undefined;
      h = undefined;
      v = undefined;
      if (d) {
       var a = n[0];
       if (u || !zh(t, f, a, i)) {
        return undefined;
       }
       if (!Gh(t, f, a, r, p, false)) {
        g = a;
        return undefined;
       }
       return a;
      }
      for (var o = 0; o < n.length; o++) {
       var s = n[o];
       if (!jh(s, u) || !zh(t, f, s, i)) {
        continue;
       }
       var a = void 0;
       var c = s.typeParameters ? sp(s.typeParameters, s, e.isInJavaScriptFile(t) ? 4 : 0) : undefined;
       while (true) {
        a = s;
        if (a.typeParameters) {
         var l = void 0;
         if (u) {
          var _ = Wh(a, u, false);
          if (_) {
           l = _;
          } else {
           v = s;
           break;
          }
         } else {
          l = Kh(t, a, f, p, c);
         }
         var y = e.isInJavaScriptFile(a.declaration);
         a = ac(a, l, y);
         if (ty(s) && !zh(t, f, a, i)) {
          h = a;
          break;
         }
        }
        if (!Gh(t, f, a, r, p, false)) {
         g = a;
         break;
        }
        if (m === 0) {
         n[o] = a;
         return a;
        }
        m--;
        if (m > 0) {
         p[p.indexOf(true)] = false;
        } else {
         p = undefined;
        }
       }
      }
      return undefined;
     }
    }
    function cv(t, n, r, i) {
     e.Debug.assert(n.length > 0);
     return i || n.length === 1 || n.some(function(e) {
      return !!e.typeParameters;
     }) ? pv(t, n, r) : uv(n);
    }
    function uv(t) {
     var n = e.mapDefined(t, function(e) {
      return e.thisParameter;
     });
     var r;
     if (n.length) {
      r = fv(n, n.map(Hv));
     }
     var i = e.minAndMax(t, lv), a = i.min, o = i.max;
     var s = [];
     var c = function(n) {
      var r = e.mapDefined(t, function(t) {
       var r = t.parameters, i = t.hasRestParameter;
       return i ? n < r.length - 1 ? r[n] : e.last(r) : n < r.length ? r[n] : undefined;
      });
      e.Debug.assert(r.length !== 0);
      s.push(fv(r, e.mapDefined(t, function(e) {
       return Xv(e, n);
      })));
     };
     for (var u = 0; u < o; u++) {
      c(u);
     }
     var l = e.mapDefined(t, function(t) {
      return t.hasRestParameter ? e.last(t.parameters) : undefined;
     });
     var f = l.length !== 0;
     if (f) {
      var d = bu(Ru(e.mapDefined(t, ic), 2));
      s.push(dv(l, d));
     }
     return Co(t[0].declaration, undefined, r, s, Wu(t.map(tc)), undefined, a, f, t.some(function(e) {
      return e.hasLiteralTypes;
     }));
    }
    function lv(e) {
     var t = e.parameters.length;
     return e.hasRestParameter ? t - 1 : t;
    }
    function fv(e, t) {
     return dv(e, Ru(t, 2));
    }
    function dv(t, n) {
     return Wd(e.first(t), n);
    }
    function pv(t, n, r) {
     var i = mv(n, J === undefined ? r.length : J);
     var a = n[i];
     var o = a.typeParameters;
     if (!o) {
      return a;
     }
     var s = Ih(t) ? t.typeArguments || e.emptyArray : e.emptyArray;
     var c = s.map(function(e) {
      return BS(e) || ee;
     });
     while (c.length > o.length) {
      c.pop();
     }
     while (c.length < o.length) {
      c.push(ss(o[c.length]) || Fp(e.isInJavaScriptFile(t)));
     }
     var u = sc(a, c);
     n[i] = u;
     return u;
    }
    function mv(e, t) {
     var n = -1;
     var r = -1;
     for (var i = 0; i < e.length; i++) {
      var a = e[i];
      var o = Zv(a);
      if (ny(a) || o >= t) {
       return i;
      }
      if (o > r) {
       r = o;
       n = i;
      }
     }
     return n;
    }
    function _v(t, n) {
     if (t.expression.kind === 97) {
      var r = m_(t.expression);
      if (Ui(r)) {
       e.forEach(t.arguments, db);
       return Oe;
      }
      if (r !== re) {
       var i = e.getEffectiveBaseTypeNode(e.getContainingClass(t));
       if (i) {
        var a = Oa(r, i.typeArguments, i);
        return sv(t, a, n);
       }
      }
      return Oh(t);
     }
     var o = ah(t.expression, e.Diagnostics.Cannot_invoke_an_object_which_is_possibly_null, e.Diagnostics.Cannot_invoke_an_object_which_is_possibly_undefined, e.Diagnostics.Cannot_invoke_an_object_which_is_possibly_null_or_undefined);
     if (o === he) {
      return Re;
     }
     var s = ks(o);
     if (s === re) {
      return Mh(t);
     }
     var c = Es(s, 0);
     var u = Es(s, 1);
     if (gv(o, s, c.length, u.length)) {
      if (o !== re && t.typeArguments) {
       bn(t, e.Diagnostics.Untyped_function_calls_may_not_accept_type_arguments);
      }
      return Oh(t);
     }
     if (!c.length) {
      if (u.length) {
       bn(t, e.Diagnostics.Value_of_type_0_is_not_callable_Did_you_mean_to_include_new, Si(o));
      } else {
       bv(t, s, 0);
      }
      return Mh(t);
     }
     return sv(t, c, n);
    }
    function gv(e, t, n, r) {
     return Ui(e) || Ui(t) && e.flags & 65536 || !n && !r && !(t.flags & (262144 | 32768)) && Tf(e, He);
    }
    function hv(t, n) {
     if (t.arguments && E < 1) {
      var r = Bh(t.arguments);
      if (r >= 0) {
       bn(t.arguments[r], e.Diagnostics.Spread_operator_in_new_expressions_is_only_available_when_targeting_ECMAScript_5_and_higher);
      }
     }
     var i = ah(t.expression);
     if (i === he) {
      return Re;
     }
     i = ks(i);
     if (i === re) {
      return Mh(t);
     }
     if (Ui(i)) {
      if (t.typeArguments) {
       bn(t, e.Diagnostics.Untyped_function_calls_may_not_accept_type_arguments);
      }
      return Oh(t);
     }
     var a = Es(i, 1);
     if (a.length) {
      if (!yv(t, a[0])) {
       return Mh(t);
      }
      var o = i.symbol && e.getClassLikeDeclarationOfSymbol(i.symbol);
      if (o && e.hasModifier(o, 128)) {
       bn(t, e.Diagnostics.Cannot_create_an_instance_of_an_abstract_class);
       return Mh(t);
      }
      return sv(t, a, n);
     }
     var s = Es(i, 0);
     if (s.length) {
      var c = sv(t, s, n);
      if (!Nv(c.declaration) && tc(c) !== _e) {
       bn(t, e.Diagnostics.Only_a_void_function_can_be_called_with_the_new_keyword);
      }
      if (Ys(c) === _e) {
       bn(t, e.Diagnostics.A_function_that_is_called_with_the_new_keyword_cannot_have_a_this_type_that_is_void);
      }
      return c;
     }
     bv(t, i, 1);
     return Mh(t);
    }
    function vv(t, n) {
     var r = La(n);
     if (!e.length(r)) {
      return false;
     }
     var i = r[0];
     if (i.flags & 524288) {
      var a = i.types;
      var o = e.countWhere(a, Aa);
      var s = 0;
      for (var c = 0, u = i.types; c < u.length; c++) {
       var l = u[c];
       s++;
       if (o === 0 || o === a.length && s === 0 || !Aa(l)) {
        if (e.getObjectFlags(l) & (1 | 2)) {
         if (l.symbol === t) {
          return true;
         }
         if (vv(t, l)) {
          return true;
         }
        }
       }
      }
      return false;
     }
     if (i.symbol === t) {
      return true;
     }
     return vv(t, i);
    }
    function yv(t, n) {
     if (!n || !n.declaration) {
      return true;
     }
     var r = n.declaration;
     var i = e.getSelectedModifierFlags(r, 24);
     if (!i) {
      return true;
     }
     var a = e.getClassLikeDeclarationOfSymbol(r.parent.symbol);
     var o = Ya(r.parent.symbol);
     if (!NS(t, a)) {
      var s = e.getContainingClass(t);
      if (s && i & 16) {
       var c = BS(s);
       if (vv(r.parent.symbol, c)) {
        return true;
       }
      }
      if (i & 8) {
       bn(t, e.Diagnostics.Constructor_of_class_0_is_private_and_only_accessible_within_the_class_declaration, Si(o));
      }
      if (i & 16) {
       bn(t, e.Diagnostics.Constructor_of_class_0_is_protected_and_only_accessible_within_the_class_declaration, Si(o));
      }
      return false;
     }
     return true;
    }
    function bv(t, n, r) {
     xv(n, r, bn(t, r === 0 ? e.Diagnostics.Cannot_invoke_an_expression_whose_type_lacks_a_call_signature_Type_0_has_no_compatible_call_signatures : e.Diagnostics.Cannot_use_new_with_an_expression_whose_type_lacks_a_call_or_construct_signature, Si(n)));
    }
    function xv(t, n, r) {
     if (!t.symbol) {
      return;
     }
     var i = Mn(t.symbol).originatingImport;
     if (i && !e.isImportCall(i)) {
      var a = Es(xa(Mn(t.symbol).target), n);
      if (!a || !a.length) return;
      yn(r, e.createDiagnosticForNode(i, e.Diagnostics.Type_originates_at_this_import_A_namespace_style_import_cannot_be_called_or_constructed_and_will_cause_a_failure_at_runtime_Consider_using_a_default_import_or_import_require_here_instead));
     }
    }
    function kv(e, t) {
     var n = pb(e.tag);
     var r = ks(n);
     if (r === re) {
      return Mh(e);
     }
     var i = Es(r, 0);
     var a = Es(r, 1);
     if (gv(n, r, i.length, a.length)) {
      return Oh(e);
     }
     if (!i.length) {
      bv(e, r, 0);
      return Mh(e);
     }
     return sv(e, i, t);
    }
    function Sv(t) {
     switch (t.parent.kind) {
     case 238:
     case 207:
      return e.Diagnostics.Unable_to_resolve_signature_of_class_decorator_when_called_as_an_expression;

     case 149:
      return e.Diagnostics.Unable_to_resolve_signature_of_parameter_decorator_when_called_as_an_expression;

     case 152:
      return e.Diagnostics.Unable_to_resolve_signature_of_property_decorator_when_called_as_an_expression;

     case 154:
     case 156:
     case 157:
      return e.Diagnostics.Unable_to_resolve_signature_of_method_decorator_when_called_as_an_expression;

     default:
      return e.Debug.fail();
     }
    }
    function wv(t, n) {
     var r = pb(t.expression);
     var i = ks(r);
     if (i === re) {
      return Mh(t);
     }
     var a = Es(i, 0);
     var o = Es(i, 1);
     if (gv(r, i, a.length, o.length)) {
      return Oh(t);
     }
     if (Cv(t, a)) {
      var s = e.getTextOfNode(t.expression, false);
      bn(t, e.Diagnostics._0_accepts_too_few_arguments_to_be_used_as_a_decorator_here_Did_you_mean_to_call_it_first_and_write_0, s);
      return Mh(t);
     }
     var c = Sv(t);
     if (!a.length) {
      var u = e.chainDiagnosticMessages(undefined, e.Diagnostics.Cannot_invoke_an_expression_whose_type_lacks_a_call_signature_Type_0_has_no_compatible_call_signatures, Si(i));
      u = e.chainDiagnosticMessages(u, c);
      var l = e.createDiagnosticForNodeFromMessageChain(t, u);
      Vt.add(l);
      xv(i, 0, l);
      return Mh(t);
     }
     return sv(t, a, n, c);
    }
    function Cv(t, n) {
     return n.length && e.every(n, function(e) {
      return e.minArgumentCount === 0 && !e.hasRestParameter && e.parameters.length < Qh(t, undefined, e);
     });
    }
    function Dv(t, n, r) {
     e.Debug.assert(!(n.flags & 262144));
     var i = n && Es(n, 0);
     if (i && i.length > 0) {
      return sv(t, i, r);
     }
     return undefined;
    }
    function Tv(t, n) {
     switch (t.kind) {
     case 189:
      return _v(t, n);

     case 190:
      return hv(t, n);

     case 191:
      return kv(t, n);

     case 150:
      return wv(t, n);

     case 260:
     case 259:
      var r = pb(t.tagName);
      return km(r, function(r) {
       var i = Dv(t, r, n);
       if (i && i !== Me) {
        return i;
       }
       var a = Rg(t, r);
       if (n && e.length(a)) {
        n.push.apply(n, a);
       }
       return e.length(a) ? a[0] : Me;
      }) || Me;
     }
     throw e.Debug.assertNever(t, "Branch in 'resolveSignature' should be unreachable.");
    }
    function Ev(e, t) {
     var n = Ln(e);
     var r = n.resolvedSignature;
     if (r && r !== Le && !t) {
      return r;
     }
     n.resolvedSignature = Le;
     var i = Tv(e, t);
     n.resolvedSignature = kt === St ? i : r;
     return i;
    }
    function Nv(t) {
     if (t && e.isInJavaScriptFile(t)) {
      if (e.getJSDocClassTag(t)) return true;
      var n = e.isFunctionDeclaration(t) || e.isFunctionExpression(t) ? Vr(t) : e.isVariableDeclaration(t) && t.initializer && e.isFunctionExpression(t.initializer) ? Vr(t.initializer) : undefined;
      return !!n && n.members !== undefined;
     }
     return false;
    }
    function Av(e) {
     var t;
     if (Nv(e.valueDeclaration)) {
      t = Iv(e);
     }
     var n = Fv(e);
     var r = xa(e);
     if (r.symbol && !Ov(r) && Nv(r.symbol.valueDeclaration)) {
      t = Iv(r.symbol);
     }
     return n && t ? Wu([ t, n ]) : n || t;
    }
    function Fv(t) {
     var n = t.valueDeclaration;
     var r = n && n.parent && (e.isFunctionDeclaration(n) && Vr(n) || e.isBinaryExpression(n.parent) && Vr(n.parent.left) || e.isVariableDeclaration(n.parent) && Vr(n.parent));
     if (r) {
      var i = e.forEach(r.declarations, Pv);
      if (i) {
       return pb(i);
      }
     }
    }
    function Pv(t) {
     if (!t.parent) {
      return false;
     }
     var n = t.parent;
     while (n && n.kind === 187) {
      n = n.parent;
     }
     if (n && e.isBinaryExpression(n) && e.isPrototypeAccess(n.left) && n.operatorToken.kind === 58) {
      var r = e.getInitializerOfBinaryExpression(n);
      return e.isObjectLiteralExpression(r) && r;
     }
    }
    function Iv(t) {
     var n = Mn(t);
     if (!n.inferredClassType) {
      n.inferredClassType = oi(t, yo(t) || C, e.emptyArray, e.emptyArray, undefined, undefined);
     }
     return n.inferredClassType;
    }
    function Ov(t) {
     return t.symbol && e.getObjectFlags(t) & 16 && Mn(t.symbol).inferredClassType === t;
    }
    function Mv(t) {
     if (!Hw(t, t.typeArguments)) $w(t.arguments);
     var n = Ev(t);
     if (t.expression.kind === 97) {
      return _e;
     }
     if (t.kind === 190) {
      var r = n.declaration;
      if (r && r.kind !== 155 && r.kind !== 159 && r.kind !== 164 && !e.isJSDocConstructSignature(r)) {
       var i = pb(t.expression).symbol;
       if (!i && t.expression.kind === 71) {
        i = Ip(t.expression);
       }
       var a = i && Av(i);
       if (a) {
        return n.target ? gf(a, n.mapper) : a;
       }
       if (O) {
        bn(t, e.Diagnostics.new_expression_whose_target_lacks_a_construct_signature_implicitly_has_an_any_type);
       }
       return ee;
      }
     }
     if (e.isInJavaScriptFile(t) && zv(t)) {
      return Qs(t.arguments[0]);
     }
     var o = tc(n);
     if (o.flags & 3072 && Lv(t)) {
      return zl(e.walkUpParenthesizedExpressions(t.parent));
     }
     var s;
     if (e.isInJavaScriptFile(t)) {
      var c = e.getDeclarationOfJSInitializer(t);
      if (c) {
       var u = Vr(c);
       if (u && e.hasEntries(u.exports)) {
        s = oi(u, u.exports, e.emptyArray, e.emptyArray, je, undefined);
       }
      }
     }
     return s ? Wu([ o, s ]) : o;
    }
    function Lv(t) {
     if (!e.isCallExpression(t)) return false;
     var n = t.expression;
     if (e.isPropertyAccessExpression(n) && n.name.escapedText === "for") {
      n = n.expression;
     }
     if (!e.isIdentifier(n) || n.escapedText !== "Symbol") {
      return false;
     }
     var r = tu(false);
     if (!r) {
      return false;
     }
     return r === qn(n, "Symbol", 67216319, undefined, undefined, false);
    }
    function Rv(t) {
     if (!$w(t.arguments)) LC(t);
     if (t.arguments.length === 0) {
      return ly(t, ee);
     }
     var n = t.arguments[0];
     var r = nb(n);
     for (var i = 1; i < t.arguments.length; ++i) {
      nb(t.arguments[i]);
     }
     if (r.flags & 8192 || r.flags & 16384 || !Tf(r, ue)) {
      bn(n, e.Diagnostics.Dynamic_import_s_specifier_must_be_of_type_string_but_here_has_type_0, Si(r));
     }
     var a = Tr(t, n);
     if (a) {
      var o = Or(a, n, true);
      if (o) {
       return ly(t, Bv(xa(o), o, a));
      }
     }
     return ly(t, ee);
    }
    function Bv(t, n, r) {
     if (A && t && t !== re) {
      var i = t;
      if (!i.syntheticType) {
       var a = e.find(r.declarations, e.isSourceFile);
       var o = ar(a, r, false);
       if (o) {
        var s = e.createSymbolTable();
        var c = Sn(2097152, "default");
        c.target = vr(n);
        s.set("default", c);
        var u = Sn(2048, "__type");
        var l = oi(u, s, e.emptyArray, e.emptyArray, undefined, undefined);
        u.type = l;
        i.syntheticType = pg(t) ? Nl(t, l, u, 0, 0) : l;
       } else {
        i.syntheticType = t;
       }
      }
      return i.syntheticType;
     }
     return t;
    }
    function zv(t) {
     if (!e.isRequireCall(t, true)) {
      return false;
     }
     if (!e.isIdentifier(t.expression)) return e.Debug.fail();
     var n = qn(t.expression, t.expression.escapedText, 67216319, undefined, undefined, true);
     if (n === q) {
      return true;
     }
     if (n.flags & 2097152) {
      return false;
     }
     var r = n.flags & 16 ? 237 : n.flags & 3 ? 235 : 0;
     if (r !== 0) {
      var i = e.getDeclarationOfKind(n, r);
      return !!i && !!(i.flags & 4194304);
     }
     return false;
    }
    function jv(e) {
     Hw(e, e.typeArguments);
     if (E < 2) {
      Ew(e, 65536);
     }
     return tc(Ev(e));
    }
    function qv(e) {
     return Uv(e, e.type, e.expression);
    }
    function Uv(t, n, r, i) {
     var o = Gd(Nd(pb(r, i)));
     cS(n);
     var s = Ul(n);
     if (a && s !== re) {
      var c = tp(o);
      if (!Nf(s, c)) {
       qf(o, s, t, e.Diagnostics.Type_0_cannot_be_converted_to_type_1);
      }
     }
     return s;
    }
    function Jv(e) {
     return Kd(pb(e.expression));
    }
    function Kv(t) {
     xC(t);
     if (t.keywordToken === 94) {
      return Vv(t);
     }
     if (t.keywordToken === 91) {
      return Wv(t);
     }
     return e.Debug.assertNever(t.keywordToken);
    }
    function Vv(t) {
     var n = e.getNewTargetContainer(t);
     if (!n) {
      bn(t, e.Diagnostics.Meta_property_0_is_only_allowed_in_the_body_of_a_function_declaration_function_expression_or_constructor, "new.target");
      return re;
     } else if (n.kind === 155) {
      var r = Vr(n.parent);
      return xa(r);
     } else {
      var r = Vr(n);
      return xa(r);
     }
    }
    function Wv(t) {
     if (E < 6 || N < e.ModuleKind.ESNext) {
      bn(t, e.Diagnostics.The_import_meta_meta_property_is_only_allowed_using_ESNext_for_the_target_and_module_compiler_options);
     }
     var n = e.getSourceFileOfNode(t);
     e.Debug.assert(!!(n.flags & 1048576), "Containing file is missing import meta node flag.");
     e.Debug.assert(!!n.externalModuleIndicator, "Containing file should be a module.");
     return t.name.escapedText === "meta" ? eu() : re;
    }
    function Hv(t) {
     var n = xa(t);
     if (F) {
      var r = t.valueDeclaration;
      if (r && e.hasInitializer(r)) {
       return Ud(n);
      }
     }
     return n;
    }
    function Gv(e, t) {
     var n = e.parameters.length - (e.hasRestParameter ? 1 : 0);
     if (t < n) {
      return e.parameters[t].escapedName;
     }
     var r = e.parameters[n] || Y;
     var i = xa(r);
     if (Id(i)) {
      var a = i.target.associatedNames;
      var o = t - n;
      return a ? a[o] : r.escapedName + "_" + o;
     }
     return r.escapedName;
    }
    function $v(e, t) {
     return Xv(e, t) || ee;
    }
    function Xv(e, t) {
     var n = e.parameters.length - (e.hasRestParameter ? 1 : 0);
     if (t < n) {
      return Hv(e.parameters[t]);
     }
     if (e.hasRestParameter) {
      var r = xa(e.parameters[n]);
      if (Id(r)) {
       if (t - n < Md(r)) {
        return r.typeArguments[t - n];
       }
       var i = Od(r);
       if (i) {
        return i;
       }
      }
      return Ps(r, 1);
     }
     return undefined;
    }
    function Qv(e, t) {
     var n = Zv(e);
     var r = ny(e);
     if (r && t === n - 1) {
      var i = ty(e);
      if (i) {
       return i;
      }
     }
     var a = r ? Math.min(t, n - 1) : t;
     var o = [];
     var s = [];
     for (var c = a; c < n; c++) {
      o.push($v(e, c));
      s.push(Gv(e, c));
     }
     var u = ey(e);
     var l = u < a ? 0 : u - a;
     return wu(o, l, r, s);
    }
    function Yv(e) {
     if (e.hasRestParameter) {
      var t = xa(e.parameters[e.parameters.length - 1]);
      if (Id(t)) {
       return Od(t);
      }
      return t;
     }
     return undefined;
    }
    function Zv(t) {
     var n = t.parameters.length;
     if (t.hasRestParameter) {
      var r = xa(t.parameters[n - 1]);
      if (Id(r)) {
       return n + (r.typeArguments || e.emptyArray).length - 1;
      }
     }
     return n;
    }
    function ey(e) {
     if (e.hasRestParameter) {
      var t = xa(e.parameters[e.parameters.length - 1]);
      if (Id(t)) {
       var n = t.target.minLength;
       if (n > 0) {
        return e.parameters.length - 1 + n;
       }
      }
     }
     return e.minArgumentCount;
    }
    function ty(e) {
     if (e.hasRestParameter) {
      var t = xa(e.parameters[e.parameters.length - 1]);
      if (t.flags & 15794176) {
       return t;
      }
     }
     return undefined;
    }
    function ny(e) {
     if (e.hasRestParameter) {
      var t = xa(e.parameters[e.parameters.length - 1]);
      return !Id(t) || t.target.hasRestElement;
     }
     return false;
    }
    function ry(e) {
     return iy(e, ge);
    }
    function iy(e, t) {
     return e.parameters.length > 0 ? $v(e, 0) : t;
    }
    function ay(t, n, r) {
     var i = t.parameters.length - (t.hasRestParameter ? 1 : 0);
     for (var a = 0; a < i; a++) {
      var o = t.parameters[a].valueDeclaration;
      if (o.type) {
       var s = e.getEffectiveTypeAnnotationNode(o);
       if (s) {
        kp(r.inferences, Ul(s), $v(n, a));
       }
      }
     }
    }
    function oy(t, n) {
     t.typeParameters = n.typeParameters;
     if (n.thisParameter) {
      var r = t.thisParameter;
      if (!r || r.valueDeclaration && !r.valueDeclaration.type) {
       if (!r) {
        t.thisParameter = Wd(n.thisParameter, undefined);
       }
       cy(t.thisParameter, xa(n.thisParameter));
      }
     }
     var i = t.parameters.length - (t.hasRestParameter ? 1 : 0);
     for (var a = 0; a < i; a++) {
      var r = t.parameters[a];
      if (!e.getEffectiveTypeAnnotationNode(r.valueDeclaration)) {
       var o = $v(n, a);
       cy(r, o);
      }
     }
     if (t.hasRestParameter) {
      var r = e.last(t.parameters);
      if (wn(r) || !e.getEffectiveTypeAnnotationNode(r.valueDeclaration)) {
       var o = Qv(n, i);
       cy(r, o);
      }
     }
    }
    function sy(t) {
     for (var n = 0, r = t.elements; n < r.length; n++) {
      var i = r[n];
      if (!e.isOmittedExpression(i)) {
       if (i.name.kind === 71) {
        Mn(Vr(i)).type = Wi(i);
       } else {
        sy(i.name);
       }
      }
     }
    }
    function cy(e, t) {
     var n = Mn(e);
     if (!n.type) {
      n.type = t;
      var r = e.valueDeclaration;
      if (r.name.kind !== 71) {
       if (n.type === ke) {
        n.type = ra(r.name);
       }
       sy(r.name);
      }
     }
    }
    function uy(e) {
     var t = ru(true);
     if (t !== Ce) {
      e = ix(e) || ke;
      return Cc(t, [ e ]);
     }
     return ke;
    }
    function ly(t, n) {
     var r = uy(n);
     if (r === ke) {
      bn(t, e.isImportCall(t) ? e.Diagnostics.A_dynamic_import_call_returns_a_Promise_Make_sure_you_have_a_declaration_for_Promise_or_include_ES2015_in_your_lib_option : e.Diagnostics.An_async_function_or_method_must_return_a_Promise_Make_sure_you_have_a_declaration_for_Promise_or_include_ES2015_in_your_lib_option);
      return re;
     } else if (!iu(true)) {
      bn(t, e.isImportCall(t) ? e.Diagnostics.A_dynamic_import_call_in_ES5_SlashES3_requires_the_Promise_constructor_Make_sure_you_have_a_declaration_for_the_Promise_constructor_or_include_ES2015_in_your_lib_option : e.Diagnostics.An_async_function_or_method_in_ES5_SlashES3_requires_the_Promise_constructor_Make_sure_you_have_a_declaration_for_the_Promise_constructor_or_include_ES2015_in_your_lib_option);
     }
     return r;
    }
    function fy(t, n) {
     if (!t.body) {
      return re;
     }
     var r = e.getFunctionFlags(t);
     var i;
     if (t.body.kind !== 216) {
      i = nb(t.body, n);
      if (r & 2) {
       i = rx(i, t, e.Diagnostics.The_return_type_of_an_async_function_must_either_be_a_valid_promise_or_must_not_contain_a_callable_then_member);
      }
     } else {
      var a = gy(t, n);
      if (r & 1) {
       a = e.concatenate(dy(t, n), a);
       if (!a || a.length === 0) {
        var o = r & 2 ? hu(ee) : yu(ee);
        if (O) {
         bn(t.asteriskToken, e.Diagnostics.Generator_implicitly_has_type_0_because_it_does_not_yield_any_values_Consider_supplying_a_return_type, Si(o));
        }
        return o;
       }
      } else {
       if (!a) {
        return r & 2 ? ly(t, ge) : ge;
       }
       if (a.length === 0) {
        return r & 2 ? ly(t, _e) : _e;
       }
      }
      i = Ru(a, 2);
     }
     var s = Z_(t);
     if (!s) {
      ap(t, i);
     }
     if (Td(i)) {
      var c = !s ? undefined : s === Vs(t) ? i : tc(s);
      if (c) {
       switch (r & 3) {
       case 3:
        c = ck(c, true);
        break;

       case 1:
        c = ck(c, false);
        break;

       case 2:
        c = nx(c);
        break;
       }
      }
      i = Pd(i, c);
     }
     var u = tp(i);
     switch (r & 3) {
     case 3:
      return hu(u);

     case 1:
      return yu(u);

     case 2:
      return uy(u);

     default:
      return u;
     }
    }
    function dy(t, n) {
     var r = [];
     var i = (e.getFunctionFlags(t) & 2) !== 0;
     e.forEachYieldExpression(t.body, function(t) {
      e.pushIfUnique(r, py(t, i, n));
     });
     return r;
    }
    function py(t, n, r) {
     var i = t.expression || t;
     var a = t.expression ? pb(t.expression, r) : oe;
     var o = t.asteriskToken ? rk(a, i, false, n) : a;
     return !n ? o : ix(o, i, t.asteriskToken ? e.Diagnostics.Type_of_iterated_elements_of_a_yield_Asterisk_operand_must_either_be_a_valid_promise_or_must_not_contain_a_callable_then_member : e.Diagnostics.Type_of_yield_operand_in_an_async_generator_must_either_be_a_valid_promise_or_must_not_contain_a_callable_then_member);
    }
    function my(t) {
     if (!t.possiblyExhaustive) {
      return false;
     }
     var n = lb(t.expression);
     if (!Ed(n)) {
      return false;
     }
     var r = vm(t);
     if (!r.length || e.some(r, Dd)) {
      return false;
     }
     return ym(wm(n, Ml), r);
    }
    function _y(t) {
     if (!(t.flags & 128)) {
      return false;
     }
     if (e.some(t.body.statements, function(e) {
      return e.kind === 230 && my(e);
     })) {
      return false;
     }
     return true;
    }
    function gy(t, n) {
     var r = e.getFunctionFlags(t);
     var i = [];
     var a = _y(t);
     var o = false;
     e.forEachReturnStatement(t.body, function(s) {
      var c = s.expression;
      if (c) {
       var u = nb(c, n);
       if (r & 2) {
        u = rx(u, t, e.Diagnostics.The_return_type_of_an_async_function_must_either_be_a_valid_promise_or_must_not_contain_a_callable_then_member);
       }
       if (u.flags & 32768) {
        o = true;
       }
       e.pushIfUnique(i, u);
      } else {
       a = true;
      }
     });
     if (i.length === 0 && !a && (o || hy(t))) {
      return undefined;
     }
     if (F && i.length && a && !(Nv(t) && i.some(function(e) {
      return e.symbol === t.symbol;
     }))) {
      e.pushIfUnique(i, ae);
     }
     return i;
    }
    function hy(e) {
     switch (e.kind) {
     case 194:
     case 195:
      return true;

     case 154:
      return e.parent.kind === 186;

     default:
      return false;
     }
    }
    function vy(t, n) {
     if (!a) {
      return;
     }
     if (n && Iy(n, 3 | 4096)) {
      return;
     }
     if (t.kind === 153 || e.nodeIsMissing(t.body) || t.body.kind !== 216 || !_y(t)) {
      return;
     }
     var r = t.flags & 256;
     if (n && n.flags & 32768) {
      bn(e.getEffectiveReturnTypeNode(t), e.Diagnostics.A_function_returning_never_cannot_have_a_reachable_end_point);
     } else if (n && !r) {
      bn(e.getEffectiveReturnTypeNode(t), e.Diagnostics.A_function_whose_declared_type_is_neither_void_nor_any_must_return_a_value);
     } else if (n && F && !Tf(ae, n)) {
      bn(e.getEffectiveReturnTypeNode(t), e.Diagnostics.Function_lacks_ending_return_statement_and_return_type_does_not_include_undefined);
     } else if (T.noImplicitReturns) {
      if (!n) {
       if (!r) {
        return;
       }
       var i = tc(Vs(t));
       if (fk(t, i)) {
        return;
       }
      }
      bn(e.getEffectiveReturnTypeNode(t) || t, e.Diagnostics.Not_all_code_paths_return_a_value);
     }
    }
    function yy(t, n) {
     e.Debug.assert(t.kind !== 154 || e.isObjectLiteralMethod(t));
     if (n === 1 && yf(t)) {
      return De;
     }
     var r = qw(t);
     if (!r && t.kind === 194) {
      tC(t);
     }
     var i = Ln(t);
     var a = xa(Kr(t.symbol));
     if (Ui(a)) {
      return a;
     }
     if (!(i.flags & 1024)) {
      var o = tg(t);
      if (!(i.flags & 1024)) {
       i.flags |= 1024;
       if (o) {
        var s = Es(a, 0)[0];
        if (yf(t)) {
         var c = J_(t);
         if (n === 2) {
          ay(s, o, c);
         }
         var u = c === D ? o : of(o, c);
         oy(s, u);
        }
        if (!e.getEffectiveReturnTypeNode(t) && !s.resolvedReturnType) {
         var l = fy(t, n);
         if (!s.resolvedReturnType) {
          s.resolvedReturnType = l;
         }
        }
       }
       Sb(t);
       dS(t);
      }
     }
     return a;
    }
    function by(t, n) {
     var r = e.getEffectiveReturnTypeNode(t);
     return r && ((n & 3) === 2 ? ax(t, r) : Ul(r)) || Gs(t);
    }
    function xy(t) {
     e.Debug.assert(t.kind !== 154 || e.isObjectLiteralMethod(t));
     var n = e.getFunctionFlags(t);
     var r = by(t, n);
     if ((n & 1) === 0) {
      vy(t, r);
     }
     if (t.body) {
      if (!e.getEffectiveReturnTypeNode(t)) {
       tc(Vs(t));
      }
      if (t.body.kind === 216) {
       cS(t.body);
      } else {
       var i = pb(t.body);
       if (r) {
        if ((n & 3) === 2) {
         var a = rx(i, t.body, e.Diagnostics.The_return_type_of_an_async_function_must_either_be_a_valid_promise_or_must_not_contain_a_callable_then_member);
         Pf(a, r, t.body, t.body);
        } else {
         Pf(i, r, t.body, t.body);
        }
       }
      }
     }
    }
    function ky(e, t, n) {
     if (!Oy(t, 168)) {
      bn(e, n);
      return false;
     }
     return true;
    }
    function Sy(t) {
     return !!(e.getCheckFlags(t) & 8 || t.flags & 4 && e.getDeclarationModifierFlagsFromSymbol(t) & 64 || t.flags & 3 && eh(t) & 2 || t.flags & 98304 && !(t.flags & 65536) || t.flags & 8);
    }
    function wy(t, n) {
     if (Sy(n)) {
      if (n.flags & 4 && (t.kind === 187 || t.kind === 188) && t.expression.kind === 99) {
       var r = e.getContainingFunction(t);
       if (!(r && r.kind === 155)) {
        return true;
       }
       return !(r.parent === n.valueDeclaration.parent || r === n.valueDeclaration.parent);
      }
      return true;
     }
     return false;
    }
    function Cy(t) {
     if (t.kind === 187 || t.kind === 188) {
      var n = e.skipParentheses(t.expression);
      if (n.kind === 71) {
       var r = Ln(n).resolvedSymbol;
       if (r.flags & 2097152) {
        var i = tr(r);
        return !!i && i.kind === 249;
       }
      }
     }
     return false;
    }
    function Dy(t, n) {
     var r = e.skipOuterExpressions(t, 2 | 1);
     if (r.kind !== 71 && r.kind !== 187 && r.kind !== 188) {
      bn(t, n);
      return false;
     }
     return true;
    }
    function Ty(t) {
     pb(t.expression);
     var n = e.skipParentheses(t.expression);
     if (n.kind !== 187 && n.kind !== 188) {
      bn(n, e.Diagnostics.The_operand_of_a_delete_operator_must_be_a_property_reference);
      return pe;
     }
     var r = Ln(n);
     var i = $r(r.resolvedSymbol);
     if (i && Sy(i)) {
      bn(n, e.Diagnostics.The_operand_of_a_delete_operator_cannot_be_a_read_only_property);
     }
     return pe;
    }
    function Ey(e) {
     pb(e.expression);
     return Qt;
    }
    function Ny(e) {
     pb(e.expression);
     return oe;
    }
    function Ay(t) {
     if (a) {
      if (!(t.flags & 16384)) {
       SC(t, e.Diagnostics.await_expression_is_only_allowed_within_an_async_function);
      }
      if (S_(t)) {
       bn(t, e.Diagnostics.await_expressions_cannot_be_used_in_a_parameter_initializer);
      }
     }
     var n = pb(t.expression);
     return rx(n, t, e.Diagnostics.Type_of_await_operand_must_either_be_a_valid_promise_or_must_not_contain_a_callable_then_member);
    }
    function Fy(t) {
     var n = pb(t.operand);
     if (n === he) {
      return he;
     }
     if (t.operand.kind === 8) {
      if (t.operator === 38) {
       return Ol(Ll(-t.operand.text));
      } else if (t.operator === 37) {
       return Ol(Ll(+t.operand.text));
      }
     }
     switch (t.operator) {
     case 37:
     case 38:
     case 52:
      oh(n, t.operand);
      if (Iy(n, 3072)) {
       bn(t.operand, e.Diagnostics.The_0_operator_cannot_be_applied_to_type_symbol, e.tokenToString(t.operator));
      }
      return le;

     case 51:
      var r = Xp(n) & (1048576 | 2097152);
      return r === 1048576 ? fe : r === 2097152 ? de : pe;

     case 43:
     case 44:
      var i = ky(t.operand, oh(n, t.operand), e.Diagnostics.An_arithmetic_operand_must_be_of_type_any_number_or_an_enum_type);
      if (i) {
       Dy(t.operand, e.Diagnostics.The_operand_of_an_increment_or_decrement_operator_must_be_a_variable_or_a_property_access);
      }
      return le;
     }
     return re;
    }
    function Py(t) {
     var n = pb(t.operand);
     if (n === he) {
      return he;
     }
     var r = ky(t.operand, oh(n, t.operand), e.Diagnostics.An_arithmetic_operand_must_be_of_type_any_number_or_an_enum_type);
     if (r) {
      Dy(t.operand, e.Diagnostics.The_operand_of_an_increment_or_decrement_operator_must_be_a_variable_or_a_property_access);
     }
     return le;
    }
    function Iy(e, t) {
     if (e.flags & t & ~134217728 || t & 134217728 && Yo(e)) {
      return true;
     }
     if (e.flags & 786432) {
      var n = e.types;
      for (var r = 0, i = n; r < i.length; r++) {
       var a = i[r];
       if (Iy(a, t)) {
        return true;
       }
      }
     }
     return false;
    }
    function Oy(e, t, n) {
     if (e.flags & t) {
      return true;
     }
     if (n && e.flags & (3 | 4096 | 8192 | 16384)) {
      return false;
     }
     return !!(t & 168) && Tf(e, le) || !!(t & 68) && Tf(e, ue) || !!(t & 272) && Tf(e, pe) || !!(t & 4096) && Tf(e, _e) || !!(t & 32768) && Tf(e, ge) || !!(t & 16384) && Tf(e, se) || !!(t & 8192) && Tf(e, ae) || !!(t & 1024) && Tf(e, me) || !!(t & 16777216) && Tf(e, ye);
    }
    function My(t, n, r) {
     return t.flags & 262144 ? e.every(t.types, function(e) {
      return My(e, n, r);
     }) : Oy(t, n, r);
    }
    function Ly(t) {
     return !!(e.getObjectFlags(t) & 16) && !!t.symbol && Ry(t.symbol);
    }
    function Ry(e) {
     return (e.flags & 128) !== 0;
    }
    function By(t, n, r, i) {
     if (r === he || i === he) {
      return he;
     }
     if (!Ui(r) && My(r, 32764)) {
      bn(t, e.Diagnostics.The_left_hand_side_of_an_instanceof_expression_must_be_of_type_any_an_object_type_or_a_type_parameter);
     }
     if (!(Ui(i) || KS(i) || Df(i, He))) {
      bn(n, e.Diagnostics.The_right_hand_side_of_an_instanceof_expression_must_be_of_type_any_or_of_a_type_assignable_to_the_Function_interface_type);
     }
     return pe;
    }
    function zy(t, n, r, i) {
     if (r === he || i === he) {
      return he;
     }
     r = oh(r, t);
     i = oh(i, n);
     if (!(Nf(r, ue) || Oy(r, 168 | 3072))) {
      bn(t, e.Diagnostics.The_left_hand_side_of_an_in_expression_must_be_of_type_any_string_number_or_symbol);
     }
     if (!Oy(i, 16777216 | 14745600)) {
      bn(n, e.Diagnostics.The_right_hand_side_of_an_in_expression_must_be_of_type_any_an_object_type_or_a_type_parameter);
     }
     return pe;
    }
    function jy(e, t) {
     var n = e.properties;
     if (F && n.length === 0) {
      return oh(t, e);
     }
     for (var r = 0, i = n; r < i.length; r++) {
      var a = i[r];
      qy(t, a, n);
     }
     return t;
    }
    function qy(t, n, r) {
     if (n.kind === 273 || n.kind === 274) {
      var i = n.name;
      if (i.kind === 147) {
       lg(i);
      }
      if (Ki(i)) {
       return undefined;
      }
      var a = e.getTextOfPropertyName(i);
      var o = Ui(t) ? t : qi(t, a) || ug(a) && Ps(t, 1) || Ps(t, 0);
      if (o) {
       if (n.kind === 274) {
        return Ky(n, o);
       } else {
        return Ky(n.initializer, o);
       }
      } else {
       bn(i, e.Diagnostics.Type_0_has_no_property_1_and_no_string_index_signature, Si(t), e.declarationNameToString(i));
      }
     } else if (n.kind === 275) {
      if (E < 6) {
       Ew(n, 4);
      }
      var s = [];
      if (r) {
       for (var c = 0; c < r.length - 1; c++) {
        s.push(r[c].name);
       }
      }
      var o = Vi(t, s, t.symbol);
      Bw(r, e.Diagnostics.A_rest_parameter_or_binding_pattern_may_not_have_a_trailing_comma);
      return Ky(n.expression, o);
     } else {
      bn(n, e.Diagnostics.Property_assignment_expected);
     }
    }
    function Uy(e, t, n) {
     var r = e.elements;
     if (E < 2 && T.downlevelIteration) {
      Ew(e, 512);
     }
     var i = rk(t, e, false, false) || re;
     for (var a = 0; a < r.length; a++) {
      Jy(e, t, a, i, n);
     }
     return t;
    }
    function Jy(t, n, r, i, a) {
     var o = t.elements;
     var s = o[r];
     if (s.kind !== 208) {
      if (s.kind !== 206) {
       var c = "" + r;
       var u = Ui(n) ? n : wd(n) ? Cd(n, r) : i;
       if (u) {
        return Ky(s, u, a);
       }
       pb(s);
       if (Id(n)) {
        bn(s, e.Diagnostics.Tuple_type_0_with_length_1_cannot_be_assigned_to_tuple_with_length_2, Si(n), Tc(n), o.length);
       } else {
        bn(s, e.Diagnostics.Type_0_has_no_property_1, Si(n), c);
       }
      } else {
       if (r < o.length - 1) {
        bn(s, e.Diagnostics.A_rest_element_must_be_last_in_a_destructuring_pattern);
       } else {
        var l = s.expression;
        if (l.kind === 202 && l.operatorToken.kind === 58) {
         bn(l.operatorToken, e.Diagnostics.A_rest_element_cannot_have_an_initializer);
        } else {
         Bw(t.elements, e.Diagnostics.A_rest_parameter_or_binding_pattern_may_not_have_a_trailing_comma);
         var u = Id(n) ? ag((n.typeArguments || e.emptyArray).slice(r, Tc(n))) : bu(i);
         return Ky(l, u, a);
        }
       }
      }
     }
     return undefined;
    }
    function Ky(e, t, n) {
     var r;
     if (e.kind === 274) {
      var i = e;
      if (i.objectAssignmentInitializer) {
       if (F && !(Rd(pb(i.objectAssignmentInitializer)) & 8192)) {
        t = Qp(t, 131072);
       }
       $y(i.name, i.equalsToken, i.objectAssignmentInitializer, n);
      }
      r = e.name;
     } else {
      r = e;
     }
     if (r.kind === 202 && r.operatorToken.kind === 58) {
      Gy(r, n);
      r = r.left;
     }
     if (r.kind === 186) {
      return jy(r, t);
     }
     if (r.kind === 185) {
      return Uy(r, t, n);
     }
     return Vy(r, t, n);
    }
    function Vy(t, n, r) {
     var i = pb(t, r);
     var a = t.parent.kind === 275 ? e.Diagnostics.The_target_of_an_object_rest_assignment_must_be_a_variable_or_a_property_access : e.Diagnostics.The_left_hand_side_of_an_assignment_expression_must_be_a_variable_or_a_property_access;
     if (Dy(t, a)) {
      Pf(n, i, t, t);
     }
     return n;
    }
    function Wy(t) {
     t = e.skipParentheses(t);
     switch (t.kind) {
     case 71:
     case 9:
     case 12:
     case 191:
     case 204:
     case 13:
     case 8:
     case 101:
     case 86:
     case 95:
     case 140:
     case 194:
     case 207:
     case 195:
     case 185:
     case 186:
     case 197:
     case 211:
     case 259:
     case 258:
      return true;

     case 203:
      return Wy(t.whenTrue) && Wy(t.whenFalse);

     case 202:
      if (e.isAssignmentOperator(t.operatorToken.kind)) {
       return false;
      }
      return Wy(t.left) && Wy(t.right);

     case 200:
     case 201:
      switch (t.operator) {
      case 51:
      case 37:
      case 38:
      case 52:
       return true;
      }
      return false;

     case 198:
     case 192:
     case 210:
     default:
      return false;
     }
    }
    function Hy(e, t) {
     return (t.flags & 24576) !== 0 || Nf(e, t);
    }
    function Gy(t, n) {
     if (e.isInJavaScriptFile(t) && e.getAssignedJavascriptInitializer(t)) {
      return pb(t.right, n);
     }
     return $y(t.left, t.operatorToken, t.right, n, t);
    }
    function $y(t, n, r, i, o) {
     var s = n.kind;
     if (s === 58 && (t.kind === 186 || t.kind === 185)) {
      return Ky(t, pb(r, i), i);
     }
     var c = pb(t, i);
     var u = pb(r, i);
     switch (s) {
     case 39:
     case 40:
     case 61:
     case 62:
     case 41:
     case 63:
     case 42:
     case 64:
     case 38:
     case 60:
     case 45:
     case 65:
     case 46:
     case 66:
     case 47:
     case 67:
     case 49:
     case 69:
     case 50:
     case 70:
     case 48:
     case 68:
      if (c === he || u === he) {
       return he;
      }
      c = oh(c, t);
      u = oh(u, r);
      var l = void 0;
      if (c.flags & 272 && u.flags & 272 && (l = b(n.kind)) !== undefined) {
       bn(o || n, e.Diagnostics.The_0_operator_is_not_allowed_for_boolean_types_Consider_using_1_instead, e.tokenToString(n.kind), e.tokenToString(l));
      } else {
       var f = ky(t, c, e.Diagnostics.The_left_hand_side_of_an_arithmetic_operation_must_be_of_type_any_number_or_an_enum_type);
       var d = ky(r, u, e.Diagnostics.The_right_hand_side_of_an_arithmetic_operation_must_be_of_type_any_number_or_an_enum_type);
       if (f && d) {
        x(le);
       }
      }
      return le;

     case 37:
     case 59:
      if (c === he || u === he) {
       return he;
      }
      if (!Oy(c, 68) && !Oy(u, 68)) {
       c = oh(c, t);
       u = oh(u, r);
      }
      var p = void 0;
      if (Oy(c, 168, true) && Oy(u, 168, true)) {
       p = le;
      } else if (Oy(c, 68, true) || Oy(u, 68, true)) {
       p = ue;
      } else if (Ui(c) || Ui(u)) {
       p = c === re || u === re ? re : ee;
      }
      if (p && !y(s)) {
       return p;
      }
      if (!p) {
       S();
       return ee;
      }
      if (s === 59) {
       x(p);
      }
      return p;

     case 27:
     case 29:
     case 30:
     case 31:
      if (y(s)) {
       c = Nd(oh(c, t));
       u = Nd(oh(u, r));
       if (!Nf(c, u) && !Nf(u, c)) {
        S();
       }
      }
      return pe;

     case 32:
     case 33:
     case 34:
     case 35:
      var m = Ed(c);
      var _ = Ed(u);
      if (!m || !_) {
       c = m ? Nd(c) : c;
       u = _ ? Nd(u) : u;
      }
      if (!Hy(c, u) && !Hy(u, c)) {
       S();
      }
      return pe;

     case 93:
      return By(t, r, c, u);

     case 92:
      return zy(t, r, c, u);

     case 53:
      return Xp(c) & 1048576 ? Ru([ zd(F ? c : Nd(u)), u ]) : c;

     case 54:
      return Xp(c) & 2097152 ? Ru([ Bd(c), u ], 2) : c;

     case 58:
      var g = e.isBinaryExpression(t.parent) ? e.getSpecialPropertyAssignmentKind(t.parent) : 0;
      h(g, r);
      if (k(g)) {
       return c;
      } else {
       x(u);
       return Gd(u);
      }

     case 26:
      if (!T.allowUnreachableCode && Wy(t) && !v(r)) {
       bn(t, e.Diagnostics.Left_side_of_comma_operator_is_unused_and_has_no_side_effects);
      }
      return u;

     default:
      return e.Debug.fail();
     }
     function h(t, n) {
      if (t === 2) {
       var r = pb(n, i);
       for (var a = 0, o = es(r); a < o.length; a++) {
        var s = o[a];
        var c = xa(s);
        if (c.symbol && c.symbol.flags & 32) {
         var u = s.escapedName;
         var l = qn(s.valueDeclaration, u, 67901928, undefined, u, false);
         if (l && l.declarations.some(e.isJSDocTypedefTag)) {
          CC(l.declarations[0], e.Diagnostics.Duplicate_identifier_0, e.unescapeLeadingUnderscores(u));
          return CC(s.valueDeclaration, e.Diagnostics.Duplicate_identifier_0, e.unescapeLeadingUnderscores(u));
         }
        }
       }
      }
     }
     function v(e) {
      return e.kind === 71 && e.escapedText === "eval";
     }
     function y(n) {
      var i = Iy(c, 3072) ? t : Iy(u, 3072) ? r : undefined;
      if (i) {
       bn(i, e.Diagnostics.The_0_operator_cannot_be_applied_to_type_symbol, e.tokenToString(n));
       return false;
      }
      return true;
     }
     function b(e) {
      switch (e) {
      case 49:
      case 69:
       return 54;

      case 50:
      case 70:
       return 35;

      case 48:
      case 68:
       return 53;

      default:
       return undefined;
      }
     }
     function x(n) {
      if (a && e.isAssignmentOperator(s)) {
       if (Dy(t, e.Diagnostics.The_left_hand_side_of_an_assignment_expression_must_be_a_variable_or_a_property_access) && (!e.isIdentifier(t) || e.unescapeLeadingUnderscores(t.escapedText) !== "exports")) {
        Pf(n, c, t, r);
       }
      }
     }
     function k(n) {
      switch (n) {
      case 1:
      case 2:
      case 5:
      case 6:
      case 3:
      case 4:
       var i = Vr(t);
       var a = e.getAssignedJavascriptInitializer(r);
       return a && e.isObjectLiteralExpression(a) && i && e.hasEntries(i.exports);

      default:
       return false;
      }
     }
     function S() {
      var t = Si(c);
      var r = Si(u);
      var i = o || n;
      if (!w(i, t, r)) {
       bn(i, e.Diagnostics.Operator_0_cannot_be_applied_to_types_1_and_2, e.tokenToString(n.kind), t, r);
      }
     }
     function w(t, r, i) {
      switch (n.kind) {
      case 34:
      case 32:
       return bn(t, e.Diagnostics.This_condition_will_always_return_0_since_the_types_1_and_2_have_no_overlap, "false", r, i);

      case 35:
      case 33:
       return bn(t, e.Diagnostics.This_condition_will_always_return_0_since_the_types_1_and_2_have_no_overlap, "true", r, i);
      }
      return undefined;
     }
    }
    function Xy(t) {
     var n = t;
     var r = t.parent;
     while (r) {
      if (e.isFunctionLike(r) && n === r.body) {
       return false;
      } else if (e.isClassLike(n)) {
       return true;
      }
      n = r;
      r = r.parent;
     }
     return false;
    }
    function Qy(t) {
     if (a) {
      if (!(t.flags & 4096) || Xy(t)) {
       SC(t, e.Diagnostics.A_yield_expression_is_only_allowed_in_a_generator_body);
      }
      if (S_(t)) {
       bn(t, e.Diagnostics.yield_expressions_cannot_be_used_in_a_parameter_initializer);
      }
     }
     var n = e.getContainingFunction(t);
     if (!n) return ee;
     var r = e.getFunctionFlags(n);
     if (!(r & 1)) {
      return ee;
     }
     if (t.asteriskToken) {
      if ((r & 3) === 3 && E < 6) {
       Ew(t, 26624);
      }
      if ((r & 3) === 1 && E < 2 && T.downlevelIteration) {
       Ew(t, 256);
      }
     }
     var i = (r & 2) !== 0;
     var o = py(t, i);
     var s = e.getEffectiveReturnTypeNode(n);
     if (s) {
      var c = ck(Ul(s), i) || ee;
      Pf(o, c, t.expression || t, t.expression);
     }
     return ee;
    }
    function Yy(e, t) {
     pb(e.condition);
     var n = pb(e.whenTrue, t);
     var r = pb(e.whenFalse, t);
     return Ru([ n, r ], 2);
    }
    function Zy(t) {
     e.forEach(t.templateSpans, function(t) {
      if (Iy(pb(t.expression), 3072)) {
       bn(t.expression, e.Diagnostics.Type_0_cannot_be_converted_to_type_1, Si(me), Si(ue));
      }
     });
     return ue;
    }
    function eb(e) {
     if (e.kind === 266) {
      return e.parent.parent;
     }
     return e;
    }
    function tb(e, t, n) {
     var r = eb(e);
     var i = r.contextualType;
     var a = r.contextualMapper;
     r.contextualType = t;
     r.contextualMapper = n;
     var o = n === D ? 1 : n ? 2 : 3;
     var s = pb(e, o);
     r.contextualType = i;
     r.contextualMapper = a;
     return s;
    }
    function nb(e, t) {
     var n = Ln(e);
     if (!n.resolvedType) {
      if (t) {
       return pb(e, t);
      }
      var r = kt;
      kt = St;
      n.resolvedType = pb(e, t);
      kt = r;
     }
     return n.resolvedType;
    }
    function rb(t) {
     t = e.skipParentheses(t);
     return t.kind === 192 || t.kind === 210;
    }
    function ib(t) {
     var n = e.getEffectiveInitializer(t);
     var r = lb(n, true);
     var i = e.getCombinedNodeFlags(t) & 2 || e.getCombinedModifierFlags(t) & 64 && !e.isParameterPropertyDeclaration(t) || rb(n) ? r : Ad(r);
     if (e.isInJavaScriptFile(t)) {
      if (i.flags & 24576) {
       if (O) {
        ip(t, ee);
       }
       return ee;
      } else if (Sd(i)) {
       if (O) {
        ip(t, tt);
       }
       return tt;
      }
     }
     return i;
    }
    function ab(t, n) {
     if (n) {
      if (n.flags & 786432) {
       var r = n.types;
       return e.some(r, function(e) {
        return ab(t, e);
       });
      }
      if (n.flags & 14745600) {
       var i = ps(n) || ke;
       return Iy(i, 4) && Iy(t, 64) || Iy(i, 8) && Iy(t, 128) || Iy(i, 1024) && Iy(t, 2048) || ab(t, i);
      }
      return !!(n.flags & (64 | 1048576) && Iy(t, 64) || n.flags & 128 && Iy(t, 128) || n.flags & 256 && Iy(t, 256) || n.flags & 2048 && Iy(t, 2048));
     }
     return false;
    }
    function ob(e, t, n) {
     if (arguments.length === 2) {
      n = U_(e);
     }
     var r = pb(e, t);
     return rb(e) ? r : Pd(r, n);
    }
    function sb(e, t) {
     if (e.name.kind === 147) {
      lg(e.name);
     }
     return ob(e.initializer, t);
    }
    function cb(e, t) {
     fC(e);
     if (e.name.kind === 147) {
      lg(e.name);
     }
     var n = yy(e, t);
     return ub(e, n, t);
    }
    function ub(e, t, n) {
     if (n === 2) {
      var r = qh(t);
      if (r && r.typeParameters) {
       var i = q_(e);
       if (i) {
        var a = qh(Kd(i));
        if (a && !a.typeParameters) {
         return mc(Uh(r, a, J_(e)));
        }
       }
      }
     }
     return t;
    }
    function lb(t, n) {
     if (t.kind === 189 && t.expression.kind !== 97 && !e.isRequireCall(t, true) && !Lv(t)) {
      var r = ah(t.expression);
      var i = qh(r);
      if (i && !i.typeParameters) {
       return tc(i);
      }
     }
     return n ? nb(t) : pb(t);
    }
    function fb(e) {
     var t = e.contextualType;
     e.contextualType = ee;
     var n = lb(e);
     e.contextualType = t;
     return n;
    }
    function db(e) {
     pb(e);
    }
    function pb(t, n) {
     var r;
     if (t.kind === 146) {
      r = ch(t);
     } else {
      var i = _b(t, n);
      r = ub(t, i, n);
     }
     if (Ly(r)) {
      var a = t.parent.kind === 187 && t.parent.expression === t || t.parent.kind === 188 && t.parent.expression === t || ((t.kind === 71 || t.kind === 146) && FS(t) || t.parent.kind === 165 && t.parent.exprName === t);
      if (!a) {
       bn(t, e.Diagnostics.const_enums_can_only_be_used_in_property_or_index_access_expressions_or_the_right_hand_side_of_an_import_declaration_or_export_assignment_or_type_query);
      }
     }
     return r;
    }
    function mb(t, n) {
     var r = e.isInJavaScriptFile(t) ? e.getJSDocTypeTag(t) : undefined;
     if (r) {
      return Uv(r, r.typeExpression.type, t.expression, n);
     }
     return pb(t.expression, n);
    }
    function _b(t, n) {
     switch (t.kind) {
     case 71:
      return t_(t);

     case 99:
      return l_(t);

     case 97:
      return m_(t);

     case 95:
      return ce;

     case 13:
     case 9:
      return Ol(Ll(t.text));

     case 8:
      IC(t);
      return Ol(Ll(+t.text));

     case 101:
      return de;

     case 86:
      return fe;

     case 204:
      return Zy(t);

     case 12:
      return Ze;

     case 185:
      return ig(t, n);

     case 186:
      return dg(t, n);

     case 187:
      return sh(t);

     case 188:
      return Fh(t);

     case 189:
      if (t.expression.kind === 91) {
       return Rv(t);
      }

     case 190:
      return Mv(t);

     case 191:
      return jv(t);

     case 193:
      return mb(t, n);

     case 207:
      return wk(t);

     case 194:
     case 195:
      return yy(t, n);

     case 197:
      return Ey(t);

     case 192:
     case 210:
      return qv(t);

     case 211:
      return Jv(t);

     case 212:
      return Kv(t);

     case 196:
      return Ty(t);

     case 198:
      return Ny(t);

     case 199:
      return Ay(t);

     case 200:
      return Fy(t);

     case 201:
      return Py(t);

     case 202:
      return Gy(t, n);

     case 203:
      return Yy(t, n);

     case 206:
      return ng(t, n);

     case 208:
      return oe;

     case 205:
      return Qy(t);

     case 213:
      return t.type;

     case 268:
      return Yg(t, n);

     case 258:
      return hg(t, n);

     case 259:
      return _g(t, n);

     case 262:
      return vg(t, n);

     case 266:
      return wg(t, n);

     case 260:
      e.Debug.fail("Shouldn't ever directly check a JsxOpeningElement");
     }
     return re;
    }
    function gb(t) {
     if (t.expression) {
      SC(t.expression, e.Diagnostics.Type_expected);
     }
     cS(t.constraint);
     cS(t.default);
     var n = Xa(Vr(t));
     if (!_s(n)) {
      bn(t.constraint, e.Diagnostics.Type_parameter_0_has_a_circular_constraint, Si(n));
     }
     if (!bs(n)) {
      bn(t.default, e.Diagnostics.Type_parameter_0_has_a_circular_default, Si(n));
     }
     var r = ss(n);
     var i = ys(n);
     if (r && i) {
      Ff(i, xo(r, i), t.default, e.Diagnostics.Type_0_does_not_satisfy_the_constraint_1);
     }
     if (a) {
      yk(t.name, e.Diagnostics.Type_parameter_name_cannot_be_0);
     }
    }
    function hb(e) {
     return xd(e) || Id(e) || e.flags & 15794176 && Tf(e, tt);
    }
    function vb(t) {
     Fw(t);
     Ux(t);
     var n = e.getContainingFunction(t);
     if (e.hasModifier(t, 92)) {
      if (!(n.kind === 155 && e.nodeIsPresent(n.body))) {
       bn(t, e.Diagnostics.A_parameter_property_is_only_allowed_in_a_constructor_implementation);
      }
     }
     if (t.questionToken && e.isBindingPattern(t.name) && n.body) {
      bn(t, e.Diagnostics.A_binding_pattern_parameter_cannot_be_optional_in_an_implementation_signature);
     }
     if (t.name && e.isIdentifier(t.name) && (t.name.escapedText === "this" || t.name.escapedText === "new")) {
      if (n.parameters.indexOf(t) !== 0) {
       bn(t, e.Diagnostics.A_0_parameter_must_be_the_first_parameter, t.name.escapedText);
      }
      if (n.kind === 155 || n.kind === 159 || n.kind === 164) {
       bn(t, e.Diagnostics.A_constructor_cannot_have_a_this_parameter);
      }
     }
     if (t.dotDotDotToken && !e.isBindingPattern(t.name) && !hb(xa(t.symbol))) {
      bn(t, e.Diagnostics.A_rest_parameter_must_be_of_an_array_type);
     }
    }
    function yb(e, t) {
     if (e) {
      for (var n = 0; n < e.length; n++) {
       var r = e[n];
       if (r.name.kind === 71 && r.name.escapedText === t.escapedText) {
        return n;
       }
      }
     }
     return -1;
    }
    function bb(t) {
     var n = xb(t);
     if (!n) {
      bn(t, e.Diagnostics.A_type_predicate_is_only_allowed_in_return_type_position_for_functions_and_methods);
      return;
     }
     var r = ec(Vs(n));
     if (!r) {
      return;
     }
     cS(t.type);
     var i = t.parameterName;
     if (e.isThisTypePredicate(r)) {
      ql(i);
     } else {
      if (r.parameterIndex >= 0) {
       if (n.parameters[r.parameterIndex].dotDotDotToken) {
        bn(i, e.Diagnostics.A_type_predicate_cannot_reference_a_rest_parameter);
       } else {
        var a = function() {
         return e.chainDiagnosticMessages(undefined, e.Diagnostics.A_type_predicate_s_type_must_be_assignable_to_its_parameter_s_type);
        };
        Ff(r.type, BS(n.parameters[r.parameterIndex]), t.type, undefined, a);
       }
      } else if (i) {
       var o = false;
       for (var s = 0, c = n.parameters; s < c.length; s++) {
        var u = c[s].name;
        if (e.isBindingPattern(u) && kb(u, i, r.parameterName)) {
         o = true;
         break;
        }
       }
       if (!o) {
        bn(t.parameterName, e.Diagnostics.Cannot_find_parameter_0, r.parameterName);
       }
      }
     }
    }
    function xb(e) {
     switch (e.parent.kind) {
     case 195:
     case 158:
     case 237:
     case 194:
     case 163:
     case 154:
     case 153:
      var t = e.parent;
      if (e === t.type) {
       return t;
      }
     }
    }
    function kb(t, n, r) {
     for (var i = 0, a = t.elements; i < a.length; i++) {
      var o = a[i];
      if (e.isOmittedExpression(o)) {
       continue;
      }
      var s = o.name;
      if (s.kind === 71 && s.escapedText === r) {
       bn(n, e.Diagnostics.A_type_predicate_cannot_reference_element_0_in_a_binding_pattern, r);
       return true;
      } else if (s.kind === 183 || s.kind === 182) {
       if (kb(s, n, r)) {
        return true;
       }
      }
     }
    }
    function Sb(t) {
     if (t.kind === 160) {
      Vw(t);
     } else if (t.kind === 163 || t.kind === 237 || t.kind === 164 || t.kind === 158 || t.kind === 155 || t.kind === 159) {
      qw(t);
     }
     var n = e.getFunctionFlags(t);
     if (!(n & 4)) {
      if ((n & 3) === 3 && E < 6) {
       Ew(t, 6144);
      }
      if ((n & 3) === 2 && E < 4) {
       Ew(t, 64);
      }
      if ((n & 3) !== 0 && E < 2) {
       Ew(t, 128);
      }
     }
     xk(t.typeParameters);
     e.forEach(t.parameters, vb);
     if (t.type) {
      cS(t.type);
     }
     if (a) {
      Ix(t);
      var r = e.getEffectiveReturnTypeNode(t);
      if (O && !r) {
       switch (t.kind) {
       case 159:
        bn(t, e.Diagnostics.Construct_signature_which_lacks_return_type_annotation_implicitly_has_an_any_return_type);
        break;

       case 158:
        bn(t, e.Diagnostics.Call_signature_which_lacks_return_type_annotation_implicitly_has_an_any_return_type);
        break;
       }
      }
      if (r) {
       var i = e.getFunctionFlags(t);
       if ((i & (4 | 1)) === 1) {
        var o = Ul(r);
        if (o === _e) {
         bn(r, e.Diagnostics.A_generator_cannot_have_a_void_type_annotation);
        } else {
         var s = ck(o, (i & 2) !== 0) || ee;
         var c = i & 2 ? hu(s) : yu(s);
         Ff(c, o, r);
        }
       } else if ((i & 3) === 2) {
        ax(t, r);
       }
      }
      if (t.kind !== 160 && t.kind !== 287) {
       bx(t);
      }
     }
    }
    function wb(t) {
     var n;
     (function(e) {
      e[e["Getter"] = 1] = "Getter";
      e[e["Setter"] = 2] = "Setter";
      e[e["Method"] = 4] = "Method";
      e[e["Property"] = 3] = "Property";
     })(n || (n = {}));
     var r = e.createUnderscoreEscapedMap();
     var i = e.createUnderscoreEscapedMap();
     for (var a = 0, o = t.members; a < o.length; a++) {
      var s = o[a];
      if (s.kind === 155) {
       for (var c = 0, u = s.parameters; c < u.length; c++) {
        var l = u[c];
        if (e.isParameterPropertyDeclaration(l) && !e.isBindingPattern(l.name)) {
         _(r, l.name, l.name.escapedText, 3);
        }
       }
      } else {
       var f = e.hasModifier(s, 32);
       var d = f ? i : r;
       var p = s.name;
       var m = p && e.getPropertyNameForPropertyNameNode(p);
       if (p && m) {
        switch (s.kind) {
        case 156:
         _(d, p, m, 1);
         break;

        case 157:
         _(d, p, m, 2);
         break;

        case 152:
         _(d, p, m, 3);
         break;

        case 154:
         _(d, p, m, 4);
         break;
        }
       }
      }
     }
     function _(t, n, r, i) {
      var a = t.get(r);
      if (a) {
       if (a & 4) {
        if (i !== 4) {
         bn(n, e.Diagnostics.Duplicate_identifier_0, e.getTextOfNode(n));
        }
       } else if (a & i) {
        bn(n, e.Diagnostics.Duplicate_identifier_0, e.getTextOfNode(n));
       } else {
        t.set(r, a | i);
       }
      } else {
       t.set(r, i);
      }
     }
    }
    function Cb(t) {
     for (var n = 0, r = t.members; n < r.length; n++) {
      var i = r[n];
      var a = i.name;
      var o = e.hasModifier(i, 32);
      if (o && a) {
       var s = e.getPropertyNameForPropertyNameNode(a);
       switch (s) {
       case "name":
       case "length":
       case "caller":
       case "arguments":
       case "prototype":
        var c = e.Diagnostics.Static_property_0_conflicts_with_built_in_property_Function_0_of_constructor_function_1;
        var u = Pi(Vr(t));
        bn(a, c, s, u);
        break;
       }
      }
     }
    }
    function Db(t) {
     var n = e.createMap();
     for (var r = 0, i = t.members; r < i.length; r++) {
      var a = i[r];
      if (a.kind === 151) {
       var o = void 0;
       var s = a.name;
       switch (s.kind) {
       case 9:
       case 8:
        o = s.text;
        break;

       case 71:
        o = e.idText(s);
        break;

       default:
        continue;
       }
       if (n.get(o)) {
        bn(e.getNameOfDeclaration(a.symbol.valueDeclaration), e.Diagnostics.Duplicate_identifier_0, o);
        bn(a.name, e.Diagnostics.Duplicate_identifier_0, o);
       } else {
        n.set(o, true);
       }
      }
     }
    }
    function Tb(t) {
     if (t.kind === 239) {
      var n = Vr(t);
      if (n.declarations.length > 0 && n.declarations[0] !== t) {
       return;
      }
     }
     var r = _c(Vr(t));
     if (r) {
      var i = false;
      var a = false;
      for (var o = 0, s = r.declarations; o < s.length; o++) {
       var c = s[o];
       var u = c;
       if (u.parameters.length === 1 && u.parameters[0].type) {
        switch (u.parameters[0].type.kind) {
        case 137:
         if (!a) {
          a = true;
         } else {
          bn(u, e.Diagnostics.Duplicate_string_index_signature);
         }
         break;

        case 134:
         if (!i) {
          i = true;
         } else {
          bn(u, e.Diagnostics.Duplicate_number_index_signature);
         }
         break;
        }
       }
      }
     }
    }
    function Eb(e) {
     if (!Fw(e) && !EC(e)) eC(e.name);
     Ux(e);
    }
    function Nb(t) {
     if (!fC(t)) eC(t.name);
     yx(t);
     if (e.hasModifier(t, 128) && t.kind === 154 && t.body) {
      bn(t, e.Diagnostics.Method_0_cannot_have_an_implementation_because_it_is_marked_abstract, e.declarationNameToString(t.name));
     }
    }
    function Ab(t) {
     Sb(t);
     if (!DC(t)) TC(t);
     cS(t.body);
     var n = Vr(t);
     var r = e.getDeclarationOfKind(n, t.kind);
     if (t === r) {
      Zb(n);
     }
     if (e.nodeIsMissing(t.body)) {
      return;
     }
     if (!a) {
      return;
     }
     function i(t) {
      return t.kind === 152 && !e.hasModifier(t, 32) && !!t.initializer;
     }
     var o = t.parent;
     if (e.getEffectiveBaseTypeNode(o)) {
      a_(t.parent, o);
      var s = c_(o);
      var c = s_(t);
      if (c) {
       if (s) {
        bn(c, e.Diagnostics.A_constructor_cannot_contain_a_super_call_when_its_class_extends_null);
       }
       var u = e.some(t.parent.members, i) || e.some(t.parameters, function(t) {
        return e.hasModifier(t, 92);
       });
       if (u) {
        var l = t.body.statements;
        var f = void 0;
        for (var d = 0, p = l; d < p.length; d++) {
         var m = p[d];
         if (m.kind === 219 && e.isSuperCall(m.expression)) {
          f = m;
          break;
         }
         if (!e.isPrologueDirective(m)) {
          break;
         }
        }
        if (!f) {
         bn(t, e.Diagnostics.A_super_call_must_be_the_first_statement_in_the_constructor_when_a_class_contains_initialized_properties_or_has_parameter_properties);
        }
       }
      } else if (!s) {
       bn(t, e.Diagnostics.Constructors_for_derived_classes_must_contain_a_super_call);
      }
     }
    }
    function Fb(t) {
     if (a) {
      if (!qw(t) && !oC(t)) eC(t.name);
      dx(t);
      Sb(t);
      if (t.kind === 156) {
       if (!(t.flags & 4194304) && e.nodeIsPresent(t.body) && t.flags & 128) {
        if (!(t.flags & 256)) {
         bn(t.name, e.Diagnostics.A_get_accessor_must_return_a_value);
        }
       }
      }
      if (t.name.kind === 147) {
       lg(t.name);
      }
      if (!po(t)) {
       var n = t.kind === 156 ? 157 : 156;
       var r = e.getDeclarationOfKind(Vr(t), n);
       if (r) {
        var i = e.getModifierFlags(t);
        var o = e.getModifierFlags(r);
        if ((i & 28) !== (o & 28)) {
         bn(t.name, e.Diagnostics.Getter_and_setter_accessors_do_not_agree_in_visibility);
        }
        if ((i & 128) !== (o & 128)) {
         bn(t.name, e.Diagnostics.Accessors_must_both_be_abstract_or_non_abstract);
        }
        Pb(t, r, fa, e.Diagnostics.get_and_set_accessor_must_have_the_same_type);
        Pb(t, r, pa, e.Diagnostics.get_and_set_accessor_must_have_the_same_this_type);
       }
      }
      var s = ma(Vr(t));
      if (t.kind === 156) {
       vy(t, s);
      }
     }
     cS(t.body);
    }
    function Pb(e, t, n, r) {
     var i = n(e);
     var a = n(t);
     if (i && a && !Sf(i, a)) {
      bn(e, r);
     }
    }
    function Ib(e) {
     dx(e);
    }
    function Ob(t, n) {
     return Ks(e.map(t.typeArguments, Ul), n, Js(n), e.isInJavaScriptFile(t));
    }
    function Mb(t, n) {
     var r;
     var i;
     var a = true;
     for (var o = 0; o < n.length; o++) {
      var s = ss(n[o]);
      if (s) {
       if (!r) {
        r = Ob(t, n);
        i = $l(n, r);
       }
       a = a && Ff(r[o], gf(s, i), t.typeArguments[o], e.Diagnostics.Type_0_does_not_satisfy_the_constraint_1);
      }
     }
     return a;
    }
    function Lb(t) {
     var n = Kc(t);
     if (n !== re) {
      var r = Ln(t).resolvedSymbol;
      if (r) {
       return r.flags & 524288 && Mn(r).typeParameters || (e.getObjectFlags(n) & 4 ? n.target.localTypeParameters : undefined);
      }
     }
     return undefined;
    }
    function Rb(t) {
     Hw(t, t.typeArguments);
     if (t.kind === 162 && t.typeName.jsdocDotPos !== undefined && !e.isInJavaScriptFile(t) && !e.isInJSDoc(t)) {
      wC(t, t.typeName.jsdocDotPos, 1, e.Diagnostics.JSDoc_types_can_only_be_used_inside_documentation_comments);
     }
     var n = Kc(t);
     if (n !== re) {
      if (t.typeArguments) {
       e.forEach(t.typeArguments, cS);
       if (a) {
        var r = Lb(t);
        if (r) {
         Mb(t, r);
        }
       }
      }
      if (n.flags & 32 && Ln(t).resolvedSymbol.flags & 8) {
       bn(t, e.Diagnostics.Enum_type_0_has_members_with_initializers_that_are_not_literals, Si(n));
      }
     }
    }
    function Bb(t) {
     var n = e.tryCast(t.parent, e.isTypeReferenceType);
     if (!n) return undefined;
     var r = Lb(n);
     var i = ss(r[n.typeArguments.indexOf(t)]);
     return i && gf(i, $l(r, Ob(n, r)));
    }
    function zb(e) {
     Wc(e);
    }
    function jb(t) {
     e.forEach(t.members, cS);
     if (a) {
      var n = Dl(t);
      vk(n);
      Tb(t);
      Db(t);
     }
    }
    function qb(e) {
     cS(e.elementType);
    }
    function Ub(t) {
     var n = t.elementTypes;
     var r = false;
     for (var i = 0; i < n.length; i++) {
      var a = n[i];
      if (a.kind === 170) {
       if (i !== n.length - 1) {
        CC(a, e.Diagnostics.A_rest_element_must_be_last_in_a_tuple_type);
        break;
       }
       if (!xd(Ul(a))) {
        bn(a, e.Diagnostics.A_rest_element_type_must_be_an_array_type);
       }
      } else if (a.kind === 169) {
       r = true;
      } else if (r) {
       CC(a, e.Diagnostics.A_required_element_cannot_follow_an_optional_element);
       break;
      }
     }
     Bw(t.elementTypes);
     e.forEach(t.elementTypes, cS);
    }
    function Jb(t) {
     e.forEach(t.types, cS);
    }
    function Kb(t, n) {
     if (!(t.flags & 2097152)) {
      return t;
     }
     var r = t.objectType;
     var i = t.indexType;
     if (Tf(i, Zu(r, false))) {
      if (n.kind === 188 && e.isAssignmentTarget(n) && e.getObjectFlags(r) & 32 && Go(r) & 1) {
       bn(n, e.Diagnostics.Index_signature_in_type_0_only_permits_reading, Si(r));
      }
      return t;
     }
     if (Fs(ks(r), 1) && Oy(i, 168)) {
      return t;
     }
     bn(n, e.Diagnostics.Type_0_cannot_be_used_to_index_type_1, Si(i), Si(r));
     return t;
    }
    function Vb(e) {
     cS(e.objectType);
     cS(e.indexType);
     Kb(pl(e), e);
    }
    function Wb(e) {
     cS(e.typeParameter);
     cS(e.type);
     if (O && !e.type) {
      ip(e, ee);
     }
     var t = ml(e);
     var n = Jo(t);
     Ff(n, xe, e.typeParameter.constraint);
    }
    function Hb(e) {
     uC(e);
     cS(e.type);
    }
    function Gb(t) {
     e.forEachChild(t, cS);
    }
    function $b(t) {
     if (!e.findAncestor(t, function(e) {
      return e.parent && e.parent.kind === 173 && e.parent.extendsType === e;
     })) {
      CC(t, e.Diagnostics.infer_declarations_are_only_permitted_in_the_extends_clause_of_a_conditional_type);
     }
     cS(t.typeParameter);
    }
    function Xb(e) {
     cS(e.argument);
     Ul(e);
    }
    function Qb(t) {
     return e.hasModifier(t, 8) && !!(t.flags & 4194304);
    }
    function Yb(t, n) {
     var r = e.getCombinedModifierFlags(t);
     if (t.parent.kind !== 239 && t.parent.kind !== 238 && t.parent.kind !== 207 && t.flags & 4194304) {
      if (!(r & 2) && !(e.isModuleBlock(t.parent) && e.isModuleDeclaration(t.parent.parent) && e.isGlobalScopeAugmentation(t.parent.parent))) {
       r |= 1;
      }
      r |= 2;
     }
     return r & n;
    }
    function Zb(t) {
     if (!a) {
      return;
     }
     function n(e, t) {
      var n = t !== undefined && t.parent === e[0].parent;
      return n ? t : e[0];
     }
     function r(t, r, i, a, o) {
      var s = a ^ o;
      if (s !== 0) {
       var c = Yb(n(t, r), i);
       e.forEach(t, function(t) {
        var n = Yb(t, i) ^ c;
        if (n & 1) {
         bn(e.getNameOfDeclaration(t), e.Diagnostics.Overload_signatures_must_all_be_exported_or_non_exported);
        } else if (n & 2) {
         bn(e.getNameOfDeclaration(t), e.Diagnostics.Overload_signatures_must_all_be_ambient_or_non_ambient);
        } else if (n & (8 | 16)) {
         bn(e.getNameOfDeclaration(t) || t, e.Diagnostics.Overload_signatures_must_all_be_public_private_or_protected);
        } else if (n & 128) {
         bn(e.getNameOfDeclaration(t), e.Diagnostics.Overload_signatures_must_all_be_abstract_or_non_abstract);
        }
       });
      }
     }
     function i(t, r, i, a) {
      if (i !== a) {
       var o = e.hasQuestionToken(n(t, r));
       e.forEach(t, function(t) {
        var n = e.hasQuestionToken(t) !== o;
        if (n) {
         bn(e.getNameOfDeclaration(t), e.Diagnostics.Overload_signatures_must_all_be_optional_or_required);
        }
       });
      }
     }
     var o = 1 | 2 | 8 | 16 | 128;
     var s = 0;
     var c = o;
     var u = false;
     var l = true;
     var f = false;
     var d;
     var p;
     var m;
     var _ = t.declarations;
     var g = (t.flags & 16384) !== 0;
     function h(t) {
      if (t.name && e.nodeIsMissing(t.name)) {
       return;
      }
      var n = false;
      var r = e.forEachChild(t.parent, function(e) {
       if (n) {
        return e;
       } else {
        n = e === t;
       }
      });
      if (r && r.pos === t.end) {
       if (r.kind === t.kind) {
        var i = r.name || r;
        var a = r.name;
        if (t.name && a && (e.isComputedPropertyName(t.name) && e.isComputedPropertyName(a) || !e.isComputedPropertyName(t.name) && !e.isComputedPropertyName(a) && e.getEscapedTextOfIdentifierOrLiteral(t.name) === e.getEscapedTextOfIdentifierOrLiteral(a))) {
         var o = (t.kind === 154 || t.kind === 153) && e.hasModifier(t, 32) !== e.hasModifier(r, 32);
         if (o) {
          var s = e.hasModifier(t, 32) ? e.Diagnostics.Function_overload_must_be_static : e.Diagnostics.Function_overload_must_not_be_static;
          bn(i, s);
         }
         return;
        } else if (e.nodeIsPresent(r.body)) {
         bn(i, e.Diagnostics.Function_implementation_name_must_be_0, e.declarationNameToString(t.name));
         return;
        }
       }
      }
      var c = t.name || t;
      if (g) {
       bn(c, e.Diagnostics.Constructor_implementation_is_missing);
      } else {
       if (e.hasModifier(t, 128)) {
        bn(c, e.Diagnostics.All_declarations_of_an_abstract_method_must_be_consecutive);
       } else {
        bn(c, e.Diagnostics.Function_implementation_is_missing_or_not_immediately_following_the_declaration);
       }
      }
     }
     var v = false;
     var y = false;
     for (var b = 0, x = _; b < x.length; b++) {
      var k = x[b];
      var S = k;
      var w = S.flags & 4194304;
      var C = S.parent.kind === 239 || S.parent.kind === 166 || w;
      if (C) {
       m = undefined;
      }
      if (S.kind === 237 || S.kind === 154 || S.kind === 153 || S.kind === 155) {
       var D = Yb(S, o);
       s |= D;
       c &= D;
       u = u || e.hasQuestionToken(S);
       l = l && e.hasQuestionToken(S);
       if (e.nodeIsPresent(S.body) && d) {
        if (g) {
         y = true;
        } else {
         v = true;
        }
       } else if (m && m.parent === S.parent && m.end !== S.pos) {
        h(m);
       }
       if (e.nodeIsPresent(S.body)) {
        if (!d) {
         d = S;
        }
       } else {
        f = true;
       }
       m = S;
       if (!C) {
        p = S;
       }
      }
     }
     if (y) {
      e.forEach(_, function(t) {
       bn(t, e.Diagnostics.Multiple_constructor_implementations_are_not_allowed);
      });
     }
     if (v) {
      e.forEach(_, function(t) {
       bn(e.getNameOfDeclaration(t), e.Diagnostics.Duplicate_function_implementation);
      });
     }
     if (p && !p.body && !e.hasModifier(p, 128) && !p.questionToken) {
      h(p);
     }
     if (f) {
      r(_, d, o, s, c);
      i(_, d, u, l);
      if (d) {
       var T = Xs(t);
       var E = Vs(d);
       for (var N = 0, A = T; N < A.length; N++) {
        var F = A[N];
        if (!Vf(E, F)) {
         bn(F.declaration, e.Diagnostics.Overload_signature_is_not_compatible_with_function_implementation);
         break;
        }
       }
      }
     }
    }
    function ex(t) {
     if (!a) {
      return;
     }
     var n = t.localSymbol;
     if (!n) {
      n = Vr(t);
      if (!n.exportSymbol) {
       return;
      }
     }
     if (e.getDeclarationOfKind(n, t.kind) !== t) {
      return;
     }
     var r = 0;
     var i = 0;
     var o = 0;
     for (var s = 0, c = n.declarations; s < c.length; s++) {
      var u = c[s];
      var l = y(u);
      var f = Yb(u, 1 | 512);
      if (f & 1) {
       if (f & 512) {
        o |= l;
       } else {
        r |= l;
       }
      } else {
       i |= l;
      }
     }
     var d = r | i;
     var p = r & i;
     var m = o & d;
     if (p || m) {
      for (var _ = 0, g = n.declarations; _ < g.length; _++) {
       var u = g[_];
       var l = y(u);
       var h = e.getNameOfDeclaration(u);
       if (l & m) {
        bn(h, e.Diagnostics.Merged_declaration_0_cannot_include_a_default_export_declaration_Consider_adding_a_separate_export_default_0_declaration_instead, e.declarationNameToString(h));
       } else if (l & p) {
        bn(h, e.Diagnostics.Individual_declarations_in_merged_declaration_0_must_be_all_exported_or_all_local, e.declarationNameToString(h));
       }
      }
     }
     var v;
     (function(e) {
      e[e["None"] = 0] = "None";
      e[e["ExportValue"] = 1] = "ExportValue";
      e[e["ExportType"] = 2] = "ExportType";
      e[e["ExportNamespace"] = 4] = "ExportNamespace";
     })(v || (v = {}));
     function y(t) {
      var n = t;
      switch (n.kind) {
      case 239:
      case 240:
      case 301:
      case 295:
       return 2;

      case 242:
       return e.isAmbientModule(n) || e.getModuleInstanceState(n) !== 0 ? 4 | 1 : 4;

      case 238:
      case 241:
       return 2 | 1;

      case 277:
       return 2 | 1 | 4;

      case 252:
       if (!e.isEntityNameExpression(n.expression)) {
        return 1;
       }
       n = n.expression;

      case 246:
      case 249:
      case 248:
       var r = 0;
       var i = yr(Vr(n));
       e.forEach(i.declarations, function(e) {
        r |= y(e);
       });
       return r;

      case 235:
      case 184:
      case 237:
      case 251:
       return 1;

      default:
       return e.Debug.fail(e.Debug.showSyntaxKind(n));
      }
     }
    }
    function tx(e, t, n) {
     var r = nx(e, t);
     return r && ix(r, t, n);
    }
    function nx(t, n) {
     if (Ui(t)) {
      return undefined;
     }
     var r = t;
     if (r.promisedTypeOfPromise) {
      return r.promisedTypeOfPromise;
     }
     if (ka(t, ru(false))) {
      return r.promisedTypeOfPromise = t.typeArguments[0];
     }
     var i = qi(t, "then");
     if (Ui(i)) {
      return undefined;
     }
     var a = i ? Es(i, 0) : e.emptyArray;
     if (a.length === 0) {
      if (n) {
       bn(n, e.Diagnostics.A_promise_must_have_a_then_method);
      }
      return undefined;
     }
     var o = Qp(Ru(e.map(a, ry)), 524288);
     if (Ui(o)) {
      return undefined;
     }
     var s = Es(o, 0);
     if (s.length === 0) {
      if (n) {
       bn(n, e.Diagnostics.The_first_parameter_of_the_then_method_of_a_promise_must_be_a_callback);
      }
      return undefined;
     }
     return r.promisedTypeOfPromise = Ru(e.map(s, ry), 2);
    }
    function rx(e, t, n) {
     return ix(e, t, n) || re;
    }
    function ix(t, n, r) {
     var i = t;
     if (i.awaitedTypeOfType) {
      return i.awaitedTypeOfType;
     }
     if (Ui(t)) {
      return i.awaitedTypeOfType = t;
     }
     if (t.flags & 262144) {
      var a = void 0;
      for (var o = 0, s = t.types; o < s.length; o++) {
       var c = s[o];
       a = e.append(a, ix(c, n, r));
      }
      if (!a) {
       return undefined;
      }
      return i.awaitedTypeOfType = Ru(a);
     }
     var u = nx(t);
     if (u) {
      if (t.id === u.id || Kt.indexOf(u.id) >= 0) {
       if (n) {
        bn(n, e.Diagnostics.Type_is_referenced_directly_or_indirectly_in_the_fulfillment_callback_of_its_own_then_method);
       }
       return undefined;
      }
      Kt.push(t.id);
      var l = ix(u, n, r);
      Kt.pop();
      if (!l) {
       return undefined;
      }
      return i.awaitedTypeOfType = l;
     }
     var f = qi(t, "then");
     if (f && Es(f, 0).length > 0) {
      if (n) {
       if (!r) return e.Debug.fail();
       bn(n, r);
      }
      return undefined;
     }
     return i.awaitedTypeOfType = t;
    }
    function ax(t, n) {
     var r = Ul(n);
     if (E >= 2) {
      if (r === re) {
       return re;
      }
      var i = ru(true);
      if (i !== Ce && !ka(r, i)) {
       bn(n, e.Diagnostics.The_return_type_of_an_async_function_or_method_must_be_the_global_Promise_T_type);
       return re;
      }
     } else {
      sx(n);
      if (r === re) {
       return re;
      }
      var a = e.getEntityNameFromTypeNode(n);
      if (a === undefined) {
       bn(n, e.Diagnostics.Type_0_is_not_a_valid_async_function_return_type_in_ES5_SlashES3_because_it_does_not_refer_to_a_Promise_compatible_constructor_value, Si(r));
       return re;
      }
      var o = wr(a, 67216319, true);
      var s = o ? xa(o) : re;
      if (s === re) {
       if (a.kind === 71 && a.escapedText === "Promise" && Sa(r) === ru(false)) {
        bn(n, e.Diagnostics.An_async_function_or_method_in_ES5_SlashES3_requires_the_Promise_constructor_Make_sure_you_have_a_declaration_for_the_Promise_constructor_or_include_ES2015_in_your_lib_option);
       } else {
        bn(n, e.Diagnostics.Type_0_is_not_a_valid_async_function_return_type_in_ES5_SlashES3_because_it_does_not_refer_to_a_Promise_compatible_constructor_value, e.entityNameToString(a));
       }
       return re;
      }
      var c = au(true);
      if (c === ke) {
       bn(n, e.Diagnostics.Type_0_is_not_a_valid_async_function_return_type_in_ES5_SlashES3_because_it_does_not_refer_to_a_Promise_compatible_constructor_value, e.entityNameToString(a));
       return re;
      }
      if (!Ff(s, c, n, e.Diagnostics.Type_0_is_not_a_valid_async_function_return_type_in_ES5_SlashES3_because_it_does_not_refer_to_a_Promise_compatible_constructor_value)) {
       return re;
      }
      var u = a && Gk(a);
      var l = Bn(t.locals, u.escapedText, 67216319);
      if (l) {
       bn(l.valueDeclaration, e.Diagnostics.Duplicate_identifier_0_Compiler_uses_declaration_1_to_support_async_functions, e.idText(u), e.entityNameToString(a));
       return re;
      }
     }
     return rx(r, t, e.Diagnostics.The_return_type_of_an_async_function_must_either_be_a_valid_promise_or_must_not_contain_a_callable_then_member);
    }
    function ox(t) {
     var n = Ev(t);
     var r = tc(n);
     if (r.flags & 1) {
      return;
     }
     var i;
     var a = Sv(t);
     var o;
     switch (t.parent.kind) {
     case 238:
      var s = Vr(t.parent);
      var c = xa(s);
      i = Ru([ c, _e ]);
      break;

     case 149:
      i = _e;
      o = e.chainDiagnosticMessages(undefined, e.Diagnostics.The_return_type_of_a_parameter_decorator_function_must_be_either_void_or_any);
      break;

     case 152:
      i = _e;
      o = e.chainDiagnosticMessages(undefined, e.Diagnostics.The_return_type_of_a_property_decorator_function_must_be_either_void_or_any);
      break;

     case 154:
     case 156:
     case 157:
      var u = BS(t.parent);
      var l = _u(u);
      i = Ru([ l, _e ]);
      break;

     default:
      return e.Debug.fail();
     }
     Ff(r, i, t, a, function() {
      return o;
     });
    }
    function sx(t) {
     cx(t && e.getEntityNameFromTypeNode(t));
    }
    function cx(e) {
     if (!e) return;
     var t = Gk(e);
     var n = (e.kind === 71 ? 67901928 : 1920) | 2097152;
     var r = qn(t, t.escapedText, n, undefined, undefined, true);
     if (r && r.flags & 2097152 && Xr(r) && !aw(yr(r))) {
      xr(r);
     }
    }
    function ux(t) {
     var n = lx(t);
     if (n && e.isEntityName(n)) {
      cx(n);
     }
    }
    function lx(t) {
     if (t) {
      switch (t.kind) {
      case 172:
      case 171:
       var n = void 0;
       for (var r = 0, i = t.types; r < i.length; r++) {
        var a = i[r];
        while (a.kind === 175) {
         a = a.type;
        }
        if (a.kind === 131) {
         continue;
        }
        if (!F && (a.kind === 95 || a.kind === 140)) {
         continue;
        }
        var o = lx(a);
        if (!o) {
         return undefined;
        }
        if (n) {
         if (!e.isIdentifier(n) || !e.isIdentifier(o) || n.escapedText !== o.escapedText) {
          return undefined;
         }
        } else {
         n = o;
        }
       }
       return n;

      case 175:
       return lx(t.type);

      case 162:
       return t.typeName;
      }
     }
    }
    function fx(t) {
     var n = e.getEffectiveTypeAnnotationNode(t);
     return e.isRestParameter(t) ? e.getRestParameterElementType(n) : n;
    }
    function dx(t) {
     if (!t.decorators) {
      return;
     }
     if (!e.nodeCanBeDecorated(t, t.parent, t.parent.parent)) {
      return;
     }
     if (!T.experimentalDecorators) {
      bn(t, e.Diagnostics.Experimental_support_for_decorators_is_a_feature_that_is_subject_to_change_in_a_future_release_Set_the_experimentalDecorators_option_to_remove_this_warning);
     }
     var n = t.decorators[0];
     Ew(n, 8);
     if (t.kind === 149) {
      Ew(n, 32);
     }
     if (T.emitDecoratorMetadata) {
      Ew(n, 16);
      switch (t.kind) {
      case 238:
       var r = e.getFirstConstructorWithBody(t);
       if (r) {
        for (var i = 0, a = r.parameters; i < a.length; i++) {
         var o = a[i];
         ux(fx(o));
        }
       }
       break;

      case 154:
      case 156:
      case 157:
       for (var s = 0, c = t.parameters; s < c.length; s++) {
        var o = c[s];
        ux(fx(o));
       }
       ux(e.getEffectiveReturnTypeNode(t));
       break;

      case 152:
       ux(e.getEffectiveTypeAnnotationNode(t));
       break;

      case 149:
       ux(fx(t));
       var u = t.parent;
       for (var l = 0, f = u.parameters; l < f.length; l++) {
        var o = f[l];
        ux(fx(o));
       }
       break;
      }
     }
     e.forEach(t.decorators, ox);
    }
    function px(e) {
     if (a) {
      yx(e);
      tC(e);
      Rx(e, e.name);
      Bx(e, e.name);
     }
    }
    function mx(t) {
     if (!t.typeExpression) {
      bn(t.name, e.Diagnostics.JSDoc_typedef_tag_should_either_have_a_type_annotation_or_be_followed_by_property_or_member_tags);
     }
     if (t.name) {
      yk(t.name, e.Diagnostics.Type_alias_name_cannot_be_0);
     }
     cS(t.typeExpression);
    }
    function _x(e) {
     cS(e.typeExpression);
    }
    function gx(t) {
     cS(t.typeExpression);
     if (!e.getParameterSymbolFromJSDoc(t)) {
      var n = e.getHostSignatureFromJSDoc(t);
      if (n) {
       var r = e.getJSDocTags(n).filter(e.isJSDocParameterTag).indexOf(t);
       if (r > -1 && r < n.parameters.length && e.isBindingPattern(n.parameters[r].name)) {
        return;
       }
       if (!$s(n)) {
        bn(t.name, e.Diagnostics.JSDoc_param_tag_has_name_0_but_there_is_no_parameter_with_that_name, e.idText(t.name.kind === 146 ? t.name.right : t.name));
       } else if (e.findLast(e.getJSDocTags(n), e.isJSDocParameterTag) === t && t.typeExpression && t.typeExpression.type && !xd(Ul(t.typeExpression.type))) {
        bn(t.name, e.Diagnostics.JSDoc_param_tag_has_name_0_but_there_is_no_parameter_with_that_name_It_would_match_arguments_if_it_had_an_array_type, e.idText(t.name.kind === 146 ? t.name.right : t.name));
       }
      }
     }
    }
    function hx(t) {
     var n = e.getJSDocHost(t);
     if (!e.isClassDeclaration(n) && !e.isClassExpression(n)) {
      bn(n, e.Diagnostics.JSDoc_0_is_not_attached_to_a_class, e.idText(t.tagName));
      return;
     }
     var r = e.getJSDocTags(n).filter(e.isJSDocAugmentsTag);
     e.Debug.assert(r.length > 0);
     if (r.length > 1) {
      bn(r[1], e.Diagnostics.Class_declarations_cannot_have_more_than_one_augments_or_extends_tag);
     }
     var i = vx(t.class.expression);
     var a = e.getClassExtendsHeritageElement(n);
     if (a) {
      var o = vx(a.expression);
      if (o && i.escapedText !== o.escapedText) {
       bn(i, e.Diagnostics.JSDoc_0_1_does_not_match_the_extends_2_clause, e.idText(t.tagName), e.idText(i), e.idText(o));
      }
     }
    }
    function vx(e) {
     switch (e.kind) {
     case 71:
      return e;

     case 187:
      return e.name;

     default:
      return undefined;
     }
    }
    function yx(t) {
     dx(t);
     Sb(t);
     var n = e.getFunctionFlags(t);
     if (t.name && t.name.kind === 147) {
      lg(t.name);
     }
     if (!po(t)) {
      var r = Vr(t);
      var i = t.localSymbol || r;
      var o = e.find(i.declarations, function(e) {
       return e.kind === t.kind && !(e.flags & 65536);
      });
      if (t === o) {
       Zb(i);
      }
      if (r.parent) {
       if (e.getDeclarationOfKind(r, t.kind) === t) {
        Zb(r);
       }
      }
     }
     var s = t.kind === 153 ? undefined : t.body;
     cS(s);
     if ((n & 1) === 0) {
      var c = by(t, n);
      vy(t, c);
     }
     if (a && !e.getEffectiveReturnTypeNode(t)) {
      if (O && e.nodeIsMissing(s) && !Qb(t)) {
       ip(t, ee);
      }
      if (n & 1 && e.nodeIsPresent(s)) {
       tc(Vs(t));
      }
     }
     if (e.isInJavaScriptFile(t)) {
      var u = e.getJSDocTypeTag(t);
      if (u && u.typeExpression && !X_(Ul(u.typeExpression), t)) {
       bn(u, e.Diagnostics.The_type_of_a_function_declaration_must_match_the_function_s_signature);
      }
     }
    }
    function bx(t) {
     if (a) {
      var n = e.getSourceFileOfNode(t);
      var r = xt.get(n.path);
      if (!r) {
       r = [];
       xt.set(n.path, r);
      }
      r.push(t);
     }
    }
    function xx(t, n) {
     for (var r = 0, i = t; r < i.length; r++) {
      var a = i[r];
      switch (a.kind) {
      case 238:
      case 207:
       wx(a, n);
       Cx(a, n);
       break;

      case 239:
       Cx(a, n);
       break;

      case 277:
      case 242:
      case 216:
      case 244:
      case 223:
      case 224:
      case 225:
       Ex(a, n);
       break;

      case 155:
      case 194:
      case 237:
      case 195:
      case 154:
      case 156:
      case 157:
       if (a.body) {
        Ex(a, n);
       }
       Cx(a, n);
       break;

      case 153:
      case 158:
      case 159:
      case 163:
      case 164:
      case 240:
       Cx(a, n);
       break;

      default:
       e.Debug.assertNever(a, "Node should not have been registered for unused identifiers check");
      }
     }
    }
    function kx(t, n, r) {
     var i = e.getNameOfDeclaration(t) || t;
     var a = wS(t) ? e.Diagnostics._0_is_declared_but_never_used : e.Diagnostics._0_is_declared_but_its_value_is_never_read;
     r(t, 0, e.createDiagnosticForNode(i, a, n));
    }
    function Sx(t) {
     return e.isIdentifier(t) && e.idText(t).charCodeAt(0) === 95;
    }
    function wx(t, n) {
     if (!(t.flags & 4194304)) {
      for (var r = 0, i = t.members; r < i.length; r++) {
       var a = i[r];
       switch (a.kind) {
       case 154:
       case 152:
       case 156:
       case 157:
        if (a.kind === 157 && a.symbol.flags & 32768) {
         break;
        }
        var o = Vr(a);
        if (!o.isReferenced && e.hasModifier(a, 8)) {
         n(a, 0, e.createDiagnosticForNode(a.name, e.Diagnostics._0_is_declared_but_its_value_is_never_read, xi(o)));
        }
        break;

       case 155:
        for (var s = 0, c = a.parameters; s < c.length; s++) {
         var u = c[s];
         if (!u.symbol.isReferenced && e.hasModifier(u, 8)) {
          n(u, 0, e.createDiagnosticForNode(u.name, e.Diagnostics.Property_0_is_declared_but_its_value_is_never_read, e.symbolName(u.symbol)));
         }
        }
        break;

       case 160:
       case 215:
        break;

       default:
        e.Debug.fail();
       }
      }
     }
    }
    function Cx(t, n) {
     var r = e.getEffectiveTypeParameterDeclarations(t);
     if (!(t.flags & 4194304) && e.last(Vr(t).declarations) === t) {
      for (var i = 0, a = r; i < a.length; i++) {
       var o = a[i];
       if (!(Kr(o.symbol).isReferenced & 262144) && !Sx(o.name)) {
        n(o, 1, e.createDiagnosticForNode(o.name, e.Diagnostics._0_is_declared_but_its_value_is_never_read, e.symbolName(o.symbol)));
       }
      }
     }
    }
    function Dx(e, t, n, r) {
     var i = String(r(t));
     var a = e.get(i);
     if (a) {
      a[1].push(n);
     } else {
      e.set(i, [ t, [ n ] ]);
     }
    }
    function Tx(t) {
     return e.tryCast(e.getRootDeclaration(t), e.isParameter);
    }
    function Ex(t, n) {
     if (t.flags & 4194304) return;
     var r = e.createMap();
     var i = e.createMap();
     var a = e.createMap();
     t.locals.forEach(function(t) {
      if (t.flags & 262144 ? !(t.flags & 3 && !(t.isReferenced & 3)) : t.isReferenced || t.exportSymbol) {
       return;
      }
      for (var o = 0, s = t.declarations; o < s.length; o++) {
       var u = s[o];
       if (e.isAmbientModule(u) || (e.isVariableDeclaration(u) && e.isForInOrOfStatement(u.parent.parent) || Ax(u)) && Sx(u.name)) {
        continue;
       }
       if (Ax(u)) {
        Dx(r, Fx(u), u, c);
       } else if (e.isBindingElement(u) && e.isObjectBindingPattern(u.parent)) {
        var l = e.last(u.parent.elements);
        if (u === l || !e.last(u.parent.elements).dotDotDotToken) {
         Dx(i, u.parent, u, c);
        }
       } else if (e.isVariableDeclaration(u)) {
        Dx(a, u.parent, u, c);
       } else {
        var f = t.valueDeclaration && Tx(t.valueDeclaration);
        var d = t.valueDeclaration && e.getNameOfDeclaration(t.valueDeclaration);
        if (f && d) {
         if (!e.isParameterPropertyDeclaration(f) && !e.parameterIsThisKeyword(f) && !Sx(d)) {
          n(f, 1, e.createDiagnosticForNode(d, e.Diagnostics._0_is_declared_but_its_value_is_never_read, e.symbolName(t)));
         }
        } else {
         kx(u, e.symbolName(t), n);
        }
       }
      }
     });
     r.forEach(function(t) {
      var r = t[0], i = t[1];
      var a = r.parent;
      var o = (r.name ? 1 : 0) + (r.namedBindings ? r.namedBindings.kind === 249 ? 1 : r.namedBindings.elements.length : 0);
      if (o === i.length) {
       n(a, 0, i.length === 1 ? e.createDiagnosticForNode(a, e.Diagnostics._0_is_declared_but_its_value_is_never_read, e.idText(e.first(i).name)) : e.createDiagnosticForNode(a, e.Diagnostics.All_imports_in_import_declaration_are_unused));
      } else {
       for (var s = 0, c = i; s < c.length; s++) {
        var u = c[s];
        kx(u, e.idText(u.name), n);
       }
      }
     });
     i.forEach(function(t) {
      var r = t[0], i = t[1];
      var o = Tx(r.parent) ? 1 : 0;
      if (r.elements.length === i.length) {
       if (i.length === 1 && r.parent.kind === 235 && r.parent.parent.kind === 236) {
        Dx(a, r.parent.parent, r.parent, c);
       } else {
        n(r, o, i.length === 1 ? e.createDiagnosticForNode(r, e.Diagnostics._0_is_declared_but_its_value_is_never_read, e.idText(e.cast(e.first(i).name, e.isIdentifier))) : e.createDiagnosticForNode(r, e.Diagnostics.All_destructured_elements_are_unused));
       }
      } else {
       for (var s = 0, u = i; s < u.length; s++) {
        var l = u[s];
        n(l, o, e.createDiagnosticForNode(l, e.Diagnostics._0_is_declared_but_its_value_is_never_read, e.idText(e.cast(l.name, e.isIdentifier))));
       }
      }
     });
     a.forEach(function(t) {
      var r = t[0], i = t[1];
      if (r.declarations.length === i.length) {
       n(r, 0, i.length === 1 ? e.createDiagnosticForNode(e.first(i).name, e.Diagnostics._0_is_declared_but_its_value_is_never_read, Nx(e.first(i).name)) : e.createDiagnosticForNode(r.parent.kind === 217 ? r.parent : r, e.Diagnostics.All_variables_are_unused));
      } else {
       for (var a = 0, o = i; a < o.length; a++) {
        var s = o[a];
        n(s, 0, e.createDiagnosticForNode(s, e.Diagnostics._0_is_declared_but_its_value_is_never_read, e.idText(e.cast(s.name, e.isIdentifier))));
       }
      }
     });
    }
    function Nx(t) {
     switch (t.kind) {
     case 71:
      return e.idText(t);

     case 183:
     case 182:
      return Nx(e.cast(e.first(t.elements), e.isBindingElement).name);

     default:
      return e.Debug.assertNever(t);
     }
    }
    function Ax(e) {
     return e.kind === 248 || e.kind === 251 || e.kind === 249;
    }
    function Fx(e) {
     return e.kind === 248 ? e : e.kind === 249 ? e.parent : e.parent.parent;
    }
    function Px(t) {
     if (t.kind === 216) {
      PC(t);
     }
     if (e.isFunctionOrModuleBlock(t)) {
      var n = Ct;
      e.forEach(t.statements, cS);
      Ct = n;
     } else {
      e.forEach(t.statements, cS);
     }
     if (t.locals) {
      bx(t);
     }
    }
    function Ix(t) {
     if (E >= 2 || T.noEmit || !e.hasRestParameter(t) || t.flags & 4194304 || e.nodeIsMissing(t.body)) {
      return;
     }
     e.forEach(t.parameters, function(t) {
      if (t.name && !e.isBindingPattern(t.name) && t.name.escapedText === j.escapedName) {
       bn(t, e.Diagnostics.Duplicate_identifier_arguments_Compiler_uses_arguments_to_initialize_rest_parameters);
      }
     });
    }
    function Ox(t, n, r) {
     if (!(n && n.escapedText === r)) {
      return false;
     }
     if (t.kind === 152 || t.kind === 151 || t.kind === 154 || t.kind === 153 || t.kind === 156 || t.kind === 157) {
      return false;
     }
     if (t.flags & 4194304) {
      return false;
     }
     var i = e.getRootDeclaration(t);
     if (i.kind === 149 && e.nodeIsMissing(i.parent.body)) {
      return false;
     }
     return true;
    }
    function Mx(t) {
     e.findAncestor(t, function(n) {
      if (lw(n) & 4) {
       var r = t.kind !== 71;
       if (r) {
        bn(e.getNameOfDeclaration(t), e.Diagnostics.Duplicate_identifier_this_Compiler_uses_variable_declaration_this_to_capture_this_reference);
       } else {
        bn(t, e.Diagnostics.Expression_resolves_to_variable_declaration_this_that_compiler_uses_to_capture_this_reference);
       }
       return true;
      }
      return false;
     });
    }
    function Lx(t) {
     e.findAncestor(t, function(n) {
      if (lw(n) & 8) {
       var r = t.kind !== 71;
       if (r) {
        bn(e.getNameOfDeclaration(t), e.Diagnostics.Duplicate_identifier_newTarget_Compiler_uses_variable_declaration_newTarget_to_capture_new_target_meta_property_reference);
       } else {
        bn(t, e.Diagnostics.Expression_resolves_to_variable_declaration_newTarget_that_compiler_uses_to_capture_new_target_meta_property_reference);
       }
       return true;
      }
      return false;
     });
    }
    function Rx(t, n) {
     if (N >= e.ModuleKind.ES2015 || T.noEmit) {
      return;
     }
     if (!Ox(t, n, "require") && !Ox(t, n, "exports")) {
      return;
     }
     if (e.isModuleDeclaration(t) && e.getModuleInstanceState(t) !== 1) {
      return;
     }
     var r = zi(t);
     if (r.kind === 277 && e.isExternalOrCommonJsModule(r)) {
      bn(n, e.Diagnostics.Duplicate_identifier_0_Compiler_reserves_name_1_in_top_level_scope_of_a_module, e.declarationNameToString(n), e.declarationNameToString(n));
     }
    }
    function Bx(t, n) {
     if (E >= 4 || T.noEmit || !Ox(t, n, "Promise")) {
      return;
     }
     if (e.isModuleDeclaration(t) && e.getModuleInstanceState(t) !== 1) {
      return;
     }
     var r = zi(t);
     if (r.kind === 277 && e.isExternalOrCommonJsModule(r) && r.flags & 1024) {
      bn(n, e.Diagnostics.Duplicate_identifier_0_Compiler_reserves_name_1_in_top_level_scope_of_a_module_containing_async_functions, e.declarationNameToString(n), e.declarationNameToString(n));
     }
    }
    function zx(t) {
     if ((e.getCombinedNodeFlags(t) & 3) !== 0 || e.isParameterDeclaration(t)) {
      return;
     }
     if (t.kind === 235 && !t.initializer) {
      return;
     }
     var n = Vr(t);
     if (n.flags & 1) {
      if (!e.isIdentifier(t.name)) return e.Debug.fail();
      var r = qn(t, t.name.escapedText, 3, undefined, undefined, false);
      if (r && r !== n && r.flags & 2) {
       if (eh(r) & 3) {
        var i = e.getAncestor(r.valueDeclaration, 236);
        var a = i.parent.kind === 217 && i.parent.parent ? i.parent.parent : undefined;
        var o = a && (a.kind === 216 && e.isFunctionLike(a.parent) || a.kind === 243 || a.kind === 242 || a.kind === 277);
        if (!o) {
         var s = xi(r);
         bn(t, e.Diagnostics.Cannot_initialize_outer_scoped_variable_0_in_the_same_scope_as_block_scoped_declaration_1, s, s);
        }
       }
      }
     }
    }
    function jx(t) {
     if (e.getRootDeclaration(t).kind !== 149) {
      return;
     }
     var n = e.getContainingFunction(t);
     r(t.initializer);
     function r(i) {
      if (e.isTypeNode(i) || e.isDeclarationName(i)) {
       return;
      }
      if (i.kind === 187) {
       return r(i.expression);
      } else if (i.kind === 71) {
       var a = qn(i, i.escapedText, 67216319 | 2097152, undefined, undefined, false);
       if (!a || a === Y || !a.valueDeclaration) {
        return;
       }
       if (a.valueDeclaration === t) {
        bn(i, e.Diagnostics.Parameter_0_cannot_be_referenced_in_its_initializer, e.declarationNameToString(t.name));
        return;
       }
       var o = e.getEnclosingBlockScopeContainer(a.valueDeclaration);
       if (o === n) {
        if (a.valueDeclaration.kind === 149 || a.valueDeclaration.kind === 184) {
         if (a.valueDeclaration.pos < t.pos) {
          return;
         }
         if (e.findAncestor(i, function(n) {
          if (n === t.initializer) {
           return "quit";
          }
          return e.isFunctionLike(n.parent) || n.parent.kind === 152 && !e.hasModifier(n.parent, 32) && e.isClassLike(n.parent.parent);
         })) {
          return;
         }
        }
        bn(i, e.Diagnostics.Initializer_of_parameter_0_cannot_reference_identifier_1_declared_after_it, e.declarationNameToString(t.name), e.declarationNameToString(i));
       }
      } else {
       return e.forEachChild(i, r);
      }
     }
    }
    function qx(e) {
     return e === te ? ee : e === nt ? tt : e;
    }
    function Ux(t) {
     dx(t);
     if (!e.isBindingElement(t)) {
      cS(t.type);
     }
     if (!t.name) {
      return;
     }
     if (t.name.kind === 147) {
      lg(t.name);
      if (t.initializer) {
       nb(t.initializer);
      }
     }
     if (t.kind === 184) {
      if (t.parent.kind === 182 && E < 6) {
       Ew(t, 4);
      }
      if (t.propertyName && t.propertyName.kind === 147) {
       lg(t.propertyName);
      }
      var n = t.parent.parent;
      var r = Ji(n);
      var i = t.propertyName || t.name;
      if (!e.isBindingPattern(i)) {
       var a = Ds(r, e.getTextOfPropertyName(i));
       kh(a, undefined, false);
       if (n.initializer && a) {
        nh(n, n.initializer, r, a);
       }
      }
     }
     if (e.isBindingPattern(t.name)) {
      if (t.name.kind === 183 && E < 2 && T.downlevelIteration) {
       Ew(t, 512);
      }
      e.forEach(t.name.elements, cS);
     }
     if (t.initializer && e.getRootDeclaration(t).kind === 149 && e.nodeIsMissing(e.getContainingFunction(t).body)) {
      bn(t, e.Diagnostics.A_parameter_initializer_is_only_allowed_in_a_function_or_constructor_implementation);
      return;
     }
     if (e.isBindingPattern(t.name)) {
      if (t.initializer && t.parent.parent.kind !== 224) {
       var o = nb(t.initializer);
       if (F && t.name.elements.length === 0) {
        oh(o, t);
       } else {
        Pf(o, ia(t), t, t.initializer);
       }
       jx(t);
      }
      return;
     }
     var s = Vr(t);
     var c = qx(xa(s));
     if (t === s.valueDeclaration) {
      var u = e.getEffectiveInitializer(t);
      if (u) {
       var l = e.isInJavaScriptFile(t) && e.isObjectLiteralExpression(u) && (u.properties.length === 0 || e.isPrototypeAccess(t.name)) && e.hasEntries(s.exports);
       if (!l && t.parent.parent.kind !== 224) {
        Pf(nb(u), c, t, u, undefined);
        jx(t);
       }
      }
     } else {
      var f = qx(ia(t));
      if (c !== re && f !== re && !Sf(c, f) && !(s.flags & 67108864)) {
       Jx(c, t, f);
      }
      if (t.initializer) {
       Pf(nb(t.initializer), f, t, t.initializer, undefined);
      }
      if (!Kx(t, s.valueDeclaration)) {
       bn(e.getNameOfDeclaration(s.valueDeclaration), e.Diagnostics.All_declarations_of_0_must_have_identical_modifiers, e.declarationNameToString(t.name));
       bn(t.name, e.Diagnostics.All_declarations_of_0_must_have_identical_modifiers, e.declarationNameToString(t.name));
      }
     }
     if (t.kind !== 152 && t.kind !== 151) {
      ex(t);
      if (t.kind === 235 || t.kind === 184) {
       zx(t);
      }
      Rx(t, t.name);
      Bx(t, t.name);
     }
    }
    function Jx(t, n, r) {
     var i = e.getNameOfDeclaration(n);
     var a = n.kind === 152 || n.kind === 151 ? e.Diagnostics.Subsequent_property_declarations_must_have_the_same_type_Property_0_must_be_of_type_1_but_here_has_type_2 : e.Diagnostics.Subsequent_variable_declarations_must_have_the_same_type_Variable_0_must_be_of_type_1_but_here_has_type_2;
     bn(i, a, e.declarationNameToString(i), Si(t), Si(r));
    }
    function Kx(t, n) {
     if (t.kind === 149 && n.kind === 235 || t.kind === 235 && n.kind === 149) {
      return true;
     }
     if (e.hasQuestionToken(t) !== e.hasQuestionToken(n)) {
      return false;
     }
     var r = 8 | 16 | 256 | 128 | 64 | 32;
     return e.getSelectedModifierFlags(t, r) === e.getSelectedModifierFlags(n, r);
    }
    function Vx(e) {
     _C(e);
     return Ux(e);
    }
    function Wx(e) {
     pC(e);
     return Ux(e);
    }
    function Hx(t) {
     if (!Fw(t) && !vC(t.declarationList)) bC(t);
     e.forEach(t.declarationList.declarations, cS);
    }
    function Gx(e) {
     PC(e);
     pb(e.expression);
    }
    function $x(t) {
     PC(t);
     pb(t.expression);
     cS(t.thenStatement);
     if (t.thenStatement.kind === 218) {
      bn(t.thenStatement, e.Diagnostics.The_body_of_an_if_statement_cannot_be_the_empty_statement);
     }
     cS(t.elseStatement);
    }
    function Xx(e) {
     PC(e);
     cS(e.statement);
     pb(e.expression);
    }
    function Qx(e) {
     PC(e);
     pb(e.expression);
     cS(e.statement);
    }
    function Yx(t) {
     if (!PC(t)) {
      if (t.initializer && t.initializer.kind === 236) {
       vC(t.initializer);
      }
     }
     if (t.initializer) {
      if (t.initializer.kind === 236) {
       e.forEach(t.initializer.declarations, Vx);
      } else {
       pb(t.initializer);
      }
     }
     if (t.condition) pb(t.condition);
     if (t.incrementor) pb(t.incrementor);
     cS(t.statement);
     if (t.locals) {
      bx(t);
     }
    }
    function Zx(t) {
     aC(t);
     if (t.awaitModifier) {
      var n = e.getFunctionFlags(e.getContainingFunction(t));
      if ((n & (4 | 2)) === 2 && E < 6) {
       Ew(t, 16384);
      }
     } else if (T.downlevelIteration && E < 2) {
      Ew(t, 256);
     }
     if (t.initializer.kind === 236) {
      tk(t);
     } else {
      var r = t.initializer;
      var i = nk(t.expression, t.awaitModifier);
      if (r.kind === 185 || r.kind === 186) {
       Ky(r, i || re);
      } else {
       var a = pb(r);
       Dy(r, e.Diagnostics.The_left_hand_side_of_a_for_of_statement_must_be_a_variable_or_a_property_access);
       if (i) {
        Pf(i, a, r, t.expression);
       }
      }
     }
     cS(t.statement);
     if (t.locals) {
      bx(t);
     }
    }
    function ek(t) {
     aC(t);
     var n = ah(t.expression);
     if (t.initializer.kind === 236) {
      var r = t.initializer.declarations[0];
      if (r && e.isBindingPattern(r.name)) {
       bn(r.name, e.Diagnostics.The_left_hand_side_of_a_for_in_statement_cannot_be_a_destructuring_pattern);
      }
      tk(t);
     } else {
      var i = t.initializer;
      var a = pb(i);
      if (i.kind === 185 || i.kind === 186) {
       bn(i, e.Diagnostics.The_left_hand_side_of_a_for_in_statement_cannot_be_a_destructuring_pattern);
      } else if (!Tf(tl(n), a)) {
       bn(i, e.Diagnostics.The_left_hand_side_of_a_for_in_statement_must_be_of_type_string_or_any);
      } else {
       Dy(i, e.Diagnostics.The_left_hand_side_of_a_for_in_statement_must_be_a_variable_or_a_property_access);
      }
     }
     if (n === ge || !Oy(n, 16777216 | 14745600)) {
      bn(t.expression, e.Diagnostics.The_right_hand_side_of_a_for_in_statement_must_be_of_type_any_an_object_type_or_a_type_parameter_but_here_has_type_0, Si(n));
     }
     cS(t.statement);
     if (t.locals) {
      bx(t);
     }
    }
    function tk(e) {
     var t = e.initializer;
     if (t.declarations.length >= 1) {
      var n = t.declarations[0];
      Vx(n);
     }
    }
    function nk(e, t) {
     var n = ah(e);
     return rk(n, e, true, t !== undefined);
    }
    function rk(e, t, n, r) {
     if (Ui(e)) {
      return e;
     }
     return ik(e, t, n, r, true) || ee;
    }
    function ik(t, n, r, i, a) {
     if (t === ge) {
      ok(n, t, i);
      return undefined;
     }
     var o = E >= 2;
     var s = !o && T.downlevelIteration;
     if (o || s || i) {
      var c = ak(t, o ? n : undefined, i, true, a);
      if (c || o) {
       return c;
      }
     }
     var u = t;
     var l = false;
     var f = false;
     if (r) {
      if (u.flags & 262144) {
       var d = t.types;
       var p = e.filter(d, function(e) {
        return !(e.flags & 68);
       });
       if (p !== d) {
        u = Ru(p, 2);
       }
      } else if (u.flags & 68) {
       u = ge;
      }
      f = u !== t;
      if (f) {
       if (E < 1) {
        if (n) {
         bn(n, e.Diagnostics.Using_a_string_in_a_for_of_statement_is_only_supported_in_ECMAScript_5_and_higher);
         l = true;
        }
       }
       if (u.flags & 32768) {
        return ue;
       }
      }
     }
     if (!kd(u)) {
      if (n && !l) {
       var m = !!ak(t, undefined, i, true, a);
       var _ = !r || f ? s ? e.Diagnostics.Type_0_is_not_an_array_type_or_does_not_have_a_Symbol_iterator_method_that_returns_an_iterator : m ? e.Diagnostics.Type_0_is_not_an_array_type_Use_compiler_option_downlevelIteration_to_allow_iterating_of_iterators : e.Diagnostics.Type_0_is_not_an_array_type : s ? e.Diagnostics.Type_0_is_not_an_array_type_or_a_string_type_or_does_not_have_a_Symbol_iterator_method_that_returns_an_iterator : m ? e.Diagnostics.Type_0_is_not_an_array_type_or_a_string_type_Use_compiler_option_downlevelIteration_to_allow_iterating_of_iterators : e.Diagnostics.Type_0_is_not_an_array_type_or_a_string_type;
       bn(n, _, Si(u));
      }
      return f ? ue : undefined;
     }
     var g = Ps(u, 1);
     if (f && g) {
      if (g.flags & 68) {
       return ue;
      }
      return Ru([ g, ue ], 2);
     }
     return g;
    }
    function ak(t, n, r, i, a) {
     if (Ui(t)) {
      return undefined;
     }
     return wm(t, o);
     function o(t) {
      var o = t;
      if (r) {
       if (o.iteratedTypeOfAsyncIterable) {
        return o.iteratedTypeOfAsyncIterable;
       }
       if (ka(t, ou(false)) || ka(t, cu(false))) {
        return o.iteratedTypeOfAsyncIterable = t.typeArguments[0];
       }
      }
      if (i) {
       if (o.iteratedTypeOfIterable) {
        return o.iteratedTypeOfIterable;
       }
       if (ka(t, uu(false)) || ka(t, fu(false))) {
        return o.iteratedTypeOfIterable = t.typeArguments[0];
       }
      }
      var s = r && qi(t, e.getPropertyNameForKnownSymbolName("asyncIterator"));
      var c = s || (i ? qi(t, e.getPropertyNameForKnownSymbolName("iterator")) : undefined);
      if (Ui(c)) {
       return undefined;
      }
      var u = c ? Es(c, 0) : undefined;
      if (!e.some(u)) {
       if (n) {
        ok(n, t, r);
        n = undefined;
       }
       return undefined;
      }
      var l = Ru(e.map(u, tc), 2);
      var f = sk(l, n, !!s);
      if (a && n && f) {
       Ff(t, s ? gu(f) : vu(f), n);
      }
      return s ? o.iteratedTypeOfAsyncIterable = f : o.iteratedTypeOfIterable = f;
     }
    }
    function ok(t, n, r) {
     bn(t, r ? e.Diagnostics.Type_0_must_have_a_Symbol_asyncIterator_method_that_returns_an_async_iterator : e.Diagnostics.Type_0_must_have_a_Symbol_iterator_method_that_returns_an_iterator, Si(n));
    }
    function sk(t, n, r) {
     if (Ui(t)) {
      return undefined;
     }
     var i = t;
     if (r ? i.iteratedTypeOfAsyncIterator : i.iteratedTypeOfIterator) {
      return r ? i.iteratedTypeOfAsyncIterator : i.iteratedTypeOfIterator;
     }
     var a = r ? su : lu;
     if (ka(t, a(false))) {
      return r ? i.iteratedTypeOfAsyncIterator = t.typeArguments[0] : i.iteratedTypeOfIterator = t.typeArguments[0];
     }
     var o = qi(t, "next");
     if (Ui(o)) {
      return undefined;
     }
     var s = o ? Es(o, 0) : e.emptyArray;
     if (s.length === 0) {
      if (n) {
       bn(n, r ? e.Diagnostics.An_async_iterator_must_have_a_next_method : e.Diagnostics.An_iterator_must_have_a_next_method);
      }
      return undefined;
     }
     var c = Ru(e.map(s, tc), 2);
     if (Ui(c)) {
      return undefined;
     }
     if (r) {
      c = tx(c, n, e.Diagnostics.The_type_returned_by_the_next_method_of_an_async_iterator_must_be_a_promise_for_a_type_with_a_value_property);
      if (Ui(c)) {
       return undefined;
      }
     }
     var u = c && qi(c, "value");
     if (!u) {
      if (n) {
       bn(n, r ? e.Diagnostics.The_type_returned_by_the_next_method_of_an_async_iterator_must_be_a_promise_for_a_type_with_a_value_property : e.Diagnostics.The_type_returned_by_the_next_method_of_an_iterator_must_have_a_value_property);
      }
      return undefined;
     }
     return r ? i.iteratedTypeOfAsyncIterator = u : i.iteratedTypeOfIterator = u;
    }
    function ck(e, t) {
     if (Ui(e)) {
      return undefined;
     }
     return ak(e, undefined, t, !t, false) || sk(e, undefined, t);
    }
    function uk(e) {
     if (!PC(e)) dC(e);
    }
    function lk(t) {
     return t.kind === 156 && e.getEffectiveSetAccessorTypeAnnotationNode(e.getDeclarationOfKind(t.symbol, 157)) !== undefined;
    }
    function fk(t, n) {
     var r = (e.getFunctionFlags(t) & 3) === 2 ? nx(n) : n;
     return !!r && Iy(r, 4096 | 3);
    }
    function dk(t) {
     if (PC(t)) {
      return;
     }
     var n = e.getContainingFunction(t);
     if (!n) {
      SC(t, e.Diagnostics.A_return_statement_can_only_be_used_within_a_function_body);
      return;
     }
     var r = Vs(n);
     var i = tc(r);
     var a = e.getFunctionFlags(n);
     var o = a & 1;
     if (F || t.expression || i.flags & 32768) {
      var s = t.expression ? nb(t.expression) : ae;
      if (o) {
       return;
      } else if (n.kind === 157) {
       if (t.expression) {
        bn(t, e.Diagnostics.Setters_cannot_return_a_value);
       }
      } else if (n.kind === 155) {
       if (t.expression && !Pf(s, i, t, t.expression)) {
        bn(t, e.Diagnostics.Return_type_of_constructor_signature_must_be_assignable_to_the_instance_type_of_the_class);
       }
      } else if (e.getEffectiveReturnTypeNode(n) || lk(n) || Gs(n)) {
       if (a & 2) {
        var c = nx(i);
        var u = rx(s, t, e.Diagnostics.The_return_type_of_an_async_function_must_either_be_a_valid_promise_or_must_not_contain_a_callable_then_member);
        if (c) {
         Ff(u, c, t);
        }
       } else {
        Pf(s, i, t, t.expression);
       }
      }
     } else if (n.kind !== 155 && T.noImplicitReturns && !fk(n, i) && !o) {
      bn(t, e.Diagnostics.Not_all_code_paths_return_a_value);
     }
    }
    function pk(t) {
     if (!PC(t)) {
      if (t.flags & 16384) {
       SC(t, e.Diagnostics.with_statements_are_not_allowed_in_an_async_function_block);
      }
     }
     pb(t.expression);
     var n = e.getSourceFileOfNode(t);
     if (!kC(n)) {
      var r = e.getSpanOfTokenAtPosition(n, t.pos).start;
      var i = t.statement.pos;
      wC(n, r, i - r, e.Diagnostics.The_with_statement_is_not_supported_All_symbols_in_a_with_block_will_have_type_any);
     }
    }
    function mk(t) {
     PC(t);
     var n;
     var r = false;
     var i = pb(t.expression);
     var o = Ed(i);
     e.forEach(t.caseBlock.clauses, function(s) {
      if (s.kind === 270 && !r) {
       if (n === undefined) {
        n = s;
       } else {
        var c = e.getSourceFileOfNode(t);
        var u = e.skipTrivia(c.text, s.pos);
        var l = s.statements.length > 0 ? s.statements[0].pos : s.end;
        wC(c, u, l - u, e.Diagnostics.A_default_clause_cannot_appear_more_than_once_in_a_switch_statement);
        r = true;
       }
      }
      if (a && s.kind === 269) {
       var f = pb(s.expression);
       var d = Ed(f);
       var p = i;
       if (!d || !o) {
        f = d ? Nd(f) : f;
        p = Nd(i);
       }
       if (!Hy(p, f)) {
        qf(f, p, s.expression, undefined);
       }
      }
      e.forEach(s.statements, cS);
     });
     if (t.caseBlock.locals) {
      bx(t.caseBlock);
     }
    }
    function _k(t) {
     if (!PC(t)) {
      e.findAncestor(t.parent, function(n) {
       if (e.isFunctionLike(n)) {
        return "quit";
       }
       if (n.kind === 231 && n.label.escapedText === t.label.escapedText) {
        CC(t.label, e.Diagnostics.Duplicate_label_0, e.getTextOfNode(t.label));
        return true;
       }
       return false;
      });
     }
     cS(t.statement);
    }
    function gk(t) {
     if (!PC(t)) {
      if (t.expression === undefined) {
       OC(t, e.Diagnostics.Line_break_not_permitted_here);
      }
     }
     if (t.expression) {
      pb(t.expression);
     }
    }
    function hk(t) {
     PC(t);
     Px(t.tryBlock);
     var n = t.catchClause;
     if (n) {
      if (n.variableDeclaration) {
       if (n.variableDeclaration.type) {
        SC(n.variableDeclaration.type, e.Diagnostics.Catch_clause_variable_cannot_have_a_type_annotation);
       } else if (n.variableDeclaration.initializer) {
        SC(n.variableDeclaration.initializer, e.Diagnostics.Catch_clause_variable_cannot_have_an_initializer);
       } else {
        var r = n.block.locals;
        if (r) {
         e.forEachKey(n.locals, function(t) {
          var n = r.get(t);
          if (n && (n.flags & 2) !== 0) {
           CC(n.valueDeclaration, e.Diagnostics.Cannot_redeclare_identifier_0_in_catch_clause, t);
          }
         });
        }
       }
      }
      Px(n.block);
     }
     if (t.finallyBlock) {
      Px(t.finallyBlock);
     }
    }
    function vk(t) {
     var n = gc(t.symbol, 1);
     var r = gc(t.symbol, 0);
     var i = Ps(t, 0);
     var a = Ps(t, 1);
     if (i || a) {
      e.forEach(es(t), function(e) {
       var o = xa(e);
       m(e, o, t, r, i, 0);
       m(e, o, t, n, a, 1);
      });
      var o = t.symbol.valueDeclaration;
      if (e.getObjectFlags(t) & 1 && e.isClassLike(o)) {
       for (var s = 0, c = o.members; s < c.length; s++) {
        var u = c[s];
        if (!e.hasModifier(u, 32) && po(u)) {
         var l = Vr(u);
         var f = xa(l);
         m(l, f, t, r, i, 0);
         m(l, f, t, n, a, 1);
        }
       }
      }
     }
     var d;
     if (i && a) {
      d = n || r;
      if (!d && e.getObjectFlags(t) & 2) {
       var p = e.forEach(La(t), function(e) {
        return Ps(e, 0) && Ps(e, 1);
       });
       d = p ? undefined : t.symbol.declarations[0];
      }
     }
     if (d && !Tf(a, i)) {
      bn(d, e.Diagnostics.Numeric_index_type_0_is_not_assignable_to_string_index_type_1, Si(a), Si(i));
     }
     function m(t, n, r, i, a, o) {
      if (!a || e.isKnownSymbol(t)) {
       return;
      }
      var s = t.valueDeclaration;
      var c = s && e.getNameOfDeclaration(s);
      if (o === 1 && !(c ? og(c) : ug(t.escapedName))) {
       return;
      }
      var u;
      if (s && c && (s.kind === 202 || c.kind === 147 || t.parent === r.symbol)) {
       u = s;
      } else if (i) {
       u = i;
      } else if (e.getObjectFlags(r) & 2) {
       var l = e.forEach(La(r), function(e) {
        return ts(e, t.escapedName) && Ps(e, o);
       });
       u = l ? undefined : r.symbol.declarations[0];
      }
      if (u && !Tf(n, a)) {
       var f = o === 0 ? e.Diagnostics.Property_0_of_type_1_is_not_assignable_to_string_index_type_2 : e.Diagnostics.Property_0_of_type_1_is_not_assignable_to_numeric_index_type_2;
       bn(u, f, xi(t), Si(n), Si(a));
      }
     }
    }
    function yk(e, t) {
     switch (e.escapedText) {
     case "any":
     case "unknown":
     case "number":
     case "boolean":
     case "string":
     case "symbol":
     case "void":
     case "object":
      bn(e, t, e.escapedText);
     }
    }
    function bk(t) {
     if (E === 1 && t.escapedText === "Object" && N !== e.ModuleKind.ES2015 && N !== e.ModuleKind.ESNext) {
      bn(t, e.Diagnostics.Class_name_cannot_be_Object_when_targeting_ES5_with_module_0, e.ModuleKind[N]);
     }
    }
    function xk(t) {
     if (t) {
      var n = false;
      for (var r = 0; r < t.length; r++) {
       var i = t[r];
       gb(i);
       if (a) {
        if (i.default) {
         n = true;
        } else if (n) {
         bn(i, e.Diagnostics.Required_type_parameters_may_not_follow_optional_type_parameters);
        }
        for (var o = 0; o < r; o++) {
         if (t[o].symbol === i.symbol) {
          bn(i.name, e.Diagnostics.Duplicate_identifier_0, e.declarationNameToString(i.name));
         }
        }
       }
      }
     }
    }
    function kk(t) {
     if (t.declarations.length === 1) {
      return;
     }
     var n = Mn(t);
     if (!n.typeParametersChecked) {
      n.typeParametersChecked = true;
      var r = Fk(t);
      if (r.length <= 1) {
       return;
      }
      var i = Ya(t);
      if (!Sk(r, i.localTypeParameters)) {
       var a = xi(t);
       for (var o = 0, s = r; o < s.length; o++) {
        var c = s[o];
        bn(c.name, e.Diagnostics.All_declarations_of_0_must_have_identical_type_parameters, a);
       }
      }
     }
    }
    function Sk(t, n) {
     var r = e.length(n);
     var i = Js(n);
     for (var a = 0, o = t; a < o.length; a++) {
      var s = o[a];
      var c = e.getEffectiveTypeParameterDeclarations(s);
      var u = c.length;
      if (u < i || u > r) {
       return false;
      }
      for (var l = 0; l < u; l++) {
       var f = c[l];
       var d = n[l];
       if (f.name.escapedText !== d.symbol.escapedName) {
        return false;
       }
       var p = f.constraint && Ul(f.constraint);
       var m = ss(d);
       if (p) {
        if (!m || !Sf(p, m)) {
         return false;
        }
       }
       var _ = f.default && Ul(f.default);
       var g = ys(d);
       if (_ && g && !Sf(_, g)) {
        return false;
       }
      }
     }
     return true;
    }
    function wk(e) {
     Tk(e);
     dS(e);
     return xa(Vr(e));
    }
    function Ck(t) {
     e.forEach(t.members, cS);
     bx(t);
    }
    function Dk(t) {
     if (!t.name && !e.hasModifier(t, 512)) {
      SC(t, e.Diagnostics.A_class_declaration_without_the_default_modifier_must_have_a_name);
     }
     Tk(t);
     e.forEach(t.members, cS);
     bx(t);
    }
    function Tk(t) {
     Uw(t);
     dx(t);
     if (t.name) {
      yk(t.name, e.Diagnostics.Class_name_cannot_be_0);
      Rx(t, t.name);
      Bx(t, t.name);
      if (!(t.flags & 4194304)) {
       bk(t.name);
      }
     }
     xk(e.getEffectiveTypeParameterDeclarations(t));
     ex(t);
     var n = Vr(t);
     var r = Ya(n);
     var i = xo(r);
     var o = xa(n);
     kk(n);
     wb(t);
     if (!(t.flags & 4194304)) {
      Cb(t);
     }
     var s = e.getEffectiveBaseTypeNode(t);
     if (s) {
      if (E < 2) {
       Ew(s.parent, 1);
      }
      var c = La(r);
      if (c.length && a) {
       var u = c[0];
       var l = Ma(r);
       var f = ks(l);
       Nk(f, s);
       cS(s.expression);
       var d = e.getClassExtendsHeritageElement(t);
       if (d && d !== s) {
        pb(d.expression);
       }
       if (e.some(s.typeArguments)) {
        e.forEach(s.typeArguments, cS);
        for (var p = 0, m = Ia(f, s.typeArguments, s); p < m.length; p++) {
         var _ = m[p];
         if (!Mb(s, _.typeParameters)) {
          break;
         }
        }
       }
       var g = xo(u, r.thisType);
       if (!Ff(i, g, undefined)) {
        Ek(t, i, g, e.Diagnostics.Class_0_incorrectly_extends_base_class_1);
       }
       Ff(o, kf(f), t.name || t, e.Diagnostics.Class_static_side_0_incorrectly_extends_base_class_static_side_1);
       if (l.flags & 2162688 && !Aa(o)) {
        bn(t.name || t, e.Diagnostics.A_mixin_class_must_have_a_constructor_with_a_single_rest_parameter_of_type_any);
       }
       if (!(f.symbol && f.symbol.flags & 32) && !(l.flags & 2162688)) {
        var h = Oa(f, s.typeArguments, s);
        if (e.forEach(h, function(e) {
         return tc(e) !== u;
        })) {
         bn(s.expression, e.Diagnostics.Base_constructors_must_all_have_the_same_return_type);
        }
       }
       Pk(r, u);
      }
     }
     var v = e.getClassImplementsHeritageClauseElements(t);
     if (v) {
      for (var y = 0, b = v; y < b.length; y++) {
       var x = b[y];
       if (!e.isEntityNameExpression(x.expression)) {
        bn(x.expression, e.Diagnostics.A_class_can_only_implement_an_identifier_Slashqualified_name_with_optional_type_arguments);
       }
       Rb(x);
       if (a) {
        var k = Ul(x);
        if (k !== re) {
         if (za(k)) {
          var S = k.symbol && k.symbol.flags & 32 ? e.Diagnostics.Class_0_incorrectly_implements_class_1_Did_you_mean_to_extend_1_and_inherit_its_members_as_a_subclass : e.Diagnostics.Class_0_incorrectly_implements_interface_1;
          var g = xo(k, r.thisType);
          if (!Ff(i, g, undefined)) {
           Ek(t, i, g, S);
          }
         } else {
          bn(x, e.Diagnostics.A_class_may_only_implement_another_class_or_interface);
         }
        }
       }
      }
     }
     if (a) {
      vk(r);
      Tb(t);
      Ok(t);
     }
    }
    function Ek(t, n, r, i) {
     var a = false;
     var o = function(t) {
      if (e.hasStaticModifier(t)) {
       return "continue";
      }
      var i = t.name && MS(t.name) || MS(t);
      if (i) {
       var o = Ds(n, i.escapedName);
       var s = Ds(r, i.escapedName);
       if (o && s) {
        var c = function() {
         return e.chainDiagnosticMessages(undefined, e.Diagnostics.Property_0_in_type_1_is_not_assignable_to_the_same_property_in_base_type_2, xi(i), Si(n), Si(r));
        };
        if (!Ff(xa(o), xa(s), t.name || t, undefined, c)) {
         a = true;
        }
       }
      }
     };
     for (var s = 0, c = t.members; s < c.length; s++) {
      var u = c[s];
      o(u);
     }
     if (!a) {
      Ff(n, r, t.name || t, i);
     }
    }
    function Nk(t, n) {
     var r = Es(t, 1);
     if (r.length) {
      var i = r[0].declaration;
      if (i && e.hasModifier(i, 8)) {
       var a = e.getClassLikeDeclarationOfSymbol(t.symbol);
       if (!NS(n, a)) {
        bn(n, e.Diagnostics.Cannot_extend_a_class_0_Class_constructor_is_marked_as_private, Sr(t.symbol));
       }
      }
     }
    }
    function Ak(t) {
     return e.getCheckFlags(t) & 1 ? t.target : t;
    }
    function Fk(t) {
     return e.filter(t.declarations, function(e) {
      return e.kind === 238 || e.kind === 239;
     });
    }
    function Pk(t, n) {
     var r = rs(n);
     for (var i = 0, a = r; i < a.length; i++) {
      var o = a[i];
      var s = Ak(o);
      if (s.flags & 4194304) {
       continue;
      }
      var c = Ak(ts(t, s.escapedName));
      var u = e.getDeclarationModifierFlagsFromSymbol(s);
      e.Debug.assert(!!c, "derived should point to something, even if it is the base class' declaration.");
      if (c) {
       if (c === s) {
        var l = e.getClassLikeDeclarationOfSymbol(t.symbol);
        if (u & 128 && (!l || !e.hasModifier(l, 128))) {
         if (l.kind === 207) {
          bn(l, e.Diagnostics.Non_abstract_class_expression_does_not_implement_inherited_abstract_member_0_from_class_1, xi(o), Si(n));
         } else {
          bn(l, e.Diagnostics.Non_abstract_class_0_does_not_implement_inherited_abstract_member_1_from_class_2, Si(t), xi(o), Si(n));
         }
        }
       } else {
        var f = e.getDeclarationModifierFlagsFromSymbol(c);
        if (u & 8 || f & 8) {
         continue;
        }
        if (th(s) || s.flags & 98308 && c.flags & 98308) {
         continue;
        }
        var d = void 0;
        if (th(s)) {
         if (c.flags & 98304) {
          d = e.Diagnostics.Class_0_defines_instance_member_function_1_but_extended_class_2_defines_it_as_instance_member_accessor;
         } else {
          d = e.Diagnostics.Class_0_defines_instance_member_function_1_but_extended_class_2_defines_it_as_instance_member_property;
         }
        } else if (s.flags & 98304) {
         d = e.Diagnostics.Class_0_defines_instance_member_accessor_1_but_extended_class_2_defines_it_as_instance_member_function;
        } else {
         d = e.Diagnostics.Class_0_defines_instance_member_property_1_but_extended_class_2_defines_it_as_instance_member_function;
        }
        bn(e.getNameOfDeclaration(c.valueDeclaration) || c.valueDeclaration, d, Si(n), xi(s), Si(t));
       }
      }
     }
    }
    function Ik(t, n) {
     var r = La(t);
     if (r.length < 2) {
      return true;
     }
     var i = e.createUnderscoreEscapedMap();
     e.forEach(so(t).declaredProperties, function(e) {
      i.set(e.escapedName, {
       prop: e,
       containingType: t
      });
     });
     var a = true;
     for (var o = 0, s = r; o < s.length; o++) {
      var c = s[o];
      var u = rs(xo(c, t.thisType));
      for (var l = 0, f = u; l < f.length; l++) {
       var d = f[l];
       var p = i.get(d.escapedName);
       if (!p) {
        i.set(d.escapedName, {
         prop: d,
         containingType: c
        });
       } else {
        var m = p.containingType !== t;
        if (m && !dd(p.prop, d)) {
         a = false;
         var _ = Si(p.containingType);
         var g = Si(c);
         var h = e.chainDiagnosticMessages(undefined, e.Diagnostics.Named_property_0_of_types_1_and_2_are_not_identical, xi(d), _, g);
         h = e.chainDiagnosticMessages(h, e.Diagnostics.Interface_0_cannot_simultaneously_extend_types_1_and_2, Si(t), _, g);
         Vt.add(e.createDiagnosticForNodeFromMessageChain(n, h));
        }
       }
      }
     }
     return a;
    }
    function Ok(t) {
     if (!F || !I || t.flags & 4194304) {
      return;
     }
     var n = Qr(t);
     for (var r = 0, i = t.members; r < i.length; r++) {
      var a = i[r];
      if (Mk(a)) {
       var o = a.name;
       if (e.isIdentifier(o)) {
        var s = xa(Vr(a));
        if (!(s.flags & 3 || Rd(s) & 8192)) {
         if (!n || !Lk(o, s, n)) {
          bn(a.name, e.Diagnostics.Property_0_has_no_initializer_and_is_not_definitely_assigned_in_the_constructor, e.declarationNameToString(o));
         }
        }
       }
      }
     }
    }
    function Mk(t) {
     return t.kind === 152 && !e.hasModifier(t, 32 | 128) && !t.exclamationToken && !t.initializer;
    }
    function Lk(t, n, r) {
     var i = e.createPropertyAccess(e.createThis(), t);
     i.flowNode = r.returnFlowNode;
     var a = Jm(i, n, Ud(n));
     return !(Rd(a) & 8192);
    }
    function Rk(t) {
     if (!Fw(t)) Zw(t);
     xk(t.typeParameters);
     if (a) {
      yk(t.name, e.Diagnostics.Interface_name_cannot_be_0);
      ex(t);
      var n = Vr(t);
      kk(n);
      var r = e.getDeclarationOfKind(n, 239);
      if (t === r) {
       var i = Ya(n);
       var o = xo(i);
       if (Ik(i, t.name)) {
        for (var s = 0, c = La(i); s < c.length; s++) {
         var u = c[s];
         Ff(o, xo(u, i.thisType), t.name, e.Diagnostics.Interface_0_incorrectly_extends_interface_1);
        }
        vk(i);
       }
      }
      Db(t);
     }
     e.forEach(e.getInterfaceBaseTypeNodes(t), function(t) {
      if (!e.isEntityNameExpression(t.expression)) {
       bn(t.expression, e.Diagnostics.An_interface_can_only_extend_an_identifier_Slashqualified_name_with_optional_type_arguments);
      }
      Rb(t);
     });
     e.forEach(t.members, cS);
     if (a) {
      Tb(t);
      bx(t);
     }
    }
    function Bk(t) {
     Fw(t);
     yk(t.name, e.Diagnostics.Type_alias_name_cannot_be_0);
     xk(t.typeParameters);
     cS(t.type);
     bx(t);
    }
    function zk(e) {
     var t = Ln(e);
     if (!(t.flags & 16384)) {
      t.flags |= 16384;
      var n = 0;
      for (var r = 0, i = e.members; r < i.length; r++) {
       var a = i[r];
       var o = jk(a, n);
       Ln(a).enumMemberValue = o;
       n = typeof o === "number" ? o + 1 : undefined;
      }
     }
    }
    function jk(t, n) {
     if (Ki(t.name)) {
      bn(t.name, e.Diagnostics.Computed_property_names_are_not_allowed_in_enums);
     } else {
      var r = e.getTextOfPropertyName(t.name);
      if (ug(r) && !cg(r)) {
       bn(t.name, e.Diagnostics.An_enum_member_cannot_have_a_numeric_name);
      }
     }
     if (t.initializer) {
      return qk(t);
     }
     if (t.parent.flags & 4194304 && !e.isEnumConst(t.parent)) {
      return undefined;
     }
     if (n !== undefined) {
      return n;
     }
     bn(t.name, e.Diagnostics.Enum_member_must_have_initializer);
     return undefined;
    }
    function qk(t) {
     var n = Wa(Vr(t.parent));
     var r = e.isEnumConst(t.parent);
     var i = t.initializer;
     var a = n === 1 && !Va(t) ? undefined : o(i);
     if (a !== undefined) {
      if (r && typeof a === "number" && !isFinite(a)) {
       bn(i, isNaN(a) ? e.Diagnostics.const_enum_member_initializer_was_evaluated_to_disallowed_value_NaN : e.Diagnostics.const_enum_member_initializer_was_evaluated_to_a_non_finite_value);
      }
     } else if (n === 1) {
      bn(i, e.Diagnostics.Computed_values_are_not_permitted_in_an_enum_with_string_valued_members);
      return 0;
     } else if (r) {
      bn(i, e.Diagnostics.In_const_enum_declarations_member_initializer_must_be_constant_expression);
     } else if (t.parent.flags & 4194304) {
      bn(i, e.Diagnostics.In_ambient_enum_declarations_member_initializer_must_be_constant_expression);
     } else {
      Ff(pb(i), Ya(Vr(t.parent)), i, undefined);
     }
     return a;
     function o(n) {
      switch (n.kind) {
      case 200:
       var r = o(n.operand);
       if (typeof r === "number") {
        switch (n.operator) {
        case 37:
         return r;

        case 38:
         return -r;

        case 52:
         return ~r;
        }
       }
       break;

      case 202:
       var i = o(n.left);
       var a = o(n.right);
       if (typeof i === "number" && typeof a === "number") {
        switch (n.operatorToken.kind) {
        case 49:
         return i | a;

        case 48:
         return i & a;

        case 46:
         return i >> a;

        case 47:
         return i >>> a;

        case 45:
         return i << a;

        case 50:
         return i ^ a;

        case 39:
         return i * a;

        case 41:
         return i / a;

        case 37:
         return i + a;

        case 38:
         return i - a;

        case 42:
         return i % a;

        case 40:
         return Math.pow(i, a);
        }
       } else if (typeof i === "string" && typeof a === "string" && n.operatorToken.kind === 37) {
        return i + a;
       }
       break;

      case 9:
       return n.text;

      case 8:
       IC(n);
       return +n.text;

      case 193:
       return o(n.expression);

      case 71:
       var c = n;
       if (cg(c.escapedText)) {
        return +c.escapedText;
       }
       return e.nodeIsMissing(n) ? 0 : s(n, Vr(t.parent), c.escapedText);

      case 188:
      case 187:
       var u = n;
       if (Uk(u)) {
        var l = lb(u.expression);
        if (l.symbol && l.symbol.flags & 384) {
         var f = void 0;
         if (u.kind === 187) {
          f = u.name.escapedText;
         } else {
          var d = u.argumentExpression;
          e.Debug.assert(e.isLiteralExpression(d));
          f = e.escapeLeadingUnderscores(d.text);
         }
         return s(n, l.symbol, f);
        }
       }
       break;
      }
      return undefined;
     }
     function s(n, r, i) {
      var a = r.exports.get(i);
      if (a) {
       var o = a.valueDeclaration;
       if (o !== t) {
        if (jn(o, t)) {
         return fw(o);
        }
        bn(n, e.Diagnostics.A_member_initializer_in_a_enum_declaration_cannot_reference_members_declared_after_it_including_members_defined_in_other_enums);
        return 0;
       }
      }
      return undefined;
     }
    }
    function Uk(e) {
     return e.kind === 71 || e.kind === 187 && Uk(e.expression) || e.kind === 188 && Uk(e.expression) && e.argumentExpression.kind === 9;
    }
    function Jk(t) {
     if (!a) {
      return;
     }
     Fw(t);
     yk(t.name, e.Diagnostics.Enum_name_cannot_be_0);
     Rx(t, t.name);
     Bx(t, t.name);
     ex(t);
     zk(t);
     var n = e.isEnumConst(t);
     if (T.isolatedModules && n && t.flags & 4194304) {
      bn(t.name, e.Diagnostics.Ambient_const_enums_are_not_allowed_when_the_isolatedModules_flag_is_provided);
     }
     var r = Vr(t);
     var i = e.getDeclarationOfKind(r, t.kind);
     if (t === i) {
      if (r.declarations.length > 1) {
       e.forEach(r.declarations, function(t) {
        if (e.isEnumDeclaration(t) && e.isEnumConst(t) !== n) {
         bn(e.getNameOfDeclaration(t), e.Diagnostics.Enum_declarations_must_all_be_const_or_non_const);
        }
       });
      }
      var o = false;
      e.forEach(r.declarations, function(t) {
       if (t.kind !== 241) {
        return false;
       }
       var n = t;
       if (!n.members.length) {
        return false;
       }
       var r = n.members[0];
       if (!r.initializer) {
        if (o) {
         bn(r.name, e.Diagnostics.In_an_enum_with_multiple_declarations_only_one_declaration_can_omit_an_initializer_for_its_first_enum_element);
        } else {
         o = true;
        }
       }
      });
     }
    }
    function Kk(t) {
     var n = t.declarations;
     for (var r = 0, i = n; r < i.length; r++) {
      var a = i[r];
      if ((a.kind === 238 || a.kind === 237 && e.nodeIsPresent(a.body)) && !(a.flags & 4194304)) {
       return a;
      }
     }
     return undefined;
    }
    function Vk(t, n) {
     var r = e.getEnclosingBlockScopeContainer(t);
     var i = e.getEnclosingBlockScopeContainer(n);
     if (Rn(r)) {
      return Rn(i);
     } else if (Rn(i)) {
      return false;
     } else {
      return r === i;
     }
    }
    function Wk(t) {
     if (a) {
      var n = e.isGlobalScopeAugmentation(t);
      var r = t.flags & 4194304;
      if (n && !r) {
       bn(t.name, e.Diagnostics.Augmentations_for_the_global_scope_should_have_declare_modifier_unless_they_appear_in_already_ambient_context);
      }
      var i = e.isAmbientModule(t);
      var o = i ? e.Diagnostics.An_ambient_module_declaration_is_only_allowed_at_the_top_level_in_a_file : e.Diagnostics.A_namespace_declaration_is_only_allowed_in_a_namespace_or_module;
      if (tS(t, o)) {
       return;
      }
      if (!Fw(t)) {
       if (!r && t.name.kind === 9) {
        CC(t.name, e.Diagnostics.Only_ambient_modules_can_use_quoted_names);
       }
      }
      if (e.isIdentifier(t.name)) {
       Rx(t, t.name);
       Bx(t, t.name);
      }
      ex(t);
      var s = Vr(t);
      if (s.flags & 512 && s.declarations.length > 1 && !r && l(t, !!T.preserveConstEnums || !!T.isolatedModules)) {
       var c = Kk(s);
       if (c) {
        if (e.getSourceFileOfNode(t) !== e.getSourceFileOfNode(c)) {
         bn(t.name, e.Diagnostics.A_namespace_declaration_cannot_be_in_a_different_file_from_a_class_or_function_with_which_it_is_merged);
        } else if (t.pos < c.pos) {
         bn(t.name, e.Diagnostics.A_namespace_declaration_cannot_be_located_prior_to_a_class_or_function_with_which_it_is_merged);
        }
       }
       var u = e.getDeclarationOfKind(s, 238);
       if (u && Vk(t, u)) {
        Ln(t).flags |= 32768;
       }
      }
      if (i) {
       if (e.isExternalModuleAugmentation(t)) {
        var f = n || Vr(t).flags & 33554432;
        if (f && t.body) {
         for (var d = 0, p = t.body.statements; d < p.length; d++) {
          var m = p[d];
          Hk(m, n);
         }
        }
       } else if (Rn(t.parent)) {
        if (n) {
         bn(t.name, e.Diagnostics.Augmentations_for_the_global_scope_can_only_be_directly_nested_in_external_modules_or_ambient_module_declarations);
        } else if (e.isExternalModuleNameRelative(e.getTextOfIdentifierOrLiteral(t.name))) {
         bn(t.name, e.Diagnostics.Ambient_module_declaration_cannot_specify_relative_module_name);
        }
       } else {
        if (n) {
         bn(t.name, e.Diagnostics.Augmentations_for_the_global_scope_can_only_be_directly_nested_in_external_modules_or_ambient_module_declarations);
        } else {
         bn(t.name, e.Diagnostics.Ambient_modules_cannot_be_nested_in_other_modules_or_namespaces);
        }
       }
      }
     }
     if (t.body) {
      cS(t.body);
      if (!e.isGlobalScopeAugmentation(t)) {
       bx(t);
      }
     }
    }
    function Hk(t, n) {
     switch (t.kind) {
     case 217:
      for (var r = 0, i = t.declarationList.declarations; r < i.length; r++) {
       var a = i[r];
       Hk(a, n);
      }
      break;

     case 252:
     case 253:
      SC(t, e.Diagnostics.Exports_and_export_assignments_are_not_permitted_in_module_augmentations);
      break;

     case 246:
     case 247:
      SC(t, e.Diagnostics.Imports_are_not_permitted_in_module_augmentations_Consider_moving_them_to_the_enclosing_external_module);
      break;

     case 184:
     case 235:
      var o = t.name;
      if (e.isBindingPattern(o)) {
       for (var s = 0, c = o.elements; s < c.length; s++) {
        var u = c[s];
        Hk(u, n);
       }
       break;
      }

     case 238:
     case 241:
     case 237:
     case 239:
     case 242:
     case 240:
      if (n) {
       return;
      }
      var l = Vr(t);
      if (l) {
       var f = !(l.flags & 33554432);
       if (!f) {
        f = e.isExternalModuleAugmentation(l.parent.declarations[0]);
       }
      }
      break;
     }
    }
    function Gk(e) {
     switch (e.kind) {
     case 71:
      return e;

     case 146:
      do {
       e = e.left;
      } while (e.kind !== 71);
      return e;

     case 187:
      do {
       e = e.expression;
      } while (e.kind !== 71);
      return e;
     }
    }
    function $k(t) {
     var n = e.getExternalModuleName(t);
     if (!n || e.nodeIsMissing(n)) {
      return false;
     }
     if (!e.isStringLiteral(n)) {
      bn(n, e.Diagnostics.String_literal_expected);
      return false;
     }
     var r = t.parent.kind === 243 && e.isAmbientModule(t.parent.parent);
     if (t.parent.kind !== 277 && !r) {
      bn(n, t.kind === 253 ? e.Diagnostics.Export_declarations_are_not_permitted_in_a_namespace : e.Diagnostics.Import_declarations_in_a_namespace_cannot_reference_a_module);
      return false;
     }
     if (r && e.isExternalModuleNameRelative(n.text)) {
      if (!Ai(t)) {
       bn(t, e.Diagnostics.Import_or_export_declaration_in_an_ambient_module_declaration_cannot_reference_module_through_relative_module_name);
       return false;
      }
     }
     return true;
    }
    function Xk(t) {
     var n = Vr(t);
     var r = yr(n);
     if (r !== Y) {
      var i = (n.flags & (67216319 | 1048576) ? 67216319 : 0) | (n.flags & 67901928 ? 67901928 : 0) | (n.flags & 1920 ? 1920 : 0);
      if (r.flags & i) {
       var a = t.kind === 255 ? e.Diagnostics.Export_declaration_conflicts_with_exported_declaration_of_0 : e.Diagnostics.Import_declaration_conflicts_with_local_declaration_of_0;
       bn(t, a, xi(n));
      }
      if (T.isolatedModules && t.kind === 255 && !(r.flags & 67216319) && !(t.flags & 4194304)) {
       bn(t, e.Diagnostics.Cannot_re_export_a_type_when_the_isolatedModules_flag_is_provided);
      }
     }
    }
    function Qk(e) {
     Rx(e, e.name);
     Bx(e, e.name);
     Xk(e);
    }
    function Yk(t) {
     if (tS(t, e.Diagnostics.An_import_declaration_can_only_be_used_in_a_namespace_or_module)) {
      return;
     }
     if (!Fw(t) && e.hasModifiers(t)) {
      SC(t, e.Diagnostics.An_import_declaration_cannot_have_modifiers);
     }
     if ($k(t)) {
      var n = t.importClause;
      if (n) {
       if (n.name) {
        Qk(n);
       }
       if (n.namedBindings) {
        if (n.namedBindings.kind === 249) {
         Qk(n.namedBindings);
        } else {
         var r = Tr(t, t.moduleSpecifier);
         if (r) {
          e.forEach(n.namedBindings.elements, Qk);
         }
        }
       }
      }
     }
    }
    function Zk(t) {
     if (tS(t, e.Diagnostics.An_import_declaration_can_only_be_used_in_a_namespace_or_module)) {
      return;
     }
     Fw(t);
     if (e.isInternalModuleImportEqualsDeclaration(t) || $k(t)) {
      Qk(t);
      if (e.hasModifier(t, 1)) {
       br(t);
      }
      if (t.moduleReference.kind !== 257) {
       var n = yr(Vr(t));
       if (n !== Y) {
        if (n.flags & 67216319) {
         var r = Gk(t.moduleReference);
         if (!(wr(r, 67216319 | 1920).flags & 1920)) {
          bn(r, e.Diagnostics.Module_0_is_hidden_by_a_local_declaration_with_the_same_name, e.declarationNameToString(r));
         }
        }
        if (n.flags & 67901928) {
         yk(t.name, e.Diagnostics.Import_name_cannot_be_0);
        }
       }
      } else {
       if (N >= e.ModuleKind.ES2015 && !(t.flags & 4194304)) {
        CC(t, e.Diagnostics.Import_assignment_cannot_be_used_when_targeting_ECMAScript_modules_Consider_using_import_Asterisk_as_ns_from_mod_import_a_from_mod_import_d_from_mod_or_another_module_format_instead);
       }
      }
     }
    }
    function eS(t) {
     if (tS(t, e.Diagnostics.An_export_declaration_can_only_be_used_in_a_module)) {
      return;
     }
     if (!Fw(t) && e.hasModifiers(t)) {
      SC(t, e.Diagnostics.An_export_declaration_cannot_have_modifiers);
     }
     if (!t.moduleSpecifier || $k(t)) {
      if (t.exportClause) {
       e.forEach(t.exportClause.elements, nS);
       var n = t.parent.kind === 243 && e.isAmbientModule(t.parent.parent);
       var r = !n && t.parent.kind === 243 && !t.moduleSpecifier && t.flags & 4194304;
       if (t.parent.kind !== 277 && !n && !r) {
        bn(t, e.Diagnostics.Export_declarations_are_not_permitted_in_a_namespace);
       }
      } else {
       var i = Tr(t, t.moduleSpecifier);
       if (i && Mr(i)) {
        bn(t.moduleSpecifier, e.Diagnostics.Module_0_uses_export_and_cannot_be_used_with_export_Asterisk, xi(i));
       }
       if (N !== e.ModuleKind.System && N !== e.ModuleKind.ES2015 && N !== e.ModuleKind.ESNext) {
        Ew(t, 32768);
       }
      }
     }
    }
    function tS(e, t) {
     var n = e.parent.kind === 277 || e.parent.kind === 243 || e.parent.kind === 242;
     if (!n) {
      SC(e, t);
     }
     return !n;
    }
    function nS(t) {
     Xk(t);
     if (T.declaration) {
      Oi(t.propertyName || t.name, true);
     }
     if (!t.parent.parent.moduleSpecifier) {
      var n = t.propertyName || t.name;
      var r = qn(n, n.escapedText, 67216319 | 67901928 | 1920 | 2097152, undefined, undefined, true);
      if (r && (r === z || Rn(zi(r.declarations[0])))) {
       bn(n, e.Diagnostics.Cannot_export_0_Only_local_declarations_can_be_exported_from_a_module, e.idText(n));
      } else {
       br(t);
      }
     }
    }
    function rS(t) {
     if (tS(t, e.Diagnostics.An_export_assignment_can_only_be_used_in_a_module)) {
      return;
     }
     var n = t.parent.kind === 277 ? t.parent : t.parent.parent;
     if (n.kind === 242 && !e.isAmbientModule(n)) {
      if (t.isExportEquals) {
       bn(t, e.Diagnostics.An_export_assignment_cannot_be_used_in_a_namespace);
      } else {
       bn(t, e.Diagnostics.A_default_export_can_only_be_used_in_an_ECMAScript_style_module);
      }
      return;
     }
     if (!Fw(t) && e.hasModifiers(t)) {
      SC(t, e.Diagnostics.An_export_assignment_cannot_have_modifiers);
     }
     if (t.expression.kind === 71) {
      br(t);
      if (T.declaration) {
       Oi(t.expression, true);
      }
     } else {
      nb(t.expression);
     }
     aS(n);
     if (t.flags & 4194304 && !e.isEntityNameExpression(t.expression)) {
      CC(t.expression, e.Diagnostics.The_expression_of_an_export_assignment_must_be_an_identifier_or_qualified_name_in_an_ambient_context);
     }
     if (t.isExportEquals && !(t.flags & 4194304)) {
      if (N >= e.ModuleKind.ES2015) {
       CC(t, e.Diagnostics.Export_assignment_cannot_be_used_when_targeting_ECMAScript_modules_Consider_using_export_default_or_another_module_format_instead);
      } else if (N === e.ModuleKind.System) {
       CC(t, e.Diagnostics.Export_assignment_is_not_supported_when_module_flag_is_system);
      }
     }
    }
    function iS(t) {
     return e.forEachEntry(t.exports, function(e, t) {
      return t !== "export=";
     });
    }
    function aS(t) {
     var n = Vr(t);
     var r = Mn(n);
     if (!r.exportsChecked) {
      var i = n.exports.get("export=");
      if (i && iS(n)) {
       var a = tr(i) || i.valueDeclaration;
       if (!Ai(a) && !e.isInJavaScriptFile(a)) {
        bn(a, e.Diagnostics.An_export_assignment_cannot_be_used_in_a_module_with_other_exported_elements);
       }
      }
      var o = qr(n);
      if (o) {
       o.forEach(function(t, n) {
        var r = t.declarations, i = t.flags;
        if (n === "__export") {
         return;
        }
        if (i & (1920 | 64 | 384)) {
         return;
        }
        var a = e.countWhere(r, _n);
        if (i & 524288 && a <= 2) {
         return;
        }
        if (a > 1) {
         for (var o = 0, s = r; o < s.length; o++) {
          var c = s[o];
          if (sS(c)) {
           Vt.add(e.createDiagnosticForNode(c, e.Diagnostics.Cannot_redeclare_exported_variable_0, e.unescapeLeadingUnderscores(n)));
          }
         }
        }
       });
      }
      r.exportsChecked = true;
     }
    }
    function oS(t) {
     return !e.isAccessor(t);
    }
    function sS(e) {
     return e.kind !== 237 && e.kind !== 154 || !!e.body;
    }
    function cS(t) {
     if (!t) {
      return;
     }
     if (e.isInJavaScriptFile(t)) {
      e.forEach(t.jsDoc, function(t) {
       var n = t.tags;
       return e.forEach(n, cS);
      });
     }
     var n = t.kind;
     if (f) {
      switch (n) {
      case 242:
      case 238:
      case 239:
      case 237:
       f.throwIfCancellationRequested();
      }
     }
     switch (n) {
     case 148:
      return gb(t);

     case 149:
      return vb(t);

     case 152:
     case 151:
      return Eb(t);

     case 163:
     case 164:
     case 158:
     case 159:
     case 160:
      return Sb(t);

     case 154:
     case 153:
      return Nb(t);

     case 155:
      return Ab(t);

     case 156:
     case 157:
      return Fb(t);

     case 162:
      return Rb(t);

     case 161:
      return bb(t);

     case 165:
      return zb(t);

     case 166:
      return jb(t);

     case 167:
      return qb(t);

     case 168:
      return Ub(t);

     case 171:
     case 172:
      return Jb(t);

     case 175:
     case 169:
     case 170:
      return cS(t.type);

     case 177:
      return Hb(t);

     case 173:
      return Gb(t);

     case 174:
      return $b(t);

     case 181:
      return Xb(t);

     case 293:
      return hx(t);

     case 301:
     case 295:
      return mx(t);

     case 299:
      return _x(t);

     case 296:
      return gx(t);

     case 287:
      Sb(t);

     case 285:
     case 284:
     case 282:
     case 283:
     case 290:
      uS(t);
      e.forEachChild(t, cS);
      return;

     case 288:
      lS(t);
      return;

     case 281:
      return cS(t.type);

     case 178:
      return Vb(t);

     case 179:
      return Wb(t);

     case 237:
      return px(t);

     case 216:
     case 243:
      return Px(t);

     case 217:
      return Hx(t);

     case 219:
      return Gx(t);

     case 220:
      return $x(t);

     case 221:
      return Xx(t);

     case 222:
      return Qx(t);

     case 223:
      return Yx(t);

     case 224:
      return ek(t);

     case 225:
      return Zx(t);

     case 226:
     case 227:
      return uk(t);

     case 228:
      return dk(t);

     case 229:
      return pk(t);

     case 230:
      return mk(t);

     case 231:
      return _k(t);

     case 232:
      return gk(t);

     case 233:
      return hk(t);

     case 235:
      return Vx(t);

     case 184:
      return Wx(t);

     case 238:
      return Dk(t);

     case 239:
      return Rk(t);

     case 240:
      return Bk(t);

     case 241:
      return Jk(t);

     case 242:
      return Wk(t);

     case 247:
      return Yk(t);

     case 246:
      return Zk(t);

     case 253:
      return eS(t);

     case 252:
      return rS(t);

     case 218:
     case 234:
      PC(t);
      return;

     case 256:
      return Ib(t);
     }
    }
    function uS(t) {
     if (!e.isInJavaScriptFile(t)) {
      CC(t, e.Diagnostics.JSDoc_types_can_only_be_used_inside_documentation_comments);
     }
    }
    function lS(t) {
     uS(t);
     cS(t.type);
     var n = t.parent;
     if (e.isParameter(n) && e.isJSDocFunctionType(n.parent)) {
      if (e.last(n.parent.parameters) !== n) {
       bn(t, e.Diagnostics.A_rest_parameter_must_be_last_in_a_parameter_list);
      }
      return;
     }
     if (!e.isJSDocTypeExpression(n)) {
      bn(t, e.Diagnostics.JSDoc_may_only_appear_in_the_last_parameter_of_a_signature);
     }
     var r = t.parent.parent;
     if (!e.isJSDocParameterTag(r)) {
      bn(t, e.Diagnostics.JSDoc_may_only_appear_in_the_last_parameter_of_a_signature);
      return;
     }
     var i = e.getParameterSymbolFromJSDoc(r);
     if (!i) {
      return;
     }
     var a = e.getHostSignatureFromJSDoc(r);
     if (!a || e.last(a.parameters).symbol !== i) {
      bn(t, e.Diagnostics.A_rest_parameter_must_be_last_in_a_parameter_list);
     }
    }
    function fS(t) {
     var n = Ul(t.type);
     var r = t.parent;
     var i = t.parent.parent;
     if (e.isJSDocTypeExpression(t.parent) && e.isJSDocParameterTag(i)) {
      var a = e.getHostSignatureFromJSDoc(i);
      if (a) {
       var o = e.lastOrUndefined(a.parameters);
       var s = e.getParameterSymbolFromJSDoc(i);
       if (!o || s && o.symbol === s && e.isRestParameter(o)) {
        return bu(n);
       }
      }
     }
     if (e.isParameter(r) && e.isJSDocFunctionType(r.parent)) {
      return bu(n);
     }
     return Xi(n);
    }
    function dS(e) {
     if (bt) {
      var t = "" + c(e);
      bt.set(t, e);
     }
    }
    function pS() {
     bt.forEach(function(e) {
      switch (e.kind) {
      case 194:
      case 195:
      case 154:
      case 153:
       xy(e);
       break;

      case 156:
      case 157:
       Fb(e);
       break;

      case 207:
       Ck(e);
       break;

      case 259:
       mg(e);
       break;

      case 258:
       gg(e);
       break;
      }
     });
    }
    function mS(t) {
     e.performance.mark("beforeCheck");
     hS(t);
     e.performance.mark("afterCheck");
     e.performance.measure("Check", "beforeCheck", "afterCheck");
    }
    function _S(t) {
     switch (t) {
     case 0:
      return !!T.noUnusedLocals;

     case 1:
      return !!T.noUnusedParameters;

     default:
      return e.Debug.assertNever(t);
     }
    }
    function gS(t) {
     return xt.get(t.path) || e.emptyArray;
    }
    function hS(t) {
     var n = Ln(t);
     if (!(n.flags & 1)) {
      if (T.skipLibCheck && t.isDeclarationFile || T.skipDefaultLibCheck && t.hasNoDefaultLib) {
       return;
      }
      FC(t);
      e.clear(Ut);
      e.clear(Jt);
      bt = e.createMap();
      e.forEach(t.statements, cS);
      pS();
      if (e.isExternalOrCommonJsModule(t)) {
       bx(t);
      }
      if (!t.isDeclarationFile && (T.noUnusedLocals || T.noUnusedParameters)) {
       xx(gS(t), function(t, n, r) {
        if (!e.containsParseError(t) && _S(n)) {
         Vt.add(r);
        }
       });
      }
      bt = undefined;
      if (e.isExternalOrCommonJsModule(t)) {
       aS(t);
      }
      if (Ut.length) {
       e.forEach(Ut, Mx);
       e.clear(Ut);
      }
      if (Jt.length) {
       e.forEach(Jt, Lx);
       e.clear(Jt);
      }
      n.flags |= 1;
     }
    }
    function vS(e, t) {
     try {
      f = t;
      return yS(e);
     } finally {
      f = undefined;
     }
    }
    function yS(t) {
     xS();
     if (t) {
      var r = Vt.getGlobalDiagnostics();
      var i = r.length;
      mS(t);
      var a = Vt.getDiagnostics(t.fileName);
      var o = Vt.getGlobalDiagnostics();
      if (o !== r) {
       var s = e.relativeComplement(r, o, e.compareDiagnostics);
       return e.concatenate(s, a);
      } else if (i === 0 && o.length > 0) {
       return e.concatenate(o, a);
      }
      return a;
     }
     e.forEach(n.getSourceFiles(), mS);
     return Vt.getDiagnostics();
    }
    function bS() {
     xS();
     return Vt.getGlobalDiagnostics();
    }
    function xS() {
     if (!a) {
      throw new Error("Trying to get diagnostics from a type checker that does not produce them.");
     }
    }
    function kS(t, n) {
     if (t.flags & 8388608) {
      return [];
     }
     var r = e.createSymbolTable();
     var i = false;
     a();
     return Ms(r);
     function a() {
      while (t) {
       if (t.locals && !Rn(t)) {
        s(t.locals, n);
       }
       switch (t.kind) {
       case 242:
        s(Vr(t).exports, n & 2623475);
        break;

       case 241:
        s(Vr(t).exports, n & 8);
        break;

       case 207:
        var r = t.name;
        if (r) {
         o(t.symbol, n);
        }

       case 238:
       case 239:
        if (!i) {
         s(yo(Vr(t)), n & 67901928);
        }
        break;

       case 194:
        var a = t.name;
        if (a) {
         o(t.symbol, n);
        }
        break;
       }
       if (e.introducesArgumentsExoticObject(t)) {
        o(j, n);
       }
       i = e.hasModifier(t, 32);
       t = t.parent;
      }
      s(qe, n);
     }
     function o(t, n) {
      if (e.getCombinedLocalAndExportSymbolFlags(t) & n) {
       var i = t.escapedName;
       if (!r.has(i)) {
        r.set(i, t);
       }
      }
     }
     function s(e, t) {
      if (t) {
       e.forEach(function(e) {
        o(e, t);
       });
      }
     }
    }
    function SS(e) {
     return e.kind === 71 && wS(e.parent) && e.parent.name === e;
    }
    function wS(e) {
     switch (e.kind) {
     case 148:
     case 238:
     case 239:
     case 240:
     case 241:
      return true;

     default:
      return false;
     }
    }
    function CS(e) {
     while (e.parent.kind === 146) {
      e = e.parent;
     }
     return e.parent.kind === 162;
    }
    function DS(e) {
     while (e.parent.kind === 187) {
      e = e.parent;
     }
     return e.parent.kind === 209;
    }
    function TS(t, n) {
     var r;
     while (true) {
      t = e.getContainingClass(t);
      if (!t) break;
      if (r = n(t)) break;
     }
     return r;
    }
    function ES(t, n) {
     return e.findAncestor(t, function(t) {
      if (e.isConstructorDeclaration(t) && e.nodeIsPresent(t.body) && t.parent === n) {
       return true;
      } else if (t === n || e.isFunctionLikeDeclaration(t)) {
       return "quit";
      }
      return false;
     });
    }
    function NS(e, t) {
     return !!TS(e, function(e) {
      return e === t;
     });
    }
    function AS(e) {
     while (e.parent.kind === 146) {
      e = e.parent;
     }
     if (e.parent.kind === 246) {
      return e.parent.moduleReference === e ? e.parent : undefined;
     }
     if (e.parent.kind === 252) {
      return e.parent.expression === e ? e.parent : undefined;
     }
     return undefined;
    }
    function FS(e) {
     return AS(e) !== undefined;
    }
    function PS(t) {
     var n = e.getSpecialPropertyAssignmentKind(t.parent.parent);
     switch (n) {
     case 1:
     case 3:
      return Vr(t.parent);

     case 4:
     case 2:
     case 5:
      return Vr(t.parent.parent);
     }
    }
    function IS(t) {
     var n = t.parent;
     while (e.isQualifiedName(n)) {
      t = n;
      n = n.parent;
     }
     if (n && n.kind === 181 && n.qualifier === t) {
      return n;
     }
     return undefined;
    }
    function OS(t) {
     if (e.isDeclarationName(t)) {
      return Vr(t.parent);
     }
     if (e.isInJavaScriptFile(t) && t.parent.kind === 187 && t.parent === t.parent.parent.left) {
      var n = PS(t);
      if (n) {
       return n;
      }
     }
     if (t.parent.kind === 252 && e.isEntityNameExpression(t)) {
      var r = wr(t, 67216319 | 67901928 | 1920 | 2097152, true);
      if (r && r !== Y) {
       return r;
      }
     } else if (!e.isPropertyAccessExpression(t) && FS(t)) {
      var i = e.getAncestor(t, 246);
      e.Debug.assert(i !== undefined);
      return kr(t, true);
     }
     if (!e.isPropertyAccessExpression(t)) {
      var a = IS(t);
      if (a) {
       Ul(a);
       var o = Ln(t).resolvedSymbol;
       return o === Y ? undefined : o;
      }
     }
     while (e.isRightSideOfQualifiedNameOrPropertyAccess(t)) {
      t = t.parent;
     }
     if (DS(t)) {
      var s = 0;
      if (t.parent.kind === 209) {
       s = 67901928;
       if (e.isExpressionWithTypeArgumentsInClassExtendsClause(t.parent)) {
        s |= 67216319;
       }
      } else {
       s = 1920;
      }
      s |= 2097152;
      var c = e.isEntityNameExpression(t) ? wr(t, s) : undefined;
      if (c) {
       return c;
      }
     }
     if (t.parent.kind === 296) {
      return e.getParameterSymbolFromJSDoc(t.parent);
     }
     if (t.parent.kind === 148 && t.parent.parent.kind === 300) {
      e.Debug.assert(!e.isInJavaScriptFile(t));
      var u = e.getTypeParameterFromJsDoc(t.parent);
      return u && u.symbol;
     }
     if (e.isExpressionNode(t)) {
      if (e.nodeIsMissing(t)) {
       return undefined;
      }
      if (t.kind === 71) {
       if (e.isJSXTagName(t) && bg(t)) {
        var l = Dg(t.parent);
        return l === Y ? undefined : l;
       }
       return wr(t, 67216319, false, true);
      } else if (t.kind === 187 || t.kind === 146) {
       var f = Ln(t);
       if (f.resolvedSymbol) {
        return f.resolvedSymbol;
       }
       if (t.kind === 187) {
        sh(t);
       } else {
        ch(t);
       }
       return f.resolvedSymbol;
      }
     } else if (CS(t)) {
      var s = t.parent.kind === 162 ? 67901928 : 1920;
      return wr(t, s, false, true);
     } else if (t.parent.kind === 265) {
      return Jg(t.parent);
     }
     if (t.parent.kind === 161) {
      return wr(t, 1);
     }
     return undefined;
    }
    function MS(t) {
     if (t.kind === 277) {
      return e.isExternalModule(t) ? Kr(t.symbol) : undefined;
     }
     var n = t.parent;
     var r = n.parent;
     if (t.flags & 8388608) {
      return undefined;
     }
     if (d(t)) {
      return Vr(n);
     } else if (e.isLiteralComputedPropertyDeclarationName(t)) {
      return Vr(n.parent);
     }
     if (t.kind === 71) {
      if (FS(t)) {
       return OS(t);
      } else if (n.kind === 184 && r.kind === 182 && t === n.propertyName) {
       var i = BS(r);
       var a = i && Ds(i, t.escapedText);
       if (a) {
        return a;
       }
      }
     }
     switch (t.kind) {
     case 71:
     case 187:
     case 146:
      return OS(t);

     case 99:
      var o = e.getThisContainer(t, false);
      if (e.isFunctionLike(o)) {
       var s = Vs(o);
       if (s.thisParameter) {
        return s.thisParameter;
       }
      }
      if (e.isInExpressionContext(t)) {
       return pb(t).symbol;
      }

     case 176:
      return ql(t).symbol;

     case 97:
      return pb(t).symbol;

     case 123:
      var c = t.parent;
      if (c && c.kind === 155) {
       return c.parent.symbol;
      }
      return undefined;

     case 9:
     case 13:
      if (e.isExternalModuleImportEqualsDeclaration(t.parent.parent) && e.getExternalModuleImportEqualsDeclarationExpression(t.parent.parent) === t || (t.parent.kind === 247 || t.parent.kind === 253) && t.parent.moduleSpecifier === t || (e.isInJavaScriptFile(t) && e.isRequireCall(t.parent, false) || e.isImportCall(t.parent)) || e.isLiteralTypeNode(t.parent) && e.isLiteralImportTypeNode(t.parent.parent) && t.parent.parent.argument === t.parent) {
       return Tr(t, t);
      }

     case 8:
      var u = e.isElementAccessExpression(n) ? n.argumentExpression === t ? lb(n.expression) : undefined : e.isLiteralTypeNode(n) && e.isIndexedAccessTypeNode(r) ? Ul(r.objectType) : undefined;
      return u && Ds(u, e.escapeLeadingUnderscores(t.text));

     case 79:
     case 89:
     case 36:
      return Vr(t.parent);

     case 181:
      return e.isLiteralImportTypeNode(t) ? MS(t.argument.literal) : undefined;

     default:
      return undefined;
     }
    }
    function LS(e) {
     if (e && e.kind === 274) {
      return wr(e.name, 67216319 | 2097152);
     }
     return undefined;
    }
    function RS(e) {
     return e.parent.parent.moduleSpecifier ? fr(e.parent.parent, e) : wr(e.propertyName || e.name, 67216319 | 67901928 | 1920 | 2097152);
    }
    function BS(t) {
     if (t.flags & 8388608) {
      return re;
     }
     if (e.isPartOfTypeNode(t)) {
      var n = Ul(t);
      if (n && e.isExpressionWithTypeArgumentsInClassImplementsClause(t)) {
       var r = e.getContainingClass(t);
       var i = BS(r);
       n = xo(n, i.thisType);
      }
      return n;
     }
     if (e.isExpressionNode(t)) {
      return qS(t);
     }
     if (e.isExpressionWithTypeArgumentsInClassExtendsClause(t)) {
      var a = e.getContainingClass(t);
      var i = Ya(Vr(a));
      var o = La(i)[0];
      return o && xo(o, i.thisType);
     }
     if (wS(t)) {
      var s = Vr(t);
      return Ya(s);
     }
     if (SS(t)) {
      var s = MS(t);
      return s ? Ya(s) : re;
     }
     if (e.isDeclaration(t)) {
      var s = Vr(t);
      return xa(s);
     }
     if (d(t)) {
      var s = MS(t);
      return s ? xa(s) : re;
     }
     if (e.isBindingPattern(t)) {
      return Qi(t.parent, true) || re;
     }
     if (FS(t)) {
      var s = MS(t);
      if (s) {
       var c = Ya(s);
       return c !== re ? c : xa(s);
      }
     }
     return re;
    }
    function zS(t) {
     e.Debug.assert(t.kind === 186 || t.kind === 185);
     if (t.parent.kind === 225) {
      var n = nk(t.parent.expression, t.parent.awaitModifier);
      return Ky(t, n || re);
     }
     if (t.parent.kind === 202) {
      var n = lb(t.parent.right);
      return Ky(t, n || re);
     }
     if (t.parent.kind === 273) {
      var r = zS(t.parent.parent);
      return qy(r || re, t.parent);
     }
     e.Debug.assert(t.parent.kind === 185);
     var i = zS(t.parent);
     var a = rk(i || re, t.parent, false, false) || re;
     return Jy(t.parent, i, t.parent.elements.indexOf(t), a || re);
    }
    function jS(e) {
     var t = zS(e.parent.parent);
     return t && Ds(t, e.escapedText);
    }
    function qS(t) {
     if (e.isRightSideOfQualifiedNameOrPropertyAccess(t)) {
      t = t.parent;
     }
     return Ml(lb(t));
    }
    function US(t) {
     var n = Vr(t.parent);
     return e.hasModifier(t, 32) ? xa(n) : Ya(n);
    }
    function JS(t) {
     t = ks(t);
     var n = e.createSymbolTable(rs(t));
     if (KS(t)) {
      e.forEach(rs(He), function(e) {
       if (!n.has(e.escapedName)) {
        n.set(e.escapedName, e);
       }
      });
     }
     return ii(n);
    }
    function KS(t) {
     return e.typeHasCallOrConstructSignatures(t, K);
    }
    function VS(t) {
     var n = WS(t);
     return n ? e.flatMap(n, VS) : [ t ];
    }
    function WS(t) {
     if (e.getCheckFlags(t) & 6) {
      return e.mapDefined(Mn(t).containingType.types, function(e) {
       return Ds(e, t.escapedName);
      });
     } else if (t.flags & 33554432) {
      var n = t, r = n.leftSpread, i = n.rightSpread, a = n.syntheticOrigin;
      return r ? [ r, i ] : a ? [ a ] : e.singleElementArray(HS(t));
     }
     return undefined;
    }
    function HS(e) {
     var t;
     var n = e;
     while (n = Mn(n).target) {
      t = n;
     }
     return t;
    }
    function GS(t) {
     if (!e.isGeneratedIdentifier(t)) {
      var n = e.getParseTreeNode(t, e.isIdentifier);
      if (n) {
       var r = n.parent.kind === 187 && n.parent.name === n;
       return !r && bw(n) === j;
      }
     }
     return false;
    }
    function $S(t) {
     var n = Tr(t.parent, t);
     if (!n || e.isShorthandAmbientModuleSymbol(n)) {
      return true;
     }
     var r = Mr(n);
     n = Pr(n);
     var i = Mn(n);
     if (i.exportsSomeValue === undefined) {
      i.exportsSomeValue = r ? !!(n.flags & 67216319) : e.forEachEntry(qr(n), a);
     }
     return i.exportsSomeValue;
     function a(e) {
      e = vr(e);
      return e && !!(e.flags & 67216319);
     }
    }
    function XS(t) {
     return e.isModuleOrEnumDeclaration(t.parent) && t === t.parent.name;
    }
    function QS(t, n) {
     var r = e.getParseTreeNode(t, e.isIdentifier);
     if (r) {
      var i = bw(r, XS(r));
      if (i) {
       if (i.flags & 1048576) {
        var a = Kr(i.exportSymbol);
        if (!n && a.flags & 944 && !(a.flags & 3)) {
         return undefined;
        }
        i = a;
       }
       var o = Wr(i);
       if (o) {
        if (o.flags & 512 && o.valueDeclaration.kind === 277) {
         var s = o.valueDeclaration;
         var c = e.getSourceFileOfNode(r);
         var u = s !== c;
         return u ? undefined : s;
        }
        return e.findAncestor(r.parent, function(t) {
         return e.isModuleOrEnumDeclaration(t) && Vr(t) === o;
        });
       }
      }
     }
    }
    function YS(t) {
     var n = e.getParseTreeNode(t, e.isIdentifier);
     if (n) {
      var r = bw(n);
      if (hr(r, 67216319)) {
       return tr(r);
      }
     }
     return undefined;
    }
    function ZS(t) {
     if (t.flags & 418) {
      var n = Mn(t);
      if (n.isDeclarationWithCollidingName === undefined) {
       var r = e.getEnclosingBlockScopeContainer(t.valueDeclaration);
       if (e.isStatementWithLocals(r)) {
        var i = Ln(t.valueDeclaration);
        if (qn(r.parent, t.escapedName, 67216319, undefined, undefined, false)) {
         n.isDeclarationWithCollidingName = true;
        } else if (i.flags & 131072) {
         var a = i.flags & 262144;
         var o = e.isIterationStatement(r, false);
         var s = r.kind === 216 && e.isIterationStatement(r.parent, false);
         n.isDeclarationWithCollidingName = !e.isBlockScopedContainerTopLevel(r) && (!a || !o && !s);
        } else {
         n.isDeclarationWithCollidingName = false;
        }
       }
      }
      return n.isDeclarationWithCollidingName;
     }
     return false;
    }
    function ew(t) {
     if (!e.isGeneratedIdentifier(t)) {
      var n = e.getParseTreeNode(t, e.isIdentifier);
      if (n) {
       var r = bw(n);
       if (r && ZS(r)) {
        return r.valueDeclaration;
       }
      }
     }
     return undefined;
    }
    function tw(t) {
     var n = e.getParseTreeNode(t, e.isDeclaration);
     if (n) {
      var r = Vr(n);
      if (r) {
       return ZS(r);
      }
     }
     return false;
    }
    function nw(t) {
     switch (t.kind) {
     case 246:
     case 248:
     case 249:
     case 251:
     case 255:
      return iw(Vr(t) || Y);

     case 253:
      var n = t.exportClause;
      return !!n && e.some(n.elements, nw);

     case 252:
      return t.expression && t.expression.kind === 71 ? iw(Vr(t) || Y) : true;
     }
     return false;
    }
    function rw(t) {
     var n = e.getParseTreeNode(t, e.isImportEqualsDeclaration);
     if (n === undefined || n.parent.kind !== 277 || !e.isInternalModuleImportEqualsDeclaration(n)) {
      return false;
     }
     var r = iw(Vr(n));
     return r && n.moduleReference && !e.nodeIsMissing(n.moduleReference);
    }
    function iw(e) {
     var t = yr(e);
     if (t === Y) {
      return true;
     }
     return !!(t.flags & 67216319) && (T.preserveConstEnums || !aw(t));
    }
    function aw(e) {
     return Ry(e) || !!e.constEnumOnlyModule;
    }
    function ow(t, n) {
     if (e.isAliasSymbolDeclaration(t)) {
      var r = Vr(t);
      if (r && Mn(r).referenced) {
       return true;
      }
      var i = Mn(r).target;
      if (i && e.getModifierFlags(t) & 1 && i.flags & 67216319) {
       return true;
      }
     }
     if (n) {
      return !!e.forEachChild(t, function(e) {
       return ow(e, n);
      });
     }
     return false;
    }
    function sw(t) {
     if (e.nodeIsPresent(t.body)) {
      if (e.isGetAccessor(t) || e.isSetAccessor(t)) return false;
      var n = Vr(t);
      var r = Xs(n);
      return r.length > 1 || r.length === 1 && r[0].declaration !== t;
     }
     return false;
    }
    function cw(t) {
     return !!F && !Bs(t) && !e.isJSDocParameterTag(t) && !!t.initializer && !e.hasModifier(t, 92);
    }
    function uw(t) {
     return F && Bs(t) && !t.initializer && e.hasModifier(t, 92);
    }
    function lw(e) {
     return Ln(e).flags || 0;
    }
    function fw(e) {
     zk(e.parent);
     return Ln(e).enumMemberValue;
    }
    function dw(e) {
     switch (e.kind) {
     case 276:
     case 187:
     case 188:
      return true;
     }
     return false;
    }
    function pw(t) {
     if (t.kind === 276) {
      return fw(t);
     }
     var n = Ln(t).resolvedSymbol;
     if (n && n.flags & 8) {
      var r = n.valueDeclaration;
      if (e.isEnumConst(r.parent)) {
       return fw(r);
      }
     }
     return undefined;
    }
    function mw(e) {
     return !!(e.flags & 131072) && Es(e, 0).length > 0;
    }
    function _w(t, n) {
     var r = e.getParseTreeNode(t, e.isEntityName);
     if (!r) return e.TypeReferenceSerializationKind.Unknown;
     if (n) {
      n = e.getParseTreeNode(n);
      if (!n) return e.TypeReferenceSerializationKind.Unknown;
     }
     var i = wr(r, 67216319, true, false, n);
     var a = wr(r, 67901928, true, false, n);
     if (i && i === a) {
      var o = iu(false);
      if (o && i === o) {
       return e.TypeReferenceSerializationKind.Promise;
      }
      var s = xa(i);
      if (s && Fa(s)) {
       return e.TypeReferenceSerializationKind.TypeWithConstructSignatureAndValue;
      }
     }
     if (!a) {
      return e.TypeReferenceSerializationKind.Unknown;
     }
     var c = Ya(a);
     if (c === re) {
      return e.TypeReferenceSerializationKind.Unknown;
     } else if (c.flags & 3) {
      return e.TypeReferenceSerializationKind.ObjectType;
     } else if (Oy(c, 4096 | 24576 | 32768)) {
      return e.TypeReferenceSerializationKind.VoidNullableOrNeverType;
     } else if (Oy(c, 272)) {
      return e.TypeReferenceSerializationKind.BooleanType;
     } else if (Oy(c, 168)) {
      return e.TypeReferenceSerializationKind.NumberLikeType;
     } else if (Oy(c, 68)) {
      return e.TypeReferenceSerializationKind.StringLikeType;
     } else if (Id(c)) {
      return e.TypeReferenceSerializationKind.ArrayLikeType;
     } else if (Oy(c, 3072)) {
      return e.TypeReferenceSerializationKind.ESSymbolType;
     } else if (mw(c)) {
      return e.TypeReferenceSerializationKind.TypeWithCallSignature;
     } else if (xd(c)) {
      return e.TypeReferenceSerializationKind.ArrayLikeType;
     } else {
      return e.TypeReferenceSerializationKind.ObjectType;
     }
    }
    function gw(t, n, r, i, a) {
     var o = e.getParseTreeNode(t, e.isVariableLikeOrAccessor);
     if (!o) {
      return e.createToken(119);
     }
     var s = Vr(o);
     var c = s && !(s.flags & (2048 | 131072)) ? Ad(xa(s)) : re;
     if (c.flags & 2048 && c.symbol === s) {
      r |= 1048576;
     }
     if (a) {
      c = Ud(c);
     }
     return B.typeToTypeNode(c, n, r | 1024, i);
    }
    function hw(t, n, r, i) {
     var a = e.getParseTreeNode(t, e.isFunctionLike);
     if (!a) {
      return e.createToken(119);
     }
     var o = Vs(a);
     return B.typeToTypeNode(tc(o), n, r | 1024, i);
    }
    function vw(t, n, r, i) {
     var a = e.getParseTreeNode(t, e.isExpression);
     if (!a) {
      return e.createToken(119);
     }
     var o = tp(qS(a));
     return B.typeToTypeNode(o, n, r | 1024, i);
    }
    function yw(t) {
     return qe.has(e.escapeLeadingUnderscores(t));
    }
    function bw(t, n) {
     var r = Ln(t).resolvedSymbol;
     if (r) {
      return r;
     }
     var i = t;
     if (n) {
      var a = t.parent;
      if (e.isDeclaration(a) && t === a.name) {
       i = zi(a);
      }
     }
     return qn(i, t.escapedText, 67216319 | 1048576 | 2097152, undefined, undefined, true);
    }
    function xw(t) {
     if (!e.isGeneratedIdentifier(t)) {
      var n = e.getParseTreeNode(t, e.isIdentifier);
      if (n) {
       var r = bw(n);
       if (r) {
        return $r(r).valueDeclaration;
       }
      }
     }
     return undefined;
    }
    function kw(t) {
     if (e.isVariableDeclaration(t) && e.isVarConst(t)) {
      var n = xa(Vr(t));
      return !!(n.flags & 192 && n.flags & 33554432);
     }
     return false;
    }
    function Sw(t) {
     return e.createLiteral(t.value);
    }
    function ww(e) {
     var t = xa(Vr(e));
     return Sw(t);
    }
    function Cw() {
     var t = n.getResolvedTypeReferenceDirectives();
     var r;
     if (t) {
      r = e.createMap();
      t.forEach(function(e, t) {
       if (!e || !e.resolvedFileName) {
        return;
       }
       var i = n.getSourceFile(e.resolvedFileName);
       r.set(i.path, t);
      });
     }
     return {
      getReferencedExportContainer: QS,
      getReferencedImportDeclaration: YS,
      getReferencedDeclarationWithCollidingName: ew,
      isDeclarationWithCollidingName: tw,
      isValueAliasDeclaration: function(t) {
       t = e.getParseTreeNode(t);
       return t ? nw(t) : true;
      },
      hasGlobalName: yw,
      isReferencedAliasDeclaration: function(t, n) {
       t = e.getParseTreeNode(t);
       return t ? ow(t, n) : true;
      },
      getNodeCheckFlags: function(t) {
       t = e.getParseTreeNode(t);
       return t ? lw(t) : 0;
      },
      isTopLevelValueImportEqualsWithEntityName: rw,
      isDeclarationVisible: Ii,
      isImplementationOfOverload: sw,
      isRequiredInitializedParameter: cw,
      isOptionalUninitializedParameterProperty: uw,
      createTypeOfDeclaration: gw,
      createReturnTypeOfSignatureDeclaration: hw,
      createTypeOfExpression: vw,
      createLiteralConstValue: ww,
      isSymbolAccessible: _i,
      isEntityNameVisible: bi,
      getConstantValue: function(t) {
       var n = e.getParseTreeNode(t, dw);
       return n ? pw(n) : undefined;
      },
      collectLinkedAliases: Oi,
      getReferencedValueDeclaration: xw,
      getTypeReferenceSerializationKind: _w,
      isOptionalParameter: Bs,
      moduleExportsSomeValue: $S,
      isArgumentsLocalBinding: GS,
      getExternalModuleFileFromDeclaration: Dw,
      getTypeReferenceDirectivesForEntityName: a,
      getTypeReferenceDirectivesForSymbol: o,
      isLiteralConstDeclaration: kw,
      isLateBound: function(t) {
       var n = e.getParseTreeNode(t, e.isDeclaration);
       var r = n && Vr(n);
       return !!(r && e.getCheckFlags(r) & 1024);
      },
      getJsxFactoryEntity: function(t) {
       return t ? (gn(t), e.getSourceFileOfNode(t).localJsxFactory || Zt) : Zt;
      },
      getAllAccessorDeclarations: function(t) {
       t = e.getParseTreeNode(t, e.isGetOrSetAccessorDeclaration);
       var n = t.kind === 157 ? 156 : 157;
       var r = e.getDeclarationOfKind(Vr(t), n);
       var i = r && r.pos < t.pos ? r : t;
       var a = r && r.pos < t.pos ? t : r;
       var o = t.kind === 157 ? t : r;
       var s = t.kind === 156 ? t : r;
       return {
        firstAccessor: i,
        secondAccessor: a,
        setAccessor: o,
        getAccessor: s
       };
      }
     };
     function i(e) {
      return e.parent && e.parent.kind === 209 && e.parent.parent && e.parent.parent.kind === 271;
     }
     function a(e) {
      if (!r) {
       return undefined;
      }
      var t = 67901928 | 1920;
      if (e.kind === 71 && Op(e) || e.kind === 187 && !i(e)) {
       t = 67216319 | 1048576;
      }
      var n = wr(e, t, true);
      return n && n !== Y ? o(n, t) : undefined;
     }
     function o(t, n) {
      if (!r) {
       return undefined;
      }
      if (!s(t)) {
       return undefined;
      }
      var i;
      for (var a = 0, o = t.declarations; a < o.length; a++) {
       var c = o[a];
       if (c.symbol && c.symbol.flags & n) {
        var u = e.getSourceFileOfNode(c);
        var l = r.get(u.path);
        if (l) {
         (i || (i = [])).push(l);
        } else {
         return undefined;
        }
       }
      }
      return i;
     }
     function s(t) {
      if (!t.declarations) {
       return false;
      }
      var n = t;
      while (true) {
       var i = Wr(n);
       if (i) {
        n = i;
       } else {
        break;
       }
      }
      if (n.valueDeclaration && n.valueDeclaration.kind === 277 && n.flags & 512) {
       return false;
      }
      for (var a = 0, o = t.declarations; a < o.length; a++) {
       var s = o[a];
       var c = e.getSourceFileOfNode(s);
       if (r.has(c.path)) {
        return true;
       }
      }
      return false;
     }
    }
    function Dw(t) {
     var n = t.kind === 242 ? e.tryCast(t.name, e.isStringLiteral) : e.getExternalModuleName(t);
     var r = Er(n, n, undefined);
     if (!r) {
      return undefined;
     }
     return e.getDeclarationOfKind(r, 277);
    }
    function Tw() {
     for (var t = 0, r = n.getSourceFiles(); t < r.length; t++) {
      var i = r[t];
      e.bindSourceFile(i, T);
     }
     Ue = e.createMap();
     var a;
     for (var o = 0, s = n.getSourceFiles(); o < s.length; o++) {
      var i = s[o];
      if (i.redirectInfo) {
       continue;
      }
      if (!e.isExternalOrCommonJsModule(i)) {
       Pn(qe, i.locals);
      }
      if (i.patternAmbientModules && i.patternAmbientModules.length) {
       Ve = e.concatenate(Ve, i.patternAmbientModules);
      }
      if (i.moduleAugmentations.length) {
       (a || (a = [])).push(i.moduleAugmentations);
      }
      if (i.symbol && i.symbol.globalExports) {
       var c = i.symbol.globalExports;
       c.forEach(function(e, t) {
        if (!qe.has(t)) {
         qe.set(t, e);
        }
       });
      }
     }
     if (a) {
      for (var u = 0, l = a; u < l.length; u++) {
       var f = l[u];
       for (var d = 0, p = f; d < p.length; d++) {
        var m = p[d];
        if (!e.isGlobalScopeAugmentation(m.parent)) continue;
        In(m);
       }
      }
     }
     On(qe, mn, e.Diagnostics.Declaration_name_conflicts_with_built_in_global_identifier_0);
     Mn(z).type = oe;
     Mn(j).type = Qc("IArguments", 0, true);
     Mn(Y).type = re;
     Ge = Qc("Array", 1, true);
     We = Qc("Object", 0, true);
     He = Qc("Function", 0, true);
     Xe = Qc("String", 0, true);
     Qe = Qc("Number", 0, true);
     Ye = Qc("Boolean", 0, true);
     Ze = Qc("RegExp", 0, true);
     tt = bu(ee);
     nt = bu(te);
     if (nt === ke) {
      nt = oi(undefined, C, e.emptyArray, e.emptyArray, undefined, undefined);
     }
     $e = du("ReadonlyArray", 1);
     rt = $e ? mu($e, [ ee ]) : tt;
     et = du("ThisType", 1);
     if (a) {
      for (var _ = 0, g = a; _ < g.length; _++) {
       var f = g[_];
       for (var h = 0, v = f; h < v.length; h++) {
        var m = v[h];
        if (e.isGlobalScopeAugmentation(m.parent)) continue;
        In(m);
       }
      }
     }
     Ue.forEach(function(t) {
      var n = t.firstFile, r = t.secondFile, i = t.firstFileInstances, a = t.secondFileInstances;
      var o = e.arrayFrom(i.keys());
      if (o.length < 8) {
       y(i, a);
       y(a, i);
       return;
      }
      var s = o.join(", ");
      Vt.add(yn(e.createDiagnosticForNode(n, e.Diagnostics.Definitions_of_the_following_identifiers_conflict_with_those_in_another_file_Colon_0, s), e.createDiagnosticForNode(r, e.Diagnostics.Conflicts_are_in_this_file)));
      Vt.add(yn(e.createDiagnosticForNode(r, e.Diagnostics.Definitions_of_the_following_identifiers_conflict_with_those_in_another_file_Colon_0, s), e.createDiagnosticForNode(n, e.Diagnostics.Conflicts_are_in_this_file)));
     });
     Ue = undefined;
     function y(t, n) {
      t.forEach(function(t, r) {
       var i = n.get(r);
       var a = t.blockScoped ? e.Diagnostics.Cannot_redeclare_block_scoped_variable_0 : e.Diagnostics.Duplicate_identifier_0;
       t.instances.forEach(function(e) {
        An(e, a, r, i.instances[0]);
       });
      });
     }
    }
    function Ew(t, n) {
     if ((g & n) !== n && T.importHelpers) {
      var r = e.getSourceFileOfNode(t);
      if (e.isEffectiveExternalModule(r, T) && !(t.flags & 4194304)) {
       var i = Aw(r, t);
       if (i !== Y) {
        var a = n & ~g;
        for (var o = 1; o <= 65536; o <<= 1) {
         if (a & o) {
          var s = Nw(o);
          var c = Bn(i.exports, e.escapeLeadingUnderscores(s), 67216319);
          if (!c) {
           bn(t, e.Diagnostics.This_syntax_requires_an_imported_helper_named_1_but_module_0_has_no_exported_member_1, e.externalHelpersModuleNameText, s);
          }
         }
        }
       }
       g |= n;
      }
     }
    }
    function Nw(t) {
     switch (t) {
     case 1:
      return "__extends";

     case 2:
      return "__assign";

     case 4:
      return "__rest";

     case 8:
      return "__decorate";

     case 16:
      return "__metadata";

     case 32:
      return "__param";

     case 64:
      return "__awaiter";

     case 128:
      return "__generator";

     case 256:
      return "__values";

     case 512:
      return "__read";

     case 1024:
      return "__spread";

     case 2048:
      return "__await";

     case 4096:
      return "__asyncGenerator";

     case 8192:
      return "__asyncDelegator";

     case 16384:
      return "__asyncValues";

     case 32768:
      return "__exportStar";

     case 65536:
      return "__makeTemplateObject";

     default:
      return e.Debug.fail("Unrecognized helper");
     }
    }
    function Aw(t, n) {
     if (!h) {
      h = Nr(t, e.externalHelpersModuleNameText, e.Diagnostics.This_syntax_requires_an_imported_helper_but_module_0_cannot_be_found, n) || Y;
     }
     return h;
    }
    function Fw(e) {
     return Pw(e) || Iw(e);
    }
    function Pw(t) {
     if (!t.decorators) {
      return false;
     }
     if (!e.nodeCanBeDecorated(t, t.parent, t.parent.parent)) {
      if (t.kind === 154 && !e.nodeIsPresent(t.body)) {
       return SC(t, e.Diagnostics.A_decorator_can_only_decorate_a_method_implementation_not_an_overload);
      } else {
       return SC(t, e.Diagnostics.Decorators_are_not_valid_here);
      }
     } else if (t.kind === 156 || t.kind === 157) {
      var n = e.getAllAccessorDeclarations(t.parent.members, t);
      if (n.firstAccessor.decorators && t === n.secondAccessor) {
       return SC(t, e.Diagnostics.Decorators_cannot_be_applied_to_multiple_get_Slashset_accessors_of_the_same_name);
      }
     }
     return false;
    }
    function Iw(t) {
     var n = Ow(t);
     if (n !== undefined) {
      return n;
     }
     var r, i, a, o;
     var s = 0;
     for (var c = 0, u = t.modifiers; c < u.length; c++) {
      var l = u[c];
      if (l.kind !== 132) {
       if (t.kind === 151 || t.kind === 153) {
        return CC(l, e.Diagnostics._0_modifier_cannot_appear_on_a_type_member, e.tokenToString(l.kind));
       }
       if (t.kind === 160) {
        return CC(l, e.Diagnostics._0_modifier_cannot_appear_on_an_index_signature, e.tokenToString(l.kind));
       }
      }
      switch (l.kind) {
      case 76:
       if (t.kind !== 241) {
        return CC(t, e.Diagnostics.A_class_member_cannot_have_the_0_keyword, e.tokenToString(76));
       }
       break;

      case 114:
      case 113:
      case 112:
       var f = Ei(e.modifierToFlag(l.kind));
       if (s & 28) {
        return CC(l, e.Diagnostics.Accessibility_modifier_already_seen);
       } else if (s & 32) {
        return CC(l, e.Diagnostics._0_modifier_must_precede_1_modifier, f, "static");
       } else if (s & 64) {
        return CC(l, e.Diagnostics._0_modifier_must_precede_1_modifier, f, "readonly");
       } else if (s & 256) {
        return CC(l, e.Diagnostics._0_modifier_must_precede_1_modifier, f, "async");
       } else if (t.parent.kind === 243 || t.parent.kind === 277) {
        return CC(l, e.Diagnostics._0_modifier_cannot_appear_on_a_module_or_namespace_element, f);
       } else if (s & 128) {
        if (l.kind === 112) {
         return CC(l, e.Diagnostics._0_modifier_cannot_be_used_with_1_modifier, f, "abstract");
        } else {
         return CC(l, e.Diagnostics._0_modifier_must_precede_1_modifier, f, "abstract");
        }
       }
       s |= e.modifierToFlag(l.kind);
       break;

      case 115:
       if (s & 32) {
        return CC(l, e.Diagnostics._0_modifier_already_seen, "static");
       } else if (s & 64) {
        return CC(l, e.Diagnostics._0_modifier_must_precede_1_modifier, "static", "readonly");
       } else if (s & 256) {
        return CC(l, e.Diagnostics._0_modifier_must_precede_1_modifier, "static", "async");
       } else if (t.parent.kind === 243 || t.parent.kind === 277) {
        return CC(l, e.Diagnostics._0_modifier_cannot_appear_on_a_module_or_namespace_element, "static");
       } else if (t.kind === 149) {
        return CC(l, e.Diagnostics._0_modifier_cannot_appear_on_a_parameter, "static");
       } else if (s & 128) {
        return CC(l, e.Diagnostics._0_modifier_cannot_be_used_with_1_modifier, "static", "abstract");
       }
       s |= 32;
       r = l;
       break;

      case 132:
       if (s & 64) {
        return CC(l, e.Diagnostics._0_modifier_already_seen, "readonly");
       } else if (t.kind !== 152 && t.kind !== 151 && t.kind !== 160 && t.kind !== 149) {
        return CC(l, e.Diagnostics.readonly_modifier_can_only_appear_on_a_property_declaration_or_index_signature);
       }
       s |= 64;
       o = l;
       break;

      case 84:
       if (s & 1) {
        return CC(l, e.Diagnostics._0_modifier_already_seen, "export");
       } else if (s & 2) {
        return CC(l, e.Diagnostics._0_modifier_must_precede_1_modifier, "export", "declare");
       } else if (s & 128) {
        return CC(l, e.Diagnostics._0_modifier_must_precede_1_modifier, "export", "abstract");
       } else if (s & 256) {
        return CC(l, e.Diagnostics._0_modifier_must_precede_1_modifier, "export", "async");
       } else if (t.parent.kind === 238) {
        return CC(l, e.Diagnostics._0_modifier_cannot_appear_on_a_class_element, "export");
       } else if (t.kind === 149) {
        return CC(l, e.Diagnostics._0_modifier_cannot_appear_on_a_parameter, "export");
       }
       s |= 1;
       break;

      case 79:
       var d = t.parent.kind === 277 ? t.parent : t.parent.parent;
       if (d.kind === 242 && !e.isAmbientModule(d)) {
        return CC(l, e.Diagnostics.A_default_export_can_only_be_used_in_an_ECMAScript_style_module);
       }
       s |= 512;
       break;

      case 124:
       if (s & 2) {
        return CC(l, e.Diagnostics._0_modifier_already_seen, "declare");
       } else if (s & 256) {
        return CC(l, e.Diagnostics._0_modifier_cannot_be_used_in_an_ambient_context, "async");
       } else if (t.parent.kind === 238) {
        return CC(l, e.Diagnostics._0_modifier_cannot_appear_on_a_class_element, "declare");
       } else if (t.kind === 149) {
        return CC(l, e.Diagnostics._0_modifier_cannot_appear_on_a_parameter, "declare");
       } else if (t.parent.flags & 4194304 && t.parent.kind === 243) {
        return CC(l, e.Diagnostics.A_declare_modifier_cannot_be_used_in_an_already_ambient_context);
       }
       s |= 2;
       i = l;
       break;

      case 117:
       if (s & 128) {
        return CC(l, e.Diagnostics._0_modifier_already_seen, "abstract");
       }
       if (t.kind !== 238) {
        if (t.kind !== 154 && t.kind !== 152 && t.kind !== 156 && t.kind !== 157) {
         return CC(l, e.Diagnostics.abstract_modifier_can_only_appear_on_a_class_method_or_property_declaration);
        }
        if (!(t.parent.kind === 238 && e.hasModifier(t.parent, 128))) {
         return CC(l, e.Diagnostics.Abstract_methods_can_only_appear_within_an_abstract_class);
        }
        if (s & 32) {
         return CC(l, e.Diagnostics._0_modifier_cannot_be_used_with_1_modifier, "static", "abstract");
        }
        if (s & 8) {
         return CC(l, e.Diagnostics._0_modifier_cannot_be_used_with_1_modifier, "private", "abstract");
        }
       }
       s |= 128;
       break;

      case 120:
       if (s & 256) {
        return CC(l, e.Diagnostics._0_modifier_already_seen, "async");
       } else if (s & 2 || t.parent.flags & 4194304) {
        return CC(l, e.Diagnostics._0_modifier_cannot_be_used_in_an_ambient_context, "async");
       } else if (t.kind === 149) {
        return CC(l, e.Diagnostics._0_modifier_cannot_appear_on_a_parameter, "async");
       }
       s |= 256;
       a = l;
       break;
      }
     }
     if (t.kind === 155) {
      if (s & 32) {
       return CC(r, e.Diagnostics._0_modifier_cannot_appear_on_a_constructor_declaration, "static");
      }
      if (s & 128) {
       return CC(r, e.Diagnostics._0_modifier_cannot_appear_on_a_constructor_declaration, "abstract");
      } else if (s & 256) {
       return CC(a, e.Diagnostics._0_modifier_cannot_appear_on_a_constructor_declaration, "async");
      } else if (s & 64) {
       return CC(o, e.Diagnostics._0_modifier_cannot_appear_on_a_constructor_declaration, "readonly");
      }
      return false;
     } else if ((t.kind === 247 || t.kind === 246) && s & 2) {
      return CC(i, e.Diagnostics.A_0_modifier_cannot_be_used_with_an_import_declaration, "declare");
     } else if (t.kind === 149 && s & 92 && e.isBindingPattern(t.name)) {
      return CC(t, e.Diagnostics.A_parameter_property_may_not_be_declared_using_a_binding_pattern);
     } else if (t.kind === 149 && s & 92 && t.dotDotDotToken) {
      return CC(t, e.Diagnostics.A_parameter_property_cannot_be_declared_using_a_rest_parameter);
     }
     if (s & 256) {
      return Rw(t, a);
     }
     return false;
    }
    function Ow(t) {
     return !t.modifiers ? false : Mw(t) ? SC(t, e.Diagnostics.Modifiers_cannot_appear_here) : undefined;
    }
    function Mw(t) {
     switch (t.kind) {
     case 156:
     case 157:
     case 155:
     case 152:
     case 151:
     case 154:
     case 153:
     case 160:
     case 242:
     case 247:
     case 246:
     case 253:
     case 252:
     case 194:
     case 195:
     case 149:
      return false;

     default:
      if (t.parent.kind === 243 || t.parent.kind === 277) {
       return false;
      }
      switch (t.kind) {
      case 237:
       return Lw(t, 120);

      case 238:
       return Lw(t, 117);

      case 239:
      case 217:
      case 240:
       return true;

      case 241:
       return Lw(t, 76);

      default:
       e.Debug.fail();
       return false;
      }
     }
    }
    function Lw(e, t) {
     return e.modifiers.length > 1 || e.modifiers[0].kind !== t;
    }
    function Rw(t, n) {
     switch (t.kind) {
     case 154:
     case 237:
     case 194:
     case 195:
      return false;
     }
     return CC(n, e.Diagnostics._0_modifier_cannot_be_used_here, "async");
    }
    function Bw(t, n) {
     if (n === void 0) {
      n = e.Diagnostics.Trailing_comma_not_allowed;
     }
     if (t && t.hasTrailingComma) {
      return wC(t[0], t.end - ",".length, ",".length, n);
     }
     return false;
    }
    function zw(t, n) {
     if (t && t.length === 0) {
      var r = t.pos - "<".length;
      var i = e.skipTrivia(n.text, t.end) + ">".length;
      return wC(n, r, i - r, e.Diagnostics.Type_parameter_list_cannot_be_empty);
     }
     return false;
    }
    function jw(t) {
     var n = false;
     var r = t.length;
     for (var i = 0; i < r; i++) {
      var a = t[i];
      if (a.dotDotDotToken) {
       if (i !== r - 1) {
        return CC(a.dotDotDotToken, e.Diagnostics.A_rest_parameter_must_be_last_in_a_parameter_list);
       }
       if (!(a.flags & 4194304)) {
        Bw(t, e.Diagnostics.A_rest_parameter_or_binding_pattern_may_not_have_a_trailing_comma);
       }
       if (e.isBindingPattern(a.name)) {
        return CC(a.name, e.Diagnostics.A_rest_element_cannot_contain_a_binding_pattern);
       }
       if (a.questionToken) {
        return CC(a.questionToken, e.Diagnostics.A_rest_parameter_cannot_be_optional);
       }
       if (a.initializer) {
        return CC(a.name, e.Diagnostics.A_rest_parameter_cannot_have_an_initializer);
       }
      } else if (a.questionToken) {
       n = true;
       if (a.initializer) {
        return CC(a.name, e.Diagnostics.Parameter_cannot_have_question_mark_and_initializer);
       }
      } else if (n && !a.initializer) {
       return CC(a.name, e.Diagnostics.A_required_parameter_cannot_follow_an_optional_parameter);
      }
     }
    }
    function qw(t) {
     var n = e.getSourceFileOfNode(t);
     return Fw(t) || zw(t.typeParameters, n) || jw(t.parameters) || Jw(t, n);
    }
    function Uw(t) {
     var n = e.getSourceFileOfNode(t);
     return Yw(t) || zw(t.typeParameters, n);
    }
    function Jw(t, n) {
     if (!e.isArrowFunction(t)) {
      return false;
     }
     var r = t.equalsGreaterThanToken;
     var i = e.getLineAndCharacterOfPosition(n, r.pos).line;
     var a = e.getLineAndCharacterOfPosition(n, r.end).line;
     return i !== a && CC(r, e.Diagnostics.Line_terminator_not_permitted_before_arrow);
    }
    function Kw(t) {
     var n = t.parameters[0];
     if (t.parameters.length !== 1) {
      if (n) {
       return CC(n.name, e.Diagnostics.An_index_signature_must_have_exactly_one_parameter);
      } else {
       return CC(t, e.Diagnostics.An_index_signature_must_have_exactly_one_parameter);
      }
     }
     if (n.dotDotDotToken) {
      return CC(n.dotDotDotToken, e.Diagnostics.An_index_signature_cannot_have_a_rest_parameter);
     }
     if (e.hasModifiers(n)) {
      return CC(n.name, e.Diagnostics.An_index_signature_parameter_cannot_have_an_accessibility_modifier);
     }
     if (n.questionToken) {
      return CC(n.questionToken, e.Diagnostics.An_index_signature_parameter_cannot_have_a_question_mark);
     }
     if (n.initializer) {
      return CC(n.name, e.Diagnostics.An_index_signature_parameter_cannot_have_an_initializer);
     }
     if (!n.type) {
      return CC(n.name, e.Diagnostics.An_index_signature_parameter_must_have_a_type_annotation);
     }
     if (n.type.kind !== 137 && n.type.kind !== 134) {
      var r = Ul(n.type);
      if (r.flags & 4 || r.flags & 8) {
       return CC(n.name, e.Diagnostics.An_index_signature_parameter_type_cannot_be_a_type_alias_Consider_writing_0_Colon_1_Colon_2_instead, e.getTextOfNode(n.name), Si(r), Si(Ul(t.type)));
      }
      if (r.flags & 262144 && My(r, 64, true)) {
       return CC(n.name, e.Diagnostics.An_index_signature_parameter_type_cannot_be_a_union_type_Consider_using_a_mapped_object_type_instead);
      }
      return CC(n.name, e.Diagnostics.An_index_signature_parameter_type_must_be_string_or_number);
     }
     if (!t.type) {
      return CC(t, e.Diagnostics.An_index_signature_must_have_a_type_annotation);
     }
     return false;
    }
    function Vw(e) {
     return Fw(e) || Kw(e);
    }
    function Ww(t, n) {
     if (n && n.length === 0) {
      var r = e.getSourceFileOfNode(t);
      var i = n.pos - "<".length;
      var a = e.skipTrivia(r.text, n.end) + ">".length;
      return wC(r, i, a - i, e.Diagnostics.Type_argument_list_cannot_be_empty);
     }
     return false;
    }
    function Hw(e, t) {
     return Bw(t) || Ww(e, t);
    }
    function Gw(t) {
     if (t) {
      for (var n = 0, r = t; n < r.length; n++) {
       var i = r[n];
       if (i.kind === 208) {
        return wC(i, i.pos, 0, e.Diagnostics.Argument_expression_expected);
       }
      }
     }
     return false;
    }
    function $w(e) {
     return Gw(e);
    }
    function Xw(t) {
     var n = t.types;
     if (Bw(n)) {
      return true;
     }
     if (n && n.length === 0) {
      var r = e.tokenToString(t.token);
      return wC(t, n.pos, 0, e.Diagnostics._0_list_cannot_be_empty, r);
     }
     return e.some(n, Qw);
    }
    function Qw(e) {
     return Hw(e, e.typeArguments);
    }
    function Yw(t) {
     var n = false;
     var r = false;
     if (!Fw(t) && t.heritageClauses) {
      for (var i = 0, a = t.heritageClauses; i < a.length; i++) {
       var o = a[i];
       if (o.token === 85) {
        if (n) {
         return SC(o, e.Diagnostics.extends_clause_already_seen);
        }
        if (r) {
         return SC(o, e.Diagnostics.extends_clause_must_precede_implements_clause);
        }
        if (o.types.length > 1) {
         return SC(o.types[1], e.Diagnostics.Classes_can_only_extend_a_single_class);
        }
        n = true;
       } else {
        e.Debug.assert(o.token === 108);
        if (r) {
         return SC(o, e.Diagnostics.implements_clause_already_seen);
        }
        r = true;
       }
       Xw(o);
      }
     }
    }
    function Zw(t) {
     var n = false;
     if (t.heritageClauses) {
      for (var r = 0, i = t.heritageClauses; r < i.length; r++) {
       var a = i[r];
       if (a.token === 85) {
        if (n) {
         return SC(a, e.Diagnostics.extends_clause_already_seen);
        }
        n = true;
       } else {
        e.Debug.assert(a.token === 108);
        return SC(a, e.Diagnostics.Interface_declaration_cannot_have_implements_clause);
       }
       Xw(a);
      }
     }
     return false;
    }
    function eC(t) {
     if (t.kind !== 147) {
      return false;
     }
     var n = t;
     if (n.expression.kind === 202 && n.expression.operatorToken.kind === 26) {
      return CC(n.expression, e.Diagnostics.A_comma_expression_is_not_allowed_in_a_computed_property_name);
     }
     return false;
    }
    function tC(t) {
     if (t.asteriskToken) {
      e.Debug.assert(t.kind === 237 || t.kind === 194 || t.kind === 154);
      if (t.flags & 4194304) {
       return CC(t.asteriskToken, e.Diagnostics.Generators_are_not_allowed_in_an_ambient_context);
      }
      if (!t.body) {
       return CC(t.asteriskToken, e.Diagnostics.An_overload_signature_cannot_be_declared_as_a_generator);
      }
     }
    }
    function nC(e, t) {
     return !!e && CC(e, t);
    }
    function rC(t, n) {
     var r;
     (function(e) {
      e[e["Property"] = 1] = "Property";
      e[e["GetAccessor"] = 2] = "GetAccessor";
      e[e["SetAccessor"] = 4] = "SetAccessor";
      e[e["GetOrSetAccessor"] = 6] = "GetOrSetAccessor";
     })(r || (r = {}));
     var i = e.createUnderscoreEscapedMap();
     for (var a = 0, o = t.properties; a < o.length; a++) {
      var s = o[a];
      if (s.kind === 275) {
       continue;
      }
      var c = s.name;
      if (c.kind === 147) {
       eC(c);
      }
      if (s.kind === 274 && !n && s.objectAssignmentInitializer) {
       return CC(s.equalsToken, e.Diagnostics.can_only_be_used_in_an_object_literal_property_inside_a_destructuring_assignment);
      }
      if (s.modifiers) {
       for (var u = 0, l = s.modifiers; u < l.length; u++) {
        var f = l[u];
        if (f.kind !== 120 || s.kind !== 154) {
         CC(f, e.Diagnostics._0_modifier_cannot_be_used_here, e.getTextOfNode(f));
        }
       }
      }
      var d = void 0;
      switch (s.kind) {
      case 273:
      case 274:
       nC(s.questionToken, e.Diagnostics.An_object_member_cannot_be_declared_optional);
       if (c.kind === 8) {
        IC(c);
       }

      case 154:
       d = 1;
       break;

      case 156:
       d = 2;
       break;

      case 157:
       d = 4;
       break;

      default:
       throw e.Debug.assertNever(s, "Unexpected syntax kind:" + s.kind);
      }
      var p = e.getPropertyNameForPropertyNameNode(c);
      if (p === undefined) {
       continue;
      }
      var m = i.get(p);
      if (!m) {
       i.set(p, d);
      } else {
       if (d === 1 && m === 1) {
        CC(c, e.Diagnostics.Duplicate_identifier_0, e.getTextOfNode(c));
       } else if (d & 6 && m & 6) {
        if (m !== 6 && d !== m) {
         i.set(p, d | m);
        } else {
         return CC(c, e.Diagnostics.An_object_literal_cannot_have_multiple_get_Slashset_accessors_with_the_same_name);
        }
       } else {
        return CC(c, e.Diagnostics.An_object_literal_cannot_have_property_and_accessor_with_the_same_name);
       }
      }
     }
    }
    function iC(t) {
     Hw(t, t.typeArguments);
     var n = e.createUnderscoreEscapedMap();
     for (var r = 0, i = t.attributes.properties; r < i.length; r++) {
      var a = i[r];
      if (a.kind === 267) {
       continue;
      }
      var o = a.name, s = a.initializer;
      if (!n.get(o.escapedText)) {
       n.set(o.escapedText, true);
      } else {
       return CC(o, e.Diagnostics.JSX_elements_cannot_have_multiple_attributes_with_the_same_name);
      }
      if (s && s.kind === 268 && !s.expression) {
       return CC(s, e.Diagnostics.JSX_attributes_must_only_be_assigned_a_non_empty_expression);
      }
     }
    }
    function aC(t) {
     if (PC(t)) {
      return true;
     }
     if (t.kind === 225 && t.awaitModifier) {
      if ((t.flags & 16384) === 0) {
       return CC(t.awaitModifier, e.Diagnostics.A_for_await_of_statement_is_only_allowed_within_an_async_function_or_async_generator);
      }
     }
     if (t.initializer.kind === 236) {
      var n = t.initializer;
      if (!vC(n)) {
       var r = n.declarations;
       if (!r.length) {
        return false;
       }
       if (r.length > 1) {
        var i = t.kind === 224 ? e.Diagnostics.Only_a_single_variable_declaration_is_allowed_in_a_for_in_statement : e.Diagnostics.Only_a_single_variable_declaration_is_allowed_in_a_for_of_statement;
        return SC(n.declarations[1], i);
       }
       var a = r[0];
       if (a.initializer) {
        var i = t.kind === 224 ? e.Diagnostics.The_variable_declaration_of_a_for_in_statement_cannot_have_an_initializer : e.Diagnostics.The_variable_declaration_of_a_for_of_statement_cannot_have_an_initializer;
        return CC(a.name, i);
       }
       if (a.type) {
        var i = t.kind === 224 ? e.Diagnostics.The_left_hand_side_of_a_for_in_statement_cannot_use_a_type_annotation : e.Diagnostics.The_left_hand_side_of_a_for_of_statement_cannot_use_a_type_annotation;
        return CC(a, i);
       }
      }
     }
     return false;
    }
    function oC(t) {
     var n = t.kind;
     if (E < 1) {
      return CC(t.name, e.Diagnostics.Accessors_are_only_available_when_targeting_ECMAScript_5_and_higher);
     } else if (t.flags & 4194304) {
      return CC(t.name, e.Diagnostics.An_accessor_cannot_be_declared_in_an_ambient_context);
     } else if (t.body === undefined && !e.hasModifier(t, 128)) {
      return wC(t, t.end - 1, ";".length, e.Diagnostics._0_expected, "{");
     } else if (t.body && e.hasModifier(t, 128)) {
      return CC(t, e.Diagnostics.An_abstract_accessor_cannot_have_an_implementation);
     } else if (t.typeParameters) {
      return CC(t.name, e.Diagnostics.An_accessor_cannot_have_type_parameters);
     } else if (!sC(t)) {
      return CC(t.name, n === 156 ? e.Diagnostics.A_get_accessor_cannot_have_parameters : e.Diagnostics.A_set_accessor_must_have_exactly_one_parameter);
     } else if (n === 157) {
      if (t.type) {
       return CC(t.name, e.Diagnostics.A_set_accessor_cannot_have_a_return_type_annotation);
      } else {
       var r = t.parameters[0];
       if (r.dotDotDotToken) {
        return CC(r.dotDotDotToken, e.Diagnostics.A_set_accessor_cannot_have_rest_parameter);
       } else if (r.questionToken) {
        return CC(r.questionToken, e.Diagnostics.A_set_accessor_cannot_have_an_optional_parameter);
       } else if (r.initializer) {
        return CC(t.name, e.Diagnostics.A_set_accessor_parameter_cannot_have_an_initializer);
       }
      }
     }
     return false;
    }
    function sC(e) {
     return cC(e) || e.parameters.length === (e.kind === 156 ? 0 : 1);
    }
    function cC(t) {
     if (t.parameters.length === (t.kind === 156 ? 1 : 2)) {
      return e.getThisParameter(t);
     }
    }
    function uC(t) {
     if (t.operator === 141) {
      if (t.type.kind !== 138) {
       return CC(t.type, e.Diagnostics._0_expected, e.tokenToString(138));
      }
      var n = e.walkUpParenthesizedTypes(t.parent);
      switch (n.kind) {
      case 235:
       var r = n;
       if (r.name.kind !== 71) {
        return CC(t, e.Diagnostics.unique_symbol_types_may_not_be_used_on_a_variable_declaration_with_a_binding_name);
       }
       if (!e.isVariableDeclarationInVariableStatement(r)) {
        return CC(t, e.Diagnostics.unique_symbol_types_are_only_allowed_on_variables_in_a_variable_statement);
       }
       if (!(r.parent.flags & 2)) {
        return CC(n.name, e.Diagnostics.A_variable_whose_type_is_a_unique_symbol_type_must_be_const);
       }
       break;

      case 152:
       if (!e.hasModifier(n, 32) || !e.hasModifier(n, 64)) {
        return CC(n.name, e.Diagnostics.A_property_of_a_class_whose_type_is_a_unique_symbol_type_must_be_both_static_and_readonly);
       }
       break;

      case 151:
       if (!e.hasModifier(n, 64)) {
        return CC(n.name, e.Diagnostics.A_property_of_an_interface_or_type_literal_whose_type_is_a_unique_symbol_type_must_be_readonly);
       }
       break;

      default:
       return CC(t, e.Diagnostics.unique_symbol_types_are_not_allowed_here);
      }
     }
    }
    function lC(e, t) {
     if (mo(e)) {
      return CC(e, t);
     }
    }
    function fC(t) {
     if (qw(t)) {
      return true;
     }
     if (t.kind === 154) {
      if (t.parent.kind === 186) {
       if (t.modifiers && !(t.modifiers.length === 1 && e.first(t.modifiers).kind === 120)) {
        return SC(t, e.Diagnostics.Modifiers_cannot_appear_here);
       } else if (nC(t.questionToken, e.Diagnostics.An_object_member_cannot_be_declared_optional)) {
        return true;
       } else if (t.body === undefined) {
        return wC(t, t.end - 1, ";".length, e.Diagnostics._0_expected, "{");
       }
      }
      if (tC(t)) {
       return true;
      }
     }
     if (e.isClassLike(t.parent)) {
      if (t.flags & 4194304) {
       return lC(t.name, e.Diagnostics.A_computed_property_name_in_an_ambient_context_must_refer_to_an_expression_whose_type_is_a_literal_type_or_a_unique_symbol_type);
      } else if (t.kind === 154 && !t.body) {
       return lC(t.name, e.Diagnostics.A_computed_property_name_in_a_method_overload_must_refer_to_an_expression_whose_type_is_a_literal_type_or_a_unique_symbol_type);
      }
     } else if (t.parent.kind === 239) {
      return lC(t.name, e.Diagnostics.A_computed_property_name_in_an_interface_must_refer_to_an_expression_whose_type_is_a_literal_type_or_a_unique_symbol_type);
     } else if (t.parent.kind === 166) {
      return lC(t.name, e.Diagnostics.A_computed_property_name_in_a_type_literal_must_refer_to_an_expression_whose_type_is_a_literal_type_or_a_unique_symbol_type);
     }
    }
    function dC(t) {
     var n = t;
     while (n) {
      if (e.isFunctionLike(n)) {
       return CC(t, e.Diagnostics.Jump_target_cannot_cross_function_boundary);
      }
      switch (n.kind) {
      case 231:
       if (t.label && n.label.escapedText === t.label.escapedText) {
        var r = t.kind === 226 && !e.isIterationStatement(n.statement, true);
        if (r) {
         return CC(t, e.Diagnostics.A_continue_statement_can_only_jump_to_a_label_of_an_enclosing_iteration_statement);
        }
        return false;
       }
       break;

      case 230:
       if (t.kind === 227 && !t.label) {
        return false;
       }
       break;

      default:
       if (e.isIterationStatement(n, false) && !t.label) {
        return false;
       }
       break;
      }
      n = n.parent;
     }
     if (t.label) {
      var i = t.kind === 227 ? e.Diagnostics.A_break_statement_can_only_jump_to_a_label_of_an_enclosing_statement : e.Diagnostics.A_continue_statement_can_only_jump_to_a_label_of_an_enclosing_iteration_statement;
      return CC(t, i);
     } else {
      var i = t.kind === 227 ? e.Diagnostics.A_break_statement_can_only_be_used_within_an_enclosing_iteration_or_switch_statement : e.Diagnostics.A_continue_statement_can_only_be_used_within_an_enclosing_iteration_statement;
      return CC(t, i);
     }
    }
    function pC(t) {
     if (t.dotDotDotToken) {
      var n = t.parent.elements;
      if (t !== e.last(n)) {
       return CC(t, e.Diagnostics.A_rest_element_must_be_last_in_a_destructuring_pattern);
      }
      Bw(n, e.Diagnostics.A_rest_parameter_or_binding_pattern_may_not_have_a_trailing_comma);
      if (t.name.kind === 183 || t.name.kind === 182) {
       return CC(t.name, e.Diagnostics.A_rest_element_cannot_contain_a_binding_pattern);
      }
      if (t.propertyName) {
       return CC(t.name, e.Diagnostics.A_rest_element_cannot_have_a_property_name);
      }
      if (t.initializer) {
       return wC(t, t.initializer.pos - 1, 1, e.Diagnostics.A_rest_element_cannot_have_an_initializer);
      }
     }
    }
    function mC(e) {
     return e.kind === 9 || e.kind === 8 || e.kind === 200 && e.operator === 38 && e.operand.kind === 8;
    }
    function _C(t) {
     if (t.parent.parent.kind !== 224 && t.parent.parent.kind !== 225) {
      if (t.flags & 4194304) {
       if (t.initializer) {
        if (e.isVarConst(t) && !t.type) {
         if (!mC(t.initializer)) {
          return CC(t.initializer, e.Diagnostics.A_const_initializer_in_an_ambient_context_must_be_a_string_or_numeric_literal);
         }
        } else {
         var n = "=".length;
         return wC(t, t.initializer.pos - n, n, e.Diagnostics.Initializers_are_not_allowed_in_ambient_contexts);
        }
       }
       if (t.initializer && !(e.isVarConst(t) && mC(t.initializer))) {
        var n = "=".length;
        return wC(t, t.initializer.pos - n, n, e.Diagnostics.Initializers_are_not_allowed_in_ambient_contexts);
       }
      } else if (!t.initializer) {
       if (e.isBindingPattern(t.name) && !e.isBindingPattern(t.parent)) {
        return CC(t, e.Diagnostics.A_destructuring_declaration_must_have_an_initializer);
       }
       if (e.isVarConst(t)) {
        return CC(t, e.Diagnostics.const_declarations_must_be_initialized);
       }
      }
     }
     if (t.exclamationToken && (t.parent.parent.kind !== 217 || !t.type || t.initializer || t.flags & 4194304)) {
      return CC(t.exclamationToken, e.Diagnostics.A_definite_assignment_assertion_is_not_permitted_in_this_context);
     }
     if (T.module !== e.ModuleKind.ES2015 && T.module !== e.ModuleKind.ESNext && T.module !== e.ModuleKind.System && !T.noEmit && !(t.parent.parent.flags & 4194304) && e.hasModifier(t.parent.parent, 1)) {
      gC(t.name);
     }
     var r = e.isLet(t) || e.isVarConst(t);
     return r && hC(t.name);
    }
    function gC(t) {
     if (t.kind === 71) {
      if (e.idText(t) === "__esModule") {
       return CC(t, e.Diagnostics.Identifier_expected_esModule_is_reserved_as_an_exported_marker_when_transforming_ECMAScript_modules);
      }
     } else {
      var n = t.elements;
      for (var r = 0, i = n; r < i.length; r++) {
       var a = i[r];
       if (!e.isOmittedExpression(a)) {
        return gC(a.name);
       }
      }
     }
     return false;
    }
    function hC(t) {
     if (t.kind === 71) {
      if (t.originalKeywordKind === 110) {
       return CC(t, e.Diagnostics.let_is_not_allowed_to_be_used_as_a_name_in_let_or_const_declarations);
      }
     } else {
      var n = t.elements;
      for (var r = 0, i = n; r < i.length; r++) {
       var a = i[r];
       if (!e.isOmittedExpression(a)) {
        hC(a.name);
       }
      }
     }
     return false;
    }
    function vC(t) {
     var n = t.declarations;
     if (Bw(t.declarations)) {
      return true;
     }
     if (!t.declarations.length) {
      return wC(t, n.pos, n.end - n.pos, e.Diagnostics.Variable_declaration_list_cannot_be_empty);
     }
     return false;
    }
    function yC(e) {
     switch (e.kind) {
     case 220:
     case 221:
     case 222:
     case 229:
     case 223:
     case 224:
     case 225:
      return false;

     case 231:
      return yC(e.parent);
     }
     return true;
    }
    function bC(t) {
     if (!yC(t.parent)) {
      if (e.isLet(t.declarationList)) {
       return CC(t, e.Diagnostics.let_declarations_can_only_be_declared_inside_a_block);
      } else if (e.isVarConst(t.declarationList)) {
       return CC(t, e.Diagnostics.const_declarations_can_only_be_declared_inside_a_block);
      }
     }
    }
    function xC(t) {
     var n = t.name.escapedText;
     switch (t.keywordToken) {
     case 94:
      if (n !== "target") {
       return CC(t.name, e.Diagnostics._0_is_not_a_valid_meta_property_for_keyword_1_Did_you_mean_2, t.name.escapedText, e.tokenToString(t.keywordToken), "target");
      }
      break;

     case 91:
      if (n !== "meta") {
       return CC(t.name, e.Diagnostics._0_is_not_a_valid_meta_property_for_keyword_1_Did_you_mean_2, t.name.escapedText, e.tokenToString(t.keywordToken), "meta");
      }
      break;
     }
    }
    function kC(e) {
     return e.parseDiagnostics.length > 0;
    }
    function SC(t, n, r, i, a) {
     var o = e.getSourceFileOfNode(t);
     if (!kC(o)) {
      var s = e.getSpanOfTokenAtPosition(o, t.pos);
      Vt.add(e.createFileDiagnostic(o, s.start, s.length, n, r, i, a));
      return true;
     }
     return false;
    }
    function wC(t, n, r, i, a, o, s) {
     var c = e.getSourceFileOfNode(t);
     if (!kC(c)) {
      Vt.add(e.createFileDiagnostic(c, n, r, i, a, o, s));
      return true;
     }
     return false;
    }
    function CC(t, n, r, i, a) {
     var o = e.getSourceFileOfNode(t);
     if (!kC(o)) {
      Vt.add(e.createDiagnosticForNode(t, n, r, i, a));
      return true;
     }
     return false;
    }
    function DC(t) {
     var n = e.isInJavaScriptFile(t) && e.getJSDocTypeParameterDeclarations(t);
     if (t.typeParameters || n && n.length) {
      var r = t.typeParameters || n && n[0] || t, i = r.pos, a = r.end;
      return wC(t, i, a - i, e.Diagnostics.Type_parameters_cannot_appear_on_a_constructor_declaration);
     }
    }
    function TC(t) {
     var n = e.getEffectiveReturnTypeNode(t);
     if (n) {
      return CC(n, e.Diagnostics.Type_annotation_cannot_appear_on_a_constructor_declaration);
     }
    }
    function EC(t) {
     if (e.isClassLike(t.parent)) {
      if (lC(t.name, e.Diagnostics.A_computed_property_name_in_a_class_property_declaration_must_refer_to_an_expression_whose_type_is_a_literal_type_or_a_unique_symbol_type)) {
       return true;
      }
     } else if (t.parent.kind === 239) {
      if (lC(t.name, e.Diagnostics.A_computed_property_name_in_an_interface_must_refer_to_an_expression_whose_type_is_a_literal_type_or_a_unique_symbol_type)) {
       return true;
      }
      if (t.initializer) {
       return CC(t.initializer, e.Diagnostics.An_interface_property_cannot_have_an_initializer);
      }
     } else if (t.parent.kind === 166) {
      if (lC(t.name, e.Diagnostics.A_computed_property_name_in_a_type_literal_must_refer_to_an_expression_whose_type_is_a_literal_type_or_a_unique_symbol_type)) {
       return true;
      }
      if (t.initializer) {
       return CC(t.initializer, e.Diagnostics.A_type_literal_property_cannot_have_an_initializer);
      }
     }
     if (t.flags & 4194304 && t.initializer) {
      return SC(t.initializer, e.Diagnostics.Initializers_are_not_allowed_in_ambient_contexts);
     }
     if (e.isPropertyDeclaration(t) && t.exclamationToken && (!e.isClassLike(t.parent) || !t.type || t.initializer || t.flags & 4194304 || e.hasModifier(t, 32 | 128))) {
      return CC(t.exclamationToken, e.Diagnostics.A_definite_assignment_assertion_is_not_permitted_in_this_context);
     }
    }
    function NC(t) {
     if (t.kind === 239 || t.kind === 240 || t.kind === 247 || t.kind === 246 || t.kind === 253 || t.kind === 252 || t.kind === 245 || e.hasModifier(t, 2 | 1 | 512)) {
      return false;
     }
     return SC(t, e.Diagnostics.A_declare_modifier_is_required_for_a_top_level_declaration_in_a_d_ts_file);
    }
    function AC(t) {
     for (var n = 0, r = t.statements; n < r.length; n++) {
      var i = r[n];
      if (e.isDeclaration(i) || i.kind === 217) {
       if (NC(i)) {
        return true;
       }
      }
     }
     return false;
    }
    function FC(e) {
     return !!(e.flags & 4194304) && AC(e);
    }
    function PC(t) {
     if (t.flags & 4194304) {
      if (e.isAccessor(t.parent)) {
       return Ln(t).hasReportedStatementInAmbientContext = true;
      }
      var n = Ln(t);
      if (!n.hasReportedStatementInAmbientContext && e.isFunctionLike(t.parent)) {
       return Ln(t).hasReportedStatementInAmbientContext = SC(t, e.Diagnostics.An_implementation_cannot_be_declared_in_ambient_contexts);
      }
      if (t.parent.kind === 216 || t.parent.kind === 243 || t.parent.kind === 277) {
       var r = Ln(t.parent);
       if (!r.hasReportedStatementInAmbientContext) {
        return r.hasReportedStatementInAmbientContext = SC(t, e.Diagnostics.Statements_are_not_allowed_in_ambient_contexts);
       }
      } else {}
     }
     return false;
    }
    function IC(t) {
     if (t.numericLiteralFlags & 32) {
      var n = void 0;
      if (E >= 1) {
       n = e.Diagnostics.Octal_literals_are_not_available_when_targeting_ECMAScript_5_and_higher_Use_the_syntax_0;
      } else if (e.isChildOfNodeWithKind(t, 180)) {
       n = e.Diagnostics.Octal_literal_types_must_use_ES2015_syntax_Use_the_syntax_0;
      } else if (e.isChildOfNodeWithKind(t, 276)) {
       n = e.Diagnostics.Octal_literals_are_not_allowed_in_enums_members_initializer_Use_the_syntax_0;
      }
      if (n) {
       var r = e.isPrefixUnaryExpression(t.parent) && t.parent.operator === 38;
       var i = (r ? "-" : "") + "0o" + t.text;
       return CC(r ? t.parent : t, n, i);
      }
     }
     return false;
    }
    function OC(t, n, r, i, a) {
     var o = e.getSourceFileOfNode(t);
     if (!kC(o)) {
      var s = e.getSpanOfTokenAtPosition(o, t.pos);
      Vt.add(e.createFileDiagnostic(o, e.textSpanEnd(s), 0, n, r, i, a));
      return true;
     }
     return false;
    }
    function MC() {
     if (!Ke) {
      Ke = [];
      qe.forEach(function(e, n) {
       if (t.test(n)) {
        Ke.push(e);
       }
      });
     }
     return Ke;
    }
    function LC(t) {
     if (N === e.ModuleKind.ES2015) {
      return CC(t, e.Diagnostics.Dynamic_import_is_only_supported_when_module_flag_is_commonjs_or_esNext);
     }
     if (t.typeArguments) {
      return CC(t, e.Diagnostics.Dynamic_import_cannot_have_type_arguments);
     }
     var n = t.arguments;
     if (n.length !== 1) {
      return CC(t, e.Diagnostics.Dynamic_import_must_have_one_specifier_as_an_argument);
     }
     if (e.isSpreadElement(n[0])) {
      return CC(n[0], e.Diagnostics.Specifier_of_dynamic_import_cannot_be_spread_element);
     }
     return false;
    }
   }
   e.createTypeChecker = f;
   function d(t) {
    switch (t.parent.kind) {
    case 251:
    case 255:
     return e.isIdentifier(t);

    default:
     return e.isDeclarationName(t);
    }
   }
   function p(e) {
    switch (e.kind) {
    case 248:
    case 246:
    case 249:
    case 251:
     return true;

    case 71:
     return e.parent.kind === 251;

    default:
     return false;
    }
   }
   var m;
   (function(e) {
    e.JSX = "JSX";
    e.IntrinsicElements = "IntrinsicElements";
    e.ElementClass = "ElementClass";
    e.ElementAttributesPropertyNameContainer = "ElementAttributesProperty";
    e.ElementChildrenAttributeNameContainer = "ElementChildrenAttribute";
    e.Element = "Element";
    e.IntrinsicAttributes = "IntrinsicAttributes";
    e.IntrinsicClassAttributes = "IntrinsicClassAttributes";
    e.LibraryManagedAttributes = "LibraryManagedAttributes";
   })(m || (m = {}));
   function _(e) {
    return !!(e.flags & 448);
   }
  })(s || (s = {}));
  var s;
  (function(e) {
   function t(t) {
    var n = e.createNode(t, -1, -1);
    n.flags |= 8;
    return n;
   }
   function n(t, n) {
    if (t !== n) {
     Ta(t, n);
     Zi(t, n);
     e.aggregateTransformFlags(t);
    }
    return t;
   }
   e.updateNode = n;
   function r(t, n) {
    if (!t || t === e.emptyArray) {
     t = [];
    } else if (e.isNodeArray(t)) {
     return t;
    }
    var r = t;
    r.pos = -1;
    r.end = -1;
    r.hasTrailingComma = n;
    return r;
   }
   e.createNodeArray = r;
   function i(e) {
    if (e === undefined) {
     return e;
    }
    var n = t(e.kind);
    n.flags |= e.flags;
    Ta(n, e);
    for (var r in e) {
     if (n.hasOwnProperty(r) || !e.hasOwnProperty(r)) {
      continue;
     }
     n[r] = e[r];
    }
    return n;
   }
   e.getSynthesizedClone = i;
   function a(t, n) {
    if (typeof t === "number") {
     return o(t + "");
    }
    if (typeof t === "boolean") {
     return t ? S() : w();
    }
    if (e.isString(t)) {
     var r = s(t);
     if (n) r.singleQuote = true;
     return r;
    }
    return u(t);
   }
   e.createLiteral = a;
   function o(e) {
    var n = t(8);
    n.text = e;
    n.numericLiteralFlags = 0;
    return n;
   }
   e.createNumericLiteral = o;
   function s(e) {
    var n = t(9);
    n.text = e;
    return n;
   }
   e.createStringLiteral = s;
   function c(e) {
    var n = t(12);
    n.text = e;
    return n;
   }
   e.createRegularExpressionLiteral = c;
   function u(t) {
    var n = s(e.getTextOfIdentifierOrLiteral(t));
    n.textSourceNode = t;
    return n;
   }
   function l(n, i) {
    var a = t(71);
    a.escapedText = e.escapeLeadingUnderscores(n);
    a.originalKeywordKind = n ? e.stringToToken(n) : 0;
    a.autoGenerateFlags = 0;
    a.autoGenerateId = 0;
    if (i) {
     a.typeArguments = r(i);
    }
    return a;
   }
   e.createIdentifier = l;
   function f(t, r) {
    return t.typeArguments !== r ? n(l(e.idText(t), r), t) : t;
   }
   e.updateIdentifier = f;
   var d = 0;
   function p(e, t) {
    var n = l("");
    n.autoGenerateFlags = 1;
    n.autoGenerateId = d;
    d++;
    if (e) {
     e(n);
    }
    if (t) {
     n.autoGenerateFlags |= 8;
    }
    return n;
   }
   e.createTempVariable = p;
   function m() {
    var e = l("");
    e.autoGenerateFlags = 2;
    e.autoGenerateId = d;
    d++;
    return e;
   }
   e.createLoopVariable = m;
   function _(e) {
    var t = l(e);
    t.autoGenerateFlags = 3;
    t.autoGenerateId = d;
    d++;
    return t;
   }
   e.createUniqueName = _;
   function g(e) {
    var t = l(e);
    t.autoGenerateFlags = 3 | 16;
    t.autoGenerateId = d;
    d++;
    return t;
   }
   e.createOptimisticUniqueName = g;
   function h(e) {
    var t = g(e);
    t.autoGenerateFlags |= 32;
    return t;
   }
   e.createFileLevelUniqueName = h;
   function v(t, n) {
    var r = l(t && e.isIdentifier(t) ? e.idText(t) : "");
    r.autoGenerateFlags = 4 | n;
    r.autoGenerateId = d;
    r.original = t;
    d++;
    return r;
   }
   e.getGeneratedNameForNode = v;
   function y(e) {
    return t(e);
   }
   e.createToken = y;
   function b() {
    return t(97);
   }
   e.createSuper = b;
   function x() {
    return t(99);
   }
   e.createThis = x;
   function k() {
    return t(95);
   }
   e.createNull = k;
   function S() {
    return t(101);
   }
   e.createTrue = S;
   function w() {
    return t(86);
   }
   e.createFalse = w;
   function C(e) {
    return y(e);
   }
   e.createModifier = C;
   function D(e) {
    var t = [];
    if (e & 1) {
     t.push(C(84));
    }
    if (e & 2) {
     t.push(C(124));
    }
    if (e & 512) {
     t.push(C(79));
    }
    if (e & 2048) {
     t.push(C(76));
    }
    if (e & 4) {
     t.push(C(114));
    }
    if (e & 8) {
     t.push(C(112));
    }
    if (e & 16) {
     t.push(C(113));
    }
    if (e & 128) {
     t.push(C(117));
    }
    if (e & 32) {
     t.push(C(115));
    }
    if (e & 64) {
     t.push(C(132));
    }
    if (e & 256) {
     t.push(C(120));
    }
    return t;
   }
   e.createModifiersFromModifierFlags = D;
   function T(e, n) {
    var r = t(146);
    r.left = e;
    r.right = Hi(n);
    return r;
   }
   e.createQualifiedName = T;
   function E(e, t, r) {
    return e.left !== t || e.right !== r ? n(T(t, r), e) : e;
   }
   e.updateQualifiedName = E;
   function N(t) {
    return e.isCommaSequence(t) ? vt(t) : t;
   }
   function A(e) {
    var n = t(147);
    n.expression = N(e);
    return n;
   }
   e.createComputedPropertyName = A;
   function F(e, t) {
    return e.expression !== t ? n(A(t), e) : e;
   }
   e.updateComputedPropertyName = F;
   function P(e, n, r) {
    var i = t(148);
    i.name = Hi(e);
    i.constraint = n;
    i.default = r;
    return i;
   }
   e.createTypeParameterDeclaration = P;
   function I(e, t, r, i) {
    return e.name !== t || e.constraint !== r || e.default !== i ? n(P(t, r, i), e) : e;
   }
   e.updateTypeParameterDeclaration = I;
   function O(n, r, i, a, o, s, c) {
    var u = t(149);
    u.decorators = $i(n);
    u.modifiers = $i(r);
    u.dotDotDotToken = i;
    u.name = Hi(a);
    u.questionToken = o;
    u.type = s;
    u.initializer = c ? e.parenthesizeExpressionForList(c) : undefined;
    return u;
   }
   e.createParameter = O;
   function M(e, t, r, i, a, o, s, c) {
    return e.decorators !== t || e.modifiers !== r || e.dotDotDotToken !== i || e.name !== a || e.questionToken !== o || e.type !== s || e.initializer !== c ? n(O(t, r, i, a, o, s, c), e) : e;
   }
   e.updateParameter = M;
   function L(n) {
    var r = t(150);
    r.expression = e.parenthesizeForAccess(n);
    return r;
   }
   e.createDecorator = L;
   function R(e, t) {
    return e.expression !== t ? n(L(t), e) : e;
   }
   e.updateDecorator = R;
   function B(e, n, r, i, a) {
    var o = t(151);
    o.modifiers = $i(e);
    o.name = Hi(n);
    o.questionToken = r;
    o.type = i;
    o.initializer = a;
    return o;
   }
   e.createPropertySignature = B;
   function z(e, t, r, i, a, o) {
    return e.modifiers !== t || e.name !== r || e.questionToken !== i || e.type !== a || e.initializer !== o ? n(B(t, r, i, a, o), e) : e;
   }
   e.updatePropertySignature = z;
   function j(e, n, r, i, a, o) {
    var s = t(152);
    s.decorators = $i(e);
    s.modifiers = $i(n);
    s.name = Hi(r);
    s.questionToken = i !== undefined && i.kind === 55 ? i : undefined;
    s.exclamationToken = i !== undefined && i.kind === 51 ? i : undefined;
    s.type = a;
    s.initializer = o;
    return s;
   }
   e.createProperty = j;
   function q(e, t, r, i, a, o, s) {
    return e.decorators !== t || e.modifiers !== r || e.name !== i || e.questionToken !== (a !== undefined && a.kind === 55 ? a : undefined) || e.exclamationToken !== (a !== undefined && a.kind === 51 ? a : undefined) || e.type !== o || e.initializer !== s ? n(j(t, r, i, a, o, s), e) : e;
   }
   e.updateProperty = q;
   function U(e, t, n, r, i) {
    var a = ie(153, e, t, n);
    a.name = Hi(r);
    a.questionToken = i;
    return a;
   }
   e.createMethodSignature = U;
   function J(e, t, r, i, a, o) {
    return e.typeParameters !== t || e.parameters !== r || e.type !== i || e.name !== a || e.questionToken !== o ? n(U(t, r, i, a, o), e) : e;
   }
   e.updateMethodSignature = J;
   function K(e, n, i, a, o, s, c, u, l) {
    var f = t(154);
    f.decorators = $i(e);
    f.modifiers = $i(n);
    f.asteriskToken = i;
    f.name = Hi(a);
    f.questionToken = o;
    f.typeParameters = $i(s);
    f.parameters = r(c);
    f.type = u;
    f.body = l;
    return f;
   }
   e.createMethod = K;
   function V(e, t, r, i, a, o, s, c, u, l) {
    return e.decorators !== t || e.modifiers !== r || e.asteriskToken !== i || e.name !== a || e.questionToken !== o || e.typeParameters !== s || e.parameters !== c || e.type !== u || e.body !== l ? n(K(t, r, i, a, o, s, c, u, l), e) : e;
   }
   e.updateMethod = V;
   function W(e, n, i, a) {
    var o = t(155);
    o.decorators = $i(e);
    o.modifiers = $i(n);
    o.typeParameters = undefined;
    o.parameters = r(i);
    o.type = undefined;
    o.body = a;
    return o;
   }
   e.createConstructor = W;
   function H(e, t, r, i, a) {
    return e.decorators !== t || e.modifiers !== r || e.parameters !== i || e.body !== a ? n(W(t, r, i, a), e) : e;
   }
   e.updateConstructor = H;
   function G(e, n, i, a, o, s) {
    var c = t(156);
    c.decorators = $i(e);
    c.modifiers = $i(n);
    c.name = Hi(i);
    c.typeParameters = undefined;
    c.parameters = r(a);
    c.type = o;
    c.body = s;
    return c;
   }
   e.createGetAccessor = G;
   function $(e, t, r, i, a, o, s) {
    return e.decorators !== t || e.modifiers !== r || e.name !== i || e.parameters !== a || e.type !== o || e.body !== s ? n(G(t, r, i, a, o, s), e) : e;
   }
   e.updateGetAccessor = $;
   function X(e, n, i, a, o) {
    var s = t(157);
    s.decorators = $i(e);
    s.modifiers = $i(n);
    s.name = Hi(i);
    s.typeParameters = undefined;
    s.parameters = r(a);
    s.body = o;
    return s;
   }
   e.createSetAccessor = X;
   function Q(e, t, r, i, a, o) {
    return e.decorators !== t || e.modifiers !== r || e.name !== i || e.parameters !== a || e.body !== o ? n(X(t, r, i, a, o), e) : e;
   }
   e.updateSetAccessor = Q;
   function Y(e, t, n) {
    return ie(158, e, t, n);
   }
   e.createCallSignature = Y;
   function Z(e, t, n, r) {
    return ae(e, t, n, r);
   }
   e.updateCallSignature = Z;
   function ee(e, t, n) {
    return ie(159, e, t, n);
   }
   e.createConstructSignature = ee;
   function te(e, t, n, r) {
    return ae(e, t, n, r);
   }
   e.updateConstructSignature = te;
   function ne(e, n, i, a) {
    var o = t(160);
    o.decorators = $i(e);
    o.modifiers = $i(n);
    o.parameters = r(i);
    o.type = a;
    return o;
   }
   e.createIndexSignature = ne;
   function re(e, t, r, i, a) {
    return e.parameters !== i || e.type !== a || e.decorators !== t || e.modifiers !== r ? n(ne(t, r, i, a), e) : e;
   }
   e.updateIndexSignature = re;
   function ie(e, n, r, i, a) {
    var o = t(e);
    o.typeParameters = $i(n);
    o.parameters = $i(r);
    o.type = i;
    o.typeArguments = $i(a);
    return o;
   }
   e.createSignatureDeclaration = ie;
   function ae(e, t, r, i) {
    return e.typeParameters !== t || e.parameters !== r || e.type !== i ? n(ie(e.kind, t, r, i), e) : e;
   }
   function oe(e) {
    return t(e);
   }
   e.createKeywordTypeNode = oe;
   function se(e, n) {
    var r = t(161);
    r.parameterName = Hi(e);
    r.type = n;
    return r;
   }
   e.createTypePredicateNode = se;
   function ce(e, t, r) {
    return e.parameterName !== t || e.type !== r ? n(se(t, r), e) : e;
   }
   e.updateTypePredicateNode = ce;
   function ue(n, r) {
    var i = t(162);
    i.typeName = Hi(n);
    i.typeArguments = r && e.parenthesizeTypeParameters(r);
    return i;
   }
   e.createTypeReferenceNode = ue;
   function le(e, t, r) {
    return e.typeName !== t || e.typeArguments !== r ? n(ue(t, r), e) : e;
   }
   e.updateTypeReferenceNode = le;
   function fe(e, t, n) {
    return ie(163, e, t, n);
   }
   e.createFunctionTypeNode = fe;
   function de(e, t, n, r) {
    return ae(e, t, n, r);
   }
   e.updateFunctionTypeNode = de;
   function pe(e, t, n) {
    return ie(164, e, t, n);
   }
   e.createConstructorTypeNode = pe;
   function me(e, t, n, r) {
    return ae(e, t, n, r);
   }
   e.updateConstructorTypeNode = me;
   function _e(e) {
    var n = t(165);
    n.exprName = e;
    return n;
   }
   e.createTypeQueryNode = _e;
   function ge(e, t) {
    return e.exprName !== t ? n(_e(t), e) : e;
   }
   e.updateTypeQueryNode = ge;
   function he(e) {
    var n = t(166);
    n.members = r(e);
    return n;
   }
   e.createTypeLiteralNode = he;
   function ve(e, t) {
    return e.members !== t ? n(he(t), e) : e;
   }
   e.updateTypeLiteralNode = ve;
   function ye(n) {
    var r = t(167);
    r.elementType = e.parenthesizeArrayTypeMember(n);
    return r;
   }
   e.createArrayTypeNode = ye;
   function be(e, t) {
    return e.elementType !== t ? n(ye(t), e) : e;
   }
   e.updateArrayTypeNode = be;
   function xe(e) {
    var n = t(168);
    n.elementTypes = r(e);
    return n;
   }
   e.createTupleTypeNode = xe;
   function ke(e, t) {
    return e.elementTypes !== t ? n(xe(t), e) : e;
   }
   e.updateTupleTypeNode = ke;
   function Se(n) {
    var r = t(169);
    r.type = e.parenthesizeArrayTypeMember(n);
    return r;
   }
   e.createOptionalTypeNode = Se;
   function we(e, t) {
    return e.type !== t ? n(Se(t), e) : e;
   }
   e.updateOptionalTypeNode = we;
   function Ce(e) {
    var n = t(170);
    n.type = e;
    return n;
   }
   e.createRestTypeNode = Ce;
   function De(e, t) {
    return e.type !== t ? n(Ce(t), e) : e;
   }
   e.updateRestTypeNode = De;
   function Te(e) {
    return Fe(171, e);
   }
   e.createUnionTypeNode = Te;
   function Ee(e, t) {
    return Pe(e, t);
   }
   e.updateUnionTypeNode = Ee;
   function Ne(e) {
    return Fe(172, e);
   }
   e.createIntersectionTypeNode = Ne;
   function Ae(e, t) {
    return Pe(e, t);
   }
   e.updateIntersectionTypeNode = Ae;
   function Fe(n, r) {
    var i = t(n);
    i.types = e.parenthesizeElementTypeMembers(r);
    return i;
   }
   e.createUnionOrIntersectionTypeNode = Fe;
   function Pe(e, t) {
    return e.types !== t ? n(Fe(e.kind, t), e) : e;
   }
   function Ie(n, r, i, a) {
    var o = t(173);
    o.checkType = e.parenthesizeConditionalTypeMember(n);
    o.extendsType = e.parenthesizeConditionalTypeMember(r);
    o.trueType = i;
    o.falseType = a;
    return o;
   }
   e.createConditionalTypeNode = Ie;
   function Oe(e, t, r, i, a) {
    return e.checkType !== t || e.extendsType !== r || e.trueType !== i || e.falseType !== a ? n(Ie(t, r, i, a), e) : e;
   }
   e.updateConditionalTypeNode = Oe;
   function Me(e) {
    var n = t(174);
    n.typeParameter = e;
    return n;
   }
   e.createInferTypeNode = Me;
   function Le(e, t) {
    return e.typeParameter !== t ? n(Me(t), e) : e;
   }
   e.updateInferTypeNode = Le;
   function Re(e, n, r, i) {
    var a = t(181);
    a.argument = e;
    a.qualifier = n;
    a.typeArguments = $i(r);
    a.isTypeOf = i;
    return a;
   }
   e.createImportTypeNode = Re;
   function Be(e, t, r, i, a) {
    return e.argument !== t || e.qualifier !== r || e.typeArguments !== i || e.isTypeOf !== a ? n(Re(t, r, i, a), e) : e;
   }
   e.updateImportTypeNode = Be;
   function ze(e) {
    var n = t(175);
    n.type = e;
    return n;
   }
   e.createParenthesizedType = ze;
   function je(e, t) {
    return e.type !== t ? n(ze(t), e) : e;
   }
   e.updateParenthesizedType = je;
   function qe() {
    return t(176);
   }
   e.createThisTypeNode = qe;
   function Ue(n, r) {
    var i = t(177);
    i.operator = typeof n === "number" ? n : 128;
    i.type = e.parenthesizeElementTypeMember(typeof n === "number" ? r : n);
    return i;
   }
   e.createTypeOperatorNode = Ue;
   function Je(e, t) {
    return e.type !== t ? n(Ue(e.operator, t), e) : e;
   }
   e.updateTypeOperatorNode = Je;
   function Ke(n, r) {
    var i = t(178);
    i.objectType = e.parenthesizeElementTypeMember(n);
    i.indexType = r;
    return i;
   }
   e.createIndexedAccessTypeNode = Ke;
   function Ve(e, t, r) {
    return e.objectType !== t || e.indexType !== r ? n(Ke(t, r), e) : e;
   }
   e.updateIndexedAccessTypeNode = Ve;
   function We(e, n, r, i) {
    var a = t(179);
    a.readonlyToken = e;
    a.typeParameter = n;
    a.questionToken = r;
    a.type = i;
    return a;
   }
   e.createMappedTypeNode = We;
   function He(e, t, r, i, a) {
    return e.readonlyToken !== t || e.typeParameter !== r || e.questionToken !== i || e.type !== a ? n(We(t, r, i, a), e) : e;
   }
   e.updateMappedTypeNode = He;
   function Ge(e) {
    var n = t(180);
    n.literal = e;
    return n;
   }
   e.createLiteralTypeNode = Ge;
   function $e(e, t) {
    return e.literal !== t ? n(Ge(t), e) : e;
   }
   e.updateLiteralTypeNode = $e;
   function Xe(e) {
    var n = t(182);
    n.elements = r(e);
    return n;
   }
   e.createObjectBindingPattern = Xe;
   function Qe(e, t) {
    return e.elements !== t ? n(Xe(t), e) : e;
   }
   e.updateObjectBindingPattern = Qe;
   function Ye(e) {
    var n = t(183);
    n.elements = r(e);
    return n;
   }
   e.createArrayBindingPattern = Ye;
   function Ze(e, t) {
    return e.elements !== t ? n(Ye(t), e) : e;
   }
   e.updateArrayBindingPattern = Ze;
   function et(e, n, r, i) {
    var a = t(184);
    a.dotDotDotToken = e;
    a.propertyName = Hi(n);
    a.name = Hi(r);
    a.initializer = i;
    return a;
   }
   e.createBindingElement = et;
   function tt(e, t, r, i, a) {
    return e.propertyName !== r || e.dotDotDotToken !== t || e.name !== i || e.initializer !== a ? n(et(t, r, i, a), e) : e;
   }
   e.updateBindingElement = tt;
   function nt(n, i) {
    var a = t(185);
    a.elements = e.parenthesizeListElements(r(n));
    if (i) a.multiLine = true;
    return a;
   }
   e.createArrayLiteral = nt;
   function rt(e, t) {
    return e.elements !== t ? n(nt(t, e.multiLine), e) : e;
   }
   e.updateArrayLiteral = rt;
   function it(e, n) {
    var i = t(186);
    i.properties = r(e);
    if (n) i.multiLine = true;
    return i;
   }
   e.createObjectLiteral = it;
   function at(e, t) {
    return e.properties !== t ? n(it(t, e.multiLine), e) : e;
   }
   e.updateObjectLiteral = at;
   function ot(n, r) {
    var i = t(187);
    i.expression = e.parenthesizeForAccess(n);
    i.name = Hi(r);
    ea(i, 131072);
    return i;
   }
   e.createPropertyAccess = ot;
   function st(t, r, i) {
    return t.expression !== r || t.name !== i ? n(ea(ot(r, i), e.getEmitFlags(t)), t) : t;
   }
   e.updatePropertyAccess = st;
   function ct(n, r) {
    var i = t(188);
    i.expression = e.parenthesizeForAccess(n);
    i.argumentExpression = Gi(r);
    return i;
   }
   e.createElementAccess = ct;
   function ut(e, t, r) {
    return e.expression !== t || e.argumentExpression !== r ? n(ct(t, r), e) : e;
   }
   e.updateElementAccess = ut;
   function lt(n, i, a) {
    var o = t(189);
    o.expression = e.parenthesizeForAccess(n);
    o.typeArguments = $i(i);
    o.arguments = e.parenthesizeListElements(r(a));
    return o;
   }
   e.createCall = lt;
   function ft(e, t, r, i) {
    return e.expression !== t || e.typeArguments !== r || e.arguments !== i ? n(lt(t, r, i), e) : e;
   }
   e.updateCall = ft;
   function dt(n, i, a) {
    var o = t(190);
    o.expression = e.parenthesizeForNew(n);
    o.typeArguments = $i(i);
    o.arguments = a ? e.parenthesizeListElements(r(a)) : undefined;
    return o;
   }
   e.createNew = dt;
   function pt(e, t, r, i) {
    return e.expression !== t || e.typeArguments !== r || e.arguments !== i ? n(dt(t, r, i), e) : e;
   }
   e.updateNew = pt;
   function mt(n, r, i) {
    var a = t(191);
    a.tag = e.parenthesizeForAccess(n);
    if (i) {
     a.typeArguments = $i(r);
     a.template = i;
    } else {
     a.typeArguments = undefined;
     a.template = r;
    }
    return a;
   }
   e.createTaggedTemplate = mt;
   function _t(e, t, r, i) {
    return e.tag !== t || (i ? e.typeArguments !== r || e.template !== i : e.typeArguments !== undefined || e.template !== r) ? n(mt(t, r, i), e) : e;
   }
   e.updateTaggedTemplate = _t;
   function gt(n, r) {
    var i = t(192);
    i.type = n;
    i.expression = e.parenthesizePrefixOperand(r);
    return i;
   }
   e.createTypeAssertion = gt;
   function ht(e, t, r) {
    return e.type !== t || e.expression !== r ? n(gt(t, r), e) : e;
   }
   e.updateTypeAssertion = ht;
   function vt(e) {
    var n = t(193);
    n.expression = e;
    return n;
   }
   e.createParen = vt;
   function yt(e, t) {
    return e.expression !== t ? n(vt(t), e) : e;
   }
   e.updateParen = yt;
   function bt(e, n, i, a, o, s, c) {
    var u = t(194);
    u.modifiers = $i(e);
    u.asteriskToken = n;
    u.name = Hi(i);
    u.typeParameters = $i(a);
    u.parameters = r(o);
    u.type = s;
    u.body = c;
    return u;
   }
   e.createFunctionExpression = bt;
   function xt(e, t, r, i, a, o, s, c) {
    return e.name !== i || e.modifiers !== t || e.asteriskToken !== r || e.typeParameters !== a || e.parameters !== o || e.type !== s || e.body !== c ? n(bt(t, r, i, a, o, s, c), e) : e;
   }
   e.updateFunctionExpression = xt;
   function kt(n, i, a, o, s, c) {
    var u = t(195);
    u.modifiers = $i(n);
    u.typeParameters = $i(i);
    u.parameters = r(a);
    u.type = o;
    u.equalsGreaterThanToken = s || y(36);
    u.body = e.parenthesizeConciseBody(c);
    return u;
   }
   e.createArrowFunction = kt;
   function St(t, r, i, a, o, s, c) {
    var u;
    var l;
    if (c === undefined) {
     u = t.equalsGreaterThanToken;
     l = e.cast(s, e.isConciseBody);
    } else {
     u = e.cast(s, function(e) {
      return e.kind === 36;
     });
     l = c;
    }
    return t.modifiers !== r || t.typeParameters !== i || t.parameters !== a || t.type !== o || t.equalsGreaterThanToken !== u || t.body !== l ? n(kt(r, i, a, o, u, l), t) : t;
   }
   e.updateArrowFunction = St;
   function wt(n) {
    var r = t(196);
    r.expression = e.parenthesizePrefixOperand(n);
    return r;
   }
   e.createDelete = wt;
   function Ct(e, t) {
    return e.expression !== t ? n(wt(t), e) : e;
   }
   e.updateDelete = Ct;
   function Dt(n) {
    var r = t(197);
    r.expression = e.parenthesizePrefixOperand(n);
    return r;
   }
   e.createTypeOf = Dt;
   function Tt(e, t) {
    return e.expression !== t ? n(Dt(t), e) : e;
   }
   e.updateTypeOf = Tt;
   function Et(n) {
    var r = t(198);
    r.expression = e.parenthesizePrefixOperand(n);
    return r;
   }
   e.createVoid = Et;
   function Nt(e, t) {
    return e.expression !== t ? n(Et(t), e) : e;
   }
   e.updateVoid = Nt;
   function At(n) {
    var r = t(199);
    r.expression = e.parenthesizePrefixOperand(n);
    return r;
   }
   e.createAwait = At;
   function Ft(e, t) {
    return e.expression !== t ? n(At(t), e) : e;
   }
   e.updateAwait = Ft;
   function Pt(n, r) {
    var i = t(200);
    i.operator = n;
    i.operand = e.parenthesizePrefixOperand(r);
    return i;
   }
   e.createPrefix = Pt;
   function It(e, t) {
    return e.operand !== t ? n(Pt(e.operator, t), e) : e;
   }
   e.updatePrefix = It;
   function Ot(n, r) {
    var i = t(201);
    i.operand = e.parenthesizePostfixOperand(n);
    i.operator = r;
    return i;
   }
   e.createPostfix = Ot;
   function Mt(e, t) {
    return e.operand !== t ? n(Ot(t, e.operator), e) : e;
   }
   e.updatePostfix = Mt;
   function Lt(n, r, i) {
    var a = t(202);
    var o = Xi(r);
    var s = o.kind;
    a.left = e.parenthesizeBinaryOperand(s, n, true, undefined);
    a.operatorToken = o;
    a.right = e.parenthesizeBinaryOperand(s, i, false, a.left);
    return a;
   }
   e.createBinary = Lt;
   function Rt(e, t, r, i) {
    return e.left !== t || e.right !== r ? n(Lt(t, i || e.operatorToken, r), e) : e;
   }
   e.updateBinary = Rt;
   function Bt(n, r, i, a, o) {
    var s = t(203);
    s.condition = e.parenthesizeForConditionalHead(n);
    s.questionToken = o ? r : y(55);
    s.whenTrue = e.parenthesizeSubexpressionOfConditionalExpression(o ? i : r);
    s.colonToken = o ? a : y(56);
    s.whenFalse = e.parenthesizeSubexpressionOfConditionalExpression(o ? o : i);
    return s;
   }
   e.createConditional = Bt;
   function zt(t, r) {
    var i = [];
    for (var a = 2; a < arguments.length; a++) {
     i[a - 2] = arguments[a];
    }
    if (i.length === 2) {
     var o = i[0], s = i[1];
     return zt(t, r, t.questionToken, o, t.colonToken, s);
    }
    e.Debug.assert(i.length === 4);
    var c = i[0], u = i[1], l = i[2], f = i[3];
    return t.condition !== r || t.questionToken !== c || t.whenTrue !== u || t.colonToken !== l || t.whenFalse !== f ? n(Bt(r, c, u, l, f), t) : t;
   }
   e.updateConditional = zt;
   function jt(e, n) {
    var i = t(204);
    i.head = e;
    i.templateSpans = r(n);
    return i;
   }
   e.createTemplateExpression = jt;
   function qt(e, t, r) {
    return e.head !== t || e.templateSpans !== r ? n(jt(t, r), e) : e;
   }
   e.updateTemplateExpression = qt;
   function Ut(e) {
    var n = t(14);
    n.text = e;
    return n;
   }
   e.createTemplateHead = Ut;
   function Jt(e) {
    var n = t(15);
    n.text = e;
    return n;
   }
   e.createTemplateMiddle = Jt;
   function Kt(e) {
    var n = t(16);
    n.text = e;
    return n;
   }
   e.createTemplateTail = Kt;
   function Vt(e) {
    var n = t(13);
    n.text = e;
    return n;
   }
   e.createNoSubstitutionTemplateLiteral = Vt;
   function Wt(e, n) {
    var r = t(205);
    r.asteriskToken = e && e.kind === 39 ? e : undefined;
    r.expression = e && e.kind !== 39 ? e : n;
    return r;
   }
   e.createYield = Wt;
   function Ht(e, t, r) {
    return e.expression !== r || e.asteriskToken !== t ? n(Wt(t, r), e) : e;
   }
   e.updateYield = Ht;
   function Gt(n) {
    var r = t(206);
    r.expression = e.parenthesizeExpressionForList(n);
    return r;
   }
   e.createSpread = Gt;
   function $t(e, t) {
    return e.expression !== t ? n(Gt(t), e) : e;
   }
   e.updateSpread = $t;
   function Xt(e, n, i, a, o) {
    var s = t(207);
    s.decorators = undefined;
    s.modifiers = $i(e);
    s.name = Hi(n);
    s.typeParameters = $i(i);
    s.heritageClauses = $i(a);
    s.members = r(o);
    return s;
   }
   e.createClassExpression = Xt;
   function Qt(e, t, r, i, a, o) {
    return e.modifiers !== t || e.name !== r || e.typeParameters !== i || e.heritageClauses !== a || e.members !== o ? n(Xt(t, r, i, a, o), e) : e;
   }
   e.updateClassExpression = Qt;
   function Yt() {
    return t(208);
   }
   e.createOmittedExpression = Yt;
   function Zt(n, r) {
    var i = t(209);
    i.expression = e.parenthesizeForAccess(r);
    i.typeArguments = $i(n);
    return i;
   }
   e.createExpressionWithTypeArguments = Zt;
   function en(e, t, r) {
    return e.typeArguments !== t || e.expression !== r ? n(Zt(t, r), e) : e;
   }
   e.updateExpressionWithTypeArguments = en;
   function tn(e, n) {
    var r = t(210);
    r.expression = e;
    r.type = n;
    return r;
   }
   e.createAsExpression = tn;
   function nn(e, t, r) {
    return e.expression !== t || e.type !== r ? n(tn(t, r), e) : e;
   }
   e.updateAsExpression = nn;
   function rn(n) {
    var r = t(211);
    r.expression = e.parenthesizeForAccess(n);
    return r;
   }
   e.createNonNullExpression = rn;
   function an(e, t) {
    return e.expression !== t ? n(rn(t), e) : e;
   }
   e.updateNonNullExpression = an;
   function on(e, n) {
    var r = t(212);
    r.keywordToken = e;
    r.name = n;
    return r;
   }
   e.createMetaProperty = on;
   function sn(e, t) {
    return e.name !== t ? n(on(e.keywordToken, t), e) : e;
   }
   e.updateMetaProperty = sn;
   function cn(e, n) {
    var r = t(214);
    r.expression = e;
    r.literal = n;
    return r;
   }
   e.createTemplateSpan = cn;
   function un(e, t, r) {
    return e.expression !== t || e.literal !== r ? n(cn(t, r), e) : e;
   }
   e.updateTemplateSpan = un;
   function ln() {
    return t(215);
   }
   e.createSemicolonClassElement = ln;
   function fn(e, n) {
    var i = t(216);
    i.statements = r(e);
    if (n) i.multiLine = n;
    return i;
   }
   e.createBlock = fn;
   function dn(e, t) {
    return e.statements !== t ? n(fn(t, e.multiLine), e) : e;
   }
   e.updateBlock = dn;
   function pn(n, r) {
    var i = t(217);
    i.decorators = undefined;
    i.modifiers = $i(n);
    i.declarationList = e.isArray(r) ? $n(r) : r;
    return i;
   }
   e.createVariableStatement = pn;
   function mn(e, t, r) {
    return e.modifiers !== t || e.declarationList !== r ? n(pn(t, r), e) : e;
   }
   e.updateVariableStatement = mn;
   function _n() {
    return t(218);
   }
   e.createEmptyStatement = _n;
   function gn(n) {
    var r = t(219);
    r.expression = e.parenthesizeExpressionForExpressionStatement(n);
    return r;
   }
   e.createExpressionStatement = gn;
   function hn(e, t) {
    return e.expression !== t ? n(gn(t), e) : e;
   }
   e.updateExpressionStatement = hn;
   e.createStatement = gn;
   e.updateStatement = hn;
   function vn(e, n, r) {
    var i = t(220);
    i.expression = e;
    i.thenStatement = n;
    i.elseStatement = r;
    return i;
   }
   e.createIf = vn;
   function yn(e, t, r, i) {
    return e.expression !== t || e.thenStatement !== r || e.elseStatement !== i ? n(vn(t, r, i), e) : e;
   }
   e.updateIf = yn;
   function bn(e, n) {
    var r = t(221);
    r.statement = e;
    r.expression = n;
    return r;
   }
   e.createDo = bn;
   function xn(e, t, r) {
    return e.statement !== t || e.expression !== r ? n(bn(t, r), e) : e;
   }
   e.updateDo = xn;
   function kn(e, n) {
    var r = t(222);
    r.expression = e;
    r.statement = n;
    return r;
   }
   e.createWhile = kn;
   function Sn(e, t, r) {
    return e.expression !== t || e.statement !== r ? n(kn(t, r), e) : e;
   }
   e.updateWhile = Sn;
   function wn(e, n, r, i) {
    var a = t(223);
    a.initializer = e;
    a.condition = n;
    a.incrementor = r;
    a.statement = i;
    return a;
   }
   e.createFor = wn;
   function Cn(e, t, r, i, a) {
    return e.initializer !== t || e.condition !== r || e.incrementor !== i || e.statement !== a ? n(wn(t, r, i, a), e) : e;
   }
   e.updateFor = Cn;
   function Dn(e, n, r) {
    var i = t(224);
    i.initializer = e;
    i.expression = n;
    i.statement = r;
    return i;
   }
   e.createForIn = Dn;
   function Tn(e, t, r, i) {
    return e.initializer !== t || e.expression !== r || e.statement !== i ? n(Dn(t, r, i), e) : e;
   }
   e.updateForIn = Tn;
   function En(e, n, r, i) {
    var a = t(225);
    a.awaitModifier = e;
    a.initializer = n;
    a.expression = r;
    a.statement = i;
    return a;
   }
   e.createForOf = En;
   function Nn(e, t, r, i, a) {
    return e.awaitModifier !== t || e.initializer !== r || e.expression !== i || e.statement !== a ? n(En(t, r, i, a), e) : e;
   }
   e.updateForOf = Nn;
   function An(e) {
    var n = t(226);
    n.label = Hi(e);
    return n;
   }
   e.createContinue = An;
   function Fn(e, t) {
    return e.label !== t ? n(An(t), e) : e;
   }
   e.updateContinue = Fn;
   function Pn(e) {
    var n = t(227);
    n.label = Hi(e);
    return n;
   }
   e.createBreak = Pn;
   function In(e, t) {
    return e.label !== t ? n(Pn(t), e) : e;
   }
   e.updateBreak = In;
   function On(e) {
    var n = t(228);
    n.expression = e;
    return n;
   }
   e.createReturn = On;
   function Mn(e, t) {
    return e.expression !== t ? n(On(t), e) : e;
   }
   e.updateReturn = Mn;
   function Ln(e, n) {
    var r = t(229);
    r.expression = e;
    r.statement = n;
    return r;
   }
   e.createWith = Ln;
   function Rn(e, t, r) {
    return e.expression !== t || e.statement !== r ? n(Ln(t, r), e) : e;
   }
   e.updateWith = Rn;
   function Bn(n, r) {
    var i = t(230);
    i.expression = e.parenthesizeExpressionForList(n);
    i.caseBlock = r;
    return i;
   }
   e.createSwitch = Bn;
   function zn(e, t, r) {
    return e.expression !== t || e.caseBlock !== r ? n(Bn(t, r), e) : e;
   }
   e.updateSwitch = zn;
   function jn(e, n) {
    var r = t(231);
    r.label = Hi(e);
    r.statement = n;
    return r;
   }
   e.createLabel = jn;
   function qn(e, t, r) {
    return e.label !== t || e.statement !== r ? n(jn(t, r), e) : e;
   }
   e.updateLabel = qn;
   function Un(e) {
    var n = t(232);
    n.expression = e;
    return n;
   }
   e.createThrow = Un;
   function Jn(e, t) {
    return e.expression !== t ? n(Un(t), e) : e;
   }
   e.updateThrow = Jn;
   function Kn(e, n, r) {
    var i = t(233);
    i.tryBlock = e;
    i.catchClause = n;
    i.finallyBlock = r;
    return i;
   }
   e.createTry = Kn;
   function Vn(e, t, r, i) {
    return e.tryBlock !== t || e.catchClause !== r || e.finallyBlock !== i ? n(Kn(t, r, i), e) : e;
   }
   e.updateTry = Vn;
   function Wn() {
    return t(234);
   }
   e.createDebuggerStatement = Wn;
   function Hn(n, r, i) {
    var a = t(235);
    a.name = Hi(n);
    a.type = r;
    a.initializer = i !== undefined ? e.parenthesizeExpressionForList(i) : undefined;
    return a;
   }
   e.createVariableDeclaration = Hn;
   function Gn(e, t, r, i) {
    return e.name !== t || e.type !== r || e.initializer !== i ? n(Hn(t, r, i), e) : e;
   }
   e.updateVariableDeclaration = Gn;
   function $n(e, n) {
    if (n === void 0) {
     n = 0;
    }
    var i = t(236);
    i.flags |= n & 3;
    i.declarations = r(e);
    return i;
   }
   e.createVariableDeclarationList = $n;
   function Xn(e, t) {
    return e.declarations !== t ? n($n(t, e.flags), e) : e;
   }
   e.updateVariableDeclarationList = Xn;
   function Qn(e, n, i, a, o, s, c, u) {
    var l = t(237);
    l.decorators = $i(e);
    l.modifiers = $i(n);
    l.asteriskToken = i;
    l.name = Hi(a);
    l.typeParameters = $i(o);
    l.parameters = r(s);
    l.type = c;
    l.body = u;
    return l;
   }
   e.createFunctionDeclaration = Qn;
   function Yn(e, t, r, i, a, o, s, c, u) {
    return e.decorators !== t || e.modifiers !== r || e.asteriskToken !== i || e.name !== a || e.typeParameters !== o || e.parameters !== s || e.type !== c || e.body !== u ? n(Qn(t, r, i, a, o, s, c, u), e) : e;
   }
   e.updateFunctionDeclaration = Yn;
   function Zn(e, n, i, a, o, s) {
    var c = t(238);
    c.decorators = $i(e);
    c.modifiers = $i(n);
    c.name = Hi(i);
    c.typeParameters = $i(a);
    c.heritageClauses = $i(o);
    c.members = r(s);
    return c;
   }
   e.createClassDeclaration = Zn;
   function er(e, t, r, i, a, o, s) {
    return e.decorators !== t || e.modifiers !== r || e.name !== i || e.typeParameters !== a || e.heritageClauses !== o || e.members !== s ? n(Zn(t, r, i, a, o, s), e) : e;
   }
   e.updateClassDeclaration = er;
   function tr(e, n, i, a, o, s) {
    var c = t(239);
    c.decorators = $i(e);
    c.modifiers = $i(n);
    c.name = Hi(i);
    c.typeParameters = $i(a);
    c.heritageClauses = $i(o);
    c.members = r(s);
    return c;
   }
   e.createInterfaceDeclaration = tr;
   function nr(e, t, r, i, a, o, s) {
    return e.decorators !== t || e.modifiers !== r || e.name !== i || e.typeParameters !== a || e.heritageClauses !== o || e.members !== s ? n(tr(t, r, i, a, o, s), e) : e;
   }
   e.updateInterfaceDeclaration = nr;
   function rr(e, n, r, i, a) {
    var o = t(240);
    o.decorators = $i(e);
    o.modifiers = $i(n);
    o.name = Hi(r);
    o.typeParameters = $i(i);
    o.type = a;
    return o;
   }
   e.createTypeAliasDeclaration = rr;
   function ir(e, t, r, i, a, o) {
    return e.decorators !== t || e.modifiers !== r || e.name !== i || e.typeParameters !== a || e.type !== o ? n(rr(t, r, i, a, o), e) : e;
   }
   e.updateTypeAliasDeclaration = ir;
   function ar(e, n, i, a) {
    var o = t(241);
    o.decorators = $i(e);
    o.modifiers = $i(n);
    o.name = Hi(i);
    o.members = r(a);
    return o;
   }
   e.createEnumDeclaration = ar;
   function or(e, t, r, i, a) {
    return e.decorators !== t || e.modifiers !== r || e.name !== i || e.members !== a ? n(ar(t, r, i, a), e) : e;
   }
   e.updateEnumDeclaration = or;
   function sr(e, n, r, i, a) {
    if (a === void 0) {
     a = 0;
    }
    var o = t(242);
    o.flags |= a & (16 | 4 | 512);
    o.decorators = $i(e);
    o.modifiers = $i(n);
    o.name = r;
    o.body = i;
    return o;
   }
   e.createModuleDeclaration = sr;
   function cr(e, t, r, i, a) {
    return e.decorators !== t || e.modifiers !== r || e.name !== i || e.body !== a ? n(sr(t, r, i, a, e.flags), e) : e;
   }
   e.updateModuleDeclaration = cr;
   function ur(e) {
    var n = t(243);
    n.statements = r(e);
    return n;
   }
   e.createModuleBlock = ur;
   function lr(e, t) {
    return e.statements !== t ? n(ur(t), e) : e;
   }
   e.updateModuleBlock = lr;
   function fr(e) {
    var n = t(244);
    n.clauses = r(e);
    return n;
   }
   e.createCaseBlock = fr;
   function dr(e, t) {
    return e.clauses !== t ? n(fr(t), e) : e;
   }
   e.updateCaseBlock = dr;
   function pr(e) {
    var n = t(245);
    n.name = Hi(e);
    return n;
   }
   e.createNamespaceExportDeclaration = pr;
   function mr(e, t) {
    return e.name !== t ? n(pr(t), e) : e;
   }
   e.updateNamespaceExportDeclaration = mr;
   function _r(e, n, r, i) {
    var a = t(246);
    a.decorators = $i(e);
    a.modifiers = $i(n);
    a.name = Hi(r);
    a.moduleReference = i;
    return a;
   }
   e.createImportEqualsDeclaration = _r;
   function gr(e, t, r, i, a) {
    return e.decorators !== t || e.modifiers !== r || e.name !== i || e.moduleReference !== a ? n(_r(t, r, i, a), e) : e;
   }
   e.updateImportEqualsDeclaration = gr;
   function hr(e, n, r, i) {
    var a = t(247);
    a.decorators = $i(e);
    a.modifiers = $i(n);
    a.importClause = r;
    a.moduleSpecifier = i;
    return a;
   }
   e.createImportDeclaration = hr;
   function vr(e, t, r, i, a) {
    return e.decorators !== t || e.modifiers !== r || e.importClause !== i || e.moduleSpecifier !== a ? n(hr(t, r, i, a), e) : e;
   }
   e.updateImportDeclaration = vr;
   function yr(e, n) {
    var r = t(248);
    r.name = e;
    r.namedBindings = n;
    return r;
   }
   e.createImportClause = yr;
   function br(e, t, r) {
    return e.name !== t || e.namedBindings !== r ? n(yr(t, r), e) : e;
   }
   e.updateImportClause = br;
   function xr(e) {
    var n = t(249);
    n.name = e;
    return n;
   }
   e.createNamespaceImport = xr;
   function kr(e, t) {
    return e.name !== t ? n(xr(t), e) : e;
   }
   e.updateNamespaceImport = kr;
   function Sr(e) {
    var n = t(250);
    n.elements = r(e);
    return n;
   }
   e.createNamedImports = Sr;
   function wr(e, t) {
    return e.elements !== t ? n(Sr(t), e) : e;
   }
   e.updateNamedImports = wr;
   function Cr(e, n) {
    var r = t(251);
    r.propertyName = e;
    r.name = n;
    return r;
   }
   e.createImportSpecifier = Cr;
   function Dr(e, t, r) {
    return e.propertyName !== t || e.name !== r ? n(Cr(t, r), e) : e;
   }
   e.updateImportSpecifier = Dr;
   function Tr(n, r, i, a) {
    var o = t(252);
    o.decorators = $i(n);
    o.modifiers = $i(r);
    o.isExportEquals = i;
    o.expression = i ? e.parenthesizeBinaryOperand(58, a, false, undefined) : e.parenthesizeDefaultExpression(a);
    return o;
   }
   e.createExportAssignment = Tr;
   function Er(e, t, r, i) {
    return e.decorators !== t || e.modifiers !== r || e.expression !== i ? n(Tr(t, r, e.isExportEquals, i), e) : e;
   }
   e.updateExportAssignment = Er;
   function Nr(e, n, r, i) {
    var a = t(253);
    a.decorators = $i(e);
    a.modifiers = $i(n);
    a.exportClause = r;
    a.moduleSpecifier = i;
    return a;
   }
   e.createExportDeclaration = Nr;
   function Ar(e, t, r, i, a) {
    return e.decorators !== t || e.modifiers !== r || e.exportClause !== i || e.moduleSpecifier !== a ? n(Nr(t, r, i, a), e) : e;
   }
   e.updateExportDeclaration = Ar;
   function Fr(e) {
    var n = t(254);
    n.elements = r(e);
    return n;
   }
   e.createNamedExports = Fr;
   function Pr(e, t) {
    return e.elements !== t ? n(Fr(t), e) : e;
   }
   e.updateNamedExports = Pr;
   function Ir(e, n) {
    var r = t(255);
    r.propertyName = Hi(e);
    r.name = Hi(n);
    return r;
   }
   e.createExportSpecifier = Ir;
   function Or(e, t, r) {
    return e.propertyName !== t || e.name !== r ? n(Ir(t, r), e) : e;
   }
   e.updateExportSpecifier = Or;
   function Mr(e) {
    var n = t(257);
    n.expression = e;
    return n;
   }
   e.createExternalModuleReference = Mr;
   function Lr(e, t) {
    return e.expression !== t ? n(Mr(t), e) : e;
   }
   e.updateExternalModuleReference = Lr;
   function Rr(e, n, i) {
    var a = t(258);
    a.openingElement = e;
    a.children = r(n);
    a.closingElement = i;
    return a;
   }
   e.createJsxElement = Rr;
   function Br(e, t, r, i) {
    return e.openingElement !== t || e.children !== r || e.closingElement !== i ? n(Rr(t, r, i), e) : e;
   }
   e.updateJsxElement = Br;
   function zr(e, n, i) {
    var a = t(259);
    a.tagName = e;
    a.typeArguments = n && r(n);
    a.attributes = i;
    return a;
   }
   e.createJsxSelfClosingElement = zr;
   function jr(e, t, r, i) {
    return e.tagName !== t || e.typeArguments !== r || e.attributes !== i ? n(zr(t, r, i), e) : e;
   }
   e.updateJsxSelfClosingElement = jr;
   function qr(e, n, i) {
    var a = t(260);
    a.tagName = e;
    a.typeArguments = n && r(n);
    a.attributes = i;
    return a;
   }
   e.createJsxOpeningElement = qr;
   function Ur(e, t, r, i) {
    return e.tagName !== t || e.typeArguments !== r || e.attributes !== i ? n(qr(t, r, i), e) : e;
   }
   e.updateJsxOpeningElement = Ur;
   function Jr(e) {
    var n = t(261);
    n.tagName = e;
    return n;
   }
   e.createJsxClosingElement = Jr;
   function Kr(e, t) {
    return e.tagName !== t ? n(Jr(t), e) : e;
   }
   e.updateJsxClosingElement = Kr;
   function Vr(e, n, i) {
    var a = t(262);
    a.openingFragment = e;
    a.children = r(n);
    a.closingFragment = i;
    return a;
   }
   e.createJsxFragment = Vr;
   function Wr(e, t, r, i) {
    return e.openingFragment !== t || e.children !== r || e.closingFragment !== i ? n(Vr(t, r, i), e) : e;
   }
   e.updateJsxFragment = Wr;
   function Hr(e, n) {
    var r = t(265);
    r.name = e;
    r.initializer = n;
    return r;
   }
   e.createJsxAttribute = Hr;
   function Gr(e, t, r) {
    return e.name !== t || e.initializer !== r ? n(Hr(t, r), e) : e;
   }
   e.updateJsxAttribute = Gr;
   function $r(e) {
    var n = t(266);
    n.properties = r(e);
    return n;
   }
   e.createJsxAttributes = $r;
   function Xr(e, t) {
    return e.properties !== t ? n($r(t), e) : e;
   }
   e.updateJsxAttributes = Xr;
   function Qr(e) {
    var n = t(267);
    n.expression = e;
    return n;
   }
   e.createJsxSpreadAttribute = Qr;
   function Yr(e, t) {
    return e.expression !== t ? n(Qr(t), e) : e;
   }
   e.updateJsxSpreadAttribute = Yr;
   function Zr(e, n) {
    var r = t(268);
    r.dotDotDotToken = e;
    r.expression = n;
    return r;
   }
   e.createJsxExpression = Zr;
   function ei(e, t) {
    return e.expression !== t ? n(Zr(e.dotDotDotToken, t), e) : e;
   }
   e.updateJsxExpression = ei;
   function ti(n, i) {
    var a = t(269);
    a.expression = e.parenthesizeExpressionForList(n);
    a.statements = r(i);
    return a;
   }
   e.createCaseClause = ti;
   function ni(e, t, r) {
    return e.expression !== t || e.statements !== r ? n(ti(t, r), e) : e;
   }
   e.updateCaseClause = ni;
   function ri(e) {
    var n = t(270);
    n.statements = r(e);
    return n;
   }
   e.createDefaultClause = ri;
   function ii(e, t) {
    return e.statements !== t ? n(ri(t), e) : e;
   }
   e.updateDefaultClause = ii;
   function ai(e, n) {
    var i = t(271);
    i.token = e;
    i.types = r(n);
    return i;
   }
   e.createHeritageClause = ai;
   function oi(e, t) {
    return e.types !== t ? n(ai(e.token, t), e) : e;
   }
   e.updateHeritageClause = oi;
   function si(n, r) {
    var i = t(272);
    i.variableDeclaration = e.isString(n) ? Hn(n) : n;
    i.block = r;
    return i;
   }
   e.createCatchClause = si;
   function ci(e, t, r) {
    return e.variableDeclaration !== t || e.block !== r ? n(si(t, r), e) : e;
   }
   e.updateCatchClause = ci;
   function ui(n, r) {
    var i = t(273);
    i.name = Hi(n);
    i.questionToken = undefined;
    i.initializer = e.parenthesizeExpressionForList(r);
    return i;
   }
   e.createPropertyAssignment = ui;
   function li(e, t, r) {
    return e.name !== t || e.initializer !== r ? n(ui(t, r), e) : e;
   }
   e.updatePropertyAssignment = li;
   function fi(n, r) {
    var i = t(274);
    i.name = Hi(n);
    i.objectAssignmentInitializer = r !== undefined ? e.parenthesizeExpressionForList(r) : undefined;
    return i;
   }
   e.createShorthandPropertyAssignment = fi;
   function di(e, t, r) {
    return e.name !== t || e.objectAssignmentInitializer !== r ? n(fi(t, r), e) : e;
   }
   e.updateShorthandPropertyAssignment = di;
   function pi(n) {
    var r = t(275);
    r.expression = n !== undefined ? e.parenthesizeExpressionForList(n) : undefined;
    return r;
   }
   e.createSpreadAssignment = pi;
   function mi(e, t) {
    return e.expression !== t ? n(pi(t), e) : e;
   }
   e.updateSpreadAssignment = mi;
   function _i(n, r) {
    var i = t(276);
    i.name = Hi(n);
    i.initializer = r && e.parenthesizeExpressionForList(r);
    return i;
   }
   e.createEnumMember = _i;
   function gi(e, t, r) {
    return e.name !== t || e.initializer !== r ? n(_i(t, r), e) : e;
   }
   e.updateEnumMember = gi;
   function hi(e, i, a, o, s, c, u) {
    if (e.statements !== i || a !== undefined && e.isDeclarationFile !== a || o !== undefined && e.referencedFiles !== o || s !== undefined && e.typeReferenceDirectives !== s || u !== undefined && e.libReferenceDirectives !== u || c !== undefined && e.hasNoDefaultLib !== c) {
     var l = t(277);
     l.flags |= e.flags;
     l.statements = r(i);
     l.endOfFileToken = e.endOfFileToken;
     l.fileName = e.fileName;
     l.path = e.path;
     l.text = e.text;
     l.isDeclarationFile = a === undefined ? e.isDeclarationFile : a;
     l.referencedFiles = o === undefined ? e.referencedFiles : o;
     l.typeReferenceDirectives = s === undefined ? e.typeReferenceDirectives : s;
     l.hasNoDefaultLib = c === undefined ? e.hasNoDefaultLib : c;
     l.libReferenceDirectives = u === undefined ? e.libReferenceDirectives : u;
     if (e.amdDependencies !== undefined) l.amdDependencies = e.amdDependencies;
     if (e.moduleName !== undefined) l.moduleName = e.moduleName;
     if (e.languageVariant !== undefined) l.languageVariant = e.languageVariant;
     if (e.renamedDependencies !== undefined) l.renamedDependencies = e.renamedDependencies;
     if (e.languageVersion !== undefined) l.languageVersion = e.languageVersion;
     if (e.scriptKind !== undefined) l.scriptKind = e.scriptKind;
     if (e.externalModuleIndicator !== undefined) l.externalModuleIndicator = e.externalModuleIndicator;
     if (e.commonJsModuleIndicator !== undefined) l.commonJsModuleIndicator = e.commonJsModuleIndicator;
     if (e.identifiers !== undefined) l.identifiers = e.identifiers;
     if (e.nodeCount !== undefined) l.nodeCount = e.nodeCount;
     if (e.identifierCount !== undefined) l.identifierCount = e.identifierCount;
     if (e.symbolCount !== undefined) l.symbolCount = e.symbolCount;
     if (e.parseDiagnostics !== undefined) l.parseDiagnostics = e.parseDiagnostics;
     if (e.bindDiagnostics !== undefined) l.bindDiagnostics = e.bindDiagnostics;
     if (e.bindSuggestionDiagnostics !== undefined) l.bindSuggestionDiagnostics = e.bindSuggestionDiagnostics;
     if (e.lineMap !== undefined) l.lineMap = e.lineMap;
     if (e.classifiableNames !== undefined) l.classifiableNames = e.classifiableNames;
     if (e.resolvedModules !== undefined) l.resolvedModules = e.resolvedModules;
     if (e.resolvedTypeReferenceDirectiveNames !== undefined) l.resolvedTypeReferenceDirectiveNames = e.resolvedTypeReferenceDirectiveNames;
     if (e.imports !== undefined) l.imports = e.imports;
     if (e.moduleAugmentations !== undefined) l.moduleAugmentations = e.moduleAugmentations;
     if (e.pragmas !== undefined) l.pragmas = e.pragmas;
     if (e.localJsxFactory !== undefined) l.localJsxFactory = e.localJsxFactory;
     if (e.localJsxNamespace !== undefined) l.localJsxNamespace = e.localJsxNamespace;
     return n(l, e);
    }
    return e;
   }
   e.updateSourceFileNode = hi;
   function vi(e) {
    var t = i(e);
    t.pos = e.pos;
    t.end = e.end;
    t.parent = e.parent;
    return t;
   }
   e.getMutableClone = vi;
   function yi(e) {
    var n = t(304);
    n.original = e;
    Zi(n, e);
    return n;
   }
   e.createNotEmittedStatement = yi;
   function bi(e) {
    var n = t(308);
    n.emitNode = {};
    n.original = e;
    return n;
   }
   e.createEndOfDeclarationMarker = bi;
   function xi(e) {
    var n = t(307);
    n.emitNode = {};
    n.original = e;
    return n;
   }
   e.createMergeDeclarationMarker = xi;
   function ki(e, n) {
    var r = t(305);
    r.expression = e;
    r.original = n;
    Zi(r, n);
    return r;
   }
   e.createPartiallyEmittedExpression = ki;
   function Si(e, t) {
    if (e.expression !== t) {
     return n(ki(t, e.original), e);
    }
    return e;
   }
   e.updatePartiallyEmittedExpression = Si;
   function wi(t) {
    if (e.nodeIsSynthesized(t) && !e.isParseTreeNode(t) && !t.original && !t.emitNode && !t.id) {
     if (t.kind === 306) {
      return t.elements;
     }
     if (e.isBinaryExpression(t) && t.operatorToken.kind === 26) {
      return [ t.left, t.right ];
     }
    }
    return t;
   }
   function Ci(n) {
    var i = t(306);
    i.elements = r(e.sameFlatMap(n, wi));
    return i;
   }
   e.createCommaList = Ci;
   function Di(e, t) {
    return e.elements !== t ? n(Ci(t), e) : e;
   }
   e.updateCommaList = Di;
   function Ti(t, n) {
    if (n === void 0) {
     n = e.emptyArray;
    }
    var r = e.createNode(278);
    r.prepends = n;
    r.sourceFiles = t;
    return r;
   }
   e.createBundle = Ti;
   function Ei(t, n, r) {
    var i = e.createNode(279);
    i.text = t;
    i.sourceMapPath = n;
    i.sourceMapText = r;
    return i;
   }
   e.createUnparsedSourceFile = Ei;
   function Ni(t, n, r, i, a, o) {
    var s = e.createNode(280);
    s.javascriptText = t;
    s.javascriptMapPath = r;
    s.javascriptMapText = i;
    s.declarationText = n;
    s.declarationMapPath = a;
    s.declarationMapText = o;
    return s;
   }
   e.createInputFiles = Ni;
   function Ai(t, n, r) {
    if (r === void 0) {
     r = e.emptyArray;
    }
    if (t.sourceFiles !== n || t.prepends !== r) {
     return Ti(n, r);
    }
    return t;
   }
   e.updateBundle = Ai;
   function Fi(e, t, n) {
    return lt(bt(undefined, undefined, undefined, undefined, t ? [ t ] : [], undefined, fn(e, true)), undefined, n ? [ n ] : []);
   }
   e.createImmediatelyInvokedFunctionExpression = Fi;
   function Pi(e, t, n) {
    return lt(kt(undefined, undefined, t ? [ t ] : [], undefined, undefined, fn(e, true)), undefined, n ? [ n ] : []);
   }
   e.createImmediatelyInvokedArrowFunction = Pi;
   function Ii(e, t) {
    return Lt(e, 26, t);
   }
   e.createComma = Ii;
   function Oi(e, t) {
    return Lt(e, 27, t);
   }
   e.createLessThan = Oi;
   function Mi(e, t) {
    return Lt(e, 58, t);
   }
   e.createAssignment = Mi;
   function Li(e, t) {
    return Lt(e, 34, t);
   }
   e.createStrictEquality = Li;
   function Ri(e, t) {
    return Lt(e, 35, t);
   }
   e.createStrictInequality = Ri;
   function Bi(e, t) {
    return Lt(e, 37, t);
   }
   e.createAdd = Bi;
   function zi(e, t) {
    return Lt(e, 38, t);
   }
   e.createSubtract = zi;
   function ji(e) {
    return Ot(e, 43);
   }
   e.createPostfixIncrement = ji;
   function qi(e, t) {
    return Lt(e, 53, t);
   }
   e.createLogicalAnd = qi;
   function Ui(e, t) {
    return Lt(e, 54, t);
   }
   e.createLogicalOr = Ui;
   function Ji(e) {
    return Pt(51, e);
   }
   e.createLogicalNot = Ji;
   function Ki() {
    return Et(a(0));
   }
   e.createVoidZero = Ki;
   function Vi(e) {
    return Tr(undefined, undefined, false, e);
   }
   e.createExportDefault = Vi;
   function Wi(e) {
    return Nr(undefined, undefined, Fr([ Ir(undefined, e) ]));
   }
   e.createExternalModuleExport = Wi;
   function Hi(t) {
    return e.isString(t) ? l(t) : t;
   }
   function Gi(t) {
    return e.isString(t) || typeof t === "number" ? a(t) : t;
   }
   function $i(e) {
    return e ? r(e) : undefined;
   }
   function Xi(e) {
    return typeof e === "number" ? y(e) : e;
   }
   function Qi(t) {
    t = e.getSourceFileOfNode(e.getParseTreeNode(t));
    var n = t && t.emitNode;
    var r = n && n.annotatedNodes;
    if (r) {
     for (var i = 0, a = r; i < a.length; i++) {
      var o = a[i];
      o.emitNode = undefined;
     }
    }
   }
   e.disposeEmitNodes = Qi;
   function Yi(t) {
    if (!t.emitNode) {
     if (e.isParseTreeNode(t)) {
      if (t.kind === 277) {
       return t.emitNode = {
        annotatedNodes: [ t ]
       };
      }
      var n = e.getSourceFileOfNode(t);
      Yi(n).annotatedNodes.push(t);
     }
     t.emitNode = {};
    }
    return t.emitNode;
   }
   e.getOrCreateEmitNode = Yi;
   function Zi(e, t) {
    if (t) {
     e.pos = t.pos;
     e.end = t.end;
    }
    return e;
   }
   e.setTextRange = Zi;
   function ea(e, t) {
    Yi(e).flags = t;
    return e;
   }
   e.setEmitFlags = ea;
   function ta(e, t) {
    var n = Yi(e);
    n.flags = n.flags | t;
    return e;
   }
   e.addEmitFlags = ta;
   function na(e) {
    var t = e.emitNode;
    return t && t.sourceMapRange || e;
   }
   e.getSourceMapRange = na;
   function ra(e, t) {
    Yi(e).sourceMapRange = t;
    return e;
   }
   e.setSourceMapRange = ra;
   var ia;
   function aa(t, n, r) {
    return new (ia || (ia = e.objectAllocator.getSourceMapSourceConstructor()))(t, n, r);
   }
   e.createSourceMapSource = aa;
   function oa(e, t) {
    var n = e.emitNode;
    var r = n && n.tokenSourceMapRanges;
    return r && r[t];
   }
   e.getTokenSourceMapRange = oa;
   function sa(e, t, n) {
    var r = Yi(e);
    var i = r.tokenSourceMapRanges || (r.tokenSourceMapRanges = []);
    i[t] = n;
    return e;
   }
   e.setTokenSourceMapRange = sa;
   function ca(e) {
    var t = e.emitNode;
    return t && t.startsOnNewLine;
   }
   e.getStartsOnNewLine = ca;
   function ua(e, t) {
    Yi(e).startsOnNewLine = t;
    return e;
   }
   e.setStartsOnNewLine = ua;
   function la(e) {
    var t = e.emitNode;
    return t && t.commentRange || e;
   }
   e.getCommentRange = la;
   function fa(e, t) {
    Yi(e).commentRange = t;
    return e;
   }
   e.setCommentRange = fa;
   function da(e) {
    var t = e.emitNode;
    return t && t.leadingComments;
   }
   e.getSyntheticLeadingComments = da;
   function pa(e, t) {
    Yi(e).leadingComments = t;
    return e;
   }
   e.setSyntheticLeadingComments = pa;
   function ma(t, n, r, i) {
    return pa(t, e.append(da(t), {
     kind: n,
     pos: -1,
     end: -1,
     hasTrailingNewLine: i,
     text: r
    }));
   }
   e.addSyntheticLeadingComment = ma;
   function _a(e) {
    var t = e.emitNode;
    return t && t.trailingComments;
   }
   e.getSyntheticTrailingComments = _a;
   function ga(e, t) {
    Yi(e).trailingComments = t;
    return e;
   }
   e.setSyntheticTrailingComments = ga;
   function ha(t, n, r, i) {
    return ga(t, e.append(_a(t), {
     kind: n,
     pos: -1,
     end: -1,
     hasTrailingNewLine: i,
     text: r
    }));
   }
   e.addSyntheticTrailingComment = ha;
   function va(e, t) {
    pa(e, da(t));
    ga(e, _a(t));
    var n = Yi(t);
    n.leadingComments = undefined;
    n.trailingComments = undefined;
    return e;
   }
   e.moveSyntheticComments = va;
   function ya(e) {
    var t = e.emitNode;
    return t && t.constantValue;
   }
   e.getConstantValue = ya;
   function ba(e, t) {
    var n = Yi(e);
    n.constantValue = t;
    return e;
   }
   e.setConstantValue = ba;
   function xa(t, n) {
    var r = Yi(t);
    r.helpers = e.append(r.helpers, n);
    return t;
   }
   e.addEmitHelper = xa;
   function ka(t, n) {
    if (e.some(n)) {
     var r = Yi(t);
     for (var i = 0, a = n; i < a.length; i++) {
      var o = a[i];
      r.helpers = e.appendIfUnique(r.helpers, o);
     }
    }
    return t;
   }
   e.addEmitHelpers = ka;
   function Sa(t, n) {
    var r = t.emitNode;
    if (r) {
     var i = r.helpers;
     if (i) {
      return e.orderedRemoveItem(i, n);
     }
    }
    return false;
   }
   e.removeEmitHelper = Sa;
   function wa(e) {
    var t = e.emitNode;
    return t && t.helpers;
   }
   e.getEmitHelpers = wa;
   function Ca(t, n, r) {
    var i = t.emitNode;
    var a = i && i.helpers;
    if (!e.some(a)) return;
    var o = Yi(n);
    var s = 0;
    for (var c = 0; c < a.length; c++) {
     var u = a[c];
     if (r(u)) {
      s++;
      o.helpers = e.appendIfUnique(o.helpers, u);
     } else if (s > 0) {
      a[c - s] = u;
     }
    }
    if (s > 0) {
     a.length -= s;
    }
   }
   e.moveEmitHelpers = Ca;
   function Da(t, n) {
    if (t === n) return 0;
    if (t.priority === n.priority) return 0;
    if (t.priority === undefined) return 1;
    if (n.priority === undefined) return -1;
    return e.compareValues(t.priority, n.priority);
   }
   e.compareEmitHelpers = Da;
   function Ta(e, t) {
    e.original = t;
    if (t) {
     var n = t.emitNode;
     if (n) e.emitNode = Ea(n, e.emitNode);
    }
    return e;
   }
   e.setOriginalNode = Ta;
   function Ea(t, n) {
    var r = t.flags, i = t.leadingComments, a = t.trailingComments, o = t.commentRange, s = t.sourceMapRange, c = t.tokenSourceMapRanges, u = t.constantValue, l = t.helpers, f = t.startsOnNewLine;
    if (!n) n = {};
    if (i) n.leadingComments = e.addRange(i.slice(), n.leadingComments);
    if (a) n.trailingComments = e.addRange(a.slice(), n.trailingComments);
    if (r) n.flags = r;
    if (o) n.commentRange = o;
    if (s) n.sourceMapRange = s;
    if (c) n.tokenSourceMapRanges = Na(c, n.tokenSourceMapRanges);
    if (u !== undefined) n.constantValue = u;
    if (l) n.helpers = e.addRange(n.helpers, l);
    if (f !== undefined) n.startsOnNewLine = f;
    return n;
   }
   function Na(e, t) {
    if (!t) t = [];
    for (var n in e) {
     t[n] = e[n];
    }
    return t;
   }
  })(s || (s = {}));
  (function(e) {
   e.nullTransformationContext = {
    enableEmitNotification: e.noop,
    enableSubstitution: e.noop,
    endLexicalEnvironment: function() {
     return undefined;
    },
    getCompilerOptions: e.notImplemented,
    getEmitHost: e.notImplemented,
    getEmitResolver: e.notImplemented,
    hoistFunctionDeclaration: e.noop,
    hoistVariableDeclaration: e.noop,
    isEmitNotificationEnabled: e.notImplemented,
    isSubstitutionEnabled: e.notImplemented,
    onEmitNode: e.noop,
    onSubstituteNode: e.notImplemented,
    readEmitHelpers: e.notImplemented,
    requestEmitHelper: e.noop,
    resumeLexicalEnvironment: e.noop,
    startLexicalEnvironment: e.noop,
    suspendLexicalEnvironment: e.noop,
    addDiagnostic: e.noop
   };
   function t(t, n) {
    return n === "undefined" ? e.createStrictEquality(t, e.createVoidZero()) : e.createStrictEquality(e.createTypeOf(t), e.createLiteral(n));
   }
   e.createTypeCheck = t;
   function n(t, n, r) {
    if (e.isComputedPropertyName(n)) {
     return e.setTextRange(e.createElementAccess(t, n.expression), r);
    } else {
     var i = e.setTextRange(e.isIdentifier(n) ? e.createPropertyAccess(t, n) : e.createElementAccess(t, n), n);
     e.getOrCreateEmitNode(i).flags |= 64;
     return i;
    }
   }
   e.createMemberAccessForPropertyName = n;
   function r(t, n, r, i) {
    return e.setTextRange(e.createCall(e.createPropertyAccess(t, "call"), undefined, [ n ].concat(r)), i);
   }
   e.createFunctionCall = r;
   function i(t, n, r, i) {
    return e.setTextRange(e.createCall(e.createPropertyAccess(t, "apply"), undefined, [ n, r ]), i);
   }
   e.createFunctionApply = i;
   function a(t, n) {
    var r = [];
    if (n !== undefined) {
     r.push(typeof n === "number" ? e.createLiteral(n) : n);
    }
    return e.createCall(e.createPropertyAccess(t, "slice"), undefined, r);
   }
   e.createArraySlice = a;
   function o(t, n) {
    return e.createCall(e.createPropertyAccess(t, "concat"), undefined, n);
   }
   e.createArrayConcat = o;
   function s(t, n, r) {
    return e.setTextRange(e.createCall(e.createPropertyAccess(e.createIdentifier("Math"), "pow"), undefined, [ t, n ]), r);
   }
   e.createMathPow = s;
   function c(t, n) {
    var r = e.createIdentifier(t || "React");
    r.flags &= ~8;
    r.parent = e.getParseTreeNode(n);
    return r;
   }
   function u(t, n) {
    if (e.isQualifiedName(t)) {
     var r = u(t.left, n);
     var i = e.createIdentifier(e.idText(t.right));
     i.escapedText = t.right.escapedText;
     return e.createPropertyAccess(r, i);
    } else {
     return c(e.idText(t), n);
    }
   }
   function l(t, n, r) {
    return t ? u(t, r) : e.createPropertyAccess(c(n, r), "createElement");
   }
   function f(t, n, r, i, a, o, s) {
    var c = [ r ];
    if (i) {
     c.push(i);
    }
    if (a && a.length > 0) {
     if (!i) {
      c.push(e.createNull());
     }
     if (a.length > 1) {
      for (var u = 0, f = a; u < f.length; u++) {
       var d = f[u];
       De(d);
       c.push(d);
      }
     } else {
      c.push(a[0]);
     }
    }
    return e.setTextRange(e.createCall(l(t, n, o), undefined, c), s);
   }
   e.createExpressionForJsxElement = f;
   function d(t, n, r, i, a) {
    var o = e.createPropertyAccess(c(n, i), "Fragment");
    var s = [ o ];
    s.push(e.createNull());
    if (r && r.length > 0) {
     if (r.length > 1) {
      for (var u = 0, f = r; u < f.length; u++) {
       var d = f[u];
       De(d);
       s.push(d);
      }
     } else {
      s.push(r[0]);
     }
    }
    return e.setTextRange(e.createCall(l(t, n, i), undefined, s), a);
   }
   e.createExpressionForJsxFragment = d;
   function p(t) {
    return e.setEmitFlags(e.createIdentifier(t), 4096 | 2);
   }
   e.getHelperName = p;
   var m = {
    name: "typescript:values",
    scoped: false,
    text: '\n            var __values = (this && this.__values) || function (o) {\n                var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;\n                if (m) return m.call(o);\n                return {\n                    next: function () {\n                        if (o && i >= o.length) o = void 0;\n                        return { value: o && o[i++], done: !o };\n                    }\n                };\n            };'
   };
   function _(t, n, r) {
    t.requestEmitHelper(m);
    return e.setTextRange(e.createCall(p("__values"), undefined, [ n ]), r);
   }
   e.createValuesHelper = _;
   var g = {
    name: "typescript:read",
    scoped: false,
    text: '\n            var __read = (this && this.__read) || function (o, n) {\n                var m = typeof Symbol === "function" && o[Symbol.iterator];\n                if (!m) return o;\n                var i = m.call(o), r, ar = [], e;\n                try {\n                    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n                }\n                catch (error) { e = { error: error }; }\n                finally {\n                    try {\n                        if (r && !r.done && (m = i["return"])) m.call(i);\n                    }\n                    finally { if (e) throw e.error; }\n                }\n                return ar;\n            };'
   };
   function h(t, n, r, i) {
    t.requestEmitHelper(g);
    return e.setTextRange(e.createCall(p("__read"), undefined, r !== undefined ? [ n, e.createLiteral(r) ] : [ n ]), i);
   }
   e.createReadHelper = h;
   var v = {
    name: "typescript:spread",
    scoped: false,
    text: "\n            var __spread = (this && this.__spread) || function () {\n                for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n                return ar;\n            };"
   };
   function y(t, n, r) {
    t.requestEmitHelper(g);
    t.requestEmitHelper(v);
    return e.setTextRange(e.createCall(p("__spread"), undefined, n), r);
   }
   e.createSpreadHelper = y;
   function b(t, n) {
    if (e.isVariableDeclarationList(t)) {
     var r = e.first(t.declarations);
     var i = e.updateVariableDeclaration(r, r.name, undefined, n);
     return e.setTextRange(e.createVariableStatement(undefined, e.updateVariableDeclarationList(t, [ i ])), t);
    } else {
     var a = e.setTextRange(e.createAssignment(t, n), t);
     return e.setTextRange(e.createStatement(a), t);
    }
   }
   e.createForOfBindingStatement = b;
   function x(t, n) {
    if (e.isBlock(t)) {
     return e.updateBlock(t, e.setTextRange(e.createNodeArray([ n ].concat(t.statements)), t.statements));
    } else {
     return e.createBlock(e.createNodeArray([ t, n ]), true);
    }
   }
   e.insertLeadingStatement = x;
   function k(t, n, r) {
    if (!n) {
     return t;
    }
    var i = e.updateLabel(n, n.label, n.statement.kind === 231 ? k(t, n.statement) : t);
    if (r) {
     r(n);
    }
    return i;
   }
   e.restoreEnclosingLabel = k;
   function S(t, n) {
    var r = e.skipParentheses(t);
    switch (r.kind) {
    case 71:
     return n;

    case 99:
    case 8:
    case 9:
     return false;

    case 185:
     var i = r.elements;
     if (i.length === 0) {
      return false;
     }
     return true;

    case 186:
     return r.properties.length > 0;

    default:
     return true;
    }
   }
   function w(t, n, r, i) {
    if (i === void 0) {
     i = false;
    }
    var a = xe(t, 7);
    var o;
    var s;
    if (e.isSuperProperty(a)) {
     o = e.createThis();
     s = a;
    } else if (a.kind === 97) {
     o = e.createThis();
     s = r < 2 ? e.setTextRange(e.createIdentifier("_super"), a) : a;
    } else if (e.getEmitFlags(a) & 4096) {
     o = e.createVoidZero();
     s = ae(a);
    } else {
     switch (a.kind) {
     case 187:
      {
       if (S(a.expression, i)) {
        o = e.createTempVariable(n);
        s = e.createPropertyAccess(e.setTextRange(e.createAssignment(o, a.expression), a.expression), a.name);
        e.setTextRange(s, a);
       } else {
        o = a.expression;
        s = a;
       }
       break;
      }

     case 188:
      {
       if (S(a.expression, i)) {
        o = e.createTempVariable(n);
        s = e.createElementAccess(e.setTextRange(e.createAssignment(o, a.expression), a.expression), a.argumentExpression);
        e.setTextRange(s, a);
       } else {
        o = a.expression;
        s = a;
       }
       break;
      }

     default:
      {
       o = e.createVoidZero();
       s = ae(t);
       break;
      }
     }
    }
    return {
     target: s,
     thisArg: o
    };
   }
   e.createCallBinding = w;
   function C(t) {
    return t.length > 10 ? e.createCommaList(t) : e.reduceLeft(t, e.createComma);
   }
   e.inlineExpressions = C;
   function D(t) {
    if (e.isQualifiedName(t)) {
     var n = D(t.left);
     var r = e.getMutableClone(t.right);
     return e.setTextRange(e.createPropertyAccess(n, r), t);
    } else {
     return e.getMutableClone(t);
    }
   }
   e.createExpressionFromEntityName = D;
   function T(t) {
    if (e.isIdentifier(t)) {
     return e.createLiteral(t);
    } else if (e.isComputedPropertyName(t)) {
     return e.getMutableClone(t.expression);
    } else {
     return e.getMutableClone(t);
    }
   }
   e.createExpressionForPropertyName = T;
   function E(e, t, n) {
    switch (t.kind) {
    case 156:
    case 157:
     return N(e.properties, t, n, !!e.multiLine);

    case 273:
     return A(t, n);

    case 274:
     return F(t, n);

    case 154:
     return P(t, n);
    }
   }
   e.createExpressionForObjectLiteralElementLike = E;
   function N(t, n, r, i) {
    var a = e.getAllAccessorDeclarations(t, n), o = a.firstAccessor, s = a.getAccessor, c = a.setAccessor;
    if (n === o) {
     var u = [];
     if (s) {
      var l = e.createFunctionExpression(s.modifiers, undefined, undefined, undefined, s.parameters, undefined, s.body);
      e.setTextRange(l, s);
      e.setOriginalNode(l, s);
      var f = e.createPropertyAssignment("get", l);
      u.push(f);
     }
     if (c) {
      var d = e.createFunctionExpression(c.modifiers, undefined, undefined, undefined, c.parameters, undefined, c.body);
      e.setTextRange(d, c);
      e.setOriginalNode(d, c);
      var p = e.createPropertyAssignment("set", d);
      u.push(p);
     }
     u.push(e.createPropertyAssignment("enumerable", e.createTrue()));
     u.push(e.createPropertyAssignment("configurable", e.createTrue()));
     var m = e.setTextRange(e.createCall(e.createPropertyAccess(e.createIdentifier("Object"), "defineProperty"), undefined, [ r, T(n.name), e.createObjectLiteral(u, i) ]), o);
     return e.aggregateTransformFlags(m);
    }
    return undefined;
   }
   function A(t, r) {
    return e.aggregateTransformFlags(e.setOriginalNode(e.setTextRange(e.createAssignment(n(r, t.name, t.name), t.initializer), t), t));
   }
   function F(t, r) {
    return e.aggregateTransformFlags(e.setOriginalNode(e.setTextRange(e.createAssignment(n(r, t.name, t.name), e.getSynthesizedClone(t.name)), t), t));
   }
   function P(t, r) {
    return e.aggregateTransformFlags(e.setOriginalNode(e.setTextRange(e.createAssignment(n(r, t.name, t.name), e.setOriginalNode(e.setTextRange(e.createFunctionExpression(t.modifiers, t.asteriskToken, undefined, undefined, t.parameters, undefined, t.body), t), t)), t), t));
   }
   function I(e, t, n) {
    return j(e, t, n, 16384 | 32768);
   }
   e.getInternalName = I;
   function O(t) {
    return (e.getEmitFlags(t) & 32768) !== 0;
   }
   e.isInternalName = O;
   function M(e, t, n) {
    return j(e, t, n, 16384);
   }
   e.getLocalName = M;
   function L(t) {
    return (e.getEmitFlags(t) & 16384) !== 0;
   }
   e.isLocalName = L;
   function R(e, t, n) {
    return j(e, t, n, 8192);
   }
   e.getExportName = R;
   function B(t) {
    return (e.getEmitFlags(t) & 8192) !== 0;
   }
   e.isExportName = B;
   function z(e, t, n) {
    return j(e, t, n);
   }
   e.getDeclarationName = z;
   function j(t, n, r, i) {
    if (i === void 0) {
     i = 0;
    }
    var a = e.getNameOfDeclaration(t);
    if (a && e.isIdentifier(a) && !e.isGeneratedIdentifier(a)) {
     var o = e.getMutableClone(a);
     i |= e.getEmitFlags(a);
     if (!r) i |= 48;
     if (!n) i |= 1536;
     if (i) e.setEmitFlags(o, i);
     return o;
    }
    return e.getGeneratedNameForNode(t);
   }
   function q(t, n, r, i) {
    if (t && e.hasModifier(n, 1)) {
     return U(t, j(n), r, i);
    }
    return R(n, r, i);
   }
   e.getExternalModuleOrNamespaceExportName = q;
   function U(t, n, r, i) {
    var a = e.createPropertyAccess(t, e.nodeIsSynthesized(n) ? n : e.getSynthesizedClone(n));
    e.setTextRange(a, n);
    var o = 0;
    if (!i) o |= 48;
    if (!r) o |= 1536;
    if (o) e.setEmitFlags(a, o);
    return a;
   }
   e.getNamespaceMemberName = U;
   function J(t, n) {
    return e.isBlock(t) ? t : e.setTextRange(e.createBlock([ e.setTextRange(e.createReturn(t), t) ], n), t);
   }
   e.convertToFunctionBody = J;
   function K(t) {
    if (!t.body) return e.Debug.fail();
    var n = e.createFunctionExpression(t.modifiers, t.asteriskToken, t.name, t.typeParameters, t.parameters, t.type, t.body);
    e.setOriginalNode(n, t);
    e.setTextRange(n, t);
    if (e.getStartsOnNewLine(t)) {
     e.setStartsOnNewLine(n, true);
    }
    e.aggregateTransformFlags(n);
    return n;
   }
   e.convertFunctionDeclarationToExpression = K;
   function V(t) {
    return e.isStringLiteral(t.expression) && t.expression.text === "use strict";
   }
   function W(e, t, n, r) {
    var i = H(e, t, n);
    return G(e, t, i, r);
   }
   e.addPrologue = W;
   function H(t, n, r) {
    e.Debug.assert(t.length === 0, "Prologue directives should be at the first statement in the target statements array");
    var i = false;
    var a = 0;
    var o = n.length;
    while (a < o) {
     var s = n[a];
     if (e.isPrologueDirective(s)) {
      if (V(s)) {
       i = true;
      }
      t.push(s);
     } else {
      break;
     }
     a++;
    }
    if (r && !i) {
     t.push(De(e.createStatement(e.createLiteral("use strict"))));
    }
    return a;
   }
   e.addStandardPrologue = H;
   function G(t, n, r, i) {
    var a = n.length;
    while (r !== undefined && r < a) {
     var o = n[r];
     if (e.getEmitFlags(o) & 1048576) {
      e.append(t, i ? e.visitNode(o, i, e.isStatement) : o);
     } else {
      break;
     }
     r++;
    }
    return r;
   }
   e.addCustomPrologue = G;
   function $(t) {
    var n = e.firstOrUndefined(t);
    return n !== undefined && e.isPrologueDirective(n) && V(n);
   }
   e.startsWithUseStrict = $;
   function X(t) {
    var n = false;
    for (var r = 0, i = t; r < i.length; r++) {
     var a = i[r];
     if (e.isPrologueDirective(a)) {
      if (V(a)) {
       n = true;
       break;
      }
     } else {
      break;
     }
    }
    if (!n) {
     return e.setTextRange(e.createNodeArray([ De(e.createStatement(e.createLiteral("use strict"))) ].concat(t)), t);
    }
    return t;
   }
   e.ensureUseStrict = X;
   function Q(t, n, r, i) {
    var a = e.skipPartiallyEmittedExpressions(n);
    if (a.kind === 193) {
     return n;
    }
    return Y(t, n, r, i) ? e.createParen(n) : n;
   }
   e.parenthesizeBinaryOperand = Q;
   function Y(t, n, r, i) {
    var a = e.getOperatorPrecedence(202, t);
    var o = e.getOperatorAssociativity(202, t);
    var s = e.skipPartiallyEmittedExpressions(n);
    var c = e.getExpressionPrecedence(s);
    switch (e.compareValues(c, a)) {
    case -1:
     if (!r && o === 1 && n.kind === 205) {
      return false;
     }
     return true;

    case 1:
     return false;

    case 0:
     if (r) {
      return o === 1;
     } else {
      if (e.isBinaryExpression(s) && s.operatorToken.kind === t) {
       if (Z(t)) {
        return false;
       }
       if (t === 37) {
        var u = i ? ee(i) : 0;
        if (e.isLiteralKind(u) && u === ee(s)) {
         return false;
        }
       }
      }
      var l = e.getExpressionAssociativity(s);
      return l === 0;
     }
    }
   }
   function Z(e) {
    return e === 39 || e === 49 || e === 48 || e === 50;
   }
   function ee(t) {
    t = e.skipPartiallyEmittedExpressions(t);
    if (e.isLiteralKind(t.kind)) {
     return t.kind;
    }
    if (t.kind === 202 && t.operatorToken.kind === 37) {
     if (t.cachedLiteralKind !== undefined) {
      return t.cachedLiteralKind;
     }
     var n = ee(t.left);
     var r = e.isLiteralKind(n) && n === ee(t.right) ? n : 0;
     t.cachedLiteralKind = r;
     return r;
    }
    return 0;
   }
   function te(t) {
    var n = e.getOperatorPrecedence(203, 55);
    var r = e.skipPartiallyEmittedExpressions(t);
    var i = e.getExpressionPrecedence(r);
    if (e.compareValues(i, n) === -1) {
     return e.createParen(t);
    }
    return t;
   }
   e.parenthesizeForConditionalHead = te;
   function ne(t) {
    var n = e.skipPartiallyEmittedExpressions(t);
    return ve(n) ? e.createParen(t) : t;
   }
   e.parenthesizeSubexpressionOfConditionalExpression = ne;
   function re(t) {
    var n = e.skipPartiallyEmittedExpressions(t);
    var r = ve(n);
    if (!r) {
     switch (ge(n, false).kind) {
     case 207:
     case 194:
      r = true;
     }
    }
    return r ? e.createParen(t) : t;
   }
   e.parenthesizeDefaultExpression = re;
   function ie(t) {
    var n = ge(t, true);
    switch (n.kind) {
    case 189:
     return e.createParen(t);

    case 190:
     return !n.arguments ? e.createParen(t) : t;
    }
    return ae(t);
   }
   e.parenthesizeForNew = ie;
   function ae(t) {
    var n = e.skipPartiallyEmittedExpressions(t);
    if (e.isLeftHandSideExpression(n) && (n.kind !== 190 || n.arguments)) {
     return t;
    }
    return e.setTextRange(e.createParen(t), t);
   }
   e.parenthesizeForAccess = ae;
   function oe(t) {
    return e.isLeftHandSideExpression(t) ? t : e.setTextRange(e.createParen(t), t);
   }
   e.parenthesizePostfixOperand = oe;
   function se(t) {
    return e.isUnaryExpression(t) ? t : e.setTextRange(e.createParen(t), t);
   }
   e.parenthesizePrefixOperand = se;
   function ce(t) {
    var n;
    for (var r = 0; r < t.length; r++) {
     var i = ue(t[r]);
     if (n !== undefined || i !== t[r]) {
      if (n === undefined) {
       n = t.slice(0, r);
      }
      n.push(i);
     }
    }
    if (n !== undefined) {
     return e.setTextRange(e.createNodeArray(n, t.hasTrailingComma), t);
    }
    return t;
   }
   e.parenthesizeListElements = ce;
   function ue(t) {
    var n = e.skipPartiallyEmittedExpressions(t);
    var r = e.getExpressionPrecedence(n);
    var i = e.getOperatorPrecedence(202, 26);
    return r > i ? t : e.setTextRange(e.createParen(t), t);
   }
   e.parenthesizeExpressionForList = ue;
   function le(t) {
    var n = e.skipPartiallyEmittedExpressions(t);
    if (e.isCallExpression(n)) {
     var r = n.expression;
     var i = e.skipPartiallyEmittedExpressions(r).kind;
     if (i === 194 || i === 195) {
      var a = e.getMutableClone(n);
      a.expression = e.setTextRange(e.createParen(r), r);
      return Ce(t, a, 4);
     }
    }
    var o = ge(n, false).kind;
    if (o === 186 || o === 194) {
     return e.setTextRange(e.createParen(t), t);
    }
    return t;
   }
   e.parenthesizeExpressionForExpressionStatement = le;
   function fe(t) {
    return t.kind === 173 ? e.createParenthesizedType(t) : t;
   }
   e.parenthesizeConditionalTypeMember = fe;
   function de(t) {
    switch (t.kind) {
    case 171:
    case 172:
    case 163:
    case 164:
     return e.createParenthesizedType(t);
    }
    return fe(t);
   }
   e.parenthesizeElementTypeMember = de;
   function pe(t) {
    switch (t.kind) {
    case 165:
    case 177:
    case 174:
     return e.createParenthesizedType(t);
    }
    return de(t);
   }
   e.parenthesizeArrayTypeMember = pe;
   function me(t) {
    return e.createNodeArray(e.sameMap(t, de));
   }
   e.parenthesizeElementTypeMembers = me;
   function _e(t) {
    if (e.some(t)) {
     var n = [];
     for (var r = 0; r < t.length; ++r) {
      var i = t[r];
      n.push(r === 0 && e.isFunctionOrConstructorTypeNode(i) && i.typeParameters ? e.createParenthesizedType(i) : i);
     }
     return e.createNodeArray(n);
    }
   }
   e.parenthesizeTypeParameters = _e;
   function ge(e, t) {
    while (true) {
     switch (e.kind) {
     case 201:
      e = e.operand;
      continue;

     case 202:
      e = e.left;
      continue;

     case 203:
      e = e.condition;
      continue;

     case 191:
      e = e.tag;
      continue;

     case 189:
      if (t) {
       return e;
      }

     case 210:
     case 188:
     case 187:
     case 211:
     case 305:
      e = e.expression;
      continue;
     }
     return e;
    }
   }
   function he(t) {
    if (!e.isBlock(t) && (ve(t) || ge(t, false).kind === 186)) {
     return e.setTextRange(e.createParen(t), t);
    }
    return t;
   }
   e.parenthesizeConciseBody = he;
   function ve(e) {
    return e.kind === 202 && e.operatorToken.kind === 26 || e.kind === 306;
   }
   e.isCommaSequence = ve;
   var ye;
   (function(e) {
    e[e["Parentheses"] = 1] = "Parentheses";
    e[e["Assertions"] = 2] = "Assertions";
    e[e["PartiallyEmittedExpressions"] = 4] = "PartiallyEmittedExpressions";
    e[e["All"] = 7] = "All";
   })(ye = e.OuterExpressionKinds || (e.OuterExpressionKinds = {}));
   function be(e, t) {
    if (t === void 0) {
     t = 7;
    }
    switch (e.kind) {
    case 193:
     return (t & 1) !== 0;

    case 192:
    case 210:
    case 211:
     return (t & 2) !== 0;

    case 305:
     return (t & 4) !== 0;
    }
    return false;
   }
   e.isOuterExpression = be;
   function xe(t, n) {
    if (n === void 0) {
     n = 7;
    }
    var r;
    do {
     r = t;
     if (n & 1) {
      t = e.skipParentheses(t);
     }
     if (n & 2) {
      t = ke(t);
     }
     if (n & 4) {
      t = e.skipPartiallyEmittedExpressions(t);
     }
    } while (r !== t);
    return t;
   }
   e.skipOuterExpressions = xe;
   function ke(t) {
    while (e.isAssertionExpression(t) || t.kind === 211) {
     t = t.expression;
    }
    return t;
   }
   e.skipAssertions = ke;
   function Se(t, n) {
    switch (t.kind) {
    case 193:
     return e.updateParen(t, n);

    case 192:
     return e.updateTypeAssertion(t, t.type, n);

    case 210:
     return e.updateAsExpression(t, n, t.type);

    case 211:
     return e.updateNonNullExpression(t, n);

    case 305:
     return e.updatePartiallyEmittedExpression(t, n);
    }
   }
   function we(t) {
    return t.kind === 193 && e.nodeIsSynthesized(t) && e.nodeIsSynthesized(e.getSourceMapRange(t)) && e.nodeIsSynthesized(e.getCommentRange(t)) && !e.some(e.getSyntheticLeadingComments(t)) && !e.some(e.getSyntheticTrailingComments(t));
   }
   function Ce(e, t, n) {
    if (n === void 0) {
     n = 7;
    }
    if (e && be(e, n) && !we(e)) {
     return Se(e, Ce(e.expression, t));
    }
    return t;
   }
   e.recreateOuterExpressions = Ce;
   function De(t) {
    return e.setStartsOnNewLine(t, true);
   }
   e.startOnNewLine = De;
   function Te(t) {
    var n = e.getOriginalNode(t, e.isSourceFile);
    var r = n && n.emitNode;
    return r && r.externalHelpersModuleName;
   }
   e.getExternalHelpersModuleName = Te;
   function Ee(t, n, r, i) {
    if (n.importHelpers && e.isEffectiveExternalModule(t, n)) {
     var a = Te(t);
     if (a) {
      return a;
     }
     var o = e.getEmitModuleKind(n);
     var s = (r || n.esModuleInterop && i) && o !== e.ModuleKind.System && o !== e.ModuleKind.ES2015 && o !== e.ModuleKind.ESNext;
     if (!s) {
      var c = e.getEmitHelpers(t);
      if (c) {
       for (var u = 0, l = c; u < l.length; u++) {
        var f = l[u];
        if (!f.scoped) {
         s = true;
         break;
        }
       }
      }
     }
     if (s) {
      var d = e.getOriginalNode(t, e.isSourceFile);
      var p = e.getOrCreateEmitNode(d);
      return p.externalHelpersModuleName || (p.externalHelpersModuleName = e.createUniqueName(e.externalHelpersModuleNameText));
     }
    }
   }
   e.getOrCreateExternalHelpersModuleNameIfNeeded = Ee;
   function Ne(t, n) {
    var r = e.getNamespaceDeclarationNode(t);
    if (r && !e.isDefaultImport(t)) {
     var i = r.name;
     return e.isGeneratedIdentifier(i) ? i : e.createIdentifier(e.getSourceTextOfNodeFromSourceFile(n, i) || e.idText(i));
    }
    if (t.kind === 247 && t.importClause) {
     return e.getGeneratedNameForNode(t);
    }
    if (t.kind === 253 && t.moduleSpecifier) {
     return e.getGeneratedNameForNode(t);
    }
    return undefined;
   }
   e.getLocalNameForExternalImport = Ne;
   function Ae(t, n, r, i, a) {
    var o = e.getExternalModuleName(t);
    if (o.kind === 9) {
     return Ie(t, r, i, a) || Fe(o, n) || e.getSynthesizedClone(o);
    }
    return undefined;
   }
   e.getExternalModuleNameLiteral = Ae;
   function Fe(t, n) {
    var r = n.renamedDependencies && n.renamedDependencies.get(t.text);
    return r && e.createLiteral(r);
   }
   function Pe(t, n, r) {
    if (!t) {
     return undefined;
    }
    if (t.moduleName) {
     return e.createLiteral(t.moduleName);
    }
    if (!t.isDeclarationFile && (r.out || r.outFile)) {
     return e.createLiteral(e.getExternalModuleNameFromPath(n, t.fileName));
    }
    return undefined;
   }
   e.tryGetModuleNameFromFile = Pe;
   function Ie(e, t, n, r) {
    return Pe(n.getExternalModuleFileFromDeclaration(e), t, r);
   }
   function Oe(t) {
    if (e.isDeclarationBindingElement(t)) {
     return t.initializer;
    }
    if (e.isPropertyAssignment(t)) {
     var n = t.initializer;
     return e.isAssignmentExpression(n, true) ? n.right : undefined;
    }
    if (e.isShorthandPropertyAssignment(t)) {
     return t.objectAssignmentInitializer;
    }
    if (e.isAssignmentExpression(t, true)) {
     return t.right;
    }
    if (e.isSpreadElement(t)) {
     return Oe(t.expression);
    }
   }
   e.getInitializerOfBindingOrAssignmentElement = Oe;
   function Me(t) {
    if (e.isDeclarationBindingElement(t)) {
     return t.name;
    }
    if (e.isObjectLiteralElementLike(t)) {
     switch (t.kind) {
     case 273:
      return Me(t.initializer);

     case 274:
      return t.name;

     case 275:
      return Me(t.expression);
     }
     return undefined;
    }
    if (e.isAssignmentExpression(t, true)) {
     return Me(t.left);
    }
    if (e.isSpreadElement(t)) {
     return Me(t.expression);
    }
    return t;
   }
   e.getTargetOfBindingOrAssignmentElement = Me;
   function Le(e) {
    switch (e.kind) {
    case 149:
    case 184:
     return e.dotDotDotToken;

    case 206:
    case 275:
     return e;
    }
    return undefined;
   }
   e.getRestIndicatorOfBindingOrAssignmentElement = Le;
   function Re(t) {
    switch (t.kind) {
    case 184:
     if (t.propertyName) {
      var n = t.propertyName;
      return e.isComputedPropertyName(n) && e.isStringOrNumericLiteral(n.expression) ? n.expression : n;
     }
     break;

    case 273:
     if (t.name) {
      var n = t.name;
      return e.isComputedPropertyName(n) && e.isStringOrNumericLiteral(n.expression) ? n.expression : n;
     }
     break;

    case 275:
     return t.name;
    }
    var r = Me(t);
    if (r && e.isPropertyName(r)) {
     return e.isComputedPropertyName(r) && e.isStringOrNumericLiteral(r.expression) ? r.expression : r;
    }
    e.Debug.fail("Invalid property name for binding element.");
   }
   e.getPropertyNameOfBindingOrAssignmentElement = Re;
   function Be(e) {
    switch (e.kind) {
    case 182:
    case 183:
    case 185:
     return e.elements;

    case 186:
     return e.properties;
    }
   }
   e.getElementsOfBindingOrAssignmentPattern = Be;
   function ze(t) {
    if (e.isBindingElement(t)) {
     if (t.dotDotDotToken) {
      e.Debug.assertNode(t.name, e.isIdentifier);
      return e.setOriginalNode(e.setTextRange(e.createSpread(t.name), t), t);
     }
     var n = Ke(t.name);
     return t.initializer ? e.setOriginalNode(e.setTextRange(e.createAssignment(n, t.initializer), t), t) : n;
    }
    e.Debug.assertNode(t, e.isExpression);
    return t;
   }
   e.convertToArrayAssignmentElement = ze;
   function je(t) {
    if (e.isBindingElement(t)) {
     if (t.dotDotDotToken) {
      e.Debug.assertNode(t.name, e.isIdentifier);
      return e.setOriginalNode(e.setTextRange(e.createSpreadAssignment(t.name), t), t);
     }
     if (t.propertyName) {
      var n = Ke(t.name);
      return e.setOriginalNode(e.setTextRange(e.createPropertyAssignment(t.propertyName, t.initializer ? e.createAssignment(n, t.initializer) : n), t), t);
     }
     e.Debug.assertNode(t.name, e.isIdentifier);
     return e.setOriginalNode(e.setTextRange(e.createShorthandPropertyAssignment(t.name, t.initializer), t), t);
    }
    e.Debug.assertNode(t, e.isObjectLiteralElementLike);
    return t;
   }
   e.convertToObjectAssignmentElement = je;
   function qe(e) {
    switch (e.kind) {
    case 183:
    case 185:
     return Je(e);

    case 182:
    case 186:
     return Ue(e);
    }
   }
   e.convertToAssignmentPattern = qe;
   function Ue(t) {
    if (e.isObjectBindingPattern(t)) {
     return e.setOriginalNode(e.setTextRange(e.createObjectLiteral(e.map(t.elements, je)), t), t);
    }
    e.Debug.assertNode(t, e.isObjectLiteralExpression);
    return t;
   }
   e.convertToObjectAssignmentPattern = Ue;
   function Je(t) {
    if (e.isArrayBindingPattern(t)) {
     return e.setOriginalNode(e.setTextRange(e.createArrayLiteral(e.map(t.elements, ze)), t), t);
    }
    e.Debug.assertNode(t, e.isArrayLiteralExpression);
    return t;
   }
   e.convertToArrayAssignmentPattern = Je;
   function Ke(t) {
    if (e.isBindingPattern(t)) {
     return qe(t);
    }
    e.Debug.assertNode(t, e.isExpression);
    return t;
   }
   e.convertToAssignmentElementTarget = Ke;
  })(s || (s = {}));
  var s;
  (function(e) {
   var t = e.or(e.isTypeNode, e.isTypeParameterDeclaration);
   function n(t, n, r, i) {
    if (t === undefined || n === undefined) {
     return t;
    }
    e.aggregateTransformFlags(t);
    var a = n(t);
    if (a === t) {
     return t;
    }
    var o;
    if (a === undefined) {
     return undefined;
    } else if (e.isArray(a)) {
     o = (i || c)(a);
    } else {
     o = a;
    }
    e.Debug.assertNode(o, r);
    e.aggregateTransformFlags(o);
    return o;
   }
   e.visitNode = n;
   function r(t, n, r, i, a) {
    if (t === undefined || n === undefined) {
     return t;
    }
    var o;
    var s = t.length;
    if (i === undefined || i < 0) {
     i = 0;
    }
    if (a === undefined || a > s - i) {
     a = s - i;
    }
    if (i > 0 || a < s) {
     o = e.createNodeArray([], t.hasTrailingComma && i + a === s);
    }
    for (var c = 0; c < a; c++) {
     var u = t[c + i];
     e.aggregateTransformFlags(u);
     var l = u !== undefined ? n(u) : undefined;
     if (o !== undefined || l === undefined || l !== u) {
      if (o === undefined) {
       o = e.createNodeArray(t.slice(0, c), t.hasTrailingComma);
       e.setTextRange(o, t);
      }
      if (l) {
       if (e.isArray(l)) {
        for (var f = 0, d = l; f < d.length; f++) {
         var p = d[f];
         e.Debug.assertNode(p, r);
         e.aggregateTransformFlags(p);
         o.push(p);
        }
       } else {
        e.Debug.assertNode(l, r);
        e.aggregateTransformFlags(l);
        o.push(l);
       }
      }
     }
    }
    return o || t;
   }
   e.visitNodes = r;
   function i(t, n, i, a, o) {
    i.startLexicalEnvironment();
    t = r(t, n, e.isStatement, a);
    if (o && !e.startsWithUseStrict(t)) {
     t = e.setTextRange(e.createNodeArray([ e.createExpressionStatement(e.createLiteral("use strict")) ].concat(t)), t);
    }
    var s = i.endLexicalEnvironment();
    return e.setTextRange(e.createNodeArray(e.concatenate(s, t)), t);
   }
   e.visitLexicalEnvironment = i;
   function a(t, n, i, a) {
    if (a === void 0) {
     a = r;
    }
    i.startLexicalEnvironment();
    var o = a(t, n, e.isParameterDeclaration);
    i.suspendLexicalEnvironment();
    return o;
   }
   e.visitParameterList = a;
   function o(t, r, i) {
    i.resumeLexicalEnvironment();
    var a = n(t, r, e.isConciseBody);
    var o = i.endLexicalEnvironment();
    if (e.some(o)) {
     var s = e.convertToFunctionBody(a);
     var c = e.mergeLexicalEnvironment(s.statements, o);
     return e.updateBlock(s, c);
    }
    return a;
   }
   e.visitFunctionBody = o;
   function s(s, c, u, l, f) {
    if (l === void 0) {
     l = r;
    }
    if (s === undefined) {
     return undefined;
    }
    var d = s.kind;
    if (d > 0 && d <= 145 || d === 176) {
     return s;
    }
    switch (d) {
    case 71:
     return e.updateIdentifier(s, l(s.typeArguments, c, t));

    case 146:
     return e.updateQualifiedName(s, n(s.left, c, e.isEntityName), n(s.right, c, e.isIdentifier));

    case 147:
     return e.updateComputedPropertyName(s, n(s.expression, c, e.isExpression));

    case 148:
     return e.updateTypeParameterDeclaration(s, n(s.name, c, e.isIdentifier), n(s.constraint, c, e.isTypeNode), n(s.default, c, e.isTypeNode));

    case 149:
     return e.updateParameter(s, l(s.decorators, c, e.isDecorator), l(s.modifiers, c, e.isModifier), n(s.dotDotDotToken, f, e.isToken), n(s.name, c, e.isBindingName), n(s.questionToken, f, e.isToken), n(s.type, c, e.isTypeNode), n(s.initializer, c, e.isExpression));

    case 150:
     return e.updateDecorator(s, n(s.expression, c, e.isExpression));

    case 151:
     return e.updatePropertySignature(s, l(s.modifiers, c, e.isToken), n(s.name, c, e.isPropertyName), n(s.questionToken, f, e.isToken), n(s.type, c, e.isTypeNode), n(s.initializer, c, e.isExpression));

    case 152:
     return e.updateProperty(s, l(s.decorators, c, e.isDecorator), l(s.modifiers, c, e.isModifier), n(s.name, c, e.isPropertyName), n(s.questionToken, f, e.isToken), n(s.type, c, e.isTypeNode), n(s.initializer, c, e.isExpression));

    case 153:
     return e.updateMethodSignature(s, l(s.typeParameters, c, e.isTypeParameterDeclaration), l(s.parameters, c, e.isParameterDeclaration), n(s.type, c, e.isTypeNode), n(s.name, c, e.isPropertyName), n(s.questionToken, f, e.isToken));

    case 154:
     return e.updateMethod(s, l(s.decorators, c, e.isDecorator), l(s.modifiers, c, e.isModifier), n(s.asteriskToken, f, e.isToken), n(s.name, c, e.isPropertyName), n(s.questionToken, f, e.isToken), l(s.typeParameters, c, e.isTypeParameterDeclaration), a(s.parameters, c, u, l), n(s.type, c, e.isTypeNode), o(s.body, c, u));

    case 155:
     return e.updateConstructor(s, l(s.decorators, c, e.isDecorator), l(s.modifiers, c, e.isModifier), a(s.parameters, c, u, l), o(s.body, c, u));

    case 156:
     return e.updateGetAccessor(s, l(s.decorators, c, e.isDecorator), l(s.modifiers, c, e.isModifier), n(s.name, c, e.isPropertyName), a(s.parameters, c, u, l), n(s.type, c, e.isTypeNode), o(s.body, c, u));

    case 157:
     return e.updateSetAccessor(s, l(s.decorators, c, e.isDecorator), l(s.modifiers, c, e.isModifier), n(s.name, c, e.isPropertyName), a(s.parameters, c, u, l), o(s.body, c, u));

    case 158:
     return e.updateCallSignature(s, l(s.typeParameters, c, e.isTypeParameterDeclaration), l(s.parameters, c, e.isParameterDeclaration), n(s.type, c, e.isTypeNode));

    case 159:
     return e.updateConstructSignature(s, l(s.typeParameters, c, e.isTypeParameterDeclaration), l(s.parameters, c, e.isParameterDeclaration), n(s.type, c, e.isTypeNode));

    case 160:
     return e.updateIndexSignature(s, l(s.decorators, c, e.isDecorator), l(s.modifiers, c, e.isModifier), l(s.parameters, c, e.isParameterDeclaration), n(s.type, c, e.isTypeNode));

    case 161:
     return e.updateTypePredicateNode(s, n(s.parameterName, c), n(s.type, c, e.isTypeNode));

    case 162:
     return e.updateTypeReferenceNode(s, n(s.typeName, c, e.isEntityName), l(s.typeArguments, c, e.isTypeNode));

    case 163:
     return e.updateFunctionTypeNode(s, l(s.typeParameters, c, e.isTypeParameterDeclaration), l(s.parameters, c, e.isParameterDeclaration), n(s.type, c, e.isTypeNode));

    case 164:
     return e.updateConstructorTypeNode(s, l(s.typeParameters, c, e.isTypeParameterDeclaration), l(s.parameters, c, e.isParameterDeclaration), n(s.type, c, e.isTypeNode));

    case 165:
     return e.updateTypeQueryNode(s, n(s.exprName, c, e.isEntityName));

    case 166:
     return e.updateTypeLiteralNode(s, l(s.members, c, e.isTypeElement));

    case 167:
     return e.updateArrayTypeNode(s, n(s.elementType, c, e.isTypeNode));

    case 168:
     return e.updateTupleTypeNode(s, l(s.elementTypes, c, e.isTypeNode));

    case 169:
     return e.updateOptionalTypeNode(s, n(s.type, c, e.isTypeNode));

    case 170:
     return e.updateRestTypeNode(s, n(s.type, c, e.isTypeNode));

    case 171:
     return e.updateUnionTypeNode(s, l(s.types, c, e.isTypeNode));

    case 172:
     return e.updateIntersectionTypeNode(s, l(s.types, c, e.isTypeNode));

    case 173:
     return e.updateConditionalTypeNode(s, n(s.checkType, c, e.isTypeNode), n(s.extendsType, c, e.isTypeNode), n(s.trueType, c, e.isTypeNode), n(s.falseType, c, e.isTypeNode));

    case 174:
     return e.updateInferTypeNode(s, n(s.typeParameter, c, e.isTypeParameterDeclaration));

    case 181:
     return e.updateImportTypeNode(s, n(s.argument, c, e.isTypeNode), n(s.qualifier, c, e.isEntityName), r(s.typeArguments, c, e.isTypeNode), s.isTypeOf);

    case 175:
     return e.updateParenthesizedType(s, n(s.type, c, e.isTypeNode));

    case 177:
     return e.updateTypeOperatorNode(s, n(s.type, c, e.isTypeNode));

    case 178:
     return e.updateIndexedAccessTypeNode(s, n(s.objectType, c, e.isTypeNode), n(s.indexType, c, e.isTypeNode));

    case 179:
     return e.updateMappedTypeNode(s, n(s.readonlyToken, f, e.isToken), n(s.typeParameter, c, e.isTypeParameterDeclaration), n(s.questionToken, f, e.isToken), n(s.type, c, e.isTypeNode));

    case 180:
     return e.updateLiteralTypeNode(s, n(s.literal, c, e.isExpression));

    case 182:
     return e.updateObjectBindingPattern(s, l(s.elements, c, e.isBindingElement));

    case 183:
     return e.updateArrayBindingPattern(s, l(s.elements, c, e.isArrayBindingElement));

    case 184:
     return e.updateBindingElement(s, n(s.dotDotDotToken, f, e.isToken), n(s.propertyName, c, e.isPropertyName), n(s.name, c, e.isBindingName), n(s.initializer, c, e.isExpression));

    case 185:
     return e.updateArrayLiteral(s, l(s.elements, c, e.isExpression));

    case 186:
     return e.updateObjectLiteral(s, l(s.properties, c, e.isObjectLiteralElementLike));

    case 187:
     return e.updatePropertyAccess(s, n(s.expression, c, e.isExpression), n(s.name, c, e.isIdentifier));

    case 188:
     return e.updateElementAccess(s, n(s.expression, c, e.isExpression), n(s.argumentExpression, c, e.isExpression));

    case 189:
     return e.updateCall(s, n(s.expression, c, e.isExpression), l(s.typeArguments, c, e.isTypeNode), l(s.arguments, c, e.isExpression));

    case 190:
     return e.updateNew(s, n(s.expression, c, e.isExpression), l(s.typeArguments, c, e.isTypeNode), l(s.arguments, c, e.isExpression));

    case 191:
     return e.updateTaggedTemplate(s, n(s.tag, c, e.isExpression), r(s.typeArguments, c, e.isExpression), n(s.template, c, e.isTemplateLiteral));

    case 192:
     return e.updateTypeAssertion(s, n(s.type, c, e.isTypeNode), n(s.expression, c, e.isExpression));

    case 193:
     return e.updateParen(s, n(s.expression, c, e.isExpression));

    case 194:
     return e.updateFunctionExpression(s, l(s.modifiers, c, e.isModifier), n(s.asteriskToken, f, e.isToken), n(s.name, c, e.isIdentifier), l(s.typeParameters, c, e.isTypeParameterDeclaration), a(s.parameters, c, u, l), n(s.type, c, e.isTypeNode), o(s.body, c, u));

    case 195:
     return e.updateArrowFunction(s, l(s.modifiers, c, e.isModifier), l(s.typeParameters, c, e.isTypeParameterDeclaration), a(s.parameters, c, u, l), n(s.type, c, e.isTypeNode), n(s.equalsGreaterThanToken, c, e.isToken), o(s.body, c, u));

    case 196:
     return e.updateDelete(s, n(s.expression, c, e.isExpression));

    case 197:
     return e.updateTypeOf(s, n(s.expression, c, e.isExpression));

    case 198:
     return e.updateVoid(s, n(s.expression, c, e.isExpression));

    case 199:
     return e.updateAwait(s, n(s.expression, c, e.isExpression));

    case 200:
     return e.updatePrefix(s, n(s.operand, c, e.isExpression));

    case 201:
     return e.updatePostfix(s, n(s.operand, c, e.isExpression));

    case 202:
     return e.updateBinary(s, n(s.left, c, e.isExpression), n(s.right, c, e.isExpression), n(s.operatorToken, c, e.isToken));

    case 203:
     return e.updateConditional(s, n(s.condition, c, e.isExpression), n(s.questionToken, c, e.isToken), n(s.whenTrue, c, e.isExpression), n(s.colonToken, c, e.isToken), n(s.whenFalse, c, e.isExpression));

    case 204:
     return e.updateTemplateExpression(s, n(s.head, c, e.isTemplateHead), l(s.templateSpans, c, e.isTemplateSpan));

    case 205:
     return e.updateYield(s, n(s.asteriskToken, f, e.isToken), n(s.expression, c, e.isExpression));

    case 206:
     return e.updateSpread(s, n(s.expression, c, e.isExpression));

    case 207:
     return e.updateClassExpression(s, l(s.modifiers, c, e.isModifier), n(s.name, c, e.isIdentifier), l(s.typeParameters, c, e.isTypeParameterDeclaration), l(s.heritageClauses, c, e.isHeritageClause), l(s.members, c, e.isClassElement));

    case 209:
     return e.updateExpressionWithTypeArguments(s, l(s.typeArguments, c, e.isTypeNode), n(s.expression, c, e.isExpression));

    case 210:
     return e.updateAsExpression(s, n(s.expression, c, e.isExpression), n(s.type, c, e.isTypeNode));

    case 211:
     return e.updateNonNullExpression(s, n(s.expression, c, e.isExpression));

    case 212:
     return e.updateMetaProperty(s, n(s.name, c, e.isIdentifier));

    case 214:
     return e.updateTemplateSpan(s, n(s.expression, c, e.isExpression), n(s.literal, c, e.isTemplateMiddleOrTemplateTail));

    case 216:
     return e.updateBlock(s, l(s.statements, c, e.isStatement));

    case 217:
     return e.updateVariableStatement(s, l(s.modifiers, c, e.isModifier), n(s.declarationList, c, e.isVariableDeclarationList));

    case 219:
     return e.updateExpressionStatement(s, n(s.expression, c, e.isExpression));

    case 220:
     return e.updateIf(s, n(s.expression, c, e.isExpression), n(s.thenStatement, c, e.isStatement, e.liftToBlock), n(s.elseStatement, c, e.isStatement, e.liftToBlock));

    case 221:
     return e.updateDo(s, n(s.statement, c, e.isStatement, e.liftToBlock), n(s.expression, c, e.isExpression));

    case 222:
     return e.updateWhile(s, n(s.expression, c, e.isExpression), n(s.statement, c, e.isStatement, e.liftToBlock));

    case 223:
     return e.updateFor(s, n(s.initializer, c, e.isForInitializer), n(s.condition, c, e.isExpression), n(s.incrementor, c, e.isExpression), n(s.statement, c, e.isStatement, e.liftToBlock));

    case 224:
     return e.updateForIn(s, n(s.initializer, c, e.isForInitializer), n(s.expression, c, e.isExpression), n(s.statement, c, e.isStatement, e.liftToBlock));

    case 225:
     return e.updateForOf(s, n(s.awaitModifier, c, e.isToken), n(s.initializer, c, e.isForInitializer), n(s.expression, c, e.isExpression), n(s.statement, c, e.isStatement, e.liftToBlock));

    case 226:
     return e.updateContinue(s, n(s.label, c, e.isIdentifier));

    case 227:
     return e.updateBreak(s, n(s.label, c, e.isIdentifier));

    case 228:
     return e.updateReturn(s, n(s.expression, c, e.isExpression));

    case 229:
     return e.updateWith(s, n(s.expression, c, e.isExpression), n(s.statement, c, e.isStatement, e.liftToBlock));

    case 230:
     return e.updateSwitch(s, n(s.expression, c, e.isExpression), n(s.caseBlock, c, e.isCaseBlock));

    case 231:
     return e.updateLabel(s, n(s.label, c, e.isIdentifier), n(s.statement, c, e.isStatement, e.liftToBlock));

    case 232:
     return e.updateThrow(s, n(s.expression, c, e.isExpression));

    case 233:
     return e.updateTry(s, n(s.tryBlock, c, e.isBlock), n(s.catchClause, c, e.isCatchClause), n(s.finallyBlock, c, e.isBlock));

    case 235:
     return e.updateVariableDeclaration(s, n(s.name, c, e.isBindingName), n(s.type, c, e.isTypeNode), n(s.initializer, c, e.isExpression));

    case 236:
     return e.updateVariableDeclarationList(s, l(s.declarations, c, e.isVariableDeclaration));

    case 237:
     return e.updateFunctionDeclaration(s, l(s.decorators, c, e.isDecorator), l(s.modifiers, c, e.isModifier), n(s.asteriskToken, f, e.isToken), n(s.name, c, e.isIdentifier), l(s.typeParameters, c, e.isTypeParameterDeclaration), a(s.parameters, c, u, l), n(s.type, c, e.isTypeNode), o(s.body, c, u));

    case 238:
     return e.updateClassDeclaration(s, l(s.decorators, c, e.isDecorator), l(s.modifiers, c, e.isModifier), n(s.name, c, e.isIdentifier), l(s.typeParameters, c, e.isTypeParameterDeclaration), l(s.heritageClauses, c, e.isHeritageClause), l(s.members, c, e.isClassElement));

    case 239:
     return e.updateInterfaceDeclaration(s, l(s.decorators, c, e.isDecorator), l(s.modifiers, c, e.isModifier), n(s.name, c, e.isIdentifier), l(s.typeParameters, c, e.isTypeParameterDeclaration), l(s.heritageClauses, c, e.isHeritageClause), l(s.members, c, e.isTypeElement));

    case 240:
     return e.updateTypeAliasDeclaration(s, l(s.decorators, c, e.isDecorator), l(s.modifiers, c, e.isModifier), n(s.name, c, e.isIdentifier), l(s.typeParameters, c, e.isTypeParameterDeclaration), n(s.type, c, e.isTypeNode));

    case 241:
     return e.updateEnumDeclaration(s, l(s.decorators, c, e.isDecorator), l(s.modifiers, c, e.isModifier), n(s.name, c, e.isIdentifier), l(s.members, c, e.isEnumMember));

    case 242:
     return e.updateModuleDeclaration(s, l(s.decorators, c, e.isDecorator), l(s.modifiers, c, e.isModifier), n(s.name, c, e.isIdentifier), n(s.body, c, e.isModuleBody));

    case 243:
     return e.updateModuleBlock(s, l(s.statements, c, e.isStatement));

    case 244:
     return e.updateCaseBlock(s, l(s.clauses, c, e.isCaseOrDefaultClause));

    case 245:
     return e.updateNamespaceExportDeclaration(s, n(s.name, c, e.isIdentifier));

    case 246:
     return e.updateImportEqualsDeclaration(s, l(s.decorators, c, e.isDecorator), l(s.modifiers, c, e.isModifier), n(s.name, c, e.isIdentifier), n(s.moduleReference, c, e.isModuleReference));

    case 247:
     return e.updateImportDeclaration(s, l(s.decorators, c, e.isDecorator), l(s.modifiers, c, e.isModifier), n(s.importClause, c, e.isImportClause), n(s.moduleSpecifier, c, e.isExpression));

    case 248:
     return e.updateImportClause(s, n(s.name, c, e.isIdentifier), n(s.namedBindings, c, e.isNamedImportBindings));

    case 249:
     return e.updateNamespaceImport(s, n(s.name, c, e.isIdentifier));

    case 250:
     return e.updateNamedImports(s, l(s.elements, c, e.isImportSpecifier));

    case 251:
     return e.updateImportSpecifier(s, n(s.propertyName, c, e.isIdentifier), n(s.name, c, e.isIdentifier));

    case 252:
     return e.updateExportAssignment(s, l(s.decorators, c, e.isDecorator), l(s.modifiers, c, e.isModifier), n(s.expression, c, e.isExpression));

    case 253:
     return e.updateExportDeclaration(s, l(s.decorators, c, e.isDecorator), l(s.modifiers, c, e.isModifier), n(s.exportClause, c, e.isNamedExports), n(s.moduleSpecifier, c, e.isExpression));

    case 254:
     return e.updateNamedExports(s, l(s.elements, c, e.isExportSpecifier));

    case 255:
     return e.updateExportSpecifier(s, n(s.propertyName, c, e.isIdentifier), n(s.name, c, e.isIdentifier));

    case 257:
     return e.updateExternalModuleReference(s, n(s.expression, c, e.isExpression));

    case 258:
     return e.updateJsxElement(s, n(s.openingElement, c, e.isJsxOpeningElement), l(s.children, c, e.isJsxChild), n(s.closingElement, c, e.isJsxClosingElement));

    case 259:
     return e.updateJsxSelfClosingElement(s, n(s.tagName, c, e.isJsxTagNameExpression), l(s.typeArguments, c, e.isTypeNode), n(s.attributes, c, e.isJsxAttributes));

    case 260:
     return e.updateJsxOpeningElement(s, n(s.tagName, c, e.isJsxTagNameExpression), l(s.typeArguments, c, e.isTypeNode), n(s.attributes, c, e.isJsxAttributes));

    case 261:
     return e.updateJsxClosingElement(s, n(s.tagName, c, e.isJsxTagNameExpression));

    case 262:
     return e.updateJsxFragment(s, n(s.openingFragment, c, e.isJsxOpeningFragment), l(s.children, c, e.isJsxChild), n(s.closingFragment, c, e.isJsxClosingFragment));

    case 265:
     return e.updateJsxAttribute(s, n(s.name, c, e.isIdentifier), n(s.initializer, c, e.isStringLiteralOrJsxExpression));

    case 266:
     return e.updateJsxAttributes(s, l(s.properties, c, e.isJsxAttributeLike));

    case 267:
     return e.updateJsxSpreadAttribute(s, n(s.expression, c, e.isExpression));

    case 268:
     return e.updateJsxExpression(s, n(s.expression, c, e.isExpression));

    case 269:
     return e.updateCaseClause(s, n(s.expression, c, e.isExpression), l(s.statements, c, e.isStatement));

    case 270:
     return e.updateDefaultClause(s, l(s.statements, c, e.isStatement));

    case 271:
     return e.updateHeritageClause(s, l(s.types, c, e.isExpressionWithTypeArguments));

    case 272:
     return e.updateCatchClause(s, n(s.variableDeclaration, c, e.isVariableDeclaration), n(s.block, c, e.isBlock));

    case 273:
     return e.updatePropertyAssignment(s, n(s.name, c, e.isPropertyName), n(s.initializer, c, e.isExpression));

    case 274:
     return e.updateShorthandPropertyAssignment(s, n(s.name, c, e.isIdentifier), n(s.objectAssignmentInitializer, c, e.isExpression));

    case 275:
     return e.updateSpreadAssignment(s, n(s.expression, c, e.isExpression));

    case 276:
     return e.updateEnumMember(s, n(s.name, c, e.isPropertyName), n(s.initializer, c, e.isExpression));

    case 277:
     return e.updateSourceFileNode(s, i(s.statements, c, u));

    case 305:
     return e.updatePartiallyEmittedExpression(s, n(s.expression, c, e.isExpression));

    case 306:
     return e.updateCommaList(s, l(s.elements, c, e.isExpression));

    default:
     return s;
    }
   }
   e.visitEachChild = s;
   function c(t) {
    e.Debug.assert(t.length <= 1, "Too many nodes written to output.");
    return e.singleOrUndefined(t);
   }
  })(s || (s = {}));
  (function(e) {
   function t(e, t, n) {
    return e ? t(n, e) : n;
   }
   function n(e, t, n) {
    return e ? t(n, e) : n;
   }
   function r(r, i, a, o) {
    if (r === undefined) {
     return i;
    }
    var s = o ? n : e.reduceLeft;
    var c = o || a;
    var u = r.kind;
    if (u > 0 && u <= 145) {
     return i;
    }
    if (u >= 161 && u <= 180) {
     return i;
    }
    var l = i;
    switch (r.kind) {
    case 215:
    case 218:
    case 208:
    case 234:
    case 304:
     break;

    case 146:
     l = t(r.left, a, l);
     l = t(r.right, a, l);
     break;

    case 147:
     l = t(r.expression, a, l);
     break;

    case 149:
     l = s(r.decorators, c, l);
     l = s(r.modifiers, c, l);
     l = t(r.name, a, l);
     l = t(r.type, a, l);
     l = t(r.initializer, a, l);
     break;

    case 150:
     l = t(r.expression, a, l);
     break;

    case 151:
     l = s(r.modifiers, c, l);
     l = t(r.name, a, l);
     l = t(r.questionToken, a, l);
     l = t(r.type, a, l);
     l = t(r.initializer, a, l);
     break;

    case 152:
     l = s(r.decorators, c, l);
     l = s(r.modifiers, c, l);
     l = t(r.name, a, l);
     l = t(r.type, a, l);
     l = t(r.initializer, a, l);
     break;

    case 154:
     l = s(r.decorators, c, l);
     l = s(r.modifiers, c, l);
     l = t(r.name, a, l);
     l = s(r.typeParameters, c, l);
     l = s(r.parameters, c, l);
     l = t(r.type, a, l);
     l = t(r.body, a, l);
     break;

    case 155:
     l = s(r.modifiers, c, l);
     l = s(r.parameters, c, l);
     l = t(r.body, a, l);
     break;

    case 156:
     l = s(r.decorators, c, l);
     l = s(r.modifiers, c, l);
     l = t(r.name, a, l);
     l = s(r.parameters, c, l);
     l = t(r.type, a, l);
     l = t(r.body, a, l);
     break;

    case 157:
     l = s(r.decorators, c, l);
     l = s(r.modifiers, c, l);
     l = t(r.name, a, l);
     l = s(r.parameters, c, l);
     l = t(r.body, a, l);
     break;

    case 182:
    case 183:
     l = s(r.elements, c, l);
     break;

    case 184:
     l = t(r.propertyName, a, l);
     l = t(r.name, a, l);
     l = t(r.initializer, a, l);
     break;

    case 185:
     l = s(r.elements, c, l);
     break;

    case 186:
     l = s(r.properties, c, l);
     break;

    case 187:
     l = t(r.expression, a, l);
     l = t(r.name, a, l);
     break;

    case 188:
     l = t(r.expression, a, l);
     l = t(r.argumentExpression, a, l);
     break;

    case 189:
     l = t(r.expression, a, l);
     l = s(r.typeArguments, c, l);
     l = s(r.arguments, c, l);
     break;

    case 190:
     l = t(r.expression, a, l);
     l = s(r.typeArguments, c, l);
     l = s(r.arguments, c, l);
     break;

    case 191:
     l = t(r.tag, a, l);
     l = t(r.template, a, l);
     break;

    case 192:
     l = t(r.type, a, l);
     l = t(r.expression, a, l);
     break;

    case 194:
     l = s(r.modifiers, c, l);
     l = t(r.name, a, l);
     l = s(r.typeParameters, c, l);
     l = s(r.parameters, c, l);
     l = t(r.type, a, l);
     l = t(r.body, a, l);
     break;

    case 195:
     l = s(r.modifiers, c, l);
     l = s(r.typeParameters, c, l);
     l = s(r.parameters, c, l);
     l = t(r.type, a, l);
     l = t(r.body, a, l);
     break;

    case 193:
    case 196:
    case 197:
    case 198:
    case 199:
    case 205:
    case 206:
    case 211:
     l = t(r.expression, a, l);
     break;

    case 200:
    case 201:
     l = t(r.operand, a, l);
     break;

    case 202:
     l = t(r.left, a, l);
     l = t(r.right, a, l);
     break;

    case 203:
     l = t(r.condition, a, l);
     l = t(r.whenTrue, a, l);
     l = t(r.whenFalse, a, l);
     break;

    case 204:
     l = t(r.head, a, l);
     l = s(r.templateSpans, c, l);
     break;

    case 207:
     l = s(r.modifiers, c, l);
     l = t(r.name, a, l);
     l = s(r.typeParameters, c, l);
     l = s(r.heritageClauses, c, l);
     l = s(r.members, c, l);
     break;

    case 209:
     l = t(r.expression, a, l);
     l = s(r.typeArguments, c, l);
     break;

    case 210:
     l = t(r.expression, a, l);
     l = t(r.type, a, l);
     break;

    case 214:
     l = t(r.expression, a, l);
     l = t(r.literal, a, l);
     break;

    case 216:
     l = s(r.statements, c, l);
     break;

    case 217:
     l = s(r.modifiers, c, l);
     l = t(r.declarationList, a, l);
     break;

    case 219:
     l = t(r.expression, a, l);
     break;

    case 220:
     l = t(r.expression, a, l);
     l = t(r.thenStatement, a, l);
     l = t(r.elseStatement, a, l);
     break;

    case 221:
     l = t(r.statement, a, l);
     l = t(r.expression, a, l);
     break;

    case 222:
    case 229:
     l = t(r.expression, a, l);
     l = t(r.statement, a, l);
     break;

    case 223:
     l = t(r.initializer, a, l);
     l = t(r.condition, a, l);
     l = t(r.incrementor, a, l);
     l = t(r.statement, a, l);
     break;

    case 224:
    case 225:
     l = t(r.initializer, a, l);
     l = t(r.expression, a, l);
     l = t(r.statement, a, l);
     break;

    case 228:
    case 232:
     l = t(r.expression, a, l);
     break;

    case 230:
     l = t(r.expression, a, l);
     l = t(r.caseBlock, a, l);
     break;

    case 231:
     l = t(r.label, a, l);
     l = t(r.statement, a, l);
     break;

    case 233:
     l = t(r.tryBlock, a, l);
     l = t(r.catchClause, a, l);
     l = t(r.finallyBlock, a, l);
     break;

    case 235:
     l = t(r.name, a, l);
     l = t(r.type, a, l);
     l = t(r.initializer, a, l);
     break;

    case 236:
     l = s(r.declarations, c, l);
     break;

    case 237:
     l = s(r.decorators, c, l);
     l = s(r.modifiers, c, l);
     l = t(r.name, a, l);
     l = s(r.typeParameters, c, l);
     l = s(r.parameters, c, l);
     l = t(r.type, a, l);
     l = t(r.body, a, l);
     break;

    case 238:
     l = s(r.decorators, c, l);
     l = s(r.modifiers, c, l);
     l = t(r.name, a, l);
     l = s(r.typeParameters, c, l);
     l = s(r.heritageClauses, c, l);
     l = s(r.members, c, l);
     break;

    case 241:
     l = s(r.decorators, c, l);
     l = s(r.modifiers, c, l);
     l = t(r.name, a, l);
     l = s(r.members, c, l);
     break;

    case 242:
     l = s(r.decorators, c, l);
     l = s(r.modifiers, c, l);
     l = t(r.name, a, l);
     l = t(r.body, a, l);
     break;

    case 243:
     l = s(r.statements, c, l);
     break;

    case 244:
     l = s(r.clauses, c, l);
     break;

    case 246:
     l = s(r.decorators, c, l);
     l = s(r.modifiers, c, l);
     l = t(r.name, a, l);
     l = t(r.moduleReference, a, l);
     break;

    case 247:
     l = s(r.decorators, c, l);
     l = s(r.modifiers, c, l);
     l = t(r.importClause, a, l);
     l = t(r.moduleSpecifier, a, l);
     break;

    case 248:
     l = t(r.name, a, l);
     l = t(r.namedBindings, a, l);
     break;

    case 249:
     l = t(r.name, a, l);
     break;

    case 250:
    case 254:
     l = s(r.elements, c, l);
     break;

    case 251:
    case 255:
     l = t(r.propertyName, a, l);
     l = t(r.name, a, l);
     break;

    case 252:
     l = e.reduceLeft(r.decorators, a, l);
     l = e.reduceLeft(r.modifiers, a, l);
     l = t(r.expression, a, l);
     break;

    case 253:
     l = e.reduceLeft(r.decorators, a, l);
     l = e.reduceLeft(r.modifiers, a, l);
     l = t(r.exportClause, a, l);
     l = t(r.moduleSpecifier, a, l);
     break;

    case 257:
     l = t(r.expression, a, l);
     break;

    case 258:
     l = t(r.openingElement, a, l);
     l = e.reduceLeft(r.children, a, l);
     l = t(r.closingElement, a, l);
     break;

    case 262:
     l = t(r.openingFragment, a, l);
     l = e.reduceLeft(r.children, a, l);
     l = t(r.closingFragment, a, l);
     break;

    case 259:
    case 260:
     l = t(r.tagName, a, l);
     l = t(r.attributes, a, l);
     break;

    case 266:
     l = s(r.properties, c, l);
     break;

    case 261:
     l = t(r.tagName, a, l);
     break;

    case 265:
     l = t(r.name, a, l);
     l = t(r.initializer, a, l);
     break;

    case 267:
     l = t(r.expression, a, l);
     break;

    case 268:
     l = t(r.expression, a, l);
     break;

    case 269:
     l = t(r.expression, a, l);

    case 270:
     l = s(r.statements, c, l);
     break;

    case 271:
     l = s(r.types, c, l);
     break;

    case 272:
     l = t(r.variableDeclaration, a, l);
     l = t(r.block, a, l);
     break;

    case 273:
     l = t(r.name, a, l);
     l = t(r.initializer, a, l);
     break;

    case 274:
     l = t(r.name, a, l);
     l = t(r.objectAssignmentInitializer, a, l);
     break;

    case 275:
     l = t(r.expression, a, l);
     break;

    case 276:
     l = t(r.name, a, l);
     l = t(r.initializer, a, l);
     break;

    case 277:
     l = s(r.statements, c, l);
     break;

    case 305:
     l = t(r.expression, a, l);
     break;

    case 306:
     l = s(r.elements, c, l);
     break;

    default:
     break;
    }
    return l;
   }
   e.reduceEachChild = r;
   function i(t, n) {
    if (!e.some(n)) {
     return t;
    }
    return e.isNodeArray(t) ? e.setTextRange(e.createNodeArray(e.addStatementsAfterPrologue(t.slice(), n)), t) : e.addStatementsAfterPrologue(t, n);
   }
   e.mergeLexicalEnvironment = i;
   function a(t) {
    d.assert(e.every(t, e.isStatement), "Cannot lift nodes to a Block.");
    return e.singleOrUndefined(t) || e.createBlock(t);
   }
   e.liftToBlock = a;
   function o(e) {
    s(e);
    return e;
   }
   e.aggregateTransformFlags = o;
   function s(t) {
    if (t === undefined) {
     return 0;
    }
    if (t.transformFlags & 536870912) {
     return t.transformFlags & ~e.getTransformFlagsSubtreeExclusions(t.kind);
    }
    var n = u(t);
    return e.computeTransformFlagsForNode(t, n);
   }
   function c(e) {
    if (e === undefined) {
     return 0;
    }
    var t = 0;
    var n = 0;
    for (var r = 0, i = e; r < i.length; r++) {
     var a = i[r];
     t |= s(a);
     n |= a.transformFlags & ~536870912;
    }
    e.transformFlags = n | 536870912;
    return t;
   }
   function u(t) {
    if (e.hasModifier(t, 2) || e.isTypeNode(t) && t.kind !== 209) {
     return 0;
    }
    return r(t, 0, l, f);
   }
   function l(e, t) {
    return e | s(t);
   }
   function f(e, t) {
    return e | c(t);
   }
   var d;
   (function(t) {
    var n = false;
    function r(n, i) {
     return t.fail((i || "Unexpected node.") + "\r\nNode " + e.formatSyntaxKind(n.kind) + " was unexpected.", r);
    }
    t.failBadSyntaxKind = r;
    t.assertEachNode = t.shouldAssert(1) ? function(n, r, i) {
     return t.assert(r === undefined || e.every(n, r), i || "Unexpected node.", function() {
      return "Node array did not pass test '" + t.getFunctionName(r) + "'.";
     }, t.assertEachNode);
    } : e.noop;
    t.assertNode = t.shouldAssert(1) ? function(n, r, i) {
     return t.assert(r === undefined || r(n), i || "Unexpected node.", function() {
      return "Node " + e.formatSyntaxKind(n.kind) + " did not pass test '" + t.getFunctionName(r) + "'.";
     }, t.assertNode);
    } : e.noop;
    t.assertOptionalNode = t.shouldAssert(1) ? function(n, r, i) {
     return t.assert(r === undefined || n === undefined || r(n), i || "Unexpected node.", function() {
      return "Node " + e.formatSyntaxKind(n.kind) + " did not pass test '" + t.getFunctionName(r) + "'.";
     }, t.assertOptionalNode);
    } : e.noop;
    t.assertOptionalToken = t.shouldAssert(1) ? function(n, r, i) {
     return t.assert(r === undefined || n === undefined || n.kind === r, i || "Unexpected node.", function() {
      return "Node " + e.formatSyntaxKind(n.kind) + " was not a '" + e.formatSyntaxKind(r) + "' token.";
     }, t.assertOptionalToken);
    } : e.noop;
    t.assertMissingNode = t.shouldAssert(1) ? function(n, r) {
     return t.assert(n === undefined, r || "Unexpected node.", function() {
      return "Node " + e.formatSyntaxKind(n.kind) + " was unexpected'.";
     }, t.assertMissingNode);
    } : e.noop;
    function i() {
     if (n) return;
     Object.defineProperties(e.objectAllocator.getSymbolConstructor().prototype, {
      __debugFlags: {
       get: function() {
        return e.formatSymbolFlags(this.flags);
       }
      }
     });
     Object.defineProperties(e.objectAllocator.getTypeConstructor().prototype, {
      __debugFlags: {
       get: function() {
        return e.formatTypeFlags(this.flags);
       }
      },
      __debugObjectFlags: {
       get: function() {
        return this.flags & 131072 ? e.formatObjectFlags(this.objectFlags) : "";
       }
      },
      __debugTypeToString: {
       value: function() {
        return this.checker.typeToString(this);
       }
      }
     });
     var t = [ e.objectAllocator.getNodeConstructor(), e.objectAllocator.getIdentifierConstructor(), e.objectAllocator.getTokenConstructor(), e.objectAllocator.getSourceFileConstructor() ];
     for (var r = 0, i = t; r < i.length; r++) {
      var a = i[r];
      if (!a.prototype.hasOwnProperty("__debugKind")) {
       Object.defineProperties(a.prototype, {
        __debugKind: {
         get: function() {
          return e.formatSyntaxKind(this.kind);
         }
        },
        __debugModifierFlags: {
         get: function() {
          return e.formatModifierFlags(e.getModifierFlagsNoCache(this));
         }
        },
        __debugTransformFlags: {
         get: function() {
          return e.formatTransformFlags(this.transformFlags);
         }
        },
        __debugEmitFlags: {
         get: function() {
          return e.formatEmitFlags(e.getEmitFlags(this));
         }
        },
        __debugGetText: {
         value: function(t) {
          if (e.nodeIsSynthesized(this)) return "";
          var n = e.getParseTreeNode(this);
          var r = n && e.getSourceFileOfNode(n);
          return r ? e.getSourceTextOfNodeFromSourceFile(r, n, t) : "";
         }
        }
       });
      }
     }
     n = true;
    }
    t.enableDebugInfo = i;
   })(d = e.Debug || (e.Debug = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   function t(t) {
    var n = e.createMap();
    return {
     get: function(r) {
      if (n.has(r)) {
       return n.get(r);
      }
      if (!t.fileExists || !t.readFile || !t.fileExists(r)) return;
      var i = t.readFile(r);
      var a = {
       text: i,
       lineMap: undefined,
       getLineAndCharacterOfPosition: function(t) {
        return e.computeLineAndCharacterOfPosition(e.getLineStarts(this), t);
       }
      };
      n.set(r, a);
      return a;
     }
    };
   }
   e.createSourceFileLikeCache = t;
  })(s || (s = {}));
  (function(e) {
   var t;
   (function(t) {
    t.identitySourceMapper = {
     getOriginalPosition: e.identity,
     getGeneratedPosition: e.identity
    };
    function n(t, n, r, a, o) {
     if (o === void 0) {
      o = e.createSourceFileLikeCache(t);
     }
     var s = e.getDirectoryPath(n);
     var c = r.sourceRoot ? e.getNormalizedAbsolutePath(r.sourceRoot, s) : s;
     var u;
     var l;
     var f;
     return {
      getOriginalPosition: p,
      getGeneratedPosition: d
     };
     function d(n) {
      var i = h();
      if (!e.length(i)) return n;
      var a = e.binarySearch(i, {
       sourcePath: n.fileName,
       sourcePosition: n.position
      }, e.identity, y);
      if (a < 0 && i.length > 0) {
       a = ~a;
      }
      if (!i[a] || e.comparePaths(n.fileName, i[a].sourcePath, c) !== 0) {
       return n;
      }
      return {
       fileName: e.toPath(r.file, c, t.getCanonicalFileName),
       position: i[a].emittedPosition
      };
     }
     function p(n) {
      var r = v();
      if (!e.length(r)) return n;
      var i = e.binarySearch(r, {
       emittedPosition: n.position
      }, e.identity, b);
      if (i < 0 && r.length > 0) {
       i = ~i;
      }
      return {
       fileName: e.toPath(r[i].sourcePath, c, t.getCanonicalFileName),
       position: r[i].sourcePosition
      };
     }
     function m(n, r) {
      var i = e.toPath(n, r, t.getCanonicalFileName);
      var s = a && a.getSourceFile(i);
      if (!s) {
       return o.get(i);
      }
      return s;
     }
     function _(t, n, r, i) {
      var a = m(t, n);
      if (!a) {
       return -1;
      }
      return e.getPositionOfLineAndCharacter(a, r, i);
     }
     function g() {
      return u || (u = i(r, x, t));
     }
     function h() {
      return f || (f = g().slice().sort(y));
     }
     function v() {
      return l || (l = g().slice().sort(b));
     }
     function y(t, n) {
      return e.comparePaths(t.sourcePath, n.sourcePath, c) || e.compareValues(t.sourcePosition, n.sourcePosition);
     }
     function b(t, n) {
      return e.compareValues(t.emittedPosition, n.emittedPosition);
     }
     function x(e) {
      var t = r.sources[e.sourceIndex];
      return {
       emittedPosition: _(r.file, s, e.emittedLine, e.emittedColumn),
       sourcePosition: _(t, c, e.sourceLine, e.sourceColumn),
       sourcePath: t
      };
     }
    }
    t.decode = n;
    function r(e) {
     var t = {
      encodedText: e.mappings,
      currentNameIndex: undefined,
      sourceMapNamesLength: e.names ? e.names.length : undefined,
      currentEmittedColumn: 0,
      currentEmittedLine: 0,
      currentSourceColumn: 0,
      currentSourceLine: 0,
      currentSourceIndex: 0,
      decodingIndex: 0
     };
     function n() {
      return {
       emittedColumn: t.currentEmittedColumn,
       emittedLine: t.currentEmittedLine,
       sourceColumn: t.currentSourceColumn,
       sourceIndex: t.currentSourceIndex,
       sourceLine: t.currentSourceLine,
       nameIndex: t.currentNameIndex
      };
     }
     return {
      get decodingIndex() {
       return t.decodingIndex;
      },
      get error() {
       return t.error;
      },
      get lastSpan() {
       return n();
      },
      next: function() {
       if (a(t) || t.error) return {
        done: true,
        value: undefined
       };
       if (!o(t)) return {
        done: true,
        value: undefined
       };
       return {
        done: false,
        value: n()
       };
      }
     };
    }
    t.decodeMappings = r;
    function i(t, n, i) {
     var a = r(t);
     var o = e.arrayFrom(a, n);
     if (a.error) {
      if (i && i.log) {
       i.log("Encountered error while decoding sourcemap: " + a.error);
      }
      return [];
     }
     return o;
    }
    function a(e) {
     return e.decodingIndex === e.encodedText.length;
    }
    function o(e) {
     while (e.decodingIndex < e.encodedText.length) {
      var t = e.encodedText.charCodeAt(e.decodingIndex);
      if (t === 59) {
       e.currentEmittedLine++;
       e.currentEmittedColumn = 0;
       e.decodingIndex++;
       continue;
      }
      if (t === 44) {
       e.decodingIndex++;
       continue;
      }
      e.currentEmittedColumn += r();
      if (n(e.currentEmittedColumn < 0, "Invalid emittedColumn found")) {
       return false;
      }
      if (n(c(e.encodedText, e.decodingIndex), "Unsupported Error Format: No entries after emitted column")) {
       return false;
      }
      e.currentSourceIndex += r();
      if (n(e.currentSourceIndex < 0, "Invalid sourceIndex found")) {
       return false;
      }
      if (n(c(e.encodedText, e.decodingIndex), "Unsupported Error Format: No entries after sourceIndex")) {
       return false;
      }
      e.currentSourceLine += r();
      if (n(e.currentSourceLine < 0, "Invalid sourceLine found")) {
       return false;
      }
      if (n(c(e.encodedText, e.decodingIndex), "Unsupported Error Format: No entries after emitted Line")) {
       return false;
      }
      e.currentSourceColumn += r();
      if (n(e.currentSourceColumn < 0, "Invalid sourceLine found")) {
       return false;
      }
      if (!c(e.encodedText, e.decodingIndex)) {
       if (e.currentNameIndex === undefined) {
        e.currentNameIndex = 0;
       }
       e.currentNameIndex += r();
      }
      if (n(!c(e.encodedText, e.decodingIndex), "Unsupported Error Format: There are more entries after " + (e.currentNameIndex === undefined ? "sourceColumn" : "nameIndex"))) {
       return false;
      }
      return true;
     }
     n(true, "No encoded entry found");
     return false;
     function n(t, n) {
      if (e.error) {
       return true;
      }
      if (t) {
       e.error = n;
      }
      return t;
     }
     function r() {
      var t = true;
      var r = 0;
      var i = 0;
      for (;t; e.decodingIndex++) {
       if (n(e.decodingIndex >= e.encodedText.length, "Error in decoding base64VLQFormatDecode, past the mapping string")) {
        return undefined;
       }
       var a = s(e.encodedText.charAt(e.decodingIndex));
       t = (a & 32) !== 0;
       i = i | (a & 31) << r;
       r += 5;
      }
      if ((i & 1) === 0) {
       i = i >> 1;
      } else {
       i = i >> 1;
       i = -i;
      }
      return i;
     }
    }
    function s(e) {
     return "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".indexOf(e);
    }
    function c(e, t) {
     return t === e.length || e.charCodeAt(t) === 44 || e.charCodeAt(t) === 59;
    }
   })(t = e.sourcemaps || (e.sourcemaps = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   function t(t) {
    t = e.getOriginalNode(t);
    return t ? e.getNodeId(t) : 0;
   }
   e.getOriginalNodeId = t;
   function n(t) {
    if (!t) return false;
    if (!e.isNamedImports(t)) return false;
    return e.some(t.elements, r);
   }
   function r(e) {
    return e.propertyName !== undefined && e.propertyName.escapedText === "default";
   }
   function i(t) {
    return n;
    function n(e) {
     return e.kind === 277 ? t(e) : r(e);
    }
    function r(n) {
     return e.createBundle(e.map(n.sourceFiles, t), n.prepends);
    }
   }
   e.chainBundle = i;
   function a(t) {
    if (!!e.getNamespaceDeclarationNode(t)) {
     return true;
    }
    var n = t.importClause && t.importClause.namedBindings;
    if (!n) {
     return false;
    }
    if (!e.isNamedImports(n)) return false;
    var i = 0;
    for (var a = 0, o = n.elements; a < o.length; a++) {
     var s = o[a];
     if (r(s)) {
      i++;
     }
    }
    return i > 0 && i !== n.elements.length || !!(n.elements.length - i) && e.isDefaultImport(t);
   }
   e.getImportNeedsImportStarHelper = a;
   function o(t) {
    return !a(t) && (e.isDefaultImport(t) || !!t.importClause && e.isNamedImports(t.importClause.namedBindings) && n(t.importClause.namedBindings));
   }
   e.getImportNeedsImportDefaultHelper = o;
   function s(n, r, i) {
    var s = [];
    var l = e.createMultiMap();
    var f = [];
    var d = e.createMap();
    var p;
    var m = false;
    var _;
    var g = false;
    var h = false;
    for (var v = 0, y = n.statements; v < y.length; v++) {
     var b = y[v];
     switch (b.kind) {
     case 247:
      s.push(b);
      h = h || a(b) || o(b);
      break;

     case 246:
      if (b.moduleReference.kind === 257) {
       s.push(b);
      }
      break;

     case 253:
      if (b.moduleSpecifier) {
       if (!b.exportClause) {
        s.push(b);
        g = true;
       } else {
        s.push(b);
       }
      } else {
       for (var x = 0, k = b.exportClause.elements; x < k.length; x++) {
        var S = k[x];
        if (!d.get(e.idText(S.name))) {
         var w = S.propertyName || S.name;
         l.add(e.idText(w), S);
         var C = r.getReferencedImportDeclaration(w) || r.getReferencedValueDeclaration(w);
         if (C) {
          u(f, t(C), S.name);
         }
         d.set(e.idText(S.name), true);
         p = e.append(p, S.name);
        }
       }
      }
      break;

     case 252:
      if (b.isExportEquals && !_) {
       _ = b;
      }
      break;

     case 217:
      if (e.hasModifier(b, 1)) {
       for (var D = 0, T = b.declarationList.declarations; D < T.length; D++) {
        var C = T[D];
        p = c(C, d, p);
       }
      }
      break;

     case 237:
      if (e.hasModifier(b, 1)) {
       if (e.hasModifier(b, 512)) {
        if (!m) {
         u(f, t(b), e.getDeclarationName(b));
         m = true;
        }
       } else {
        var w = b.name;
        if (!d.get(e.idText(w))) {
         u(f, t(b), w);
         d.set(e.idText(w), true);
         p = e.append(p, w);
        }
       }
      }
      break;

     case 238:
      if (e.hasModifier(b, 1)) {
       if (e.hasModifier(b, 512)) {
        if (!m) {
         u(f, t(b), e.getDeclarationName(b));
         m = true;
        }
       } else {
        var w = b.name;
        if (w && !d.get(e.idText(w))) {
         u(f, t(b), w);
         d.set(e.idText(w), true);
         p = e.append(p, w);
        }
       }
      }
      break;
     }
    }
    var E = e.getOrCreateExternalHelpersModuleNameIfNeeded(n, i, g, h);
    var N = E && e.createImportDeclaration(undefined, undefined, e.createImportClause(undefined, e.createNamespaceImport(E)), e.createLiteral(e.externalHelpersModuleNameText));
    if (N) {
     e.addEmitFlags(N, 67108864);
     s.unshift(N);
    }
    return {
     externalImports: s,
     exportSpecifiers: l,
     exportEquals: _,
     hasExportStarsToExportValues: g,
     exportedBindings: f,
     exportedNames: p,
     externalHelpersImportDeclaration: N
    };
   }
   e.collectExternalModuleInfo = s;
   function c(t, n, r) {
    if (e.isBindingPattern(t.name)) {
     for (var i = 0, a = t.name.elements; i < a.length; i++) {
      var o = a[i];
      if (!e.isOmittedExpression(o)) {
       r = c(o, n, r);
      }
     }
    } else if (!e.isGeneratedIdentifier(t.name)) {
     var s = e.idText(t.name);
     if (!n.get(s)) {
      n.set(s, true);
      r = e.append(r, t.name);
     }
    }
    return r;
   }
   function u(e, t, n) {
    var r = e[t];
    if (r) {
     r.push(n);
    } else {
     e[t] = r = [ n ];
    }
    return r;
   }
   function l(t) {
    return e.isStringLiteralLike(t) || t.kind === 8 || e.isKeyword(t.kind) || e.isIdentifier(t);
   }
   e.isSimpleCopiableExpression = l;
   function f(e) {
    var t = [];
    for (var n = 1; n < arguments.length; n++) {
     t[n - 1] = arguments[n];
    }
    return function(n) {
     var r = "";
     for (var i = 0; i < t.length; i++) {
      r += e[i];
      r += n(t[i]);
     }
     r += e[e.length - 1];
     return r;
    };
   }
   e.helperString = f;
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(e) {
    e[e["All"] = 0] = "All";
    e[e["ObjectRest"] = 1] = "ObjectRest";
   })(t = e.FlattenLevel || (e.FlattenLevel = {}));
   function n(t, n, i, a, s, c) {
    var u = t;
    var l;
    if (e.isDestructuringAssignment(t)) {
     l = t.right;
     while (e.isEmptyArrayLiteral(t.left) || e.isEmptyObjectLiteral(t.left)) {
      if (e.isDestructuringAssignment(l)) {
       u = t = l;
       l = t.right;
      } else {
       return e.visitNode(l, n, e.isExpression);
      }
     }
    }
    var d;
    var m = {
     context: i,
     level: a,
     downlevelIteration: !!i.getCompilerOptions().downlevelIteration,
     hoistTempVariables: true,
     emitExpression: g,
     emitBindingOrAssignment: v,
     createArrayBindingOrAssignmentPattern: p,
     createObjectBindingOrAssignmentPattern: _,
     createArrayBindingOrAssignmentElement: h,
     visitor: n
    };
    if (l) {
     l = e.visitNode(l, n, e.isExpression);
     if (e.isIdentifier(l) && r(t, l.escapedText)) {
      l = f(m, l, false, u);
     } else if (s) {
      l = f(m, l, true, u);
     } else if (e.nodeIsSynthesized(t)) {
      u = l;
     }
    }
    o(m, t, l, u, e.isDestructuringAssignment(t));
    if (l && s) {
     if (!e.some(d)) {
      return l;
     }
     d.push(l);
    }
    return e.aggregateTransformFlags(e.inlineExpressions(d)) || e.createOmittedExpression();
    function g(t) {
     e.setEmitFlags(t, 64);
     e.aggregateTransformFlags(t);
     d = e.append(d, t);
    }
    function v(t, r, i, a) {
     e.Debug.assertNode(t, c ? e.isIdentifier : e.isExpression);
     var o = c ? c(t, r, i) : e.setTextRange(e.createAssignment(e.visitNode(t, n, e.isExpression), r), i);
     o.original = a;
     g(o);
    }
   }
   e.flattenDestructuringAssignment = n;
   function r(t, n) {
    var r = e.getTargetOfBindingOrAssignmentElement(t);
    if (e.isBindingOrAssignmentPattern(r)) {
     return i(r, n);
    } else if (e.isIdentifier(r)) {
     return r.escapedText === n;
    }
    return false;
   }
   function i(t, n) {
    var i = e.getElementsOfBindingOrAssignmentPattern(t);
    for (var a = 0, o = i; a < o.length; a++) {
     var s = o[a];
     if (r(s, n)) {
      return true;
     }
    }
    return false;
   }
   function a(t, n, i, a, s, c, u) {
    if (c === void 0) {
     c = false;
    }
    var l;
    var p = [];
    var _ = [];
    var h = {
     context: i,
     level: a,
     downlevelIteration: !!i.getCompilerOptions().downlevelIteration,
     hoistTempVariables: c,
     emitExpression: A,
     emitBindingOrAssignment: F,
     createArrayBindingOrAssignmentPattern: d,
     createObjectBindingOrAssignmentPattern: m,
     createArrayBindingOrAssignmentElement: g,
     visitor: n
    };
    if (e.isVariableDeclaration(t)) {
     var v = e.getInitializerOfBindingOrAssignmentElement(t);
     if (v && e.isIdentifier(v) && r(t, v.escapedText)) {
      v = f(h, v, false, v);
      t = e.updateVariableDeclaration(t, t.name, t.type, v);
     }
    }
    o(h, t, s, t, u);
    if (l) {
     var y = e.createTempVariable(undefined);
     if (c) {
      var b = e.inlineExpressions(l);
      l = undefined;
      F(y, b, undefined, undefined);
     } else {
      i.hoistVariableDeclaration(y);
      var x = e.last(p);
      x.pendingExpressions = e.append(x.pendingExpressions, e.createAssignment(y, x.value));
      e.addRange(x.pendingExpressions, l);
      x.value = y;
     }
    }
    for (var k = 0, S = p; k < S.length; k++) {
     var w = S[k], C = w.pendingExpressions, D = w.name, b = w.value, T = w.location, E = w.original;
     var N = e.createVariableDeclaration(D, undefined, C ? e.inlineExpressions(e.append(C, b)) : b);
     N.original = E;
     e.setTextRange(N, T);
     if (e.isIdentifier(D)) {
      e.setEmitFlags(N, 64);
     }
     e.aggregateTransformFlags(N);
     _.push(N);
    }
    return _;
    function A(t) {
     l = e.append(l, t);
    }
    function F(t, n, r, i) {
     e.Debug.assertNode(t, e.isBindingName);
     if (l) {
      n = e.inlineExpressions(e.append(l, n));
      l = undefined;
     }
     p.push({
      pendingExpressions: l,
      name: t,
      value: n,
      location: r,
      original: i
     });
    }
   }
   e.flattenDestructuringBinding = a;
   function o(t, n, r, i, a) {
    if (!a) {
     var o = e.visitNode(e.getInitializerOfBindingOrAssignmentElement(n), t.visitor, e.isExpression);
     if (o) {
      r = r ? u(t, r, o, i) : o;
     } else if (!r) {
      r = e.createVoidZero();
     }
    }
    var l = e.getTargetOfBindingOrAssignmentElement(n);
    if (e.isObjectBindingOrAssignmentPattern(l)) {
     s(t, n, l, r, i);
    } else if (e.isArrayBindingOrAssignmentPattern(l)) {
     c(t, n, l, r, i);
    } else {
     t.emitBindingOrAssignment(l, r, i, n);
    }
   }
   function s(t, n, r, i, a) {
    var s = e.getElementsOfBindingOrAssignmentPattern(r);
    var c = s.length;
    if (c !== 1) {
     var u = !e.isDeclarationBindingElement(n) || c !== 0;
     i = f(t, i, u, a);
    }
    var d;
    var p;
    for (var m = 0; m < c; m++) {
     var _ = s[m];
     if (!e.getRestIndicatorOfBindingOrAssignmentElement(_)) {
      var g = e.getPropertyNameOfBindingOrAssignmentElement(_);
      if (t.level >= 1 && !(_.transformFlags & (524288 | 1048576)) && !(e.getTargetOfBindingOrAssignmentElement(_).transformFlags & (524288 | 1048576)) && !e.isComputedPropertyName(g)) {
       d = e.append(d, _);
      } else {
       if (d) {
        t.emitBindingOrAssignment(t.createObjectBindingOrAssignmentPattern(d), i, a, r);
        d = undefined;
       }
       var h = l(t, i, g);
       if (e.isComputedPropertyName(g)) {
        p = e.append(p, h.argumentExpression);
       }
       o(t, _, h, _);
      }
     } else if (m === c - 1) {
      if (d) {
       t.emitBindingOrAssignment(t.createObjectBindingOrAssignmentPattern(d), i, a, r);
       d = undefined;
      }
      var h = y(t.context, i, s, p, r);
      o(t, _, h, _);
     }
    }
    if (d) {
     t.emitBindingOrAssignment(t.createObjectBindingOrAssignmentPattern(d), i, a, r);
    }
   }
   function c(t, n, r, i, a) {
    var s = e.getElementsOfBindingOrAssignmentPattern(r);
    var c = s.length;
    if (t.level < 1 && t.downlevelIteration) {
     i = f(t, e.createReadHelper(t.context, i, c > 0 && e.getRestIndicatorOfBindingOrAssignmentElement(s[c - 1]) ? undefined : c, a), false, a);
    } else if (c !== 1 && (t.level < 1 || c === 0) || e.every(s, e.isOmittedExpression)) {
     var u = !e.isDeclarationBindingElement(n) || c !== 0;
     i = f(t, i, u, a);
    }
    var l;
    var d;
    for (var p = 0; p < c; p++) {
     var m = s[p];
     if (t.level >= 1) {
      if (m.transformFlags & 1048576) {
       var _ = e.createTempVariable(undefined);
       if (t.hoistTempVariables) {
        t.context.hoistVariableDeclaration(_);
       }
       d = e.append(d, [ _, m ]);
       l = e.append(l, t.createArrayBindingOrAssignmentElement(_));
      } else {
       l = e.append(l, m);
      }
     } else if (e.isOmittedExpression(m)) {
      continue;
     } else if (!e.getRestIndicatorOfBindingOrAssignmentElement(m)) {
      var g = e.createElementAccess(i, p);
      o(t, m, g, m);
     } else if (p === c - 1) {
      var g = e.createArraySlice(i, p);
      o(t, m, g, m);
     }
    }
    if (l) {
     t.emitBindingOrAssignment(t.createArrayBindingOrAssignmentPattern(l), i, a, r);
    }
    if (d) {
     for (var h = 0, v = d; h < v.length; h++) {
      var y = v[h], b = y[0], m = y[1];
      o(t, m, b, m);
     }
    }
   }
   function u(t, n, r, i) {
    n = f(t, n, true, i);
    return e.createConditional(e.createTypeCheck(n, "undefined"), r, n);
   }
   function l(t, n, r) {
    if (e.isComputedPropertyName(r)) {
     var i = f(t, e.visitNode(r.expression, t.visitor), false, r);
     return e.createElementAccess(n, i);
    } else if (e.isStringOrNumericLiteral(r)) {
     var i = e.getSynthesizedClone(r);
     i.text = i.text;
     return e.createElementAccess(n, i);
    } else {
     var a = e.createIdentifier(e.idText(r));
     return e.createPropertyAccess(n, a);
    }
   }
   function f(t, n, r, i) {
    if (e.isIdentifier(n) && r) {
     return n;
    } else {
     var a = e.createTempVariable(undefined);
     if (t.hoistTempVariables) {
      t.context.hoistVariableDeclaration(a);
      t.emitExpression(e.setTextRange(e.createAssignment(a, n), i));
     } else {
      t.emitBindingOrAssignment(a, n, i, undefined);
     }
     return a;
    }
   }
   function d(t) {
    e.Debug.assertEachNode(t, e.isArrayBindingElement);
    return e.createArrayBindingPattern(t);
   }
   function p(t) {
    return e.createArrayLiteral(e.map(t, e.convertToArrayAssignmentElement));
   }
   function m(t) {
    e.Debug.assertEachNode(t, e.isBindingElement);
    return e.createObjectBindingPattern(t);
   }
   function _(t) {
    return e.createObjectLiteral(e.map(t, e.convertToObjectAssignmentElement));
   }
   function g(t) {
    return e.createBindingElement(undefined, undefined, t);
   }
   function h(e) {
    return e;
   }
   var v = {
    name: "typescript:rest",
    scoped: false,
    text: '\n            var __rest = (this && this.__rest) || function (s, e) {\n                var t = {};\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n                    t[p] = s[p];\n                if (s != null && typeof Object.getOwnPropertySymbols === "function")\n                    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n                        t[p[i]] = s[p[i]];\n                return t;\n            };'
   };
   function y(t, n, r, i, a) {
    t.requestEmitHelper(v);
    var o = [];
    var s = 0;
    for (var c = 0; c < r.length - 1; c++) {
     var u = e.getPropertyNameOfBindingOrAssignmentElement(r[c]);
     if (u) {
      if (e.isComputedPropertyName(u)) {
       var l = i[s];
       s++;
       o.push(e.createConditional(e.createTypeCheck(l, "symbol"), l, e.createAdd(l, e.createLiteral(""))));
      } else {
       o.push(e.createLiteral(u));
      }
     }
    }
    return e.createCall(e.getHelperName("__rest"), undefined, [ n, e.setTextRange(e.createArrayLiteral(o), a) ]);
   }
  })(s || (s = {}));
  var s;
  (function(e) {
   var t = false;
   var n;
   (function(e) {
    e[e["ClassAliases"] = 1] = "ClassAliases";
    e[e["NamespaceExports"] = 2] = "NamespaceExports";
    e[e["NonQualifiedEnumMembers"] = 8] = "NonQualifiedEnumMembers";
   })(n || (n = {}));
   var r;
   (function(e) {
    e[e["None"] = 0] = "None";
    e[e["HasStaticInitializedProperties"] = 1] = "HasStaticInitializedProperties";
    e[e["HasConstructorDecorators"] = 2] = "HasConstructorDecorators";
    e[e["HasMemberDecorators"] = 4] = "HasMemberDecorators";
    e[e["IsExportOfNamespace"] = 8] = "IsExportOfNamespace";
    e[e["IsNamedExternalExport"] = 16] = "IsNamedExternalExport";
    e[e["IsDefaultExternalExport"] = 32] = "IsDefaultExternalExport";
    e[e["IsDerivedClass"] = 64] = "IsDerivedClass";
    e[e["UseImmediatelyInvokedFunctionExpression"] = 128] = "UseImmediatelyInvokedFunctionExpression";
    e[e["HasAnyDecorators"] = 6] = "HasAnyDecorators";
    e[e["NeedsName"] = 5] = "NeedsName";
    e[e["MayNeedImmediatelyInvokedFunctionExpression"] = 7] = "MayNeedImmediatelyInvokedFunctionExpression";
    e[e["IsExported"] = 56] = "IsExported";
   })(r || (r = {}));
   function i(n) {
    var r = n.startLexicalEnvironment, i = n.resumeLexicalEnvironment, o = n.endLexicalEnvironment, c = n.hoistVariableDeclaration;
    var l = n.getEmitResolver();
    var f = n.getCompilerOptions();
    var d = e.getStrictOptionValue(f, "strictNullChecks");
    var p = e.getEmitScriptTarget(f);
    var m = e.getEmitModuleKind(f);
    var _ = n.onEmitNode;
    var g = n.onSubstituteNode;
    n.onEmitNode = ln;
    n.onSubstituteNode = fn;
    n.enableSubstitution(187);
    n.enableSubstitution(188);
    var h;
    var v;
    var y;
    var b;
    var x;
    var k;
    var S;
    var w;
    var C;
    var D;
    return T;
    function T(e) {
     if (e.kind === 278) {
      return E(e);
     }
     return N(e);
    }
    function E(t) {
     return e.createBundle(t.sourceFiles.map(N), e.mapDefined(t.prepends, function(t) {
      if (t.kind === 280) {
       return e.createUnparsedSourceFile(t.javascriptText, t.javascriptMapPath, t.javascriptMapText);
      }
      return t;
     }));
    }
    function N(t) {
     if (t.isDeclarationFile) {
      return t;
     }
     h = t;
     var r = A(t, J);
     e.addEmitHelpers(r, n.readEmitHelpers());
     h = undefined;
     return r;
    }
    function A(e, t) {
     var n = b;
     var r = x;
     var i = k;
     F(e);
     var a = t(e);
     if (b !== n) {
      k = i;
     }
     b = n;
     x = r;
     return a;
    }
    function F(t) {
     switch (t.kind) {
     case 277:
     case 244:
     case 243:
     case 216:
      b = t;
      x = undefined;
      k = undefined;
      break;

     case 238:
     case 237:
      if (e.hasModifier(t, 2)) {
       break;
      }
      if (t.name) {
       Tt(t);
      } else {
       e.Debug.assert(t.kind === 238 || e.hasModifier(t, 512));
      }
      if (e.isClassDeclaration(t)) {
       x = t;
      }
      break;
     }
    }
    function P(e) {
     return A(e, I);
    }
    function I(t) {
     if (t.transformFlags & 1) {
      return U(t);
     } else if (t.transformFlags & 2) {
      return e.visitEachChild(t, P, n);
     }
     return t;
    }
    function O(e) {
     return A(e, M);
    }
    function M(e) {
     switch (e.kind) {
     case 247:
     case 246:
     case 252:
     case 253:
      return L(e);

     default:
      return I(e);
     }
    }
    function L(t) {
     var r = e.getParseTreeNode(t);
     if (r !== t) {
      if (t.transformFlags & 2) {
       return e.visitEachChild(t, P, n);
      }
      return t;
     }
     switch (t.kind) {
     case 247:
      return Ot(t);

     case 246:
      return Jt(t);

     case 252:
      return Bt(t);

     case 253:
      return zt(t);

     default:
      e.Debug.fail("Unhandled ellided statement");
     }
    }
    function R(e) {
     return A(e, B);
    }
    function B(t) {
     if (t.kind === 253 || t.kind === 247 || t.kind === 248 || t.kind === 246 && t.moduleReference.kind === 257) {
      return undefined;
     } else if (t.transformFlags & 1 || e.hasModifier(t, 1)) {
      return U(t);
     } else if (t.transformFlags & 2) {
      return e.visitEachChild(t, P, n);
     }
     return t;
    }
    function z(e) {
     return A(e, j);
    }
    function j(t) {
     switch (t.kind) {
     case 155:
      return undefined;

     case 152:
     case 160:
     case 156:
     case 157:
     case 154:
      return I(t);

     case 215:
      return t;

     default:
      return e.Debug.failBadSyntaxKind(t);
     }
    }
    function q(t) {
     if (e.modifierToFlag(t.kind) & 2270) {
      return undefined;
     } else if (v && t.kind === 84) {
      return undefined;
     }
     return t;
    }
    function U(t) {
     if (e.hasModifier(t, 2) && e.isStatement(t)) {
      return e.createNotEmittedStatement(t);
     }
     switch (t.kind) {
     case 84:
     case 79:
      return v ? undefined : t;

     case 114:
     case 112:
     case 113:
     case 117:
     case 76:
     case 124:
     case 132:
     case 167:
     case 168:
     case 169:
     case 170:
     case 166:
     case 161:
     case 148:
     case 119:
     case 142:
     case 122:
     case 137:
     case 134:
     case 131:
     case 105:
     case 138:
     case 164:
     case 163:
     case 165:
     case 162:
     case 171:
     case 172:
     case 173:
     case 175:
     case 176:
     case 177:
     case 178:
     case 179:
     case 180:
     case 160:
     case 150:
     case 240:
      return undefined;

     case 152:
      return tt(t);

     case 245:
      return undefined;

     case 155:
      return nt(t);

     case 239:
      return e.createNotEmittedStatement(t);

     case 238:
      return H(t);

     case 207:
      return X(t);

     case 271:
      return Ye(t);

     case 209:
      return Ze(t);

     case 154:
      return rt(t);

     case 156:
      return at(t);

     case 157:
      return ot(t);

     case 237:
      return st(t);

     case 194:
      return ct(t);

     case 195:
      return ut(t);

     case 149:
      return lt(t);

     case 193:
      return mt(t);

     case 192:
     case 210:
      return _t(t);

     case 189:
      return ht(t);

     case 190:
      return vt(t);

     case 191:
      return yt(t);

     case 211:
      return gt(t);

     case 241:
      return xt(t);

     case 217:
      return ft(t);

     case 235:
      return pt(t);

     case 242:
      return Ft(t);

     case 246:
      return Jt(t);

     default:
      return e.Debug.failBadSyntaxKind(t);
     }
    }
    function J(t) {
     var r = e.getStrictOptionValue(f, "alwaysStrict") && !(e.isExternalModule(t) && m >= e.ModuleKind.ES2015) && !e.isJsonSourceFile(t);
     return e.updateSourceFileNode(t, e.visitLexicalEnvironment(t.statements, O, n, 0, r));
    }
    function K(t) {
     if (t.decorators && t.decorators.length > 0) {
      return true;
     }
     var n = e.getFirstConstructorWithBody(t);
     if (n) {
      return e.forEach(n.parameters, V);
     }
     return false;
    }
    function V(e) {
     return e.decorators !== undefined && e.decorators.length > 0;
    }
    function W(t, n) {
     var r = 0;
     if (e.some(n)) r |= 1;
     var i = e.getEffectiveBaseTypeNode(t);
     if (i && e.skipOuterExpressions(i.expression).kind !== 95) r |= 64;
     if (K(t)) r |= 2;
     if (e.childIsDecorated(t)) r |= 4;
     if (Kt(t)) r |= 8; else if (Ht(t)) r |= 32; else if (Wt(t)) r |= 16;
     if (p <= 1 && r & 7) r |= 128;
     return r;
    }
    function H(t) {
     var r = D;
     D = undefined;
     var i = ae(t, true);
     var a = W(t, i);
     if (a & 128) {
      n.startLexicalEnvironment();
     }
     var o = t.name || (a & 5 ? e.getGeneratedNameForNode(t) : undefined);
     var s = a & 2 ? $(t, o, a) : G(t, o, a);
     var c = [ s ];
     if (e.some(D)) {
      c.push(e.createExpressionStatement(e.inlineExpressions(D)));
     }
     D = r;
     if (a & 1) {
      ue(c, i, a & 128 ? e.getInternalName(t) : e.getLocalName(t));
     }
     Se(c, t, false);
     Se(c, t, true);
     De(c, t);
     if (a & 128) {
      var u = e.createTokenRange(e.skipTrivia(h.text, t.members.end), 18);
      var l = e.getInternalName(t);
      var f = e.createPartiallyEmittedExpression(l);
      f.end = u.end;
      e.setEmitFlags(f, 1536);
      var d = e.createReturn(f);
      d.pos = u.pos;
      e.setEmitFlags(d, 1536 | 384);
      c.push(d);
      e.addStatementsAfterPrologue(c, n.endLexicalEnvironment());
      var p = e.createImmediatelyInvokedArrowFunction(c);
      e.setEmitFlags(p, 33554432);
      var m = e.createVariableStatement(undefined, e.createVariableDeclarationList([ e.createVariableDeclaration(e.getLocalName(t, false, false), undefined, p) ]));
      e.setOriginalNode(m, t);
      e.setCommentRange(m, t);
      e.setSourceMapRange(m, e.moveRangePastDecorators(t));
      e.startOnNewLine(m);
      c = [ m ];
     }
     if (a & 8) {
      $t(c, t);
     } else if (a & 128 || a & 2) {
      if (a & 32) {
       c.push(e.createExportDefault(e.getLocalName(t, false, true)));
      } else if (a & 16) {
       c.push(e.createExternalModuleExport(e.getLocalName(t, false, true)));
      }
     }
     if (c.length > 1) {
      c.push(e.createEndOfDeclarationMarker(t));
      e.setEmitFlags(s, e.getEmitFlags(s) | 4194304);
     }
     return e.singleOrMany(c);
    }
    function G(t, n, r) {
     var i = !(r & 128) ? e.visitNodes(t.modifiers, q, e.isModifier) : undefined;
     var a = e.createClassDeclaration(undefined, i, n, undefined, e.visitNodes(t.heritageClauses, P, e.isHeritageClause), Q(t, (r & 64) !== 0));
     var o = e.getEmitFlags(t);
     if (r & 1) {
      o |= 32;
     }
     e.setTextRange(a, t);
     e.setOriginalNode(a, t);
     e.setEmitFlags(a, o);
     return a;
    }
    function $(t, n, r) {
     var i = e.moveRangePastDecorators(t);
     var a = tn(t);
     var o = e.getLocalName(t, false, true);
     var s = e.visitNodes(t.heritageClauses, P, e.isHeritageClause);
     var c = Q(t, (r & 64) !== 0);
     var u = e.createClassExpression(undefined, n, undefined, s, c);
     e.setOriginalNode(u, t);
     e.setTextRange(u, i);
     var l = e.createVariableStatement(undefined, e.createVariableDeclarationList([ e.createVariableDeclaration(o, undefined, a ? e.createAssignment(a, u) : u) ], 1));
     e.setOriginalNode(l, t);
     e.setTextRange(l, i);
     e.setCommentRange(l, t);
     return l;
    }
    function X(t) {
     var n = D;
     D = undefined;
     var r = ae(t, true);
     var i = e.visitNodes(t.heritageClauses, P, e.isHeritageClause);
     var a = Q(t, e.some(i, function(e) {
      return e.token === 85;
     }));
     var o = e.createClassExpression(undefined, t.name, undefined, i, a);
     e.setOriginalNode(o, t);
     e.setTextRange(o, t);
     if (e.some(r) || e.some(D)) {
      var s = [];
      var u = l.getNodeCheckFlags(t) & 8388608;
      var f = e.createTempVariable(c, !!u);
      if (u) {
       on();
       var d = e.getSynthesizedClone(f);
       d.autoGenerateFlags &= ~8;
       w[e.getOriginalNodeId(t)] = d;
      }
      e.setEmitFlags(o, 65536 | e.getEmitFlags(o));
      s.push(e.startOnNewLine(e.createAssignment(f, o)));
      e.addRange(s, e.map(D, e.startOnNewLine));
      D = n;
      e.addRange(s, le(r, f));
      s.push(e.startOnNewLine(f));
      return e.inlineExpressions(s);
     }
     D = n;
     return o;
    }
    function Q(t, n) {
     var r = [];
     var i = Y(t, n);
     if (i) {
      r.push(i);
     }
     e.addRange(r, e.visitNodes(t.members, z, e.isClassElement));
     return e.setTextRange(e.createNodeArray(r), t.members);
    }
    function Y(t, r) {
     var i = e.forEach(t.members, se);
     var a = t.transformFlags & 262144;
     var o = e.getFirstConstructorWithBody(t);
     if (!i && !a) {
      return e.visitEachChild(o, P, n);
     }
     var s = Z(o);
     var c = ee(t, o, r);
     return e.startOnNewLine(e.setOriginalNode(e.setTextRange(e.createConstructor(undefined, undefined, s, c), o || t), o));
    }
    function Z(t) {
     return e.visitParameterList(t && t.parameters, P, n) || [];
    }
    function ee(t, n, r) {
     var a = [];
     var s = 0;
     i();
     if (n) {
      s = te(n, a);
      var c = ne(n);
      e.addRange(a, e.map(c, ie));
     } else if (r) {
      a.push(e.createExpressionStatement(e.createCall(e.createSuper(), undefined, [ e.createSpread(e.createIdentifier("arguments")) ])));
     }
     var u = ae(t, false);
     ue(a, u, e.createThis());
     if (n) {
      e.addRange(a, e.visitNodes(n.body.statements, P, e.isStatement, s));
     }
     a = e.mergeLexicalEnvironment(a, o());
     return e.setTextRange(e.createBlock(e.setTextRange(e.createNodeArray(a), n ? n.body.statements : t.members), true), n ? n.body : undefined);
    }
    function te(t, n) {
     if (t.body) {
      var r = t.body.statements;
      var i = e.addPrologue(n, r, false, P);
      if (i === r.length) {
       return i;
      }
      var a = r[i];
      if (a.kind === 219 && e.isSuperCall(a.expression)) {
       n.push(e.visitNode(a, P, e.isStatement));
       return i + 1;
      }
      return i;
     }
     return 0;
    }
    function ne(t) {
     return e.filter(t.parameters, re);
    }
    function re(t) {
     return e.hasModifier(t, 92) && e.isIdentifier(t.name);
    }
    function ie(t) {
     e.Debug.assert(e.isIdentifier(t.name));
     var n = t.name;
     var r = e.getMutableClone(n);
     e.setEmitFlags(r, 1536 | 48);
     var i = e.getMutableClone(n);
     e.setEmitFlags(i, 1536);
     return e.startOnNewLine(e.setEmitFlags(e.setTextRange(e.createExpressionStatement(e.createAssignment(e.setTextRange(e.createPropertyAccess(e.createThis(), r), t.name), i)), e.moveRangePos(t, -1)), 1536));
    }
    function ae(t, n) {
     return e.filter(t.members, n ? oe : se);
    }
    function oe(e) {
     return ce(e, true);
    }
    function se(e) {
     return ce(e, false);
    }
    function ce(t, n) {
     return t.kind === 152 && n === e.hasModifier(t, 32) && t.initializer !== undefined;
    }
    function ue(t, n, r) {
     for (var i = 0, a = n; i < a.length; i++) {
      var o = a[i];
      var s = e.createExpressionStatement(fe(o, r));
      e.setSourceMapRange(s, e.moveRangePastModifiers(o));
      e.setCommentRange(s, o);
      t.push(s);
     }
    }
    function le(t, n) {
     var r = [];
     for (var i = 0, a = t; i < a.length; i++) {
      var o = a[i];
      var s = fe(o, n);
      e.startOnNewLine(s);
      e.setSourceMapRange(s, e.moveRangePastModifiers(o));
      e.setCommentRange(s, o);
      r.push(s);
     }
     return r;
    }
    function fe(t, n) {
     var r = e.isComputedPropertyName(t.name) && !Ge(t.name.expression) ? e.updateComputedPropertyName(t.name, e.getGeneratedNameForNode(t.name)) : t.name;
     var i = e.visitNode(t.initializer, P, e.isExpression);
     var a = e.createMemberAccessForPropertyName(n, r, r);
     return e.createAssignment(a, i);
    }
    function de(t, n) {
     return e.filter(t.members, n ? function(e) {
      return pe(e, t);
     } : function(e) {
      return me(e, t);
     });
    }
    function pe(e, t) {
     return _e(e, true, t);
    }
    function me(e, t) {
     return _e(e, false, t);
    }
    function _e(t, n, r) {
     return e.nodeOrChildIsDecorated(t, r) && n === e.hasModifier(t, 32);
    }
    function ge(e) {
     var t;
     if (e) {
      var n = e.parameters;
      for (var r = 0; r < n.length; r++) {
       var i = n[r];
       if (t || i.decorators) {
        if (!t) {
         t = new Array(n.length);
        }
        t[r] = i.decorators;
       }
      }
     }
     return t;
    }
    function he(t) {
     var n = t.decorators;
     var r = ge(e.getFirstConstructorWithBody(t));
     if (!n && !r) {
      return undefined;
     }
     return {
      decorators: n,
      parameters: r
     };
    }
    function ve(e, t) {
     switch (t.kind) {
     case 156:
     case 157:
      return ye(e, t);

     case 154:
      return be(t);

     case 152:
      return xe(t);

     default:
      return undefined;
     }
    }
    function ye(t, n) {
     if (!n.body) {
      return undefined;
     }
     var r = e.getAllAccessorDeclarations(t.members, n), i = r.firstAccessor, a = r.secondAccessor, o = r.setAccessor;
     var s = i.decorators ? i : a && a.decorators ? a : undefined;
     if (!s || n !== s) {
      return undefined;
     }
     var c = s.decorators;
     var u = ge(o);
     if (!c && !u) {
      return undefined;
     }
     return {
      decorators: c,
      parameters: u
     };
    }
    function be(e) {
     if (!e.body) {
      return undefined;
     }
     var t = e.decorators;
     var n = ge(e);
     if (!t && !n) {
      return undefined;
     }
     return {
      decorators: t,
      parameters: n
     };
    }
    function xe(e) {
     var t = e.decorators;
     if (!t) {
      return undefined;
     }
     return {
      decorators: t
     };
    }
    function ke(t, n, r) {
     if (!r) {
      return undefined;
     }
     var i = [];
     e.addRange(i, e.map(r.decorators, Ee));
     e.addRange(i, e.flatMap(r.parameters, Ne));
     Ae(t, n, i);
     return i;
    }
    function Se(t, n, r) {
     e.addRange(t, e.map(we(n, r), Gt));
    }
    function we(e, t) {
     var n = de(e, t);
     var r;
     for (var i = 0, a = n; i < a.length; i++) {
      var o = a[i];
      var s = Ce(e, o);
      if (s) {
       if (!r) {
        r = [ s ];
       } else {
        r.push(s);
       }
      }
     }
     return r;
    }
    function Ce(t, r) {
     var i = ve(t, r);
     var o = ke(r, t, i);
     if (!o) {
      return undefined;
     }
     var s = rn(t, r);
     var c = $e(r, true);
     var u = p > 0 ? r.kind === 152 ? e.createVoidZero() : e.createNull() : undefined;
     var l = a(n, o, s, c, u, e.moveRangePastDecorators(r));
     e.setEmitFlags(l, 1536);
     return l;
    }
    function De(t, n) {
     var r = Te(n);
     if (r) {
      t.push(e.setOriginalNode(e.createExpressionStatement(r), n));
     }
    }
    function Te(t) {
     var r = he(t);
     var i = ke(t, t, r);
     if (!i) {
      return undefined;
     }
     var o = w && w[e.getOriginalNodeId(t)];
     var s = e.getLocalName(t, false, true);
     var c = a(n, i, s);
     var u = e.createAssignment(s, o ? e.createAssignment(o, c) : c);
     e.setEmitFlags(u, 1536);
     e.setSourceMapRange(u, e.moveRangePastDecorators(t));
     return u;
    }
    function Ee(t) {
     return e.visitNode(t.expression, P, e.isExpression);
    }
    function Ne(t, r) {
     var i;
     if (t) {
      i = [];
      for (var a = 0, o = t; a < o.length; a++) {
       var s = o[a];
       var c = u(n, Ee(s), r, s.expression);
       e.setEmitFlags(c, 1536);
       i.push(c);
      }
     }
     return i;
    }
    function Ae(e, n, r) {
     if (t) {
      Pe(e, n, r);
     } else {
      Fe(e, n, r);
     }
    }
    function Fe(e, t, r) {
     if (f.emitDecoratorMetadata) {
      if (Ie(e)) {
       r.push(s(n, "design:type", Le(e)));
      }
      if (Me(e)) {
       r.push(s(n, "design:paramtypes", Re(e, t)));
      }
      if (Oe(e)) {
       r.push(s(n, "design:returntype", ze(e)));
      }
     }
    }
    function Pe(t, r, i) {
     if (f.emitDecoratorMetadata) {
      var a = void 0;
      if (Ie(t)) {
       (a || (a = [])).push(e.createPropertyAssignment("type", e.createArrowFunction(undefined, undefined, [], undefined, e.createToken(36), Le(t))));
      }
      if (Me(t)) {
       (a || (a = [])).push(e.createPropertyAssignment("paramTypes", e.createArrowFunction(undefined, undefined, [], undefined, e.createToken(36), Re(t, r))));
      }
      if (Oe(t)) {
       (a || (a = [])).push(e.createPropertyAssignment("returnType", e.createArrowFunction(undefined, undefined, [], undefined, e.createToken(36), ze(t))));
      }
      if (a) {
       i.push(s(n, "design:typeinfo", e.createObjectLiteral(a, true)));
      }
     }
    }
    function Ie(e) {
     var t = e.kind;
     return t === 154 || t === 156 || t === 157 || t === 152;
    }
    function Oe(e) {
     return e.kind === 154;
    }
    function Me(t) {
     switch (t.kind) {
     case 238:
     case 207:
      return e.getFirstConstructorWithBody(t) !== undefined;

     case 154:
     case 156:
     case 157:
      return true;
     }
     return false;
    }
    function Le(t) {
     switch (t.kind) {
     case 152:
     case 149:
     case 156:
      return je(t.type);

     case 157:
      return je(e.getSetAccessorTypeAnnotationNode(t));

     case 238:
     case 207:
     case 154:
      return e.createIdentifier("Function");

     default:
      return e.createVoidZero();
     }
    }
    function Re(t, n) {
     var r = e.isClassLike(t) ? e.getFirstConstructorWithBody(t) : e.isFunctionLike(t) && e.nodeIsPresent(t.body) ? t : undefined;
     var i = [];
     if (r) {
      var a = Be(r, n);
      var o = a.length;
      for (var s = 0; s < o; s++) {
       var c = a[s];
       if (s === 0 && e.isIdentifier(c.name) && c.name.escapedText === "this") {
        continue;
       }
       if (c.dotDotDotToken) {
        i.push(je(e.getRestParameterElementType(c.type)));
       } else {
        i.push(Le(c));
       }
      }
     }
     return e.createArrayLiteral(i);
    }
    function Be(t, n) {
     if (n && t.kind === 156) {
      var r = e.getAllAccessorDeclarations(n.members, t).setAccessor;
      if (r) {
       return r.parameters;
      }
     }
     return t.parameters;
    }
    function ze(t) {
     if (e.isFunctionLike(t) && t.type) {
      return je(t.type);
     } else if (e.isAsyncFunction(t)) {
      return e.createIdentifier("Promise");
     }
     return e.createVoidZero();
    }
    function je(t) {
     if (t === undefined) {
      return e.createIdentifier("Object");
     }
     switch (t.kind) {
     case 105:
     case 140:
     case 95:
     case 131:
      return e.createVoidZero();

     case 175:
      return je(t.type);

     case 163:
     case 164:
      return e.createIdentifier("Function");

     case 167:
     case 168:
      return e.createIdentifier("Array");

     case 161:
     case 122:
      return e.createIdentifier("Boolean");

     case 137:
      return e.createIdentifier("String");

     case 135:
      return e.createIdentifier("Object");

     case 180:
      switch (t.literal.kind) {
      case 9:
       return e.createIdentifier("String");

      case 8:
       return e.createIdentifier("Number");

      case 101:
      case 86:
       return e.createIdentifier("Boolean");

      default:
       return e.Debug.failBadSyntaxKind(t.literal);
      }

     case 134:
      return e.createIdentifier("Number");

     case 138:
      return p < 2 ? He() : e.createIdentifier("Symbol");

     case 162:
      return Ue(t);

     case 172:
     case 171:
      return qe(t);

     case 165:
     case 177:
     case 178:
     case 179:
     case 166:
     case 119:
     case 142:
     case 176:
     case 181:
      break;

     default:
      return e.Debug.failBadSyntaxKind(t);
     }
     return e.createIdentifier("Object");
    }
    function qe(t) {
     var n;
     for (var r = 0, i = t.types; r < i.length; r++) {
      var a = i[r];
      while (a.kind === 175) {
       a = a.type;
      }
      if (a.kind === 131) {
       continue;
      }
      if (!d && (a.kind === 95 || a.kind === 140)) {
       continue;
      }
      var o = je(a);
      if (e.isIdentifier(o) && o.escapedText === "Object") {
       return o;
      } else if (n) {
       if (!e.isIdentifier(n) || !e.isIdentifier(o) || n.escapedText !== o.escapedText) {
        return e.createIdentifier("Object");
       }
      } else {
       n = o;
      }
     }
     return n || e.createVoidZero();
    }
    function Ue(t) {
     var n = l.getTypeReferenceSerializationKind(t.typeName, x || b);
     switch (n) {
     case e.TypeReferenceSerializationKind.Unknown:
      var r = Ke(t.typeName);
      var i = e.createTempVariable(c);
      return e.createConditional(e.createTypeCheck(e.createAssignment(i, r), "function"), i, e.createIdentifier("Object"));

     case e.TypeReferenceSerializationKind.TypeWithConstructSignatureAndValue:
      return Ve(t.typeName);

     case e.TypeReferenceSerializationKind.VoidNullableOrNeverType:
      return e.createVoidZero();

     case e.TypeReferenceSerializationKind.BooleanType:
      return e.createIdentifier("Boolean");

     case e.TypeReferenceSerializationKind.NumberLikeType:
      return e.createIdentifier("Number");

     case e.TypeReferenceSerializationKind.StringLikeType:
      return e.createIdentifier("String");

     case e.TypeReferenceSerializationKind.ArrayLikeType:
      return e.createIdentifier("Array");

     case e.TypeReferenceSerializationKind.ESSymbolType:
      return p < 2 ? He() : e.createIdentifier("Symbol");

     case e.TypeReferenceSerializationKind.TypeWithCallSignature:
      return e.createIdentifier("Function");

     case e.TypeReferenceSerializationKind.Promise:
      return e.createIdentifier("Promise");

     case e.TypeReferenceSerializationKind.ObjectType:
      return e.createIdentifier("Object");

     default:
      return e.Debug.assertNever(n);
     }
    }
    function Je(t, n) {
     return e.createLogicalAnd(e.createStrictInequality(e.createTypeOf(t), e.createLiteral("undefined")), n);
    }
    function Ke(t) {
     if (t.kind === 71) {
      var n = Ve(t);
      return Je(n, n);
     }
     if (t.left.kind === 71) {
      return Je(Ve(t.left), Ve(t));
     }
     var r = Ke(t.left);
     var i = e.createTempVariable(c);
     return e.createLogicalAnd(e.createLogicalAnd(r.left, e.createStrictInequality(e.createAssignment(i, r.right), e.createVoidZero())), e.createPropertyAccess(i, t.right));
    }
    function Ve(t) {
     switch (t.kind) {
     case 71:
      var n = e.getMutableClone(t);
      n.flags &= ~8;
      n.original = undefined;
      n.parent = e.getParseTreeNode(b);
      return n;

     case 146:
      return We(t);
     }
    }
    function We(t) {
     return e.createPropertyAccess(Ve(t.left), t.right);
    }
    function He() {
     return e.createConditional(e.createTypeCheck(e.createIdentifier("Symbol"), "function"), e.createIdentifier("Symbol"), e.createIdentifier("Object"));
    }
    function Ge(t) {
     return !e.isIdentifier(t) && e.isSimpleCopiableExpression(t) || e.isWellKnownSymbolSyntactically(t);
    }
    function $e(t, n) {
     var r = t.name;
     if (e.isComputedPropertyName(r)) {
      return n && !Ge(r.expression) ? e.getGeneratedNameForNode(r) : r.expression;
     } else if (e.isIdentifier(r)) {
      return e.createLiteral(e.idText(r));
     } else {
      return e.getSynthesizedClone(r);
     }
    }
    function Xe(t, n, r) {
     if (e.isComputedPropertyName(t)) {
      var i = e.visitNode(t.expression, P, e.isExpression);
      var a = e.skipPartiallyEmittedExpressions(i);
      var o = Ge(a);
      if (!o && n) {
       var s = e.getGeneratedNameForNode(t);
       c(s);
       return e.createAssignment(s, i);
      }
      return r && (o || e.isIdentifier(a)) ? undefined : i;
     }
    }
    function Qe(t) {
     var n = t.name;
     var r = Xe(n, e.some(t.decorators), false);
     if (r) {
      if (e.some(D)) {
       r = e.inlineExpressions(D.concat([ r ]));
       D.length = 0;
      }
      return e.updateComputedPropertyName(n, r);
     } else {
      return n;
     }
    }
    function Ye(t) {
     if (t.token === 85) {
      var n = e.visitNodes(t.types, P, e.isExpressionWithTypeArguments, 0, 1);
      return e.setTextRange(e.createHeritageClause(85, n), t);
     }
     return undefined;
    }
    function Ze(t) {
     return e.updateExpressionWithTypeArguments(t, undefined, e.visitNode(t.expression, P, e.isLeftHandSideExpression));
    }
    function et(t) {
     return !e.nodeIsMissing(t.body);
    }
    function tt(t) {
     var n = Xe(t.name, e.some(t.decorators) || !!t.initializer, true);
     if (n && !Ge(n)) {
      (D || (D = [])).push(n);
     }
     return undefined;
    }
    function nt(t) {
     if (!et(t)) {
      return undefined;
     }
     return e.updateConstructor(t, e.visitNodes(t.decorators, P, e.isDecorator), e.visitNodes(t.modifiers, P, e.isModifier), e.visitParameterList(t.parameters, P, n), e.visitFunctionBody(t.body, P, n));
    }
    function rt(t) {
     if (!et(t)) {
      return undefined;
     }
     var r = e.updateMethod(t, undefined, e.visitNodes(t.modifiers, q, e.isModifier), t.asteriskToken, Qe(t), undefined, undefined, e.visitParameterList(t.parameters, P, n), undefined, e.visitFunctionBody(t.body, P, n));
     if (r !== t) {
      e.setCommentRange(r, t);
      e.setSourceMapRange(r, e.moveRangePastDecorators(t));
     }
     return r;
    }
    function it(t) {
     return !(e.nodeIsMissing(t.body) && e.hasModifier(t, 128));
    }
    function at(t) {
     if (!it(t)) {
      return undefined;
     }
     var r = e.updateGetAccessor(t, undefined, e.visitNodes(t.modifiers, q, e.isModifier), Qe(t), e.visitParameterList(t.parameters, P, n), undefined, e.visitFunctionBody(t.body, P, n) || e.createBlock([]));
     if (r !== t) {
      e.setCommentRange(r, t);
      e.setSourceMapRange(r, e.moveRangePastDecorators(t));
     }
     return r;
    }
    function ot(t) {
     if (!it(t)) {
      return undefined;
     }
     var r = e.updateSetAccessor(t, undefined, e.visitNodes(t.modifiers, q, e.isModifier), Qe(t), e.visitParameterList(t.parameters, P, n), e.visitFunctionBody(t.body, P, n) || e.createBlock([]));
     if (r !== t) {
      e.setCommentRange(r, t);
      e.setSourceMapRange(r, e.moveRangePastDecorators(t));
     }
     return r;
    }
    function st(t) {
     if (!et(t)) {
      return e.createNotEmittedStatement(t);
     }
     var r = e.updateFunctionDeclaration(t, undefined, e.visitNodes(t.modifiers, q, e.isModifier), t.asteriskToken, t.name, undefined, e.visitParameterList(t.parameters, P, n), undefined, e.visitFunctionBody(t.body, P, n) || e.createBlock([]));
     if (Kt(t)) {
      var i = [ r ];
      $t(i, t);
      return i;
     }
     return r;
    }
    function ct(t) {
     if (!et(t)) {
      return e.createOmittedExpression();
     }
     var r = e.updateFunctionExpression(t, e.visitNodes(t.modifiers, q, e.isModifier), t.asteriskToken, t.name, undefined, e.visitParameterList(t.parameters, P, n), undefined, e.visitFunctionBody(t.body, P, n) || e.createBlock([]));
     return r;
    }
    function ut(t) {
     var r = e.updateArrowFunction(t, e.visitNodes(t.modifiers, q, e.isModifier), undefined, e.visitParameterList(t.parameters, P, n), undefined, t.equalsGreaterThanToken, e.visitFunctionBody(t.body, P, n));
     return r;
    }
    function lt(t) {
     if (e.parameterIsThisKeyword(t)) {
      return undefined;
     }
     var n = e.createParameter(undefined, undefined, t.dotDotDotToken, e.visitNode(t.name, P, e.isBindingName), undefined, undefined, e.visitNode(t.initializer, P, e.isExpression));
     e.setOriginalNode(n, t);
     e.setTextRange(n, e.moveRangePastModifiers(t));
     e.setCommentRange(n, t);
     e.setSourceMapRange(n, e.moveRangePastModifiers(t));
     e.setEmitFlags(n.name, 32);
     return n;
    }
    function ft(t) {
     if (Kt(t)) {
      var r = e.getInitializedVariables(t.declarationList);
      if (r.length === 0) {
       return undefined;
      }
      return e.setTextRange(e.createExpressionStatement(e.inlineExpressions(e.map(r, dt))), t);
     } else {
      return e.visitEachChild(t, P, n);
     }
    }
    function dt(t) {
     var r = t.name;
     if (e.isBindingPattern(r)) {
      return e.flattenDestructuringAssignment(t, P, n, 0, false, Qt);
     } else {
      return e.setTextRange(e.createAssignment(Yt(r), e.visitNode(t.initializer, P, e.isExpression)), t);
     }
    }
    function pt(t) {
     return e.updateVariableDeclaration(t, e.visitNode(t.name, P, e.isBindingName), undefined, e.visitNode(t.initializer, P, e.isExpression));
    }
    function mt(t) {
     var r = e.skipOuterExpressions(t.expression, ~2);
     if (e.isAssertionExpression(r)) {
      var i = e.visitNode(t.expression, P, e.isExpression);
      if (e.length(e.getLeadingCommentRangesOfNode(i, h))) {
       return e.updateParen(t, i);
      }
      return e.createPartiallyEmittedExpression(i, t);
     }
     return e.visitEachChild(t, P, n);
    }
    function _t(t) {
     var n = e.visitNode(t.expression, P, e.isExpression);
     return e.createPartiallyEmittedExpression(n, t);
    }
    function gt(t) {
     var n = e.visitNode(t.expression, P, e.isLeftHandSideExpression);
     return e.createPartiallyEmittedExpression(n, t);
    }
    function ht(t) {
     return e.updateCall(t, e.visitNode(t.expression, P, e.isExpression), undefined, e.visitNodes(t.arguments, P, e.isExpression));
    }
    function vt(t) {
     return e.updateNew(t, e.visitNode(t.expression, P, e.isExpression), undefined, e.visitNodes(t.arguments, P, e.isExpression));
    }
    function yt(t) {
     return e.updateTaggedTemplate(t, e.visitNode(t.tag, P, e.isExpression), undefined, e.visitNode(t.template, P, e.isExpression));
    }
    function bt(t) {
     return !e.isEnumConst(t) || f.preserveConstEnums || f.isolatedModules;
    }
    function xt(t) {
     if (!bt(t)) {
      return undefined;
     }
     var n = [];
     var r = 2;
     if (At(n, t)) {
      if (m !== e.ModuleKind.System || b !== h) {
       r |= 512;
      }
     }
     var i = Zt(t);
     var a = en(t);
     var o = e.hasModifier(t, 1) ? e.getExternalModuleOrNamespaceExportName(y, t, false, true) : e.getLocalName(t, false, true);
     var s = e.createLogicalOr(o, e.createAssignment(o, e.createObjectLiteral()));
     if (Dt(t)) {
      var c = e.getLocalName(t, false, true);
      s = e.createAssignment(c, s);
     }
     var u = e.createExpressionStatement(e.createCall(e.createFunctionExpression(undefined, undefined, undefined, undefined, [ e.createParameter(undefined, undefined, undefined, i) ], undefined, kt(t, a)), undefined, [ s ]));
     e.setOriginalNode(u, t);
     e.setTextRange(u, t);
     e.setEmitFlags(u, r);
     n.push(u);
     n.push(e.createEndOfDeclarationMarker(t));
     return n;
    }
    function kt(t, n) {
     var i = y;
     y = n;
     var a = [];
     r();
     var s = e.map(t.members, St);
     e.addStatementsAfterPrologue(a, o());
     e.addRange(a, s);
     y = i;
     return e.createBlock(e.setTextRange(e.createNodeArray(a), t.members), true);
    }
    function St(t) {
     var n = $e(t, false);
     var r = wt(t);
     var i = e.createAssignment(e.createElementAccess(y, n), r);
     var a = r.kind === 9 ? i : e.createAssignment(e.createElementAccess(y, i), n);
     return e.setTextRange(e.createExpressionStatement(e.setTextRange(a, t)), t);
    }
    function wt(t) {
     var n = l.getConstantValue(t);
     if (n !== undefined) {
      return e.createLiteral(n);
     } else {
      an();
      if (t.initializer) {
       return e.visitNode(t.initializer, P, e.isExpression);
      } else {
       return e.createVoidZero();
      }
     }
    }
    function Ct(t) {
     return e.isInstantiatedModule(t, !!f.preserveConstEnums || !!f.isolatedModules);
    }
    function Dt(t) {
     return Kt(t) || Vt(t) && m !== e.ModuleKind.ES2015 && m !== e.ModuleKind.ESNext && m !== e.ModuleKind.System;
    }
    function Tt(t) {
     if (!k) {
      k = e.createUnderscoreEscapedMap();
     }
     var n = Nt(t);
     if (!k.has(n)) {
      k.set(n, t);
     }
    }
    function Et(e) {
     if (k) {
      var t = Nt(e);
      return k.get(t) === e;
     }
     return true;
    }
    function Nt(t) {
     e.Debug.assertNode(t.name, e.isIdentifier);
     return t.name.escapedText;
    }
    function At(t, n) {
     var r = e.createVariableStatement(e.visitNodes(n.modifiers, q, e.isModifier), e.createVariableDeclarationList([ e.createVariableDeclaration(e.getLocalName(n, false, true)) ], b.kind === 277 ? 0 : 1));
     e.setOriginalNode(r, n);
     Tt(n);
     if (Et(n)) {
      if (n.kind === 241) {
       e.setSourceMapRange(r.declarationList, n);
      } else {
       e.setSourceMapRange(r, n);
      }
      e.setCommentRange(r, n);
      e.setEmitFlags(r, 1024 | 4194304);
      t.push(r);
      return true;
     } else {
      var i = e.createMergeDeclarationMarker(r);
      e.setEmitFlags(i, 1536 | 4194304);
      t.push(i);
      return false;
     }
    }
    function Ft(t) {
     if (!Ct(t)) {
      return e.createNotEmittedStatement(t);
     }
     e.Debug.assertNode(t.name, e.isIdentifier, "A TypeScript namespace should have an Identifier name.");
     sn();
     var n = [];
     var r = 2;
     if (At(n, t)) {
      if (m !== e.ModuleKind.System || b !== h) {
       r |= 512;
      }
     }
     var i = Zt(t);
     var a = en(t);
     var o = e.hasModifier(t, 1) ? e.getExternalModuleOrNamespaceExportName(y, t, false, true) : e.getLocalName(t, false, true);
     var s = e.createLogicalOr(o, e.createAssignment(o, e.createObjectLiteral()));
     if (Dt(t)) {
      var c = e.getLocalName(t, false, true);
      s = e.createAssignment(c, s);
     }
     var u = e.createExpressionStatement(e.createCall(e.createFunctionExpression(undefined, undefined, undefined, undefined, [ e.createParameter(undefined, undefined, undefined, i) ], undefined, Pt(t, a)), undefined, [ s ]));
     e.setOriginalNode(u, t);
     e.setTextRange(u, t);
     e.setEmitFlags(u, r);
     n.push(u);
     n.push(e.createEndOfDeclarationMarker(t));
     return n;
    }
    function Pt(t, n) {
     var i = y;
     var a = v;
     var s = k;
     y = n;
     v = t;
     k = undefined;
     var c = [];
     r();
     var u;
     var l;
     var f = t.body;
     if (f.kind === 243) {
      A(f, function(t) {
       return e.addRange(c, e.visitNodes(t.statements, R, e.isStatement));
      });
      u = f.statements;
      l = f;
     } else {
      var d = Ft(f);
      if (d) {
       if (e.isArray(d)) {
        e.addRange(c, d);
       } else {
        c.push(d);
       }
      }
      var p = It(t).body;
      u = e.moveRangePos(p.statements, -1);
     }
     e.addStatementsAfterPrologue(c, o());
     y = i;
     v = a;
     k = s;
     var m = e.createBlock(e.setTextRange(e.createNodeArray(c), u), true);
     e.setTextRange(m, l);
     if (f.kind !== 243) {
      e.setEmitFlags(m, e.getEmitFlags(m) | 1536);
     }
     return m;
    }
    function It(e) {
     if (e.body.kind === 242) {
      var t = It(e.body);
      return t || e.body;
     }
    }
    function Ot(t) {
     if (!t.importClause) {
      return t;
     }
     var n = e.visitNode(t.importClause, Mt, e.isImportClause);
     return n ? e.updateImportDeclaration(t, undefined, undefined, n, t.moduleSpecifier) : undefined;
    }
    function Mt(t) {
     var n = l.isReferencedAliasDeclaration(t) ? t.name : undefined;
     var r = e.visitNode(t.namedBindings, Lt, e.isNamedImportBindings);
     return n || r ? e.updateImportClause(t, n, r) : undefined;
    }
    function Lt(t) {
     if (t.kind === 249) {
      return l.isReferencedAliasDeclaration(t) ? t : undefined;
     } else {
      var n = e.visitNodes(t.elements, Rt, e.isImportSpecifier);
      return e.some(n) ? e.updateNamedImports(t, n) : undefined;
     }
    }
    function Rt(e) {
     return l.isReferencedAliasDeclaration(e) ? e : undefined;
    }
    function Bt(t) {
     return l.isValueAliasDeclaration(t) ? e.visitEachChild(t, P, n) : undefined;
    }
    function zt(t) {
     if (!t.exportClause) {
      return f.isolatedModules || l.moduleExportsSomeValue(t.moduleSpecifier) ? t : undefined;
     }
     if (!l.isValueAliasDeclaration(t)) {
      return undefined;
     }
     var n = e.visitNode(t.exportClause, jt, e.isNamedExports);
     return n ? e.updateExportDeclaration(t, undefined, undefined, n, t.moduleSpecifier) : undefined;
    }
    function jt(t) {
     var n = e.visitNodes(t.elements, qt, e.isExportSpecifier);
     return e.some(n) ? e.updateNamedExports(t, n) : undefined;
    }
    function qt(e) {
     return l.isValueAliasDeclaration(e) ? e : undefined;
    }
    function Ut(t) {
     return l.isReferencedAliasDeclaration(t) || !e.isExternalModule(h) && l.isTopLevelValueImportEqualsWithEntityName(t);
    }
    function Jt(t) {
     if (e.isExternalModuleImportEqualsDeclaration(t)) {
      return l.isReferencedAliasDeclaration(t) ? e.visitEachChild(t, P, n) : undefined;
     }
     if (!Ut(t)) {
      return undefined;
     }
     var r = e.createExpressionFromEntityName(t.moduleReference);
     e.setEmitFlags(r, 1536 | 2048);
     if (Wt(t) || !Kt(t)) {
      return e.setOriginalNode(e.setTextRange(e.createVariableStatement(e.visitNodes(t.modifiers, q, e.isModifier), e.createVariableDeclarationList([ e.setOriginalNode(e.createVariableDeclaration(t.name, undefined, r), t) ])), t), t);
     } else {
      return e.setOriginalNode(Xt(t.name, r, t), t);
     }
    }
    function Kt(t) {
     return v !== undefined && e.hasModifier(t, 1);
    }
    function Vt(t) {
     return v === undefined && e.hasModifier(t, 1);
    }
    function Wt(t) {
     return Vt(t) && !e.hasModifier(t, 512);
    }
    function Ht(t) {
     return Vt(t) && e.hasModifier(t, 512);
    }
    function Gt(t) {
     return e.createExpressionStatement(t);
    }
    function $t(t, n) {
     var r = e.createAssignment(e.getExternalModuleOrNamespaceExportName(y, n, false, true), e.getLocalName(n));
     e.setSourceMapRange(r, e.createRange(n.name ? n.name.pos : n.pos, n.end));
     var i = e.createExpressionStatement(r);
     e.setSourceMapRange(i, e.createRange(-1, n.end));
     t.push(i);
    }
    function Xt(t, n, r) {
     return e.setTextRange(e.createExpressionStatement(e.createAssignment(e.getNamespaceMemberName(y, t, false, true), n)), r);
    }
    function Qt(t, n, r) {
     return e.setTextRange(e.createAssignment(Yt(t), n), r);
    }
    function Yt(t) {
     return e.getNamespaceMemberName(y, t, false, true);
    }
    function Zt(t) {
     var n = e.getGeneratedNameForNode(t);
     e.setSourceMapRange(n, t.name);
     return n;
    }
    function en(t) {
     return e.getGeneratedNameForNode(t);
    }
    function tn(t) {
     if (l.getNodeCheckFlags(t) & 8388608) {
      on();
      var n = e.createUniqueName(t.name && !e.isGeneratedIdentifier(t.name) ? e.idText(t.name) : "default");
      w[e.getOriginalNodeId(t)] = n;
      c(n);
      return n;
     }
    }
    function nn(t) {
     return e.createPropertyAccess(e.getDeclarationName(t), "prototype");
    }
    function rn(t, n) {
     return e.hasModifier(n, 32) ? e.getDeclarationName(t) : nn(t);
    }
    function an() {
     if ((S & 8) === 0) {
      S |= 8;
      n.enableSubstitution(71);
     }
    }
    function on() {
     if ((S & 1) === 0) {
      S |= 1;
      n.enableSubstitution(71);
      w = [];
     }
    }
    function sn() {
     if ((S & 2) === 0) {
      S |= 2;
      n.enableSubstitution(71);
      n.enableSubstitution(274);
      n.enableEmitNotification(242);
     }
    }
    function cn(t) {
     return e.getOriginalNode(t).kind === 242;
    }
    function un(t) {
     return e.getOriginalNode(t).kind === 241;
    }
    function ln(t, n, r) {
     var i = C;
     var a = h;
     if (e.isSourceFile(n)) {
      h = n;
     }
     if (S & 2 && cn(n)) {
      C |= 2;
     }
     if (S & 8 && un(n)) {
      C |= 8;
     }
     _(t, n, r);
     C = i;
     h = a;
    }
    function fn(t, n) {
     n = g(t, n);
     if (t === 1) {
      return pn(n);
     } else if (e.isShorthandPropertyAssignment(n)) {
      return dn(n);
     }
     return n;
    }
    function dn(t) {
     if (S & 2) {
      var n = t.name;
      var r = gn(n);
      if (r) {
       if (t.objectAssignmentInitializer) {
        var i = e.createAssignment(r, t.objectAssignmentInitializer);
        return e.setTextRange(e.createPropertyAssignment(n, i), t);
       }
       return e.setTextRange(e.createPropertyAssignment(n, r), t);
      }
     }
     return t;
    }
    function pn(e) {
     switch (e.kind) {
     case 71:
      return mn(e);

     case 187:
      return hn(e);

     case 188:
      return vn(e);
     }
     return e;
    }
    function mn(e) {
     return _n(e) || gn(e) || e;
    }
    function _n(t) {
     if (S & 1) {
      if (l.getNodeCheckFlags(t) & 16777216) {
       var n = l.getReferencedValueDeclaration(t);
       if (n) {
        var r = w[n.id];
        if (r) {
         var i = e.getSynthesizedClone(r);
         e.setSourceMapRange(i, t);
         e.setCommentRange(i, t);
         return i;
        }
       }
      }
     }
     return undefined;
    }
    function gn(t) {
     if (S & C && !e.isGeneratedIdentifier(t) && !e.isLocalName(t)) {
      var n = l.getReferencedExportContainer(t, false);
      if (n && n.kind !== 277) {
       var r = C & 2 && n.kind === 242 || C & 8 && n.kind === 241;
       if (r) {
        return e.setTextRange(e.createPropertyAccess(e.getGeneratedNameForNode(n), t), t);
       }
      }
     }
     return undefined;
    }
    function hn(e) {
     return yn(e);
    }
    function vn(e) {
     return yn(e);
    }
    function yn(t) {
     var n = bn(t);
     if (n !== undefined) {
      e.setConstantValue(t, n);
      var r = e.createLiteral(n);
      if (!f.removeComments) {
       var i = e.isPropertyAccessExpression(t) ? e.declarationNameToString(t.name) : e.getTextOfNode(t.argumentExpression);
       e.addSyntheticTrailingComment(r, 3, " " + i + " ");
      }
      return r;
     }
     return t;
    }
    function bn(t) {
     if (f.isolatedModules) {
      return undefined;
     }
     return e.isPropertyAccessExpression(t) || e.isElementAccessExpression(t) ? l.getConstantValue(t) : undefined;
    }
   }
   e.transformTypeScript = i;
   function a(t, n, r, i, a, s) {
    var c = [];
    c.push(e.createArrayLiteral(n, true));
    c.push(r);
    if (i) {
     c.push(i);
     if (a) {
      c.push(a);
     }
    }
    t.requestEmitHelper(o);
    return e.setTextRange(e.createCall(e.getHelperName("__decorate"), undefined, c), s);
   }
   var o = {
    name: "typescript:decorate",
    scoped: false,
    priority: 2,
    text: '\n            var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\n                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n                return c > 3 && r && Object.defineProperty(target, key, r), r;\n            };'
   };
   function s(t, n, r) {
    t.requestEmitHelper(c);
    return e.createCall(e.getHelperName("__metadata"), undefined, [ e.createLiteral(n), r ]);
   }
   var c = {
    name: "typescript:metadata",
    scoped: false,
    priority: 3,
    text: '\n            var __metadata = (this && this.__metadata) || function (k, v) {\n                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);\n            };'
   };
   function u(t, n, r, i) {
    t.requestEmitHelper(l);
    return e.setTextRange(e.createCall(e.getHelperName("__param"), undefined, [ e.createLiteral(r), n ]), i);
   }
   var l = {
    name: "typescript:param",
    scoped: false,
    priority: 4,
    text: "\n            var __param = (this && this.__param) || function (paramIndex, decorator) {\n                return function (target, key) { decorator(target, key, paramIndex); }\n            };"
   };
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(e) {
    e[e["AsyncMethodsWithSuper"] = 1] = "AsyncMethodsWithSuper";
   })(t || (t = {}));
   function n(t) {
    var n = t.resumeLexicalEnvironment, r = t.endLexicalEnvironment, a = t.hoistVariableDeclaration;
    var o = t.getEmitResolver();
    var s = t.getCompilerOptions();
    var c = e.getEmitScriptTarget(s);
    var u;
    var l = 0;
    var f;
    var d = t.onEmitNode;
    var p = t.onSubstituteNode;
    t.onEmitNode = B;
    t.onSubstituteNode = z;
    return e.chainBundle(m);
    function m(n) {
     if (n.isDeclarationFile) {
      return n;
     }
     var r = e.visitEachChild(n, _, t);
     e.addEmitHelpers(r, t.readEmitHelpers());
     return r;
    }
    function _(n) {
     if ((n.transformFlags & 16) === 0) {
      return n;
     }
     switch (n.kind) {
     case 120:
      return undefined;

     case 199:
      return k(n);

     case 154:
      return S(n);

     case 237:
      return w(n);

     case 194:
      return C(n);

     case 195:
      return D(n);

     default:
      return e.visitEachChild(n, _, t);
     }
    }
    function g(n) {
     if (e.isNodeWithPossibleHoistedDeclaration(n)) {
      switch (n.kind) {
      case 217:
       return v(n);

      case 223:
       return x(n);

      case 224:
       return y(n);

      case 225:
       return b(n);

      case 272:
       return h(n);

      case 216:
      case 230:
      case 244:
      case 269:
      case 270:
      case 233:
      case 221:
      case 222:
      case 220:
      case 229:
      case 231:
       return e.visitEachChild(n, g, t);

      default:
       return e.Debug.assertNever(n, "Unhandled node.");
      }
     }
     return _(n);
    }
    function h(n) {
     var r = e.createUnderscoreEscapedMap();
     T(n.variableDeclaration, r);
     var i;
     r.forEach(function(t, n) {
      if (f.has(n)) {
       if (!i) {
        i = e.cloneMap(f);
       }
       i.delete(n);
      }
     });
     if (i) {
      var a = f;
      f = i;
      var o = e.visitEachChild(n, g, t);
      f = a;
      return o;
     } else {
      return e.visitEachChild(n, g, t);
     }
    }
    function v(n) {
     if (E(n.declarationList)) {
      var r = N(n.declarationList, false);
      return r ? e.createExpressionStatement(r) : undefined;
     }
     return e.visitEachChild(n, _, t);
    }
    function y(t) {
     return e.updateForIn(t, E(t.initializer) ? N(t.initializer, true) : e.visitNode(t.initializer, _, e.isForInitializer), e.visitNode(t.expression, _, e.isExpression), e.visitNode(t.statement, g, e.isStatement, e.liftToBlock));
    }
    function b(t) {
     return e.updateForOf(t, e.visitNode(t.awaitModifier, _, e.isToken), E(t.initializer) ? N(t.initializer, true) : e.visitNode(t.initializer, _, e.isForInitializer), e.visitNode(t.expression, _, e.isExpression), e.visitNode(t.statement, g, e.isStatement, e.liftToBlock));
    }
    function x(t) {
     var n = t.initializer;
     return e.updateFor(t, E(n) ? N(n, false) : e.visitNode(t.initializer, _, e.isForInitializer), e.visitNode(t.condition, _, e.isExpression), e.visitNode(t.incrementor, _, e.isExpression), e.visitNode(t.statement, g, e.isStatement, e.liftToBlock));
    }
    function k(t) {
     return e.setOriginalNode(e.setTextRange(e.createYield(undefined, e.visitNode(t.expression, _, e.isExpression)), t), t);
    }
    function S(n) {
     return e.updateMethod(n, undefined, e.visitNodes(n.modifiers, _, e.isModifier), n.asteriskToken, n.name, undefined, undefined, e.visitParameterList(n.parameters, _, t), undefined, e.getFunctionFlags(n) & 2 ? O(n) : e.visitFunctionBody(n.body, _, t));
    }
    function w(n) {
     return e.updateFunctionDeclaration(n, undefined, e.visitNodes(n.modifiers, _, e.isModifier), n.asteriskToken, n.name, undefined, e.visitParameterList(n.parameters, _, t), undefined, e.getFunctionFlags(n) & 2 ? O(n) : e.visitFunctionBody(n.body, _, t));
    }
    function C(n) {
     return e.updateFunctionExpression(n, e.visitNodes(n.modifiers, _, e.isModifier), n.asteriskToken, n.name, undefined, e.visitParameterList(n.parameters, _, t), undefined, e.getFunctionFlags(n) & 2 ? O(n) : e.visitFunctionBody(n.body, _, t));
    }
    function D(n) {
     return e.updateArrowFunction(n, e.visitNodes(n.modifiers, _, e.isModifier), undefined, e.visitParameterList(n.parameters, _, t), undefined, n.equalsGreaterThanToken, e.getFunctionFlags(n) & 2 ? O(n) : e.visitFunctionBody(n.body, _, t));
    }
    function T(t, n) {
     var r = t.name;
     if (e.isIdentifier(r)) {
      n.set(r.escapedText, true);
     } else {
      for (var i = 0, a = r.elements; i < a.length; i++) {
       var o = a[i];
       if (!e.isOmittedExpression(o)) {
        T(o, n);
       }
      }
     }
    }
    function E(t) {
     return !!t && e.isVariableDeclarationList(t) && !(t.flags & 3) && t.declarations.some(I);
    }
    function N(t, n) {
     A(t);
     var r = e.getInitializedVariables(t);
     if (r.length === 0) {
      if (n) {
       return e.visitNode(e.convertToAssignmentElementTarget(t.declarations[0].name), _, e.isExpression);
      }
      return undefined;
     }
     return e.inlineExpressions(e.map(r, P));
    }
    function A(t) {
     e.forEach(t.declarations, F);
    }
    function F(t) {
     var n = t.name;
     if (e.isIdentifier(n)) {
      a(n);
     } else {
      for (var r = 0, i = n.elements; r < i.length; r++) {
       var o = i[r];
       if (!e.isOmittedExpression(o)) {
        F(o);
       }
      }
     }
    }
    function P(t) {
     var n = e.setSourceMapRange(e.createAssignment(e.convertToAssignmentElementTarget(t.name), t.initializer), t);
     return e.visitNode(n, _, e.isExpression);
    }
    function I(t) {
     var n = t.name;
     if (e.isIdentifier(n)) {
      return f.has(n.escapedText);
     } else {
      for (var r = 0, i = n.elements; r < i.length; r++) {
       var a = i[r];
       if (!e.isOmittedExpression(a) && I(a)) {
        return true;
       }
      }
     }
     return false;
    }
    function O(a) {
     n();
     var s = e.getOriginalNode(a, e.isFunctionLike);
     var u = s.type;
     var l = c < 2 ? L(u) : undefined;
     var d = a.kind === 195;
     var p = (o.getNodeCheckFlags(a) & 8192) !== 0;
     var m = f;
     f = e.createUnderscoreEscapedMap();
     for (var g = 0, h = a.parameters; g < h.length; g++) {
      var v = h[g];
      T(v, f);
     }
     var y;
     if (!d) {
      var b = [];
      var x = e.addPrologue(b, a.body.statements, false, _);
      b.push(e.createReturn(i(t, p, l, M(a.body, x))));
      e.addStatementsAfterPrologue(b, r());
      var k = e.createBlock(b, true);
      e.setTextRange(k, a.body);
      if (c >= 2) {
       if (o.getNodeCheckFlags(a) & 4096) {
        R();
        e.addEmitHelper(k, e.advancedAsyncSuperHelper);
       } else if (o.getNodeCheckFlags(a) & 2048) {
        R();
        e.addEmitHelper(k, e.asyncSuperHelper);
       }
      }
      y = k;
     } else {
      var S = i(t, p, l, M(a.body));
      var w = r();
      if (e.some(w)) {
       var k = e.convertToFunctionBody(S);
       y = e.updateBlock(k, e.setTextRange(e.createNodeArray(e.concatenate(w, k.statements)), k.statements));
      } else {
       y = S;
      }
     }
     f = m;
     return y;
    }
    function M(t, n) {
     if (e.isBlock(t)) {
      return e.updateBlock(t, e.visitNodes(t.statements, g, e.isStatement, n));
     } else {
      return e.convertToFunctionBody(e.visitNode(t, g, e.isConciseBody));
     }
    }
    function L(t) {
     var n = t && e.getEntityNameFromTypeNode(t);
     if (n && e.isEntityName(n)) {
      var r = o.getTypeReferenceSerializationKind(n);
      if (r === e.TypeReferenceSerializationKind.TypeWithConstructSignatureAndValue || r === e.TypeReferenceSerializationKind.Unknown) {
       return n;
      }
     }
     return undefined;
    }
    function R() {
     if ((u & 1) === 0) {
      u |= 1;
      t.enableSubstitution(189);
      t.enableSubstitution(187);
      t.enableSubstitution(188);
      t.enableEmitNotification(238);
      t.enableEmitNotification(154);
      t.enableEmitNotification(156);
      t.enableEmitNotification(157);
      t.enableEmitNotification(155);
     }
    }
    function B(e, t, n) {
     if (u & 1 && K(t)) {
      var r = o.getNodeCheckFlags(t) & (2048 | 4096);
      if (r !== l) {
       var i = l;
       l = r;
       d(e, t, n);
       l = i;
       return;
      }
     }
     d(e, t, n);
    }
    function z(e, t) {
     t = p(e, t);
     if (e === 1 && l) {
      return j(t);
     }
     return t;
    }
    function j(e) {
     switch (e.kind) {
     case 187:
      return q(e);

     case 188:
      return U(e);

     case 189:
      return J(e);
     }
     return e;
    }
    function q(t) {
     if (t.expression.kind === 97) {
      return V(e.createLiteral(e.idText(t.name)), t);
     }
     return t;
    }
    function U(e) {
     if (e.expression.kind === 97) {
      return V(e.argumentExpression, e);
     }
     return e;
    }
    function J(t) {
     var n = t.expression;
     if (e.isSuperProperty(n)) {
      var r = e.isPropertyAccessExpression(n) ? q(n) : U(n);
      return e.createCall(e.createPropertyAccess(r, "call"), undefined, [ e.createThis() ].concat(t.arguments));
     }
     return t;
    }
    function K(e) {
     var t = e.kind;
     return t === 238 || t === 155 || t === 154 || t === 156 || t === 157;
    }
    function V(t, n) {
     if (l & 4096) {
      return e.setTextRange(e.createPropertyAccess(e.createCall(e.createFileLevelUniqueName("_super"), undefined, [ t ]), "value"), n);
     } else {
      return e.setTextRange(e.createCall(e.createFileLevelUniqueName("_super"), undefined, [ t ]), n);
     }
    }
   }
   e.transformES2017 = n;
   var r = {
    name: "typescript:awaiter",
    scoped: false,
    priority: 5,
    text: '\n            var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n                return new (P || (P = Promise))(function (resolve, reject) {\n                    function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n                    function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n                    function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n                    step((generator = generator.apply(thisArg, _arguments || [])).next());\n                });\n            };'
   };
   function i(t, n, i, a) {
    t.requestEmitHelper(r);
    var o = e.createFunctionExpression(undefined, e.createToken(39), undefined, undefined, [], undefined, a);
    (o.emitNode || (o.emitNode = {})).flags |= 262144 | 524288;
    return e.createCall(e.getHelperName("__awaiter"), undefined, [ e.createThis(), n ? e.createIdentifier("arguments") : e.createVoidZero(), i ? e.createExpressionFromEntityName(i) : e.createVoidZero(), o ]);
   }
   e.asyncSuperHelper = {
    name: "typescript:async-super",
    scoped: true,
    text: e.helperString(a([ "\n            const ", " = name => super[name];" ], [ "\n            const ", " = name => super[name];" ]), "_super")
   };
   e.advancedAsyncSuperHelper = {
    name: "typescript:advanced-async-super",
    scoped: true,
    text: e.helperString(a([ "\n            const ", " = (function (geti, seti) {\n                const cache = Object.create(null);\n                return name => cache[name] || (cache[name] = { get value() { return geti(name); }, set value(v) { seti(name, v); } });\n            })(name => super[name], (name, value) => super[name] = value);" ], [ "\n            const ", " = (function (geti, seti) {\n                const cache = Object.create(null);\n                return name => cache[name] || (cache[name] = { get value() { return geti(name); }, set value(v) { seti(name, v); } });\n            })(name => super[name], (name, value) => super[name] = value);" ]), "_super")
   };
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(e) {
    e[e["AsyncMethodsWithSuper"] = 1] = "AsyncMethodsWithSuper";
   })(t || (t = {}));
   function n(t) {
    var n = t.resumeLexicalEnvironment, r = t.endLexicalEnvironment, a = t.hoistVariableDeclaration;
    var s = t.getEmitResolver();
    var u = t.getCompilerOptions();
    var f = e.getEmitScriptTarget(u);
    var p = t.onEmitNode;
    t.onEmitNode = Z;
    var m = t.onSubstituteNode;
    t.onSubstituteNode = ee;
    var _;
    var g;
    var h = 0;
    return e.chainBundle(v);
    function v(n) {
     if (n.isDeclarationFile) {
      return n;
     }
     var r = e.visitEachChild(n, y, t);
     e.addEmitHelpers(r, t.readEmitHelpers());
     return r;
    }
    function y(e) {
     return k(e, false);
    }
    function b(e) {
     return k(e, true);
    }
    function x(e) {
     if (e.kind === 120) {
      return undefined;
     }
     return e;
    }
    function k(n, r) {
     if ((n.transformFlags & 8) === 0) {
      return n;
     }
     switch (n.kind) {
     case 199:
      return S(n);

     case 205:
      return w(n);

     case 228:
      return C(n);

     case 231:
      return D(n);

     case 186:
      return E(n);

     case 202:
      return P(n, r);

     case 235:
      return I(n);

     case 225:
      return L(n, undefined);

     case 223:
      return O(n);

     case 198:
      return M(n);

     case 155:
      return U(n);

     case 154:
      return V(n);

     case 156:
      return J(n);

     case 157:
      return K(n);

     case 237:
      return W(n);

     case 194:
      return G(n);

     case 195:
      return H(n);

     case 149:
      return q(n);

     case 219:
      return N(n);

     case 193:
      return A(n, r);

     case 272:
      return F(n);

     default:
      return e.visitEachChild(n, y, t);
     }
    }
    function S(n) {
     if (g & 2 && g & 1) {
      return e.setOriginalNode(e.setTextRange(e.createYield(o(t, e.visitNode(n.expression, y, e.isExpression))), n), n);
     }
     return e.visitEachChild(n, y, t);
    }
    function w(n) {
     if (g & 2 && g & 1) {
      if (n.asteriskToken) {
       var r = e.visitNode(n.expression, y, e.isExpression);
       return e.setOriginalNode(e.setTextRange(e.createYield(o(t, e.updateYield(n, n.asteriskToken, l(t, d(t, r, r), r)))), n), n);
      }
      return e.setOriginalNode(e.setTextRange(e.createYield(z(n.expression ? e.visitNode(n.expression, y, e.isExpression) : e.createVoidZero())), n), n);
     }
     return e.visitEachChild(n, y, t);
    }
    function C(n) {
     if (g & 2 && g & 1) {
      return e.updateReturn(n, z(n.expression ? e.visitNode(n.expression, y, e.isExpression) : e.createVoidZero()));
     }
     return e.visitEachChild(n, y, t);
    }
    function D(n) {
     if (g & 2) {
      var r = e.unwrapInnermostStatementOfLabel(n);
      if (r.kind === 225 && r.awaitModifier) {
       return L(r, n);
      }
      return e.restoreEnclosingLabel(e.visitEachChild(r, y, t), n);
     }
     return e.visitEachChild(n, y, t);
    }
    function T(t) {
     var n;
     var r = [];
     for (var i = 0, a = t; i < a.length; i++) {
      var o = a[i];
      if (o.kind === 275) {
       if (n) {
        r.push(e.createObjectLiteral(n));
        n = undefined;
       }
       var s = o.expression;
       r.push(e.visitNode(s, y, e.isExpression));
      } else {
       n = e.append(n, o.kind === 273 ? e.createPropertyAssignment(o.name, e.visitNode(o.initializer, y, e.isExpression)) : e.visitNode(o, y, e.isObjectLiteralElementLike));
      }
     }
     if (n) {
      r.push(e.createObjectLiteral(n));
     }
     return r;
    }
    function E(n) {
     if (n.transformFlags & 1048576) {
      var r = T(n.properties);
      if (r.length && r[0].kind !== 186) {
       r.unshift(e.createObjectLiteral());
      }
      return i(t, r);
     }
     return e.visitEachChild(n, y, t);
    }
    function N(n) {
     return e.visitEachChild(n, b, t);
    }
    function A(n, r) {
     return e.visitEachChild(n, r ? b : y, t);
    }
    function F(n) {
     if (!n.variableDeclaration) {
      return e.updateCatchClause(n, e.createVariableDeclaration(e.createTempVariable(undefined)), e.visitNode(n.block, y, e.isBlock));
     }
     return e.visitEachChild(n, y, t);
    }
    function P(n, r) {
     if (e.isDestructuringAssignment(n) && n.left.transformFlags & 1048576) {
      return e.flattenDestructuringAssignment(n, y, t, 1, !r);
     } else if (n.operatorToken.kind === 26) {
      return e.updateBinary(n, e.visitNode(n.left, b, e.isExpression), e.visitNode(n.right, r ? b : y, e.isExpression));
     }
     return e.visitEachChild(n, y, t);
    }
    function I(n) {
     if (e.isBindingPattern(n.name) && n.name.transformFlags & 1048576) {
      return e.flattenDestructuringBinding(n, y, t, 1);
     }
     return e.visitEachChild(n, y, t);
    }
    function O(t) {
     return e.updateFor(t, e.visitNode(t.initializer, b, e.isForInitializer), e.visitNode(t.condition, y, e.isExpression), e.visitNode(t.incrementor, y, e.isExpression), e.visitNode(t.statement, y, e.isStatement));
    }
    function M(n) {
     return e.visitEachChild(n, b, t);
    }
    function L(n, r) {
     if (n.initializer.transformFlags & 1048576) {
      n = R(n);
     }
     if (n.awaitModifier) {
      return j(n, r);
     } else {
      return e.restoreEnclosingLabel(e.visitEachChild(n, y, t), r);
     }
    }
    function R(t) {
     var n = e.skipParentheses(t.initializer);
     if (e.isVariableDeclarationList(n) || e.isAssignmentPattern(n)) {
      var r = void 0;
      var i = void 0;
      var a = e.createTempVariable(undefined);
      var o = [ e.createForOfBindingStatement(n, a) ];
      if (e.isBlock(t.statement)) {
       e.addRange(o, t.statement.statements);
       r = t.statement;
       i = t.statement.statements;
      } else if (t.statement) {
       e.append(o, t.statement);
       r = t.statement;
       i = t.statement;
      }
      return e.updateForOf(t, t.awaitModifier, e.setTextRange(e.createVariableDeclarationList([ e.setTextRange(e.createVariableDeclaration(a), t.initializer) ], 1), t.initializer), t.expression, e.setTextRange(e.createBlock(e.setTextRange(e.createNodeArray(o), i), true), r));
     }
     return t;
    }
    function B(t, n) {
     var r = e.createForOfBindingStatement(t.initializer, n);
     var i;
     var a;
     var o = [ e.visitNode(r, y, e.isStatement) ];
     var s = e.visitNode(t.statement, y, e.isStatement);
     if (e.isBlock(s)) {
      e.addRange(o, s.statements);
      i = s;
      a = s.statements;
     } else {
      o.push(s);
     }
     return e.setEmitFlags(e.setTextRange(e.createBlock(e.setTextRange(e.createNodeArray(o), a), true), i), 48 | 384);
    }
    function z(n) {
     return g & 1 ? e.createYield(undefined, o(t, n)) : e.createAwait(n);
    }
    function j(n, r) {
     var i = e.visitNode(n.expression, y, e.isExpression);
     var o = e.isIdentifier(i) ? e.getGeneratedNameForNode(i) : e.createTempVariable(undefined);
     var s = e.isIdentifier(i) ? e.getGeneratedNameForNode(o) : e.createTempVariable(undefined);
     var c = e.createUniqueName("e");
     var u = e.getGeneratedNameForNode(c);
     var l = e.createTempVariable(undefined);
     var f = d(t, i, n.expression);
     var p = e.createCall(e.createPropertyAccess(o, "next"), undefined, []);
     var m = e.createPropertyAccess(s, "done");
     var _ = e.createPropertyAccess(s, "value");
     var g = e.createFunctionCall(l, o, []);
     a(c);
     a(l);
     var h = e.setEmitFlags(e.setTextRange(e.createFor(e.setEmitFlags(e.setTextRange(e.createVariableDeclarationList([ e.setTextRange(e.createVariableDeclaration(o, undefined, f), n.expression), e.createVariableDeclaration(s) ]), n.expression), 2097152), e.createComma(e.createAssignment(s, z(p)), e.createLogicalNot(m)), undefined, B(n, _)), n), 256);
     return e.createTry(e.createBlock([ e.restoreEnclosingLabel(h, r) ]), e.createCatchClause(e.createVariableDeclaration(u), e.setEmitFlags(e.createBlock([ e.createExpressionStatement(e.createAssignment(c, e.createObjectLiteral([ e.createPropertyAssignment("error", u) ]))) ]), 1)), e.createBlock([ e.createTry(e.createBlock([ e.setEmitFlags(e.createIf(e.createLogicalAnd(e.createLogicalAnd(s, e.createLogicalNot(m)), e.createAssignment(l, e.createPropertyAccess(o, "return"))), e.createExpressionStatement(z(g))), 1) ]), undefined, e.setEmitFlags(e.createBlock([ e.setEmitFlags(e.createIf(c, e.createThrow(e.createPropertyAccess(c, "error"))), 1) ]), 1)) ]));
    }
    function q(n) {
     if (n.transformFlags & 1048576) {
      return e.updateParameter(n, undefined, undefined, n.dotDotDotToken, e.getGeneratedNameForNode(n), undefined, undefined, e.visitNode(n.initializer, y, e.isExpression));
     }
     return e.visitEachChild(n, y, t);
    }
    function U(n) {
     var r = g;
     g = 0;
     var i = e.updateConstructor(n, undefined, n.modifiers, e.visitParameterList(n.parameters, y, t), X(n));
     g = r;
     return i;
    }
    function J(n) {
     var r = g;
     g = 0;
     var i = e.updateGetAccessor(n, undefined, n.modifiers, e.visitNode(n.name, y, e.isPropertyName), e.visitParameterList(n.parameters, y, t), undefined, X(n));
     g = r;
     return i;
    }
    function K(n) {
     var r = g;
     g = 0;
     var i = e.updateSetAccessor(n, undefined, n.modifiers, e.visitNode(n.name, y, e.isPropertyName), e.visitParameterList(n.parameters, y, t), X(n));
     g = r;
     return i;
    }
    function V(n) {
     var r = g;
     g = e.getFunctionFlags(n);
     var i = e.updateMethod(n, undefined, g & 1 ? e.visitNodes(n.modifiers, x, e.isModifier) : n.modifiers, g & 2 ? undefined : n.asteriskToken, e.visitNode(n.name, y, e.isPropertyName), e.visitNode(undefined, y, e.isToken), undefined, e.visitParameterList(n.parameters, y, t), undefined, g & 2 && g & 1 ? $(n) : X(n));
     g = r;
     return i;
    }
    function W(n) {
     var r = g;
     g = e.getFunctionFlags(n);
     var i = e.updateFunctionDeclaration(n, undefined, g & 1 ? e.visitNodes(n.modifiers, x, e.isModifier) : n.modifiers, g & 2 ? undefined : n.asteriskToken, n.name, undefined, e.visitParameterList(n.parameters, y, t), undefined, g & 2 && g & 1 ? $(n) : X(n));
     g = r;
     return i;
    }
    function H(n) {
     var r = g;
     g = e.getFunctionFlags(n);
     var i = e.updateArrowFunction(n, n.modifiers, undefined, e.visitParameterList(n.parameters, y, t), undefined, n.equalsGreaterThanToken, X(n));
     g = r;
     return i;
    }
    function G(n) {
     var r = g;
     g = e.getFunctionFlags(n);
     var i = e.updateFunctionExpression(n, g & 1 ? e.visitNodes(n.modifiers, x, e.isModifier) : n.modifiers, g & 2 ? undefined : n.asteriskToken, n.name, undefined, e.visitParameterList(n.parameters, y, t), undefined, g & 2 && g & 1 ? $(n) : X(n));
     g = r;
     return i;
    }
    function $(i) {
     n();
     var a = [];
     var o = e.addPrologue(a, i.body.statements, false, y);
     Q(a, i);
     a.push(e.createReturn(c(t, e.createFunctionExpression(undefined, e.createToken(39), i.name && e.getGeneratedNameForNode(i.name), undefined, [], undefined, e.updateBlock(i.body, e.visitLexicalEnvironment(i.body.statements, y, t, o))))));
     e.addStatementsAfterPrologue(a, r());
     var u = e.updateBlock(i.body, a);
     if (f >= 2) {
      if (s.getNodeCheckFlags(i) & 4096) {
       Y();
       e.addEmitHelper(u, e.advancedAsyncSuperHelper);
      } else if (s.getNodeCheckFlags(i) & 2048) {
       Y();
       e.addEmitHelper(u, e.asyncSuperHelper);
      }
     }
     return u;
    }
    function X(t) {
     n();
     var i = 0;
     var a = [];
     var o = e.visitNode(t.body, y, e.isConciseBody);
     if (e.isBlock(o)) {
      i = e.addPrologue(a, o.statements, false, y);
     }
     e.addRange(a, Q(undefined, t));
     var s = r();
     if (i > 0 || e.some(a) || e.some(s)) {
      var c = e.convertToFunctionBody(o, true);
      e.addStatementsAfterPrologue(a, s);
      e.addRange(a, c.statements.slice(i));
      return e.updateBlock(c, e.setTextRange(e.createNodeArray(a), c.statements));
     }
     return o;
    }
    function Q(n, r) {
     for (var i = 0, a = r.parameters; i < a.length; i++) {
      var o = a[i];
      if (o.transformFlags & 1048576) {
       var s = e.getGeneratedNameForNode(o);
       var c = e.flattenDestructuringBinding(o, y, t, 1, s, false, true);
       if (e.some(c)) {
        var u = e.createVariableStatement(undefined, e.createVariableDeclarationList(c));
        e.setEmitFlags(u, 1048576);
        n = e.append(n, u);
       }
      }
     }
     return n;
    }
    function Y() {
     if ((_ & 1) === 0) {
      _ |= 1;
      t.enableSubstitution(189);
      t.enableSubstitution(187);
      t.enableSubstitution(188);
      t.enableEmitNotification(238);
      t.enableEmitNotification(154);
      t.enableEmitNotification(156);
      t.enableEmitNotification(157);
      t.enableEmitNotification(155);
     }
    }
    function Z(e, t, n) {
     if (_ & 1 && ae(t)) {
      var r = s.getNodeCheckFlags(t) & (2048 | 4096);
      if (r !== h) {
       var i = h;
       h = r;
       p(e, t, n);
       h = i;
       return;
      }
     }
     p(e, t, n);
    }
    function ee(e, t) {
     t = m(e, t);
     if (e === 1 && h) {
      return te(t);
     }
     return t;
    }
    function te(e) {
     switch (e.kind) {
     case 187:
      return ne(e);

     case 188:
      return re(e);

     case 189:
      return ie(e);
     }
     return e;
    }
    function ne(t) {
     if (t.expression.kind === 97) {
      return oe(e.createLiteral(e.idText(t.name)), t);
     }
     return t;
    }
    function re(e) {
     if (e.expression.kind === 97) {
      return oe(e.argumentExpression, e);
     }
     return e;
    }
    function ie(t) {
     var n = t.expression;
     if (e.isSuperProperty(n)) {
      var r = e.isPropertyAccessExpression(n) ? ne(n) : re(n);
      return e.createCall(e.createPropertyAccess(r, "call"), undefined, [ e.createThis() ].concat(t.arguments));
     }
     return t;
    }
    function ae(e) {
     var t = e.kind;
     return t === 238 || t === 155 || t === 154 || t === 156 || t === 157;
    }
    function oe(t, n) {
     if (h & 4096) {
      return e.setTextRange(e.createPropertyAccess(e.createCall(e.createIdentifier("_super"), undefined, [ t ]), "value"), n);
     } else {
      return e.setTextRange(e.createCall(e.createIdentifier("_super"), undefined, [ t ]), n);
     }
    }
   }
   e.transformESNext = n;
   var r = {
    name: "typescript:assign",
    scoped: false,
    priority: 1,
    text: "\n            var __assign = (this && this.__assign) || function () {\n                __assign = Object.assign || function(t) {\n                    for (var s, i = 1, n = arguments.length; i < n; i++) {\n                        s = arguments[i];\n                        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                            t[p] = s[p];\n                    }\n                    return t;\n                };\n                return __assign.apply(this, arguments);\n            };"
   };
   function i(t, n) {
    if (t.getCompilerOptions().target >= 2) {
     return e.createCall(e.createPropertyAccess(e.createIdentifier("Object"), "assign"), undefined, n);
    }
    t.requestEmitHelper(r);
    return e.createCall(e.getHelperName("__assign"), undefined, n);
   }
   e.createAssignHelper = i;
   var a = {
    name: "typescript:await",
    scoped: false,
    text: "\n            var __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }"
   };
   function o(t, n) {
    t.requestEmitHelper(a);
    return e.createCall(e.getHelperName("__await"), undefined, [ n ]);
   }
   var s = {
    name: "typescript:asyncGenerator",
    scoped: false,
    text: '\n            var __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\n                if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");\n                var g = generator.apply(thisArg, _arguments || []), i, q = [];\n                return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;\n                function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n                function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n                function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n                function fulfill(value) { resume("next", value); }\n                function reject(value) { resume("throw", value); }\n                function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n            };'
   };
   function c(t, n) {
    t.requestEmitHelper(a);
    t.requestEmitHelper(s);
    (n.emitNode || (n.emitNode = {})).flags |= 262144;
    return e.createCall(e.getHelperName("__asyncGenerator"), undefined, [ e.createThis(), e.createIdentifier("arguments"), n ]);
   }
   var u = {
    name: "typescript:asyncDelegator",
    scoped: false,
    text: '\n            var __asyncDelegator = (this && this.__asyncDelegator) || function (o) {\n                var i, p;\n                return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;\n                function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }\n            };'
   };
   function l(t, n, r) {
    t.requestEmitHelper(a);
    t.requestEmitHelper(u);
    return e.setTextRange(e.createCall(e.getHelperName("__asyncDelegator"), undefined, [ n ]), r);
   }
   var f = {
    name: "typescript:asyncValues",
    scoped: false,
    text: '\n            var __asyncValues = (this && this.__asyncValues) || function (o) {\n                if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");\n                var m = o[Symbol.asyncIterator], i;\n                return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);\n                function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n                function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n            };'
   };
   function d(t, n, r) {
    t.requestEmitHelper(f);
    return e.setTextRange(e.createCall(e.getHelperName("__asyncValues"), undefined, [ n ]), r);
   }
  })(s || (s = {}));
  var s;
  (function(e) {
   function t(t) {
    var r = t.getCompilerOptions();
    var i;
    return e.chainBundle(a);
    function a(n) {
     if (n.isDeclarationFile) {
      return n;
     }
     i = n;
     var r = e.visitEachChild(n, o, t);
     e.addEmitHelpers(r, t.readEmitHelpers());
     return r;
    }
    function o(e) {
     if (e.transformFlags & 4) {
      return s(e);
     } else {
      return e;
     }
    }
    function s(n) {
     switch (n.kind) {
     case 258:
      return u(n, false);

     case 259:
      return l(n, false);

     case 262:
      return f(n, false);

     case 268:
      return w(n);

     default:
      return e.visitEachChild(n, o, t);
     }
    }
    function c(t) {
     switch (t.kind) {
     case 10:
      return h(t);

     case 268:
      return w(t);

     case 258:
      return u(t, true);

     case 259:
      return l(t, true);

     case 262:
      return f(t, true);

     default:
      return e.Debug.failBadSyntaxKind(t);
     }
    }
    function u(e, t) {
     return d(e.openingElement, e.children, t, e);
    }
    function l(e, t) {
     return d(e, undefined, t, e);
    }
    function f(e, t) {
     return p(e.openingFragment, e.children, t, e);
    }
    function d(n, a, o, s) {
     var u = k(n);
     var l;
     var f = n.attributes.properties;
     if (f.length === 0) {
      l = e.createNull();
     } else {
      var d = e.flatten(e.spanMap(f, e.isJsxSpreadAttribute, function(t, n) {
       return n ? e.map(t, m) : e.createObjectLiteral(e.map(t, _));
      }));
      if (e.isJsxSpreadAttribute(f[0])) {
       d.unshift(e.createObjectLiteral());
      }
      l = e.singleOrUndefined(d);
      if (!l) {
       l = e.createAssignHelper(t, d);
      }
     }
     var p = e.createExpressionForJsxElement(t.getEmitResolver().getJsxFactoryEntity(i), r.reactNamespace, u, l, e.mapDefined(a, c), n, s);
     if (o) {
      e.startOnNewLine(p);
     }
     return p;
    }
    function p(n, a, o, s) {
     var u = e.createExpressionForJsxFragment(t.getEmitResolver().getJsxFactoryEntity(i), r.reactNamespace, e.mapDefined(a, c), n, s);
     if (o) {
      e.startOnNewLine(u);
     }
     return u;
    }
    function m(t) {
     return e.visitNode(t.expression, o, e.isExpression);
    }
    function _(t) {
     var n = S(t);
     var r = g(t.initializer);
     return e.createPropertyAssignment(n, r);
    }
    function g(t) {
     if (t === undefined) {
      return e.createTrue();
     } else if (t.kind === 9) {
      var n = e.createLiteral(x(t.text) || t.text);
      n.singleQuote = t.singleQuote !== undefined ? t.singleQuote : !e.isStringDoubleQuoted(t, i);
      return e.setTextRange(n, t);
     } else if (t.kind === 268) {
      if (t.expression === undefined) {
       return e.createTrue();
      }
      return w(t);
     } else {
      return e.Debug.failBadSyntaxKind(t);
     }
    }
    function h(t) {
     var n = v(e.getTextOfNode(t, true));
     return n === undefined ? undefined : e.createLiteral(n);
    }
    function v(t) {
     var n;
     var r = 0;
     var i = -1;
     for (var a = 0; a < t.length; a++) {
      var o = t.charCodeAt(a);
      if (e.isLineBreak(o)) {
       if (r !== -1 && i !== -1) {
        n = y(n, t.substr(r, i - r + 1));
       }
       r = -1;
      } else if (!e.isWhiteSpaceSingleLine(o)) {
       i = a;
       if (r === -1) {
        r = a;
       }
      }
     }
     return r !== -1 ? y(n, t.substr(r)) : n;
    }
    function y(e, t) {
     var n = b(t);
     return e === undefined ? n : e + " " + n;
    }
    function b(e) {
     return e.replace(/&((#((\d+)|x([\da-fA-F]+)))|(\w+));/g, function(e, t, r, i, a, o, s) {
      if (a) {
       return String.fromCharCode(parseInt(a, 10));
      } else if (o) {
       return String.fromCharCode(parseInt(o, 16));
      } else {
       var c = n.get(s);
       return c ? String.fromCharCode(c) : e;
      }
     });
    }
    function x(e) {
     var t = b(e);
     return t === e ? undefined : t;
    }
    function k(t) {
     if (t.kind === 258) {
      return k(t.openingElement);
     } else {
      var n = t.tagName;
      if (e.isIdentifier(n) && e.isIntrinsicJsxName(n.escapedText)) {
       return e.createLiteral(e.idText(n));
      } else {
       return e.createExpressionFromEntityName(n);
      }
     }
    }
    function S(t) {
     var n = t.name;
     var r = e.idText(n);
     if (/^[A-Za-z_]\w*$/.test(r)) {
      return n;
     } else {
      return e.createLiteral(r);
     }
    }
    function w(t) {
     return e.visitNode(t.expression, o, e.isExpression);
    }
   }
   e.transformJsx = t;
   var n = e.createMapFromTemplate({
    quot: 34,
    amp: 38,
    apos: 39,
    lt: 60,
    gt: 62,
    nbsp: 160,
    iexcl: 161,
    cent: 162,
    pound: 163,
    curren: 164,
    yen: 165,
    brvbar: 166,
    sect: 167,
    uml: 168,
    copy: 169,
    ordf: 170,
    laquo: 171,
    not: 172,
    shy: 173,
    reg: 174,
    macr: 175,
    deg: 176,
    plusmn: 177,
    sup2: 178,
    sup3: 179,
    acute: 180,
    micro: 181,
    para: 182,
    middot: 183,
    cedil: 184,
    sup1: 185,
    ordm: 186,
    raquo: 187,
    frac14: 188,
    frac12: 189,
    frac34: 190,
    iquest: 191,
    Agrave: 192,
    Aacute: 193,
    Acirc: 194,
    Atilde: 195,
    Auml: 196,
    Aring: 197,
    AElig: 198,
    Ccedil: 199,
    Egrave: 200,
    Eacute: 201,
    Ecirc: 202,
    Euml: 203,
    Igrave: 204,
    Iacute: 205,
    Icirc: 206,
    Iuml: 207,
    ETH: 208,
    Ntilde: 209,
    Ograve: 210,
    Oacute: 211,
    Ocirc: 212,
    Otilde: 213,
    Ouml: 214,
    times: 215,
    Oslash: 216,
    Ugrave: 217,
    Uacute: 218,
    Ucirc: 219,
    Uuml: 220,
    Yacute: 221,
    THORN: 222,
    szlig: 223,
    agrave: 224,
    aacute: 225,
    acirc: 226,
    atilde: 227,
    auml: 228,
    aring: 229,
    aelig: 230,
    ccedil: 231,
    egrave: 232,
    eacute: 233,
    ecirc: 234,
    euml: 235,
    igrave: 236,
    iacute: 237,
    icirc: 238,
    iuml: 239,
    eth: 240,
    ntilde: 241,
    ograve: 242,
    oacute: 243,
    ocirc: 244,
    otilde: 245,
    ouml: 246,
    divide: 247,
    oslash: 248,
    ugrave: 249,
    uacute: 250,
    ucirc: 251,
    uuml: 252,
    yacute: 253,
    thorn: 254,
    yuml: 255,
    OElig: 338,
    oelig: 339,
    Scaron: 352,
    scaron: 353,
    Yuml: 376,
    fnof: 402,
    circ: 710,
    tilde: 732,
    Alpha: 913,
    Beta: 914,
    Gamma: 915,
    Delta: 916,
    Epsilon: 917,
    Zeta: 918,
    Eta: 919,
    Theta: 920,
    Iota: 921,
    Kappa: 922,
    Lambda: 923,
    Mu: 924,
    Nu: 925,
    Xi: 926,
    Omicron: 927,
    Pi: 928,
    Rho: 929,
    Sigma: 931,
    Tau: 932,
    Upsilon: 933,
    Phi: 934,
    Chi: 935,
    Psi: 936,
    Omega: 937,
    alpha: 945,
    beta: 946,
    gamma: 947,
    delta: 948,
    epsilon: 949,
    zeta: 950,
    eta: 951,
    theta: 952,
    iota: 953,
    kappa: 954,
    lambda: 955,
    mu: 956,
    nu: 957,
    xi: 958,
    omicron: 959,
    pi: 960,
    rho: 961,
    sigmaf: 962,
    sigma: 963,
    tau: 964,
    upsilon: 965,
    phi: 966,
    chi: 967,
    psi: 968,
    omega: 969,
    thetasym: 977,
    upsih: 978,
    piv: 982,
    ensp: 8194,
    emsp: 8195,
    thinsp: 8201,
    zwnj: 8204,
    zwj: 8205,
    lrm: 8206,
    rlm: 8207,
    ndash: 8211,
    mdash: 8212,
    lsquo: 8216,
    rsquo: 8217,
    sbquo: 8218,
    ldquo: 8220,
    rdquo: 8221,
    bdquo: 8222,
    dagger: 8224,
    Dagger: 8225,
    bull: 8226,
    hellip: 8230,
    permil: 8240,
    prime: 8242,
    Prime: 8243,
    lsaquo: 8249,
    rsaquo: 8250,
    oline: 8254,
    frasl: 8260,
    euro: 8364,
    image: 8465,
    weierp: 8472,
    real: 8476,
    trade: 8482,
    alefsym: 8501,
    larr: 8592,
    uarr: 8593,
    rarr: 8594,
    darr: 8595,
    harr: 8596,
    crarr: 8629,
    lArr: 8656,
    uArr: 8657,
    rArr: 8658,
    dArr: 8659,
    hArr: 8660,
    forall: 8704,
    part: 8706,
    exist: 8707,
    empty: 8709,
    nabla: 8711,
    isin: 8712,
    notin: 8713,
    ni: 8715,
    prod: 8719,
    sum: 8721,
    minus: 8722,
    lowast: 8727,
    radic: 8730,
    prop: 8733,
    infin: 8734,
    ang: 8736,
    and: 8743,
    or: 8744,
    cap: 8745,
    cup: 8746,
    int: 8747,
    there4: 8756,
    sim: 8764,
    cong: 8773,
    asymp: 8776,
    ne: 8800,
    equiv: 8801,
    le: 8804,
    ge: 8805,
    sub: 8834,
    sup: 8835,
    nsub: 8836,
    sube: 8838,
    supe: 8839,
    oplus: 8853,
    otimes: 8855,
    perp: 8869,
    sdot: 8901,
    lceil: 8968,
    rceil: 8969,
    lfloor: 8970,
    rfloor: 8971,
    lang: 9001,
    rang: 9002,
    loz: 9674,
    spades: 9824,
    clubs: 9827,
    hearts: 9829,
    diams: 9830
   });
  })(s || (s = {}));
  var s;
  (function(e) {
   function t(t) {
    var n = t.hoistVariableDeclaration;
    return e.chainBundle(r);
    function r(n) {
     if (n.isDeclarationFile) {
      return n;
     }
     return e.visitEachChild(n, i, t);
    }
    function i(n) {
     if ((n.transformFlags & 32) === 0) {
      return n;
     }
     switch (n.kind) {
     case 202:
      return a(n);

     default:
      return e.visitEachChild(n, i, t);
     }
    }
    function a(n) {
     switch (n.operatorToken.kind) {
     case 62:
      return o(n);

     case 40:
      return s(n);

     default:
      return e.visitEachChild(n, i, t);
     }
    }
    function o(t) {
     var r;
     var a;
     var o = e.visitNode(t.left, i, e.isExpression);
     var s = e.visitNode(t.right, i, e.isExpression);
     if (e.isElementAccessExpression(o)) {
      var c = e.createTempVariable(n);
      var u = e.createTempVariable(n);
      r = e.setTextRange(e.createElementAccess(e.setTextRange(e.createAssignment(c, o.expression), o.expression), e.setTextRange(e.createAssignment(u, o.argumentExpression), o.argumentExpression)), o);
      a = e.setTextRange(e.createElementAccess(c, u), o);
     } else if (e.isPropertyAccessExpression(o)) {
      var c = e.createTempVariable(n);
      r = e.setTextRange(e.createPropertyAccess(e.setTextRange(e.createAssignment(c, o.expression), o.expression), o.name), o);
      a = e.setTextRange(e.createPropertyAccess(c, o.name), o);
     } else {
      r = o;
      a = o;
     }
     return e.setTextRange(e.createAssignment(r, e.createMathPow(a, s, t)), t);
    }
    function s(t) {
     var n = e.visitNode(t.left, i, e.isExpression);
     var r = e.visitNode(t.right, i, e.isExpression);
     return e.createMathPow(n, r, t);
    }
   }
   e.transformES2016 = t;
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(e) {
    e[e["CapturedThis"] = 1] = "CapturedThis";
    e[e["BlockScopedBindings"] = 2] = "BlockScopedBindings";
   })(t || (t = {}));
   var n;
   (function(e) {
    e[e["ToOriginal"] = 0] = "ToOriginal";
    e[e["ToOutParameter"] = 1] = "ToOutParameter";
   })(n || (n = {}));
   var r;
   (function(e) {
    e[e["Break"] = 2] = "Break";
    e[e["Continue"] = 4] = "Continue";
    e[e["Return"] = 8] = "Return";
   })(r || (r = {}));
   var i;
   (function(e) {
    e[e["NoReplacement"] = 0] = "NoReplacement";
    e[e["ReplaceSuperCapture"] = 1] = "ReplaceSuperCapture";
    e[e["ReplaceWithReturn"] = 2] = "ReplaceWithReturn";
   })(i || (i = {}));
   var a;
   (function(e) {
    e[e["None"] = 0] = "None";
    e[e["Function"] = 1] = "Function";
    e[e["ArrowFunction"] = 2] = "ArrowFunction";
    e[e["AsyncFunctionBody"] = 4] = "AsyncFunctionBody";
    e[e["NonStaticClassElement"] = 8] = "NonStaticClassElement";
    e[e["CapturesThis"] = 16] = "CapturesThis";
    e[e["ExportedVariableStatement"] = 32] = "ExportedVariableStatement";
    e[e["TopLevel"] = 64] = "TopLevel";
    e[e["Block"] = 128] = "Block";
    e[e["IterationStatement"] = 256] = "IterationStatement";
    e[e["IterationStatementBlock"] = 512] = "IterationStatementBlock";
    e[e["ForStatement"] = 1024] = "ForStatement";
    e[e["ForInOrForOfStatement"] = 2048] = "ForInOrForOfStatement";
    e[e["ConstructorWithCapturedSuper"] = 4096] = "ConstructorWithCapturedSuper";
    e[e["ComputedPropertyName"] = 8192] = "ComputedPropertyName";
    e[e["AncestorFactsMask"] = 16383] = "AncestorFactsMask";
    e[e["BlockScopeIncludes"] = 0] = "BlockScopeIncludes";
    e[e["BlockScopeExcludes"] = 4032] = "BlockScopeExcludes";
    e[e["SourceFileIncludes"] = 64] = "SourceFileIncludes";
    e[e["SourceFileExcludes"] = 3968] = "SourceFileExcludes";
    e[e["FunctionIncludes"] = 65] = "FunctionIncludes";
    e[e["FunctionExcludes"] = 16286] = "FunctionExcludes";
    e[e["AsyncFunctionBodyIncludes"] = 69] = "AsyncFunctionBodyIncludes";
    e[e["AsyncFunctionBodyExcludes"] = 16278] = "AsyncFunctionBodyExcludes";
    e[e["ArrowFunctionIncludes"] = 66] = "ArrowFunctionIncludes";
    e[e["ArrowFunctionExcludes"] = 16256] = "ArrowFunctionExcludes";
    e[e["ConstructorIncludes"] = 73] = "ConstructorIncludes";
    e[e["ConstructorExcludes"] = 16278] = "ConstructorExcludes";
    e[e["DoOrWhileStatementIncludes"] = 256] = "DoOrWhileStatementIncludes";
    e[e["DoOrWhileStatementExcludes"] = 0] = "DoOrWhileStatementExcludes";
    e[e["ForStatementIncludes"] = 1280] = "ForStatementIncludes";
    e[e["ForStatementExcludes"] = 3008] = "ForStatementExcludes";
    e[e["ForInOrForOfStatementIncludes"] = 2304] = "ForInOrForOfStatementIncludes";
    e[e["ForInOrForOfStatementExcludes"] = 1984] = "ForInOrForOfStatementExcludes";
    e[e["BlockIncludes"] = 128] = "BlockIncludes";
    e[e["BlockExcludes"] = 3904] = "BlockExcludes";
    e[e["IterationStatementBlockIncludes"] = 512] = "IterationStatementBlockIncludes";
    e[e["IterationStatementBlockExcludes"] = 4032] = "IterationStatementBlockExcludes";
    e[e["ComputedPropertyNameIncludes"] = 8192] = "ComputedPropertyNameIncludes";
    e[e["ComputedPropertyNameExcludes"] = 0] = "ComputedPropertyNameExcludes";
    e[e["NewTarget"] = 16384] = "NewTarget";
    e[e["NewTargetInComputedPropertyName"] = 32768] = "NewTargetInComputedPropertyName";
    e[e["SubtreeFactsMask"] = -16384] = "SubtreeFactsMask";
    e[e["PropagateNewTargetMask"] = 49152] = "PropagateNewTargetMask";
   })(a || (a = {}));
   function o(t) {
    var n = t.startLexicalEnvironment, r = t.resumeLexicalEnvironment, i = t.endLexicalEnvironment, a = t.hoistVariableDeclaration;
    var o = t.getCompilerOptions();
    var u = t.getEmitResolver();
    var l = t.onSubstituteNode;
    var f = t.onEmitNode;
    t.onEmitNode = Tt;
    t.onSubstituteNode = At;
    var d;
    var p;
    var m;
    var _;
    function g(t) {
     _ = e.append(_, e.createVariableDeclaration(t));
    }
    var h;
    var v;
    return e.chainBundle(y);
    function y(n) {
     if (n.isDeclarationFile) {
      return n;
     }
     d = n;
     p = n.text;
     var r = E(n);
     e.addEmitHelpers(r, t.readEmitHelpers());
     d = undefined;
     p = undefined;
     _ = undefined;
     m = 0;
     return r;
    }
    function b(e, t) {
     var n = m;
     m = (m & ~e | t) & 16383;
     return n;
    }
    function x(e, t, n) {
     m = (m & ~t | n) & -16384 | e;
    }
    function k(e) {
     return (m & 4096) !== 0 && e.kind === 228 && !e.expression;
    }
    function S(t) {
     return (t.transformFlags & 128) !== 0 || h !== undefined || m & 4096 && (e.isStatement(t) || t.kind === 216) || e.isIterationStatement(t, false) && Be(t) || (e.getEmitFlags(t) & 33554432) !== 0;
    }
    function w(e) {
     if (S(e)) {
      return T(e);
     } else {
      return e;
     }
    }
    function C(e) {
     if (S(e)) {
      return _e(e, true);
     }
     return e;
    }
    function D(e) {
     if (e.kind === 97) {
      return Ct(true);
     }
     return w(e);
    }
    function T(n) {
     switch (n.kind) {
     case 115:
      return undefined;

     case 238:
      return L(n);

     case 207:
      return R(n);

     case 149:
      return G(n);

     case 237:
      return fe(n);

     case 195:
      return ue(n);

     case 194:
      return le(n);

     case 235:
      return Se(n);

     case 71:
      return O(n);

     case 236:
      return be(n);

     case 230:
      return N(n);

     case 244:
      return A(n);

     case 216:
      return _e(n, false);

     case 227:
     case 226:
      return M(n);

     case 231:
      return De(n);

     case 221:
     case 222:
      return Ne(n, undefined);

     case 223:
      return Ae(n, undefined);

     case 224:
      return Fe(n, undefined);

     case 225:
      return Pe(n, undefined);

     case 219:
      return ge(n);

     case 186:
      return Re(n);

     case 272:
      return Qe(n);

     case 274:
      return tt(n);

     case 147:
      return nt(n);

     case 185:
      return it(n);

     case 189:
      return at(n);

     case 190:
      return ut(n);

     case 193:
      return he(n, true);

     case 202:
      return ve(n, true);

     case 13:
     case 14:
     case 15:
     case 16:
      return gt(n);

     case 9:
      return ht(n);

     case 8:
      return vt(n);

     case 191:
      return yt(n);

     case 204:
      return xt(n);

     case 205:
      return rt(n);

     case 206:
      return mt(n);

     case 97:
      return Ct(false);

     case 99:
      return I(n);

     case 212:
      return Dt(n);

     case 154:
      return Ze(n);

     case 156:
     case 157:
      return et(n);

     case 217:
      return ye(n);

     case 228:
      return P(n);

     default:
      return e.visitEachChild(n, w, t);
     }
    }
    function E(t) {
     var r = b(3968, 64);
     var a = [];
     n();
     var o = e.addStandardPrologue(a, t.statements, false);
     te(a, t);
     o = e.addCustomPrologue(a, t.statements, o, w);
     e.addRange(a, e.visitNodes(t.statements, w, e.isStatement, o));
     if (_) {
      a.push(e.createVariableStatement(undefined, e.createVariableDeclarationList(_)));
     }
     e.addStatementsAfterPrologue(a, i());
     x(r, 0, 0);
     return e.updateSourceFileNode(t, e.setTextRange(e.createNodeArray(a), t.statements));
    }
    function N(n) {
     if (h !== undefined) {
      var r = h.allowedNonLabeledJumps;
      h.allowedNonLabeledJumps |= 2;
      var i = e.visitEachChild(n, w, t);
      h.allowedNonLabeledJumps = r;
      return i;
     }
     return e.visitEachChild(n, w, t);
    }
    function A(n) {
     var r = b(4032, 0);
     var i = e.visitEachChild(n, w, t);
     x(r, 0, 0);
     return i;
    }
    function F(t) {
     return e.setOriginalNode(e.createReturn(e.createFileLevelUniqueName("_this")), t);
    }
    function P(n) {
     if (h) {
      h.nonLocalJumps |= 8;
      if (k(n)) {
       n = F(n);
      }
      return e.createReturn(e.createObjectLiteral([ e.createPropertyAssignment(e.createIdentifier("value"), n.expression ? e.visitNode(n.expression, w, e.isExpression) : e.createVoidZero()) ]));
     } else if (k(n)) {
      return F(n);
     }
     return e.visitEachChild(n, w, t);
    }
    function I(t) {
     if (h) {
      if (m & 2) {
       h.containsLexicalThis = true;
       return t;
      }
      return h.thisName || (h.thisName = e.createUniqueName("this"));
     }
     return t;
    }
    function O(t) {
     if (!h) {
      return t;
     }
     if (e.isGeneratedIdentifier(t)) {
      return t;
     }
     if (t.escapedText !== "arguments" || !u.isArgumentsLocalBinding(t)) {
      return t;
     }
     return h.argumentsName || (h.argumentsName = e.createUniqueName("arguments"));
    }
    function M(n) {
     if (h) {
      var r = n.kind === 227 ? 2 : 4;
      var i = n.label && h.labels && h.labels.get(e.idText(n.label)) || !n.label && h.allowedNonLabeledJumps & r;
      if (!i) {
       var a = void 0;
       var o = n.label;
       if (!o) {
        if (n.kind === 227) {
         h.nonLocalJumps |= 2;
         a = "break";
        } else {
         h.nonLocalJumps |= 4;
         a = "continue";
        }
       } else {
        if (n.kind === 227) {
         a = "break-" + o.escapedText;
         Ke(h, true, e.idText(o), a);
        } else {
         a = "continue-" + o.escapedText;
         Ke(h, false, e.idText(o), a);
        }
       }
       var s = e.createLiteral(a);
       if (h.loopOutParameters.length) {
        var c = h.loopOutParameters;
        var u = void 0;
        for (var l = 0; l < c.length; l++) {
         var f = qe(c[l], 1);
         if (l === 0) {
          u = f;
         } else {
          u = e.createBinary(u, 26, f);
         }
        }
        s = e.createBinary(u, 26, s);
       }
       return e.createReturn(s);
      }
     }
     return e.visitEachChild(n, w, t);
    }
    function L(t) {
     var n = e.createVariableDeclaration(e.getLocalName(t, true), undefined, B(t));
     e.setOriginalNode(n, t);
     var r = [];
     var i = e.createVariableStatement(undefined, e.createVariableDeclarationList([ n ]));
     e.setOriginalNode(i, t);
     e.setTextRange(i, t);
     e.startOnNewLine(i);
     r.push(i);
     if (e.hasModifier(t, 1)) {
      var a = e.hasModifier(t, 512) ? e.createExportDefault(e.getLocalName(t)) : e.createExternalModuleExport(e.getLocalName(t));
      e.setOriginalNode(a, i);
      r.push(a);
     }
     var o = e.getEmitFlags(t);
     if ((o & 4194304) === 0) {
      r.push(e.createEndOfDeclarationMarker(t));
      e.setEmitFlags(i, o | 4194304);
     }
     return e.singleOrMany(r);
    }
    function R(e) {
     return B(e);
    }
    function B(t) {
     if (t.name) {
      Et();
     }
     var n = e.getEffectiveBaseTypeNode(t);
     var r = e.createFunctionExpression(undefined, undefined, undefined, undefined, n ? [ e.createParameter(undefined, undefined, undefined, e.createFileLevelUniqueName("_super")) ] : [], undefined, z(t, n));
     e.setEmitFlags(r, e.getEmitFlags(t) & 65536 | 524288);
     var i = e.createPartiallyEmittedExpression(r);
     i.end = t.end;
     e.setEmitFlags(i, 1536);
     var a = e.createPartiallyEmittedExpression(i);
     a.end = e.skipTrivia(p, t.pos);
     e.setEmitFlags(a, 1536);
     var o = e.createParen(e.createCall(a, undefined, n ? [ e.visitNode(n.expression, w, e.isExpression) ] : []));
     e.addSyntheticLeadingComment(o, 3, "* @class ");
     return o;
    }
    function z(t, r) {
     var a = [];
     n();
     j(a, t, r);
     q(a, t, r);
     ie(a, t);
     var o = e.createTokenRange(e.skipTrivia(p, t.members.end), 18);
     var s = e.getInternalName(t);
     var c = e.createPartiallyEmittedExpression(s);
     c.end = o.end;
     e.setEmitFlags(c, 1536);
     var u = e.createReturn(c);
     u.pos = o.pos;
     e.setEmitFlags(u, 1536 | 384);
     a.push(u);
     e.addStatementsAfterPrologue(a, i());
     var l = e.createBlock(e.setTextRange(e.createNodeArray(a), t.members), true);
     e.setEmitFlags(l, 1536);
     return l;
    }
    function j(n, r, i) {
     if (i) {
      n.push(e.setTextRange(e.createExpressionStatement(s(t, e.getInternalName(r))), i));
     }
    }
    function q(t, n, r) {
     var i = h;
     h = undefined;
     var a = b(16278, 73);
     var o = e.getFirstConstructorWithBody(n);
     var s = Bt(o, r !== undefined);
     var c = e.createFunctionDeclaration(undefined, undefined, undefined, e.getInternalName(n), undefined, U(o, s), undefined, J(o, n, r, s));
     e.setTextRange(c, o || n);
     if (r) {
      e.setEmitFlags(c, 8);
     }
     t.push(c);
     x(a, 49152, 0);
     h = i;
    }
    function U(n, r) {
     return e.visitParameterList(n && !r ? n.parameters : undefined, w, t) || [];
    }
    function J(t, n, a, o) {
     var s = [];
     r();
     var c = -1;
     if (o) {
      c = 0;
     } else if (t) {
      c = e.addStandardPrologue(s, t.body.statements, false);
     }
     if (t) {
      X(s, t);
      ee(s, t, o);
      if (!o) {
       c = e.addCustomPrologue(s, t.body.statements, c, w);
      }
      e.Debug.assert(c >= 0, "statementOffset not initialized correctly!");
     }
     var u = !!a && e.skipOuterExpressions(a.expression).kind !== 95;
     var l = V(s, t, u, o, c);
     if (l === 1 || l === 2) {
      c++;
     }
     if (t) {
      if (l === 1) {
       m |= 4096;
      }
      e.addRange(s, e.visitNodes(t.body.statements, w, e.isStatement, c));
     }
     if (u && l !== 2 && !(t && K(t.body))) {
      s.push(e.createReturn(e.createFileLevelUniqueName("_this")));
     }
     e.addStatementsAfterPrologue(s, i());
     if (t) {
      re(s, t, false);
     }
     var f = e.createBlock(e.setTextRange(e.createNodeArray(s), t ? t.body.statements : n.members), true);
     e.setTextRange(f, t ? t.body : n);
     if (!t) {
      e.setEmitFlags(f, 1536);
     }
     return f;
    }
    function K(t) {
     if (t.kind === 228) {
      return true;
     } else if (t.kind === 220) {
      var n = t;
      if (n.elseStatement) {
       return K(n.thenStatement) && K(n.elseStatement);
      }
     } else if (t.kind === 216) {
      var r = e.lastOrUndefined(t.statements);
      if (r && K(r)) {
       return true;
      }
     }
     return false;
    }
    function V(t, n, r, i, a) {
     if (!r) {
      if (n) {
       te(t, n);
      }
      return 0;
     }
     if (!n) {
      t.push(e.createReturn(H()));
      return 2;
     }
     if (i) {
      ne(t, n, H());
      Nt();
      return 1;
     }
     var o;
     var s;
     var c = n.body.statements;
     if (a < c.length) {
      o = c[a];
      if (o.kind === 219 && e.isSuperCall(o.expression)) {
       s = st(o.expression);
      }
     }
     if (s && a === c.length - 1 && !(n.transformFlags & (16384 | 32768))) {
      var u = e.createReturn(s);
      if (s.kind !== 202 || s.left.kind !== 189) {
       e.Debug.fail("Assumed generated super call would have form 'super.call(...) || this'.");
      }
      e.setCommentRange(u, e.getCommentRange(e.setEmitFlags(s.left, 1536)));
      t.push(u);
      return 2;
     }
     ne(t, n, s || W(), o);
     if (s) {
      return 1;
     }
     return 0;
    }
    function W() {
     return e.setEmitFlags(e.createThis(), 4);
    }
    function H() {
     return e.createLogicalOr(e.createLogicalAnd(e.createStrictInequality(e.createFileLevelUniqueName("_super"), e.createNull()), e.createFunctionApply(e.createFileLevelUniqueName("_super"), W(), e.createIdentifier("arguments"))), W());
    }
    function G(t) {
     if (t.dotDotDotToken) {
      return undefined;
     } else if (e.isBindingPattern(t.name)) {
      return e.setOriginalNode(e.setTextRange(e.createParameter(undefined, undefined, undefined, e.getGeneratedNameForNode(t), undefined, undefined, undefined), t), t);
     } else if (t.initializer) {
      return e.setOriginalNode(e.setTextRange(e.createParameter(undefined, undefined, undefined, t.name, undefined, undefined, undefined), t), t);
     } else {
      return t;
     }
    }
    function $(e) {
     return (e.transformFlags & 131072) !== 0;
    }
    function X(t, n) {
     if (!$(n)) {
      return;
     }
     for (var r = 0, i = n.parameters; r < i.length; r++) {
      var a = i[r];
      var o = a.name, s = a.initializer, c = a.dotDotDotToken;
      if (c) {
       continue;
      }
      if (e.isBindingPattern(o)) {
       Q(t, a, o, s);
      } else if (s) {
       Y(t, a, o, s);
      }
     }
    }
    function Q(n, r, i, a) {
     var o = e.getGeneratedNameForNode(r);
     if (i.elements.length > 0) {
      n.push(e.setEmitFlags(e.createVariableStatement(undefined, e.createVariableDeclarationList(e.flattenDestructuringBinding(r, w, t, 0, o))), 1048576));
     } else if (a) {
      n.push(e.setEmitFlags(e.createExpressionStatement(e.createAssignment(o, e.visitNode(a, w, e.isExpression))), 1048576));
     }
    }
    function Y(t, n, r, i) {
     i = e.visitNode(i, w, e.isExpression);
     var a = e.createIf(e.createTypeCheck(e.getSynthesizedClone(r), "undefined"), e.setEmitFlags(e.setTextRange(e.createBlock([ e.createExpressionStatement(e.setEmitFlags(e.setTextRange(e.createAssignment(e.setEmitFlags(e.getMutableClone(r), 48), e.setEmitFlags(i, 48 | e.getEmitFlags(i) | 1536)), n), 1536)) ]), n), 1 | 32 | 384 | 1536));
     e.startOnNewLine(a);
     e.setTextRange(a, n);
     e.setEmitFlags(a, 384 | 32 | 1048576 | 1536);
     t.push(a);
    }
    function Z(e, t) {
     return e && e.dotDotDotToken && e.name.kind === 71 && !t;
    }
    function ee(t, n, r) {
     var i = e.lastOrUndefined(n.parameters);
     if (!Z(i, r)) {
      return;
     }
     var a = e.getMutableClone(i.name);
     e.setEmitFlags(a, 48);
     var o = e.getSynthesizedClone(i.name);
     var s = n.parameters.length - 1;
     var c = e.createLoopVariable();
     t.push(e.setEmitFlags(e.setTextRange(e.createVariableStatement(undefined, e.createVariableDeclarationList([ e.createVariableDeclaration(a, undefined, e.createArrayLiteral([])) ])), i), 1048576));
     var u = e.createFor(e.setTextRange(e.createVariableDeclarationList([ e.createVariableDeclaration(c, undefined, e.createLiteral(s)) ]), i), e.setTextRange(e.createLessThan(c, e.createPropertyAccess(e.createIdentifier("arguments"), "length")), i), e.setTextRange(e.createPostfixIncrement(c), i), e.createBlock([ e.startOnNewLine(e.setTextRange(e.createExpressionStatement(e.createAssignment(e.createElementAccess(o, s === 0 ? c : e.createSubtract(c, e.createLiteral(s))), e.createElementAccess(e.createIdentifier("arguments"), c))), i)) ]));
     e.setEmitFlags(u, 1048576);
     e.startOnNewLine(u);
     t.push(u);
    }
    function te(t, n) {
     if (n.transformFlags & 32768 && n.kind !== 195) {
      ne(t, n, e.createThis());
     }
    }
    function ne(t, n, r, i) {
     Nt();
     var a = e.createVariableStatement(undefined, e.createVariableDeclarationList([ e.createVariableDeclaration(e.createFileLevelUniqueName("_this"), undefined, r) ]));
     e.setEmitFlags(a, 1536 | 1048576);
     e.setTextRange(a, i);
     e.setSourceMapRange(a, n);
     t.push(a);
    }
    function re(t, n, r) {
     if (m & 16384) {
      var i = void 0;
      switch (n.kind) {
      case 195:
       return t;

      case 154:
      case 156:
      case 157:
       i = e.createVoidZero();
       break;

      case 155:
       i = e.createPropertyAccess(e.setEmitFlags(e.createThis(), 4), "constructor");
       break;

      case 237:
      case 194:
       i = e.createConditional(e.createLogicalAnd(e.setEmitFlags(e.createThis(), 4), e.createBinary(e.setEmitFlags(e.createThis(), 4), 93, e.getLocalName(n))), e.createPropertyAccess(e.setEmitFlags(e.createThis(), 4), "constructor"), e.createVoidZero());
       break;

      default:
       return e.Debug.failBadSyntaxKind(n);
      }
      var a = e.createVariableStatement(undefined, e.createVariableDeclarationList([ e.createVariableDeclaration(e.createFileLevelUniqueName("_newTarget"), undefined, i) ]));
      if (r) {
       return [ a ].concat(t);
      }
      t.unshift(a);
     }
     return t;
    }
    function ie(t, n) {
     for (var r = 0, i = n.members; r < i.length; r++) {
      var a = i[r];
      switch (a.kind) {
      case 215:
       t.push(ae(a));
       break;

      case 154:
       t.push(oe(Rt(n, a), a, n));
       break;

      case 156:
      case 157:
       var o = e.getAllAccessorDeclarations(n.members, a);
       if (a === o.firstAccessor) {
        t.push(se(Rt(n, a), o, n));
       }
       break;

      case 155:
       break;

      default:
       e.Debug.failBadSyntaxKind(n);
       break;
      }
     }
    }
    function ae(t) {
     return e.setTextRange(e.createEmptyStatement(), t);
    }
    function oe(t, n, r) {
     var i = b(0, 0);
     var a = e.getCommentRange(n);
     var o = e.getSourceMapRange(n);
     var s = e.createMemberAccessForPropertyName(t, e.visitNode(n.name, w, e.isPropertyName), n.name);
     var c = de(n, n, undefined, r);
     e.setEmitFlags(c, 1536);
     e.setSourceMapRange(c, o);
     var u = e.setTextRange(e.createExpressionStatement(e.createAssignment(s, c)), n);
     e.setOriginalNode(u, n);
     e.setCommentRange(u, a);
     e.setEmitFlags(u, 48);
     x(i, 49152, m & 49152 ? 16384 : 0);
     return u;
    }
    function se(t, n, r) {
     var i = e.createExpressionStatement(ce(t, n, r, false));
     e.setEmitFlags(i, 1536);
     e.setSourceMapRange(i, e.getSourceMapRange(n.firstAccessor));
     return i;
    }
    function ce(t, n, r, i) {
     var a = n.firstAccessor, o = n.getAccessor, s = n.setAccessor;
     var c = b(0, 0);
     var u = e.getMutableClone(t);
     e.setEmitFlags(u, 1536 | 32);
     e.setSourceMapRange(u, a.name);
     var l = e.createExpressionForPropertyName(e.visitNode(a.name, w, e.isPropertyName));
     e.setEmitFlags(l, 1536 | 16);
     e.setSourceMapRange(l, a.name);
     var f = [];
     if (o) {
      var d = de(o, undefined, undefined, r);
      e.setSourceMapRange(d, e.getSourceMapRange(o));
      e.setEmitFlags(d, 512);
      var p = e.createPropertyAssignment("get", d);
      e.setCommentRange(p, e.getCommentRange(o));
      f.push(p);
     }
     if (s) {
      var _ = de(s, undefined, undefined, r);
      e.setSourceMapRange(_, e.getSourceMapRange(s));
      e.setEmitFlags(_, 512);
      var g = e.createPropertyAssignment("set", _);
      e.setCommentRange(g, e.getCommentRange(s));
      f.push(g);
     }
     f.push(e.createPropertyAssignment("enumerable", e.createTrue()), e.createPropertyAssignment("configurable", e.createTrue()));
     var h = e.createCall(e.createPropertyAccess(e.createIdentifier("Object"), "defineProperty"), undefined, [ u, l, e.createObjectLiteral(f, true) ]);
     if (i) {
      e.startOnNewLine(h);
     }
     x(c, 49152, m & 49152 ? 16384 : 0);
     return h;
    }
    function ue(n) {
     if (n.transformFlags & 16384) {
      Nt();
     }
     var r = h;
     h = undefined;
     var i = b(16256, 66);
     var a = e.createFunctionExpression(undefined, undefined, undefined, undefined, e.visitParameterList(n.parameters, w, t), undefined, pe(n));
     e.setTextRange(a, n);
     e.setOriginalNode(a, n);
     e.setEmitFlags(a, 8);
     x(i, 0, 0);
     h = r;
     return a;
    }
    function le(n) {
     var r = e.getEmitFlags(n) & 262144 ? b(16278, 69) : b(16286, 65);
     var i = h;
     h = undefined;
     var a = e.visitParameterList(n.parameters, w, t);
     var o = n.transformFlags & 64 ? pe(n) : me(n);
     var s = m & 16384 ? e.getLocalName(n) : n.name;
     x(r, 49152, 0);
     h = i;
     return e.updateFunctionExpression(n, undefined, n.asteriskToken, s, undefined, a, undefined, o);
    }
    function fe(n) {
     var r = h;
     h = undefined;
     var i = b(16286, 65);
     var a = e.visitParameterList(n.parameters, w, t);
     var o = n.transformFlags & 64 ? pe(n) : me(n);
     var s = m & 16384 ? e.getLocalName(n) : n.name;
     x(i, 49152, 0);
     h = r;
     return e.updateFunctionDeclaration(n, undefined, e.visitNodes(n.modifiers, w, e.isModifier), n.asteriskToken, s, undefined, a, undefined, o);
    }
    function de(n, r, i, a) {
     var o = h;
     h = undefined;
     var s = a && e.isClassLike(a) && !e.hasModifier(n, 32) ? b(16286, 65 | 8) : b(16286, 65);
     var c = e.visitParameterList(n.parameters, w, t);
     var u = pe(n);
     if (m & 16384 && !i && (n.kind === 237 || n.kind === 194)) {
      i = e.getGeneratedNameForNode(n);
     }
     x(s, 49152, 0);
     h = o;
     return e.setOriginalNode(e.setTextRange(e.createFunctionExpression(undefined, n.asteriskToken, i, undefined, c, undefined, u), r), n);
    }
    function pe(n) {
     var i = false;
     var a = false;
     var o;
     var s;
     var c = [];
     var u = [];
     var l = n.body;
     var f;
     r();
     if (e.isBlock(l)) {
      f = e.addStandardPrologue(c, l.statements, false);
     }
     te(c, n);
     X(c, n);
     ee(c, n, false);
     if (e.isBlock(l)) {
      f = e.addCustomPrologue(c, l.statements, f, w);
      o = l.statements;
      e.addRange(u, e.visitNodes(l.statements, w, e.isStatement, f));
      if (!i && l.multiLine) {
       i = true;
      }
     } else {
      e.Debug.assert(n.kind === 195);
      o = e.moveRangeEnd(l, -1);
      var p = n.equalsGreaterThanToken;
      if (!e.nodeIsSynthesized(p) && !e.nodeIsSynthesized(l)) {
       if (e.rangeEndIsOnSameLineAsRangeStart(p, l, d)) {
        a = true;
       } else {
        i = true;
       }
      }
      var m = e.visitNode(l, w, e.isExpression);
      var _ = e.createReturn(m);
      e.setTextRange(_, l);
      e.moveSyntheticComments(_, l);
      e.setEmitFlags(_, 384 | 32 | 1024);
      u.push(_);
      s = l;
     }
     var g = t.endLexicalEnvironment();
     e.addStatementsAfterPrologue(u, g);
     re(u, n, false);
     if (e.some(c) || e.some(g)) {
      i = true;
     }
     var h = e.createBlock(e.setTextRange(e.createNodeArray(c.concat(u)), o), i);
     e.setTextRange(h, n.body);
     if (!i && a) {
      e.setEmitFlags(h, 1);
     }
     if (s) {
      e.setTokenSourceMapRange(h, 18, s);
     }
     e.setOriginalNode(h, n.body);
     return h;
    }
    function me(n) {
     var r = e.visitFunctionBody(n.body, C, t);
     return e.updateBlock(r, e.setTextRange(e.createNodeArray(re(r.statements, n, true)), r.statements));
    }
    function _e(n, r) {
     if (r) {
      return e.visitEachChild(n, w, t);
     }
     var i = m & 256 ? b(4032, 512) : b(3904, 128);
     var a = e.visitEachChild(n, w, t);
     x(i, 0, 0);
     return a;
    }
    function ge(n) {
     switch (n.expression.kind) {
     case 193:
      return e.updateExpressionStatement(n, he(n.expression, false));

     case 202:
      return e.updateExpressionStatement(n, ve(n.expression, false));
     }
     return e.visitEachChild(n, w, t);
    }
    function he(n, r) {
     if (!r) {
      switch (n.expression.kind) {
      case 193:
       return e.updateParen(n, he(n.expression, false));

      case 202:
       return e.updateParen(n, ve(n.expression, false));
      }
     }
     return e.visitEachChild(n, w, t);
    }
    function ve(n, r) {
     if (e.isDestructuringAssignment(n)) {
      return e.flattenDestructuringAssignment(n, w, t, 0, r);
     }
     return e.visitEachChild(n, w, t);
    }
    function ye(n) {
     var r = b(0, e.hasModifier(n, 1) ? 32 : 0);
     var i;
     if (h && (n.declarationList.flags & 3) === 0) {
      var a = void 0;
      for (var o = 0, s = n.declarationList.declarations; o < s.length; o++) {
       var c = s[o];
       ze(h, c);
       if (c.initializer) {
        var u = void 0;
        if (e.isBindingPattern(c.name)) {
         u = e.flattenDestructuringAssignment(c, w, t, 0);
        } else {
         u = e.createBinary(c.name, 58, e.visitNode(c.initializer, w, e.isExpression));
         e.setTextRange(u, c);
        }
        a = e.append(a, u);
       }
      }
      if (a) {
       i = e.setTextRange(e.createExpressionStatement(e.inlineExpressions(a)), n);
      } else {
       i = undefined;
      }
     } else {
      i = e.visitEachChild(n, w, t);
     }
     x(r, 0, 0);
     return i;
    }
    function be(n) {
     if (n.transformFlags & 64) {
      if (n.flags & 3) {
       Et();
      }
      var r = e.flatMap(n.declarations, n.flags & 1 ? ke : Se);
      var i = e.createVariableDeclarationList(r);
      e.setOriginalNode(i, n);
      e.setTextRange(i, n);
      e.setCommentRange(i, n);
      if (n.transformFlags & 8388608 && (e.isBindingPattern(n.declarations[0].name) || e.isBindingPattern(e.last(n.declarations).name))) {
       var a = e.firstOrUndefined(r);
       if (a) {
        e.setSourceMapRange(i, e.createRange(a.pos, e.last(r).end));
       }
      }
      return i;
     }
     return e.visitEachChild(n, w, t);
    }
    function xe(e) {
     var t = u.getNodeCheckFlags(e);
     var n = t & 131072;
     var r = t & 262144;
     var i = (m & 64) !== 0 || n && r && (m & 512) !== 0;
     var a = !i && (m & 2048) === 0 && (!u.isDeclarationWithCollidingName(e) || r && !n && (m & (1024 | 2048)) === 0);
     return a;
    }
    function ke(n) {
     var r = n.name;
     if (e.isBindingPattern(r)) {
      return Se(n);
     }
     if (!n.initializer && xe(n)) {
      var i = e.getMutableClone(n);
      i.initializer = e.createVoidZero();
      return i;
     }
     return e.visitEachChild(n, w, t);
    }
    function Se(n) {
     var r = b(32, 0);
     var i;
     if (e.isBindingPattern(n.name)) {
      i = e.flattenDestructuringBinding(n, w, t, 0, undefined, (r & 32) !== 0);
     } else {
      i = e.visitEachChild(n, w, t);
     }
     x(r, 0, 0);
     return i;
    }
    function we(t) {
     h.labels.set(e.idText(t.label), true);
    }
    function Ce(t) {
     h.labels.set(e.idText(t.label), false);
    }
    function De(t) {
     if (h && !h.labels) {
      h.labels = e.createMap();
     }
     var n = e.unwrapInnermostStatementOfLabel(t, h && we);
     return e.isIterationStatement(n, false) ? Te(n, t) : e.restoreEnclosingLabel(e.visitNode(n, w, e.isStatement), t, h && Ce);
    }
    function Te(e, t) {
     switch (e.kind) {
     case 221:
     case 222:
      return Ne(e, t);

     case 223:
      return Ae(e, t);

     case 224:
      return Fe(e, t);

     case 225:
      return Pe(e, t);
     }
    }
    function Ee(e, t, n, r, i) {
     var a = b(e, t);
     var o = je(n, r, i);
     x(a, 0, 0);
     return o;
    }
    function Ne(e, t) {
     return Ee(0, 256, e, t);
    }
    function Ae(e, t) {
     return Ee(3008, 1280, e, t);
    }
    function Fe(e, t) {
     return Ee(1984, 2304, e, t);
    }
    function Pe(e, t) {
     return Ee(1984, 2304, e, t, o.downlevelIteration ? Le : Me);
    }
    function Ie(n, r, i) {
     var a = [];
     var o = n.initializer;
     if (e.isVariableDeclarationList(o)) {
      if (n.initializer.flags & 3) {
       Et();
      }
      var s = e.firstOrUndefined(o.declarations);
      if (s && e.isBindingPattern(s.name)) {
       var c = e.flattenDestructuringBinding(s, w, t, 0, r);
       var u = e.setTextRange(e.createVariableDeclarationList(c), n.initializer);
       e.setOriginalNode(u, n.initializer);
       e.setSourceMapRange(u, e.createRange(c[0].pos, e.last(c).end));
       a.push(e.createVariableStatement(undefined, u));
      } else {
       a.push(e.setTextRange(e.createVariableStatement(undefined, e.setOriginalNode(e.setTextRange(e.createVariableDeclarationList([ e.createVariableDeclaration(s ? s.name : e.createTempVariable(undefined), undefined, r) ]), e.moveRangePos(o, -1)), o)), e.moveRangeEnd(o, -1)));
      }
     } else {
      var l = e.createAssignment(o, r);
      if (e.isDestructuringAssignment(l)) {
       e.aggregateTransformFlags(l);
       a.push(e.createExpressionStatement(ve(l, false)));
      } else {
       l.end = o.end;
       a.push(e.setTextRange(e.createExpressionStatement(e.visitNode(l, w, e.isExpression)), e.moveRangeEnd(o, -1)));
      }
     }
     if (i) {
      return Oe(e.addRange(a, i));
     } else {
      var f = e.visitNode(n.statement, w, e.isStatement, e.liftToBlock);
      if (e.isBlock(f)) {
       return e.updateBlock(f, e.setTextRange(e.createNodeArray(e.concatenate(a, f.statements)), f.statements));
      } else {
       a.push(f);
       return Oe(a);
      }
     }
    }
    function Oe(t) {
     return e.setEmitFlags(e.createBlock(e.createNodeArray(t), true), 48 | 384);
    }
    function Me(t, n, r) {
     var i = e.visitNode(t.expression, w, e.isExpression);
     var a = e.createLoopVariable();
     var o = e.isIdentifier(i) ? e.getGeneratedNameForNode(i) : e.createTempVariable(undefined);
     e.setEmitFlags(i, 48 | e.getEmitFlags(i));
     var s = e.setTextRange(e.createFor(e.setEmitFlags(e.setTextRange(e.createVariableDeclarationList([ e.setTextRange(e.createVariableDeclaration(a, undefined, e.createLiteral(0)), e.moveRangePos(t.expression, -1)), e.setTextRange(e.createVariableDeclaration(o, undefined, i), t.expression) ]), t.expression), 2097152), e.setTextRange(e.createLessThan(a, e.createPropertyAccess(o, "length")), t.expression), e.setTextRange(e.createPostfixIncrement(a), t.expression), Ie(t, e.createElementAccess(o, a), r)), t);
     e.setEmitFlags(s, 256);
     e.setTextRange(s, t);
     return e.restoreEnclosingLabel(s, n, h && Ce);
    }
    function Le(n, r, i) {
     var o = e.visitNode(n.expression, w, e.isExpression);
     var s = e.isIdentifier(o) ? e.getGeneratedNameForNode(o) : e.createTempVariable(undefined);
     var c = e.isIdentifier(o) ? e.getGeneratedNameForNode(s) : e.createTempVariable(undefined);
     var u = e.createUniqueName("e");
     var l = e.getGeneratedNameForNode(u);
     var f = e.createTempVariable(undefined);
     var d = e.createValuesHelper(t, o, n.expression);
     var p = e.createCall(e.createPropertyAccess(s, "next"), undefined, []);
     a(u);
     a(f);
     var m = e.setEmitFlags(e.setTextRange(e.createFor(e.setEmitFlags(e.setTextRange(e.createVariableDeclarationList([ e.setTextRange(e.createVariableDeclaration(s, undefined, d), n.expression), e.createVariableDeclaration(c, undefined, p) ]), n.expression), 2097152), e.createLogicalNot(e.createPropertyAccess(c, "done")), e.createAssignment(c, p), Ie(n, e.createPropertyAccess(c, "value"), i)), n), 256);
     return e.createTry(e.createBlock([ e.restoreEnclosingLabel(m, r, h && Ce) ]), e.createCatchClause(e.createVariableDeclaration(l), e.setEmitFlags(e.createBlock([ e.createExpressionStatement(e.createAssignment(u, e.createObjectLiteral([ e.createPropertyAssignment("error", l) ]))) ]), 1)), e.createBlock([ e.createTry(e.createBlock([ e.setEmitFlags(e.createIf(e.createLogicalAnd(e.createLogicalAnd(c, e.createLogicalNot(e.createPropertyAccess(c, "done"))), e.createAssignment(f, e.createPropertyAccess(s, "return"))), e.createExpressionStatement(e.createFunctionCall(f, s, []))), 1) ]), undefined, e.setEmitFlags(e.createBlock([ e.setEmitFlags(e.createIf(u, e.createThrow(e.createPropertyAccess(u, "error"))), 1) ]), 1)) ]));
    }
    function Re(n) {
     var r = n.properties;
     var i = r.length;
     var o = i;
     var s = i;
     for (var c = 0; c < i; c++) {
      var u = r[c];
      if (u.transformFlags & 16777216 && m & 4 && c < s) {
       s = c;
      }
      if (u.name.kind === 147) {
       o = c;
       break;
      }
     }
     if (o !== i) {
      if (s < o) {
       o = s;
      }
      var l = e.createTempVariable(a);
      var f = [];
      var d = e.createAssignment(l, e.setEmitFlags(e.createObjectLiteral(e.visitNodes(r, w, e.isObjectLiteralElementLike, 0, o), n.multiLine), 65536));
      if (n.multiLine) {
       e.startOnNewLine(d);
      }
      f.push(d);
      He(f, n, l, o);
      f.push(n.multiLine ? e.startOnNewLine(e.getMutableClone(l)) : l);
      return e.inlineExpressions(f);
     }
     return e.visitEachChild(n, w, t);
    }
    function Be(e) {
     return (u.getNodeCheckFlags(e) & 65536) !== 0;
    }
    function ze(t, n) {
     if (!t.hoistedLocalVariables) {
      t.hoistedLocalVariables = [];
     }
     r(n.name);
     function r(n) {
      if (n.kind === 71) {
       t.hoistedLocalVariables.push(n);
      } else {
       for (var i = 0, a = n.elements; i < a.length; i++) {
        var o = a[i];
        if (!e.isOmittedExpression(o)) {
         r(o.name);
        }
       }
      }
     }
    }
    function je(r, a, o) {
     if (!Be(r)) {
      var s = void 0;
      if (h) {
       s = h.allowedNonLabeledJumps;
       h.allowedNonLabeledJumps = 2 | 4;
      }
      var c = o ? o(r, a, undefined) : e.restoreEnclosingLabel(e.visitEachChild(r, w, t), a, h && Ce);
      if (h) {
       h.allowedNonLabeledJumps = s;
      }
      return c;
     }
     var u = e.createUniqueName("_loop");
     var l;
     switch (r.kind) {
     case 223:
     case 224:
     case 225:
      var f = r.initializer;
      if (f && f.kind === 236) {
       l = f;
      }
      break;
     }
     var d = [];
     var p = [];
     if (l && e.getCombinedNodeFlags(l) & 3) {
      for (var _ = 0, g = l.declarations; _ < g.length; _++) {
       var v = g[_];
       We(v, d, p);
      }
     }
     var y = h;
     h = {
      loopOutParameters: p
     };
     if (y) {
      if (y.argumentsName) {
       h.argumentsName = y.argumentsName;
      }
      if (y.thisName) {
       h.thisName = y.thisName;
      }
      if (y.hoistedLocalVariables) {
       h.hoistedLocalVariables = y.hoistedLocalVariables;
      }
     }
     n();
     var b = e.visitNode(r.statement, w, e.isStatement, e.liftToBlock);
     var x = i();
     var k = h;
     h = y;
     if (p.length || x) {
      var S = e.isBlock(b) ? b.statements.slice() : [ b ];
      if (p.length) {
       Ue(p, 1, S);
      }
      e.addStatementsAfterPrologue(S, x);
      b = e.createBlock(S, true);
     }
     if (e.isBlock(b)) {
      b.multiLine = true;
     } else {
      b = e.createBlock([ b ], true);
     }
     var C = (r.statement.transformFlags & 16777216) !== 0;
     var D = C && (m & 4) !== 0;
     var T = 0;
     if (k.containsLexicalThis) {
      T |= 8;
     }
     if (D) {
      T |= 262144;
     }
     var E = e.createVariableStatement(undefined, e.setEmitFlags(e.createVariableDeclarationList([ e.createVariableDeclaration(u, undefined, e.setEmitFlags(e.createFunctionExpression(undefined, C ? e.createToken(39) : undefined, undefined, undefined, d, undefined, b), T)) ]), 2097152));
     var N = [ E ];
     var A;
     if (k.argumentsName) {
      if (y) {
       y.argumentsName = k.argumentsName;
      } else {
       (A || (A = [])).push(e.createVariableDeclaration(k.argumentsName, undefined, e.createIdentifier("arguments")));
      }
     }
     if (k.thisName) {
      if (y) {
       y.thisName = k.thisName;
      } else {
       (A || (A = [])).push(e.createVariableDeclaration(k.thisName, undefined, e.createIdentifier("this")));
      }
     }
     if (k.hoistedLocalVariables) {
      if (y) {
       y.hoistedLocalVariables = k.hoistedLocalVariables;
      } else {
       if (!A) {
        A = [];
       }
       for (var F = 0, P = k.hoistedLocalVariables; F < P.length; F++) {
        var I = P[F];
        A.push(e.createVariableDeclaration(I));
       }
      }
     }
     if (p.length) {
      if (!A) {
       A = [];
      }
      for (var O = 0, M = p; O < M.length; O++) {
       var L = M[O];
       A.push(e.createVariableDeclaration(L.outParamName));
      }
     }
     if (A) {
      N.push(e.createVariableStatement(undefined, e.createVariableDeclarationList(A)));
     }
     var R = Je(u, d, k, C);
     var B;
     if (o) {
      B = o(r, a, R);
     } else {
      var z = e.getMutableClone(r);
      z.statement = undefined;
      z = e.visitEachChild(z, w, t);
      z.statement = e.createBlock(R, true);
      z.transformFlags = 0;
      e.aggregateTransformFlags(z);
      B = e.restoreEnclosingLabel(z, a, h && Ce);
     }
     N.push(B);
     return N;
    }
    function qe(t, n) {
     var r = n === 0 ? t.outParamName : t.originalName;
     var i = n === 0 ? t.originalName : t.outParamName;
     return e.createBinary(i, 58, r);
    }
    function Ue(t, n, r) {
     for (var i = 0, a = t; i < a.length; i++) {
      var o = a[i];
      r.push(e.createExpressionStatement(qe(o, n)));
     }
    }
    function Je(t, n, r, i) {
     var a = h;
     var o = [];
     var s = !(r.nonLocalJumps & ~4) && !r.labeledNonLocalBreaks && !r.labeledNonLocalContinues;
     var c = e.createCall(t, undefined, e.map(n, function(e) {
      return e.name;
     }));
     var u = i ? e.createYield(e.createToken(39), e.setEmitFlags(c, 8388608)) : c;
     if (s) {
      o.push(e.createExpressionStatement(u));
      Ue(r.loopOutParameters, 0, o);
     } else {
      var l = e.createUniqueName("state");
      var f = e.createVariableStatement(undefined, e.createVariableDeclarationList([ e.createVariableDeclaration(l, undefined, u) ]));
      o.push(f);
      Ue(r.loopOutParameters, 0, o);
      if (r.nonLocalJumps & 8) {
       var d = void 0;
       if (a) {
        a.nonLocalJumps |= 8;
        d = e.createReturn(l);
       } else {
        d = e.createReturn(e.createPropertyAccess(l, "value"));
       }
       o.push(e.createIf(e.createBinary(e.createTypeOf(l), 34, e.createLiteral("object")), d));
      }
      if (r.nonLocalJumps & 2) {
       o.push(e.createIf(e.createBinary(l, 34, e.createLiteral("break")), e.createBreak()));
      }
      if (r.labeledNonLocalBreaks || r.labeledNonLocalContinues) {
       var p = [];
       Ve(r.labeledNonLocalBreaks, true, l, a, p);
       Ve(r.labeledNonLocalContinues, false, l, a, p);
       o.push(e.createSwitch(l, e.createCaseBlock(p)));
      }
     }
     return o;
    }
    function Ke(t, n, r, i) {
     if (n) {
      if (!t.labeledNonLocalBreaks) {
       t.labeledNonLocalBreaks = e.createMap();
      }
      t.labeledNonLocalBreaks.set(r, i);
     } else {
      if (!t.labeledNonLocalContinues) {
       t.labeledNonLocalContinues = e.createMap();
      }
      t.labeledNonLocalContinues.set(r, i);
     }
    }
    function Ve(t, n, r, i, a) {
     if (!t) {
      return;
     }
     t.forEach(function(t, o) {
      var s = [];
      if (!i || i.labels && i.labels.get(o)) {
       var c = e.createIdentifier(o);
       s.push(n ? e.createBreak(c) : e.createContinue(c));
      } else {
       Ke(i, n, o, t);
       s.push(e.createReturn(r));
      }
      a.push(e.createCaseClause(e.createLiteral(t), s));
     });
    }
    function We(t, n, r) {
     var i = t.name;
     if (e.isBindingPattern(i)) {
      for (var a = 0, o = i.elements; a < o.length; a++) {
       var s = o[a];
       if (!e.isOmittedExpression(s)) {
        We(s, n, r);
       }
      }
     } else {
      n.push(e.createParameter(undefined, undefined, undefined, i));
      if (u.getNodeCheckFlags(t) & 2097152) {
       var c = e.createUniqueName("out_" + e.idText(i));
       r.push({
        originalName: i,
        outParamName: c
       });
      }
     }
    }
    function He(t, n, r, i) {
     var a = n.properties;
     var o = a.length;
     for (var s = i; s < o; s++) {
      var c = a[s];
      switch (c.kind) {
      case 156:
      case 157:
       var u = e.getAllAccessorDeclarations(n.properties, c);
       if (c === u.firstAccessor) {
        t.push(ce(r, u, n, !!n.multiLine));
       }
       break;

      case 154:
       t.push(Xe(c, r, n, n.multiLine));
       break;

      case 273:
       t.push(Ge(c, r, n.multiLine));
       break;

      case 274:
       t.push($e(c, r, n.multiLine));
       break;

      default:
       e.Debug.failBadSyntaxKind(n);
       break;
      }
     }
    }
    function Ge(t, n, r) {
     var i = e.createAssignment(e.createMemberAccessForPropertyName(n, e.visitNode(t.name, w, e.isPropertyName)), e.visitNode(t.initializer, w, e.isExpression));
     e.setTextRange(i, t);
     if (r) {
      e.startOnNewLine(i);
     }
     return i;
    }
    function $e(t, n, r) {
     var i = e.createAssignment(e.createMemberAccessForPropertyName(n, e.visitNode(t.name, w, e.isPropertyName)), e.getSynthesizedClone(t.name));
     e.setTextRange(i, t);
     if (r) {
      e.startOnNewLine(i);
     }
     return i;
    }
    function Xe(t, n, r, i) {
     var a = b(0, 0);
     var o = e.createAssignment(e.createMemberAccessForPropertyName(n, e.visitNode(t.name, w, e.isPropertyName)), de(t, t, undefined, r));
     e.setTextRange(o, t);
     if (i) {
      e.startOnNewLine(o);
     }
     x(a, 49152, m & 49152 ? 16384 : 0);
     return o;
    }
    function Qe(n) {
     var r = b(4032, 0);
     var i;
     e.Debug.assert(!!n.variableDeclaration, "Catch clause variable should always be present when downleveling ES2015.");
     if (e.isBindingPattern(n.variableDeclaration.name)) {
      var a = e.createTempVariable(undefined);
      var o = e.createVariableDeclaration(a);
      e.setTextRange(o, n.variableDeclaration);
      var s = e.flattenDestructuringBinding(n.variableDeclaration, w, t, 0, a);
      var c = e.createVariableDeclarationList(s);
      e.setTextRange(c, n.variableDeclaration);
      var u = e.createVariableStatement(undefined, c);
      i = e.updateCatchClause(n, o, Ye(n.block, u));
     } else {
      i = e.visitEachChild(n, w, t);
     }
     x(r, 0, 0);
     return i;
    }
    function Ye(t, n) {
     var r = e.visitNodes(t.statements, w, e.isStatement);
     return e.updateBlock(t, [ n ].concat(r));
    }
    function Ze(t) {
     e.Debug.assert(!e.isComputedPropertyName(t.name));
     var n = de(t, e.moveRangePos(t, -1), undefined, undefined);
     e.setEmitFlags(n, 512 | e.getEmitFlags(n));
     return e.setTextRange(e.createPropertyAssignment(t.name, n), t);
    }
    function et(n) {
     e.Debug.assert(!e.isComputedPropertyName(n.name));
     var r = h;
     h = undefined;
     var i = b(16286, 65);
     var a;
     var o = e.visitParameterList(n.parameters, w, t);
     var s = n.transformFlags & (32768 | 128) ? pe(n) : me(n);
     if (n.kind === 156) {
      a = e.updateGetAccessor(n, n.decorators, n.modifiers, n.name, o, n.type, s);
     } else {
      a = e.updateSetAccessor(n, n.decorators, n.modifiers, n.name, o, s);
     }
     x(i, 49152, 0);
     h = r;
     return a;
    }
    function tt(t) {
     return e.setTextRange(e.createPropertyAssignment(t.name, e.getSynthesizedClone(t.name)), t);
    }
    function nt(n) {
     var r = b(0, 8192);
     var i = e.visitEachChild(n, w, t);
     x(r, 49152, m & 49152 ? 32768 : 0);
     return i;
    }
    function rt(n) {
     return e.visitEachChild(n, w, t);
    }
    function it(n) {
     if (n.transformFlags & 64) {
      return lt(n.elements, true, !!n.multiLine, !!n.elements.hasTrailingComma);
     }
     return e.visitEachChild(n, w, t);
    }
    function at(t) {
     if (e.getEmitFlags(t) & 33554432) {
      return ot(t);
     }
     if (t.transformFlags & 64) {
      return ct(t, true);
     }
     return e.updateCall(t, e.visitNode(t.expression, D, e.isExpression), undefined, e.visitNodes(t.arguments, w, e.isExpression));
    }
    function ot(t) {
     var n = e.cast(e.cast(e.skipOuterExpressions(t.expression), e.isArrowFunction).body, e.isBlock);
     var r = function(t) {
      return e.isVariableStatement(t) && !!e.first(t.declarationList.declarations).initializer;
     };
     var i = e.visitNodes(n.statements, w, e.isStatement);
     var a = e.filter(i, r);
     var o = e.filter(i, function(e) {
      return !r(e);
     });
     var s = e.cast(e.first(a), e.isVariableStatement);
     var c = s.declarationList.declarations[0];
     var u = e.skipOuterExpressions(c.initializer);
     var l = e.tryCast(u, e.isAssignmentExpression);
     var f = e.cast(l ? e.skipOuterExpressions(l.right) : u, e.isCallExpression);
     var d = e.cast(e.skipOuterExpressions(f.expression), e.isFunctionExpression);
     var p = d.body.statements;
     var m = 0;
     var _ = -1;
     var g = [];
     if (l) {
      var h = e.tryCast(p[m], e.isExpressionStatement);
      if (h) {
       g.push(h);
       m++;
      }
      g.push(p[m]);
      m++;
      g.push(e.createExpressionStatement(e.createAssignment(l.left, e.cast(c.name, e.isIdentifier))));
     }
     while (!e.isReturnStatement(e.elementAt(p, _))) {
      _--;
     }
     e.addRange(g, p, m, _);
     if (_ < -1) {
      e.addRange(g, p, _ + 1);
     }
     e.addRange(g, o);
     e.addRange(g, a, 1);
     return e.recreateOuterExpressions(t.expression, e.recreateOuterExpressions(c.initializer, e.recreateOuterExpressions(l && l.right, e.updateCall(f, e.recreateOuterExpressions(f.expression, e.updateFunctionExpression(d, undefined, undefined, undefined, undefined, d.parameters, undefined, e.updateBlock(d.body, g))), undefined, f.arguments))));
    }
    function st(e) {
     return ct(e, false);
    }
    function ct(n, r) {
     if (n.transformFlags & 524288 || n.expression.kind === 97 || e.isSuperProperty(e.skipOuterExpressions(n.expression))) {
      var i = e.createCallBinding(n.expression, a), o = i.target, s = i.thisArg;
      if (n.expression.kind === 97) {
       e.setEmitFlags(s, 4);
      }
      var c = void 0;
      if (n.transformFlags & 524288) {
       c = e.createFunctionApply(e.visitNode(o, D, e.isExpression), e.visitNode(s, w, e.isExpression), lt(n.arguments, false, false, false));
      } else {
       c = e.createFunctionCall(e.visitNode(o, D, e.isExpression), e.visitNode(s, w, e.isExpression), e.visitNodes(n.arguments, w, e.isExpression), n);
      }
      if (n.expression.kind === 97) {
       var u = e.createThis();
       e.setEmitFlags(u, 4);
       var l = e.createLogicalOr(c, u);
       c = r ? e.createAssignment(e.createFileLevelUniqueName("_this"), l) : l;
      }
      return e.setOriginalNode(c, n);
     }
     return e.visitEachChild(n, w, t);
    }
    function ut(n) {
     if (n.transformFlags & 524288) {
      var r = e.createCallBinding(e.createPropertyAccess(n.expression, "bind"), a), i = r.target, o = r.thisArg;
      return e.createNew(e.createFunctionApply(e.visitNode(i, w, e.isExpression), o, lt(e.createNodeArray([ e.createVoidZero() ].concat(n.arguments)), false, false, false)), undefined, []);
     }
     return e.visitEachChild(n, w, t);
    }
    function lt(n, r, i, a) {
     var s = n.length;
     var c = e.flatten(e.spanMap(n, ft, function(e, t, n, r) {
      return t(e, i, a && r === s);
     }));
     if (o.downlevelIteration) {
      if (c.length === 1) {
       var u = c[0];
       if (e.isCallExpression(u) && e.isIdentifier(u.expression) && e.getEmitFlags(u.expression) & 4096 && u.expression.escapedText === "___spread") {
        return c[0];
       }
      }
      return e.createSpreadHelper(t, c);
     } else {
      if (c.length === 1) {
       var l = n[0];
       return r && e.isSpreadElement(l) && l.expression.kind !== 185 ? e.createArraySlice(c[0]) : c[0];
      }
      return e.createArrayConcat(c.shift(), c);
     }
    }
    function ft(t) {
     return e.isSpreadElement(t) ? dt : pt;
    }
    function dt(t) {
     return e.map(t, _t);
    }
    function pt(t, n, r) {
     return e.createArrayLiteral(e.visitNodes(e.createNodeArray(t, r), w, e.isExpression), n);
    }
    function mt(t) {
     return e.visitNode(t.expression, w, e.isExpression);
    }
    function _t(t) {
     return e.visitNode(t.expression, w, e.isExpression);
    }
    function gt(t) {
     return e.setTextRange(e.createLiteral(t.text), t);
    }
    function ht(t) {
     if (t.hasExtendedUnicodeEscape) {
      return e.setTextRange(e.createLiteral(t.text), t);
     }
     return t;
    }
    function vt(t) {
     if (t.numericLiteralFlags & 384) {
      return e.setTextRange(e.createNumericLiteral(t.text), t);
     }
     return t;
    }
    function yt(n) {
     var r = e.visitNode(n.tag, w, e.isExpression);
     var i = [ undefined ];
     var a = [];
     var o = [];
     var s = n.template;
     if (e.isNoSubstitutionTemplateLiteral(s)) {
      a.push(e.createLiteral(s.text));
      o.push(bt(s));
     } else {
      a.push(e.createLiteral(s.head.text));
      o.push(bt(s.head));
      for (var u = 0, l = s.templateSpans; u < l.length; u++) {
       var f = l[u];
       a.push(e.createLiteral(f.literal.text));
       o.push(bt(f.literal));
       i.push(e.visitNode(f.expression, w, e.isExpression));
      }
     }
     var p = c(t, e.createArrayLiteral(a), e.createArrayLiteral(o));
     if (e.isExternalModule(d)) {
      var m = e.createUniqueName("templateObject");
      g(m);
      i[0] = e.createLogicalOr(m, e.createAssignment(m, p));
     } else {
      i[0] = p;
     }
     return e.createCall(r, undefined, i);
    }
    function bt(t) {
     var n = e.getSourceTextOfNodeFromSourceFile(d, t);
     var r = t.kind === 13 || t.kind === 16;
     n = n.substring(1, n.length - (r ? 1 : 2));
     n = n.replace(/\r\n?/g, "\n");
     return e.setTextRange(e.createLiteral(n), t);
    }
    function xt(t) {
     var n = [];
     St(n, t);
     wt(n, t);
     var r = e.reduceLeft(n, e.createAdd);
     if (e.nodeIsSynthesized(r)) {
      r.pos = t.pos;
      r.end = t.end;
     }
     return r;
    }
    function kt(t) {
     e.Debug.assert(t.templateSpans.length !== 0);
     return t.head.text.length !== 0 || t.templateSpans[0].literal.text.length === 0;
    }
    function St(t, n) {
     if (!kt(n)) {
      return;
     }
     t.push(e.createLiteral(n.head.text));
    }
    function wt(t, n) {
     for (var r = 0, i = n.templateSpans; r < i.length; r++) {
      var a = i[r];
      t.push(e.visitNode(a.expression, w, e.isExpression));
      if (a.literal.text.length !== 0) {
       t.push(e.createLiteral(a.literal.text));
      }
     }
    }
    function Ct(t) {
     return m & 8 && !t ? e.createPropertyAccess(e.createFileLevelUniqueName("_super"), "prototype") : e.createFileLevelUniqueName("_super");
    }
    function Dt(t) {
     if (t.keywordToken === 94 && t.name.escapedText === "target") {
      if (m & 8192) {
       m |= 32768;
      } else {
       m |= 16384;
      }
      return e.createFileLevelUniqueName("_newTarget");
     }
     return t;
    }
    function Tt(t, n, r) {
     if (v & 1 && e.isFunctionLike(n)) {
      var i = b(16286, e.getEmitFlags(n) & 8 ? 65 | 16 : 65);
      f(t, n, r);
      x(i, 0, 0);
      return;
     }
     f(t, n, r);
    }
    function Et() {
     if ((v & 2) === 0) {
      v |= 2;
      t.enableSubstitution(71);
     }
    }
    function Nt() {
     if ((v & 1) === 0) {
      v |= 1;
      t.enableSubstitution(99);
      t.enableEmitNotification(155);
      t.enableEmitNotification(154);
      t.enableEmitNotification(156);
      t.enableEmitNotification(157);
      t.enableEmitNotification(195);
      t.enableEmitNotification(194);
      t.enableEmitNotification(237);
     }
    }
    function At(t, n) {
     n = l(t, n);
     if (t === 1) {
      return It(n);
     }
     if (e.isIdentifier(n)) {
      return Ft(n);
     }
     return n;
    }
    function Ft(t) {
     if (v & 2 && !e.isInternalName(t)) {
      var n = e.getParseTreeNode(t, e.isIdentifier);
      if (n && Pt(n)) {
       return e.setTextRange(e.getGeneratedNameForNode(n), t);
      }
     }
     return t;
    }
    function Pt(e) {
     switch (e.parent.kind) {
     case 184:
     case 238:
     case 241:
     case 235:
      return e.parent.name === e && u.isDeclarationWithCollidingName(e.parent);
     }
     return false;
    }
    function It(e) {
     switch (e.kind) {
     case 71:
      return Ot(e);

     case 99:
      return Lt(e);
     }
     return e;
    }
    function Ot(t) {
     if (v & 2 && !e.isInternalName(t)) {
      var n = u.getReferencedDeclarationWithCollidingName(t);
      if (n && !(e.isClassLike(n) && Mt(n, t))) {
       return e.setTextRange(e.getGeneratedNameForNode(e.getNameOfDeclaration(n)), t);
      }
     }
     return t;
    }
    function Mt(t, n) {
     var r = e.getParseTreeNode(n);
     if (!r || r === t || r.end <= t.pos || r.pos >= t.end) {
      return false;
     }
     var i = e.getEnclosingBlockScopeContainer(t);
     while (r) {
      if (r === i || r === t) {
       return false;
      }
      if (e.isClassElement(r) && r.parent === t) {
       return true;
      }
      r = r.parent;
     }
     return false;
    }
    function Lt(t) {
     if (v & 1 && m & 16) {
      return e.setTextRange(e.createFileLevelUniqueName("_this"), t);
     }
     return t;
    }
    function Rt(t, n) {
     return e.hasModifier(n, 32) ? e.getInternalName(t) : e.createPropertyAccess(e.getInternalName(t), "prototype");
    }
    function Bt(t, n) {
     if (!t || !n) {
      return false;
     }
     if (e.some(t.parameters)) {
      return false;
     }
     var r = e.firstOrUndefined(t.body.statements);
     if (!r || !e.nodeIsSynthesized(r) || r.kind !== 219) {
      return false;
     }
     var i = r.expression;
     if (!e.nodeIsSynthesized(i) || i.kind !== 189) {
      return false;
     }
     var a = i.expression;
     if (!e.nodeIsSynthesized(a) || a.kind !== 97) {
      return false;
     }
     var o = e.singleOrUndefined(i.arguments);
     if (!o || !e.nodeIsSynthesized(o) || o.kind !== 206) {
      return false;
     }
     var s = o.expression;
     return e.isIdentifier(s) && s.escapedText === "arguments";
    }
   }
   e.transformES2015 = o;
   function s(t, n) {
    t.requestEmitHelper(u);
    return e.createCall(e.getHelperName("__extends"), undefined, [ n, e.createFileLevelUniqueName("_super") ]);
   }
   function c(t, n, r) {
    t.requestEmitHelper(l);
    return e.createCall(e.getHelperName("__makeTemplateObject"), undefined, [ n, r ]);
   }
   var u = {
    name: "typescript:extends",
    scoped: false,
    priority: 0,
    text: "\n            var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d, b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                    return extendStatics(d, b);\n                }\n\n                return function (d, b) {\n                    extendStatics(d, b);\n                    function __() { this.constructor = d; }\n                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n                };\n            })();"
   };
   var l = {
    name: "typescript:makeTemplateObject",
    scoped: false,
    priority: 0,
    text: '\n            var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n                if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }\n                return cooked;\n            };'
   };
  })(s || (s = {}));
  var s;
  (function(e) {
   function t(t) {
    var n = t.getCompilerOptions();
    var r;
    var i;
    if (n.jsx === 1 || n.jsx === 3) {
     r = t.onEmitNode;
     t.onEmitNode = s;
     t.enableEmitNotification(260);
     t.enableEmitNotification(261);
     t.enableEmitNotification(259);
     i = [];
    }
    var a = t.onSubstituteNode;
    t.onSubstituteNode = c;
    t.enableSubstitution(187);
    t.enableSubstitution(273);
    return e.chainBundle(o);
    function o(e) {
     return e;
    }
    function s(t, n, a) {
     switch (n.kind) {
     case 260:
     case 261:
     case 259:
      var o = n.tagName;
      i[e.getOriginalNodeId(o)] = true;
      break;
     }
     r(t, n, a);
    }
    function c(t, n) {
     if (n.id && i && i[n.id]) {
      return a(t, n);
     }
     n = a(t, n);
     if (e.isPropertyAccessExpression(n)) {
      return u(n);
     } else if (e.isPropertyAssignment(n)) {
      return l(n);
     }
     return n;
    }
    function u(t) {
     var n = f(t.name);
     if (n) {
      return e.setTextRange(e.createElementAccess(t.expression, n), t);
     }
     return t;
    }
    function l(t) {
     var n = e.isIdentifier(t.name) && f(t.name);
     if (n) {
      return e.updatePropertyAssignment(t, n, t.initializer);
     }
     return t;
    }
    function f(t) {
     var n = t.originalKeywordKind || (e.nodeIsSynthesized(t) ? e.stringToToken(e.idText(t)) : undefined);
     if (n !== undefined && n >= 72 && n <= 107) {
      return e.setTextRange(e.createLiteral(t), t);
     }
     return undefined;
    }
   }
   e.transformES5 = t;
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(e) {
    e[e["Nop"] = 0] = "Nop";
    e[e["Statement"] = 1] = "Statement";
    e[e["Assign"] = 2] = "Assign";
    e[e["Break"] = 3] = "Break";
    e[e["BreakWhenTrue"] = 4] = "BreakWhenTrue";
    e[e["BreakWhenFalse"] = 5] = "BreakWhenFalse";
    e[e["Yield"] = 6] = "Yield";
    e[e["YieldStar"] = 7] = "YieldStar";
    e[e["Return"] = 8] = "Return";
    e[e["Throw"] = 9] = "Throw";
    e[e["Endfinally"] = 10] = "Endfinally";
   })(t || (t = {}));
   var n;
   (function(e) {
    e[e["Open"] = 0] = "Open";
    e[e["Close"] = 1] = "Close";
   })(n || (n = {}));
   var r;
   (function(e) {
    e[e["Exception"] = 0] = "Exception";
    e[e["With"] = 1] = "With";
    e[e["Switch"] = 2] = "Switch";
    e[e["Loop"] = 3] = "Loop";
    e[e["Labeled"] = 4] = "Labeled";
   })(r || (r = {}));
   var i;
   (function(e) {
    e[e["Try"] = 0] = "Try";
    e[e["Catch"] = 1] = "Catch";
    e[e["Finally"] = 2] = "Finally";
    e[e["Done"] = 3] = "Done";
   })(i || (i = {}));
   var a;
   (function(e) {
    e[e["Next"] = 0] = "Next";
    e[e["Throw"] = 1] = "Throw";
    e[e["Return"] = 2] = "Return";
    e[e["Break"] = 3] = "Break";
    e[e["Yield"] = 4] = "Yield";
    e[e["YieldStar"] = 5] = "YieldStar";
    e[e["Catch"] = 6] = "Catch";
    e[e["Endfinally"] = 7] = "Endfinally";
   })(a || (a = {}));
   function o(e) {
    switch (e) {
    case 2:
     return "return";

    case 3:
     return "break";

    case 4:
     return "yield";

    case 5:
     return "yield*";

    case 7:
     return "endfinally";

    default:
     return undefined;
    }
   }
   function s(t) {
    var n = t.resumeLexicalEnvironment, r = t.endLexicalEnvironment, i = t.hoistFunctionDeclaration, a = t.hoistVariableDeclaration;
    var s = t.getCompilerOptions();
    var u = e.getEmitScriptTarget(s);
    var l = t.getEmitResolver();
    var f = t.onSubstituteNode;
    t.onSubstituteNode = qe;
    var d;
    var p;
    var m;
    var _;
    var g;
    var h;
    var v;
    var y;
    var b;
    var x;
    var k = 1;
    var S;
    var w;
    var C;
    var D;
    var T = 0;
    var E = 0;
    var N;
    var A;
    var F;
    var P;
    var I;
    var O;
    var M;
    var L;
    return e.chainBundle(R);
    function R(n) {
     if (n.isDeclarationFile || (n.transformFlags & 512) === 0) {
      return n;
     }
     var r = e.visitEachChild(n, B, t);
     e.addEmitHelpers(r, t.readEmitHelpers());
     return r;
    }
    function B(n) {
     var r = n.transformFlags;
     if (_) {
      return z(n);
     } else if (m) {
      return j(n);
     } else if (r & 256) {
      return U(n);
     } else if (r & 512) {
      return e.visitEachChild(n, B, t);
     } else {
      return n;
     }
    }
    function z(e) {
     switch (e.kind) {
     case 221:
      return ye(e);

     case 222:
      return xe(e);

     case 230:
      return Oe(e);

     case 231:
      return Le(e);

     default:
      return j(e);
     }
    }
    function j(n) {
     switch (n.kind) {
     case 237:
      return J(n);

     case 194:
      return K(n);

     case 156:
     case 157:
      return V(n);

     case 217:
      return H(n);

     case 223:
      return Se(n);

     case 224:
      return Ce(n);

     case 227:
      return Ne(n);

     case 226:
      return Te(n);

     case 228:
      return Fe(n);

     default:
      if (n.transformFlags & 16777216) {
       return q(n);
      } else if (n.transformFlags & (512 | 33554432)) {
       return e.visitEachChild(n, B, t);
      } else {
       return n;
      }
     }
    }
    function q(n) {
     switch (n.kind) {
     case 202:
      return G(n);

     case 203:
      return te(n);

     case 205:
      return ne(n);

     case 185:
      return re(n);

     case 186:
      return ae(n);

     case 188:
      return oe(n);

     case 189:
      return se(n);

     case 190:
      return ce(n);

     default:
      return e.visitEachChild(n, B, t);
     }
    }
    function U(t) {
     switch (t.kind) {
     case 237:
      return J(t);

     case 194:
      return K(t);

     default:
      return e.Debug.failBadSyntaxKind(t);
     }
    }
    function J(n) {
     if (n.asteriskToken) {
      n = e.setOriginalNode(e.setTextRange(e.createFunctionDeclaration(undefined, n.modifiers, undefined, n.name, undefined, e.visitParameterList(n.parameters, B, t), undefined, W(n.body)), n), n);
     } else {
      var r = m;
      var a = _;
      m = false;
      _ = false;
      n = e.visitEachChild(n, B, t);
      m = r;
      _ = a;
     }
     if (m) {
      i(n);
      return undefined;
     } else {
      return n;
     }
    }
    function K(n) {
     if (n.asteriskToken) {
      n = e.setOriginalNode(e.setTextRange(e.createFunctionExpression(undefined, undefined, n.name, undefined, e.visitParameterList(n.parameters, B, t), undefined, W(n.body)), n), n);
     } else {
      var r = m;
      var i = _;
      m = false;
      _ = false;
      n = e.visitEachChild(n, B, t);
      m = r;
      _ = i;
     }
     return n;
    }
    function V(n) {
     var r = m;
     var i = _;
     m = false;
     _ = false;
     n = e.visitEachChild(n, B, t);
     m = r;
     _ = i;
     return n;
    }
    function W(t) {
     var i = [];
     var a = m;
     var o = _;
     var s = g;
     var c = h;
     var u = v;
     var l = y;
     var f = b;
     var d = x;
     var p = k;
     var T = S;
     var E = w;
     var N = C;
     var A = D;
     m = true;
     _ = false;
     g = undefined;
     h = undefined;
     v = undefined;
     y = undefined;
     b = undefined;
     x = undefined;
     k = 1;
     S = undefined;
     w = undefined;
     C = undefined;
     D = e.createTempVariable(undefined);
     n();
     var F = e.addPrologue(i, t.statements, false, B);
     ue(t.statements, F);
     var P = Lt();
     e.addStatementsAfterPrologue(i, r());
     i.push(e.createReturn(P));
     m = a;
     _ = o;
     g = s;
     h = c;
     v = u;
     y = l;
     b = f;
     x = d;
     k = p;
     S = T;
     w = E;
     C = N;
     D = A;
     return e.setTextRange(e.createBlock(i, t.multiLine), t);
    }
    function H(t) {
     if (t.transformFlags & 16777216) {
      _e(t.declarationList);
      return undefined;
     } else {
      if (e.getEmitFlags(t) & 1048576) {
       return t;
      }
      for (var n = 0, r = t.declarationList.declarations; n < r.length; n++) {
       var i = r[n];
       a(i.name);
      }
      var o = e.getInitializedVariables(t.declarationList);
      if (o.length === 0) {
       return undefined;
      }
      return e.setSourceMapRange(e.createExpressionStatement(e.inlineExpressions(e.map(o, ge))), t);
     }
    }
    function G(t) {
     var n = e.getExpressionAssociativity(t);
     switch (n) {
     case 0:
      return Y(t);

     case 1:
      return Q(t);

     default:
      return e.Debug.assertNever(n);
     }
    }
    function $(e) {
     return e >= 59 && e <= 70;
    }
    function X(e) {
     switch (e) {
     case 59:
      return 37;

     case 60:
      return 38;

     case 61:
      return 39;

     case 62:
      return 40;

     case 63:
      return 41;

     case 64:
      return 42;

     case 65:
      return 45;

     case 66:
      return 46;

     case 67:
      return 47;

     case 68:
      return 48;

     case 69:
      return 49;

     case 70:
      return 50;
     }
    }
    function Q(n) {
     var r = n.left, i = n.right;
     if (ze(i)) {
      var a = void 0;
      switch (r.kind) {
      case 187:
       a = e.updatePropertyAccess(r, Ke(e.visitNode(r.expression, B, e.isLeftHandSideExpression)), r.name);
       break;

      case 188:
       a = e.updateElementAccess(r, Ke(e.visitNode(r.expression, B, e.isLeftHandSideExpression)), Ke(e.visitNode(r.argumentExpression, B, e.isExpression)));
       break;

      default:
       a = e.visitNode(r, B, e.isExpression);
       break;
      }
      var o = n.operatorToken.kind;
      if ($(o)) {
       return e.setTextRange(e.createAssignment(a, e.setTextRange(e.createBinary(Ke(a), X(o), e.visitNode(i, B, e.isExpression)), n)), n);
      } else {
       return e.updateBinary(n, a, e.visitNode(i, B, e.isExpression));
      }
     }
     return e.visitEachChild(n, B, t);
    }
    function Y(n) {
     if (ze(n.right)) {
      if (e.isLogicalOperator(n.operatorToken.kind)) {
       return Z(n);
      } else if (n.operatorToken.kind === 26) {
       return ee(n);
      }
      var r = e.getMutableClone(n);
      r.left = Ke(e.visitNode(n.left, B, e.isExpression));
      r.right = e.visitNode(n.right, B, e.isExpression);
      return r;
     }
     return e.visitEachChild(n, B, t);
    }
    function Z(t) {
     var n = We();
     var r = Ve();
     Dt(r, e.visitNode(t.left, B, e.isExpression), t.left);
     if (t.operatorToken.kind === 53) {
      Nt(n, r, t.left);
     } else {
      Et(n, r, t.left);
     }
     Dt(r, e.visitNode(t.right, B, e.isExpression), t.right);
     He(n);
     return r;
    }
    function ee(t) {
     var n = [];
     r(t.left);
     r(t.right);
     return e.inlineExpressions(n);
     function r(t) {
      if (e.isBinaryExpression(t) && t.operatorToken.kind === 26) {
       r(t.left);
       r(t.right);
      } else {
       if (ze(t) && n.length > 0) {
        Mt(1, [ e.createExpressionStatement(e.inlineExpressions(n)) ]);
        n = [];
       }
       n.push(e.visitNode(t, B, e.isExpression));
      }
     }
    }
    function te(n) {
     if (ze(n.whenTrue) || ze(n.whenFalse)) {
      var r = We();
      var i = We();
      var a = Ve();
      Nt(r, e.visitNode(n.condition, B, e.isExpression), n.condition);
      Dt(a, e.visitNode(n.whenTrue, B, e.isExpression), n.whenTrue);
      Tt(i);
      He(r);
      Dt(a, e.visitNode(n.whenFalse, B, e.isExpression), n.whenFalse);
      He(i);
      return a;
     }
     return e.visitEachChild(n, B, t);
    }
    function ne(n) {
     var r = We();
     var i = e.visitNode(n.expression, B, e.isExpression);
     if (n.asteriskToken) {
      var a = (e.getEmitFlags(n.expression) & 8388608) === 0 ? e.createValuesHelper(t, i, n) : i;
      At(a, n);
     } else {
      Ft(i, n);
     }
     He(r);
     return St(n);
    }
    function re(e) {
     return ie(e.elements, undefined, undefined, e.multiLine);
    }
    function ie(t, n, r, i) {
     var a = je(t);
     var o;
     if (a > 0) {
      o = Ve();
      var s = e.visitNodes(t, B, e.isExpression, 0, a);
      Dt(o, e.createArrayLiteral(n ? [ n ].concat(s) : s));
      n = undefined;
     }
     var c = e.reduceLeft(t, u, [], a);
     return o ? e.createArrayConcat(o, [ e.createArrayLiteral(c, i) ]) : e.setTextRange(e.createArrayLiteral(n ? [ n ].concat(c) : c, i), r);
     function u(t, r) {
      if (ze(r) && t.length > 0) {
       var a = o !== undefined;
       if (!o) {
        o = Ve();
       }
       Dt(o, a ? e.createArrayConcat(o, [ e.createArrayLiteral(t, i) ]) : e.createArrayLiteral(n ? [ n ].concat(t) : t, i));
       n = undefined;
       t = [];
      }
      t.push(e.visitNode(r, B, e.isExpression));
      return t;
     }
    }
    function ae(t) {
     var n = t.properties;
     var r = t.multiLine;
     var i = je(n);
     var a = Ve();
     Dt(a, e.createObjectLiteral(e.visitNodes(n, B, e.isObjectLiteralElementLike, 0, i), r));
     var o = e.reduceLeft(n, s, [], i);
     o.push(r ? e.startOnNewLine(e.getMutableClone(a)) : a);
     return e.inlineExpressions(o);
     function s(n, i) {
      if (ze(i) && n.length > 0) {
       Ct(e.createExpressionStatement(e.inlineExpressions(n)));
       n = [];
      }
      var o = e.createExpressionForObjectLiteralElementLike(t, i, a);
      var s = e.visitNode(o, B, e.isExpression);
      if (s) {
       if (r) {
        e.startOnNewLine(s);
       }
       n.push(s);
      }
      return n;
     }
    }
    function oe(n) {
     if (ze(n.argumentExpression)) {
      var r = e.getMutableClone(n);
      r.expression = Ke(e.visitNode(n.expression, B, e.isLeftHandSideExpression));
      r.argumentExpression = e.visitNode(n.argumentExpression, B, e.isExpression);
      return r;
     }
     return e.visitEachChild(n, B, t);
    }
    function se(n) {
     if (!e.isImportCall(n) && e.forEach(n.arguments, ze)) {
      var r = e.createCallBinding(n.expression, a, u, true), i = r.target, o = r.thisArg;
      return e.setOriginalNode(e.createFunctionApply(Ke(e.visitNode(i, B, e.isLeftHandSideExpression)), o, ie(n.arguments), n), n);
     }
     return e.visitEachChild(n, B, t);
    }
    function ce(n) {
     if (e.forEach(n.arguments, ze)) {
      var r = e.createCallBinding(e.createPropertyAccess(n.expression, "bind"), a), i = r.target, o = r.thisArg;
      return e.setOriginalNode(e.setTextRange(e.createNew(e.createFunctionApply(Ke(e.visitNode(i, B, e.isExpression)), o, ie(n.arguments, e.createVoidZero())), undefined, []), n), n);
     }
     return e.visitEachChild(n, B, t);
    }
    function ue(e, t) {
     if (t === void 0) {
      t = 0;
     }
     var n = e.length;
     for (var r = t; r < n; r++) {
      fe(e[r]);
     }
    }
    function le(t) {
     if (e.isBlock(t)) {
      ue(t.statements);
     } else {
      fe(t);
     }
    }
    function fe(e) {
     var t = _;
     if (!_) {
      _ = ze(e);
     }
     de(e);
     _ = t;
    }
    function de(t) {
     switch (t.kind) {
     case 216:
      return pe(t);

     case 219:
      return me(t);

     case 220:
      return he(t);

     case 221:
      return ve(t);

     case 222:
      return be(t);

     case 223:
      return ke(t);

     case 224:
      return we(t);

     case 226:
      return De(t);

     case 227:
      return Ee(t);

     case 228:
      return Ae(t);

     case 229:
      return Pe(t);

     case 230:
      return Ie(t);

     case 231:
      return Me(t);

     case 232:
      return Re(t);

     case 233:
      return Be(t);

     default:
      return Ct(e.visitNode(t, B, e.isStatement));
     }
    }
    function pe(t) {
     if (ze(t)) {
      ue(t.statements);
     } else {
      Ct(e.visitNode(t, B, e.isStatement));
     }
    }
    function me(t) {
     Ct(e.visitNode(t, B, e.isStatement));
    }
    function _e(t) {
     for (var n = 0, r = t.declarations; n < r.length; n++) {
      var i = r[n];
      var o = e.getSynthesizedClone(i.name);
      e.setCommentRange(o, i.name);
      a(o);
     }
     var s = e.getInitializedVariables(t);
     var c = s.length;
     var u = 0;
     var l = [];
     while (u < c) {
      for (var f = u; f < c; f++) {
       var i = s[f];
       if (ze(i.initializer) && l.length > 0) {
        break;
       }
       l.push(ge(i));
      }
      if (l.length) {
       Ct(e.createExpressionStatement(e.inlineExpressions(l)));
       u += l.length;
       l = [];
      }
     }
     return undefined;
    }
    function ge(t) {
     return e.setSourceMapRange(e.createAssignment(e.setSourceMapRange(e.getSynthesizedClone(t.name), t.name), e.visitNode(t.initializer, B, e.isExpression)), t);
    }
    function he(t) {
     if (ze(t)) {
      if (ze(t.thenStatement) || ze(t.elseStatement)) {
       var n = We();
       var r = t.elseStatement ? We() : undefined;
       Nt(t.elseStatement ? r : n, e.visitNode(t.expression, B, e.isExpression), t.expression);
       le(t.thenStatement);
       if (t.elseStatement) {
        Tt(n);
        He(r);
        le(t.elseStatement);
       }
       He(n);
      } else {
       Ct(e.visitNode(t, B, e.isStatement));
      }
     } else {
      Ct(e.visitNode(t, B, e.isStatement));
     }
    }
    function ve(t) {
     if (ze(t)) {
      var n = We();
      var r = We();
      at(n);
      He(r);
      le(t.statement);
      He(n);
      Et(r, e.visitNode(t.expression, B, e.isExpression));
      ot();
     } else {
      Ct(e.visitNode(t, B, e.isStatement));
     }
    }
    function ye(n) {
     if (_) {
      it();
      n = e.visitEachChild(n, B, t);
      ot();
      return n;
     } else {
      return e.visitEachChild(n, B, t);
     }
    }
    function be(t) {
     if (ze(t)) {
      var n = We();
      var r = at(n);
      He(n);
      Nt(r, e.visitNode(t.expression, B, e.isExpression));
      le(t.statement);
      Tt(n);
      ot();
     } else {
      Ct(e.visitNode(t, B, e.isStatement));
     }
    }
    function xe(n) {
     if (_) {
      it();
      n = e.visitEachChild(n, B, t);
      ot();
      return n;
     } else {
      return e.visitEachChild(n, B, t);
     }
    }
    function ke(t) {
     if (ze(t)) {
      var n = We();
      var r = We();
      var i = at(r);
      if (t.initializer) {
       var a = t.initializer;
       if (e.isVariableDeclarationList(a)) {
        _e(a);
       } else {
        Ct(e.setTextRange(e.createExpressionStatement(e.visitNode(a, B, e.isExpression)), a));
       }
      }
      He(n);
      if (t.condition) {
       Nt(i, e.visitNode(t.condition, B, e.isExpression));
      }
      le(t.statement);
      He(r);
      if (t.incrementor) {
       Ct(e.setTextRange(e.createExpressionStatement(e.visitNode(t.incrementor, B, e.isExpression)), t.incrementor));
      }
      Tt(n);
      ot();
     } else {
      Ct(e.visitNode(t, B, e.isStatement));
     }
    }
    function Se(n) {
     if (_) {
      it();
     }
     var r = n.initializer;
     if (r && e.isVariableDeclarationList(r)) {
      for (var i = 0, o = r.declarations; i < o.length; i++) {
       var s = o[i];
       a(s.name);
      }
      var c = e.getInitializedVariables(r);
      n = e.updateFor(n, c.length > 0 ? e.inlineExpressions(e.map(c, ge)) : undefined, e.visitNode(n.condition, B, e.isExpression), e.visitNode(n.incrementor, B, e.isExpression), e.visitNode(n.statement, B, e.isStatement, e.liftToBlock));
     } else {
      n = e.visitEachChild(n, B, t);
     }
     if (_) {
      ot();
     }
     return n;
    }
    function we(t) {
     if (ze(t)) {
      var n = Ve();
      var r = Ve();
      var i = e.createLoopVariable();
      var o = t.initializer;
      a(i);
      Dt(n, e.createArrayLiteral());
      Ct(e.createForIn(r, e.visitNode(t.expression, B, e.isExpression), e.createExpressionStatement(e.createCall(e.createPropertyAccess(n, "push"), undefined, [ r ]))));
      Dt(i, e.createLiteral(0));
      var s = We();
      var c = We();
      var u = at(c);
      He(s);
      Nt(u, e.createLessThan(i, e.createPropertyAccess(n, "length")));
      var l = void 0;
      if (e.isVariableDeclarationList(o)) {
       for (var f = 0, d = o.declarations; f < d.length; f++) {
        var p = d[f];
        a(p.name);
       }
       l = e.getSynthesizedClone(o.declarations[0].name);
      } else {
       l = e.visitNode(o, B, e.isExpression);
       e.Debug.assert(e.isLeftHandSideExpression(l));
      }
      Dt(l, e.createElementAccess(n, i));
      le(t.statement);
      He(c);
      Ct(e.createExpressionStatement(e.createPostfixIncrement(i)));
      Tt(s);
      ot();
     } else {
      Ct(e.visitNode(t, B, e.isStatement));
     }
    }
    function Ce(n) {
     if (_) {
      it();
     }
     var r = n.initializer;
     if (e.isVariableDeclarationList(r)) {
      for (var i = 0, o = r.declarations; i < o.length; i++) {
       var s = o[i];
       a(s.name);
      }
      n = e.updateForIn(n, r.declarations[0].name, e.visitNode(n.expression, B, e.isExpression), e.visitNode(n.statement, B, e.isStatement, e.liftToBlock));
     } else {
      n = e.visitEachChild(n, B, t);
     }
     if (_) {
      ot();
     }
     return n;
    }
    function De(t) {
     var n = vt(t.label ? e.idText(t.label) : undefined);
     if (n > 0) {
      Tt(n, t);
     } else {
      Ct(t);
     }
    }
    function Te(n) {
     if (_) {
      var r = vt(n.label && e.idText(n.label));
      if (r > 0) {
       return xt(r, n);
      }
     }
     return e.visitEachChild(n, B, t);
    }
    function Ee(t) {
     var n = ht(t.label ? e.idText(t.label) : undefined);
     if (n > 0) {
      Tt(n, t);
     } else {
      Ct(t);
     }
    }
    function Ne(n) {
     if (_) {
      var r = ht(n.label && e.idText(n.label));
      if (r > 0) {
       return xt(r, n);
      }
     }
     return e.visitEachChild(n, B, t);
    }
    function Ae(t) {
     Pt(e.visitNode(t.expression, B, e.isExpression), t);
    }
    function Fe(t) {
     return kt(e.visitNode(t.expression, B, e.isExpression), t);
    }
    function Pe(t) {
     if (ze(t)) {
      Ye(Ke(e.visitNode(t.expression, B, e.isExpression)));
      le(t.statement);
      Ze();
     } else {
      Ct(e.visitNode(t, B, e.isStatement));
     }
    }
    function Ie(t) {
     if (ze(t.caseBlock)) {
      var n = t.caseBlock;
      var r = n.clauses.length;
      var i = ct();
      var a = Ke(e.visitNode(t.expression, B, e.isExpression));
      var o = [];
      var s = -1;
      for (var c = 0; c < r; c++) {
       var u = n.clauses[c];
       o.push(We());
       if (u.kind === 270 && s === -1) {
        s = c;
       }
      }
      var l = 0;
      var f = [];
      while (l < r) {
       var d = 0;
       for (var c = l; c < r; c++) {
        var u = n.clauses[c];
        if (u.kind === 269) {
         if (ze(u.expression) && f.length > 0) {
          break;
         }
         f.push(e.createCaseClause(e.visitNode(u.expression, B, e.isExpression), [ xt(o[c], u.expression) ]));
        } else {
         d++;
        }
       }
       if (f.length) {
        Ct(e.createSwitch(a, e.createCaseBlock(f)));
        l += f.length;
        f = [];
       }
       if (d > 0) {
        l += d;
        d = 0;
       }
      }
      if (s >= 0) {
       Tt(o[s]);
      } else {
       Tt(i);
      }
      for (var c = 0; c < r; c++) {
       He(o[c]);
       ue(n.clauses[c].statements);
      }
      ut();
     } else {
      Ct(e.visitNode(t, B, e.isStatement));
     }
    }
    function Oe(n) {
     if (_) {
      st();
     }
     n = e.visitEachChild(n, B, t);
     if (_) {
      ut();
     }
     return n;
    }
    function Me(t) {
     if (ze(t)) {
      ft(e.idText(t.label));
      le(t.statement);
      dt();
     } else {
      Ct(e.visitNode(t, B, e.isStatement));
     }
    }
    function Le(n) {
     if (_) {
      lt(e.idText(n.label));
     }
     n = e.visitEachChild(n, B, t);
     if (_) {
      dt();
     }
     return n;
    }
    function Re(t) {
     It(e.visitNode(t.expression, B, e.isExpression), t);
    }
    function Be(n) {
     if (ze(n)) {
      et();
      le(n.tryBlock);
      if (n.catchClause) {
       tt(n.catchClause.variableDeclaration);
       le(n.catchClause.block);
      }
      if (n.finallyBlock) {
       nt();
       le(n.finallyBlock);
      }
      rt();
     } else {
      Ct(e.visitEachChild(n, B, t));
     }
    }
    function ze(e) {
     return !!e && (e.transformFlags & 16777216) !== 0;
    }
    function je(e) {
     var t = e.length;
     for (var n = 0; n < t; n++) {
      if (ze(e[n])) {
       return n;
      }
     }
     return -1;
    }
    function qe(e, t) {
     t = f(e, t);
     if (e === 1) {
      return Ue(t);
     }
     return t;
    }
    function Ue(t) {
     if (e.isIdentifier(t)) {
      return Je(t);
     }
     return t;
    }
    function Je(t) {
     if (!e.isGeneratedIdentifier(t) && d && d.has(e.idText(t))) {
      var n = e.getOriginalNode(t);
      if (e.isIdentifier(n) && n.parent) {
       var r = l.getReferencedValueDeclaration(n);
       if (r) {
        var i = p[e.getOriginalNodeId(r)];
        if (i) {
         var a = e.getMutableClone(i);
         e.setSourceMapRange(a, t);
         e.setCommentRange(a, t);
         return a;
        }
       }
      }
     }
     return t;
    }
    function Ke(t) {
     var n;
     if (e.isGeneratedIdentifier(t) || e.getEmitFlags(t) & 4096) {
      return t;
     }
     n = e.createTempVariable(a);
     Dt(n, t, t);
     return n;
    }
    function Ve(t) {
     var n = t ? e.createUniqueName(t) : e.createTempVariable(undefined);
     a(n);
     return n;
    }
    function We() {
     if (!b) {
      b = [];
     }
     var e = k;
     k++;
     b[e] = -1;
     return e;
    }
    function He(t) {
     e.Debug.assert(b !== undefined, "No labels were defined.");
     b[t] = S ? S.length : 0;
    }
    function Ge(e) {
     if (!g) {
      g = [];
      v = [];
      h = [];
      y = [];
     }
     var t = v.length;
     v[t] = 0;
     h[t] = S ? S.length : 0;
     g[t] = e;
     y.push(e);
     return t;
    }
    function $e() {
     var t = Xe();
     if (t === undefined) return e.Debug.fail("beginBlock was never called.");
     var n = v.length;
     v[n] = 1;
     h[n] = S ? S.length : 0;
     g[n] = t;
     y.pop();
     return t;
    }
    function Xe() {
     return e.lastOrUndefined(y);
    }
    function Qe() {
     var e = Xe();
     return e && e.kind;
    }
    function Ye(e) {
     var t = We();
     var n = We();
     He(t);
     Ge({
      kind: 1,
      expression: e,
      startLabel: t,
      endLabel: n
     });
    }
    function Ze() {
     e.Debug.assert(Qe() === 1);
     var t = $e();
     He(t.endLabel);
    }
    function et() {
     var e = We();
     var t = We();
     He(e);
     Ge({
      kind: 0,
      state: 0,
      startLabel: e,
      endLabel: t
     });
     wt();
     return t;
    }
    function tt(n) {
     e.Debug.assert(Qe() === 0);
     var r;
     if (e.isGeneratedIdentifier(n.name)) {
      r = n.name;
      a(n.name);
     } else {
      var i = e.idText(n.name);
      r = Ve(i);
      if (!d) {
       d = e.createMap();
       p = [];
       t.enableSubstitution(71);
      }
      d.set(i, true);
      p[e.getOriginalNodeId(n)] = r;
     }
     var o = Xe();
     e.Debug.assert(o.state < 1);
     var s = o.endLabel;
     Tt(s);
     var c = We();
     He(c);
     o.state = 1;
     o.catchVariable = r;
     o.catchLabel = c;
     Dt(r, e.createCall(e.createPropertyAccess(D, "sent"), undefined, []));
     wt();
    }
    function nt() {
     e.Debug.assert(Qe() === 0);
     var t = Xe();
     e.Debug.assert(t.state < 2);
     var n = t.endLabel;
     Tt(n);
     var r = We();
     He(r);
     t.state = 2;
     t.finallyLabel = r;
    }
    function rt() {
     e.Debug.assert(Qe() === 0);
     var t = $e();
     var n = t.state;
     if (n < 2) {
      Tt(t.endLabel);
     } else {
      Ot();
     }
     He(t.endLabel);
     wt();
     t.state = 3;
    }
    function it() {
     Ge({
      kind: 3,
      isScript: true,
      breakLabel: -1,
      continueLabel: -1
     });
    }
    function at(e) {
     var t = We();
     Ge({
      kind: 3,
      isScript: false,
      breakLabel: t,
      continueLabel: e
     });
     return t;
    }
    function ot() {
     e.Debug.assert(Qe() === 3);
     var t = $e();
     var n = t.breakLabel;
     if (!t.isScript) {
      He(n);
     }
    }
    function st() {
     Ge({
      kind: 2,
      isScript: true,
      breakLabel: -1
     });
    }
    function ct() {
     var e = We();
     Ge({
      kind: 2,
      isScript: false,
      breakLabel: e
     });
     return e;
    }
    function ut() {
     e.Debug.assert(Qe() === 2);
     var t = $e();
     var n = t.breakLabel;
     if (!t.isScript) {
      He(n);
     }
    }
    function lt(e) {
     Ge({
      kind: 4,
      isScript: true,
      labelText: e,
      breakLabel: -1
     });
    }
    function ft(e) {
     var t = We();
     Ge({
      kind: 4,
      isScript: false,
      labelText: e,
      breakLabel: t
     });
    }
    function dt() {
     e.Debug.assert(Qe() === 4);
     var t = $e();
     if (!t.isScript) {
      He(t.breakLabel);
     }
    }
    function pt(e) {
     return e.kind === 2 || e.kind === 3;
    }
    function mt(e) {
     return e.kind === 4;
    }
    function _t(e) {
     return e.kind === 3;
    }
    function gt(e, t) {
     for (var n = t; n >= 0; n--) {
      var r = y[n];
      if (mt(r)) {
       if (r.labelText === e) {
        return true;
       }
      } else {
       break;
      }
     }
     return false;
    }
    function ht(e) {
     if (y) {
      if (e) {
       for (var t = y.length - 1; t >= 0; t--) {
        var n = y[t];
        if (mt(n) && n.labelText === e) {
         return n.breakLabel;
        } else if (pt(n) && gt(e, t - 1)) {
         return n.breakLabel;
        }
       }
      } else {
       for (var t = y.length - 1; t >= 0; t--) {
        var n = y[t];
        if (pt(n)) {
         return n.breakLabel;
        }
       }
      }
     }
     return 0;
    }
    function vt(e) {
     if (y) {
      if (e) {
       for (var t = y.length - 1; t >= 0; t--) {
        var n = y[t];
        if (_t(n) && gt(e, t - 1)) {
         return n.continueLabel;
        }
       }
      } else {
       for (var t = y.length - 1; t >= 0; t--) {
        var n = y[t];
        if (_t(n)) {
         return n.continueLabel;
        }
       }
      }
     }
     return 0;
    }
    function yt(t) {
     if (t !== undefined && t > 0) {
      if (x === undefined) {
       x = [];
      }
      var n = e.createLiteral(-1);
      if (x[t] === undefined) {
       x[t] = [ n ];
      } else {
       x[t].push(n);
      }
      return n;
     }
     return e.createOmittedExpression();
    }
    function bt(t) {
     var n = e.createLiteral(t);
     e.addSyntheticTrailingComment(n, 3, o(t));
     return n;
    }
    function xt(t, n) {
     e.Debug.assertLessThan(0, t, "Invalid label");
     return e.setTextRange(e.createReturn(e.createArrayLiteral([ bt(3), yt(t) ])), n);
    }
    function kt(t, n) {
     return e.setTextRange(e.createReturn(e.createArrayLiteral(t ? [ bt(2), t ] : [ bt(2) ])), n);
    }
    function St(t) {
     return e.setTextRange(e.createCall(e.createPropertyAccess(D, "sent"), undefined, []), t);
    }
    function wt() {
     Mt(0);
    }
    function Ct(e) {
     if (e) {
      Mt(1, [ e ]);
     } else {
      wt();
     }
    }
    function Dt(e, t, n) {
     Mt(2, [ e, t ], n);
    }
    function Tt(e, t) {
     Mt(3, [ e ], t);
    }
    function Et(e, t, n) {
     Mt(4, [ e, t ], n);
    }
    function Nt(e, t, n) {
     Mt(5, [ e, t ], n);
    }
    function At(e, t) {
     Mt(7, [ e ], t);
    }
    function Ft(e, t) {
     Mt(6, [ e ], t);
    }
    function Pt(e, t) {
     Mt(8, [ e ], t);
    }
    function It(e, t) {
     Mt(9, [ e ], t);
    }
    function Ot() {
     Mt(10);
    }
    function Mt(e, t, n) {
     if (S === undefined) {
      S = [];
      w = [];
      C = [];
     }
     if (b === undefined) {
      He(We());
     }
     var r = S.length;
     S[r] = e;
     w[r] = t;
     C[r] = n;
    }
    function Lt() {
     T = 0;
     E = 0;
     N = undefined;
     A = false;
     F = false;
     P = undefined;
     I = undefined;
     O = undefined;
     M = undefined;
     L = undefined;
     var n = Rt();
     return c(t, e.setEmitFlags(e.createFunctionExpression(undefined, undefined, undefined, undefined, [ e.createParameter(undefined, undefined, undefined, D) ], undefined, e.createBlock(n, n.length > 0)), 524288));
    }
    function Rt() {
     if (S) {
      for (var t = 0; t < S.length; t++) {
       Vt(t);
      }
      zt(S.length);
     } else {
      zt(0);
     }
     if (P) {
      var n = e.createPropertyAccess(D, "label");
      var r = e.createSwitch(n, e.createCaseBlock(P));
      return [ e.startOnNewLine(r) ];
     }
     if (I) {
      return I;
     }
     return [];
    }
    function Bt() {
     if (!I) {
      return;
     }
     qt(!A);
     A = false;
     F = false;
     E++;
    }
    function zt(e) {
     if (jt(e)) {
      Ut(e);
      L = undefined;
      $t(undefined, undefined);
     }
     if (I && P) {
      qt(false);
     }
     Jt();
    }
    function jt(e) {
     if (!F) {
      return true;
     }
     if (!b || !x) {
      return false;
     }
     for (var t = 0; t < b.length; t++) {
      if (b[t] === e && x[t]) {
       return true;
      }
     }
     return false;
    }
    function qt(t) {
     if (!P) {
      P = [];
     }
     if (I) {
      if (L) {
       for (var n = L.length - 1; n >= 0; n--) {
        var r = L[n];
        I = [ e.createWith(r.expression, e.createBlock(I)) ];
       }
      }
      if (M) {
       var i = M.startLabel, a = M.catchLabel, o = M.finallyLabel, s = M.endLabel;
       I.unshift(e.createExpressionStatement(e.createCall(e.createPropertyAccess(e.createPropertyAccess(D, "trys"), "push"), undefined, [ e.createArrayLiteral([ yt(i), yt(a), yt(o), yt(s) ]) ])));
       M = undefined;
      }
      if (t) {
       I.push(e.createExpressionStatement(e.createAssignment(e.createPropertyAccess(D, "label"), e.createLiteral(E + 1))));
      }
     }
     P.push(e.createCaseClause(e.createLiteral(E), I || []));
     I = undefined;
    }
    function Ut(e) {
     if (!b) {
      return;
     }
     for (var t = 0; t < b.length; t++) {
      if (b[t] === e) {
       Bt();
       if (N === undefined) {
        N = [];
       }
       if (N[E] === undefined) {
        N[E] = [ t ];
       } else {
        N[E].push(t);
       }
      }
     }
    }
    function Jt() {
     if (x !== undefined && N !== undefined) {
      for (var e = 0; e < N.length; e++) {
       var t = N[e];
       if (t !== undefined) {
        for (var n = 0, r = t; n < r.length; n++) {
         var i = r[n];
         var a = x[i];
         if (a !== undefined) {
          for (var o = 0, s = a; o < s.length; o++) {
           var c = s[o];
           c.text = String(e);
          }
         }
        }
       }
      }
     }
    }
    function Kt(e) {
     if (g) {
      for (;T < v.length && h[T] <= e; T++) {
       var t = g[T];
       var n = v[T];
       switch (t.kind) {
       case 0:
        if (n === 0) {
         if (!O) {
          O = [];
         }
         if (!I) {
          I = [];
         }
         O.push(M);
         M = t;
        } else if (n === 1) {
         M = O.pop();
        }
        break;

       case 1:
        if (n === 0) {
         if (!L) {
          L = [];
         }
         L.push(t);
        } else if (n === 1) {
         L.pop();
        }
        break;
       }
      }
     }
    }
    function Vt(e) {
     Ut(e);
     Kt(e);
     if (A) {
      return;
     }
     A = false;
     F = false;
     var t = S[e];
     if (t === 0) {
      return;
     } else if (t === 10) {
      return tn();
     }
     var n = w[e];
     if (t === 1) {
      return Wt(n[0]);
     }
     var r = C[e];
     switch (t) {
     case 2:
      return Ht(n[0], n[1], r);

     case 3:
      return Xt(n[0], r);

     case 4:
      return Qt(n[0], n[1], r);

     case 5:
      return Yt(n[0], n[1], r);

     case 6:
      return Zt(n[0], r);

     case 7:
      return en(n[0], r);

     case 8:
      return $t(n[0], r);

     case 9:
      return Gt(n[0], r);
     }
    }
    function Wt(e) {
     if (e) {
      if (!I) {
       I = [ e ];
      } else {
       I.push(e);
      }
     }
    }
    function Ht(t, n, r) {
     Wt(e.setTextRange(e.createExpressionStatement(e.createAssignment(t, n)), r));
    }
    function Gt(t, n) {
     A = true;
     F = true;
     Wt(e.setTextRange(e.createThrow(t), n));
    }
    function $t(t, n) {
     A = true;
     F = true;
     Wt(e.setEmitFlags(e.setTextRange(e.createReturn(e.createArrayLiteral(t ? [ bt(2), t ] : [ bt(2) ])), n), 384));
    }
    function Xt(t, n) {
     A = true;
     Wt(e.setEmitFlags(e.setTextRange(e.createReturn(e.createArrayLiteral([ bt(3), yt(t) ])), n), 384));
    }
    function Qt(t, n, r) {
     Wt(e.setEmitFlags(e.createIf(n, e.setEmitFlags(e.setTextRange(e.createReturn(e.createArrayLiteral([ bt(3), yt(t) ])), r), 384)), 1));
    }
    function Yt(t, n, r) {
     Wt(e.setEmitFlags(e.createIf(e.createLogicalNot(n), e.setEmitFlags(e.setTextRange(e.createReturn(e.createArrayLiteral([ bt(3), yt(t) ])), r), 384)), 1));
    }
    function Zt(t, n) {
     A = true;
     Wt(e.setEmitFlags(e.setTextRange(e.createReturn(e.createArrayLiteral(t ? [ bt(4), t ] : [ bt(4) ])), n), 384));
    }
    function en(t, n) {
     A = true;
     Wt(e.setEmitFlags(e.setTextRange(e.createReturn(e.createArrayLiteral([ bt(5), t ])), n), 384));
    }
    function tn() {
     A = true;
     Wt(e.createReturn(e.createArrayLiteral([ bt(7) ])));
    }
   }
   e.transformGenerators = s;
   function c(t, n) {
    t.requestEmitHelper(u);
    return e.createCall(e.getHelperName("__generator"), undefined, [ e.createThis(), n ]);
   }
   var u = {
    name: "typescript:generator",
    scoped: false,
    priority: 6,
    text: '\n            var __generator = (this && this.__generator) || function (thisArg, body) {\n                var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n                return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n                function verb(n) { return function (v) { return step([n, v]); }; }\n                function step(op) {\n                    if (f) throw new TypeError("Generator is already executing.");\n                    while (_) try {\n                        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n                        if (y = 0, t) op = [op[0] & 2, t.value];\n                        switch (op[0]) {\n                            case 0: case 1: t = op; break;\n                            case 4: _.label++; return { value: op[1], done: false };\n                            case 5: _.label++; y = op[1]; op = [0]; continue;\n                            case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                            default:\n                                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                                if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                                if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                                if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                                if (t[2]) _.ops.pop();\n                                _.trys.pop(); continue;\n                        }\n                        op = body.call(thisArg, _);\n                    } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n                    if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n                }\n            };'
   };
  })(s || (s = {}));
  var s;
  (function(e) {
   function t(t) {
    function s(t) {
     switch (t) {
     case e.ModuleKind.AMD:
      return T;

     case e.ModuleKind.UMD:
      return E;

     default:
      return D;
     }
    }
    var c = t.startLexicalEnvironment, u = t.endLexicalEnvironment, l = t.hoistVariableDeclaration;
    var f = t.getCompilerOptions();
    var d = t.getEmitResolver();
    var p = t.getEmitHost();
    var m = e.getEmitScriptTarget(f);
    var _ = e.getEmitModuleKind(f);
    var g = t.onSubstituteNode;
    var h = t.onEmitNode;
    t.onSubstituteNode = pe;
    t.onEmitNode = de;
    t.enableSubstitution(71);
    t.enableSubstitution(202);
    t.enableSubstitution(200);
    t.enableSubstitution(201);
    t.enableSubstitution(274);
    t.enableEmitNotification(277);
    var v = [];
    var y = [];
    var b;
    var x;
    var k;
    var S;
    return e.chainBundle(w);
    function w(t) {
     if (t.isDeclarationFile || !(e.isEffectiveExternalModule(t, f) || t.transformFlags & 67108864)) {
      return t;
     }
     b = t;
     x = e.collectExternalModuleInfo(t, d, f);
     v[e.getOriginalNodeId(t)] = x;
     var n = s(_);
     var r = n(t);
     b = undefined;
     x = undefined;
     S = false;
     return e.aggregateTransformFlags(r);
    }
    function C() {
     if (!x.exportEquals && e.isExternalModule(b)) {
      return true;
     }
     return false;
    }
    function D(r) {
     c();
     var i = [];
     var a = e.getStrictOptionValue(f, "alwaysStrict") || !f.noImplicitUseStrict && e.isExternalModule(b);
     var o = e.addPrologue(i, r.statements, a, I);
     if (C()) {
      e.append(i, ce());
     }
     e.append(i, e.visitNode(x.externalHelpersImportDeclaration, I, e.isStatement));
     e.addRange(i, e.visitNodes(r.statements, I, e.isStatement, o));
     P(i, false);
     e.addStatementsAfterPrologue(i, u());
     var s = e.updateSourceFileNode(r, e.setTextRange(e.createNodeArray(i), r.statements));
     if (x.hasExportStarsToExportValues && !f.importHelpers) {
      e.addEmitHelper(s, n);
     }
     e.addEmitHelpers(s, t.readEmitHelpers());
     return s;
    }
    function T(n) {
     var r = e.createIdentifier("define");
     var i = e.tryGetModuleNameFromFile(n, p, f);
     var a = N(n, true), o = a.aliasedModuleNames, s = a.unaliasedModuleNames, c = a.importAliasNames;
     var u = e.updateSourceFileNode(n, e.setTextRange(e.createNodeArray([ e.createExpressionStatement(e.createCall(r, undefined, (i ? [ i ] : []).concat([ e.createArrayLiteral([ e.createLiteral("require"), e.createLiteral("exports") ].concat(o, s)), e.createFunctionExpression(undefined, undefined, undefined, undefined, [ e.createParameter(undefined, undefined, undefined, "require"), e.createParameter(undefined, undefined, undefined, "exports") ].concat(c), undefined, F(n)) ]))) ]), n.statements));
     e.addEmitHelpers(u, t.readEmitHelpers());
     return u;
    }
    function E(n) {
     var r = N(n, false), i = r.aliasedModuleNames, a = r.unaliasedModuleNames, o = r.importAliasNames;
     var s = e.tryGetModuleNameFromFile(n, p, f);
     var c = e.createFunctionExpression(undefined, undefined, undefined, undefined, [ e.createParameter(undefined, undefined, undefined, "factory") ], undefined, e.setTextRange(e.createBlock([ e.createIf(e.createLogicalAnd(e.createTypeCheck(e.createIdentifier("module"), "object"), e.createTypeCheck(e.createPropertyAccess(e.createIdentifier("module"), "exports"), "object")), e.createBlock([ e.createVariableStatement(undefined, [ e.createVariableDeclaration("v", undefined, e.createCall(e.createIdentifier("factory"), undefined, [ e.createIdentifier("require"), e.createIdentifier("exports") ])) ]), e.setEmitFlags(e.createIf(e.createStrictInequality(e.createIdentifier("v"), e.createIdentifier("undefined")), e.createExpressionStatement(e.createAssignment(e.createPropertyAccess(e.createIdentifier("module"), "exports"), e.createIdentifier("v")))), 1) ]), e.createIf(e.createLogicalAnd(e.createTypeCheck(e.createIdentifier("define"), "function"), e.createPropertyAccess(e.createIdentifier("define"), "amd")), e.createBlock([ e.createExpressionStatement(e.createCall(e.createIdentifier("define"), undefined, (s ? [ s ] : []).concat([ e.createArrayLiteral([ e.createLiteral("require"), e.createLiteral("exports") ].concat(i, a)), e.createIdentifier("factory") ]))) ]))) ], true), undefined));
     var u = e.updateSourceFileNode(n, e.setTextRange(e.createNodeArray([ e.createExpressionStatement(e.createCall(c, undefined, [ e.createFunctionExpression(undefined, undefined, undefined, undefined, [ e.createParameter(undefined, undefined, undefined, "require"), e.createParameter(undefined, undefined, undefined, "exports") ].concat(o), undefined, F(n)) ])) ]), n.statements));
     e.addEmitHelpers(u, t.readEmitHelpers());
     return u;
    }
    function N(t, n) {
     var r = [];
     var i = [];
     var a = [];
     for (var o = 0, s = t.amdDependencies; o < s.length; o++) {
      var c = s[o];
      if (c.name) {
       r.push(e.createLiteral(c.path));
       a.push(e.createParameter(undefined, undefined, undefined, c.name));
      } else {
       i.push(e.createLiteral(c.path));
      }
     }
     for (var u = 0, l = x.externalImports; u < l.length; u++) {
      var m = l[u];
      var _ = e.getExternalModuleNameLiteral(m, b, p, d, f);
      var g = e.getLocalNameForExternalImport(m, b);
      if (_) {
       if (n && g) {
        e.setEmitFlags(g, 4);
        r.push(_);
        a.push(e.createParameter(undefined, undefined, undefined, g));
       } else {
        i.push(_);
       }
      }
     }
     return {
      aliasedModuleNames: r,
      unaliasedModuleNames: i,
      importAliasNames: a
     };
    }
    function A(t) {
     if (e.isImportEqualsDeclaration(t) || e.isExportDeclaration(t) || !e.getExternalModuleNameLiteral(t, b, p, d, f)) {
      return undefined;
     }
     var n = e.getLocalNameForExternalImport(t, b);
     var r = q(t, n);
     if (r === n) {
      return undefined;
     }
     return e.createExpressionStatement(e.createAssignment(n, r));
    }
    function F(t) {
     c();
     var r = [];
     var a = e.addPrologue(r, t.statements, !f.noImplicitUseStrict, I);
     if (C()) {
      e.append(r, ce());
     }
     e.append(r, e.visitNode(x.externalHelpersImportDeclaration, I, e.isStatement));
     if (_ === e.ModuleKind.AMD) {
      e.addRange(r, e.mapDefined(x.externalImports, A));
     }
     e.addRange(r, e.visitNodes(t.statements, I, e.isStatement, a));
     P(r, true);
     e.addStatementsAfterPrologue(r, u());
     var o = e.createBlock(r, true);
     if (x.hasExportStarsToExportValues && !f.importHelpers) {
      e.addEmitHelper(o, n);
     }
     if (S) {
      e.addEmitHelper(o, i);
     }
     return o;
    }
    function P(t, n) {
     if (x.exportEquals) {
      var r = e.visitNode(x.exportEquals.expression, O);
      if (r) {
       if (n) {
        var i = e.createReturn(r);
        e.setTextRange(i, x.exportEquals);
        e.setEmitFlags(i, 384 | 1536);
        t.push(i);
       } else {
        var i = e.createExpressionStatement(e.createAssignment(e.createPropertyAccess(e.createIdentifier("module"), "exports"), r));
        e.setTextRange(i, x.exportEquals);
        e.setEmitFlags(i, 1536);
        t.push(i);
       }
      }
     }
    }
    function I(n) {
     switch (n.kind) {
     case 247:
      return U(n);

     case 246:
      return K(n);

     case 253:
      return V(n);

     case 252:
      return W(n);

     case 217:
      return $(n);

     case 237:
      return H(n);

     case 238:
      return G(n);

     case 307:
      return Y(n);

     case 308:
      return ee(n);

     default:
      return e.visitEachChild(n, O, t);
     }
    }
    function O(n) {
     if (!(n.transformFlags & 67108864) && !(n.transformFlags & 2048)) {
      return n;
     }
     if (e.isImportCall(n)) {
      return R(n);
     } else if (n.transformFlags & 1024 && e.isBinaryExpression(n)) {
      return L(n);
     } else {
      return e.visitEachChild(n, O, t);
     }
    }
    function M(t) {
     if (e.isObjectLiteralExpression(t)) {
      for (var n = 0, r = t.properties; n < r.length; n++) {
       var i = r[n];
       switch (i.kind) {
       case 273:
        if (M(i.initializer)) {
         return true;
        }
        break;

       case 274:
        if (M(i.name)) {
         return true;
        }
        break;

       case 275:
        if (M(i.expression)) {
         return true;
        }
        break;

       case 154:
       case 156:
       case 157:
        return false;

       default:
        e.Debug.assertNever(i, "Unhandled object member kind");
       }
      }
     } else if (e.isArrayLiteralExpression(t)) {
      for (var a = 0, o = t.elements; a < o.length; a++) {
       var i = o[a];
       if (e.isSpreadElement(i)) {
        if (M(i.expression)) {
         return true;
        }
       } else if (M(i)) {
        return true;
       }
      }
     } else if (e.isIdentifier(t)) {
      return e.length(ye(t)) > (e.isExportName(t) ? 1 : 0);
     }
     return false;
    }
    function L(n) {
     if (M(n.left)) {
      return e.flattenDestructuringAssignment(n, O, t, 0, false, X);
     }
     return e.visitEachChild(n, O, t);
    }
    function R(t) {
     var n = e.visitNode(e.firstOrUndefined(t.arguments), O);
     var r = !!(t.transformFlags & 16384);
     switch (f.module) {
     case e.ModuleKind.AMD:
      return z(n, r);

     case e.ModuleKind.UMD:
      return B(n, r);

     case e.ModuleKind.CommonJS:
     default:
      return j(n, r);
     }
    }
    function B(t, n) {
     S = true;
     if (e.isSimpleCopiableExpression(t)) {
      var r = e.isGeneratedIdentifier(t) ? t : e.isStringLiteral(t) ? e.createLiteral(t) : e.setEmitFlags(e.setTextRange(e.getSynthesizedClone(t), t), 1536);
      return e.createConditional(e.createIdentifier("__syncRequire"), j(t, n), z(r, n));
     } else {
      var i = e.createTempVariable(l);
      return e.createComma(e.createAssignment(i, t), e.createConditional(e.createIdentifier("__syncRequire"), j(i, n), z(i, n)));
     }
    }
    function z(n, r) {
     var i = e.createUniqueName("resolve");
     var o = e.createUniqueName("reject");
     var s = [ e.createParameter(undefined, undefined, undefined, i), e.createParameter(undefined, undefined, undefined, o) ];
     var c = e.createBlock([ e.createExpressionStatement(e.createCall(e.createIdentifier("require"), undefined, [ e.createArrayLiteral([ n || e.createOmittedExpression() ]), i, o ])) ]);
     var u;
     if (m >= 2) {
      u = e.createArrowFunction(undefined, undefined, s, undefined, undefined, c);
     } else {
      u = e.createFunctionExpression(undefined, undefined, undefined, undefined, s, undefined, c);
      if (r) {
       e.setEmitFlags(u, 8);
      }
     }
     var l = e.createNew(e.createIdentifier("Promise"), undefined, [ u ]);
     if (f.esModuleInterop) {
      t.requestEmitHelper(a);
      return e.createCall(e.createPropertyAccess(l, e.createIdentifier("then")), undefined, [ e.getHelperName("__importStar") ]);
     }
     return l;
    }
    function j(n, r) {
     var i = e.createCall(e.createPropertyAccess(e.createIdentifier("Promise"), "resolve"), undefined, []);
     var o = e.createCall(e.createIdentifier("require"), undefined, n ? [ n ] : []);
     if (f.esModuleInterop) {
      t.requestEmitHelper(a);
      o = e.createCall(e.getHelperName("__importStar"), undefined, [ o ]);
     }
     var s;
     if (m >= 2) {
      s = e.createArrowFunction(undefined, undefined, [], undefined, undefined, o);
     } else {
      s = e.createFunctionExpression(undefined, undefined, undefined, undefined, [], undefined, e.createBlock([ e.createReturn(o) ]));
      if (r) {
       e.setEmitFlags(s, 8);
      }
     }
     return e.createCall(e.createPropertyAccess(i, "then"), undefined, [ s ]);
    }
    function q(n, r) {
     if (!f.esModuleInterop || e.getEmitFlags(n) & 67108864) {
      return r;
     }
     if (e.getImportNeedsImportStarHelper(n)) {
      t.requestEmitHelper(a);
      return e.createCall(e.getHelperName("__importStar"), undefined, [ r ]);
     }
     if (e.getImportNeedsImportDefaultHelper(n)) {
      t.requestEmitHelper(o);
      return e.createCall(e.getHelperName("__importDefault"), undefined, [ r ]);
     }
     return r;
    }
    function U(t) {
     var n;
     var r = e.getNamespaceDeclarationNode(t);
     if (_ !== e.ModuleKind.AMD) {
      if (!t.importClause) {
       return e.setTextRange(e.createExpressionStatement(J(t)), t);
      } else {
       var i = [];
       if (r && !e.isDefaultImport(t)) {
        i.push(e.createVariableDeclaration(e.getSynthesizedClone(r.name), undefined, q(t, J(t))));
       } else {
        i.push(e.createVariableDeclaration(e.getGeneratedNameForNode(t), undefined, q(t, J(t))));
        if (r && e.isDefaultImport(t)) {
         i.push(e.createVariableDeclaration(e.getSynthesizedClone(r.name), undefined, e.getGeneratedNameForNode(t)));
        }
       }
       n = e.append(n, e.setTextRange(e.createVariableStatement(undefined, e.createVariableDeclarationList(i, m >= 2 ? 2 : 0)), t));
      }
     } else if (r && e.isDefaultImport(t)) {
      n = e.append(n, e.createVariableStatement(undefined, e.createVariableDeclarationList([ e.setTextRange(e.createVariableDeclaration(e.getSynthesizedClone(r.name), undefined, e.getGeneratedNameForNode(t)), t) ], m >= 2 ? 2 : 0)));
     }
     if (Z(t)) {
      var a = e.getOriginalNodeId(t);
      y[a] = te(y[a], t);
     } else {
      n = te(n, t);
     }
     return e.singleOrMany(n);
    }
    function J(t) {
     var n = e.getExternalModuleNameLiteral(t, b, p, d, f);
     var r = [];
     if (n) {
      r.push(n);
     }
     return e.createCall(e.createIdentifier("require"), undefined, r);
    }
    function K(t) {
     e.Debug.assert(e.isExternalModuleImportEqualsDeclaration(t), "import= for internal module references should be handled in an earlier transformer.");
     var n;
     if (_ !== e.ModuleKind.AMD) {
      if (e.hasModifier(t, 1)) {
       n = e.append(n, e.setTextRange(e.createExpressionStatement(le(t.name, J(t))), t));
      } else {
       n = e.append(n, e.setTextRange(e.createVariableStatement(undefined, e.createVariableDeclarationList([ e.createVariableDeclaration(e.getSynthesizedClone(t.name), undefined, J(t)) ], m >= 2 ? 2 : 0)), t));
      }
     } else {
      if (e.hasModifier(t, 1)) {
       n = e.append(n, e.setTextRange(e.createExpressionStatement(le(e.getExportName(t), e.getLocalName(t))), t));
      }
     }
     if (Z(t)) {
      var r = e.getOriginalNodeId(t);
      y[r] = ne(y[r], t);
     } else {
      n = ne(n, t);
     }
     return e.singleOrMany(n);
    }
    function V(n) {
     if (!n.moduleSpecifier) {
      return undefined;
     }
     var i = e.getGeneratedNameForNode(n);
     if (n.exportClause) {
      var a = [];
      if (_ !== e.ModuleKind.AMD) {
       a.push(e.setTextRange(e.createVariableStatement(undefined, e.createVariableDeclarationList([ e.createVariableDeclaration(i, undefined, J(n)) ])), n));
      }
      for (var o = 0, s = n.exportClause.elements; o < s.length; o++) {
       var c = s[o];
       var u = e.createPropertyAccess(i, c.propertyName || c.name);
       a.push(e.setTextRange(e.createExpressionStatement(le(e.getExportName(c), u)), c));
      }
      return e.singleOrMany(a);
     } else {
      return e.setTextRange(e.createExpressionStatement(r(t, _ !== e.ModuleKind.AMD ? J(n) : i)), n);
     }
    }
    function W(t) {
     if (t.isExportEquals) {
      return undefined;
     }
     var n;
     var r = t.original;
     if (r && Z(r)) {
      var i = e.getOriginalNodeId(t);
      y[i] = se(y[i], e.createIdentifier("default"), e.visitNode(t.expression, O), t, true);
     } else {
      n = se(n, e.createIdentifier("default"), e.visitNode(t.expression, O), t, true);
     }
     return e.singleOrMany(n);
    }
    function H(n) {
     var r;
     if (e.hasModifier(n, 1)) {
      r = e.append(r, e.setOriginalNode(e.setTextRange(e.createFunctionDeclaration(undefined, e.visitNodes(n.modifiers, fe, e.isModifier), n.asteriskToken, e.getDeclarationName(n, true, true), undefined, e.visitNodes(n.parameters, O), undefined, e.visitEachChild(n.body, O, t)), n), n));
     } else {
      r = e.append(r, e.visitEachChild(n, O, t));
     }
     if (Z(n)) {
      var i = e.getOriginalNodeId(n);
      y[i] = ae(y[i], n);
     } else {
      r = ae(r, n);
     }
     return e.singleOrMany(r);
    }
    function G(n) {
     var r;
     if (e.hasModifier(n, 1)) {
      r = e.append(r, e.setOriginalNode(e.setTextRange(e.createClassDeclaration(undefined, e.visitNodes(n.modifiers, fe, e.isModifier), e.getDeclarationName(n, true, true), undefined, e.visitNodes(n.heritageClauses, O), e.visitNodes(n.members, O)), n), n));
     } else {
      r = e.append(r, e.visitEachChild(n, O, t));
     }
     if (Z(n)) {
      var i = e.getOriginalNodeId(n);
      y[i] = ae(y[i], n);
     } else {
      r = ae(r, n);
     }
     return e.singleOrMany(r);
    }
    function $(n) {
     var r;
     var i;
     var a;
     if (e.hasModifier(n, 1)) {
      var o = void 0;
      for (var s = 0, c = n.declarationList.declarations; s < c.length; s++) {
       var u = c[s];
       if (e.isIdentifier(u.name) && e.isLocalName(u.name)) {
        if (!o) {
         o = e.visitNodes(n.modifiers, fe, e.isModifier);
        }
        i = e.append(i, u);
       } else if (u.initializer) {
        a = e.append(a, Q(u));
       }
      }
      if (i) {
       r = e.append(r, e.updateVariableStatement(n, o, e.updateVariableDeclarationList(n.declarationList, i)));
      }
      if (a) {
       r = e.append(r, e.setTextRange(e.createExpressionStatement(e.inlineExpressions(a)), n));
      }
     } else {
      r = e.append(r, e.visitEachChild(n, O, t));
     }
     if (Z(n)) {
      var l = e.getOriginalNodeId(n);
      y[l] = re(y[l], n);
     } else {
      r = re(r, n);
     }
     return e.singleOrMany(r);
    }
    function X(t, n, r) {
     var i = ye(t);
     if (i) {
      var a = e.isExportName(t) ? n : e.createAssignment(t, n);
      for (var o = 0, s = i; o < s.length; o++) {
       var c = s[o];
       e.setEmitFlags(a, 4);
       a = le(c, a, r);
      }
      return a;
     }
     return e.createAssignment(t, n);
    }
    function Q(n) {
     if (e.isBindingPattern(n.name)) {
      return e.flattenDestructuringAssignment(e.visitNode(n, O), undefined, t, 0, false, X);
     } else {
      return e.createAssignment(e.setTextRange(e.createPropertyAccess(e.createIdentifier("exports"), n.name), n.name), e.visitNode(n.initializer, O));
     }
    }
    function Y(t) {
     if (Z(t) && t.original.kind === 217) {
      var n = e.getOriginalNodeId(t);
      y[n] = re(y[n], t.original);
     }
     return t;
    }
    function Z(t) {
     return (e.getEmitFlags(t) & 4194304) !== 0;
    }
    function ee(t) {
     var n = e.getOriginalNodeId(t);
     var r = y[n];
     if (r) {
      delete y[n];
      return e.append(r, t);
     }
     return t;
    }
    function te(e, t) {
     if (x.exportEquals) {
      return e;
     }
     var n = t.importClause;
     if (!n) {
      return e;
     }
     if (n.name) {
      e = oe(e, n);
     }
     var r = n.namedBindings;
     if (r) {
      switch (r.kind) {
      case 249:
       e = oe(e, r);
       break;

      case 250:
       for (var i = 0, a = r.elements; i < a.length; i++) {
        var o = a[i];
        e = oe(e, o);
       }
       break;
      }
     }
     return e;
    }
    function ne(e, t) {
     if (x.exportEquals) {
      return e;
     }
     return oe(e, t);
    }
    function re(e, t) {
     if (x.exportEquals) {
      return e;
     }
     for (var n = 0, r = t.declarationList.declarations; n < r.length; n++) {
      var i = r[n];
      e = ie(e, i);
     }
     return e;
    }
    function ie(t, n) {
     if (x.exportEquals) {
      return t;
     }
     if (e.isBindingPattern(n.name)) {
      for (var r = 0, i = n.name.elements; r < i.length; r++) {
       var a = i[r];
       if (!e.isOmittedExpression(a)) {
        t = ie(t, a);
       }
      }
     } else if (!e.isGeneratedIdentifier(n.name)) {
      t = oe(t, n);
     }
     return t;
    }
    function ae(t, n) {
     if (x.exportEquals) {
      return t;
     }
     if (e.hasModifier(n, 1)) {
      var r = e.hasModifier(n, 512) ? e.createIdentifier("default") : e.getDeclarationName(n);
      t = se(t, r, e.getLocalName(n), n);
     }
     if (n.name) {
      t = oe(t, n);
     }
     return t;
    }
    function oe(t, n) {
     var r = e.getDeclarationName(n);
     var i = x.exportSpecifiers.get(e.idText(r));
     if (i) {
      for (var a = 0, o = i; a < o.length; a++) {
       var s = o[a];
       t = se(t, s.name, r, s.name);
      }
     }
     return t;
    }
    function se(t, n, r, i, a) {
     t = e.append(t, ue(n, r, i, a));
     return t;
    }
    function ce() {
     var t;
     if (m === 0) {
      t = e.createExpressionStatement(le(e.createIdentifier("__esModule"), e.createLiteral(true)));
     } else {
      t = e.createExpressionStatement(e.createCall(e.createPropertyAccess(e.createIdentifier("Object"), "defineProperty"), undefined, [ e.createIdentifier("exports"), e.createLiteral("__esModule"), e.createObjectLiteral([ e.createPropertyAssignment("value", e.createLiteral(true)) ]) ]));
     }
     e.setEmitFlags(t, 1048576);
     return t;
    }
    function ue(t, n, r, i) {
     var a = e.setTextRange(e.createExpressionStatement(le(t, n)), r);
     e.startOnNewLine(a);
     if (!i) {
      e.setEmitFlags(a, 1536);
     }
     return a;
    }
    function le(t, n, r) {
     return e.setTextRange(e.createAssignment(e.createPropertyAccess(e.createIdentifier("exports"), e.getSynthesizedClone(t)), n), r);
    }
    function fe(e) {
     switch (e.kind) {
     case 84:
     case 79:
      return undefined;
     }
     return e;
    }
    function de(t, n, r) {
     if (n.kind === 277) {
      b = n;
      x = v[e.getOriginalNodeId(b)];
      k = [];
      h(t, n, r);
      b = undefined;
      x = undefined;
      k = undefined;
     } else {
      h(t, n, r);
     }
    }
    function pe(t, n) {
     n = g(t, n);
     if (n.id && k[n.id]) {
      return n;
     }
     if (t === 1) {
      return _e(n);
     } else if (e.isShorthandPropertyAssignment(n)) {
      return me(n);
     }
     return n;
    }
    function me(t) {
     var n = t.name;
     var r = ge(n);
     if (r !== n) {
      if (t.objectAssignmentInitializer) {
       var i = e.createAssignment(r, t.objectAssignmentInitializer);
       return e.setTextRange(e.createPropertyAssignment(n, i), t);
      }
      return e.setTextRange(e.createPropertyAssignment(n, r), t);
     }
     return t;
    }
    function _e(e) {
     switch (e.kind) {
     case 71:
      return ge(e);

     case 202:
      return he(e);

     case 201:
     case 200:
      return ve(e);
     }
     return e;
    }
    function ge(t) {
     if (e.getEmitFlags(t) & 4096) {
      var n = e.getExternalHelpersModuleName(b);
      if (n) {
       return e.createPropertyAccess(n, t);
      }
      return t;
     }
     if (!e.isGeneratedIdentifier(t) && !e.isLocalName(t)) {
      var r = d.getReferencedExportContainer(t, e.isExportName(t));
      if (r && r.kind === 277) {
       return e.setTextRange(e.createPropertyAccess(e.createIdentifier("exports"), e.getSynthesizedClone(t)), t);
      }
      var i = d.getReferencedImportDeclaration(t);
      if (i) {
       if (e.isImportClause(i)) {
        return e.setTextRange(e.createPropertyAccess(e.getGeneratedNameForNode(i.parent), e.createIdentifier("default")), t);
       } else if (e.isImportSpecifier(i)) {
        var a = i.propertyName || i.name;
        return e.setTextRange(e.createPropertyAccess(e.getGeneratedNameForNode(i.parent.parent.parent), e.getSynthesizedClone(a)), t);
       }
      }
     }
     return t;
    }
    function he(t) {
     if (e.isAssignmentOperator(t.operatorToken.kind) && e.isIdentifier(t.left) && !e.isGeneratedIdentifier(t.left) && !e.isLocalName(t.left) && !e.isDeclarationNameOfEnumOrNamespace(t.left)) {
      var n = ye(t.left);
      if (n) {
       var r = t;
       for (var i = 0, a = n; i < a.length; i++) {
        var o = a[i];
        k[e.getNodeId(r)] = true;
        r = le(o, r, t);
       }
       return r;
      }
     }
     return t;
    }
    function ve(t) {
     if ((t.operator === 43 || t.operator === 44) && e.isIdentifier(t.operand) && !e.isGeneratedIdentifier(t.operand) && !e.isLocalName(t.operand) && !e.isDeclarationNameOfEnumOrNamespace(t.operand)) {
      var n = ye(t.operand);
      if (n) {
       var r = t.kind === 201 ? e.setTextRange(e.createBinary(t.operand, e.createToken(t.operator === 43 ? 59 : 60), e.createLiteral(1)), t) : t;
       for (var i = 0, a = n; i < a.length; i++) {
        var o = a[i];
        k[e.getNodeId(r)] = true;
        r = le(o, r);
       }
       return r;
      }
     }
     return t;
    }
    function ye(t) {
     if (!e.isGeneratedIdentifier(t)) {
      var n = d.getReferencedImportDeclaration(t) || d.getReferencedValueDeclaration(t);
      if (n) {
       return x && x.exportedBindings[e.getOriginalNodeId(n)];
      }
     }
    }
   }
   e.transformModule = t;
   var n = {
    name: "typescript:export-star",
    scoped: true,
    text: "\n            function __export(m) {\n                for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n            }"
   };
   function r(t, n) {
    var r = t.getCompilerOptions();
    return r.importHelpers ? e.createCall(e.getHelperName("__exportStar"), undefined, [ n, e.createIdentifier("exports") ]) : e.createCall(e.createIdentifier("__export"), undefined, [ n ]);
   }
   var i = {
    name: "typescript:dynamicimport-sync-require",
    scoped: true,
    text: '\n            var __syncRequire = typeof module === "object" && typeof module.exports === "object";'
   };
   var a = {
    name: "typescript:commonjsimportstar",
    scoped: false,
    text: '\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result["default"] = mod;\n    return result;\n};'
   };
   var o = {
    name: "typescript:commonjsimportdefault",
    scoped: false,
    text: '\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};'
   };
  })(s || (s = {}));
  var s;
  (function(e) {
   function t(t) {
    var n = t.startLexicalEnvironment, r = t.endLexicalEnvironment, i = t.hoistVariableDeclaration;
    var a = t.getCompilerOptions();
    var o = t.getEmitResolver();
    var s = t.getEmitHost();
    var c = t.onSubstituteNode;
    var u = t.onEmitNode;
    t.onSubstituteNode = xe;
    t.onEmitNode = be;
    t.enableSubstitution(71);
    t.enableSubstitution(274);
    t.enableSubstitution(202);
    t.enableSubstitution(200);
    t.enableSubstitution(201);
    t.enableEmitNotification(277);
    var l = [];
    var f = [];
    var d = [];
    var p = [];
    var m;
    var _;
    var g;
    var h;
    var v;
    var y;
    var b;
    return e.chainBundle(x);
    function x(t) {
     if (t.isDeclarationFile || !(e.isEffectiveExternalModule(t, a) || t.transformFlags & 67108864)) {
      return t;
     }
     var n = e.getOriginalNodeId(t);
     m = t;
     y = t;
     _ = l[n] = e.collectExternalModuleInfo(t, o, a);
     g = e.createUniqueName("exports");
     d[n] = g;
     h = e.createUniqueName("context");
     var r = k(_.externalImports);
     var i = S(t, r);
     var c = e.createFunctionExpression(undefined, undefined, undefined, undefined, [ e.createParameter(undefined, undefined, undefined, g), e.createParameter(undefined, undefined, undefined, h) ], undefined, i);
     var u = e.tryGetModuleNameFromFile(t, s, a);
     var f = e.createArrayLiteral(e.map(r, function(e) {
      return e.name;
     }));
     var x = e.setEmitFlags(e.updateSourceFileNode(t, e.setTextRange(e.createNodeArray([ e.createExpressionStatement(e.createCall(e.createPropertyAccess(e.createIdentifier("System"), "register"), undefined, u ? [ u, f, c ] : [ f, c ])) ]), t.statements)), 1024);
     if (!(a.outFile || a.out)) {
      e.moveEmitHelpers(x, i, function(e) {
       return !e.scoped;
      });
     }
     if (b) {
      p[n] = b;
      b = undefined;
     }
     m = undefined;
     _ = undefined;
     g = undefined;
     h = undefined;
     v = undefined;
     y = undefined;
     return e.aggregateTransformFlags(x);
    }
    function k(t) {
     var n = e.createMap();
     var r = [];
     for (var i = 0, c = t; i < c.length; i++) {
      var u = c[i];
      var l = e.getExternalModuleNameLiteral(u, m, s, o, a);
      if (l) {
       var f = l.text;
       var d = n.get(f);
       if (d !== undefined) {
        r[d].externalImports.push(u);
       } else {
        n.set(f, r.length);
        r.push({
         name: l,
         externalImports: [ u ]
        });
       }
      }
     }
     return r;
    }
    function S(t, i) {
     var o = [];
     n();
     var s = e.getStrictOptionValue(a, "alwaysStrict") || !a.noImplicitUseStrict && e.isExternalModule(m);
     var c = e.addPrologue(o, t.statements, s, T);
     o.push(e.createVariableStatement(undefined, e.createVariableDeclarationList([ e.createVariableDeclaration("__moduleName", undefined, e.createLogicalAnd(h, e.createPropertyAccess(h, "id"))) ])));
     e.visitNode(_.externalHelpersImportDeclaration, T, e.isStatement);
     var u = e.visitNodes(t.statements, T, e.isStatement, c);
     e.addRange(o, v);
     e.addStatementsAfterPrologue(o, r());
     var l = w(o);
     var f = e.createObjectLiteral([ e.createPropertyAssignment("setters", D(l, i)), e.createPropertyAssignment("execute", e.createFunctionExpression(undefined, undefined, undefined, undefined, [], undefined, e.createBlock(u, true))) ]);
     f.multiLine = true;
     o.push(e.createReturn(f));
     return e.createBlock(o, true);
    }
    function w(t) {
     if (!_.hasExportStarsToExportValues) {
      return;
     }
     if (!_.exportedNames && _.exportSpecifiers.size === 0) {
      var n = false;
      for (var r = 0, i = _.externalImports; r < i.length; r++) {
       var a = i[r];
       if (a.kind === 253 && a.exportClause) {
        n = true;
        break;
       }
      }
      if (!n) {
       var o = C(undefined);
       t.push(o);
       return o.name;
      }
     }
     var s = [];
     if (_.exportedNames) {
      for (var c = 0, u = _.exportedNames; c < u.length; c++) {
       var l = u[c];
       if (l.escapedText === "default") {
        continue;
       }
       s.push(e.createPropertyAssignment(e.createLiteral(l), e.createTrue()));
      }
     }
     for (var f = 0, d = _.externalImports; f < d.length; f++) {
      var a = d[f];
      if (a.kind !== 253) {
       continue;
      }
      if (!a.exportClause) {
       continue;
      }
      for (var p = 0, m = a.exportClause.elements; p < m.length; p++) {
       var g = m[p];
       s.push(e.createPropertyAssignment(e.createLiteral(e.idText(g.name || g.propertyName)), e.createTrue()));
      }
     }
     var h = e.createUniqueName("exportedNames");
     t.push(e.createVariableStatement(undefined, e.createVariableDeclarationList([ e.createVariableDeclaration(h, undefined, e.createObjectLiteral(s, true)) ])));
     var v = C(h);
     t.push(v);
     return v.name;
    }
    function C(t) {
     var n = e.createUniqueName("exportStar");
     var r = e.createIdentifier("m");
     var i = e.createIdentifier("n");
     var a = e.createIdentifier("exports");
     var o = e.createStrictInequality(i, e.createLiteral("default"));
     if (t) {
      o = e.createLogicalAnd(o, e.createLogicalNot(e.createCall(e.createPropertyAccess(t, "hasOwnProperty"), undefined, [ i ])));
     }
     return e.createFunctionDeclaration(undefined, undefined, undefined, n, undefined, [ e.createParameter(undefined, undefined, undefined, r) ], undefined, e.createBlock([ e.createVariableStatement(undefined, e.createVariableDeclarationList([ e.createVariableDeclaration(a, undefined, e.createObjectLiteral([])) ])), e.createForIn(e.createVariableDeclarationList([ e.createVariableDeclaration(i, undefined) ]), r, e.createBlock([ e.setEmitFlags(e.createIf(o, e.createExpressionStatement(e.createAssignment(e.createElementAccess(a, i), e.createElementAccess(r, i)))), 1) ])), e.createExpressionStatement(e.createCall(g, undefined, [ a ])) ], true));
    }
    function D(t, n) {
     var r = [];
     for (var i = 0, a = n; i < a.length; i++) {
      var o = a[i];
      var s = e.forEach(o.externalImports, function(t) {
       return e.getLocalNameForExternalImport(t, m);
      });
      var c = s ? e.getGeneratedNameForNode(s) : e.createUniqueName("");
      var u = [];
      for (var l = 0, f = o.externalImports; l < f.length; l++) {
       var d = f[l];
       var p = e.getLocalNameForExternalImport(d, m);
       switch (d.kind) {
       case 247:
        if (!d.importClause) {
         break;
        }

       case 246:
        e.Debug.assert(p !== undefined);
        u.push(e.createExpressionStatement(e.createAssignment(p, c)));
        break;

       case 253:
        e.Debug.assert(p !== undefined);
        if (d.exportClause) {
         var _ = [];
         for (var h = 0, v = d.exportClause.elements; h < v.length; h++) {
          var y = v[h];
          _.push(e.createPropertyAssignment(e.createLiteral(e.idText(y.name)), e.createElementAccess(c, e.createLiteral(e.idText(y.propertyName || y.name)))));
         }
         u.push(e.createExpressionStatement(e.createCall(g, undefined, [ e.createObjectLiteral(_, true) ])));
        } else {
         u.push(e.createExpressionStatement(e.createCall(t, undefined, [ c ])));
        }
        break;
       }
      }
      r.push(e.createFunctionExpression(undefined, undefined, undefined, undefined, [ e.createParameter(undefined, undefined, undefined, c) ], undefined, e.createBlock(u, true)));
     }
     return e.createArrayLiteral(r, true);
    }
    function T(e) {
     switch (e.kind) {
     case 247:
      return E(e);

     case 246:
      return N(e);

     case 253:
      return undefined;

     case 252:
      return A(e);

     default:
      return Y(e);
     }
    }
    function E(t) {
     var n;
     if (t.importClause) {
      i(e.getLocalNameForExternalImport(t, m));
     }
     if (q(t)) {
      var r = e.getOriginalNodeId(t);
      f[r] = J(f[r], t);
     } else {
      n = J(n, t);
     }
     return e.singleOrMany(n);
    }
    function N(t) {
     e.Debug.assert(e.isExternalModuleImportEqualsDeclaration(t), "import= for internal module references should be handled in an earlier transformer.");
     var n;
     i(e.getLocalNameForExternalImport(t, m));
     if (q(t)) {
      var r = e.getOriginalNodeId(t);
      f[r] = K(f[r], t);
     } else {
      n = K(n, t);
     }
     return e.singleOrMany(n);
    }
    function A(t) {
     if (t.isExportEquals) {
      return undefined;
     }
     var n = e.visitNode(t.expression, _e, e.isExpression);
     var r = t.original;
     if (r && q(r)) {
      var i = e.getOriginalNodeId(t);
      f[i] = $(f[i], e.createIdentifier("default"), n, true);
     } else {
      return X(e.createIdentifier("default"), n, true);
     }
    }
    function F(n) {
     if (e.hasModifier(n, 1)) {
      v = e.append(v, e.updateFunctionDeclaration(n, n.decorators, e.visitNodes(n.modifiers, ye, e.isModifier), n.asteriskToken, e.getDeclarationName(n, true, true), undefined, e.visitNodes(n.parameters, _e, e.isParameterDeclaration), undefined, e.visitNode(n.body, _e, e.isBlock)));
     } else {
      v = e.append(v, e.visitEachChild(n, _e, t));
     }
     if (q(n)) {
      var r = e.getOriginalNodeId(n);
      f[r] = H(f[r], n);
     } else {
      v = H(v, n);
     }
     return undefined;
    }
    function P(t) {
     var n;
     var r = e.getLocalName(t);
     i(r);
     n = e.append(n, e.setTextRange(e.createExpressionStatement(e.createAssignment(r, e.setTextRange(e.createClassExpression(undefined, t.name, undefined, e.visitNodes(t.heritageClauses, _e, e.isHeritageClause), e.visitNodes(t.members, _e, e.isClassElement)), t))), t));
     if (q(t)) {
      var a = e.getOriginalNodeId(t);
      f[a] = H(f[a], t);
     } else {
      n = H(n, t);
     }
     return e.singleOrMany(n);
    }
    function I(t) {
     if (!M(t.declarationList)) {
      return e.visitNode(t, _e, e.isStatement);
     }
     var n;
     var r = e.hasModifier(t, 1);
     var i = q(t);
     for (var a = 0, o = t.declarationList.declarations; a < o.length; a++) {
      var s = o[a];
      if (s.initializer) {
       n = e.append(n, L(s, r && !i));
      } else {
       O(s);
      }
     }
     var c;
     if (n) {
      c = e.append(c, e.setTextRange(e.createExpressionStatement(e.inlineExpressions(n)), t));
     }
     if (i) {
      var u = e.getOriginalNodeId(t);
      f[u] = V(f[u], t, r);
     } else {
      c = V(c, t, false);
     }
     return e.singleOrMany(c);
    }
    function O(t) {
     if (e.isBindingPattern(t.name)) {
      for (var n = 0, r = t.name.elements; n < r.length; n++) {
       var a = r[n];
       if (!e.isOmittedExpression(a)) {
        O(a);
       }
      }
     } else {
      i(e.getSynthesizedClone(t.name));
     }
    }
    function M(t) {
     return (e.getEmitFlags(t) & 2097152) === 0 && (y.kind === 277 || (e.getOriginalNode(t).flags & 3) === 0);
    }
    function L(n, r) {
     var i = r ? R : B;
     return e.isBindingPattern(n.name) ? e.flattenDestructuringAssignment(n, _e, t, 0, false, i) : n.initializer ? i(n.name, e.visitNode(n.initializer, _e, e.isExpression)) : n.name;
    }
    function R(e, t, n) {
     return z(e, t, n, true);
    }
    function B(e, t, n) {
     return z(e, t, n, false);
    }
    function z(t, n, r, a) {
     i(e.getSynthesizedClone(t));
     return a ? Q(t, Ne(e.setTextRange(e.createAssignment(t, n), r))) : Ne(e.setTextRange(e.createAssignment(t, n), r));
    }
    function j(t) {
     if (q(t) && t.original.kind === 217) {
      var n = e.getOriginalNodeId(t);
      var r = e.hasModifier(t.original, 1);
      f[n] = V(f[n], t.original, r);
     }
     return t;
    }
    function q(t) {
     return (e.getEmitFlags(t) & 4194304) !== 0;
    }
    function U(t) {
     var n = e.getOriginalNodeId(t);
     var r = f[n];
     if (r) {
      delete f[n];
      return e.append(r, t);
     } else {
      var i = e.getOriginalNode(t);
      if (e.isModuleOrEnumDeclaration(i)) {
       return e.append(G(r, i), t);
      }
     }
     return t;
    }
    function J(e, t) {
     if (_.exportEquals) {
      return e;
     }
     var n = t.importClause;
     if (!n) {
      return e;
     }
     if (n.name) {
      e = G(e, n);
     }
     var r = n.namedBindings;
     if (r) {
      switch (r.kind) {
      case 249:
       e = G(e, r);
       break;

      case 250:
       for (var i = 0, a = r.elements; i < a.length; i++) {
        var o = a[i];
        e = G(e, o);
       }
       break;
      }
     }
     return e;
    }
    function K(e, t) {
     if (_.exportEquals) {
      return e;
     }
     return G(e, t);
    }
    function V(e, t, n) {
     if (_.exportEquals) {
      return e;
     }
     for (var r = 0, i = t.declarationList.declarations; r < i.length; r++) {
      var a = i[r];
      if (a.initializer || n) {
       e = W(e, a, n);
      }
     }
     return e;
    }
    function W(t, n, r) {
     if (_.exportEquals) {
      return t;
     }
     if (e.isBindingPattern(n.name)) {
      for (var i = 0, a = n.name.elements; i < a.length; i++) {
       var o = a[i];
       if (!e.isOmittedExpression(o)) {
        t = W(t, o, r);
       }
      }
     } else if (!e.isGeneratedIdentifier(n.name)) {
      var s = void 0;
      if (r) {
       t = $(t, n.name, e.getLocalName(n));
       s = e.idText(n.name);
      }
      t = G(t, n, s);
     }
     return t;
    }
    function H(t, n) {
     if (_.exportEquals) {
      return t;
     }
     var r;
     if (e.hasModifier(n, 1)) {
      var i = e.hasModifier(n, 512) ? e.createLiteral("default") : n.name;
      t = $(t, i, e.getLocalName(n));
      r = e.getTextOfIdentifierOrLiteral(i);
     }
     if (n.name) {
      t = G(t, n, r);
     }
     return t;
    }
    function G(t, n, r) {
     if (_.exportEquals) {
      return t;
     }
     var i = e.getDeclarationName(n);
     var a = _.exportSpecifiers.get(e.idText(i));
     if (a) {
      for (var o = 0, s = a; o < s.length; o++) {
       var c = s[o];
       if (c.name.escapedText !== r) {
        t = $(t, c.name, i);
       }
      }
     }
     return t;
    }
    function $(t, n, r, i) {
     t = e.append(t, X(n, r, i));
     return t;
    }
    function X(t, n, r) {
     var i = e.createExpressionStatement(Q(t, n));
     e.startOnNewLine(i);
     if (!r) {
      e.setEmitFlags(i, 1536);
     }
     return i;
    }
    function Q(t, n) {
     var r = e.isIdentifier(t) ? e.createLiteral(t) : t;
     e.setEmitFlags(n, e.getEmitFlags(n) | 1536);
     return e.setCommentRange(e.createCall(g, undefined, [ r, n ]), n);
    }
    function Y(e) {
     switch (e.kind) {
     case 217:
      return I(e);

     case 237:
      return F(e);

     case 238:
      return P(e);

     case 223:
      return Z(e);

     case 224:
      return ee(e);

     case 225:
      return te(e);

     case 221:
      return ie(e);

     case 222:
      return ae(e);

     case 231:
      return oe(e);

     case 229:
      return se(e);

     case 230:
      return ce(e);

     case 244:
      return ue(e);

     case 269:
      return le(e);

     case 270:
      return fe(e);

     case 233:
      return de(e);

     case 272:
      return pe(e);

     case 216:
      return me(e);

     case 307:
      return j(e);

     case 308:
      return U(e);

     default:
      return _e(e);
     }
    }
    function Z(t) {
     var n = y;
     y = t;
     t = e.updateFor(t, t.initializer && re(t.initializer), e.visitNode(t.condition, _e, e.isExpression), e.visitNode(t.incrementor, _e, e.isExpression), e.visitNode(t.statement, Y, e.isStatement));
     y = n;
     return t;
    }
    function ee(t) {
     var n = y;
     y = t;
     t = e.updateForIn(t, re(t.initializer), e.visitNode(t.expression, _e, e.isExpression), e.visitNode(t.statement, Y, e.isStatement, e.liftToBlock));
     y = n;
     return t;
    }
    function te(t) {
     var n = y;
     y = t;
     t = e.updateForOf(t, t.awaitModifier, re(t.initializer), e.visitNode(t.expression, _e, e.isExpression), e.visitNode(t.statement, Y, e.isStatement, e.liftToBlock));
     y = n;
     return t;
    }
    function ne(t) {
     return e.isVariableDeclarationList(t) && M(t);
    }
    function re(n) {
     if (ne(n)) {
      var r = void 0;
      for (var i = 0, a = n.declarations; i < a.length; i++) {
       var o = a[i];
       r = e.append(r, L(o, false));
       if (!o.initializer) {
        O(o);
       }
      }
      return r ? e.inlineExpressions(r) : e.createOmittedExpression();
     } else {
      return e.visitEachChild(n, Y, t);
     }
    }
    function ie(t) {
     return e.updateDo(t, e.visitNode(t.statement, Y, e.isStatement, e.liftToBlock), e.visitNode(t.expression, _e, e.isExpression));
    }
    function ae(t) {
     return e.updateWhile(t, e.visitNode(t.expression, _e, e.isExpression), e.visitNode(t.statement, Y, e.isStatement, e.liftToBlock));
    }
    function oe(t) {
     return e.updateLabel(t, t.label, e.visitNode(t.statement, Y, e.isStatement, e.liftToBlock));
    }
    function se(t) {
     return e.updateWith(t, e.visitNode(t.expression, _e, e.isExpression), e.visitNode(t.statement, Y, e.isStatement, e.liftToBlock));
    }
    function ce(t) {
     return e.updateSwitch(t, e.visitNode(t.expression, _e, e.isExpression), e.visitNode(t.caseBlock, Y, e.isCaseBlock));
    }
    function ue(t) {
     var n = y;
     y = t;
     t = e.updateCaseBlock(t, e.visitNodes(t.clauses, Y, e.isCaseOrDefaultClause));
     y = n;
     return t;
    }
    function le(t) {
     return e.updateCaseClause(t, e.visitNode(t.expression, _e, e.isExpression), e.visitNodes(t.statements, Y, e.isStatement));
    }
    function fe(n) {
     return e.visitEachChild(n, Y, t);
    }
    function de(n) {
     return e.visitEachChild(n, Y, t);
    }
    function pe(t) {
     var n = y;
     y = t;
     t = e.updateCatchClause(t, t.variableDeclaration, e.visitNode(t.block, Y, e.isBlock));
     y = n;
     return t;
    }
    function me(n) {
     var r = y;
     y = n;
     n = e.visitEachChild(n, Y, t);
     y = r;
     return n;
    }
    function _e(n) {
     if (n.transformFlags & 1024 && n.kind === 202) {
      return he(n);
     } else if (e.isImportCall(n)) {
      return ge(n);
     } else if (n.transformFlags & 2048 || n.transformFlags & 67108864) {
      return e.visitEachChild(n, _e, t);
     } else {
      return n;
     }
    }
    function ge(t) {
     return e.createCall(e.createPropertyAccess(h, e.createIdentifier("import")), undefined, e.some(t.arguments) ? [ e.visitNode(t.arguments[0], _e) ] : []);
    }
    function he(n) {
     if (ve(n.left)) {
      return e.flattenDestructuringAssignment(n, _e, t, 0, true);
     }
     return e.visitEachChild(n, _e, t);
    }
    function ve(t) {
     if (e.isAssignmentExpression(t, true)) {
      return ve(t.left);
     } else if (e.isSpreadElement(t)) {
      return ve(t.expression);
     } else if (e.isObjectLiteralExpression(t)) {
      return e.some(t.properties, ve);
     } else if (e.isArrayLiteralExpression(t)) {
      return e.some(t.elements, ve);
     } else if (e.isShorthandPropertyAssignment(t)) {
      return ve(t.name);
     } else if (e.isPropertyAssignment(t)) {
      return ve(t.initializer);
     } else if (e.isIdentifier(t)) {
      var n = o.getReferencedExportContainer(t);
      return n !== undefined && n.kind === 277;
     } else {
      return false;
     }
    }
    function ye(e) {
     switch (e.kind) {
     case 84:
     case 79:
      return undefined;
     }
     return e;
    }
    function be(t, n, r) {
     if (n.kind === 277) {
      var i = e.getOriginalNodeId(n);
      m = n;
      _ = l[i];
      g = d[i];
      b = p[i];
      if (b) {
       delete p[i];
      }
      u(t, n, r);
      m = undefined;
      _ = undefined;
      g = undefined;
      b = undefined;
     } else {
      u(t, n, r);
     }
    }
    function xe(e, t) {
     t = c(e, t);
     if (Ae(t)) {
      return t;
     }
     if (e === 1) {
      return we(t);
     } else if (e === 4) {
      return ke(t);
     }
     return t;
    }
    function ke(e) {
     switch (e.kind) {
     case 274:
      return Se(e);
     }
     return e;
    }
    function Se(t) {
     var n = t.name;
     if (!e.isGeneratedIdentifier(n) && !e.isLocalName(n)) {
      var r = o.getReferencedImportDeclaration(n);
      if (r) {
       if (e.isImportClause(r)) {
        return e.setTextRange(e.createPropertyAssignment(e.getSynthesizedClone(n), e.createPropertyAccess(e.getGeneratedNameForNode(r.parent), e.createIdentifier("default"))), t);
       } else if (e.isImportSpecifier(r)) {
        return e.setTextRange(e.createPropertyAssignment(e.getSynthesizedClone(n), e.createPropertyAccess(e.getGeneratedNameForNode(r.parent.parent.parent), e.getSynthesizedClone(r.propertyName || r.name))), t);
       }
      }
     }
     return t;
    }
    function we(e) {
     switch (e.kind) {
     case 71:
      return Ce(e);

     case 202:
      return De(e);

     case 200:
     case 201:
      return Te(e);
     }
     return e;
    }
    function Ce(t) {
     if (e.getEmitFlags(t) & 4096) {
      var n = e.getExternalHelpersModuleName(m);
      if (n) {
       return e.createPropertyAccess(n, t);
      }
      return t;
     }
     if (!e.isGeneratedIdentifier(t) && !e.isLocalName(t)) {
      var r = o.getReferencedImportDeclaration(t);
      if (r) {
       if (e.isImportClause(r)) {
        return e.setTextRange(e.createPropertyAccess(e.getGeneratedNameForNode(r.parent), e.createIdentifier("default")), t);
       } else if (e.isImportSpecifier(r)) {
        return e.setTextRange(e.createPropertyAccess(e.getGeneratedNameForNode(r.parent.parent.parent), e.getSynthesizedClone(r.propertyName || r.name)), t);
       }
      }
     }
     return t;
    }
    function De(t) {
     if (e.isAssignmentOperator(t.operatorToken.kind) && e.isIdentifier(t.left) && !e.isGeneratedIdentifier(t.left) && !e.isLocalName(t.left) && !e.isDeclarationNameOfEnumOrNamespace(t.left)) {
      var n = Ee(t.left);
      if (n) {
       var r = t;
       for (var i = 0, a = n; i < a.length; i++) {
        var o = a[i];
        r = Q(o, Ne(r));
       }
       return r;
      }
     }
     return t;
    }
    function Te(t) {
     if ((t.operator === 43 || t.operator === 44) && e.isIdentifier(t.operand) && !e.isGeneratedIdentifier(t.operand) && !e.isLocalName(t.operand) && !e.isDeclarationNameOfEnumOrNamespace(t.operand)) {
      var n = Ee(t.operand);
      if (n) {
       var r = t.kind === 201 ? e.setTextRange(e.createPrefix(t.operator, t.operand), t) : t;
       for (var i = 0, a = n; i < a.length; i++) {
        var o = a[i];
        r = Q(o, Ne(r));
       }
       if (t.kind === 201) {
        r = t.operator === 43 ? e.createSubtract(Ne(r), e.createLiteral(1)) : e.createAdd(Ne(r), e.createLiteral(1));
       }
       return r;
      }
     }
     return t;
    }
    function Ee(t) {
     var n;
     if (!e.isGeneratedIdentifier(t)) {
      var r = o.getReferencedImportDeclaration(t) || o.getReferencedValueDeclaration(t);
      if (r) {
       var i = o.getReferencedExportContainer(t, false);
       if (i && i.kind === 277) {
        n = e.append(n, e.getDeclarationName(r));
       }
       n = e.addRange(n, _ && _.exportedBindings[e.getOriginalNodeId(r)]);
      }
     }
     return n;
    }
    function Ne(t) {
     if (b === undefined) b = [];
     b[e.getNodeId(t)] = true;
     return t;
    }
    function Ae(e) {
     return b && e.id && b[e.id];
    }
   }
   e.transformSystemModule = t;
  })(s || (s = {}));
  var s;
  (function(e) {
   function t(t) {
    var n = t.getCompilerOptions();
    var r = t.onEmitNode;
    var i = t.onSubstituteNode;
    t.onEmitNode = u;
    t.onSubstituteNode = l;
    t.enableEmitNotification(277);
    t.enableSubstitution(71);
    var a;
    return e.chainBundle(o);
    function o(r) {
     if (r.isDeclarationFile) {
      return r;
     }
     if (e.isExternalModule(r) || n.isolatedModules) {
      var i = e.getOrCreateExternalHelpersModuleNameIfNeeded(r, n);
      if (i) {
       var a = [];
       var o = e.addPrologue(a, r.statements);
       var c = e.createImportDeclaration(undefined, undefined, e.createImportClause(undefined, e.createNamespaceImport(i)), e.createLiteral(e.externalHelpersModuleNameText));
       e.addEmitFlags(c, 67108864);
       e.append(a, c);
       e.addRange(a, e.visitNodes(r.statements, s, e.isStatement, o));
       return e.updateSourceFileNode(r, e.setTextRange(e.createNodeArray(a), r.statements));
      } else {
       return e.visitEachChild(r, s, t);
      }
     }
     return r;
    }
    function s(e) {
     switch (e.kind) {
     case 246:
      return undefined;

     case 252:
      return c(e);
     }
     return e;
    }
    function c(e) {
     return e.isExportEquals ? undefined : e;
    }
    function u(t, n, i) {
     if (e.isSourceFile(n)) {
      a = n;
      r(t, n, i);
      a = undefined;
     } else {
      r(t, n, i);
     }
    }
    function l(t, n) {
     n = i(t, n);
     if (e.isIdentifier(n) && t === 1) {
      return f(n);
     }
     return n;
    }
    function f(t) {
     if (e.getEmitFlags(t) & 4096) {
      var n = e.getExternalHelpersModuleName(a);
      if (n) {
       return e.createPropertyAccess(n, t);
      }
     }
     return t;
    }
   }
   e.transformES2015Module = t;
  })(s || (s = {}));
  var s;
  (function(e) {
   function t(t) {
    return e.isVariableDeclaration(t) || e.isPropertyDeclaration(t) || e.isPropertySignature(t) || e.isBindingElement(t) || e.isSetAccessor(t) || e.isGetAccessor(t) || e.isConstructSignatureDeclaration(t) || e.isCallSignatureDeclaration(t) || e.isMethodDeclaration(t) || e.isMethodSignature(t) || e.isFunctionDeclaration(t) || e.isParameter(t) || e.isTypeParameterDeclaration(t) || e.isExpressionWithTypeArguments(t) || e.isImportEqualsDeclaration(t) || e.isTypeAliasDeclaration(t) || e.isConstructorDeclaration(t) || e.isIndexSignatureDeclaration(t);
   }
   e.canProduceDiagnostics = t;
   function n(t) {
    if (e.isSetAccessor(t) || e.isGetAccessor(t)) {
     return n;
    } else if (e.isMethodSignature(t) || e.isMethodDeclaration(t)) {
     return a;
    } else {
     return r(t);
    }
    function n(e) {
     var n = i(e);
     return n !== undefined ? {
      diagnosticMessage: n,
      errorNode: t,
      typeName: t.name
     } : undefined;
    }
    function i(n) {
     if (e.hasModifier(t, 32)) {
      return n.errorModuleName ? n.accessibility === 2 ? e.Diagnostics.Public_static_property_0_of_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named : e.Diagnostics.Public_static_property_0_of_exported_class_has_or_is_using_name_1_from_private_module_2 : e.Diagnostics.Public_static_property_0_of_exported_class_has_or_is_using_private_name_1;
     } else if (t.parent.kind === 238) {
      return n.errorModuleName ? n.accessibility === 2 ? e.Diagnostics.Public_property_0_of_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named : e.Diagnostics.Public_property_0_of_exported_class_has_or_is_using_name_1_from_private_module_2 : e.Diagnostics.Public_property_0_of_exported_class_has_or_is_using_private_name_1;
     } else {
      return n.errorModuleName ? e.Diagnostics.Property_0_of_exported_interface_has_or_is_using_name_1_from_private_module_2 : e.Diagnostics.Property_0_of_exported_interface_has_or_is_using_private_name_1;
     }
    }
    function a(e) {
     var n = o(e);
     return n !== undefined ? {
      diagnosticMessage: n,
      errorNode: t,
      typeName: t.name
     } : undefined;
    }
    function o(n) {
     if (e.hasModifier(t, 32)) {
      return n.errorModuleName ? n.accessibility === 2 ? e.Diagnostics.Public_static_method_0_of_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named : e.Diagnostics.Public_static_method_0_of_exported_class_has_or_is_using_name_1_from_private_module_2 : e.Diagnostics.Public_static_method_0_of_exported_class_has_or_is_using_private_name_1;
     } else if (t.parent.kind === 238) {
      return n.errorModuleName ? n.accessibility === 2 ? e.Diagnostics.Public_method_0_of_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named : e.Diagnostics.Public_method_0_of_exported_class_has_or_is_using_name_1_from_private_module_2 : e.Diagnostics.Public_method_0_of_exported_class_has_or_is_using_private_name_1;
     } else {
      return n.errorModuleName ? e.Diagnostics.Method_0_of_exported_interface_has_or_is_using_name_1_from_private_module_2 : e.Diagnostics.Method_0_of_exported_interface_has_or_is_using_private_name_1;
     }
    }
   }
   e.createGetSymbolAccessibilityDiagnosticForNodeName = n;
   function r(t) {
    if (e.isVariableDeclaration(t) || e.isPropertyDeclaration(t) || e.isPropertySignature(t) || e.isBindingElement(t) || e.isConstructorDeclaration(t)) {
     return r;
    } else if (e.isSetAccessor(t) || e.isGetAccessor(t)) {
     return i;
    } else if (e.isConstructSignatureDeclaration(t) || e.isCallSignatureDeclaration(t) || e.isMethodDeclaration(t) || e.isMethodSignature(t) || e.isFunctionDeclaration(t) || e.isIndexSignatureDeclaration(t)) {
     return a;
    } else if (e.isParameter(t)) {
     if (e.isParameterPropertyDeclaration(t) && e.hasModifier(t.parent, 8)) {
      return r;
     }
     return o;
    } else if (e.isTypeParameterDeclaration(t)) {
     return c;
    } else if (e.isExpressionWithTypeArguments(t)) {
     return u;
    } else if (e.isImportEqualsDeclaration(t)) {
     return l;
    } else if (e.isTypeAliasDeclaration(t)) {
     return f;
    } else {
     return e.Debug.assertNever(t, "Attempted to set a declaration diagnostic context for unhandled node kind: " + e.SyntaxKind[t.kind]);
    }
    function n(n) {
     if (t.kind === 235 || t.kind === 184) {
      return n.errorModuleName ? n.accessibility === 2 ? e.Diagnostics.Exported_variable_0_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named : e.Diagnostics.Exported_variable_0_has_or_is_using_name_1_from_private_module_2 : e.Diagnostics.Exported_variable_0_has_or_is_using_private_name_1;
     } else if (t.kind === 152 || t.kind === 151 || t.kind === 149 && e.hasModifier(t.parent, 8)) {
      if (e.hasModifier(t, 32)) {
       return n.errorModuleName ? n.accessibility === 2 ? e.Diagnostics.Public_static_property_0_of_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named : e.Diagnostics.Public_static_property_0_of_exported_class_has_or_is_using_name_1_from_private_module_2 : e.Diagnostics.Public_static_property_0_of_exported_class_has_or_is_using_private_name_1;
      } else if (t.parent.kind === 238 || t.kind === 149) {
       return n.errorModuleName ? n.accessibility === 2 ? e.Diagnostics.Public_property_0_of_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named : e.Diagnostics.Public_property_0_of_exported_class_has_or_is_using_name_1_from_private_module_2 : e.Diagnostics.Public_property_0_of_exported_class_has_or_is_using_private_name_1;
      } else {
       return n.errorModuleName ? e.Diagnostics.Property_0_of_exported_interface_has_or_is_using_name_1_from_private_module_2 : e.Diagnostics.Property_0_of_exported_interface_has_or_is_using_private_name_1;
      }
     }
    }
    function r(e) {
     var r = n(e);
     return r !== undefined ? {
      diagnosticMessage: r,
      errorNode: t,
      typeName: t.name
     } : undefined;
    }
    function i(n) {
     var r;
     if (t.kind === 157) {
      if (e.hasModifier(t, 32)) {
       r = n.errorModuleName ? e.Diagnostics.Parameter_type_of_public_static_setter_0_from_exported_class_has_or_is_using_name_1_from_private_module_2 : e.Diagnostics.Parameter_type_of_public_static_setter_0_from_exported_class_has_or_is_using_private_name_1;
      } else {
       r = n.errorModuleName ? e.Diagnostics.Parameter_type_of_public_setter_0_from_exported_class_has_or_is_using_name_1_from_private_module_2 : e.Diagnostics.Parameter_type_of_public_setter_0_from_exported_class_has_or_is_using_private_name_1;
      }
     } else {
      if (e.hasModifier(t, 32)) {
       r = n.errorModuleName ? n.accessibility === 2 ? e.Diagnostics.Return_type_of_public_static_getter_0_from_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named : e.Diagnostics.Return_type_of_public_static_getter_0_from_exported_class_has_or_is_using_name_1_from_private_module_2 : e.Diagnostics.Return_type_of_public_static_getter_0_from_exported_class_has_or_is_using_private_name_1;
      } else {
       r = n.errorModuleName ? n.accessibility === 2 ? e.Diagnostics.Return_type_of_public_getter_0_from_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named : e.Diagnostics.Return_type_of_public_getter_0_from_exported_class_has_or_is_using_name_1_from_private_module_2 : e.Diagnostics.Return_type_of_public_getter_0_from_exported_class_has_or_is_using_private_name_1;
      }
     }
     return {
      diagnosticMessage: r,
      errorNode: t.name,
      typeName: t.name
     };
    }
    function a(n) {
     var r;
     switch (t.kind) {
     case 159:
      r = n.errorModuleName ? e.Diagnostics.Return_type_of_constructor_signature_from_exported_interface_has_or_is_using_name_0_from_private_module_1 : e.Diagnostics.Return_type_of_constructor_signature_from_exported_interface_has_or_is_using_private_name_0;
      break;

     case 158:
      r = n.errorModuleName ? e.Diagnostics.Return_type_of_call_signature_from_exported_interface_has_or_is_using_name_0_from_private_module_1 : e.Diagnostics.Return_type_of_call_signature_from_exported_interface_has_or_is_using_private_name_0;
      break;

     case 160:
      r = n.errorModuleName ? e.Diagnostics.Return_type_of_index_signature_from_exported_interface_has_or_is_using_name_0_from_private_module_1 : e.Diagnostics.Return_type_of_index_signature_from_exported_interface_has_or_is_using_private_name_0;
      break;

     case 154:
     case 153:
      if (e.hasModifier(t, 32)) {
       r = n.errorModuleName ? n.accessibility === 2 ? e.Diagnostics.Return_type_of_public_static_method_from_exported_class_has_or_is_using_name_0_from_external_module_1_but_cannot_be_named : e.Diagnostics.Return_type_of_public_static_method_from_exported_class_has_or_is_using_name_0_from_private_module_1 : e.Diagnostics.Return_type_of_public_static_method_from_exported_class_has_or_is_using_private_name_0;
      } else if (t.parent.kind === 238) {
       r = n.errorModuleName ? n.accessibility === 2 ? e.Diagnostics.Return_type_of_public_method_from_exported_class_has_or_is_using_name_0_from_external_module_1_but_cannot_be_named : e.Diagnostics.Return_type_of_public_method_from_exported_class_has_or_is_using_name_0_from_private_module_1 : e.Diagnostics.Return_type_of_public_method_from_exported_class_has_or_is_using_private_name_0;
      } else {
       r = n.errorModuleName ? e.Diagnostics.Return_type_of_method_from_exported_interface_has_or_is_using_name_0_from_private_module_1 : e.Diagnostics.Return_type_of_method_from_exported_interface_has_or_is_using_private_name_0;
      }
      break;

     case 237:
      r = n.errorModuleName ? n.accessibility === 2 ? e.Diagnostics.Return_type_of_exported_function_has_or_is_using_name_0_from_external_module_1_but_cannot_be_named : e.Diagnostics.Return_type_of_exported_function_has_or_is_using_name_0_from_private_module_1 : e.Diagnostics.Return_type_of_exported_function_has_or_is_using_private_name_0;
      break;

     default:
      return e.Debug.fail("This is unknown kind for signature: " + t.kind);
     }
     return {
      diagnosticMessage: r,
      errorNode: t.name || t
     };
    }
    function o(e) {
     var n = s(e);
     return n !== undefined ? {
      diagnosticMessage: n,
      errorNode: t,
      typeName: t.name
     } : undefined;
    }
    function s(n) {
     switch (t.parent.kind) {
     case 155:
      return n.errorModuleName ? n.accessibility === 2 ? e.Diagnostics.Parameter_0_of_constructor_from_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named : e.Diagnostics.Parameter_0_of_constructor_from_exported_class_has_or_is_using_name_1_from_private_module_2 : e.Diagnostics.Parameter_0_of_constructor_from_exported_class_has_or_is_using_private_name_1;

     case 159:
     case 164:
      return n.errorModuleName ? e.Diagnostics.Parameter_0_of_constructor_signature_from_exported_interface_has_or_is_using_name_1_from_private_module_2 : e.Diagnostics.Parameter_0_of_constructor_signature_from_exported_interface_has_or_is_using_private_name_1;

     case 158:
      return n.errorModuleName ? e.Diagnostics.Parameter_0_of_call_signature_from_exported_interface_has_or_is_using_name_1_from_private_module_2 : e.Diagnostics.Parameter_0_of_call_signature_from_exported_interface_has_or_is_using_private_name_1;

     case 160:
      return n.errorModuleName ? e.Diagnostics.Parameter_0_of_index_signature_from_exported_interface_has_or_is_using_name_1_from_private_module_2 : e.Diagnostics.Parameter_0_of_index_signature_from_exported_interface_has_or_is_using_private_name_1;

     case 154:
     case 153:
      if (e.hasModifier(t.parent, 32)) {
       return n.errorModuleName ? n.accessibility === 2 ? e.Diagnostics.Parameter_0_of_public_static_method_from_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named : e.Diagnostics.Parameter_0_of_public_static_method_from_exported_class_has_or_is_using_name_1_from_private_module_2 : e.Diagnostics.Parameter_0_of_public_static_method_from_exported_class_has_or_is_using_private_name_1;
      } else if (t.parent.parent.kind === 238) {
       return n.errorModuleName ? n.accessibility === 2 ? e.Diagnostics.Parameter_0_of_public_method_from_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named : e.Diagnostics.Parameter_0_of_public_method_from_exported_class_has_or_is_using_name_1_from_private_module_2 : e.Diagnostics.Parameter_0_of_public_method_from_exported_class_has_or_is_using_private_name_1;
      } else {
       return n.errorModuleName ? e.Diagnostics.Parameter_0_of_method_from_exported_interface_has_or_is_using_name_1_from_private_module_2 : e.Diagnostics.Parameter_0_of_method_from_exported_interface_has_or_is_using_private_name_1;
      }

     case 237:
     case 163:
      return n.errorModuleName ? n.accessibility === 2 ? e.Diagnostics.Parameter_0_of_exported_function_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named : e.Diagnostics.Parameter_0_of_exported_function_has_or_is_using_name_1_from_private_module_2 : e.Diagnostics.Parameter_0_of_exported_function_has_or_is_using_private_name_1;

     default:
      return e.Debug.fail("Unknown parent for parameter: " + e.SyntaxKind[t.parent.kind]);
     }
    }
    function c() {
     var n;
     switch (t.parent.kind) {
     case 238:
      n = e.Diagnostics.Type_parameter_0_of_exported_class_has_or_is_using_private_name_1;
      break;

     case 239:
      n = e.Diagnostics.Type_parameter_0_of_exported_interface_has_or_is_using_private_name_1;
      break;

     case 159:
      n = e.Diagnostics.Type_parameter_0_of_constructor_signature_from_exported_interface_has_or_is_using_private_name_1;
      break;

     case 158:
      n = e.Diagnostics.Type_parameter_0_of_call_signature_from_exported_interface_has_or_is_using_private_name_1;
      break;

     case 154:
     case 153:
      if (e.hasModifier(t.parent, 32)) {
       n = e.Diagnostics.Type_parameter_0_of_public_static_method_from_exported_class_has_or_is_using_private_name_1;
      } else if (t.parent.parent.kind === 238) {
       n = e.Diagnostics.Type_parameter_0_of_public_method_from_exported_class_has_or_is_using_private_name_1;
      } else {
       n = e.Diagnostics.Type_parameter_0_of_method_from_exported_interface_has_or_is_using_private_name_1;
      }
      break;

     case 237:
      n = e.Diagnostics.Type_parameter_0_of_exported_function_has_or_is_using_private_name_1;
      break;

     case 240:
      n = e.Diagnostics.Type_parameter_0_of_exported_type_alias_has_or_is_using_private_name_1;
      break;

     default:
      return e.Debug.fail("This is unknown parent for type parameter: " + t.parent.kind);
     }
     return {
      diagnosticMessage: n,
      errorNode: t,
      typeName: t.name
     };
    }
    function u() {
     var n;
     if (t.parent.parent.kind === 238) {
      n = t.parent.token === 108 ? e.Diagnostics.Implements_clause_of_exported_class_0_has_or_is_using_private_name_1 : e.Diagnostics.extends_clause_of_exported_class_0_has_or_is_using_private_name_1;
     } else {
      n = e.Diagnostics.extends_clause_of_exported_interface_0_has_or_is_using_private_name_1;
     }
     return {
      diagnosticMessage: n,
      errorNode: t,
      typeName: e.getNameOfDeclaration(t.parent.parent)
     };
    }
    function l() {
     return {
      diagnosticMessage: e.Diagnostics.Import_declaration_0_is_using_private_name_1,
      errorNode: t,
      typeName: t.name
     };
    }
    function f() {
     return {
      diagnosticMessage: e.Diagnostics.Exported_type_alias_0_has_or_is_using_private_name_1,
      errorNode: t.type,
      typeName: t.name
     };
    }
   }
   e.createGetSymbolAccessibilityDiagnosticForNode = r;
  })(s || (s = {}));
  var s;
  (function(e) {
   function t(t, n, i) {
    if (i && e.isSourceFileJavaScript(i)) {
     return [];
    }
    var a = t.getCompilerOptions();
    var o = e.transformNodes(n, t, a, i ? [ i ] : e.filter(t.getSourceFiles(), e.isSourceFileNotJavaScript), [ r ], false);
    return o.diagnostics;
   }
   e.getDeclarationDiagnostics = t;
   var n = 1024 | 2048 | 4096 | 8 | 524288 | 4 | 1;
   function r(t) {
    var r = function() {
     return e.Debug.fail("Diagnostic emitted without context");
    };
    var f = r;
    var d = true;
    var p = false;
    var m = false;
    var _ = false;
    var g = false;
    var h;
    var v;
    var y;
    var b;
    var x;
    var k = t.getEmitHost();
    var S = {
     trackSymbol: M,
     reportInaccessibleThisError: B,
     reportInaccessibleUniqueSymbolError: R,
     reportPrivateInBaseOfClassExpression: L,
     moduleResolverHost: k,
     trackReferencedAmbientModule: I
    };
    var w;
    var C;
    var D;
    var T = t.getEmitResolver();
    var E = t.getCompilerOptions();
    var N = e.getNewLineCharacter(E);
    var A = E.noResolve, F = E.stripInternal;
    return z;
    function P(t) {
     if (!t) {
      return;
     }
     v = v || e.createMap();
     for (var n = 0, r = t; n < r.length; n++) {
      var i = r[n];
      v.set(i, true);
     }
    }
    function I(t, n) {
     var r = T.getTypeReferenceDirectivesForSymbol(n, 67108863);
     if (e.length(r)) {
      return P(r);
     }
     var i = e.getSourceFileOfNode(t);
     D.set("" + e.getOriginalNodeId(i), i);
    }
    function O(n) {
     if (n.accessibility === 0) {
      if (n && n.aliasesToMakeVisible) {
       if (!y) {
        y = n.aliasesToMakeVisible;
       } else {
        for (var r = 0, i = n.aliasesToMakeVisible; r < i.length; r++) {
         var a = i[r];
         e.pushIfUnique(y, a);
        }
       }
      }
     } else {
      var o = f(n);
      if (o) {
       if (o.typeName) {
        t.addDiagnostic(e.createDiagnosticForNode(n.errorNode || o.errorNode, o.diagnosticMessage, e.getTextOfNode(o.typeName), n.errorSymbolName, n.errorModuleName));
       } else {
        t.addDiagnostic(e.createDiagnosticForNode(n.errorNode || o.errorNode, o.diagnosticMessage, n.errorSymbolName, n.errorModuleName));
       }
      }
     }
    }
    function M(e, t, n) {
     if (e.flags & 262144) return;
     O(T.isSymbolAccessible(e, t, n, true));
     P(T.getTypeReferenceDirectivesForSymbol(e, n));
    }
    function L(n) {
     if (w) {
      t.addDiagnostic(e.createDiagnosticForNode(w, e.Diagnostics.Property_0_of_exported_class_expression_may_not_be_private_or_protected, n));
     }
    }
    function R() {
     if (w) {
      t.addDiagnostic(e.createDiagnosticForNode(w, e.Diagnostics.The_inferred_type_of_0_references_an_inaccessible_1_type_A_type_annotation_is_necessary, e.declarationNameToString(w), "unique symbol"));
     }
    }
    function B() {
     if (w) {
      t.addDiagnostic(e.createDiagnosticForNode(w, e.Diagnostics.The_inferred_type_of_0_references_an_inaccessible_1_type_A_type_annotation_is_necessary, e.declarationNameToString(w), "this"));
     }
    }
    function z(n) {
     if (n.kind === 277 && (n.isDeclarationFile || e.isSourceFileJavaScript(n))) {
      return n;
     }
     if (n.kind === 278) {
      p = true;
      var i = e.createMap();
      var a = false;
      var o = e.createBundle(e.map(n.sourceFiles, function(n) {
       if (n.isDeclarationFile || e.isSourceFileJavaScript(n)) return undefined;
       a = a || n.hasNoDefaultLib;
       C = n;
       h = n;
       y = undefined;
       x = false;
       b = e.createMap();
       f = r;
       _ = false;
       g = false;
       j(n, i);
       if (e.isExternalModule(n)) {
        m = false;
        d = false;
        var o = e.visitNodes(n.statements, se);
        var s = e.updateSourceFileNode(n, [ e.createModuleDeclaration([], [ e.createModifier(124) ], e.createLiteral(e.getResolvedExternalModuleName(t.getEmitHost(), n)), e.createModuleBlock(e.setTextRange(e.createNodeArray(ne(o)), n.statements))) ], true, [], [], false, []);
        return s;
       }
       d = true;
       var c = e.visitNodes(n.statements, se);
       return e.updateSourceFileNode(n, ne(c), true, [], [], false, []);
      }), e.mapDefined(n.prepends, function(t) {
       if (t.kind === 280) {
        return e.createUnparsedSourceFile(t.declarationText, t.declarationMapPath, t.declarationMapText);
       }
      }));
      o.syntheticFileReferences = [];
      o.syntheticTypeReferences = A();
      o.hasNoDefaultLib = a;
      var s = e.getDirectoryPath(e.normalizeSlashes(e.getOutputPathsFor(n, k, true).declarationFilePath));
      var c = P(o.syntheticFileReferences, s);
      i.forEach(c);
      return o;
     }
     d = true;
     _ = false;
     g = false;
     h = n;
     C = n;
     f = r;
     p = false;
     m = false;
     x = false;
     y = undefined;
     b = e.createMap();
     v = undefined;
     D = j(C, e.createMap());
     var u = [];
     var l = e.getDirectoryPath(e.normalizeSlashes(e.getOutputPathsFor(n, k, true).declarationFilePath));
     var S = P(u, l);
     var w = e.visitNodes(n.statements, se);
     var T = e.setTextRange(e.createNodeArray(ne(w)), n.statements);
     D.forEach(S);
     var E = e.filter(T, e.isAnyImportSyntax);
     if (e.isExternalModule(n) && (!m || _ && !g)) {
      T = e.setTextRange(e.createNodeArray(T.concat([ e.createExportDeclaration(undefined, undefined, e.createNamedExports([]), undefined) ])), T);
     }
     var N = e.updateSourceFileNode(n, T, true, u, A(), n.hasNoDefaultLib);
     return N;
     function A() {
      return v ? e.mapDefined(e.arrayFrom(v.keys()), F) : [];
     }
     function F(t) {
      if (E) {
       for (var n = 0, r = E; n < r.length; n++) {
        var i = r[n];
        if (e.isImportEqualsDeclaration(i) && e.isExternalModuleReference(i.moduleReference)) {
         var a = i.moduleReference.expression;
         if (e.isStringLiteralLike(a) && a.text === t) {
          return undefined;
         }
        } else if (e.isImportDeclaration(i) && e.isStringLiteral(i.moduleSpecifier) && i.moduleSpecifier.text === t) {
         return undefined;
        }
       }
      }
      return {
       fileName: t,
       pos: -1,
       end: -1
      };
     }
     function P(t, r) {
      return function(i) {
       var a;
       if (i.isDeclarationFile) {
        a = i.fileName;
       } else {
        if (p && e.contains(n.sourceFiles, i)) return;
        var o = e.getOutputPathsFor(i, k, true);
        a = o.declarationFilePath || o.jsFilePath;
       }
       if (a) {
        var s = e.getRelativePathToDirectoryOrUrl(r, a, k.getCurrentDirectory(), k.getCanonicalFileName, false);
        if (e.startsWith(s, "./") && e.hasExtension(s)) {
         s = s.substring(2);
        }
        t.push({
         pos: -1,
         end: -1,
         fileName: s
        });
       }
      };
     }
    }
    function j(t, n) {
     if (A || e.isSourceFileJavaScript(t)) return n;
     e.forEach(t.referencedFiles, function(r) {
      var i = e.tryResolveScriptReference(k, t, r);
      if (i) {
       n.set("" + e.getOriginalNodeId(i), i);
      }
     });
     return n;
    }
    function q(t) {
     if (t.kind === 71) {
      return t;
     } else {
      if (t.kind === 183) {
       return e.updateArrayBindingPattern(t, e.visitNodes(t.elements, n));
      } else {
       return e.updateObjectBindingPattern(t, e.visitNodes(t.elements, n));
      }
     }
     function n(t) {
      if (t.kind === 208) {
       return t;
      }
      return e.updateBindingElement(t, t.dotDotDotToken, t.propertyName, q(t.name), J(t) ? t.initializer : undefined);
     }
    }
    function U(t, n) {
     var r;
     if (!x) {
      r = f;
      f = e.createGetSymbolAccessibilityDiagnosticForNode(t);
     }
     var i = e.updateParameter(t, undefined, a(t, n), t.dotDotDotToken, q(t.name), T.isOptionalParameter(t) ? t.questionToken || e.createToken(55) : undefined, V(t, t.type, true), K(t));
     if (!x) {
      f = r;
     }
     return i;
    }
    function J(t) {
     return c(t) && T.isLiteralConstDeclaration(e.getParseTreeNode(t));
    }
    function K(t) {
     if (J(t)) {
      return T.createLiteralConstValue(e.getParseTreeNode(t));
     }
     return undefined;
    }
    function V(t, r, i) {
     if (!i && e.hasModifier(t, 8)) {
      return;
     }
     if (J(t)) {
      return;
     }
     var a = t.kind === 149 && (T.isRequiredInitializedParameter(t) || T.isOptionalUninitializedParameterProperty(t));
     if (r && !a) {
      return e.visitNode(r, ae);
     }
     if (!e.getParseTreeNode(t)) {
      return r ? e.visitNode(r, ae) : e.createKeywordTypeNode(119);
     }
     if (t.kind === 157) {
      return e.createKeywordTypeNode(119);
     }
     w = t.name;
     var o;
     if (!x) {
      o = f;
      f = e.createGetSymbolAccessibilityDiagnosticForNode(t);
     }
     if (t.kind === 235 || t.kind === 184) {
      return s(T.createTypeOfDeclaration(t, h, n, S));
     }
     if (t.kind === 149 || t.kind === 152 || t.kind === 151) {
      if (!t.initializer) return s(T.createTypeOfDeclaration(t, h, n, S, a));
      return s(T.createTypeOfDeclaration(t, h, n, S, a) || T.createTypeOfExpression(t.initializer, h, n, S));
     }
     return s(T.createReturnTypeOfSignatureDeclaration(t, h, n, S));
     function s(t) {
      w = undefined;
      if (!x) {
       f = o;
      }
      return t || e.createKeywordTypeNode(119);
     }
    }
    function W(t) {
     t = e.getParseTreeNode(t);
     switch (t.kind) {
     case 237:
     case 242:
     case 239:
     case 238:
     case 240:
     case 241:
      return !T.isDeclarationVisible(t);

     case 235:
      return !H(t);

     case 246:
     case 247:
     case 253:
     case 252:
      return false;
     }
     return false;
    }
    function H(t) {
     if (e.isOmittedExpression(t)) {
      return false;
     }
     if (e.isBindingPattern(t.name)) {
      return e.some(t.name.elements, H);
     } else {
      return T.isDeclarationVisible(t);
     }
    }
    function G(t, n, r) {
     if (e.hasModifier(t, 8)) {
      return undefined;
     }
     var i = e.map(n, function(e) {
      return U(e, r);
     });
     if (!i) {
      return undefined;
     }
     return e.createNodeArray(i, n.hasTrailingComma);
    }
    function $(t, n) {
     return e.hasModifier(t, 8) ? undefined : e.visitNodes(n, ae);
    }
    function X(t) {
     return e.isSourceFile(t) || e.isTypeAliasDeclaration(t) || e.isModuleDeclaration(t) || e.isClassDeclaration(t) || e.isInterfaceDeclaration(t) || e.isFunctionLike(t) || e.isIndexSignatureDeclaration(t) || e.isMappedTypeNode(t);
    }
    function Q(e, t) {
     var n = T.isEntityNameVisible(e, t);
     O(n);
     P(T.getTypeReferenceDirectivesForEntityName(e));
    }
    function Y(t, n) {
     if (e.hasJSDocNodes(t) && e.hasJSDocNodes(n)) {
      t.jsDoc = n.jsDoc;
     }
     return e.setCommentRange(t, e.getCommentRange(n));
    }
    function Z(n, r) {
     if (!r) return undefined;
     m = m || n.kind !== 242 && n.kind !== 181;
     if (r.kind === 9 && p) {
      var i = e.getExternalModuleNameFromDeclaration(t.getEmitHost(), T, n);
      if (i) {
       return e.createLiteral(i);
      }
     }
     return r;
    }
    function ee(t) {
     if (!T.isDeclarationVisible(t)) return;
     if (t.moduleReference.kind === 257) {
      var n = e.getExternalModuleImportEqualsDeclarationExpression(t);
      return e.updateImportEqualsDeclaration(t, undefined, t.modifiers, t.name, e.updateExternalModuleReference(t.moduleReference, Z(t, n)));
     } else {
      var r = f;
      f = e.createGetSymbolAccessibilityDiagnosticForNode(t);
      Q(t.moduleReference, h);
      f = r;
      return t;
     }
    }
    function te(t) {
     if (!t.importClause) {
      return e.updateImportDeclaration(t, undefined, t.modifiers, t.importClause, Z(t, t.moduleSpecifier));
     }
     var n = t.importClause && t.importClause.name && T.isDeclarationVisible(t.importClause) ? t.importClause.name : undefined;
     if (!t.importClause.namedBindings) {
      return n && e.updateImportDeclaration(t, undefined, t.modifiers, e.updateImportClause(t.importClause, n, undefined), Z(t, t.moduleSpecifier));
     }
     if (t.importClause.namedBindings.kind === 249) {
      var r = T.isDeclarationVisible(t.importClause.namedBindings) ? t.importClause.namedBindings : undefined;
      return n || r ? e.updateImportDeclaration(t, undefined, t.modifiers, e.updateImportClause(t.importClause, n, r), Z(t, t.moduleSpecifier)) : undefined;
     }
     var i = e.mapDefined(t.importClause.namedBindings.elements, function(e) {
      return T.isDeclarationVisible(e) ? e : undefined;
     });
     if (i && i.length || n) {
      return e.updateImportDeclaration(t, undefined, t.modifiers, e.updateImportClause(t.importClause, n, i && i.length ? e.updateNamedImports(t.importClause.namedBindings, i) : undefined), Z(t, t.moduleSpecifier));
     }
    }
    function ne(t) {
     while (e.length(y)) {
      var n = y.shift();
      if (!e.isLateVisibilityPaintedStatement(n)) {
       return e.Debug.fail("Late replaced statement was found which is not handled by the declaration transformer!: " + (e.SyntaxKind ? e.SyntaxKind[n.kind] : n.kind));
      }
      var r = ce(n, true);
      b.set("" + e.getOriginalNodeId(n), r);
     }
     return e.visitNodes(t, i);
     function i(t) {
      if (e.isLateVisibilityPaintedStatement(t)) {
       var n = "" + e.getOriginalNodeId(t);
       if (b.has(n)) {
        var r = b.get(n);
        b.delete(n);
        if (r && e.isSourceFile(t.parent)) {
         if (e.isArray(r) ? e.some(r, ie) : ie(r)) {
          _ = true;
         }
         if (e.isArray(r) ? e.some(r, re) : re(r)) {
          m = true;
         }
        }
        return r;
       }
      }
      return t;
     }
    }
    function re(t) {
     return e.isAnyImportOrReExport(t) || e.isExportAssignment(t) || e.hasModifier(t, 1);
    }
    function ie(t) {
     return !e.isAnyImportOrReExport(t) && !e.isExportAssignment(t) && !e.hasModifier(t, 1) && !e.isAmbientModule(t);
    }
    function ae(n) {
     if (me(n)) return;
     if (e.isDeclaration(n)) {
      if (W(n)) return;
      if (e.hasDynamicName(n) && !T.isLateBound(e.getParseTreeNode(n))) {
       return;
      }
     }
     if (e.isFunctionLike(n) && T.isImplementationOfOverload(n)) return;
     if (e.isSemicolonClassElement(n)) return;
     var r;
     if (X(n)) {
      r = h;
      h = n;
     }
     var i = f;
     if (e.isMethodDeclaration(n) || e.isMethodSignature(n)) {
      if (e.hasModifier(n, 8)) {
       if (n.symbol && n.symbol.declarations && n.symbol.declarations[0] !== n) return;
       return k(e.createProperty(undefined, _e(n), n.name, undefined, undefined, undefined));
      }
     }
     var a = e.canProduceDiagnostics(n);
     if (a && !x) {
      f = e.createGetSymbolAccessibilityDiagnosticForNode(n);
     }
     if (e.isTypeQueryNode(n)) {
      Q(n.exprName, h);
     }
     var o = x;
     var s = (n.kind === 166 || n.kind === 179) && n.parent.kind !== 240;
     if (s) {
      x = true;
     }
     if (l(n)) {
      switch (n.kind) {
      case 209:
       {
        if (e.isEntityName(n.expression) || e.isEntityNameExpression(n.expression)) {
         Q(n.expression, h);
        }
        var c = e.visitEachChild(n, ae, t);
        return k(e.updateExpressionWithTypeArguments(c, e.parenthesizeTypeParameters(c.typeArguments), c.expression));
       }

      case 162:
       {
        Q(n.typeName, h);
        var c = e.visitEachChild(n, ae, t);
        return k(e.updateTypeReferenceNode(c, c.typeName, e.parenthesizeTypeParameters(c.typeArguments)));
       }

      case 159:
       return k(e.updateConstructSignature(n, $(n, n.typeParameters), G(n, n.parameters), V(n, n.type)));

      case 155:
       {
        var u = e.hasModifier(n, 8);
        var d = e.createSignatureDeclaration(155, u ? undefined : $(n, n.typeParameters), u ? undefined : G(n, n.parameters, 0), undefined);
        d.modifiers = e.createNodeArray(_e(n));
        return k(d);
       }

      case 154:
       {
        var p = e.createSignatureDeclaration(153, $(n, n.typeParameters), G(n, n.parameters), V(n, n.type));
        p.name = n.name;
        p.modifiers = e.createNodeArray(_e(n));
        p.questionToken = n.questionToken;
        return k(p);
       }

      case 156:
       {
        var m = he(n);
        return k(m);
       }

      case 157:
       {
        var m = he(n);
        return k(m);
       }

      case 152:
       return k(e.updateProperty(n, undefined, _e(n), n.name, n.questionToken, !e.hasModifier(n, 8) ? V(n, n.type) : undefined, K(n)));

      case 151:
       return k(e.updatePropertySignature(n, _e(n), n.name, n.questionToken, !e.hasModifier(n, 8) ? V(n, n.type) : undefined, K(n)));

      case 153:
       {
        return k(e.updateMethodSignature(n, $(n, n.typeParameters), G(n, n.parameters), V(n, n.type), n.name, n.questionToken));
       }

      case 158:
       {
        return k(e.updateCallSignature(n, $(n, n.typeParameters), G(n, n.parameters), V(n, n.type)));
       }

      case 160:
       {
        return k(e.updateIndexSignature(n, undefined, _e(n), G(n, n.parameters), e.visitNode(n.type, ae) || e.createKeywordTypeNode(119)));
       }

      case 235:
       {
        if (e.isBindingPattern(n.name)) {
         return le(n.name);
        }
        s = true;
        x = true;
        return k(e.updateVariableDeclaration(n, n.name, V(n, n.type), K(n)));
       }

      case 148:
       {
        if (oe(n) && (n.default || n.constraint)) {
         return k(e.updateTypeParameterDeclaration(n, n.name, undefined, undefined));
        }
        return k(e.visitEachChild(n, ae, t));
       }

      case 173:
       {
        var _ = e.visitNode(n.checkType, ae);
        var g = e.visitNode(n.extendsType, ae);
        var v = h;
        h = n.trueType;
        var y = e.visitNode(n.trueType, ae);
        h = v;
        var b = e.visitNode(n.falseType, ae);
        return k(e.updateConditionalTypeNode(n, _, g, y, b));
       }

      case 163:
       {
        return k(e.updateFunctionTypeNode(n, e.visitNodes(n.typeParameters, ae), G(n, n.parameters), e.visitNode(n.type, ae)));
       }

      case 164:
       {
        return k(e.updateConstructorTypeNode(n, e.visitNodes(n.typeParameters, ae), G(n, n.parameters), e.visitNode(n.type, ae)));
       }

      case 181:
       {
        if (!e.isLiteralImportTypeNode(n)) return k(n);
        return k(e.updateImportTypeNode(n, e.updateLiteralTypeNode(n.argument, Z(n, n.argument.literal)), n.qualifier, e.visitNodes(n.typeArguments, ae, e.isTypeNode), n.isTypeOf));
       }

      default:
       e.Debug.assertNever(n, "Attempted to process unhandled node kind: " + e.SyntaxKind[n.kind]);
      }
     }
     return k(e.visitEachChild(n, ae, t));
     function k(t) {
      if (t && a && e.hasDynamicName(n)) {
       de(n);
      }
      if (X(n)) {
       h = r;
      }
      if (a && !x) {
       f = i;
      }
      if (s) {
       x = o;
      }
      if (t === n) {
       return t;
      }
      return t && e.setOriginalNode(Y(t, n), n);
     }
    }
    function oe(t) {
     return t.parent.kind === 154 && e.hasModifier(t.parent, 8);
    }
    function se(t) {
     if (!u(t)) {
      return;
     }
     if (me(t)) return;
     switch (t.kind) {
     case 253:
      {
       if (e.isSourceFile(t.parent)) {
        m = true;
        g = true;
       }
       return e.updateExportDeclaration(t, undefined, t.modifiers, t.exportClause, Z(t, t.moduleSpecifier));
      }

     case 252:
      {
       if (e.isSourceFile(t.parent)) {
        m = true;
        g = true;
       }
       if (t.expression.kind === 71) {
        return t;
       } else {
        var r = e.createOptimisticUniqueName("_default");
        f = function() {
         return {
          diagnosticMessage: e.Diagnostics.Default_export_of_the_module_has_or_is_using_private_name_0,
          errorNode: t
         };
        };
        var i = e.createVariableDeclaration(r, T.createTypeOfExpression(t.expression, t, n, S), undefined);
        var a = e.createVariableStatement(d ? [ e.createModifier(124) ] : [], e.createVariableDeclarationList([ i ], 2));
        return [ a, e.updateExportAssignment(t, t.decorators, t.modifiers, r) ];
       }
      }
     }
     var o = ce(t);
     b.set("" + e.getOriginalNodeId(t), o);
     return t;
    }
    function ce(t, r) {
     if (me(t)) return;
     switch (t.kind) {
     case 246:
      {
       return ee(t);
      }

     case 247:
      {
       return te(t);
      }
     }
     if (e.isDeclaration(t) && W(t)) return;
     if (e.isFunctionLike(t) && T.isImplementationOfOverload(t)) return;
     var i;
     if (X(t)) {
      i = h;
      h = t;
     }
     var a = e.canProduceDiagnostics(t);
     var o = f;
     if (a) {
      f = e.createGetSymbolAccessibilityDiagnosticForNode(t);
     }
     var s = d;
     switch (t.kind) {
     case 240:
      return A(e.updateTypeAliasDeclaration(t, undefined, _e(t, r), t.name, e.visitNodes(t.typeParameters, ae, e.isTypeParameterDeclaration), e.visitNode(t.type, ae, e.isTypeNode)));

     case 239:
      {
       return A(e.updateInterfaceDeclaration(t, undefined, _e(t, r), t.name, $(t, t.typeParameters), ve(t.heritageClauses), e.visitNodes(t.members, ae)));
      }

     case 237:
      {
       return A(e.updateFunctionDeclaration(t, undefined, _e(t, r), undefined, t.name, $(t, t.typeParameters), G(t, t.parameters), V(t, t.type), undefined));
      }

     case 242:
      {
       d = false;
       var c = t.body;
       if (c && c.kind === 243) {
        var u = e.visitNodes(c.statements, se);
        var l = e.updateModuleBlock(c, ne(u));
        d = s;
        var p = _e(t, r);
        return A(e.updateModuleDeclaration(t, undefined, p, e.isExternalModuleAugmentation(t) ? Z(t, t.name) : t.name, l));
       } else {
        d = s;
        var p = _e(t, r);
        d = false;
        e.visitNode(c, se);
        var m = "" + e.getOriginalNodeId(c);
        var l = b.get(m);
        b.delete(m);
        return A(e.updateModuleDeclaration(t, undefined, p, t.name, l));
       }
      }

     case 238:
      {
       var _ = e.createNodeArray(_e(t, r));
       var g = $(t, t.typeParameters);
       var v = e.getFirstConstructorWithBody(t);
       var y = void 0;
       if (v) {
        var x = f;
        y = e.compact(e.flatMap(v.parameters, function(t) {
         if (!e.hasModifier(t, 92)) return;
         f = e.createGetSymbolAccessibilityDiagnosticForNode(t);
         if (t.name.kind === 71) {
          return Y(e.createProperty(undefined, _e(t), t.name, t.questionToken, V(t, t.type), K(t)), t);
         } else {
          return n(t.name);
         }
         function n(r) {
          var i;
          for (var a = 0, o = r.elements; a < o.length; a++) {
           var s = o[a];
           if (e.isOmittedExpression(s)) continue;
           if (e.isBindingPattern(s.name)) {
            i = e.concatenate(i, n(s.name));
           }
           i = i || [];
           i.push(e.createProperty(undefined, _e(t), s.name, undefined, V(s, undefined), undefined));
          }
          return i;
         }
        }));
        f = x;
       }
       var k = e.createNodeArray(e.concatenate(y, e.visitNodes(t.members, ae)));
       var w = e.getEffectiveBaseTypeNode(t);
       if (w && !e.isEntityNameExpression(w.expression) && w.expression.kind !== 95) {
        var C = e.createOptimisticUniqueName(e.unescapeLeadingUnderscores(t.name.escapedText) + "_base");
        f = function() {
         return {
          diagnosticMessage: e.Diagnostics.extends_clause_of_exported_class_0_has_or_is_using_private_name_1,
          errorNode: w,
          typeName: t.name
         };
        };
        var D = e.createVariableDeclaration(C, T.createTypeOfExpression(w.expression, t, n, S), undefined);
        var E = e.createVariableStatement(d ? [ e.createModifier(124) ] : [], e.createVariableDeclarationList([ D ], 2));
        var N = e.createNodeArray(e.map(t.heritageClauses, function(t) {
         if (t.token === 85) {
          var n = f;
          f = e.createGetSymbolAccessibilityDiagnosticForNode(t.types[0]);
          var r = e.updateHeritageClause(t, e.map(t.types, function(t) {
           return e.updateExpressionWithTypeArguments(t, e.visitNodes(t.typeArguments, ae), C);
          }));
          f = n;
          return r;
         }
         return e.updateHeritageClause(t, e.visitNodes(e.createNodeArray(e.filter(t.types, function(t) {
          return e.isEntityNameExpression(t.expression) || t.expression.kind === 95;
         })), ae));
        }));
        return [ E, A(e.updateClassDeclaration(t, undefined, _, t.name, g, N, k)) ];
       } else {
        var N = ve(t.heritageClauses);
        return A(e.updateClassDeclaration(t, undefined, _, t.name, g, N, k));
       }
      }

     case 217:
      {
       return A(ue(t, r));
      }

     case 241:
      {
       return A(e.updateEnumDeclaration(t, undefined, e.createNodeArray(_e(t, r)), t.name, e.createNodeArray(e.mapDefined(t.members, function(t) {
        if (me(t)) return;
        var n = T.getConstantValue(t);
        return Y(e.updateEnumMember(t, t.name, n !== undefined ? e.createLiteral(n) : undefined), t);
       }))));
      }
     }
     return e.Debug.assertNever(t, "Unhandled top-level node in declaration emit: " + e.SyntaxKind[t.kind]);
     function A(n) {
      if (X(t)) {
       h = i;
      }
      if (a) {
       f = o;
      }
      if (t.kind === 242) {
       d = s;
      }
      if (n === t) {
       return n;
      }
      return n && e.setOriginalNode(Y(n, t), t);
     }
    }
    function ue(t, n) {
     if (!e.forEach(t.declarationList.declarations, H)) return;
     var r = e.visitNodes(t.declarationList.declarations, ae);
     if (!e.length(r)) return;
     return e.updateVariableStatement(t, e.createNodeArray(_e(t, n)), e.updateVariableDeclarationList(t.declarationList, r));
    }
    function le(t) {
     return e.flatten(e.mapDefined(t.elements, function(e) {
      return fe(e);
     }));
    }
    function fe(t) {
     if (t.kind === 208) {
      return;
     }
     if (t.name) {
      if (!H(t)) return;
      if (e.isBindingPattern(t.name)) {
       return le(t.name);
      } else {
       return e.createVariableDeclaration(t.name, V(t, undefined), undefined);
      }
     }
    }
    function de(t) {
     var n;
     if (!x) {
      n = f;
      f = e.createGetSymbolAccessibilityDiagnosticForNodeName(t);
     }
     w = t.name;
     e.Debug.assert(T.isLateBound(e.getParseTreeNode(t)));
     var r = t;
     var i = r.name.expression;
     Q(i, h);
     if (!x) {
      f = n;
     }
     w = undefined;
    }
    function pe(t) {
     var n = C.text.substring(t.pos, t.end);
     return e.stringContains(n, "@internal");
    }
    function me(t) {
     if (F && t) {
      var n = e.getLeadingCommentRangesOfNode(e.getParseTreeNode(t), C);
      if (e.forEach(n, pe)) {
       return true;
      }
     }
     return false;
    }
    function _e(t, n) {
     var r = e.getModifierFlags(t);
     var i = ge(t, n);
     if (r === i) {
      return t.modifiers;
     }
     return e.createModifiersFromModifierFlags(i);
    }
    function ge(t, n) {
     var r = 3071 ^ (4 | 256);
     var a = d && !i(t) ? 2 : 0;
     var s = t.parent.kind === 277;
     if (!s || p && s && e.isExternalModule(t.parent)) {
      r ^= (n || p && s ? 0 : 1) | 512 | 2;
      a = 0;
     }
     return o(t, r, a);
    }
    function he(t) {
     var n = T.getAllAccessorDeclarations(t);
     if (t.kind !== n.firstAccessor.kind) {
      return;
     }
     var r = s(t);
     if (!r && n.secondAccessor) {
      r = s(n.secondAccessor);
      f = e.createGetSymbolAccessibilityDiagnosticForNode(n.secondAccessor);
     }
     var i = e.createProperty(undefined, a(t, undefined, !n.setAccessor ? 64 : 0), t.name, t.questionToken, V(t, r), undefined);
     var o = n.secondAccessor && e.getLeadingCommentRangesOfNode(n.secondAccessor, C);
     if (o) {
      var c = function(t) {
       if (t.kind === 3) {
        var n = C.text.slice(t.pos + 2, t.end - 2);
        var r = n.split(/\r\n?|\n/g);
        if (r.length > 1) {
         var a = r.slice(1);
         var o = e.guessIndentation(a);
         n = [ r[0] ].concat(e.map(a, function(e) {
          return e.slice(o);
         })).join(N);
        }
        e.addSyntheticLeadingComment(i, t.kind, n, t.hasTrailingNewLine);
       }
      };
      for (var u = 0, l = o; u < l.length; u++) {
       var d = l[u];
       c(d);
      }
     }
     return i;
    }
    function ve(t) {
     return e.createNodeArray(e.filter(e.map(t, function(t) {
      return e.updateHeritageClause(t, e.visitNodes(e.createNodeArray(e.filter(t.types, function(n) {
       return e.isEntityNameExpression(n.expression) || t.token === 85 && n.expression.kind === 95;
      })), ae));
     }), function(e) {
      return e.types && !!e.types.length;
     }));
    }
   }
   e.transformDeclarations = r;
   function i(e) {
    if (e.kind === 239) {
     return true;
    }
    return false;
   }
   function a(t, n, r) {
    return e.createModifiersFromModifierFlags(o(t, n, r));
   }
   function o(t, n, r) {
    if (n === void 0) {
     n = 3071 ^ 4;
    }
    if (r === void 0) {
     r = 0;
    }
    var i = e.getModifierFlags(t) & n | r;
    if (i & 512 && i & 2) {
     i ^= 2;
    }
    return i;
   }
   function s(e) {
    if (e) {
     return e.kind === 156 ? e.type : e.parameters.length > 0 ? e.parameters[0].type : undefined;
    }
   }
   function c(e) {
    switch (e.kind) {
    case 235:
    case 152:
    case 151:
    case 149:
     return true;
    }
    return false;
   }
   function u(e) {
    switch (e.kind) {
    case 237:
    case 242:
    case 246:
    case 239:
    case 238:
    case 240:
    case 241:
    case 217:
    case 247:
    case 253:
    case 252:
     return true;
    }
    return false;
   }
   function l(e) {
    switch (e.kind) {
    case 159:
    case 155:
    case 154:
    case 156:
    case 157:
    case 152:
    case 151:
    case 153:
    case 158:
    case 160:
    case 235:
    case 148:
    case 209:
    case 162:
    case 173:
    case 163:
    case 164:
    case 181:
     return true;
    }
    return false;
   }
  })(s || (s = {}));
  var s;
  (function(e) {
   function t(t) {
    switch (t) {
    case e.ModuleKind.ESNext:
    case e.ModuleKind.ES2015:
     return e.transformES2015Module;

    case e.ModuleKind.System:
     return e.transformSystemModule;

    default:
     return e.transformModule;
    }
   }
   var n;
   (function(e) {
    e[e["Uninitialized"] = 0] = "Uninitialized";
    e[e["Initialized"] = 1] = "Initialized";
    e[e["Completed"] = 2] = "Completed";
    e[e["Disposed"] = 3] = "Disposed";
   })(n || (n = {}));
   var r;
   (function(e) {
    e[e["Substitution"] = 1] = "Substitution";
    e[e["EmitNotifications"] = 2] = "EmitNotifications";
   })(r || (r = {}));
   function i(n, r) {
    var i = n.jsx;
    var a = e.getEmitScriptTarget(n);
    var o = e.getEmitModuleKind(n);
    var s = [];
    e.addRange(s, r && r.before);
    s.push(e.transformTypeScript);
    if (i === 2) {
     s.push(e.transformJsx);
    }
    if (a < 6) {
     s.push(e.transformESNext);
    }
    if (a < 4) {
     s.push(e.transformES2017);
    }
    if (a < 3) {
     s.push(e.transformES2016);
    }
    if (a < 2) {
     s.push(e.transformES2015);
     s.push(e.transformGenerators);
    }
    s.push(t(o));
    if (a < 1) {
     s.push(e.transformES5);
    }
    e.addRange(s, r && r.after);
    return s;
   }
   e.getTransformers = i;
   function a(t, n, r, i, a, o) {
    var s = new Array(309);
    var c;
    var u;
    var l = [];
    var f = [];
    var d = 0;
    var p = false;
    var m;
    var _ = function(e, t) {
     return t;
    };
    var g = function(e, t, n) {
     return n(e, t);
    };
    var h = 0;
    var v = [];
    var y = {
     getCompilerOptions: function() {
      return r;
     },
     getEmitResolver: function() {
      return t;
     },
     getEmitHost: function() {
      return n;
     },
     startLexicalEnvironment: O,
     suspendLexicalEnvironment: M,
     resumeLexicalEnvironment: L,
     endLexicalEnvironment: R,
     hoistVariableDeclaration: P,
     hoistFunctionDeclaration: I,
     requestEmitHelper: B,
     readEmitHelpers: z,
     enableSubstitution: D,
     enableEmitNotification: N,
     isSubstitutionEnabled: T,
     isEmitNotificationEnabled: A,
     get onSubstituteNode() {
      return _;
     },
     set onSubstituteNode(t) {
      e.Debug.assert(h < 1, "Cannot modify transformation hooks after initialization has completed.");
      e.Debug.assert(t !== undefined, "Value must not be 'undefined'");
      _ = t;
     },
     get onEmitNode() {
      return g;
     },
     set onEmitNode(t) {
      e.Debug.assert(h < 1, "Cannot modify transformation hooks after initialization has completed.");
      e.Debug.assert(t !== undefined, "Value must not be 'undefined'");
      g = t;
     },
     addDiagnostic: function(e) {
      v.push(e);
     }
    };
    for (var b = 0, x = i; b < x.length; b++) {
     var k = x[b];
     e.disposeEmitNodes(e.getSourceFileOfNode(e.getParseTreeNode(k)));
    }
    e.performance.mark("beforeTransform");
    var S = e.chain.apply(void 0, a)(y);
    h = 1;
    var w = e.map(i, o ? S : C);
    h = 2;
    e.performance.mark("afterTransform");
    e.performance.measure("transformTime", "beforeTransform", "afterTransform");
    return {
     transformed: w,
     substituteNode: E,
     emitNodeWithNotification: F,
     dispose: j,
     diagnostics: v
    };
    function C(t) {
     return t && (!e.isSourceFile(t) || !t.isDeclarationFile) ? S(t) : t;
    }
    function D(t) {
     e.Debug.assert(h < 2, "Cannot modify the transformation context after transformation has completed.");
     s[t] |= 1;
    }
    function T(t) {
     return (s[t.kind] & 1) !== 0 && (e.getEmitFlags(t) & 4) === 0;
    }
    function E(t, n) {
     e.Debug.assert(h < 3, "Cannot substitute a node after the result is disposed.");
     return n && T(n) && _(t, n) || n;
    }
    function N(t) {
     e.Debug.assert(h < 2, "Cannot modify the transformation context after transformation has completed.");
     s[t] |= 2;
    }
    function A(t) {
     return (s[t.kind] & 2) !== 0 || (e.getEmitFlags(t) & 2) !== 0;
    }
    function F(t, n, r) {
     e.Debug.assert(h < 3, "Cannot invoke TransformationResult callbacks after the result is disposed.");
     if (n) {
      if (A(n)) {
       g(t, n, r);
      } else {
       r(t, n);
      }
     }
    }
    function P(t) {
     e.Debug.assert(h > 0, "Cannot modify the lexical environment during initialization.");
     e.Debug.assert(h < 2, "Cannot modify the lexical environment after transformation has completed.");
     var n = e.setEmitFlags(e.createVariableDeclaration(t), 64);
     if (!c) {
      c = [ n ];
     } else {
      c.push(n);
     }
    }
    function I(t) {
     e.Debug.assert(h > 0, "Cannot modify the lexical environment during initialization.");
     e.Debug.assert(h < 2, "Cannot modify the lexical environment after transformation has completed.");
     if (!u) {
      u = [ t ];
     } else {
      u.push(t);
     }
    }
    function O() {
     e.Debug.assert(h > 0, "Cannot modify the lexical environment during initialization.");
     e.Debug.assert(h < 2, "Cannot modify the lexical environment after transformation has completed.");
     e.Debug.assert(!p, "Lexical environment is suspended.");
     l[d] = c;
     f[d] = u;
     d++;
     c = undefined;
     u = undefined;
    }
    function M() {
     e.Debug.assert(h > 0, "Cannot modify the lexical environment during initialization.");
     e.Debug.assert(h < 2, "Cannot modify the lexical environment after transformation has completed.");
     e.Debug.assert(!p, "Lexical environment is already suspended.");
     p = true;
    }
    function L() {
     e.Debug.assert(h > 0, "Cannot modify the lexical environment during initialization.");
     e.Debug.assert(h < 2, "Cannot modify the lexical environment after transformation has completed.");
     e.Debug.assert(p, "Lexical environment is not suspended.");
     p = false;
    }
    function R() {
     e.Debug.assert(h > 0, "Cannot modify the lexical environment during initialization.");
     e.Debug.assert(h < 2, "Cannot modify the lexical environment after transformation has completed.");
     e.Debug.assert(!p, "Lexical environment is suspended.");
     var t;
     if (c || u) {
      if (u) {
       t = u.slice();
      }
      if (c) {
       var n = e.createVariableStatement(undefined, e.createVariableDeclarationList(c));
       if (!t) {
        t = [ n ];
       } else {
        t.push(n);
       }
      }
     }
     d--;
     c = l[d];
     u = f[d];
     if (d === 0) {
      l = [];
      f = [];
     }
     return t;
    }
    function B(t) {
     e.Debug.assert(h > 0, "Cannot modify the transformation context during initialization.");
     e.Debug.assert(h < 2, "Cannot modify the transformation context after transformation has completed.");
     e.Debug.assert(!t.scoped, "Cannot request a scoped emit helper.");
     m = e.append(m, t);
    }
    function z() {
     e.Debug.assert(h > 0, "Cannot modify the transformation context during initialization.");
     e.Debug.assert(h < 2, "Cannot modify the transformation context after transformation has completed.");
     var t = m;
     m = undefined;
     return t;
    }
    function j() {
     if (h < 3) {
      for (var t = 0, n = i; t < n.length; t++) {
       var r = n[t];
       e.disposeEmitNodes(e.getSourceFileOfNode(e.getParseTreeNode(r)));
      }
      c = undefined;
      l = undefined;
      u = undefined;
      f = undefined;
      _ = undefined;
      g = undefined;
      m = undefined;
      h = 3;
     }
    }
   }
   e.transformNodes = a;
  })(s || (s = {}));
  var s;
  (function(e) {
   var t = {
    emittedLine: 0,
    emittedColumn: 0,
    sourceLine: 0,
    sourceColumn: 0,
    sourceIndex: 0
   };
   function n(n, i, a) {
    if (a === void 0) {
     a = n.getCompilerOptions();
    }
    var s = a.extendedDiagnostics;
    var c;
    var u;
    var l;
    var f;
    var d;
    var p;
    var m;
    var _;
    var g;
    var h = !(a.sourceMap || a.inlineSourceMap);
    return {
     initialize: y,
     reset: b,
     setSourceFile: E,
     emitPos: S,
     emitNodeWithSourceMap: C,
     emitTokenWithSourceMap: D,
     getText: A,
     getSourceMappingURL: F
    };
    function v(t) {
     return c.skipTrivia ? c.skipTrivia(t) : e.skipTrivia(u, t);
    }
    function y(r, i, o, s) {
     if (h || e.fileExtensionIs(r, ".json")) {
      return;
     }
     if (_) {
      b();
     }
     g = s;
     c = undefined;
     u = undefined;
     f = -1;
     d = undefined;
     p = t;
     m = 0;
     _ = {
      sourceMapFilePath: i,
      jsSourceMappingURL: !a.inlineSourceMap ? e.getBaseFileName(e.normalizeSlashes(i)) : undefined,
      sourceMapFile: e.getBaseFileName(e.normalizeSlashes(r)),
      sourceMapSourceRoot: a.sourceRoot || "",
      sourceMapSources: [],
      inputSourceFileNames: [],
      sourceMapNames: [],
      sourceMapMappings: "",
      sourceMapSourcesContent: a.inlineSources ? [] : undefined
     };
     _.sourceMapSourceRoot = e.normalizeSlashes(_.sourceMapSourceRoot);
     if (_.sourceMapSourceRoot.length && _.sourceMapSourceRoot.charCodeAt(_.sourceMapSourceRoot.length - 1) !== 47) {
      _.sourceMapSourceRoot += e.directorySeparator;
     }
     if (a.mapRoot) {
      l = e.normalizeSlashes(a.mapRoot);
      if (o.kind === 277) {
       l = e.getDirectoryPath(e.getSourceFilePathInNewDir(o.fileName, n, l));
      }
      if (!e.isRootedDiskPath(l) && !e.isUrl(l)) {
       l = e.combinePaths(n.getCommonSourceDirectory(), l);
       _.jsSourceMappingURL = e.getRelativePathToDirectoryOrUrl(e.getDirectoryPath(e.normalizePath(r)), e.combinePaths(l, _.jsSourceMappingURL), n.getCurrentDirectory(), n.getCanonicalFileName, true);
      } else {
       _.jsSourceMappingURL = e.combinePaths(l, _.jsSourceMappingURL);
      }
     } else {
      l = e.getDirectoryPath(e.normalizePath(r));
     }
    }
    function b() {
     if (h) {
      return;
     }
     if (g) {
      g.push(_);
     }
     c = undefined;
     l = undefined;
     f = undefined;
     d = undefined;
     p = undefined;
     m = undefined;
     _ = undefined;
     g = undefined;
    }
    function x() {
     return {
      version: 3,
      file: _.sourceMapFile,
      sourceRoot: _.sourceMapSourceRoot,
      sources: _.sourceMapSources,
      names: _.sourceMapNames,
      mappings: _.sourceMapMappings,
      sourcesContent: _.sourceMapSourcesContent
     };
    }
    function k() {
     if (!d || d === p) {
      return;
     }
     e.Debug.assert(d.emittedColumn >= 0, "lastEncodedSourceMapSpan.emittedColumn was negative");
     e.Debug.assert(d.sourceIndex >= 0, "lastEncodedSourceMapSpan.sourceIndex was negative");
     e.Debug.assert(d.sourceLine >= 0, "lastEncodedSourceMapSpan.sourceLine was negative");
     e.Debug.assert(d.sourceColumn >= 0, "lastEncodedSourceMapSpan.sourceColumn was negative");
     var t = p.emittedColumn;
     if (p.emittedLine === d.emittedLine) {
      if (_.sourceMapMappings) {
       _.sourceMapMappings += ",";
      }
     } else {
      for (var n = p.emittedLine; n < d.emittedLine; n++) {
       _.sourceMapMappings += ";";
      }
      t = 0;
     }
     _.sourceMapMappings += o(d.emittedColumn - t);
     _.sourceMapMappings += o(d.sourceIndex - p.sourceIndex);
     _.sourceMapMappings += o(d.sourceLine - p.sourceLine);
     _.sourceMapMappings += o(d.sourceColumn - p.sourceColumn);
     if (d.nameIndex >= 0) {
      e.Debug.assert(false, "We do not support name index right now, Make sure to update updateLastEncodedAndRecordedSpans when we start using this");
      _.sourceMapMappings += o(d.nameIndex - m);
      m = d.nameIndex;
     }
     p = d;
    }
    function S(t) {
     if (h || e.positionIsSynthesized(t) || T(c)) {
      return;
     }
     if (s) {
      e.performance.mark("beforeSourcemap");
     }
     var n = e.getLineAndCharacterOfPosition(c, t);
     var r = i.getLine();
     var a = i.getColumn();
     if (!d || d.emittedLine !== r || d.emittedColumn !== a || d.sourceIndex === f && (d.sourceLine > n.line || d.sourceLine === n.line && d.sourceColumn > n.character)) {
      k();
      d = {
       emittedLine: r,
       emittedColumn: a,
       sourceLine: n.line,
       sourceColumn: n.character,
       sourceIndex: f
      };
     } else {
      d.sourceLine = n.line;
      d.sourceColumn = n.character;
      d.sourceIndex = f;
     }
     if (s) {
      e.performance.mark("afterSourcemap");
      e.performance.measure("Source Map", "beforeSourcemap", "afterSourcemap");
     }
    }
    function w(e) {
     return typeof e === "object" && !!e.mappings && typeof e.mappings === "string" && !!e.sources;
    }
    function C(t, o, s) {
     var u;
     if (h || e.isInJsonFile(o)) {
      return s(t, o);
     }
     if (o) {
      if (e.isUnparsedSource(o) && o.sourceMapText !== undefined) {
       var f = o.sourceMapText;
       var p = void 0;
       try {
        p = JSON.parse(f);
       } catch (e) {}
       if (!p || !w(p)) {
        return s(t, o);
       }
       var m = i.getLine();
       var g = i.getColumn();
       var y = p;
       var b = a.sourceRoot ? n.getCommonSourceDirectory() : l;
       var x = e.createMap();
       var C = e.createMap();
       var D = e.sourcemaps.decodeMappings(y);
       for (var T = D.next(), A = T.value, F = T.done; !F; u = D.next(), A = u.value, F = u.done, 
       u) {
        var P = "" + A.sourceIndex;
        if (!x.has(P)) {
         var I = y.sources[A.sourceIndex];
         var O = y.sourceRoot ? e.combinePaths(y.sourceRoot, I) : I;
         var M = e.combinePaths(e.getDirectoryPath(o.sourceMapPath), O);
         var L = e.getRelativePathToDirectoryOrUrl(b, M, n.getCurrentDirectory(), n.getCanonicalFileName, true);
         x.set(P, L);
         C.set(P, e.getNormalizedAbsolutePath(L, b));
        }
        var R = x.get(P);
        var B = C.get(P);
        N(B, y.sourcesContent ? y.sourcesContent[A.sourceIndex] : null, R);
        var z = _.sourceMapSources.indexOf(R);
        k();
        d = r({}, A, {
         emittedLine: A.emittedLine + m,
         emittedColumn: A.emittedLine === 0 ? A.emittedColumn + g : A.emittedColumn,
         sourceIndex: z
        });
       }
       return s(t, o);
      }
      var j = o.emitNode;
      var q = j && j.flags || 0;
      var U = j && j.sourceMapRange;
      var J = U || o, K = J.pos, V = J.end;
      var W = U && U.source;
      var H = c;
      if (W === H) W = undefined;
      if (W) E(W);
      if (o.kind !== 304 && (q & 16) === 0 && K >= 0) {
       S(v(K));
      }
      if (W) E(H);
      if (q & 64) {
       h = true;
       s(t, o);
       h = false;
      } else {
       s(t, o);
      }
      if (W) E(W);
      if (o.kind !== 304 && (q & 32) === 0 && V >= 0) {
       S(V);
      }
      if (W) E(H);
     }
    }
    function D(t, n, r, i, a) {
     if (h || e.isInJsonFile(t)) {
      return a(n, r, i);
     }
     var o = t && t.emitNode;
     var s = o && o.flags || 0;
     var c = o && o.tokenSourceMapRanges && o.tokenSourceMapRanges[n];
     i = v(c ? c.pos : i);
     if ((s & 128) === 0 && i >= 0) {
      S(i);
     }
     i = a(n, r, i);
     if (c) i = c.end;
     if ((s & 256) === 0 && i >= 0) {
      S(i);
     }
     return i;
    }
    function T(t) {
     return e.fileExtensionIs(t.fileName, ".json");
    }
    function E(e) {
     if (h) {
      return;
     }
     c = e;
     u = c.text;
     if (T(e)) {
      return;
     }
     N(e.fileName, e.text);
    }
    function N(t, r, i) {
     if (!i) {
      var o = a.sourceRoot ? n.getCommonSourceDirectory() : l;
      i = e.getRelativePathToDirectoryOrUrl(o, t, n.getCurrentDirectory(), n.getCanonicalFileName, true);
     }
     f = _.sourceMapSources.indexOf(i);
     if (f === -1) {
      f = _.sourceMapSources.length;
      _.sourceMapSources.push(i);
      _.inputSourceFileNames.push(t);
      if (a.inlineSources) {
       _.sourceMapSourcesContent.push(r);
      }
     }
    }
    function A() {
     if (h || T(c)) {
      return undefined;
     }
     k();
     return JSON.stringify(x());
    }
    function F() {
     if (h || T(c)) {
      return undefined;
     }
     if (a.inlineSourceMap) {
      var t = e.base64encode(e.sys, A());
      return _.jsSourceMappingURL = "data:application/json;base64," + t;
     } else {
      return _.jsSourceMappingURL;
     }
    }
   }
   e.createSourceMapWriter = n;
   var i = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
   function a(e) {
    if (e < 64) {
     return i.charAt(e);
    }
    throw TypeError(e + ": not a 64 based value");
   }
   function o(e) {
    if (e < 0) {
     e = (-e << 1) + 1;
    } else {
     e = e << 1;
    }
    var t = "";
    do {
     var n = e & 31;
     e = e >> 5;
     if (e > 0) {
      n = n | 32;
     }
     t = t + a(n);
    } while (e > 0);
    return t;
   }
  })(s || (s = {}));
  var s;
  (function(e) {
   function t(t, n) {
    var r = t.extendedDiagnostics;
    var i = e.getNewLineCharacter(t);
    var a;
    var o = -1;
    var s = -1;
    var c = -1;
    var u;
    var l;
    var f;
    var d;
    var p = false;
    var m = !!t.removeComments;
    return {
     reset: O,
     setWriter: M,
     setSourceFile: L,
     emitNodeWithComments: _,
     emitBodyWithDetachedComments: k,
     emitTrailingCommentsOfPosition: A,
     emitLeadingCommentsOfPosition: T
    };
    function _(t, n, i) {
     if (m) {
      i(t, n);
      return;
     }
     if (n) {
      p = false;
      var a = n.emitNode;
      var u = a && a.flags || 0;
      var l = a && a.commentRange || n, f = l.pos, d = l.end;
      if (f < 0 && d < 0 || f === d) {
       g(t, n, a, u, i);
      } else {
       if (r) {
        e.performance.mark("preEmitNodeWithComment");
       }
       var _ = n.kind !== 304;
       var h = f < 0 || (u & 512) !== 0 || n.kind === 10;
       var v = d < 0 || (u & 1024) !== 0 || n.kind === 10;
       if (!h) {
        S(f, _);
       }
       var y = o;
       var b = s;
       var x = c;
       if (!h) {
        o = f;
       }
       if (!v) {
        s = d;
        if (n.kind === 236) {
         c = d;
        }
       }
       if (r) {
        e.performance.measure("commentTime", "preEmitNodeWithComment");
       }
       g(t, n, a, u, i);
       if (r) {
        e.performance.mark("postEmitNodeWithComment");
       }
       o = y;
       s = b;
       c = x;
       if (!v && _) {
        E(d);
       }
       if (r) {
        e.performance.measure("commentTime", "postEmitNodeWithComment");
       }
      }
     }
    }
    function g(t, n, i, a, o) {
     var s = i && i.leadingComments;
     if (e.some(s)) {
      if (r) {
       e.performance.mark("preEmitNodeWithSynthesizedComments");
      }
      e.forEach(s, h);
      if (r) {
       e.performance.measure("commentTime", "preEmitNodeWithSynthesizedComments");
      }
     }
     x(t, n, a, o);
     var c = i && i.trailingComments;
     if (e.some(c)) {
      if (r) {
       e.performance.mark("postEmitNodeWithSynthesizedComments");
      }
      e.forEach(c, v);
      if (r) {
       e.performance.measure("commentTime", "postEmitNodeWithSynthesizedComments");
      }
     }
    }
    function h(e) {
     if (e.kind === 2) {
      a.writeLine();
     }
     y(e);
     if (e.hasTrailingNewLine || e.kind === 2) {
      a.writeLine();
     } else {
      a.write(" ");
     }
    }
    function v(e) {
     if (!a.isAtStartOfLine()) {
      a.write(" ");
     }
     y(e);
     if (e.hasTrailingNewLine) {
      a.writeLine();
     }
    }
    function y(t) {
     var n = b(t);
     var r = t.kind === 3 ? e.computeLineStarts(n) : undefined;
     e.writeCommentRange(n, r, a, 0, n.length, i);
    }
    function b(e) {
     return e.kind === 3 ? "/*" + e.text + "*/" : "//" + e.text;
    }
    function x(e, t, n, r) {
     if (n & 2048) {
      m = true;
      r(e, t);
      m = false;
     } else {
      r(e, t);
     }
    }
    function k(t, n, i) {
     if (r) {
      e.performance.mark("preEmitBodyWithDetachedComments");
     }
     var o = n.pos, s = n.end;
     var c = e.getEmitFlags(t);
     var u = o < 0 || (c & 512) !== 0;
     var l = m || s < 0 || (c & 1024) !== 0;
     if (!u) {
      z(n);
     }
     if (r) {
      e.performance.measure("commentTime", "preEmitBodyWithDetachedComments");
     }
     if (c & 2048 && !m) {
      m = true;
      i(t);
      m = false;
     } else {
      i(t);
     }
     if (r) {
      e.performance.mark("beginEmitBodyWithDetachedCommetns");
     }
     if (!l) {
      S(n.end, true);
      if (p && !a.isAtStartOfLine()) {
       a.writeLine();
      }
     }
     if (r) {
      e.performance.measure("commentTime", "beginEmitBodyWithDetachedCommetns");
     }
    }
    function S(e, t) {
     p = false;
     if (t) {
      P(e, D);
     } else if (e === 0) {
      P(e, w);
     }
    }
    function w(e, t, n, r, i) {
     if (q(e, t)) {
      D(e, t, n, r, i);
     }
    }
    function C(n, r) {
     if (t.onlyPrintJsDocStyle) {
      return e.isJSDocLikeText(n, r) || e.isPinnedComment(n, r);
     }
     return true;
    }
    function D(t, r, o, s, c) {
     if (!C(l, t)) return;
     if (!p) {
      e.emitNewLineBeforeLeadingCommentOfPosition(f, a, c, t);
      p = true;
     }
     if (n) n(t);
     e.writeCommentRange(l, f, a, t, r, i);
     if (n) n(r);
     if (s) {
      a.writeLine();
     } else if (o === 3) {
      a.write(" ");
     }
    }
    function T(e) {
     if (m || e === -1) {
      return;
     }
     S(e, true);
    }
    function E(e) {
     I(e, N);
    }
    function N(t, r, o, s) {
     if (!C(l, t)) return;
     if (!a.isAtStartOfLine()) {
      a.write(" ");
     }
     if (n) n(t);
     e.writeCommentRange(l, f, a, t, r, i);
     if (n) n(r);
     if (s) {
      a.writeLine();
     }
    }
    function A(t, n) {
     if (m) {
      return;
     }
     if (r) {
      e.performance.mark("beforeEmitTrailingCommentsOfPosition");
     }
     I(t, n ? N : F);
     if (r) {
      e.performance.measure("commentTime", "beforeEmitTrailingCommentsOfPosition");
     }
    }
    function F(t, r, o, s) {
     if (n) n(t);
     e.writeCommentRange(l, f, a, t, r, i);
     if (n) n(r);
     if (s) {
      a.writeLine();
     } else {
      a.write(" ");
     }
    }
    function P(t, n) {
     if (o === -1 || t !== o) {
      if (R(t)) {
       B(n);
      } else {
       e.forEachLeadingCommentRange(l, t, n, t);
      }
     }
    }
    function I(t, n) {
     if (s === -1 || t !== s && t !== c) {
      e.forEachTrailingCommentRange(l, t, n);
     }
    }
    function O() {
     u = undefined;
     l = undefined;
     f = undefined;
     d = undefined;
    }
    function M(e) {
     a = e;
    }
    function L(t) {
     u = t;
     l = u.text;
     f = e.getLineStarts(u);
     d = undefined;
    }
    function R(t) {
     return d !== undefined && e.last(d).nodePos === t;
    }
    function B(t) {
     var n = e.last(d).detachedCommentEndPos;
     if (d.length - 1) {
      d.pop();
     } else {
      d = undefined;
     }
     e.forEachLeadingCommentRange(l, n, t, n);
    }
    function z(t) {
     var n = e.emitDetachedComments(l, f, a, j, t, i, m);
     if (n) {
      if (d) {
       d.push(n);
      } else {
       d = [ n ];
      }
     }
    }
    function j(t, r, i, a, o, s) {
     if (!C(l, a)) return;
     if (n) n(a);
     e.writeCommentRange(t, r, i, a, o, s);
     if (n) n(o);
    }
    function q(t, n) {
     return e.isRecognizedTripleSlashComment(l, t, n);
    }
   }
   e.createCommentWriter = t;
  })(s || (s = {}));
  var s;
  (function(e) {
   var t = ".tsbundleinfo";
   var n = d();
   function i(t, n, r, i) {
    if (i === void 0) {
     i = false;
    }
    var o = e.isArray(r) ? r : e.getSourceFilesToEmit(t, r);
    var s = t.getCompilerOptions();
    if (s.outFile || s.out) {
     if (o.length) {
      var c = e.createBundle(o, t.getPrependNodes());
      var u = n(a(c, t, i), c);
      if (u) {
       return u;
      }
     }
    } else {
     for (var l = 0, f = o; l < f.length; l++) {
      var d = f[l];
      var u = n(a(d, t, i), d);
      if (u) {
       return u;
      }
     }
    }
   }
   e.forEachEmittedFile = i;
   function a(n, r, i) {
    var a = r.getCompilerOptions();
    if (n.kind === 278) {
     var s = a.outFile || a.out;
     var u = o(s, a);
     var l = i || e.getEmitDeclarations(a) ? e.removeFileExtension(s) + ".d.ts" : undefined;
     var f = e.getAreDeclarationMapsEnabled(a) ? l + ".map" : undefined;
     var d = a.references && s ? e.removeFileExtension(s) + t : undefined;
     return {
      jsFilePath: s,
      sourceMapFilePath: u,
      declarationFilePath: l,
      declarationMapPath: f,
      bundleInfoPath: d
     };
    } else {
     var s = e.getOwnEmitOutputFilePath(n.fileName, r, c(n, a));
     var u = e.isJsonSourceFile(n) ? undefined : o(s, a);
     var p = e.isSourceFileJavaScript(n);
     var l = (i || e.getEmitDeclarations(a)) && !p ? e.getDeclarationEmitOutputFilePath(n.fileName, r) : undefined;
     var f = e.getAreDeclarationMapsEnabled(a) ? l + ".map" : undefined;
     return {
      jsFilePath: s,
      sourceMapFilePath: u,
      declarationFilePath: l,
      declarationMapPath: f,
      bundleInfoPath: undefined
     };
    }
   }
   e.getOutputPathsFor = a;
   function o(e, t) {
    return t.sourceMap && !t.inlineSourceMap ? e + ".map" : undefined;
   }
   function s() {
    return {
     originalOffset: -1,
     totalLength: -1
    };
   }
   function c(t, n) {
    if (e.isJsonSourceFile(t)) {
     return ".json";
    }
    if (n.jsx === 1) {
     if (e.isSourceFileJavaScript(t)) {
      if (e.fileExtensionIs(t.fileName, ".jsx")) {
       return ".jsx";
      }
     } else if (t.languageVariant === 1) {
      return ".jsx";
     }
    }
    return ".js";
   }
   e.getOutputExtension = c;
   function u(t, n, a, o, c, u) {
    var l = n.getCompilerOptions();
    var d = l.sourceMap || l.inlineSourceMap || e.getAreDeclarationMapsEnabled(l) ? [] : undefined;
    var p = l.listEmittedFiles ? [] : undefined;
    var m = e.createDiagnosticCollection();
    var _ = n.getNewLine();
    var g = e.createTextWriter(_);
    var h = e.createSourceMapWriter(n, g);
    var v = e.createSourceMapWriter(n, g, {
     sourceMap: l.declarationMap,
     sourceRoot: l.sourceRoot,
     mapRoot: l.mapRoot,
     extendedDiagnostics: l.extendedDiagnostics
    });
    var y = s();
    var b = false;
    e.performance.mark("beforePrint");
    i(n, x, e.getSourceFilesToEmit(n, a), o);
    e.performance.measure("printTime", "beforePrint");
    return {
     emitSkipped: b,
     diagnostics: m.getDiagnostics(),
     emittedFiles: p,
     sourceMaps: d
    };
    function x(e, t) {
     var n = e.jsFilePath, r = e.sourceMapFilePath, i = e.declarationFilePath, a = e.declarationMapPath, s = e.bundleInfoPath;
     k(t, n, r, s);
     S(t, i, a);
     if (!b && p) {
      if (!o) {
       p.push(n);
      }
      if (r) {
       p.push(r);
      }
      if (i) {
       p.push(i);
      }
      if (s) {
       p.push(s);
      }
     }
    }
    function k(i, a, s, u) {
     if (n.isEmitBlocked(a) || l.noEmit || l.emitDeclarationOnly) {
      b = true;
      return;
     }
     if (o) {
      return;
     }
     var d = e.transformNodes(t, n, l, [ i ], c, false);
     var p = f(r({}, l, {
      noEmitHelpers: l.noEmitHelpers
     }), {
      hasGlobalName: t.hasGlobalName,
      onEmitNode: d.emitNodeWithNotification,
      substituteNode: d.substituteNode,
      onEmitSourceMapOfNode: h.emitNodeWithSourceMap,
      onEmitSourceMapOfToken: h.emitTokenWithSourceMap,
      onEmitSourceMapOfPosition: h.emitPos,
      onSetSourceFile: D
     });
     e.Debug.assert(d.transformed.length === 1, "Should only see one output from the transform");
     C(a, s, d.transformed[0], u, p, h);
     d.dispose();
    }
    function S(i, a, s) {
     if (!(a && !e.isInJavaScriptFile(i))) {
      return;
     }
     var c = e.isSourceFile(i) ? [ i ] : i.sourceFiles;
     var d = e.filter(c, e.isSourceFileNotJavaScript);
     var p = l.outFile || l.out ? [ e.createBundle(d, !e.isSourceFile(i) ? i.prepends : undefined) ] : d;
     if (o && !e.getEmitDeclarations(l)) {
      d.forEach(w);
     }
     var _ = e.transformNodes(t, n, l, p, e.concatenate([ e.transformDeclarations ], u), false);
     if (e.length(_.diagnostics)) {
      for (var g = 0, h = _.diagnostics; g < h.length; g++) {
       var y = h[g];
       m.add(y);
      }
     }
     var x = f(r({}, l, {
      onlyPrintJsDocStyle: true,
      noEmitHelpers: true
     }), {
      hasGlobalName: t.hasGlobalName,
      onEmitSourceMapOfNode: v.emitNodeWithSourceMap,
      onEmitSourceMapOfToken: v.emitTokenWithSourceMap,
      onEmitSourceMapOfPosition: v.emitPos,
      onSetSourceFile: T,
      onEmitNode: _.emitNodeWithNotification,
      substituteNode: _.substituteNode
     });
     var k = !!_.diagnostics && !!_.diagnostics.length || !!n.isEmitBlocked(a) || !!l.noEmit;
     b = b || k;
     if (!k || o) {
      e.Debug.assert(_.transformed.length === 1, "Should only see one output from the decl transform");
      C(a, s, _.transformed[0], undefined, x, v);
     }
     _.dispose();
    }
    function w(n) {
     if (e.isExportAssignment(n)) {
      if (n.expression.kind === 71) {
       t.collectLinkedAliases(n.expression, true);
      }
      return;
     } else if (e.isExportSpecifier(n)) {
      t.collectLinkedAliases(n.propertyName || n.name, true);
      return;
     }
     e.forEachChild(n, w);
    }
    function C(t, r, i, a, o, c) {
     var u = i.kind === 278 ? i : undefined;
     var f = i.kind === 277 ? i : undefined;
     var p = u ? u.sourceFiles : [ f ];
     c.initialize(t, r || "", i, d);
     if (u) {
      o.writeBundle(u, g, y);
     } else {
      o.writeFile(f, g);
     }
     g.writeLine();
     var _ = c.getSourceMappingURL();
     if (_) {
      g.write("//# " + "sourceMappingURL" + "=" + _);
     }
     if (r) {
      e.writeFile(n, m, r, c.getText(), false, p);
     }
     e.writeFile(n, m, t, g.getText(), !!l.emitBOM, p);
     if (a) {
      y.totalLength = g.getTextPos();
      e.writeFile(n, m, a, JSON.stringify(y, undefined, 2), false);
     }
     c.reset();
     g.clear();
     y = s();
    }
    function D(e) {
     h.setSourceFile(e);
    }
    function T(e) {
     v.setSourceFile(e);
    }
   }
   e.emitFiles = u;
   var l;
   (function(e) {
    e[e["Notification"] = 0] = "Notification";
    e[e["Comments"] = 1] = "Comments";
    e[e["SourceMaps"] = 2] = "SourceMaps";
    e[e["Emit"] = 3] = "Emit";
   })(l || (l = {}));
   function f(t, n) {
    if (t === void 0) {
     t = {};
    }
    if (n === void 0) {
     n = {};
    }
    var r = n.hasGlobalName, i = n.onEmitSourceMapOfNode, a = n.onEmitSourceMapOfToken, o = n.onEmitSourceMapOfPosition, s = n.onEmitNode, c = n.onSetSourceFile, u = n.substituteNode, l = n.onBeforeEmitNodeArray, f = n.onAfterEmitNodeArray, d = n.onBeforeEmitToken, _ = n.onAfterEmitToken;
    var g = e.getNewLineCharacter(t);
    var h = e.createCommentWriter(t, o);
    var v = h.emitNodeWithComments, y = h.emitBodyWithDetachedComments, b = h.emitTrailingCommentsOfPosition, x = h.emitLeadingCommentsOfPosition;
    var k;
    var S;
    var w;
    var C;
    var D;
    var T;
    var E;
    var N;
    var A;
    var F;
    var P = Jr;
    var I = e.noop;
    var O = Hr;
    var M = false;
    if (t.omitTrailingSemicolon) {
     I = jr;
     O = Wr;
    }
    var L = {
     pos: -1,
     end: -1
    };
    var R = e.getEmitModuleKind(t);
    var B = e.createMap();
    var z;
    te();
    return {
     printNode: j,
     printList: q,
     printFile: J,
     printBundle: U,
     writeNode: V,
     writeList: W,
     writeFile: $,
     writeBundle: H
    };
    function j(t, n, r) {
     switch (t) {
     case 0:
      e.Debug.assert(e.isSourceFile(n), "Expected a SourceFile node.");
      break;

     case 2:
      e.Debug.assert(e.isIdentifier(n), "Expected an Identifier node.");
      break;

     case 1:
      e.Debug.assert(e.isExpression(n), "Expected an Expression node.");
      break;
     }
     switch (n.kind) {
     case 277:
      return J(n);

     case 278:
      return U(n);

     case 279:
      return K(n);
     }
     V(t, n, r, X());
     return Q();
    }
    function q(e, t, n) {
     W(e, t, n, X());
     return Q();
    }
    function U(e) {
     H(e, X());
     return Q();
    }
    function J(e) {
     $(e, X());
     return Q();
    }
    function K(e) {
     G(e, X());
     return Q();
    }
    function V(e, t, n, r) {
     var i = A;
     ee(r);
     Y(e, t, n);
     te();
     A = i;
    }
    function W(e, t, n, r) {
     var i = A;
     ee(r);
     if (n) {
      Z(n);
     }
     Lr(L, t, e);
     te();
     A = i;
    }
    function H(e, t, n) {
     z = false;
     var r = A;
     ee(t);
     yr(e);
     vr(e);
     me(e);
     fr(e);
     for (var i = 0, a = e.prepends; i < a.length; i++) {
      var o = a[i];
      Y(4, o, undefined);
      Zr();
     }
     if (n) {
      n.originalOffset = A.getTextPos();
     }
     for (var s = 0, c = e.sourceFiles; s < c.length; s++) {
      var u = c[s];
      Y(0, u, u);
     }
     te();
     A = r;
    }
    function G(e, t) {
     var n = A;
     ee(t);
     Y(4, e, undefined);
     te();
     A = n;
    }
    function $(e, t) {
     z = true;
     var n = A;
     ee(t);
     yr(e);
     vr(e);
     Y(0, e, e);
     te();
     A = n;
    }
    function X() {
     return F || (F = e.createTextWriter(g));
    }
    function Q() {
     var e = F.getText();
     F.clear();
     return e;
    }
    function Y(e, t, n) {
     if (n) {
      Z(n);
     }
     var r = ae(0, e);
     r(e, t);
    }
    function Z(e) {
     k = e;
     h.setSourceFile(e);
     if (c) {
      c(e);
     }
    }
    function ee(e) {
     A = e;
     h.setWriter(e);
    }
    function te() {
     S = [];
     w = [];
     C = e.createMap();
     D = [];
     T = 0;
     E = [];
     h.reset();
     ee(undefined);
    }
    function ne(e) {
     if (!e) return;
     var t = ae(0, 4);
     t(4, e);
    }
    function re(e) {
     if (!e) return;
     var t = ae(0, 2);
     t(2, e);
    }
    function ie(e) {
     if (!e) return;
     var t = ae(0, 1);
     t(1, e);
    }
    function ae(t, n) {
     switch (t) {
     case 0:
      if (s) {
       return se;
      }

     case 1:
      if (v && n !== 0) {
       return ce;
      }
      return ue;

     case 2:
      if (i && n !== 0) {
       return le;
      }

     case 3:
      return fe;

     default:
      return e.Debug.assertNever(t, "Unexpected value for PipelinePhase: " + t);
     }
    }
    function oe(e, t) {
     return ae(e + 1, t);
    }
    function se(t, n) {
     e.Debug.assertDefined(s)(t, n, oe(0, t));
    }
    function ce(t, n) {
     e.Debug.assertDefined(v);
     e.Debug.assert(t !== 0);
     v(t, pe(t, n), oe(1, t));
    }
    function ue(e, t) {
     var n = oe(1, e);
     n(e, pe(e, t));
    }
    function le(t, n) {
     e.Debug.assert(t !== 0);
     e.Debug.assertDefined(i)(t, n, fe);
    }
    function fe(t, n) {
     if (t === 0) return lr(e.cast(n, e.isSourceFile));
     if (t === 2) return ve(e.cast(n, e.isIdentifier));
     if (t === 3) return de(e.cast(n, e.isTypeParameterDeclaration));
     if (t === 4) {
      if (e.isKeyword(n.kind)) return ri(n, Gr);
      switch (n.kind) {
      case 14:
      case 15:
      case 16:
       return ge(n);

      case 279:
       return he(n);

      case 71:
       return ve(n);

      case 146:
       return ye(n);

      case 147:
       return xe(n);

      case 148:
       return ke(n);

      case 149:
       return Se(n);

      case 150:
       return we(n);

      case 151:
       return Ce(n);

      case 152:
       return De(n);

      case 153:
       return Te(n);

      case 154:
       return Ee(n);

      case 155:
       return Ne(n);

      case 156:
      case 157:
       return Ae(n);

      case 158:
       return Fe(n);

      case 159:
       return Pe(n);

      case 160:
       return Ie(n);

      case 161:
       return Me(n);

      case 162:
       return Le(n);

      case 163:
       return Re(n);

      case 287:
       return Be(n);

      case 164:
       return Ue(n);

      case 165:
       return Je(n);

      case 166:
       return Ke(n);

      case 167:
       return Ve(n);

      case 168:
       return He(n);

      case 169:
       return Ge(n);

      case 171:
       return $e(n);

      case 172:
       return Xe(n);

      case 173:
       return Qe(n);

      case 174:
       return Ye(n);

      case 175:
       return Ze(n);

      case 209:
       return Mt(n);

      case 176:
       return et();

      case 177:
       return tt(n);

      case 178:
       return nt(n);

      case 179:
       return rt(n);

      case 180:
       return it(n);

      case 181:
       return at(n);

      case 282:
       P("*");
       return;

      case 283:
       P("?");
       return;

      case 284:
       return ze(n);

      case 285:
       return je(n);

      case 286:
       return qe(n);

      case 170:
      case 288:
       return We(n);

      case 182:
       return ot(n);

      case 183:
       return st(n);

      case 184:
       return ct(n);

      case 214:
       return zt(n);

      case 215:
       return Oe();

      case 216:
       return jt(n);

      case 217:
       return Ut(n);

      case 218:
       return Jt();

      case 219:
       return Kt(n);

      case 220:
       return Vt(n);

      case 221:
       return Ht(n);

      case 222:
       return Gt(n);

      case 223:
       return $t(n);

      case 224:
       return Xt(n);

      case 225:
       return Qt(n);

      case 226:
       return Zt(n);

      case 227:
       return en(n);

      case 228:
       return nn(n);

      case 229:
       return rn(n);

      case 230:
       return an(n);

      case 231:
       return on(n);

      case 232:
       return sn(n);

      case 233:
       return cn(n);

      case 234:
       return un(n);

      case 235:
       return ln(n);

      case 236:
       return fn(n);

      case 237:
       return dn(n);

      case 238:
       return xn(n);

      case 239:
       return Sn(n);

      case 240:
       return wn(n);

      case 241:
       return Cn(n);

      case 242:
       return Dn(n);

      case 243:
       return Tn(n);

      case 244:
       return En(n);

      case 245:
       return Bn(n);

      case 246:
       return Nn(n);

      case 247:
       return Fn(n);

      case 248:
       return Pn(n);

      case 249:
       return In(n);

      case 250:
       return On(n);

      case 251:
       return Mn(n);

      case 252:
       return Ln(n);

      case 253:
       return Rn(n);

      case 254:
       return zn(n);

      case 255:
       return jn(n);

      case 256:
       return;

      case 257:
       return Jn(n);

      case 10:
       return Gn(n);

      case 260:
      case 263:
       return Hn(n);

      case 261:
      case 264:
       return $n(n);

      case 265:
       return Qn(n);

      case 266:
       return Xn(n);

      case 267:
       return Yn(n);

      case 268:
       return Zn(n);

      case 269:
       return tr(n);

      case 270:
       return nr(n);

      case 271:
       return ir(n);

      case 272:
       return ar(n);

      case 273:
       return or(n);

      case 274:
       return sr(n);

      case 275:
       return cr(n);

      case 276:
       return ur(n);
      }
      if (e.isExpression(n)) {
       t = 1;
       n = pe(1, n);
      } else if (e.isToken(n)) {
       return ri(n, Vr);
      }
     }
     if (t === 1) {
      switch (n.kind) {
      case 8:
       return _e(n);

      case 9:
      case 12:
      case 13:
       return ge(n);

      case 71:
       return ve(n);

      case 86:
      case 95:
      case 97:
      case 101:
      case 99:
      case 91:
       ri(n, Gr);
       return;

      case 185:
       return ut(n);

      case 186:
       return lt(n);

      case 187:
       return ft(n);

      case 188:
       return pt(n);

      case 189:
       return mt(n);

      case 190:
       return _t(n);

      case 191:
       return gt(n);

      case 192:
       return ht(n);

      case 193:
       return vt(n);

      case 194:
       return yt(n);

      case 195:
       return bt(n);

      case 196:
       return kt(n);

      case 197:
       return St(n);

      case 198:
       return wt(n);

      case 199:
       return Ct(n);

      case 200:
       return Dt(n);

      case 201:
       return Et(n);

      case 202:
       return Nt(n);

      case 203:
       return At(n);

      case 204:
       return Ft(n);

      case 205:
       return Pt(n);

      case 206:
       return It(n);

      case 207:
       return Ot(n);

      case 208:
       return;

      case 210:
       return Lt(n);

      case 211:
       return Rt(n);

      case 212:
       return Bt(n);

      case 258:
       return Kn(n);

      case 259:
       return Vn(n);

      case 262:
       return Wn(n);

      case 305:
       return _r(n);

      case 306:
       return gr(n);
      }
     }
    }
    function de(e) {
     ne(e.name);
     Qr();
     Gr("in");
     Qr();
     ne(e.constraint);
    }
    function pe(e, t) {
     return t && u && u(e, t) || t;
    }
    function me(n) {
     var r = false;
     var i = n.kind === 278 ? n : undefined;
     if (i && R === e.ModuleKind.None) {
      return;
     }
     var a = i ? i.sourceFiles.length : 1;
     for (var o = 0; o < a; o++) {
      var s = i ? i.sourceFiles[o] : n;
      var c = e.isSourceFile(s) ? s : k;
      var u = t.noEmitHelpers || e.getExternalHelpersModuleName(c) !== undefined;
      var l = e.isSourceFile(s) && !z;
      var f = e.getEmitHelpers(s);
      if (f) {
       for (var d = 0, p = e.stableSort(f, e.compareEmitHelpers); d < p.length; d++) {
        var m = p[d];
        if (!m.scoped) {
         if (u) continue;
         if (l) {
          if (B.get(m.name)) {
           continue;
          }
          B.set(m.name, true);
         }
        } else if (i) {
         continue;
        }
        if (typeof m.text === "string") {
         oi(m.text);
        } else {
         oi(m.text(Fi));
        }
        r = true;
       }
      }
     }
     return r;
    }
    function _e(e) {
     ge(e);
    }
    function ge(n) {
     var r = hi(n);
     if ((t.sourceMap || t.inlineSourceMap) && (n.kind === 9 || e.isTemplateLiteralKind(n.kind))) {
      qr(r);
     } else {
      Ur(r);
     }
    }
    function he(e) {
     A.rawWrite(e.text);
    }
    function ve(e) {
     var t = e.symbol ? Kr : P;
     t(gi(e, false), e.symbol);
     Lr(e, e.typeArguments, 26896);
    }
    function ye(e) {
     be(e.left);
     Vr(".");
     ne(e.right);
    }
    function be(e) {
     if (e.kind === 71) {
      ie(e);
     } else {
      ne(e);
     }
    }
    function xe(e) {
     Vr("[");
     ie(e.expression);
     Vr("]");
    }
    function ke(e) {
     ne(e.name);
     if (e.constraint) {
      Qr();
      Gr("extends");
      Qr();
      ne(e.constraint);
     }
     if (e.default) {
      Qr();
      $r("=");
      Qr();
      ne(e.default);
     }
    }
    function Se(e) {
     Nr(e, e.decorators);
     xr(e, e.modifiers);
     ne(e.dotDotDotToken);
     br(e.name, Xr);
     ne(e.questionToken);
     if (e.parent && e.parent.kind === 287 && !e.name) {
      ne(e.type);
     } else {
      kr(e.type);
     }
     Sr(e.initializer, e.type ? e.type.end : e.questionToken ? e.questionToken.end : e.name ? e.name.end : e.modifiers ? e.modifiers.end : e.decorators ? e.decorators.end : e.pos, e);
    }
    function we(e) {
     Vr("@");
     ie(e.expression);
    }
    function Ce(e) {
     Nr(e, e.decorators);
     xr(e, e.modifiers);
     br(e.name, Yr);
     ne(e.questionToken);
     kr(e.type);
     O();
    }
    function De(e) {
     Nr(e, e.decorators);
     xr(e, e.modifiers);
     ne(e.name);
     ne(e.questionToken);
     ne(e.exclamationToken);
     kr(e.type);
     Sr(e.initializer, e.type ? e.type.end : e.questionToken ? e.questionToken.end : e.name.end, e);
     O();
    }
    function Te(e) {
     vi(e);
     Nr(e, e.decorators);
     xr(e, e.modifiers);
     ne(e.name);
     ne(e.questionToken);
     Fr(e, e.typeParameters);
     Pr(e, e.parameters);
     kr(e.type);
     O();
     yi(e);
    }
    function Ee(e) {
     Nr(e, e.decorators);
     xr(e, e.modifiers);
     ne(e.asteriskToken);
     ne(e.name);
     ne(e.questionToken);
     _n(e, gn);
    }
    function Ne(e) {
     xr(e, e.modifiers);
     Gr("constructor");
     _n(e, gn);
    }
    function Ae(e) {
     Nr(e, e.decorators);
     xr(e, e.modifiers);
     Gr(e.kind === 156 ? "get" : "set");
     Qr();
     ne(e.name);
     _n(e, gn);
    }
    function Fe(e) {
     vi(e);
     Nr(e, e.decorators);
     xr(e, e.modifiers);
     Fr(e, e.typeParameters);
     Pr(e, e.parameters);
     kr(e.type);
     O();
     yi(e);
    }
    function Pe(e) {
     vi(e);
     Nr(e, e.decorators);
     xr(e, e.modifiers);
     Gr("new");
     Qr();
     Fr(e, e.typeParameters);
     Pr(e, e.parameters);
     kr(e.type);
     O();
     yi(e);
    }
    function Ie(e) {
     Nr(e, e.decorators);
     xr(e, e.modifiers);
     Mr(e, e.parameters);
     kr(e.type);
     O();
    }
    function Oe() {
     O();
    }
    function Me(e) {
     ne(e.parameterName);
     Qr();
     Gr("is");
     Qr();
     ne(e.type);
    }
    function Le(e) {
     ne(e.typeName);
     Ar(e, e.typeArguments);
    }
    function Re(e) {
     vi(e);
     Fr(e, e.typeParameters);
     Or(e, e.parameters);
     Qr();
     Vr("=>");
     Qr();
     ne(e.type);
     yi(e);
    }
    function Be(e) {
     P("function");
     Pr(e, e.parameters);
     P(":");
     ne(e.type);
    }
    function ze(e) {
     P("?");
     ne(e.type);
    }
    function je(e) {
     P("!");
     ne(e.type);
    }
    function qe(e) {
     ne(e.type);
     P("=");
    }
    function Ue(e) {
     vi(e);
     Gr("new");
     Qr();
     Fr(e, e.typeParameters);
     Pr(e, e.parameters);
     Qr();
     Vr("=>");
     Qr();
     ne(e.type);
     yi(e);
    }
    function Je(e) {
     Gr("typeof");
     Qr();
     ne(e.exprName);
    }
    function Ke(t) {
     Vr("{");
     var n = e.getEmitFlags(t) & 1 ? 384 : 16449;
     Lr(t, t.members, n | 262144);
     Vr("}");
    }
    function Ve(e) {
     ne(e.elementType);
     Vr("[");
     Vr("]");
    }
    function We(e) {
     P("...");
     ne(e.type);
    }
    function He(e) {
     Vr("[");
     Lr(e, e.elementTypes, 272);
     Vr("]");
    }
    function Ge(e) {
     ne(e.type);
     P("?");
    }
    function $e(e) {
     Lr(e, e.types, 260);
    }
    function Xe(e) {
     Lr(e, e.types, 264);
    }
    function Qe(e) {
     ne(e.checkType);
     Qr();
     Gr("extends");
     Qr();
     ne(e.extendsType);
     Qr();
     Vr("?");
     Qr();
     ne(e.trueType);
     Qr();
     Vr(":");
     Qr();
     ne(e.falseType);
    }
    function Ye(e) {
     Gr("infer");
     Qr();
     ne(e.typeParameter);
    }
    function Ze(e) {
     Vr("(");
     ne(e.type);
     Vr(")");
    }
    function et() {
     Gr("this");
    }
    function tt(e) {
     ii(e.operator, Gr);
     Qr();
     ne(e.type);
    }
    function nt(e) {
     ne(e.objectType);
     Vr("[");
     ne(e.indexType);
     Vr("]");
    }
    function rt(t) {
     var n = e.getEmitFlags(t);
     Vr("{");
     if (n & 1) {
      Qr();
     } else {
      Zr();
      ei();
     }
     if (t.readonlyToken) {
      ne(t.readonlyToken);
      if (t.readonlyToken.kind !== 132) {
       Gr("readonly");
      }
      Qr();
     }
     Vr("[");
     var r = ae(0, 3);
     r(3, t.typeParameter);
     Vr("]");
     if (t.questionToken) {
      ne(t.questionToken);
      if (t.questionToken.kind !== 55) {
       Vr("?");
      }
     }
     Vr(":");
     Qr();
     ne(t.type);
     O();
     if (n & 1) {
      Qr();
     } else {
      Zr();
      ti();
     }
     Vr("}");
    }
    function it(e) {
     ie(e.literal);
    }
    function at(e) {
     if (e.isTypeOf) {
      Gr("typeof");
      Qr();
     }
     Gr("import");
     Vr("(");
     ne(e.argument);
     Vr(")");
     if (e.qualifier) {
      Vr(".");
      ne(e.qualifier);
     }
     Ar(e, e.typeArguments);
    }
    function ot(e) {
     Vr("{");
     Lr(e, e.elements, 262576);
     Vr("}");
    }
    function st(e) {
     Vr("[");
     Lr(e, e.elements, 262448);
     Vr("]");
    }
    function ct(e) {
     ne(e.dotDotDotToken);
     if (e.propertyName) {
      ne(e.propertyName);
      Vr(":");
      Qr();
     }
     ne(e.name);
     Sr(e.initializer, e.name.end, e);
    }
    function ut(e) {
     var t = e.elements;
     var n = e.multiLine ? 32768 : 0;
     Rr(e, t, 4466 | n);
    }
    function lt(t) {
     e.forEach(t.properties, ki);
     var n = e.getEmitFlags(t) & 65536;
     if (n) {
      ei();
     }
     var r = t.multiLine ? 32768 : 0;
     var i = k.languageVersion >= 1 && !e.isJsonSourceFile(k) ? 32 : 0;
     Lr(t, t.properties, 263122 | i | r);
     if (n) {
      ti();
     }
    }
    function ft(t) {
     var n = false;
     var r = false;
     if (!(e.getEmitFlags(t) & 131072)) {
      var i = t.expression.end;
      var a = e.skipTrivia(k.text, t.expression.end) + 1;
      var o = e.createToken(23);
      o.pos = i;
      o.end = a;
      n = pi(t, t.expression, o);
      r = pi(t, o, t.name);
     }
     ie(t.expression);
     si(n);
     var s = !n && dt(t.expression);
     if (s) {
      Vr(".");
     }
     tn(23, t.expression.end, Vr, t);
     si(r);
     ne(t.name);
     ci(n, r);
    }
    function dt(n) {
     n = e.skipPartiallyEmittedExpressions(n);
     if (e.isNumericLiteral(n)) {
      var r = hi(n);
      return !n.numericLiteralFlags && !e.stringContains(r, e.tokenToString(23));
     } else if (e.isPropertyAccessExpression(n) || e.isElementAccessExpression(n)) {
      var i = e.getConstantValue(n);
      return typeof i === "number" && isFinite(i) && Math.floor(i) === i && t.removeComments;
     }
    }
    function pt(e) {
     ie(e.expression);
     tn(21, e.expression.end, Vr, e);
     ie(e.argumentExpression);
     tn(22, e.argumentExpression.end, Vr, e);
    }
    function mt(e) {
     ie(e.expression);
     Ar(e, e.typeArguments);
     Rr(e, e.arguments, 1296);
    }
    function _t(e) {
     tn(94, e.pos, Gr, e);
     Qr();
     ie(e.expression);
     Ar(e, e.typeArguments);
     Rr(e, e.arguments, 9488);
    }
    function gt(e) {
     ie(e.tag);
     Ar(e, e.typeArguments);
     Qr();
     ie(e.template);
    }
    function ht(e) {
     Vr("<");
     ne(e.type);
     Vr(">");
     ie(e.expression);
    }
    function vt(e) {
     var t = tn(19, e.pos, Vr, e);
     ie(e.expression);
     tn(20, e.expression ? e.expression.end : t, Vr, e);
    }
    function yt(e) {
     Si(e.name);
     pn(e);
    }
    function bt(e) {
     Nr(e, e.decorators);
     xr(e, e.modifiers);
     _n(e, xt);
    }
    function xt(e) {
     Fr(e, e.typeParameters);
     Or(e, e.parameters);
     kr(e.type);
     Qr();
     ne(e.equalsGreaterThanToken);
    }
    function kt(e) {
     tn(80, e.pos, Gr, e);
     Qr();
     ie(e.expression);
    }
    function St(e) {
     tn(103, e.pos, Gr, e);
     Qr();
     ie(e.expression);
    }
    function wt(e) {
     tn(105, e.pos, Gr, e);
     Qr();
     ie(e.expression);
    }
    function Ct(e) {
     tn(121, e.pos, Gr, e);
     Qr();
     ie(e.expression);
    }
    function Dt(e) {
     ii(e.operator, $r);
     if (Tt(e)) {
      Qr();
     }
     ie(e.operand);
    }
    function Tt(e) {
     var t = e.operand;
     return t.kind === 200 && (e.operator === 37 && (t.operator === 37 || t.operator === 43) || e.operator === 38 && (t.operator === 38 || t.operator === 44));
    }
    function Et(e) {
     ie(e.operand);
     ii(e.operator, $r);
    }
    function Nt(e) {
     var t = e.operatorToken.kind !== 26;
     var n = pi(e, e.left, e.operatorToken);
     var r = pi(e, e.operatorToken, e.right);
     ie(e.left);
     si(n, t ? " " : undefined);
     x(e.operatorToken.pos);
     ri(e.operatorToken, $r);
     b(e.operatorToken.end, true);
     si(r, " ");
     ie(e.right);
     ci(n, r);
    }
    function At(e) {
     var t = pi(e, e.condition, e.questionToken);
     var n = pi(e, e.questionToken, e.whenTrue);
     var r = pi(e, e.whenTrue, e.colonToken);
     var i = pi(e, e.colonToken, e.whenFalse);
     ie(e.condition);
     si(t, " ");
     ne(e.questionToken);
     si(n, " ");
     ie(e.whenTrue);
     ci(t, n);
     si(r, " ");
     ne(e.colonToken);
     si(i, " ");
     ie(e.whenFalse);
     ci(r, i);
    }
    function Ft(e) {
     ne(e.head);
     Lr(e, e.templateSpans, 131072);
    }
    function Pt(e) {
     tn(116, e.pos, Gr, e);
     ne(e.asteriskToken);
     Dr(e.expression);
    }
    function It(e) {
     Vr("...");
     ie(e.expression);
    }
    function Ot(e) {
     Si(e.name);
     kn(e);
    }
    function Mt(e) {
     ie(e.expression);
     Ar(e, e.typeArguments);
    }
    function Lt(e) {
     ie(e.expression);
     if (e.type) {
      Qr();
      Gr("as");
      Qr();
      ne(e.type);
     }
    }
    function Rt(e) {
     ie(e.expression);
     $r("!");
    }
    function Bt(e) {
     ni(e.keywordToken, e.pos, Vr);
     Vr(".");
     ne(e.name);
    }
    function zt(e) {
     ie(e.expression);
     ne(e.literal);
    }
    function jt(e) {
     qt(e, !e.multiLine && mi(e));
    }
    function qt(t, n) {
     tn(17, t.pos, Vr, t);
     var r = n || e.getEmitFlags(t) & 1 ? 384 : 65;
     Lr(t, t.statements, r);
     tn(18, t.statements.end, Vr, t, !!(r & 1));
    }
    function Ut(e) {
     xr(e, e.modifiers);
     ne(e.declarationList);
     O();
    }
    function Jt() {
     O();
    }
    function Kt(t) {
     ie(t.expression);
     if (!e.isJsonSourceFile(k)) {
      O();
     }
    }
    function Vt(e) {
     var t = tn(90, e.pos, Gr, e);
     Qr();
     tn(19, t, Vr, e);
     ie(e.expression);
     tn(20, e.expression.end, Vr, e);
     Er(e, e.thenStatement);
     if (e.elseStatement) {
      ai(e);
      tn(82, e.thenStatement.end, Gr, e);
      if (e.elseStatement.kind === 220) {
       Qr();
       ne(e.elseStatement);
      } else {
       Er(e, e.elseStatement);
      }
     }
    }
    function Wt(e, t) {
     var n = tn(106, t, Gr, e);
     Qr();
     tn(19, n, Vr, e);
     ie(e.expression);
     tn(20, e.expression.end, Vr, e);
    }
    function Ht(t) {
     tn(81, t.pos, Gr, t);
     Er(t, t.statement);
     if (e.isBlock(t.statement)) {
      Qr();
     } else {
      ai(t);
     }
     Wt(t, t.statement.end);
     Vr(";");
    }
    function Gt(e) {
     Wt(e, e.pos);
     Er(e, e.statement);
    }
    function $t(e) {
     var t = tn(88, e.pos, Gr, e);
     Qr();
     var n = tn(19, t, Vr, e);
     Yt(e.initializer);
     n = tn(25, e.initializer ? e.initializer.end : n, O, e);
     Dr(e.condition);
     n = tn(25, e.condition ? e.condition.end : n, O, e);
     Dr(e.incrementor);
     tn(20, e.incrementor ? e.incrementor.end : n, Vr, e);
     Er(e, e.statement);
    }
    function Xt(e) {
     var t = tn(88, e.pos, Gr, e);
     Qr();
     tn(19, t, Vr, e);
     Yt(e.initializer);
     Qr();
     tn(92, e.initializer.end, Gr, e);
     Qr();
     ie(e.expression);
     tn(20, e.expression.end, Vr, e);
     Er(e, e.statement);
    }
    function Qt(e) {
     var t = tn(88, e.pos, Gr, e);
     Qr();
     Tr(e.awaitModifier);
     tn(19, t, Vr, e);
     Yt(e.initializer);
     Qr();
     tn(145, e.initializer.end, Gr, e);
     Qr();
     ie(e.expression);
     tn(20, e.expression.end, Vr, e);
     Er(e, e.statement);
    }
    function Yt(e) {
     if (e !== undefined) {
      if (e.kind === 236) {
       ne(e);
      } else {
       ie(e);
      }
     }
    }
    function Zt(e) {
     tn(77, e.pos, Gr, e);
     Cr(e.label);
     O();
    }
    function en(e) {
     tn(72, e.pos, Gr, e);
     Cr(e.label);
     O();
    }
    function tn(t, n, r, i, a) {
     var o = e.getParseTreeNode(i);
     var s = o && o.kind === i.kind;
     var c = n;
     if (s) {
      n = e.skipTrivia(k.text, n);
     }
     if (x && s && i.pos !== c) {
      var u = a && !e.positionsAreOnSameLine(c, n, k);
      if (u) {
       ei();
      }
      x(c);
      if (u) {
       ti();
      }
     }
     n = ii(t, r, n);
     if (b && s && i.end !== n) {
      b(n, true);
     }
     return n;
    }
    function nn(e) {
     tn(96, e.pos, Gr, e);
     Dr(e.expression);
     O();
    }
    function rn(e) {
     var t = tn(107, e.pos, Gr, e);
     Qr();
     tn(19, t, Vr, e);
     ie(e.expression);
     tn(20, e.expression.end, Vr, e);
     Er(e, e.statement);
    }
    function an(e) {
     var t = tn(98, e.pos, Gr, e);
     Qr();
     tn(19, t, Vr, e);
     ie(e.expression);
     tn(20, e.expression.end, Vr, e);
     Qr();
     ne(e.caseBlock);
    }
    function on(e) {
     ne(e.label);
     tn(56, e.label.end, Vr, e);
     Qr();
     ne(e.statement);
    }
    function sn(e) {
     tn(100, e.pos, Gr, e);
     Dr(e.expression);
     O();
    }
    function cn(e) {
     tn(102, e.pos, Gr, e);
     Qr();
     ne(e.tryBlock);
     if (e.catchClause) {
      ai(e);
      ne(e.catchClause);
     }
     if (e.finallyBlock) {
      ai(e);
      tn(87, (e.catchClause || e.tryBlock).end, Gr, e);
      Qr();
      ne(e.finallyBlock);
     }
    }
    function un(e) {
     ni(78, e.pos, Gr);
     O();
    }
    function ln(e) {
     ne(e.name);
     kr(e.type);
     Sr(e.initializer, e.type ? e.type.end : e.name.end, e);
    }
    function fn(t) {
     Gr(e.isLet(t) ? "let" : e.isVarConst(t) ? "const" : "var");
     Qr();
     Lr(t, t.declarations, 272);
    }
    function dn(e) {
     pn(e);
    }
    function pn(e) {
     Nr(e, e.decorators);
     xr(e, e.modifiers);
     Gr("function");
     ne(e.asteriskToken);
     Qr();
     re(e.name);
     _n(e, gn);
    }
    function mn(e, t) {
     vn(t);
    }
    function _n(t, n) {
     var r = t.body;
     if (r) {
      if (e.isBlock(r)) {
       var i = e.getEmitFlags(t) & 65536;
       if (i) {
        ei();
       }
       vi(t);
       e.forEach(t.parameters, xi);
       xi(t.body);
       n(t);
       if (s) {
        s(4, r, mn);
       } else {
        vn(r);
       }
       yi(t);
       if (i) {
        ti();
       }
      } else {
       n(t);
       Qr();
       ie(r);
      }
     } else {
      n(t);
      O();
     }
    }
    function gn(e) {
     Fr(e, e.typeParameters);
     Pr(e, e.parameters);
     kr(e.type);
    }
    function hn(t) {
     if (e.getEmitFlags(t) & 1) {
      return true;
     }
     if (t.multiLine) {
      return false;
     }
     if (!e.nodeIsSynthesized(t) && !e.rangeIsOnSingleLine(t, k)) {
      return false;
     }
     if (ui(t, t.statements, 2) || fi(t, t.statements, 2)) {
      return false;
     }
     var n;
     for (var r = 0, i = t.statements; r < i.length; r++) {
      var a = i[r];
      if (li(n, a, 2)) {
       return false;
      }
      n = a;
     }
     return true;
    }
    function vn(e) {
     Qr();
     Vr("{");
     ei();
     var t = hn(e) ? yn : bn;
     if (y) {
      y(e, e.statements, t);
     } else {
      t(e);
     }
     ti();
     ni(18, e.statements.end, Vr, e);
    }
    function yn(e) {
     bn(e, true);
    }
    function bn(e, t) {
     var n = hr(e.statements, true);
     var r = A.getTextPos();
     me(e);
     if (n === 0 && r === A.getTextPos() && t) {
      ti();
      Lr(e, e.statements, 384);
      ei();
     } else {
      Lr(e, e.statements, 1, n);
     }
    }
    function xn(e) {
     kn(e);
    }
    function kn(t) {
     e.forEach(t.members, ki);
     Nr(t, t.decorators);
     xr(t, t.modifiers);
     Gr("class");
     if (t.name) {
      Qr();
      re(t.name);
     }
     var n = e.getEmitFlags(t) & 65536;
     if (n) {
      ei();
     }
     Fr(t, t.typeParameters);
     Lr(t, t.heritageClauses, 0);
     Qr();
     Vr("{");
     Lr(t, t.members, 65);
     Vr("}");
     if (n) {
      ti();
     }
    }
    function Sn(e) {
     Nr(e, e.decorators);
     xr(e, e.modifiers);
     Gr("interface");
     Qr();
     ne(e.name);
     Fr(e, e.typeParameters);
     Lr(e, e.heritageClauses, 256);
     Qr();
     Vr("{");
     Lr(e, e.members, 65);
     Vr("}");
    }
    function wn(e) {
     Nr(e, e.decorators);
     xr(e, e.modifiers);
     Gr("type");
     Qr();
     ne(e.name);
     Fr(e, e.typeParameters);
     Qr();
     Vr("=");
     Qr();
     ne(e.type);
     O();
    }
    function Cn(e) {
     xr(e, e.modifiers);
     Gr("enum");
     Qr();
     ne(e.name);
     Qr();
     Vr("{");
     Lr(e, e.members, 81);
     Vr("}");
    }
    function Dn(e) {
     xr(e, e.modifiers);
     if (~e.flags & 512) {
      Gr(e.flags & 16 ? "namespace" : "module");
      Qr();
     }
     ne(e.name);
     var t = e.body;
     if (!t) return O();
     while (t.kind === 242) {
      Vr(".");
      ne(t.name);
      t = t.body;
     }
     Qr();
     ne(t);
    }
    function Tn(t) {
     vi(t);
     e.forEach(t.statements, xi);
     qt(t, mi(t));
     yi(t);
    }
    function En(e) {
     tn(17, e.pos, Vr, e);
     Lr(e, e.clauses, 65);
     tn(18, e.clauses.end, Vr, e, true);
    }
    function Nn(e) {
     xr(e, e.modifiers);
     tn(91, e.modifiers ? e.modifiers.end : e.pos, Gr, e);
     Qr();
     ne(e.name);
     Qr();
     tn(58, e.name.end, Vr, e);
     Qr();
     An(e.moduleReference);
     O();
    }
    function An(e) {
     if (e.kind === 71) {
      ie(e);
     } else {
      ne(e);
     }
    }
    function Fn(e) {
     xr(e, e.modifiers);
     tn(91, e.modifiers ? e.modifiers.end : e.pos, Gr, e);
     Qr();
     if (e.importClause) {
      ne(e.importClause);
      Qr();
      tn(143, e.importClause.end, Gr, e);
      Qr();
     }
     ie(e.moduleSpecifier);
     O();
    }
    function Pn(e) {
     ne(e.name);
     if (e.name && e.namedBindings) {
      tn(26, e.name.end, Vr, e);
      Qr();
     }
     ne(e.namedBindings);
    }
    function In(e) {
     var t = tn(39, e.pos, Vr, e);
     Qr();
     tn(118, t, Gr, e);
     Qr();
     ne(e.name);
    }
    function On(e) {
     qn(e);
    }
    function Mn(e) {
     Un(e);
    }
    function Ln(e) {
     var t = tn(84, e.pos, Gr, e);
     Qr();
     if (e.isExportEquals) {
      tn(58, t, $r, e);
     } else {
      tn(79, t, Gr, e);
     }
     Qr();
     ie(e.expression);
     O();
    }
    function Rn(e) {
     var t = tn(84, e.pos, Gr, e);
     Qr();
     if (e.exportClause) {
      ne(e.exportClause);
     } else {
      t = tn(39, t, Vr, e);
     }
     if (e.moduleSpecifier) {
      Qr();
      var n = e.exportClause ? e.exportClause.end : t;
      tn(143, n, Gr, e);
      Qr();
      ie(e.moduleSpecifier);
     }
     O();
    }
    function Bn(e) {
     var t = tn(84, e.pos, Gr, e);
     Qr();
     t = tn(118, t, Gr, e);
     Qr();
     t = tn(130, t, Gr, e);
     Qr();
     ne(e.name);
     O();
    }
    function zn(e) {
     qn(e);
    }
    function jn(e) {
     Un(e);
    }
    function qn(e) {
     Vr("{");
     Lr(e, e.elements, 262576);
     Vr("}");
    }
    function Un(e) {
     if (e.propertyName) {
      ne(e.propertyName);
      Qr();
      tn(118, e.propertyName.end, Gr, e);
      Qr();
     }
     ne(e.name);
    }
    function Jn(e) {
     Gr("require");
     Vr("(");
     ie(e.expression);
     Vr(")");
    }
    function Kn(e) {
     ne(e.openingElement);
     Lr(e, e.children, 131072);
     ne(e.closingElement);
    }
    function Vn(e) {
     Vr("<");
     er(e.tagName);
     Qr();
     ne(e.attributes);
     Vr("/>");
    }
    function Wn(e) {
     ne(e.openingFragment);
     Lr(e, e.children, 131072);
     ne(e.closingFragment);
    }
    function Hn(t) {
     Vr("<");
     if (e.isJsxOpeningElement(t)) {
      er(t.tagName);
      if (t.attributes.properties && t.attributes.properties.length > 0) {
       Qr();
      }
      ne(t.attributes);
     }
     Vr(">");
    }
    function Gn(e) {
     I();
     A.writeLiteral(gi(e, true));
    }
    function $n(t) {
     Vr("</");
     if (e.isJsxClosingElement(t)) {
      er(t.tagName);
     }
     Vr(">");
    }
    function Xn(e) {
     Lr(e, e.properties, 131328);
    }
    function Qn(e) {
     ne(e.name);
     wr("=", Vr, e.initializer, ne);
    }
    function Yn(e) {
     Vr("{...");
     ie(e.expression);
     Vr("}");
    }
    function Zn(e) {
     if (e.expression) {
      Vr("{");
      ne(e.dotDotDotToken);
      ie(e.expression);
      Vr("}");
     }
    }
    function er(e) {
     if (e.kind === 71) {
      ie(e);
     } else {
      ne(e);
     }
    }
    function tr(e) {
     tn(73, e.pos, Gr, e);
     Qr();
     ie(e.expression);
     rr(e, e.statements, e.expression.end);
    }
    function nr(e) {
     var t = tn(79, e.pos, Gr, e);
     rr(e, e.statements, t);
    }
    function rr(t, n, r) {
     var i = n.length === 1 && (e.nodeIsSynthesized(t) || e.nodeIsSynthesized(n[0]) || e.rangeStartPositionsAreOnSameLine(t, n[0], k));
     var a = 81985;
     if (i) {
      ni(56, r, Vr, t);
      Qr();
      a &= ~(1 | 64);
     } else {
      tn(56, r, Vr, t);
     }
     Lr(t, n, a);
    }
    function ir(e) {
     Qr();
     ii(e.token, Gr);
     Qr();
     Lr(e, e.types, 272);
    }
    function ar(e) {
     var t = tn(74, e.pos, Gr, e);
     Qr();
     if (e.variableDeclaration) {
      tn(19, t, Vr, e);
      ne(e.variableDeclaration);
      tn(20, e.variableDeclaration.end, Vr, e);
      Qr();
     }
     ne(e.block);
    }
    function or(t) {
     ne(t.name);
     Vr(":");
     Qr();
     var n = t.initializer;
     if (b && (e.getEmitFlags(n) & 512) === 0) {
      var r = e.getCommentRange(n);
      b(r.pos);
     }
     ie(n);
    }
    function sr(e) {
     ne(e.name);
     if (e.objectAssignmentInitializer) {
      Qr();
      Vr("=");
      Qr();
      ie(e.objectAssignmentInitializer);
     }
    }
    function cr(e) {
     if (e.expression) {
      Vr("...");
      ie(e.expression);
     }
    }
    function ur(e) {
     ne(e.name);
     Sr(e.initializer, e.name.end, e);
    }
    function lr(t) {
     Zr();
     var n = t.statements;
     if (y) {
      var r = n.length === 0 || !e.isPrologueDirective(n[0]) || e.nodeIsSynthesized(n[0]);
      if (r) {
       y(t, n, mr);
       return;
      }
     }
     mr(t);
    }
    function fr(e) {
     pr(!!e.hasNoDefaultLib, e.syntheticFileReferences || [], e.syntheticTypeReferences || []);
    }
    function dr(e) {
     if (e.isDeclarationFile) pr(e.hasNoDefaultLib, e.referencedFiles, e.typeReferenceDirectives);
    }
    function pr(e, t, n) {
     if (e) {
      P('/// <reference no-default-lib="true"/>');
      Zr();
     }
     if (k && k.moduleName) {
      P('/// <amd-module name="' + k.moduleName + '" />');
      Zr();
     }
     if (k && k.amdDependencies) {
      for (var r = 0, i = k.amdDependencies; r < i.length; r++) {
       var a = i[r];
       if (a.name) {
        P('/// <amd-dependency name="' + a.name + '" path="' + a.path + '" />');
       } else {
        P('/// <amd-dependency path="' + a.path + '" />');
       }
       Zr();
      }
     }
     for (var o = 0, s = t; o < s.length; o++) {
      var c = s[o];
      P('/// <reference path="' + c.fileName + '" />');
      Zr();
     }
     for (var u = 0, l = n; u < l.length; u++) {
      var c = l[u];
      P('/// <reference types="' + c.fileName + '" />');
      Zr();
     }
    }
    function mr(t) {
     var n = t.statements;
     vi(t);
     e.forEach(t.statements, xi);
     me(t);
     var r = e.findIndex(n, function(t) {
      return !e.isPrologueDirective(t);
     });
     dr(t);
     Lr(t, n, 1, r === -1 ? n.length : r);
     yi(t);
    }
    function _r(e) {
     ie(e.expression);
    }
    function gr(e) {
     Rr(e, e.elements, 272);
    }
    function hr(t, n, r) {
     for (var i = 0; i < t.length; i++) {
      var a = t[i];
      if (e.isPrologueDirective(a)) {
       var o = r ? !r.has(a.expression.text) : true;
       if (o) {
        if (n || i > 0) {
         Zr();
        }
        ne(a);
        if (r) {
         r.set(a.expression.text, true);
        }
       }
      } else {
       return i;
      }
     }
     return t.length;
    }
    function vr(t) {
     if (e.isSourceFile(t)) {
      Z(t);
      hr(t.statements);
     } else {
      var n = e.createMap();
      for (var r = 0, i = t.sourceFiles; r < i.length; r++) {
       var a = i[r];
       Z(a);
       hr(a.statements, true, n);
      }
     }
    }
    function yr(t) {
     if (e.isSourceFile(t)) {
      var n = e.getShebang(t.text);
      if (n) {
       P(n);
       Zr();
       return true;
      }
     } else {
      for (var r = 0, i = t.sourceFiles; r < i.length; r++) {
       var a = i[r];
       if (yr(a)) {
        break;
       }
      }
     }
    }
    function br(e, t) {
     if (!e) return;
     var n = P;
     P = t;
     ne(e);
     P = n;
    }
    function xr(e, t) {
     if (t && t.length) {
      Lr(e, t, 131328);
      Qr();
     }
    }
    function kr(e) {
     if (e) {
      Vr(":");
      Qr();
      ne(e);
     }
    }
    function Sr(e, t, n) {
     if (e) {
      Qr();
      tn(58, t, $r, n);
      Qr();
      ie(e);
     }
    }
    function wr(e, t, n, r) {
     if (n) {
      t(e);
      r(n);
     }
    }
    function Cr(e) {
     if (e) {
      Qr();
      ne(e);
     }
    }
    function Dr(e) {
     if (e) {
      Qr();
      ie(e);
     }
    }
    function Tr(e) {
     if (e) {
      ne(e);
      Qr();
     }
    }
    function Er(t, n) {
     if (e.isBlock(n) || e.getEmitFlags(t) & 1) {
      Qr();
      ne(n);
     } else {
      Zr();
      ei();
      ne(n);
      ti();
     }
    }
    function Nr(e, t) {
     Lr(e, t, 24577);
    }
    function Ar(e, t) {
     Lr(e, t, 26896);
    }
    function Fr(t, n) {
     if (e.isFunctionLike(t) && t.typeArguments) {
      return Ar(t, t.typeArguments);
     }
     Lr(t, n, 26896);
    }
    function Pr(e, t) {
     Lr(e, t, 1296);
    }
    function Ir(t, n) {
     var r = e.singleOrUndefined(n);
     return r && r.pos === t.pos && !(e.isArrowFunction(t) && t.type) && !e.some(t.decorators) && !e.some(t.modifiers) && !e.some(t.typeParameters) && !e.some(r.decorators) && !e.some(r.modifiers) && !r.dotDotDotToken && !r.questionToken && !r.type && !r.initializer && e.isIdentifier(r.name);
    }
    function Or(e, t) {
     if (Ir(e, t)) {
      Lr(e, t, 1296 & ~1024);
     } else {
      Pr(e, t);
     }
    }
    function Mr(e, t) {
     Lr(e, t, 4432);
    }
    function Lr(e, t, n, r, i) {
     zr(ne, e, t, n, r, i);
    }
    function Rr(e, t, n, r, i) {
     zr(ie, e, t, n, r, i);
    }
    function Br(e) {
     switch (e & 28) {
     case 0:
      break;

     case 16:
      Vr(",");
      break;

     case 4:
      Qr();
      Vr("|");
      break;

     case 8:
      Qr();
      Vr("&");
      break;
     }
    }
    function zr(t, n, r, i, a, o) {
     if (a === void 0) {
      a = 0;
     }
     if (o === void 0) {
      o = r ? r.length - a : 0;
     }
     var s = r === undefined;
     if (s && i & 8192) {
      return;
     }
     var c = r === undefined || a >= r.length || o === 0;
     if (c && i & 16384) {
      if (l) {
       l(r);
      }
      if (f) {
       f(r);
      }
      return;
     }
     if (i & 7680) {
      Vr(p(i));
      if (c && !s) {
       b(r.pos, true);
      }
     }
     if (l) {
      l(r);
     }
     if (c) {
      if (i & 1) {
       Zr();
      } else if (i & 128 && !(i & 262144)) {
       Qr();
      }
     } else {
      var u = (i & 131072) === 0;
      var d = u;
      if (ui(n, r, i)) {
       Zr();
       d = false;
      } else if (i & 128) {
       Qr();
      }
      if (i & 64) {
       ei();
      }
      var _ = void 0;
      var g = false;
      for (var h = 0; h < o; h++) {
       var v = r[a + h];
       if (_) {
        if (i & 28 && _.end !== n.end) {
         x(_.end);
        }
        Br(i);
        if (li(_, v, i)) {
         if ((i & (3 | 64)) === 0) {
          ei();
          g = true;
         }
         Zr();
         d = false;
        } else if (_ && i & 256) {
         Qr();
        }
       }
       if (d) {
        if (b) {
         var y = e.getCommentRange(v);
         b(y.pos);
        }
       } else {
        d = u;
       }
       t(v);
       if (g) {
        ti();
        g = false;
       }
       _ = v;
      }
      var k = i & 32 && r.hasTrailingComma;
      if (i & 16 && k) {
       Vr(",");
      }
      if (_ && i & 28 && _.end !== n.end && !(e.getEmitFlags(_) & 1024)) {
       x(_.end);
      }
      if (i & 64) {
       ti();
      }
      if (fi(n, r, i)) {
       Zr();
      } else if (i & 128) {
       Qr();
      }
     }
     if (f) {
      f(r);
     }
     if (i & 7680) {
      if (c && !s) {
       x(r.end);
      }
      Vr(m(i));
     }
    }
    function jr() {
     if (M) {
      Hr();
      M = false;
     }
    }
    function qr(e) {
     I();
     A.writeLiteral(e);
    }
    function Ur(e) {
     I();
     A.writeStringLiteral(e);
    }
    function Jr(e) {
     I();
     A.write(e);
    }
    function Kr(e, t) {
     I();
     A.writeSymbol(e, t);
    }
    function Vr(e) {
     I();
     A.writePunctuation(e);
    }
    function Wr() {
     M = true;
    }
    function Hr() {
     A.writePunctuation(";");
    }
    function Gr(e) {
     I();
     A.writeKeyword(e);
    }
    function $r(e) {
     I();
     A.writeOperator(e);
    }
    function Xr(e) {
     I();
     A.writeParameter(e);
    }
    function Qr() {
     I();
     A.writeSpace(" ");
    }
    function Yr(e) {
     I();
     A.writeProperty(e);
    }
    function Zr() {
     I();
     A.writeLine();
    }
    function ei() {
     I();
     A.increaseIndent();
    }
    function ti() {
     I();
     A.decreaseIndent();
    }
    function ni(e, t, n, r) {
     return a ? a(r, e, n, t, ii) : ii(e, n, t);
    }
    function ri(t, n) {
     if (d) {
      d(t);
     }
     n(e.tokenToString(t.kind));
     if (_) {
      _(t);
     }
    }
    function ii(t, n, r) {
     var i = e.tokenToString(t);
     n(i);
     return r < 0 ? r : r + i.length;
    }
    function ai(t) {
     if (e.getEmitFlags(t) & 1) {
      Qr();
     } else {
      Zr();
     }
    }
    function oi(t) {
     var n = t.split(/\r\n?|\n/g);
     var r = e.guessIndentation(n);
     for (var i = 0, a = n; i < a.length; i++) {
      var o = a[i];
      var s = r ? o.slice(r) : o;
      if (s.length) {
       Zr();
       P(s);
       Zr();
      }
     }
    }
    function si(e, t) {
     if (e) {
      ei();
      Zr();
     } else if (t) {
      P(t);
     }
    }
    function ci(e, t) {
     if (e) {
      ti();
     }
     if (t) {
      ti();
     }
    }
    function ui(t, n, r) {
     if (r & 1) {
      return true;
     }
     if (r & 2) {
      if (r & 32768) {
       return true;
      }
      var i = n[0];
      if (i === undefined) {
       return !e.rangeIsOnSingleLine(t, k);
      } else if (e.positionIsSynthesized(t.pos) || e.nodeIsSynthesized(i)) {
       return di(i, r);
      } else {
       return !e.rangeStartPositionsAreOnSameLine(t, i, k);
      }
     } else {
      return false;
     }
    }
    function li(t, n, r) {
     if (r & 1) {
      return true;
     } else if (r & 2) {
      if (t === undefined || n === undefined) {
       return false;
      } else if (e.nodeIsSynthesized(t) || e.nodeIsSynthesized(n)) {
       return di(t, r) || di(n, r);
      } else {
       return !e.rangeEndIsOnSameLineAsRangeStart(t, n, k);
      }
     } else {
      return e.getStartsOnNewLine(n);
     }
    }
    function fi(t, n, r) {
     if (r & 1) {
      return (r & 65536) === 0;
     } else if (r & 2) {
      if (r & 32768) {
       return true;
      }
      var i = e.lastOrUndefined(n);
      if (i === undefined) {
       return !e.rangeIsOnSingleLine(t, k);
      } else if (e.positionIsSynthesized(t.pos) || e.nodeIsSynthesized(i)) {
       return di(i, r);
      } else {
       return !e.rangeEndPositionsAreOnSameLine(t, i, k);
      }
     } else {
      return false;
     }
    }
    function di(t, n) {
     if (e.nodeIsSynthesized(t)) {
      var r = e.getStartsOnNewLine(t);
      if (r === undefined) {
       return (n & 32768) !== 0;
      }
      return r;
     }
     return (n & 32768) !== 0;
    }
    function pi(t, n, r) {
     t = _i(t);
     n = _i(n);
     r = _i(r);
     if (e.getStartsOnNewLine(r)) {
      return true;
     }
     return !e.nodeIsSynthesized(t) && !e.nodeIsSynthesized(n) && !e.nodeIsSynthesized(r) && !e.rangeEndIsOnSameLineAsRangeStart(n, r, k);
    }
    function mi(t) {
     return t.statements.length === 0 && e.rangeEndIsOnSameLineAsRangeStart(t, t, k);
    }
    function _i(t) {
     while (t.kind === 193 && e.nodeIsSynthesized(t)) {
      t = t.expression;
     }
     return t;
    }
    function gi(t, n) {
     if (e.isGeneratedIdentifier(t)) {
      return wi(t);
     } else if (e.isIdentifier(t) && (e.nodeIsSynthesized(t) || !t.parent || !k || t.parent && k && e.getSourceFileOfNode(t) !== e.getOriginalNode(k))) {
      return e.idText(t);
     } else if (t.kind === 9 && t.textSourceNode) {
      return gi(t.textSourceNode, n);
     } else if (e.isLiteralExpression(t) && (e.nodeIsSynthesized(t) || !t.parent)) {
      return t.text;
     }
     return e.getSourceTextOfNodeFromSourceFile(k, t, n);
    }
    function hi(t) {
     if (t.kind === 9 && t.textSourceNode) {
      var n = t.textSourceNode;
      if (e.isIdentifier(n)) {
       return e.getEmitFlags(t) & 16777216 ? '"' + e.escapeString(gi(n)) + '"' : '"' + e.escapeNonAsciiString(gi(n)) + '"';
      } else {
       return hi(n);
      }
     }
     return e.getLiteralText(t, k);
    }
    function vi(t) {
     if (t && e.getEmitFlags(t) & 524288) {
      return;
     }
     D.push(T);
     T = 0;
     E.push(N);
    }
    function yi(t) {
     if (t && e.getEmitFlags(t) & 524288) {
      return;
     }
     T = D.pop();
     N = E.pop();
    }
    function bi(t) {
     if (!N || N === e.lastOrUndefined(E)) {
      N = e.createMap();
     }
     N.set(t, true);
    }
    function xi(t) {
     if (!t) return;
     switch (t.kind) {
     case 216:
      e.forEach(t.statements, xi);
      break;

     case 231:
     case 229:
     case 221:
     case 222:
      xi(t.statement);
      break;

     case 220:
      xi(t.thenStatement);
      xi(t.elseStatement);
      break;

     case 223:
     case 225:
     case 224:
      xi(t.initializer);
      xi(t.statement);
      break;

     case 230:
      xi(t.caseBlock);
      break;

     case 244:
      e.forEach(t.clauses, xi);
      break;

     case 269:
     case 270:
      e.forEach(t.statements, xi);
      break;

     case 233:
      xi(t.tryBlock);
      xi(t.catchClause);
      xi(t.finallyBlock);
      break;

     case 272:
      xi(t.variableDeclaration);
      xi(t.block);
      break;

     case 217:
      xi(t.declarationList);
      break;

     case 236:
      e.forEach(t.declarations, xi);
      break;

     case 235:
     case 149:
     case 184:
     case 238:
      Si(t.name);
      break;

     case 237:
      Si(t.name);
      if (e.getEmitFlags(t) & 524288) {
       e.forEach(t.parameters, xi);
       xi(t.body);
      }
      break;

     case 182:
     case 183:
      e.forEach(t.elements, xi);
      break;

     case 247:
      xi(t.importClause);
      break;

     case 248:
      Si(t.name);
      xi(t.namedBindings);
      break;

     case 249:
      Si(t.name);
      break;

     case 250:
      e.forEach(t.elements, xi);
      break;

     case 251:
      Si(t.propertyName || t.name);
      break;
     }
    }
    function ki(e) {
     if (!e) return;
     switch (e.kind) {
     case 273:
     case 274:
     case 152:
     case 154:
     case 156:
     case 157:
      Si(e.name);
      break;
     }
    }
    function Si(t) {
     if (t) {
      if (e.isGeneratedIdentifier(t)) {
       wi(t);
      } else if (e.isBindingPattern(t)) {
       xi(t);
      }
     }
    }
    function wi(e) {
     if ((e.autoGenerateFlags & 7) === 4) {
      return Ci(zi(e), e.autoGenerateFlags);
     } else {
      var t = e.autoGenerateId;
      return w[t] || (w[t] = Bi(e));
     }
    }
    function Ci(t, n) {
     var r = e.getNodeId(t);
     return S[r] || (S[r] = Ri(t, n));
    }
    function Di(e) {
     return Ti(e) && !C.has(e) && !(N && N.has(e));
    }
    function Ti(t) {
     return k ? e.isFileLevelUniqueName(k, t, r) : true;
    }
    function Ei(t, n) {
     for (var r = n; e.isNodeDescendantOf(r, n); r = r.nextContainer) {
      if (r.locals) {
       var i = r.locals.get(e.escapeLeadingUnderscores(t));
       if (i && i.flags & (67216319 | 1048576 | 2097152)) {
        return false;
       }
      }
     }
     return true;
    }
    function Ni(e, t) {
     if (e && !(T & e)) {
      var n = e === 268435456 ? "_i" : "_n";
      if (Di(n)) {
       T |= e;
       if (t) {
        bi(n);
       }
       return n;
      }
     }
     while (true) {
      var r = T & 268435455;
      T++;
      if (r !== 8 && r !== 13) {
       var n = r < 26 ? "_" + String.fromCharCode(97 + r) : "_" + (r - 26);
       if (Di(n)) {
        if (t) {
         bi(n);
        }
        return n;
       }
      }
     }
    }
    function Ai(e, t, n, r) {
     if (t === void 0) {
      t = Di;
     }
     if (n) {
      if (t(e)) {
       if (r) {
        bi(e);
       } else {
        C.set(e, true);
       }
       return e;
      }
     }
     if (e.charCodeAt(e.length - 1) !== 95) {
      e += "_";
     }
     var i = 1;
     while (true) {
      var a = e + i;
      if (t(a)) {
       if (r) {
        bi(a);
       } else {
        C.set(a, true);
       }
       return a;
      }
      i++;
     }
    }
    function Fi(e) {
     return Ai(e, Ti, true);
    }
    function Pi(e) {
     var t = gi(e.name);
     return Ei(t, e) ? t : Ai(t);
    }
    function Ii(t) {
     var n = e.getExternalModuleName(t);
     var r = e.isStringLiteral(n) ? e.makeIdentifierFromModuleName(n.text) : "module";
     return Ai(r);
    }
    function Oi() {
     return Ai("default");
    }
    function Mi() {
     return Ai("class");
    }
    function Li(t) {
     if (e.isIdentifier(t.name)) {
      return Ci(t.name);
     }
     return Ni(0);
    }
    function Ri(e, t) {
     switch (e.kind) {
     case 71:
      return Ai(gi(e), Di, !!(t & 16), !!(t & 8));

     case 242:
     case 241:
      return Pi(e);

     case 247:
     case 253:
      return Ii(e);

     case 237:
     case 238:
     case 252:
      return Oi();

     case 207:
      return Mi();

     case 154:
     case 156:
     case 157:
      return Li(e);

     default:
      return Ni(0);
     }
    }
    function Bi(t) {
     switch (t.autoGenerateFlags & 7) {
     case 1:
      return Ni(0, !!(t.autoGenerateFlags & 8));

     case 2:
      return Ni(268435456, !!(t.autoGenerateFlags & 8));

     case 3:
      return Ai(e.idText(t), t.autoGenerateFlags & 32 ? Ti : Di, !!(t.autoGenerateFlags & 16), !!(t.autoGenerateFlags & 8));
     }
     return e.Debug.fail("Unsupported GeneratedIdentifierKind.");
    }
    function zi(t) {
     var n = t.autoGenerateId;
     var r = t;
     var i = r.original;
     while (i) {
      r = i;
      if (e.isIdentifier(r) && !!(r.autoGenerateFlags & 4) && r.autoGenerateId !== n) {
       break;
      }
      i = r.original;
     }
     return r;
    }
   }
   e.createPrinter = f;
   function d() {
    var e = [];
    e[512] = [ "{", "}" ];
    e[1024] = [ "(", ")" ];
    e[2048] = [ "<", ">" ];
    e[4096] = [ "[", "]" ];
    return e;
   }
   function p(e) {
    return n[e & 7680][0];
   }
   function m(e) {
    return n[e & 7680][1];
   }
   var _;
   (function(e) {
    e[e["Auto"] = 0] = "Auto";
    e[e["CountMask"] = 268435455] = "CountMask";
    e[e["_i"] = 268435456] = "_i";
   })(_ || (_ = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   function t(t, n, r) {
    if (!t.getDirectories || !t.readDirectory) {
     return undefined;
    }
    var i = e.createMap();
    var a = e.createGetCanonicalFileName(r);
    return {
     useCaseSensitiveFileNames: r,
     fileExists: g,
     readFile: function(e, n) {
      return t.readFile(e, n);
     },
     directoryExists: t.directoryExists && h,
     getDirectories: y,
     readDirectory: b,
     createDirectory: t.createDirectory && v,
     writeFile: t.writeFile && _,
     addOrDeleteFileOrDirectory: x,
     addOrDeleteFile: k,
     clearCache: w
    };
    function o(t) {
     return e.toPath(t, n, a);
    }
    function s(t) {
     return i.get(e.ensureTrailingDirectorySeparator(t));
    }
    function c(t) {
     return s(e.getDirectoryPath(t));
    }
    function u(t) {
     return e.getBaseFileName(e.normalizePath(t));
    }
    function l(n, r) {
     var a = {
      files: e.map(t.readDirectory(n, undefined, undefined, [ "*.*" ]), u) || [],
      directories: t.getDirectories(n) || []
     };
     i.set(e.ensureTrailingDirectorySeparator(r), a);
     return a;
    }
    function f(t, n) {
     n = e.ensureTrailingDirectorySeparator(n);
     var r = s(n);
     if (r) {
      return r;
     }
     try {
      return l(t, n);
     } catch (t) {
      e.Debug.assert(!i.has(e.ensureTrailingDirectorySeparator(n)));
      return undefined;
     }
    }
    function d(e, t) {
     return a(e) === a(t);
    }
    function p(t, n) {
     return e.some(t, function(e) {
      return d(e, n);
     });
    }
    function m(t, n, r) {
     if (p(t, n)) {
      if (!r) {
       return e.filterMutate(t, function(e) {
        return !d(e, n);
       });
      }
     } else if (r) {
      return t.push(n);
     }
    }
    function _(e, n, r) {
     var i = o(e);
     var a = c(i);
     if (a) {
      S(a, u(e), true);
     }
     return t.writeFile(e, n, r);
    }
    function g(e) {
     var n = o(e);
     var r = c(n);
     return r && p(r.files, u(e)) || t.fileExists(e);
    }
    function h(n) {
     var r = o(n);
     return i.has(e.ensureTrailingDirectorySeparator(r)) || t.directoryExists(n);
    }
    function v(e) {
     var n = o(e);
     var r = c(n);
     var i = u(e);
     if (r) {
      m(r.directories, i, true);
     }
     t.createDirectory(e);
    }
    function y(e) {
     var n = o(e);
     var r = f(e, n);
     if (r) {
      return r.directories.slice();
     }
     return t.getDirectories(e);
    }
    function b(i, a, s, c, u) {
     var l = o(i);
     var d = f(i, l);
     if (d) {
      return e.matchFiles(i, a, s, c, r, n, u, p);
     }
     return t.readDirectory(i, a, s, c, u);
     function p(t) {
      var n = o(t);
      if (n === l) {
       return d;
      }
      return f(t, n) || e.emptyFileSystemEntries;
     }
    }
    function x(e, n) {
     var r = s(n);
     if (r) {
      w();
      return undefined;
     }
     var i = c(n);
     if (!i) {
      return undefined;
     }
     if (!t.directoryExists) {
      w();
      return undefined;
     }
     var a = u(e);
     var o = {
      fileExists: t.fileExists(n),
      directoryExists: t.directoryExists(n)
     };
     if (o.directoryExists || p(i.directories, a)) {
      w();
     } else {
      S(i, a, o.fileExists);
     }
     return o;
    }
    function k(t, n, r) {
     if (r === e.FileWatcherEventKind.Changed) {
      return;
     }
     var i = c(n);
     if (i) {
      S(i, u(t), r === e.FileWatcherEventKind.Created);
     }
    }
    function S(e, t, n) {
     m(e.files, t, n);
    }
    function w() {
     i.clear();
    }
   }
   e.createCachedDirectoryStructureHost = t;
   var n;
   (function(e) {
    e[e["None"] = 0] = "None";
    e[e["Partial"] = 1] = "Partial";
    e[e["Full"] = 2] = "Full";
   })(n = e.ConfigFileProgramReloadLevel || (e.ConfigFileProgramReloadLevel = {}));
   function r(t, n, r) {
    var i = t.getMissingFilePaths();
    var a = e.arrayToSet(i);
    e.mutateMap(n, a, {
     createNewValue: r,
     onDeleteValue: e.closeFileWatcher
    });
   }
   e.updateMissingFilePathsWatch = r;
   function i(t, n, r) {
    e.mutateMap(t, n, {
     createNewValue: i,
     onDeleteValue: g,
     onExistingValue: a
    });
    function i(e, t) {
     return {
      watcher: r(e, t),
      flags: t
     };
    }
    function a(e, n, r) {
     if (e.flags === n) {
      return;
     }
     e.watcher.close();
     t.set(r, i(r, n));
    }
   }
   e.updateWatchingWildcardDirectories = i;
   function a(e, t) {
    if (!e) {
     return false;
    }
    return e.isEmittedFile(t);
   }
   e.isEmittedFileOfProgram = a;
   var o;
   (function(e) {
    e[e["None"] = 0] = "None";
    e[e["TriggerOnly"] = 1] = "TriggerOnly";
    e[e["Verbose"] = 2] = "Verbose";
   })(o = e.WatchLogLevel || (e.WatchLogLevel = {}));
   function s(e, t, n) {
    return c(e, t, n, u, l);
   }
   e.getWatchFactory = s;
   function c(e, t, n, r, i) {
    var a = f(e, r);
    var s = e === o.None ? u : a;
    var c = f(e, i);
    return {
     watchFile: function(e, i, o, s, c, u) {
      return a(e, i, o, s, undefined, c, u, r, t, "FileWatcher", n);
     },
     watchFilePath: function(e, i, a, o, c, u, l) {
      return s(e, i, a, o, c, u, l, r, t, "FileWatcher", n);
     },
     watchDirectory: function(e, r, a, o, s, u) {
      return c(e, r, a, o, undefined, s, u, i, t, "DirectoryWatcher", n);
     }
    };
    function u(e, t, n, i, a) {
     return r(e, t, function(e, t) {
      return n(e, t, a);
     }, i);
    }
   }
   function u(e, t, n, r) {
    return e.watchFile(t, n, r);
   }
   function l(e, t, n, r) {
    return e.watchDirectory(t, n, (r & 1) !== 0);
   }
   function f(e, t) {
    switch (e) {
    case o.None:
     return t;

    case o.TriggerOnly:
     return m;

    case o.Verbose:
     return t === l ? p : d;
    }
   }
   function d(e, t, n, r, i, a, o, s, c, u, l) {
    c(u + ":: Added:: " + _(t, r, a, o, l));
    var f = m(e, t, n, r, i, a, o, s, c, u, l);
    return {
     close: function() {
      c(u + ":: Close:: " + _(t, r, a, o, l));
      f.close();
     }
    };
   }
   function p(t, n, r, i, a, o, s, c, u, l, f) {
    var d = l + ":: Added:: " + _(n, i, o, s, f);
    u(d);
    var p = e.timestamp();
    var g = m(t, n, r, i, a, o, s, c, u, l, f);
    var h = e.timestamp() - p;
    u("Elapsed:: " + h + "ms " + d);
    return {
     close: function() {
      var t = l + ":: Close:: " + _(n, i, o, s, f);
      u(t);
      var r = e.timestamp();
      g.close();
      var a = e.timestamp() - r;
      u("Elapsed:: " + a + "ms " + t);
     }
    };
   }
   function m(t, n, r, i, a, o, s, c, u, l, f) {
    return c(t, n, function(t, c) {
     var d = l + ":: Triggered with " + t + " " + (c !== undefined ? c : "") + ":: " + _(n, i, o, s, f);
     u(d);
     var p = e.timestamp();
     r(t, c, a);
     var m = e.timestamp() - p;
     u("Elapsed:: " + m + "ms " + d);
    }, i);
   }
   function _(e, t, n, r, i) {
    return "WatchInfo: " + e + " " + t + " " + (i ? i(n, r) : n);
   }
   function g(e) {
    e.watcher.close();
   }
   e.closeFileWatcherOf = g;
  })(s || (s = {}));
  var s;
  (function(e) {
   var t = /(^\s*$)|(^\s*\/\/\/?\s*(@ts-ignore)?)/;
   function n(t, n, r) {
    if (r === void 0) {
     r = "tsconfig.json";
    }
    return e.forEachAncestorDirectory(t, function(t) {
     var i = e.combinePaths(t, r);
     return n(i) ? i : undefined;
    });
   }
   e.findConfigFile = n;
   function i(t, n) {
    var r = e.getDirectoryPath(n);
    var i = e.isRootedDiskPath(t) ? t : e.combinePaths(r, t);
    return e.normalizePath(i);
   }
   e.resolveTripleslashReference = i;
   function a(t, n, r) {
    var i;
    var a = e.forEach(t, function(t) {
     var a = e.getNormalizedPathComponents(t, n);
     a.pop();
     if (!i) {
      i = a;
      return;
     }
     var o = Math.min(i.length, a.length);
     for (var s = 0; s < o; s++) {
      if (r(i[s]) !== r(a[s])) {
       if (s === 0) {
        return true;
       }
       i.length = s;
       break;
      }
     }
     if (a.length < i.length) {
      i.length = a.length;
     }
    });
    if (a) {
     return "";
    }
    if (!i) {
     return n;
    }
    return e.getPathFromPathComponents(i);
   }
   e.computeCommonSourceDirectoryOfFilenames = a;
   function o(t, n) {
    var r = e.createMap();
    function i(t) {
     return e.sys.useCaseSensitiveFileNames ? t : t.toLowerCase();
    }
    function a(r, i, a) {
     var o;
     try {
      e.performance.mark("beforeIORead");
      o = e.sys.readFile(r, t.charset);
      e.performance.mark("afterIORead");
      e.performance.measure("I/O Read", "beforeIORead", "afterIORead");
     } catch (e) {
      if (a) {
       a(e.message);
      }
      o = "";
     }
     return o !== undefined ? e.createSourceFile(r, o, i, n) : undefined;
    }
    function o(t) {
     if (r.has(t)) {
      return true;
     }
     if (e.sys.directoryExists(t)) {
      r.set(t, true);
      return true;
     }
     return false;
    }
    function s(t) {
     if (t.length > e.getRootLength(t) && !o(t)) {
      var n = e.getDirectoryPath(t);
      s(n);
      e.sys.createDirectory(t);
     }
    }
    var c;
    function u(t, n, r) {
     if (!c) {
      c = e.createMap();
     }
     var i = e.sys.createHash(n);
     var a = e.sys.getModifiedTime(t);
     if (a) {
      var o = c.get(t);
      if (o && o.byteOrderMark === r && o.hash === i && o.mtime.getTime() === a.getTime()) {
       return;
      }
     }
     e.sys.writeFile(t, n, r);
     var s = e.sys.getModifiedTime(t);
     c.set(t, {
      hash: i,
      byteOrderMark: r,
      mtime: s
     });
    }
    function l(n, r, i, a) {
     try {
      e.performance.mark("beforeIOWrite");
      s(e.getDirectoryPath(e.normalizePath(n)));
      if (e.isWatchSet(t) && e.sys.createHash && e.sys.getModifiedTime) {
       u(n, r, i);
      } else {
       e.sys.writeFile(n, r, i);
      }
      e.performance.mark("afterIOWrite");
      e.performance.measure("I/O Write", "beforeIOWrite", "afterIOWrite");
     } catch (e) {
      if (a) {
       a(e.message);
      }
     }
    }
    function f() {
     return e.getDirectoryPath(e.normalizePath(e.sys.getExecutingFilePath()));
    }
    var d = e.getNewLineCharacter(t);
    var p = e.sys.realpath && function(t) {
     return e.sys.realpath(t);
    };
    return {
     getSourceFile: a,
     getDefaultLibLocation: f,
     getDefaultLibFileName: function(t) {
      return e.combinePaths(f(), e.getDefaultLibFileName(t));
     },
     writeFile: l,
     getCurrentDirectory: e.memoize(function() {
      return e.sys.getCurrentDirectory();
     }),
     useCaseSensitiveFileNames: function() {
      return e.sys.useCaseSensitiveFileNames;
     },
     getCanonicalFileName: i,
     getNewLine: function() {
      return d;
     },
     fileExists: function(t) {
      return e.sys.fileExists(t);
     },
     readFile: function(t) {
      return e.sys.readFile(t);
     },
     trace: function(t) {
      return e.sys.write(t + d);
     },
     directoryExists: function(t) {
      return e.sys.directoryExists(t);
     },
     getEnvironmentVariable: function(t) {
      return e.sys.getEnvironmentVariable ? e.sys.getEnvironmentVariable(t) : "";
     },
     getDirectories: function(t) {
      return e.sys.getDirectories(t);
     },
     realpath: p,
     readDirectory: function(t, n, r, i, a) {
      return e.sys.readDirectory(t, n, r, i, a);
     },
     getModifiedTime: e.sys.getModifiedTime && function(t) {
      return e.sys.getModifiedTime(t);
     },
     setModifiedTime: e.sys.setModifiedTime && function(t, n) {
      return e.sys.setModifiedTime(t, n);
     },
     deleteFile: e.sys.deleteFile && function(t) {
      return e.sys.deleteFile(t);
     }
    };
   }
   e.createCompilerHost = o;
   function s(t, n, r) {
    var i = t.getConfigFileParsingDiagnostics().concat(t.getOptionsDiagnostics(r), t.getSyntacticDiagnostics(n, r), t.getGlobalDiagnostics(r), t.getSemanticDiagnostics(n, r));
    if (t.getCompilerOptions().declaration) {
     e.addRange(i, t.getDeclarationDiagnostics(n, r));
    }
    return e.sortAndDeduplicateDiagnostics(i);
   }
   e.getPreEmitDiagnostics = s;
   function c(e, t) {
    var n = "";
    for (var r = 0, i = e; r < i.length; r++) {
     var a = i[r];
     n += u(a, t);
    }
    return n;
   }
   e.formatDiagnostics = c;
   function u(t, n) {
    var r = e.diagnosticCategoryName(t) + " TS" + t.code + ": " + S(t.messageText, n.getNewLine()) + n.getNewLine();
    if (t.file) {
     var i = e.getLineAndCharacterOfPosition(t.file, t.start), a = i.line, o = i.character;
     var s = t.file.fileName;
     var c = e.convertToRelativePath(s, n.getCurrentDirectory(), function(e) {
      return n.getCanonicalFileName(e);
     });
     return c + "(" + (a + 1) + "," + (o + 1) + "): " + r;
    }
    return r;
   }
   e.formatDiagnostic = u;
   var l;
   (function(e) {
    e["Grey"] = "[90m";
    e["Red"] = "[91m";
    e["Yellow"] = "[93m";
    e["Blue"] = "[94m";
    e["Cyan"] = "[96m";
   })(l = e.ForegroundColorEscapeSequences || (e.ForegroundColorEscapeSequences = {}));
   var f = "[30;47m";
   var d = " ";
   var p = "[0m";
   var m = "...";
   var _ = "  ";
   var g = "    ";
   function h(t) {
    switch (t) {
    case e.DiagnosticCategory.Error:
     return l.Red;

    case e.DiagnosticCategory.Warning:
     return l.Yellow;

    case e.DiagnosticCategory.Suggestion:
     return e.Debug.fail("Should never get an Info diagnostic on the command line.");

    case e.DiagnosticCategory.Message:
     return l.Blue;
    }
   }
   function v(e, t) {
    return t + e + p;
   }
   e.formatColorAndReset = v;
   function y(e, t) {
    while (e.length < t) {
     e = " " + e;
    }
    return e;
   }
   function b(t, n, r, i, a, o) {
    var s = e.getLineAndCharacterOfPosition(t, n), c = s.line, u = s.character;
    var l = e.getLineAndCharacterOfPosition(t, n + r), _ = l.line, g = l.character;
    var h = e.getLineAndCharacterOfPosition(t, t.text.length).line;
    var b = _ - c >= 4;
    var x = (_ + 1 + "").length;
    if (b) {
     x = Math.max(m.length, x);
    }
    var k = "";
    for (var S = c; S <= _; S++) {
     k += o.getNewLine();
     if (b && c + 1 < S && S < _ - 1) {
      k += i + v(y(m, x), f) + d + o.getNewLine();
      S = _ - 1;
     }
     var w = e.getPositionOfLineAndCharacter(t, S, 0);
     var C = S < h ? e.getPositionOfLineAndCharacter(t, S + 1, 0) : t.text.length;
     var D = t.text.slice(w, C);
     D = D.replace(/\s+$/g, "");
     D = D.replace("\t", " ");
     k += i + v(y(S + 1 + "", x), f) + d;
     k += D + o.getNewLine();
     k += i + v(y("", x), f) + d;
     k += a;
     if (S === c) {
      var T = S === _ ? g : undefined;
      k += D.slice(0, u).replace(/\S/g, " ");
      k += D.slice(u, T).replace(/./g, "~");
     } else if (S === _) {
      k += D.slice(0, g).replace(/./g, "~");
     } else {
      k += D.replace(/./g, "~");
     }
     k += p;
    }
    return k;
   }
   function x(t, n, r, i) {
    if (i === void 0) {
     i = v;
    }
    var a = e.getLineAndCharacterOfPosition(t, n), o = a.line, s = a.character;
    var c = r ? e.convertToRelativePath(t.fileName, r.getCurrentDirectory(), function(e) {
     return r.getCanonicalFileName(e);
    }) : t.fileName;
    var u = "";
    u += i(c, l.Cyan);
    u += ":";
    u += i("" + (o + 1), l.Yellow);
    u += ":";
    u += i("" + (s + 1), l.Yellow);
    return u;
   }
   e.formatLocation = x;
   function k(t, n) {
    var r = "";
    for (var i = 0, a = t; i < a.length; i++) {
     var o = a[i];
     if (o.file) {
      var s = o.file, c = o.start;
      r += x(s, c, n);
      r += " - ";
     }
     r += v(e.diagnosticCategoryName(o), h(o.category));
     r += v(" TS" + o.code + ": ", l.Grey);
     r += S(o.messageText, n.getNewLine());
     if (o.file) {
      r += n.getNewLine();
      r += b(o.file, o.start, o.length, "", h(o.category), n);
      if (o.relatedInformation) {
       r += n.getNewLine();
       for (var u = 0, f = o.relatedInformation; u < f.length; u++) {
        var d = f[u], s = d.file, c = d.start, p = d.length, m = d.messageText;
        if (s) {
         r += n.getNewLine();
         r += _ + x(s, c, n);
         r += b(s, c, p, g, l.Cyan, n);
        }
        r += n.getNewLine();
        r += g + S(m, n.getNewLine());
       }
      }
     }
     r += n.getNewLine();
    }
    return r;
   }
   e.formatDiagnosticsWithColorAndContext = k;
   function S(t, n) {
    if (e.isString(t)) {
     return t;
    } else {
     var r = t;
     var i = "";
     var a = 0;
     while (r) {
      if (a) {
       i += n;
       for (var o = 0; o < a; o++) {
        i += "  ";
       }
      }
      i += r.messageText;
      a++;
      r = r.next;
     }
     return i;
    }
   }
   e.flattenDiagnosticMessageText = S;
   function w(t, n, r) {
    if (t.length === 0) {
     return [];
    }
    var i = [];
    var a = e.createMap();
    for (var o = 0, s = t; o < s.length; o++) {
     var c = s[o];
     var u = void 0;
     if (a.has(c)) {
      u = a.get(c);
     } else {
      a.set(c, u = r(c, n));
     }
     i.push(u);
    }
    return i;
   }
   function C(t, n, r, i, a, o, s) {
    if (!t || s) {
     return false;
    }
    if (t.getRootFileNames().length !== n.length) {
     return false;
    }
    if (t.getSourceFiles().some(u)) {
     return false;
    }
    if (t.getMissingFilePaths().some(a)) {
     return false;
    }
    var c = t.getCompilerOptions();
    if (!e.compareDataObjects(c, r)) {
     return false;
    }
    if (c.configFile && r.configFile) {
     return c.configFile.text === r.configFile.text;
    }
    return true;
    function u(e) {
     return e.version !== i(e.path) || o(e.path);
    }
   }
   e.isProgramUptoDate = C;
   function D(e) {
    return e.options.configFile ? e.options.configFile.parseDiagnostics.concat(e.errors) : e.errors;
   }
   e.getConfigFileParsingDiagnostics = D;
   function T(t, n) {
    var r = t && t.getCompilerOptions();
    return r && (r.target !== n.target || r.module !== n.module || r.moduleResolution !== n.moduleResolution || r.noResolve !== n.noResolve || r.jsx !== n.jsx || r.allowJs !== n.allowJs || r.disableSizeLimit !== n.disableSizeLimit || r.baseUrl !== n.baseUrl || !e.equalOwnProperties(r.paths, n.paths));
   }
   function E(e, t, n, r, i) {
    return {
     rootNames: e,
     options: t,
     host: n,
     oldProgram: r,
     configFileParsingDiagnostics: i
    };
   }
   function N(n, s, c, u, l) {
    var f = e.isArray(n) ? E(n, s, c, u, l) : n;
    var d = f.rootNames, p = f.options, m = f.configFileParsingDiagnostics, _ = f.projectReferences;
    var g = f.oldProgram;
    var h;
    var v;
    var y;
    var b;
    var x;
    var k;
    var S;
    var C;
    var D;
    var N = {};
    var O = {};
    var M = e.createMap();
    var L = e.createDiagnosticCollection();
    var R = typeof p.maxNodeModuleJsDepth === "number" ? p.maxNodeModuleJsDepth : 0;
    var B = 0;
    var z = e.createMap();
    var j = e.createMap();
    e.performance.mark("beforeProgram");
    var q = f.host || o(p);
    var U = A(q);
    var J = p.noLib;
    var K = e.memoize(function() {
     return q.getDefaultLibFileName(p);
    });
    var V = q.getDefaultLibLocation ? q.getDefaultLibLocation() : e.getDirectoryPath(K());
    var W = e.createDiagnosticCollection();
    var H = q.getCurrentDirectory();
    var G = e.getSupportedExtensions(p);
    var $ = p.resolveJsonModule ? G.concat([ ".json" ]) : undefined;
    var X = e.createMap();
    var Q;
    var Y;
    var Z;
    var ee;
    var te = q.hasInvalidatedResolution || e.returnFalse;
    if (q.resolveModuleNames) {
     ee = function(t, n, r) {
      return q.resolveModuleNames(e.Debug.assertEachDefined(t), n, r).map(function(t) {
       if (!t || t.extension !== undefined) {
        return t;
       }
       var n = e.clone(t);
       n.extension = e.extensionFromPath(t.resolvedFileName);
       return n;
      });
     };
    } else {
     Z = e.createModuleResolutionCache(H, function(e) {
      return q.getCanonicalFileName(e);
     });
     var ne = function(t, n) {
      return e.resolveModuleName(t, n, p, q, Z).resolvedModule;
     };
     ee = function(t, n) {
      return w(e.Debug.assertEachDefined(t), n, ne);
     };
    }
    var re;
    if (q.resolveTypeReferenceDirectives) {
     re = function(t, n) {
      return q.resolveTypeReferenceDirectives(e.Debug.assertEachDefined(t), n);
     };
    } else {
     var ie = function(t, n) {
      return e.resolveTypeReferenceDirective(t, n, p, q).resolvedTypeReferenceDirective;
     };
     re = function(t, n) {
      return w(e.Debug.assertEachDefined(t), n, ie);
     };
    }
    var ae = e.createMap();
    var oe = e.createMap();
    var se = e.createMap();
    var ce = e.createMap();
    var ue;
    var le = q.useCaseSensitiveFileNames() ? e.createMap() : undefined;
    var fe = _ ? [] : undefined;
    var de = e.createMap();
    var pe = T(g, p);
    var me = Re();
    if (me !== 2) {
     v = [];
     y = [];
     if (_) {
      for (var _e = 0, ge = _; _e < ge.length; _e++) {
       var he = ge[_e];
       var ve = Lt(he);
       fe.push(ve);
       if (ve) {
        if (ve.commandLine.options.outFile) {
         var ye = e.changeExtension(ve.commandLine.options.outFile, ".d.ts");
         kt(ye, false, false, undefined);
        }
        Rt(ve.commandLine, de);
       }
      }
     }
     e.forEach(d, function(e) {
      return _t(e, false, false);
     });
     var be = e.getAutomaticTypeDirectiveNames(p, q);
     if (be.length) {
      var xe = p.configFilePath ? e.getDirectoryPath(p.configFilePath) : q.getCurrentDirectory();
      var ke = e.combinePaths(xe, "__inferred type names__.ts");
      var Se = re(be, ke);
      for (var we = 0; we < be.length; we++) {
       Nt(be[we], Se[we]);
      }
     }
     if (!J) {
      var Ce = K();
      if (!p.lib && Ce) {
       _t(Ce, true, false);
      } else {
       e.forEach(p.lib, function(t) {
        _t(e.combinePaths(V, t), true, false);
       });
      }
     }
     ue = e.arrayFrom(ce.keys(), function(e) {
      return e;
     }).filter(function(e) {
      return !ce.get(e);
     });
     b = e.stableSort(v, Ae).concat(y);
     v = undefined;
     y = undefined;
    }
    e.Debug.assert(!!ue);
    if (g && q.onReleaseOldSourceFile) {
     var De = g.getSourceFiles();
     for (var Te = 0, Ee = De; Te < Ee.length; Te++) {
      var Ne = Ee[Te];
      if (!$e(Ne.path) || pe) {
       q.onReleaseOldSourceFile(Ne, g.getCompilerOptions());
      }
     }
    }
    g = undefined;
    h = {
     getRootFileNames: function() {
      return d;
     },
     getSourceFile: $e,
     getSourceFileByPath: Xe,
     getSourceFiles: function() {
      return b;
     },
     getMissingFilePaths: function() {
      return ue;
     },
     getCompilerOptions: function() {
      return p;
     },
     getSyntacticDiagnostics: Ye,
     getOptionsDiagnostics: dt,
     getGlobalDiagnostics: pt,
     getSemanticDiagnostics: Ze,
     getSuggestionDiagnostics: at,
     getDeclarationDiagnostics: et,
     getTypeChecker: Ve,
     getClassifiableNames: Me,
     getDiagnosticsProducingTypeChecker: Je,
     getCommonSourceDirectory: Oe,
     emit: We,
     getCurrentDirectory: function() {
      return H;
     },
     getNodeCount: function() {
      return Je().getNodeCount();
     },
     getIdentifierCount: function() {
      return Je().getIdentifierCount();
     },
     getSymbolCount: function() {
      return Je().getSymbolCount();
     },
     getTypeCount: function() {
      return Je().getTypeCount();
     },
     getFileProcessingDiagnostics: function() {
      return L;
     },
     getResolvedTypeReferenceDirectives: function() {
      return M;
     },
     isSourceFileFromExternalLibrary: qe,
     isSourceFileDefaultLibrary: Ue,
     dropDiagnosticsProducingTypeChecker: Ke,
     getSourceFileFromReference: bt,
     getLibFileFromReference: yt,
     sourceFileToPackageName: oe,
     redirectTargetsSet: se,
     isEmittedFile: Zt,
     getConfigFileParsingDiagnostics: mt,
     getResolvedModuleWithFailedLookupLocationsFromCache: Pe,
     getProjectReferences: ze
    };
    zt();
    e.performance.mark("afterProgram");
    e.performance.measure("Program", "beforeProgram", "afterProgram");
    return h;
    function Ae(t, n) {
     return e.compareValues(Fe(t), Fe(n));
    }
    function Fe(t) {
     if (e.containsPath(V, t.fileName, false)) {
      var n = e.getBaseFileName(t.fileName);
      if (n === "lib.d.ts" || n === "lib.es6.d.ts") return 0;
      var r = e.removeSuffix(e.removePrefix(n, "lib."), ".d.ts");
      var i = e.libs.indexOf(r);
      if (i !== -1) return i + 1;
     }
     return e.libs.length + 2;
    }
    function Pe(t, n) {
     return Z && e.resolveModuleNameFromCache(t, n, Z);
    }
    function Ie(t) {
     return e.toPath(t, H, Pt);
    }
    function Oe() {
     if (x === undefined) {
      var t = e.filter(b, function(t) {
       return e.sourceFileMayBeEmitted(t, p, qe);
      });
      if (p.rootDir && Mt(t, p.rootDir)) {
       x = e.getNormalizedAbsolutePath(p.rootDir, H);
      } else if (p.composite) {
       x = e.getDirectoryPath(e.normalizeSlashes(p.configFilePath));
       Mt(t, x);
      } else {
       x = Ot(t);
      }
      if (x && x[x.length - 1] !== e.directorySeparator) {
       x += e.directorySeparator;
      }
     }
     return x;
    }
    function Me() {
     if (!C) {
      Ve();
      C = e.createUnderscoreEscapedMap();
      for (var t = 0, n = b; t < n.length; t++) {
       var r = n[t];
       e.copyEntries(r.classifiableNames, C);
      }
     }
     return C;
    }
    function Le(t, n, r, i) {
     if (me === 0 && !r.ambientModuleNames.length) {
      return ee(t, n);
     }
     var a = i.program && i.program.getSourceFile(n);
     if (a !== r && r.resolvedModules) {
      var o = [];
      for (var s = 0, c = t; s < c.length; s++) {
       var u = c[s];
       var l = r.resolvedModules.get(u);
       o.push(l);
      }
      return o;
     }
     var f;
     var d;
     var m;
     var _ = {};
     for (var g = 0; g < t.length; g++) {
      var u = t[g];
      if (r === a && !te(a.path)) {
       var h = a && a.resolvedModules.get(u);
       if (h) {
        if (e.isTraceEnabled(p, q)) {
         e.trace(q, e.Diagnostics.Reusing_resolution_of_module_0_to_file_1_from_old_program, u, n);
        }
        (d || (d = new Array(t.length)))[g] = h;
        (m || (m = [])).push(u);
        continue;
       }
      }
      var v = false;
      if (e.contains(r.ambientModuleNames, u)) {
       v = true;
       if (e.isTraceEnabled(p, q)) {
        e.trace(q, e.Diagnostics.Module_0_was_resolved_as_locally_declared_ambient_module_in_file_1, u, n);
       }
      } else {
       v = x(u, i);
      }
      if (v) {
       (d || (d = new Array(t.length)))[g] = _;
      } else {
       (f || (f = [])).push(u);
      }
     }
     var y = f && f.length ? ee(f, n, m) : e.emptyArray;
     if (!d) {
      e.Debug.assert(y.length === t.length);
      return y;
     }
     var b = 0;
     for (var g = 0; g < d.length; g++) {
      if (d[g]) {
       if (d[g] === _) {
        d[g] = undefined;
       }
      } else {
       d[g] = y[b];
       b++;
      }
     }
     e.Debug.assert(b === y.length);
     return d;
     function x(t, n) {
      var r = e.getResolvedModule(n.oldSourceFile, t);
      var i = r && n.program && n.program.getSourceFile(r.resolvedFileName);
      if (r && i && !i.externalModuleIndicator) {
       return false;
      }
      var a = n.program && n.program.getTypeChecker().tryFindAmbientModuleWithoutAugmentations(t);
      if (!(a && a.declarations)) {
       return false;
      }
      var o = e.forEach(a.declarations, function(t) {
       var r = e.getSourceFileOfNode(t);
       return !e.contains(n.modifiedFilePaths, r.path) && r;
      });
      if (!o) {
       return false;
      }
      if (e.isTraceEnabled(p, q)) {
       e.trace(q, e.Diagnostics.Module_0_was_resolved_as_ambient_module_declared_in_1_since_this_file_was_not_modified, t, o.fileName);
      }
      return true;
     }
    }
    function Re() {
     if (!g) {
      return 0;
     }
     var t = g.getCompilerOptions();
     if (e.changesAffectModuleResolution(t, p)) {
      return g.structureIsReused = 0;
     }
     e.Debug.assert(!(g.structureIsReused & (2 | 1)));
     var n = g.getRootFileNames();
     if (!e.arrayIsEqualTo(n, d)) {
      return g.structureIsReused = 0;
     }
     if (!e.arrayIsEqualTo(p.types, t.types)) {
      return g.structureIsReused = 0;
     }
     var r = g.getProjectReferences();
     if (_) {
      if (!r) {
       return g.structureIsReused = 0;
      }
      for (var i = 0; i < _.length; i++) {
       var a = r[i];
       if (a) {
        var o = Lt(_[i]);
        if (!o || o.sourceFile !== a.sourceFile) {
         return g.structureIsReused = 0;
        }
       } else {
        if (Lt(_[i]) !== undefined) {
         return g.structureIsReused = 0;
        }
       }
      }
     } else {
      if (r) {
       return g.structureIsReused = 0;
      }
     }
     var s = [];
     var c = [];
     var u = [];
     g.structureIsReused = 2;
     if (g.getMissingFilePaths().some(function(e) {
      return q.fileExists(e);
     })) {
      return g.structureIsReused = 0;
     }
     var l = g.getSourceFiles();
     var f;
     (function(e) {
      e[e["Exists"] = 0] = "Exists";
      e[e["Modified"] = 1] = "Modified";
     })(f || (f = {}));
     var m = e.createMap();
     for (var h = 0, v = l; h < v.length; h++) {
      var y = v[h];
      var x = q.getSourceFileByPath ? q.getSourceFileByPath(y.fileName, y.resolvedPath || y.path, p.target, undefined, pe) : q.getSourceFile(y.fileName, p.target, undefined, pe);
      if (!x) {
       return g.structureIsReused = 0;
      }
      e.Debug.assert(!x.redirectInfo, "Host should not return a redirect source file from `getSourceFile`");
      var k = void 0;
      if (y.redirectInfo) {
       if (x !== y.redirectInfo.unredirected) {
        return g.structureIsReused = 0;
       }
       k = false;
       x = y;
      } else if (g.redirectTargetsSet.has(y.path)) {
       if (x !== y) {
        return g.structureIsReused = 0;
       }
       k = false;
      } else {
       k = x !== y;
      }
      x.path = y.path;
      c.push(x.path);
      var S = g.sourceFileToPackageName.get(y.path);
      if (S !== undefined) {
       var w = m.get(S);
       var C = k ? 1 : 0;
       if (w !== undefined && C === 1 || w === 1) {
        return g.structureIsReused = 0;
       }
       m.set(S, C);
      }
      if (k) {
       if (!e.arrayIsEqualTo(y.libReferenceDirectives, x.libReferenceDirectives, gt)) {
        return g.structureIsReused = 0;
       }
       if (y.hasNoDefaultLib !== x.hasNoDefaultLib) {
        g.structureIsReused = 1;
       }
       if (!e.arrayIsEqualTo(y.referencedFiles, x.referencedFiles, gt)) {
        g.structureIsReused = 1;
       }
       vt(x);
       if (!e.arrayIsEqualTo(y.imports, x.imports, ht)) {
        g.structureIsReused = 1;
       }
       if (!e.arrayIsEqualTo(y.moduleAugmentations, x.moduleAugmentations, ht)) {
        g.structureIsReused = 1;
       }
       if ((y.flags & 1572864) !== (x.flags & 1572864)) {
        g.structureIsReused = 1;
       }
       if (!e.arrayIsEqualTo(y.typeReferenceDirectives, x.typeReferenceDirectives, gt)) {
        g.structureIsReused = 1;
       }
       u.push({
        oldFile: y,
        newFile: x
       });
      } else if (te(y.path)) {
       g.structureIsReused = 1;
       u.push({
        oldFile: y,
        newFile: x
       });
      }
      s.push(x);
     }
     if (g.structureIsReused !== 2) {
      return g.structureIsReused;
     }
     D = u.map(function(e) {
      return e.newFile.path;
     });
     for (var T = 0, E = u; T < E.length; T++) {
      var N = E[T], y = N.oldFile, x = N.newFile;
      var A = e.getNormalizedAbsolutePath(x.fileName, H);
      if (ee) {
       var F = I(x);
       var P = {
        program: g,
        oldSourceFile: y,
        modifiedFilePaths: D
       };
       var O = Le(F, A, x, P);
       var R = e.hasChangesInResolutions(F, O, y.resolvedModules, e.moduleResolutionIsEqualTo);
       if (R) {
        g.structureIsReused = 1;
        x.resolvedModules = e.zipToMap(F, O);
       } else {
        x.resolvedModules = y.resolvedModules;
       }
      }
      if (re) {
       var B = e.map(x.typeReferenceDirectives, function(e) {
        return e.fileName;
       });
       var O = re(B, A);
       var R = e.hasChangesInResolutions(B, O, y.resolvedTypeReferenceDirectiveNames, e.typeDirectiveIsEqualTo);
       if (R) {
        g.structureIsReused = 1;
        x.resolvedTypeReferenceDirectiveNames = e.zipToMap(B, O);
       } else {
        x.resolvedTypeReferenceDirectiveNames = y.resolvedTypeReferenceDirectiveNames;
       }
      }
     }
     if (g.structureIsReused !== 2) {
      return g.structureIsReused;
     }
     if (q.hasChangedAutomaticTypeDirectiveNames) {
      return g.structureIsReused = 1;
     }
     ue = g.getMissingFilePaths();
     for (var i = 0; i < s.length; i++) {
      ce.set(c[i], s[i]);
      if (g.isSourceFileFromExternalLibrary(g.getSourceFileByPath(c[i]))) {
       j.set(c[i], true);
      }
     }
     b = s;
     L = g.getFileProcessingDiagnostics();
     for (var z = 0, U = u; z < U.length; z++) {
      var J = U[z];
      L.reattachFileDiagnostics(J.newFile);
     }
     M = g.getResolvedTypeReferenceDirectives();
     fe = g.getProjectReferences();
     oe = g.sourceFileToPackageName;
     se = g.redirectTargetsSet;
     return g.structureIsReused = 2;
    }
    function Be(t) {
     return r({
      getPrependNodes: je,
      getCanonicalFileName: Pt,
      getCommonSourceDirectory: h.getCommonSourceDirectory,
      getCompilerOptions: h.getCompilerOptions,
      getCurrentDirectory: function() {
       return H;
      },
      getNewLine: function() {
       return q.getNewLine();
      },
      getSourceFile: h.getSourceFile,
      getSourceFileByPath: h.getSourceFileByPath,
      getSourceFiles: h.getSourceFiles,
      isSourceFileFromExternalLibrary: qe,
      writeFile: t || function(e, t, n, r, i) {
       return q.writeFile(e, t, n, r, i);
      },
      isEmitBlocked: He,
      readFile: function(e) {
       return q.readFile(e);
      },
      fileExists: function(t) {
       var n = Ie(t);
       if (Xe(n)) return true;
       if (e.contains(ue, n)) return false;
       return q.fileExists(t);
      }
     }, q.directoryExists ? {
      directoryExists: function(e) {
       return q.directoryExists(e);
      }
     } : {}, {
      useCaseSensitiveFileNames: function() {
       return q.useCaseSensitiveFileNames();
      }
     });
    }
    function ze() {
     if (!fe) return;
     return fe;
    }
    function je() {
     if (!_) {
      return e.emptyArray;
     }
     var t = [];
     for (var n = 0; n < _.length; n++) {
      var r = _[n];
      var i = fe[n].commandLine;
      if (r.prepend && i && i.options) {
       if (!i.options.outFile) continue;
       var a = e.changeExtension(i.options.outFile, ".d.ts");
       var o = q.readFile(i.options.outFile) || "/* Input file " + i.options.outFile + " was missing */\r\n";
       var s = i.options.outFile + ".map";
       var c = q.readFile(s);
       var u = q.readFile(a) || "/* Input file " + a + " was missing */\r\n";
       var l = a + ".map";
       var f = q.readFile(l);
       var d = e.createInputFiles(o, u, c && s, c, f && l, f);
       t.push(d);
      }
     }
     return t;
    }
    function qe(e) {
     return !!j.get(e.path);
    }
    function Ue(t) {
     if (t.hasNoDefaultLib) {
      return true;
     }
     if (!p.noLib) {
      return false;
     }
     var n = q.useCaseSensitiveFileNames() ? e.equateStringsCaseSensitive : e.equateStringsCaseInsensitive;
     if (!p.lib) {
      return n(t.fileName, K());
     } else {
      return e.some(p.lib, function(r) {
       return n(t.fileName, e.combinePaths(V, r));
      });
     }
    }
    function Je() {
     return k || (k = e.createTypeChecker(h, true));
    }
    function Ke() {
     k = undefined;
    }
    function Ve() {
     return S || (S = e.createTypeChecker(h, false));
    }
    function We(e, t, n, r, i) {
     return nt(function() {
      return Ge(h, e, t, n, r, i);
     });
    }
    function He(e) {
     return X.has(Ie(e));
    }
    function Ge(t, n, r, i, a, o) {
     var s = [];
     if (!a) {
      if (p.noEmit) {
       return {
        diagnostics: s,
        sourceMaps: undefined,
        emittedFiles: undefined,
        emitSkipped: true
       };
      }
      if (p.noEmitOnError) {
       var c = t.getOptionsDiagnostics(i).concat(t.getSyntacticDiagnostics(n, i), t.getGlobalDiagnostics(i), t.getSemanticDiagnostics(n, i));
       if (c.length === 0 && t.getCompilerOptions().declaration) {
        s = t.getDeclarationDiagnostics(undefined, i);
       }
       if (c.length > 0 || s.length > 0) {
        return {
         diagnostics: e.concatenate(c, s),
         sourceMaps: undefined,
         emittedFiles: undefined,
         emitSkipped: true
        };
       }
      }
     }
     var u = Je().getEmitResolver(p.outFile || p.out ? undefined : n, i);
     e.performance.mark("beforeEmit");
     var l = a ? [] : e.getTransformers(p, o);
     var f = e.emitFiles(u, Be(r), n, a, l, o && o.afterDeclarations);
     e.performance.mark("afterEmit");
     e.performance.measure("Emit", "beforeEmit", "afterEmit");
     return f;
    }
    function $e(e) {
     return Xe(Ie(e));
    }
    function Xe(e) {
     return ce.get(e);
    }
    function Qe(t, n, r) {
     if (t) {
      return n(t, r);
     }
     return e.sortAndDeduplicateDiagnostics(e.flatMap(h.getSourceFiles(), function(e) {
      if (r) {
       r.throwIfCancellationRequested();
      }
      return n(e, r);
     }));
    }
    function Ye(e, t) {
     return Qe(e, tt, t);
    }
    function Ze(e, t) {
     return Qe(e, rt, t);
    }
    function et(e, t) {
     var n = h.getCompilerOptions();
     if (!e || n.out || n.outFile) {
      return ct(e, t);
     } else {
      return Qe(e, ft, t);
     }
    }
    function tt(t) {
     if (e.isSourceFileJavaScript(t)) {
      if (!t.additionalSyntacticDiagnostics) {
       t.additionalSyntacticDiagnostics = st(t);
      }
      return e.concatenate(t.additionalSyntacticDiagnostics, t.parseDiagnostics);
     }
     return t.parseDiagnostics;
    }
    function nt(t) {
     try {
      return t();
     } catch (t) {
      if (t instanceof e.OperationCanceledException) {
       S = undefined;
       k = undefined;
      }
      throw t;
     }
    }
    function rt(e, t) {
     return lt(e, t, N, it);
    }
    function it(t, n) {
     return nt(function() {
      if (p.skipLibCheck && t.isDeclarationFile || p.skipDefaultLibCheck && t.hasNoDefaultLib) {
       return e.emptyArray;
      }
      var r = Je();
      e.Debug.assert(!!t.bindDiagnostics);
      var i = e.isCheckJsEnabledForFile(t, p);
      var a = t.scriptKind === 3 || t.scriptKind === 4 || t.scriptKind === 5 || i || t.scriptKind === 7;
      var o = a ? t.bindDiagnostics : e.emptyArray;
      var s = a ? r.getDiagnostics(t, n) : e.emptyArray;
      var c = L.getDiagnostics(t.fileName);
      var u = W.getDiagnostics(t.fileName);
      var l;
      for (var f = 0, d = [ o, s, c, u, i ? t.jsDocDiagnostics : undefined ]; f < d.length; f++) {
       var m = d[f];
       if (m) {
        for (var _ = 0, g = m; _ < g.length; _++) {
         var h = g[_];
         if (ot(h)) {
          l = e.append(l, h);
         }
        }
       }
      }
      return l;
     });
    }
    function at(e, t) {
     return nt(function() {
      return Je().getSuggestionDiagnostics(e, t);
     });
    }
    function ot(n) {
     var r = n.file, i = n.start;
     if (r) {
      var a = e.getLineStarts(r);
      var o = e.computeLineAndCharacterOfPosition(a, i).line;
      while (o > 0) {
       var s = r.text.slice(a[o - 1], a[o]);
       var c = t.exec(s);
       if (!c) {
        return true;
       }
       if (c[3]) {
        return false;
       }
       o--;
      }
     }
     return true;
    }
    function st(t) {
     return nt(function() {
      var n = [];
      var r = t;
      i(t);
      return n;
      function i(t) {
       switch (r.kind) {
       case 149:
       case 152:
        if (r.questionToken === t) {
         n.push(c(t, e.Diagnostics._0_can_only_be_used_in_a_ts_file, "?"));
         return;
        }

       case 154:
       case 153:
       case 155:
       case 156:
       case 157:
       case 194:
       case 237:
       case 195:
       case 235:
        if (r.type === t) {
         n.push(c(t, e.Diagnostics.types_can_only_be_used_in_a_ts_file));
         return;
        }
       }
       switch (t.kind) {
       case 246:
        n.push(c(t, e.Diagnostics.import_can_only_be_used_in_a_ts_file));
        return;

       case 252:
        if (t.isExportEquals) {
         n.push(c(t, e.Diagnostics.export_can_only_be_used_in_a_ts_file));
         return;
        }
        break;

       case 271:
        var o = t;
        if (o.token === 108) {
         n.push(c(t, e.Diagnostics.implements_clauses_can_only_be_used_in_a_ts_file));
         return;
        }
        break;

       case 239:
        n.push(c(t, e.Diagnostics.interface_declarations_can_only_be_used_in_a_ts_file));
        return;

       case 242:
        n.push(c(t, e.Diagnostics.module_declarations_can_only_be_used_in_a_ts_file));
        return;

       case 240:
        n.push(c(t, e.Diagnostics.type_aliases_can_only_be_used_in_a_ts_file));
        return;

       case 241:
        n.push(c(t, e.Diagnostics.enum_declarations_can_only_be_used_in_a_ts_file));
        return;

       case 211:
        n.push(c(t, e.Diagnostics.non_null_assertions_can_only_be_used_in_a_ts_file));
        return;

       case 210:
        n.push(c(t.type, e.Diagnostics.type_assertion_expressions_can_only_be_used_in_a_ts_file));
        return;

       case 192:
        e.Debug.fail();
       }
       var s = r;
       r = t;
       e.forEachChild(t, i, a);
       r = s;
      }
      function a(t) {
       if (r.decorators === t && !p.experimentalDecorators) {
        n.push(c(r, e.Diagnostics.Experimental_support_for_decorators_is_a_feature_that_is_subject_to_change_in_a_future_release_Set_the_experimentalDecorators_option_to_remove_this_warning));
       }
       switch (r.kind) {
       case 238:
       case 154:
       case 153:
       case 155:
       case 156:
       case 157:
       case 194:
       case 237:
       case 195:
        if (t === r.typeParameters) {
         n.push(s(t, e.Diagnostics.type_parameter_declarations_can_only_be_used_in_a_ts_file));
         return;
        }

       case 217:
        if (t === r.modifiers) {
         return o(t, r.kind === 217);
        }
        break;

       case 152:
        if (t === r.modifiers) {
         for (var a = 0, u = t; a < u.length; a++) {
          var l = u[a];
          if (l.kind !== 115) {
           n.push(c(l, e.Diagnostics._0_can_only_be_used_in_a_ts_file, e.tokenToString(l.kind)));
          }
         }
         return;
        }
        break;

       case 149:
        if (t === r.modifiers) {
         n.push(s(t, e.Diagnostics.parameter_modifiers_can_only_be_used_in_a_ts_file));
         return;
        }
        break;

       case 189:
       case 190:
       case 209:
       case 259:
       case 260:
        if (t === r.typeArguments) {
         n.push(s(t, e.Diagnostics.type_arguments_can_only_be_used_in_a_ts_file));
         return;
        }
        break;
       }
       for (var f = 0, d = t; f < d.length; f++) {
        var m = d[f];
        i(m);
       }
      }
      function o(t, r) {
       for (var i = 0, a = t; i < a.length; i++) {
        var o = a[i];
        switch (o.kind) {
        case 76:
         if (r) {
          continue;
         }

        case 114:
        case 112:
        case 113:
        case 132:
        case 124:
        case 117:
         n.push(c(o, e.Diagnostics._0_can_only_be_used_in_a_ts_file, e.tokenToString(o.kind)));
         break;

        case 115:
        case 84:
        case 79:
        }
       }
      }
      function s(n, r, i, a, o) {
       var s = n.pos;
       return e.createFileDiagnostic(t, s, n.end - s, r, i, a, o);
      }
      function c(n, r, i, a, o) {
       return e.createDiagnosticForNodeInSourceFile(t, n, r, i, a, o);
      }
     });
    }
    function ct(e, t) {
     return lt(e, t, O, ut);
    }
    function ut(t, n) {
     return nt(function() {
      var r = Je().getEmitResolver(t, n);
      return e.getDeclarationDiagnostics(Be(e.noop), r, t);
     });
    }
    function lt(t, n, r, i) {
     var a = t ? r.perFile && r.perFile.get(t.path) : r.allDiagnostics;
     if (a) {
      return a;
     }
     var o = i(t, n) || e.emptyArray;
     if (t) {
      if (!r.perFile) {
       r.perFile = e.createMap();
      }
      r.perFile.set(t.path, o);
     } else {
      r.allDiagnostics = o;
     }
     return o;
    }
    function ft(e, t) {
     return e.isDeclarationFile ? [] : ct(e, t);
    }
    function dt() {
     return e.sortAndDeduplicateDiagnostics(e.concatenate(L.getGlobalDiagnostics(), e.concatenate(W.getGlobalDiagnostics(), p.configFile ? W.getDiagnostics(p.configFile.fileName) : [])));
    }
    function pt() {
     return e.sortAndDeduplicateDiagnostics(Je().getGlobalDiagnostics().slice());
    }
    function mt() {
     return m || e.emptyArray;
    }
    function _t(t, n, r) {
     kt(e.normalizePath(t), n, r, undefined);
    }
    function gt(e, t) {
     return e.fileName === t.fileName;
    }
    function ht(e, t) {
     return e.kind === 71 ? t.kind === 71 && e.escapedText === t.escapedText : t.kind === 9 && e.text === t.text;
    }
    function vt(t) {
     if (t.imports) {
      return;
     }
     var n = e.isSourceFileJavaScript(t);
     var r = e.isExternalModule(t);
     var i;
     var a;
     var o;
     if (p.importHelpers && (p.isolatedModules || r) && !t.isDeclarationFile) {
      var s = e.createLiteral(e.externalHelpersModuleNameText);
      var c = e.createImportDeclaration(undefined, undefined, undefined, s);
      e.addEmitFlags(c, 67108864);
      s.parent = c;
      c.parent = t;
      i = [ s ];
     }
     for (var u = 0, l = t.statements; u < l.length; u++) {
      var f = l[u];
      d(f, false);
      if (t.flags & 524288 || n) {
       m(f);
      }
     }
     if (t.flags & 524288 || n) {
      m(t.endOfFileToken);
     }
     t.imports = i || e.emptyArray;
     t.moduleAugmentations = a || e.emptyArray;
     t.ambientModuleNames = o || e.emptyArray;
     return;
     function d(n, s) {
      if (e.isAnyImportOrReExport(n)) {
       var c = e.getExternalModuleName(n);
       if (c && e.isStringLiteral(c) && c.text && (!s || !e.isExternalModuleNameRelative(c.text))) {
        i = e.append(i, c);
       }
      } else if (e.isModuleDeclaration(n)) {
       if (e.isAmbientModule(n) && (s || e.hasModifier(n, 2) || t.isDeclarationFile)) {
        var u = e.getTextOfIdentifierOrLiteral(n.name);
        if (r || s && !e.isExternalModuleNameRelative(u)) {
         (a || (a = [])).push(n.name);
        } else if (!s) {
         if (t.isDeclarationFile) {
          (o || (o = [])).push(u);
         }
         var l = n.body;
         if (l) {
          for (var f = 0, p = l.statements; f < p.length; f++) {
           var m = p[f];
           d(m, true);
          }
         }
        }
       }
      }
     }
     function m(t) {
      if (e.isRequireCall(t, true)) {
       i = e.append(i, t.arguments[0]);
      } else if (e.isImportCall(t) && t.arguments.length === 1 && e.isStringLiteralLike(t.arguments[0])) {
       i = e.append(i, t.arguments[0]);
      } else if (e.isLiteralImportTypeNode(t)) {
       i = e.append(i, t.argument.literal);
      }
      _(t);
      if (e.hasJSDocNodes(t)) {
       e.forEach(t.jsDoc, _);
      }
     }
     function _(t) {
      e.forEachChild(t, m);
     }
    }
    function yt(t) {
     var n = t.fileName.toLocaleLowerCase();
     var r = e.libMap.get(n);
     if (r) {
      return $e(e.combinePaths(V, r));
     }
    }
    function bt(e, t) {
     return xt(i(t.fileName, e.fileName), function(e) {
      return ce.get(Ie(e));
     });
    }
    function xt(t, n, r, i) {
     if (e.hasExtension(t)) {
      if (!p.allowNonTsExtensions && !e.forEach($ || G, function(n) {
       return e.fileExtensionIs(q.getCanonicalFileName(t), n);
      })) {
       if (r) r(e.Diagnostics.File_0_has_unsupported_extension_The_only_supported_extensions_are_1, t, "'" + G.join("', '") + "'");
       return undefined;
      }
      var a = n(t);
      if (r) {
       if (!a) {
        var o = Dt(t);
        if (o) {
         r(e.Diagnostics.Output_file_0_has_not_been_built_from_source_file_1, o, t);
        } else {
         r(e.Diagnostics.File_0_not_found, t);
        }
       } else if (i && q.getCanonicalFileName(t) === q.getCanonicalFileName(i.fileName)) {
        r(e.Diagnostics.A_file_cannot_have_a_reference_to_itself);
       }
      }
      return a;
     } else {
      var s = p.allowNonTsExtensions && n(t);
      if (s) return s;
      if (r && p.allowNonTsExtensions) {
       r(e.Diagnostics.File_0_not_found, t);
       return undefined;
      }
      var c = e.forEach(G, function(e) {
       return n(t + e);
      });
      if (r && !c) r(e.Diagnostics.File_0_not_found, t + ".ts");
      return c;
     }
    }
    function kt(t, n, r, i, a, o, s) {
     xt(t, function(e) {
      return Ct(e, Ie(e), n, r, a, o, s, i);
     }, function(t) {
      var n = [];
      for (var r = 1; r < arguments.length; r++) {
       n[r - 1] = arguments[r];
      }
      L.add(a !== undefined && s !== undefined && o !== undefined ? e.createFileDiagnostic.apply(void 0, [ a, o, s - o, t ].concat(n)) : e.createCompilerDiagnostic.apply(void 0, [ t ].concat(n)));
     }, a);
    }
    function St(t, n, r, i, a) {
     if (r !== undefined && i !== undefined && a !== undefined) {
      L.add(e.createFileDiagnostic(r, i, a - i, e.Diagnostics.File_name_0_differs_from_already_included_file_name_1_only_in_casing, t, n));
     } else {
      L.add(e.createCompilerDiagnostic(e.Diagnostics.File_name_0_differs_from_already_included_file_name_1_only_in_casing, t, n));
     }
    }
    function wt(e, t, n, r) {
     var i = Object.create(e);
     i.fileName = n;
     i.path = r;
     i.redirectInfo = {
      redirectTarget: e,
      unredirected: t
     };
     Object.defineProperties(i, {
      id: {
       get: function() {
        return this.redirectInfo.redirectTarget.id;
       },
       set: function(e) {
        this.redirectInfo.redirectTarget.id = e;
       }
      },
      symbol: {
       get: function() {
        return this.redirectInfo.redirectTarget.symbol;
       },
       set: function(e) {
        this.redirectInfo.redirectTarget.symbol = e;
       }
      }
     });
     return i;
    }
    function Ct(t, n, r, i, a, o, s, c) {
     if (ce.has(n)) {
      var u = ce.get(n);
      if (u && p.forceConsistentCasingInFileNames) {
       var l = t;
       var f = u.fileName;
       var d = Ie(f) !== Ie(l);
       if (d) {
        l = Dt(t) || t;
       }
       if (e.getNormalizedAbsolutePath(f, H) !== e.getNormalizedAbsolutePath(l, H)) {
        St(l, f, a, o, s);
       }
      }
      if (u && j.get(u.path) && B === 0) {
       j.set(u.path, false);
       if (!p.noResolve) {
        Tt(u, r);
        Et(u);
       }
       At(u);
       z.set(u.path, false);
       It(u);
      } else if (u && z.get(u.path)) {
       if (B < R) {
        z.set(u.path, false);
        It(u);
       }
      }
      return u;
     }
     var m;
     if (a) {
      var _ = Dt(t);
      if (_) {
       (a.redirectedReferences || (a.redirectedReferences = [])).push(t);
       t = _;
       m = Ie(_);
      }
     }
     var g = q.getSourceFile(t, p.target, function(n) {
      if (a !== undefined && o !== undefined && s !== undefined) {
       L.add(e.createFileDiagnostic(a, o, s - o, e.Diagnostics.Cannot_read_file_0_Colon_1, t, n));
      } else {
       L.add(e.createCompilerDiagnostic(e.Diagnostics.Cannot_read_file_0_Colon_1, t, n));
      }
     }, pe);
     if (c) {
      var h = e.packageIdToString(c);
      var b = ae.get(h);
      if (b) {
       var x = wt(b, g, t, n);
       se.set(b.path, true);
       ce.set(n, x);
       oe.set(n, c.name);
       y.push(x);
       return x;
      } else if (g) {
       ae.set(h, g);
       oe.set(n, c.name);
      }
     }
     ce.set(n, g);
     if (m) {
      ce.set(m, g);
     }
     if (g) {
      j.set(n, B > 0);
      g.path = n;
      g.resolvedPath = Ie(t);
      if (q.useCaseSensitiveFileNames()) {
       var k = n.toLowerCase();
       var S = le.get(k);
       if (S) {
        St(t, S.fileName, a, o, s);
       } else {
        le.set(k, g);
       }
      }
      J = J || g.hasNoDefaultLib && !i;
      if (!p.noResolve) {
       Tt(g, r);
       Et(g);
      }
      At(g);
      It(g);
      if (r) {
       v.push(g);
      } else {
       y.push(g);
      }
     }
     return g;
    }
    function Dt(t) {
     var n = Ie(t);
     var r = e.getNormalizedAbsolutePath(t, n);
     var i;
     de.forEach(function(n, a) {
      if (i !== undefined) {
       return undefined;
      }
      if (r.indexOf(a) === 0) {
       i = e.changeExtension(t.replace(a, n), ".d.ts");
      }
     });
     return i;
    }
    function Tt(t, n) {
     e.forEach(t.referencedFiles, function(e) {
      var r = i(e.fileName, t.fileName);
      kt(r, n, false, undefined, t, e.pos, e.end);
     });
    }
    function Et(t) {
     var n = e.map(t.typeReferenceDirectives, function(e) {
      return e.fileName.toLocaleLowerCase();
     });
     if (!n) {
      return;
     }
     var r = re(n, t.fileName);
     for (var i = 0; i < n.length; i++) {
      var a = t.typeReferenceDirectives[i];
      var o = r[i];
      var s = a.fileName.toLocaleLowerCase();
      e.setResolvedTypeReferenceDirective(t, s, o);
      Nt(s, o, t, a.pos, a.end);
     }
    }
    function Nt(t, n, r, i, a) {
     var o = M.get(t);
     if (o && o.primary) {
      return;
     }
     var s = true;
     if (n) {
      if (n.primary) {
       kt(n.resolvedFileName, false, false, n.packageId, r, i, a);
      } else {
       if (o) {
        if (n.resolvedFileName !== o.resolvedFileName) {
         var c = q.readFile(n.resolvedFileName);
         if (c !== $e(o.resolvedFileName).text) {
          L.add(Ft(r, i, a, e.Diagnostics.Conflicting_definitions_for_0_found_at_1_and_2_Consider_installing_a_specific_version_of_this_library_to_resolve_the_conflict, t, n.resolvedFileName, o.resolvedFileName));
         }
        }
        s = false;
       } else {
        kt(n.resolvedFileName, false, false, n.packageId, r, i, a);
       }
      }
     } else {
      L.add(Ft(r, i, a, e.Diagnostics.Cannot_find_type_definition_file_for_0, t));
     }
     if (s) {
      M.set(t, n);
     }
    }
    function At(t) {
     e.forEach(t.libReferenceDirectives, function(n) {
      var r = n.fileName.toLocaleLowerCase();
      var i = e.libMap.get(r);
      if (i) {
       _t(e.combinePaths(V, i), true, true);
      } else {
       var a = e.removeSuffix(e.removePrefix(r, "lib."), ".d.ts");
       var o = e.getSpellingSuggestion(a, e.libs, e.identity);
       var s = o ? e.Diagnostics.Cannot_find_lib_definition_for_0_Did_you_mean_1 : e.Diagnostics.Cannot_find_lib_definition_for_0;
       L.add(Ft(t, n.pos, n.end, s, r, o));
      }
     });
    }
    function Ft(t, n, r, i) {
     var a = [];
     for (var o = 4; o < arguments.length; o++) {
      a[o - 4] = arguments[o];
     }
     if (t === undefined || n === undefined || r === undefined) {
      return e.createCompilerDiagnostic.apply(void 0, [ i ].concat(a));
     } else {
      return e.createFileDiagnostic.apply(void 0, [ t, n, r - n, i ].concat(a));
     }
    }
    function Pt(e) {
     return q.getCanonicalFileName(e);
    }
    function It(t) {
     vt(t);
     if (t.imports.length || t.moduleAugmentations.length) {
      var n = I(t);
      var r = {
       program: g,
       oldSourceFile: g && g.getSourceFile(t.fileName),
       modifiedFilePaths: D
      };
      var i = Le(n, e.getNormalizedAbsolutePath(t.fileName, H), t, r);
      e.Debug.assert(i.length === n.length);
      for (var a = 0; a < n.length; a++) {
       var o = i[a];
       e.setResolvedModule(t, n[a], o);
       if (!o) {
        continue;
       }
       var s = o.isExternalLibraryImport;
       var c = !e.resolutionExtensionIsTypeScriptOrJson(o.extension);
       var u = s && c;
       var l = o.resolvedFileName;
       if (s) {
        B++;
       }
       var f = u && B > R;
       var d = l && !P(p, o) && !p.noResolve && a < t.imports.length && !f && !(c && !p.allowJs) && (e.isInJavaScriptFile(t.imports[a]) || !(t.imports[a].flags & 2097152));
       if (f) {
        z.set(t.path, true);
       } else if (d) {
        var m = Ie(l);
        var _ = e.skipTrivia(t.text, t.imports[a].pos);
        Ct(l, m, false, false, t, _, t.imports[a].end, o.packageId);
       }
       if (s) {
        B--;
       }
      }
     } else {
      t.resolvedModules = undefined;
     }
    }
    function Ot(e) {
     var t = [];
     for (var n = 0, r = e; n < r.length; n++) {
      var i = r[n];
      if (!i.isDeclarationFile) {
       t.push(i.fileName);
      }
     }
     return a(t, H, Pt);
    }
    function Mt(t, n) {
     var r = true;
     if (t) {
      var i = q.getCanonicalFileName(e.getNormalizedAbsolutePath(n, H));
      for (var a = 0, o = t; a < o.length; a++) {
       var s = o[a];
       if (!s.isDeclarationFile) {
        var c = q.getCanonicalFileName(e.getNormalizedAbsolutePath(s.fileName, H));
        if (c.indexOf(i) !== 0) {
         W.add(e.createCompilerDiagnostic(e.Diagnostics.File_0_is_not_under_rootDir_1_rootDir_is_expected_to_contain_all_source_files, s.fileName, n));
         r = false;
        }
       }
      }
     }
     return r;
    }
    function Lt(t) {
     var n = F(q, t);
     var r = e.getNormalizedAbsolutePath(e.getDirectoryPath(n), q.getCurrentDirectory());
     var i = q.getSourceFile(n, 100);
     if (i === undefined) {
      return undefined;
     }
     var a = e.parseJsonSourceFileConfigFileContent(i, U, r, undefined, n);
     return {
      commandLine: a,
      sourceFile: i
     };
    }
    function Rt(t, n) {
     var r = e.normalizePath(t.options.rootDir || e.getDirectoryPath(t.options.configFilePath));
     n.set(r, Bt(t));
    }
    function Bt(t) {
     return t.options.declarationDir || t.options.outDir || e.getDirectoryPath(t.options.configFilePath);
    }
    function zt() {
     if (p.strictPropertyInitialization && !p.strictNullChecks) {
      Kt(e.Diagnostics.Option_0_cannot_be_specified_without_specifying_option_1, "strictPropertyInitialization", "strictNullChecks");
     }
     if (p.isolatedModules) {
      if (p.declaration) {
       Kt(e.Diagnostics.Option_0_cannot_be_specified_with_option_1, "declaration", "isolatedModules");
      }
      if (p.noEmitOnError) {
       Kt(e.Diagnostics.Option_0_cannot_be_specified_with_option_1, "noEmitOnError", "isolatedModules");
      }
      if (p.out) {
       Kt(e.Diagnostics.Option_0_cannot_be_specified_with_option_1, "out", "isolatedModules");
      }
      if (p.outFile) {
       Kt(e.Diagnostics.Option_0_cannot_be_specified_with_option_1, "outFile", "isolatedModules");
      }
     }
     if (p.inlineSourceMap) {
      if (p.sourceMap) {
       Kt(e.Diagnostics.Option_0_cannot_be_specified_with_option_1, "sourceMap", "inlineSourceMap");
      }
      if (p.mapRoot) {
       Kt(e.Diagnostics.Option_0_cannot_be_specified_with_option_1, "mapRoot", "inlineSourceMap");
      }
     }
     if (p.paths && p.baseUrl === undefined) {
      Kt(e.Diagnostics.Option_paths_cannot_be_used_without_specifying_baseUrl_option, "paths");
     }
     if (p.composite) {
      if (p.declaration === false) {
       Kt(e.Diagnostics.Composite_projects_may_not_disable_declaration_emit, "declaration");
      }
     }
     if (_) {
      for (var t = 0; t < _.length; t++) {
       var n = _[t];
       var r = fe[t] && fe[t].commandLine.options;
       if (r === undefined) {
        Wt(t, e.Diagnostics.File_0_does_not_exist, n.path);
        continue;
       }
       if (!r.composite) {
        Wt(t, e.Diagnostics.Referenced_project_0_must_have_setting_composite_Colon_true, n.path);
       }
       if (n.prepend) {
        if (r.outFile) {
         if (!q.fileExists(r.outFile)) {
          Wt(t, e.Diagnostics.Output_file_0_from_project_1_does_not_exist, r.outFile, n.path);
         }
        } else {
         Wt(t, e.Diagnostics.Cannot_prepend_project_0_because_it_does_not_have_outFile_set, n.path);
        }
       }
      }
     }
     if (p.composite && d.length < b.length) {
      var i = d.map(function(t) {
       return e.normalizePath(t).toLowerCase();
      });
      var a = b.filter(function(e) {
       return !e.isDeclarationFile;
      }).map(function(t) {
       return e.normalizePath(t.path).toLowerCase();
      });
      var o = function(t) {
       if (i.every(function(e) {
        return e !== t;
       })) {
        W.add(e.createCompilerDiagnostic(e.Diagnostics.File_0_is_not_in_project_file_list_Projects_must_list_all_files_or_use_an_include_pattern, t));
       }
      };
      for (var s = 0, c = a; s < c.length; s++) {
       var u = c[s];
       o(u);
      }
     }
     if (p.paths) {
      for (var l in p.paths) {
       if (!e.hasProperty(p.paths, l)) {
        continue;
       }
       if (!e.hasZeroOrOneAsteriskCharacter(l)) {
        qt(true, l, e.Diagnostics.Pattern_0_can_have_at_most_one_Asterisk_character, l);
       }
       if (e.isArray(p.paths[l])) {
        var f = p.paths[l].length;
        if (f === 0) {
         qt(false, l, e.Diagnostics.Substitutions_for_pattern_0_shouldn_t_be_an_empty_array, l);
        }
        for (var t = 0; t < f; t++) {
         var m = p.paths[l][t];
         var g = typeof m;
         if (g === "string") {
          if (!e.hasZeroOrOneAsteriskCharacter(m)) {
           jt(l, t, e.Diagnostics.Substitution_0_in_pattern_1_in_can_have_at_most_one_Asterisk_character, m, l);
          }
         } else {
          jt(l, t, e.Diagnostics.Substitution_0_for_pattern_1_has_incorrect_type_expected_string_got_2, m, l, g);
         }
        }
       } else {
        qt(false, l, e.Diagnostics.Substitutions_for_pattern_0_should_be_an_array, l);
       }
      }
     }
     if (!p.sourceMap && !p.inlineSourceMap) {
      if (p.inlineSources) {
       Kt(e.Diagnostics.Option_0_can_only_be_used_when_either_option_inlineSourceMap_or_option_sourceMap_is_provided, "inlineSources");
      }
      if (p.sourceRoot) {
       Kt(e.Diagnostics.Option_0_can_only_be_used_when_either_option_inlineSourceMap_or_option_sourceMap_is_provided, "sourceRoot");
      }
     }
     if (p.out && p.outFile) {
      Kt(e.Diagnostics.Option_0_cannot_be_specified_with_option_1, "out", "outFile");
     }
     if (p.mapRoot && !(p.sourceMap || p.declarationMap)) {
      Kt(e.Diagnostics.Option_0_cannot_be_specified_without_specifying_option_1_or_option_2, "mapRoot", "sourceMap", "declarationMap");
     }
     if (p.declarationDir) {
      if (!p.declaration) {
       Kt(e.Diagnostics.Option_0_cannot_be_specified_without_specifying_option_1, "declarationDir", "declaration");
      }
      if (p.out || p.outFile) {
       Kt(e.Diagnostics.Option_0_cannot_be_specified_with_option_1, "declarationDir", p.out ? "out" : "outFile");
      }
     }
     if (p.declarationMap && !e.getEmitDeclarations(p)) {
      Kt(e.Diagnostics.Option_0_cannot_be_specified_without_specifying_option_1, "declarationMap", "declaration");
     }
     if (p.lib && p.noLib) {
      Kt(e.Diagnostics.Option_0_cannot_be_specified_with_option_1, "lib", "noLib");
     }
     if (p.noImplicitUseStrict && e.getStrictOptionValue(p, "alwaysStrict")) {
      Kt(e.Diagnostics.Option_0_cannot_be_specified_with_option_1, "noImplicitUseStrict", "alwaysStrict");
     }
     var h = p.target || 0;
     var v = p.outFile || p.out;
     var y = e.forEach(b, function(t) {
      return e.isExternalModule(t) && !t.isDeclarationFile ? t : undefined;
     });
     if (p.isolatedModules) {
      if (p.module === e.ModuleKind.None && h < 2) {
       Kt(e.Diagnostics.Option_isolatedModules_can_only_be_used_when_either_option_module_is_provided_or_option_target_is_ES2015_or_higher, "isolatedModules", "target");
      }
      var x = e.forEach(b, function(t) {
       return !e.isExternalModule(t) && !t.isDeclarationFile ? t : undefined;
      });
      if (x) {
       var k = e.getErrorSpanForNode(x, x);
       W.add(e.createFileDiagnostic(x, k.start, k.length, e.Diagnostics.Cannot_compile_namespaces_when_the_isolatedModules_flag_is_provided));
      }
     } else if (y && h < 2 && p.module === e.ModuleKind.None) {
      var k = e.getErrorSpanForNode(y, y.externalModuleIndicator);
      W.add(e.createFileDiagnostic(y, k.start, k.length, e.Diagnostics.Cannot_use_imports_exports_or_module_augmentations_when_module_is_none));
     }
     if (v) {
      if (p.module && !(p.module === e.ModuleKind.AMD || p.module === e.ModuleKind.System)) {
       Kt(e.Diagnostics.Only_amd_and_system_modules_are_supported_alongside_0, p.out ? "out" : "outFile", "module");
      } else if (p.module === undefined && y) {
       var k = e.getErrorSpanForNode(y, y.externalModuleIndicator);
       W.add(e.createFileDiagnostic(y, k.start, k.length, e.Diagnostics.Cannot_compile_modules_using_option_0_unless_the_module_flag_is_amd_or_system, p.out ? "out" : "outFile"));
      }
     }
     if (p.resolveJsonModule) {
      if (e.getEmitModuleResolutionKind(p) !== e.ModuleResolutionKind.NodeJs) {
       Kt(e.Diagnostics.Option_resolveJsonModule_cannot_be_specified_without_node_module_resolution_strategy, "resolveJsonModule");
      } else if (e.getEmitModuleKind(p) !== e.ModuleKind.CommonJS) {
       Kt(e.Diagnostics.Option_resolveJsonModule_can_only_be_specified_when_module_code_generation_is_commonjs, "resolveJsonModule", "module");
      }
     }
     if (p.outDir || p.sourceRoot || p.mapRoot) {
      var S = Oe();
      if (p.outDir && S === "" && e.forEach(b, function(t) {
       return e.getRootLength(t.fileName) > 1;
      })) {
       Kt(e.Diagnostics.Cannot_find_the_common_subdirectory_path_for_the_input_files, "outDir");
      }
     }
     if (!p.noEmit && p.allowJs && p.declaration) {
      Kt(e.Diagnostics.Option_0_cannot_be_specified_with_option_1, "allowJs", "declaration");
     }
     if (p.checkJs && !p.allowJs) {
      W.add(e.createCompilerDiagnostic(e.Diagnostics.Option_0_cannot_be_specified_without_specifying_option_1, "checkJs", "allowJs"));
     }
     if (p.emitDeclarationOnly) {
      if (!p.declaration) {
       Kt(e.Diagnostics.Option_0_cannot_be_specified_without_specifying_option_1, "emitDeclarationOnly", "declaration");
      }
      if (p.noEmit) {
       Kt(e.Diagnostics.Option_0_cannot_be_specified_with_option_1, "emitDeclarationOnly", "noEmit");
      }
     }
     if (p.emitDecoratorMetadata && !p.experimentalDecorators) {
      Kt(e.Diagnostics.Option_0_cannot_be_specified_without_specifying_option_1, "emitDecoratorMetadata", "experimentalDecorators");
     }
     if (p.jsxFactory) {
      if (p.reactNamespace) {
       Kt(e.Diagnostics.Option_0_cannot_be_specified_with_option_1, "reactNamespace", "jsxFactory");
      }
      if (!e.parseIsolatedEntityName(p.jsxFactory, h)) {
       Vt("jsxFactory", e.Diagnostics.Invalid_value_for_jsxFactory_0_is_not_a_valid_identifier_or_qualified_name, p.jsxFactory);
      }
     } else if (p.reactNamespace && !e.isIdentifierText(p.reactNamespace, h)) {
      Vt("reactNamespace", e.Diagnostics.Invalid_value_for_reactNamespace_0_is_not_a_valid_identifier, p.reactNamespace);
     }
     if (!p.noEmit && !p.suppressOutputPathCheck) {
      var w = Be();
      var C = e.createMap();
      e.forEachEmittedFile(w, function(e) {
       if (!p.emitDeclarationOnly) {
        D(e.jsFilePath, C);
       }
       D(e.declarationFilePath, C);
      });
     }
     function D(t, n) {
      if (t) {
       var r = Ie(t);
       if (ce.has(r)) {
        var i;
        if (!p.configFilePath) {
         i = e.chainDiagnosticMessages(undefined, e.Diagnostics.Adding_a_tsconfig_json_file_will_help_organize_projects_that_contain_both_TypeScript_and_JavaScript_files_Learn_more_at_https_Colon_Slash_Slashaka_ms_Slashtsconfig);
        }
        i = e.chainDiagnosticMessages(i, e.Diagnostics.Cannot_write_file_0_because_it_would_overwrite_input_file, t);
        Yt(t, e.createCompilerDiagnosticFromMessageChain(i));
       }
       var a = !q.useCaseSensitiveFileNames() ? r.toLocaleLowerCase() : r;
       if (n.has(a)) {
        Yt(t, e.createCompilerDiagnostic(e.Diagnostics.Cannot_write_file_0_because_it_would_be_overwritten_by_multiple_input_files, t));
       } else {
        n.set(a, true);
       }
      }
     }
    }
    function jt(t, n, r, i, a, o) {
     var s = true;
     var c = Jt();
     for (var u = 0, l = c; u < l.length; u++) {
      var f = l[u];
      if (e.isObjectLiteralExpression(f.initializer)) {
       for (var d = 0, m = e.getPropertyAssignment(f.initializer, t); d < m.length; d++) {
        var _ = m[d];
        var g = _.initializer;
        if (e.isArrayLiteralExpression(g) && g.elements.length > n) {
         W.add(e.createDiagnosticForNodeInSourceFile(p.configFile, g.elements[n], r, i, a, o));
         s = false;
        }
       }
      }
     }
     if (s) {
      W.add(e.createCompilerDiagnostic(r, i, a, o));
     }
    }
    function qt(t, n, r, i) {
     var a = true;
     var o = Jt();
     for (var s = 0, c = o; s < c.length; s++) {
      var u = c[s];
      if (e.isObjectLiteralExpression(u.initializer) && Xt(u.initializer, t, n, undefined, r, i)) {
       a = false;
      }
     }
     if (a) {
      W.add(e.createCompilerDiagnostic(r, i));
     }
    }
    function Ut(t) {
     var n = $t();
     if (n) {
      return e.getPropertyAssignment(n, t);
     }
     return undefined;
    }
    function Jt() {
     return Ut("paths") || e.emptyArray;
    }
    function Kt(e, t, n, r) {
     Ht(true, t, n, e, t, n, r);
    }
    function Vt(e, t, n) {
     Ht(false, e, undefined, t, n);
    }
    function Wt(t, n, r, i) {
     var a = Gt();
     if (a) {
      if (Qt(a, t, n, r, i)) {
       return;
      }
     }
     W.add(e.createCompilerDiagnostic(n, r, i));
    }
    function Ht(t, n, r, i, a, o, s) {
     var c = $t();
     var u = !c || !Xt(c, t, n, r, i, a, o, s);
     if (u) {
      W.add(e.createCompilerDiagnostic(i, a, o, s));
     }
    }
    function Gt() {
     if (Y === undefined) {
      Y = null;
      if (p.configFile) {
       var t = e.getTsConfigObjectLiteralExpression(p.configFile);
       for (var n = 0, r = e.getPropertyAssignment(t, "references"); n < r.length; n++) {
        var i = r[n];
        if (e.isArrayLiteralExpression(i.initializer)) {
         Y = i.initializer;
         break;
        }
       }
      }
     }
     return Y;
    }
    function $t() {
     if (Q === undefined) {
      Q = null;
      var t = e.getTsConfigObjectLiteralExpression(p.configFile);
      if (t) {
       for (var n = 0, r = e.getPropertyAssignment(t, "compilerOptions"); n < r.length; n++) {
        var i = r[n];
        if (e.isObjectLiteralExpression(i.initializer)) {
         Q = i.initializer;
         break;
        }
       }
      }
     }
     return Q;
    }
    function Xt(t, n, r, i, a, o, s, c) {
     var u = e.getPropertyAssignment(t, r, i);
     for (var l = 0, f = u; l < f.length; l++) {
      var d = f[l];
      W.add(e.createDiagnosticForNodeInSourceFile(p.configFile, n ? d.name : d.initializer, a, o, s, c));
     }
     return !!u.length;
    }
    function Qt(t, n, r, i, a, o) {
     if (t.elements.length <= n) {
      return false;
     }
     W.add(e.createDiagnosticForNodeInSourceFile(p.configFile, t.elements[n], r, i, a, o));
     return false;
    }
    function Yt(e, t) {
     X.set(Ie(e), true);
     W.add(t);
    }
    function Zt(t) {
     if (p.noEmit) {
      return false;
     }
     var n = Ie(t);
     if (Xe(n)) {
      return false;
     }
     var r = p.outFile || p.out;
     if (r) {
      return en(n, r) || en(n, e.removeFileExtension(r) + ".d.ts");
     }
     if (p.declarationDir && e.containsPath(p.declarationDir, n, H, !q.useCaseSensitiveFileNames())) {
      return true;
     }
     if (p.outDir) {
      return e.containsPath(p.outDir, n, H, !q.useCaseSensitiveFileNames());
     }
     if (e.fileExtensionIsOneOf(n, e.supportedJavascriptExtensions) || e.fileExtensionIs(n, ".d.ts")) {
      var i = e.removeFileExtension(n);
      return !!Xe(i + ".ts") || !!Xe(i + ".tsx");
     }
     return false;
    }
    function en(t, n) {
     return e.comparePaths(t, n, H, !q.useCaseSensitiveFileNames()) === 0;
    }
   }
   e.createProgram = N;
   function A(e) {
    return {
     fileExists: function(t) {
      return e.fileExists(t);
     },
     readDirectory: function(t, n, r, i) {
      return e.readDirectory ? e.readDirectory(t, n, r, i) : [];
     },
     readFile: function(t) {
      return e.readFile(t);
     },
     useCaseSensitiveFileNames: e.useCaseSensitiveFileNames(),
     getCurrentDirectory: function() {
      return e.getCurrentDirectory();
     },
     onUnRecoverableConfigFileDiagnostic: function() {
      return undefined;
     }
    };
   }
   e.parseConfigHostFromCompilerHost = A;
   function F(t, n) {
    if (!t.fileExists(n.path)) {
     return e.combinePaths(n.path, "tsconfig.json");
    }
    return n.path;
   }
   e.resolveProjectReferencePath = F;
   function P(t, n) {
    var r = n.extension;
    switch (r) {
    case ".ts":
    case ".d.ts":
    case ".json":
     return undefined;

    case ".tsx":
     return i();

    case ".jsx":
     return i() || a();

    case ".js":
     return a();
    }
    function i() {
     return t.jsx ? undefined : e.Diagnostics.Module_0_was_resolved_to_1_but_jsx_is_not_set;
    }
    function a() {
     return t.allowJs || !e.getStrictOptionValue(t, "noImplicitAny") ? undefined : e.Diagnostics.Could_not_find_a_declaration_file_for_module_0_1_implicitly_has_an_any_type;
    }
   }
   e.getResolutionDiagnostic = P;
   function I(e) {
    var t = e.imports, n = e.moduleAugmentations;
    var r = t.map(function(e) {
     return e.text;
    });
    for (var i = 0, a = n; i < a.length; i++) {
     var o = a[i];
     if (o.kind === 9) {
      r.push(o.text);
     }
    }
    return r;
   }
  })(s || (s = {}));
  var s;
  (function(e) {
   function t(e, t, n, r, i) {
    var a = [];
    var o = e.emit(t, s, r, n, i);
    return {
     outputFiles: a,
     emitSkipped: o.emitSkipped
    };
    function s(e, t, n) {
     a.push({
      name: e,
      writeByteOrderMark: n,
      text: t
     });
    }
   }
   e.getFileEmitOutput = t;
  })(s || (s = {}));
  (function(e) {
   var t;
   (function(t) {
    function n(t, n, r) {
     var i;
     if (n.imports && n.imports.length > 0) {
      var a = t.getTypeChecker();
      for (var o = 0, s = n.imports; o < s.length; o++) {
       var c = s[o];
       var u = a.getSymbolAtLocation(c);
       if (u && u.declarations && u.declarations[0]) {
        var l = e.getSourceFileOfNode(u.declarations[0]);
        if (l) {
         g(l.path);
        }
       }
      }
     }
     var f = e.getDirectoryPath(n.path);
     if (n.referencedFiles && n.referencedFiles.length > 0) {
      for (var d = 0, p = n.referencedFiles; d < p.length; d++) {
       var m = p[d];
       var _ = e.toPath(m.fileName, f, r);
       g(_);
      }
     }
     if (n.resolvedTypeReferenceDirectiveNames) {
      n.resolvedTypeReferenceDirectiveNames.forEach(function(t) {
       if (!t) {
        return;
       }
       var n = t.resolvedFileName;
       var i = e.toPath(n, f, r);
       g(i);
      });
     }
     return i;
     function g(t) {
      if (!i) {
       i = e.createMap();
      }
      i.set(t, true);
     }
    }
    function r(e, t) {
     return t && !t.referencedMap === !e;
    }
    t.canReuseOldState = r;
    function i(t, i, a) {
     var o = e.createMap();
     var s = t.getCompilerOptions().module !== e.ModuleKind.None ? e.createMap() : undefined;
     var c = e.createMap();
     var u = r(s, a);
     for (var l = 0, f = t.getSourceFiles(); l < f.length; l++) {
      var d = f[l];
      var p = d.version;
      var m = u ? a.fileInfos.get(d.path) : undefined;
      if (s) {
       var _ = n(t, d, i);
       if (_) {
        s.set(d.path, _);
       }
      }
      o.set(d.path, {
       version: p,
       signature: m && m.signature
      });
     }
     return {
      fileInfos: o,
      referencedMap: s,
      hasCalledUpdateShapeSignature: c,
      allFilesExcludingDefaultLibraryFile: undefined,
      allFileNames: undefined
     };
    }
    t.create = i;
    function a(t, n, r, i, a, c) {
     var u = c || e.createMap();
     var l = n.getSourceFileByPath(r);
     if (!l) {
      return e.emptyArray;
     }
     if (!s(t, n, l, u, i, a)) {
      return [ l ];
     }
     var f = (t.referencedMap ? m : p)(t, n, l, u, i, a);
     if (!c) {
      o(t, u);
     }
     return f;
    }
    t.getFilesAffectedBy = a;
    function o(e, t) {
     t.forEach(function(t, n) {
      e.fileInfos.get(n).signature = t;
      e.hasCalledUpdateShapeSignature.set(n, true);
     });
    }
    t.updateSignaturesFromCache = o;
    function s(t, n, r, i, a, o) {
     e.Debug.assert(!!r);
     if (t.hasCalledUpdateShapeSignature.has(r.path) || i.has(r.path)) {
      return false;
     }
     var s = t.fileInfos.get(r.path);
     if (!s) return e.Debug.fail();
     var c = s.signature;
     var u;
     if (r.isDeclarationFile) {
      u = r.version;
     } else {
      var l = e.getFileEmitOutput(n, r, true, a);
      if (l.outputFiles && l.outputFiles.length > 0) {
       u = o(l.outputFiles[0].text);
      } else {
       u = c;
      }
     }
     i.set(r.path, u);
     return !c || u !== c;
    }
    function c(t, n, r) {
     var i;
     var a = n.getCompilerOptions();
     if (a.outFile || a.out) {
      return u(t, n);
     }
     if (!t.referencedMap || !e.isExternalModule(r) && !f(r)) {
      return u(t, n);
     }
     var o = e.createMap();
     var s = [ r.path ];
     while (s.length) {
      var c = s.pop();
      if (!o.has(c)) {
       o.set(c, true);
       var l = t.referencedMap.get(c);
       if (l) {
        var d = l.keys();
        for (var p = d.next(), m = p.value, _ = p.done; !_; i = d.next(), m = i.value, _ = i.done, 
        i) {
         s.push(m);
        }
       }
      }
     }
     return e.arrayFrom(e.mapDefinedIterator(o.keys(), function(e) {
      var t = n.getSourceFileByPath(e);
      return t ? t.fileName : e;
     }));
    }
    t.getAllDependencies = c;
    function u(t, n) {
     if (!t.allFileNames) {
      var r = n.getSourceFiles();
      t.allFileNames = r === e.emptyArray ? e.emptyArray : r.map(function(e) {
       return e.fileName;
      });
     }
     return t.allFileNames;
    }
    function l(t, n) {
     return e.arrayFrom(e.mapDefinedIterator(t.referencedMap.entries(), function(e) {
      var t = e[0], r = e[1];
      return r.has(n) ? t : undefined;
     }));
    }
    function f(t) {
     for (var n = 0, r = t.statements; n < r.length; n++) {
      var i = r[n];
      if (!e.isModuleWithStringLiteralName(i)) {
       return false;
      }
     }
     return true;
    }
    function d(t, n, r) {
     if (t.allFilesExcludingDefaultLibraryFile) {
      return t.allFilesExcludingDefaultLibraryFile;
     }
     var i;
     c(r);
     for (var a = 0, o = n.getSourceFiles(); a < o.length; a++) {
      var s = o[a];
      if (s !== r) {
       c(s);
      }
     }
     t.allFilesExcludingDefaultLibraryFile = i || e.emptyArray;
     return t.allFilesExcludingDefaultLibraryFile;
     function c(e) {
      if (!n.isSourceFileDefaultLibrary(e)) {
       (i || (i = [])).push(e);
      }
     }
    }
    function p(e, t, n) {
     var r = t.getCompilerOptions();
     if (r && (r.out || r.outFile)) {
      return [ n ];
     }
     return d(e, t, n);
    }
    function m(t, n, r, i, a, o) {
     if (!e.isExternalModule(r) && !f(r)) {
      return d(t, n, r);
     }
     var c = n.getCompilerOptions();
     if (c && (c.isolatedModules || c.out || c.outFile)) {
      return [ r ];
     }
     var u = e.createMap();
     u.set(r.path, r);
     var p = l(t, r.path);
     while (p.length > 0) {
      var m = p.pop();
      if (!u.has(m)) {
       var _ = n.getSourceFileByPath(m);
       u.set(m, _);
       if (_ && s(t, n, _, i, a, o)) {
        p.push.apply(p, l(t, m));
       }
      }
     }
     return e.arrayFrom(e.mapDefinedIterator(u.values(), function(e) {
      return e;
     }));
    }
   })(t = e.BuilderState || (e.BuilderState = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   function t(t, n) {
    return t === n || t !== undefined && n !== undefined && t.size === n.size && !e.forEachKey(t, function(e) {
     return !n.has(e);
    });
   }
   function n(n, r, i) {
    var a = e.BuilderState.create(n, r, i);
    a.program = n;
    var o = n.getCompilerOptions();
    if (!o.outFile && !o.out) {
     a.semanticDiagnosticsPerFile = e.createMap();
    }
    a.changedFilesSet = e.createMap();
    var s = e.BuilderState.canReuseOldState(a.referencedMap, i);
    var c = s && i.semanticDiagnosticsPerFile && !!a.semanticDiagnosticsPerFile;
    if (s) {
     if (!i.currentChangedFilePath) {
      e.Debug.assert(!i.affectedFiles && (!i.currentAffectedFilesSignatures || !i.currentAffectedFilesSignatures.size), "Cannot reuse if only few affected files of currentChangedFile were iterated");
     }
     if (c) {
      e.Debug.assert(!e.forEachKey(i.changedFilesSet, function(e) {
       return i.semanticDiagnosticsPerFile.has(e);
      }), "Semantic diagnostics shouldnt be available for changed files");
     }
     e.copyEntries(i.changedFilesSet, a.changedFilesSet);
    }
    var u = a.referencedMap;
    var l = s ? i.referencedMap : undefined;
    a.fileInfos.forEach(function(n, r) {
     var o;
     var f;
     if (!s || !(o = i.fileInfos.get(r)) || o.version !== n.version || !t(f = u && u.get(r), l && l.get(r)) || f && e.forEachKey(f, function(e) {
      return !a.fileInfos.has(e) && i.fileInfos.has(e);
     })) {
      a.changedFilesSet.set(r, true);
     } else if (c) {
      var d = i.semanticDiagnosticsPerFile.get(r);
      if (d) {
       a.semanticDiagnosticsPerFile.set(r, d);
      }
     }
    });
    return a;
   }
   function r(t, n) {
    e.Debug.assert(!n || !t.affectedFiles || t.affectedFiles[t.affectedFilesIndex - 1] !== n || !t.semanticDiagnosticsPerFile.has(n.path));
   }
   function i(t, n, r) {
    while (true) {
     var i = t.affectedFiles;
     if (i) {
      var a = t.seenAffectedFiles, o = t.semanticDiagnosticsPerFile;
      var s = t.affectedFilesIndex;
      while (s < i.length) {
       var c = i[s];
       if (!a.has(c.path)) {
        t.affectedFilesIndex = s;
        o.delete(c.path);
        return c;
       }
       a.set(c.path, true);
       s++;
      }
      t.changedFilesSet.delete(t.currentChangedFilePath);
      t.currentChangedFilePath = undefined;
      e.BuilderState.updateSignaturesFromCache(t, t.currentAffectedFilesSignatures);
      t.currentAffectedFilesSignatures.clear();
      t.affectedFiles = undefined;
     }
     var u = t.changedFilesSet.keys().next();
     if (u.done) {
      return undefined;
     }
     var l = t.program.getCompilerOptions();
     if (l.outFile || l.out) {
      e.Debug.assert(!t.semanticDiagnosticsPerFile);
      return t.program;
     }
     t.currentAffectedFilesSignatures = t.currentAffectedFilesSignatures || e.createMap();
     t.affectedFiles = e.BuilderState.getFilesAffectedBy(t, t.program, u.value, n, r, t.currentAffectedFilesSignatures);
     t.currentChangedFilePath = u.value;
     t.semanticDiagnosticsPerFile.delete(u.value);
     t.affectedFilesIndex = 0;
     t.seenAffectedFiles = t.seenAffectedFiles || e.createMap();
    }
   }
   function a(e, t) {
    if (t === e.program) {
     e.changedFilesSet.clear();
    } else {
     e.seenAffectedFiles.set(t.path, true);
     e.affectedFilesIndex++;
    }
   }
   function o(e, t, n) {
    a(e, n);
    return {
     result: t,
     affected: n
    };
   }
   function s(e, t, n) {
    var r = t.path;
    var i = e.semanticDiagnosticsPerFile.get(r);
    if (i) {
     return i;
    }
    var a = e.program.getSemanticDiagnostics(t, n);
    e.semanticDiagnosticsPerFile.set(r, a);
    return a;
   }
   var c;
   (function(e) {
    e[e["SemanticDiagnosticsBuilderProgram"] = 0] = "SemanticDiagnosticsBuilderProgram";
    e[e["EmitAndSemanticDiagnosticsBuilderProgram"] = 1] = "EmitAndSemanticDiagnosticsBuilderProgram";
   })(c = e.BuilderProgramKind || (e.BuilderProgramKind = {}));
   function u(t, n, r, i, a) {
    var o;
    var s;
    var c;
    if (t === undefined) {
     e.Debug.assert(n === undefined);
     o = r;
     c = i;
     e.Debug.assert(!!c);
     s = c.getProgram();
    } else if (e.isArray(t)) {
     c = i;
     s = e.createProgram(t, n, r, c && c.getProgram(), a);
     o = r;
    } else {
     s = t;
     o = n;
     c = r;
     a = i;
    }
    return {
     host: o,
     newProgram: s,
     oldProgram: c,
     configFileParsingDiagnostics: a || e.emptyArray
    };
   }
   e.getBuilderCreationParameters = u;
   function l(t, u) {
    var l = u.newProgram, f = u.host, d = u.oldProgram, p = u.configFileParsingDiagnostics;
    var m = d && d.getState();
    if (m && l === m.program && p === l.getConfigFileParsingDiagnostics()) {
     l = undefined;
     m = undefined;
     return d;
    }
    var _ = e.createGetCanonicalFileName(f.useCaseSensitiveFileNames());
    var g = f.createHash || e.identity;
    var h = n(l, _, m);
    l = undefined;
    d = undefined;
    m = undefined;
    var v = {
     getState: function() {
      return h;
     },
     getProgram: function() {
      return h.program;
     },
     getCompilerOptions: function() {
      return h.program.getCompilerOptions();
     },
     getSourceFile: function(e) {
      return h.program.getSourceFile(e);
     },
     getSourceFiles: function() {
      return h.program.getSourceFiles();
     },
     getOptionsDiagnostics: function(e) {
      return h.program.getOptionsDiagnostics(e);
     },
     getGlobalDiagnostics: function(e) {
      return h.program.getGlobalDiagnostics(e);
     },
     getConfigFileParsingDiagnostics: function() {
      return p || h.program.getConfigFileParsingDiagnostics();
     },
     getSyntacticDiagnostics: function(e, t) {
      return h.program.getSyntacticDiagnostics(e, t);
     },
     getSemanticDiagnostics: k,
     emit: b,
     getAllDependencies: function(t) {
      return e.BuilderState.getAllDependencies(h, h.program, t);
     },
     getCurrentDirectory: function() {
      return h.program.getCurrentDirectory();
     }
    };
    if (t === c.SemanticDiagnosticsBuilderProgram) {
     v.getSemanticDiagnosticsOfNextAffectedFile = x;
    } else if (t === c.EmitAndSemanticDiagnosticsBuilderProgram) {
     v.emitNextAffectedFile = y;
    } else {
     e.notImplemented();
    }
    return v;
    function y(e, t, n, r) {
     var a = i(h, t, g);
     if (!a) {
      return undefined;
     }
     return o(h, h.program.emit(a === h.program ? undefined : a, e || f.writeFile, t, n, r), a);
    }
    function b(n, i, a, o, s) {
     if (t === c.EmitAndSemanticDiagnosticsBuilderProgram) {
      r(h, n);
      if (!n) {
       var u = [];
       var l = false;
       var d = void 0;
       var p = [];
       var m = void 0;
       while (m = y(i, a, o, s)) {
        l = l || m.result.emitSkipped;
        d = e.addRange(d, m.result.diagnostics);
        p = e.addRange(p, m.result.emittedFiles);
        u = e.addRange(u, m.result.sourceMaps);
       }
       return {
        emitSkipped: l,
        diagnostics: d || e.emptyArray,
        emittedFiles: p,
        sourceMaps: u
       };
      }
     }
     return h.program.emit(n, i || f.writeFile, a, o, s);
    }
    function x(e, t) {
     while (true) {
      var n = i(h, e, g);
      if (!n) {
       return undefined;
      } else if (n === h.program) {
       return o(h, h.program.getSemanticDiagnostics(undefined, e), n);
      }
      if (t && t(n)) {
       a(h, n);
       continue;
      }
      return o(h, s(h, n, e), n);
     }
    }
    function k(n, o) {
     r(h, n);
     var u = h.program.getCompilerOptions();
     if (u.outFile || u.out) {
      e.Debug.assert(!h.semanticDiagnosticsPerFile);
      return h.program.getSemanticDiagnostics(n, o);
     }
     if (n) {
      return s(h, n, o);
     }
     if (t === c.SemanticDiagnosticsBuilderProgram) {
      var l = void 0;
      while (l = i(h, o, g)) {
       a(h, l);
      }
     }
     var f;
     for (var d = 0, p = h.program.getSourceFiles(); d < p.length; d++) {
      var m = p[d];
      f = e.addRange(f, s(h, m, o));
     }
     return f || e.emptyArray;
    }
   }
   e.createBuilderProgram = l;
  })(s || (s = {}));
  (function(e) {
   function t(t, n, r, i, a) {
    return e.createBuilderProgram(e.BuilderProgramKind.SemanticDiagnosticsBuilderProgram, e.getBuilderCreationParameters(t, n, r, i, a));
   }
   e.createSemanticDiagnosticsBuilderProgram = t;
   function n(t, n, r, i, a) {
    return e.createBuilderProgram(e.BuilderProgramKind.EmitAndSemanticDiagnosticsBuilderProgram, e.getBuilderCreationParameters(t, n, r, i, a));
   }
   e.createEmitAndSemanticDiagnosticsBuilderProgram = n;
   function r(t, n, r, i, a) {
    var o = e.getBuilderCreationParameters(t, n, r, i, a).newProgram;
    return {
     getProgram: function() {
      return o;
     },
     getState: e.notImplemented,
     getCompilerOptions: e.notImplemented,
     getSourceFile: e.notImplemented,
     getSourceFiles: e.notImplemented,
     getOptionsDiagnostics: e.notImplemented,
     getGlobalDiagnostics: e.notImplemented,
     getConfigFileParsingDiagnostics: e.notImplemented,
     getSyntacticDiagnostics: e.notImplemented,
     getSemanticDiagnostics: e.notImplemented,
     emit: e.notImplemented,
     getAllDependencies: e.notImplemented,
     getCurrentDirectory: e.notImplemented
    };
   }
   e.createAbstractBuilder = r;
  })(s || (s = {}));
  var s;
  (function(e) {
   e.maxNumberOfFilesToIterateForInvalidation = 256;
   function t(t, n, r) {
    var i;
    var a;
    var o;
    var s = false;
    var c = e.createMultiMap();
    var u = e.memoize(function() {
     return t.getCurrentDirectory();
    });
    var l = t.getCachedDirectoryStructureHost();
    var f = e.createMap();
    var d = e.createMap();
    var p = e.createMap();
    var m = e.createModuleResolutionCacheWithMaps(d, p, u(), t.getCanonicalFileName);
    var _ = e.createMap();
    var g = e.createMap();
    var h = [ ".ts", ".tsx", ".js", ".jsx", ".json" ];
    var v = e.createMap();
    var y = e.createMap();
    var b = n && e.removeTrailingDirectorySeparator(e.getNormalizedAbsolutePath(n, u()));
    var x = b && t.toPath(b);
    var k = e.createMap();
    return {
     startRecordingFilesWithChangedResolutions: T,
     finishRecordingFilesWithChangedResolutions: E,
     startCachingPerDirectoryResolution: F,
     finishCachingPerDirectoryResolution: P,
     resolveModuleNames: L,
     getResolvedModuleWithFailedLookupLocationsFromCache: R,
     resolveTypeReferenceDirectives: M,
     removeResolutionsOfFile: ee,
     invalidateResolutionOfFile: ie,
     setFilesWithInvalidatedNonRelativeUnresolvedImports: ae,
     createHasInvalidatedResolution: A,
     updateTypeRootsWatch: le,
     closeTypeRootsWatch: se,
     clear: D
    };
    function S(e) {
     return e.resolvedModule;
    }
    function w(e) {
     return e.resolvedTypeReferenceDirective;
    }
    function C(t, n) {
     if (t === undefined || n.length <= t.length) {
      return false;
     }
     return e.startsWith(n, t) && n[t.length] === e.directorySeparator;
    }
    function D() {
     e.clearMap(y, e.closeFileWatcherOf);
     v.clear();
     c.clear();
     se();
     f.clear();
     _.clear();
     s = false;
     F();
    }
    function T() {
     i = [];
    }
    function E() {
     var e = i;
     i = undefined;
     return e;
    }
    function N(e) {
     if (!o) {
      return false;
     }
     var t = o.get(e);
     return !!t && !!t.length;
    }
    function A(t) {
     if (s || t) {
      a = undefined;
      return e.returnTrue;
     }
     var n = a;
     a = undefined;
     return function(e) {
      return !!n && n.has(e) || N(e);
     };
    }
    function F() {
     d.clear();
     p.clear();
     g.clear();
     c.forEach(G);
     c.clear();
    }
    function P() {
     s = false;
     o = undefined;
     F();
     y.forEach(function(e, t) {
      if (e.refCount === 0) {
       y.delete(t);
       e.watcher.close();
      }
     });
    }
    function I(n, r, i, a) {
     var o = e.resolveModuleName(n, r, i, a, m);
     if (!t.getGlobalCache) {
      return o;
     }
     var s = t.getGlobalCache();
     if (s !== undefined && !e.isExternalModuleNameRelative(n) && !(o.resolvedModule && e.extensionIsTypeScript(o.resolvedModule.extension))) {
      var c = e.loadModuleFromGlobalCache(n, t.projectName, i, a, s), u = c.resolvedModule, l = c.failedLookupLocations;
      if (u) {
       return {
        resolvedModule: u,
        failedLookupLocations: e.addRange(o.failedLookupLocations, l)
       };
      }
     }
     return o;
    }
    function O(n, r, a, o, c, u, l, f) {
     var d = t.toPath(r);
     var p = a.get(d) || a.set(d, e.createMap()).get(d);
     var m = e.getDirectoryPath(d);
     var _ = o.get(m);
     if (!_) {
      _ = e.createMap();
      o.set(m, _);
     }
     var g = [];
     var h = t.getCompilationSettings();
     var v = f && N(d);
     var y = e.createMap();
     for (var b = 0, x = n; b < x.length; b++) {
      var k = x[b];
      var S = p.get(k);
      if (!y.has(k) && s || !S || S.isInvalidated || v && !e.isExternalModuleNameRelative(k) && !u(S)) {
       var w = S;
       var C = _.get(k);
       if (C) {
        S = C;
       } else {
        S = c(k, r, h, t);
        _.set(k, S);
       }
       p.set(k, S);
       V(k, S);
       if (w) {
        X(w);
       }
       if (f && i && !D(w, S)) {
        i.push(d);
        f = false;
       }
      }
      e.Debug.assert(S !== undefined && !S.isInvalidated);
      y.set(k, true);
      g.push(u(S));
     }
     p.forEach(function(t, n) {
      if (!y.has(n) && !e.contains(l, n)) {
       X(t);
       p.delete(n);
      }
     });
     return g;
     function D(e, t) {
      if (e === t) {
       return true;
      }
      if (!e || !t) {
       return false;
      }
      var n = u(e);
      var r = u(t);
      if (n === r) {
       return true;
      }
      if (!n || !r) {
       return false;
      }
      return n.resolvedFileName === r.resolvedFileName;
     }
    }
    function M(t, n) {
     return O(t, n, _, g, e.resolveTypeReferenceDirective, w, undefined, false);
    }
    function L(e, t, n) {
     return O(e, t, f, d, I, S, n, r);
    }
    function R(e, n) {
     var r = f.get(t.toPath(n));
     return r && r.get(e);
    }
    function B(t) {
     return e.endsWith(t, "/node_modules");
    }
    function z(t) {
     return e.endsWith(t, "/node_modules/@types");
    }
    function j(t) {
     var n = e.getRootLength(t);
     if (t.length === n) {
      return false;
     }
     var r = t.indexOf(e.directorySeparator, n);
     if (r === -1) {
      return false;
     }
     if (t.charCodeAt(0) !== 47 && t.substr(n, r).search(/users/i) === -1) {
      return true;
     }
     for (var i = r + 1, a = 2; a > 0; a--) {
      i = t.indexOf(e.directorySeparator, i) + 1;
      if (i === 0) {
       return false;
      }
     }
     return true;
    }
    function q(e, t) {
     if (!j(t)) {
      e.ignore = true;
     }
     return e;
    }
    function U(t, n) {
     if (C(x, n)) {
      return {
       dir: b,
       dirPath: x
      };
     }
     return J(e.getDirectoryPath(e.getNormalizedAbsolutePath(t, u())), e.getDirectoryPath(n));
    }
    function J(t, n) {
     while (e.stringContains(n, "/node_modules/")) {
      t = e.getDirectoryPath(t);
      n = e.getDirectoryPath(n);
     }
     if (B(n)) {
      return q({
       dir: t,
       dirPath: n
      }, e.getDirectoryPath(n));
     }
     var r = true;
     var i, a;
     if (x !== undefined) {
      while (!C(n, x)) {
       var o = e.getDirectoryPath(n);
       if (o === n) {
        break;
       }
       r = false;
       i = n;
       a = t;
       n = o;
       t = e.getDirectoryPath(t);
      }
     }
     return q({
      dir: a || t,
      dirPath: i || n,
      nonRecursive: r
     }, n);
    }
    function K(t) {
     return e.fileExtensionIsOneOf(t, h);
    }
    function V(t, n) {
     if (n.failedLookupLocations && n.failedLookupLocations.length) {
      if (n.refCount) {
       n.refCount++;
      } else {
       n.refCount = 1;
       if (e.isExternalModuleNameRelative(t)) {
        W(n);
       } else {
        c.add(t, n);
       }
      }
     }
    }
    function W(n) {
     e.Debug.assert(!!n.refCount);
     var r = n.failedLookupLocations;
     var i = false;
     for (var a = 0, o = r; a < o.length; a++) {
      var s = o[a];
      var c = t.toPath(s);
      var u = U(s, c), l = u.dir, f = u.dirPath, d = u.nonRecursive, p = u.ignore;
      if (!p) {
       if (!K(c)) {
        var m = v.get(c) || 0;
        v.set(c, m + 1);
       }
       if (f === x) {
        i = true;
       } else {
        $(l, f, d);
       }
      }
     }
     if (i) {
      $(b, x);
     }
    }
    function H(e) {
     e.refCount = undefined;
    }
    function G(e, n) {
     var r = t.getCurrentProgram().getTypeChecker().tryFindAmbientModuleWithoutAugmentations(n) ? H : W;
     e.forEach(r);
    }
    function $(t, n, r) {
     var i = y.get(n);
     if (i) {
      e.Debug.assert(!!r === !!i.nonRecursive);
      i.refCount++;
     } else {
      y.set(n, {
       watcher: Y(t, n, r),
       refCount: 1,
       nonRecursive: r
      });
     }
    }
    function X(n) {
     if (!n.refCount) {
      return;
     }
     n.refCount--;
     if (n.refCount) {
      return;
     }
     var r = n.failedLookupLocations;
     var i = false;
     for (var a = 0, o = r; a < o.length; a++) {
      var s = o[a];
      var c = t.toPath(s);
      var u = U(s, c), l = u.dirPath, f = u.ignore;
      if (!f) {
       var d = v.get(c);
       if (d) {
        if (d === 1) {
         v.delete(c);
        } else {
         e.Debug.assert(d > 1);
         v.set(c, d - 1);
        }
       }
       if (l === x) {
        i = true;
       } else {
        Q(l);
       }
      }
     }
     if (i) {
      Q(x);
     }
    }
    function Q(e) {
     var t = y.get(e);
     t.refCount--;
    }
    function Y(e, n, r) {
     return t.watchDirectoryOfFailedLookupLocation(e, function(e) {
      var r = t.toPath(e);
      if (l) {
       l.addOrDeleteFileOrDirectory(e, r);
      }
      if (!s && oe(r, n === r)) {
       t.onInvalidatedResolution();
      }
     }, r ? 0 : 1);
    }
    function Z(e, t) {
     var n = e.get(t);
     if (n) {
      n.forEach(X);
      e.delete(t);
     }
    }
    function ee(e) {
     Z(f, e);
     Z(_, e);
    }
    function te(t, n, r) {
     var i = e.createMap();
     t.forEach(function(t, o) {
      var s = e.getDirectoryPath(o);
      var c = i.get(s);
      if (!c) {
       c = e.createMap();
       i.set(s, c);
      }
      t.forEach(function(t, i) {
       if (c.has(i)) {
        return;
       }
       c.set(i, true);
       if (!t.isInvalidated && n(t, r)) {
        t.isInvalidated = true;
        (a || (a = e.createMap())).set(o, true);
       }
      });
     });
    }
    function ne() {
     var n = t.maxNumberOfFilesToIterateForInvalidation || e.maxNumberOfFilesToIterateForInvalidation;
     return f.size > n || _.size > n;
    }
    function re(e) {
     if (ne()) {
      s = true;
      return;
     }
     te(f, e, S);
     te(_, e, w);
    }
    function ie(e) {
     ee(e);
     re(function(n, r) {
      var i = r(n);
      return !!i && t.toPath(i.resolvedFileName) === e;
     });
    }
    function ae(t) {
     e.Debug.assert(o === t || o === undefined);
     o = t;
    }
    function oe(n, r) {
     var i;
     if (r) {
      i = function(e) {
       return C(n, t.toPath(e));
      };
     } else {
      var o = e.getDirectoryPath(n);
      if (z(n) || B(n) || z(o) || B(o)) {
       i = function(r) {
        var i = t.toPath(r);
        return i === n || e.startsWith(t.toPath(r), n);
       };
      } else {
       if (!K(n) && !v.has(n)) {
        return false;
       }
       if (e.isEmittedFileOfProgram(t.getCurrentProgram(), n)) {
        return false;
       }
       i = function(e) {
        return t.toPath(e) === n;
       };
      }
     }
     var c = function(t) {
      return e.some(t.failedLookupLocations, i);
     };
     var u = a && a.size;
     re(c);
     return s || a && a.size !== u;
    }
    function se() {
     e.clearMap(k, e.closeFileWatcher);
    }
    function ce(e, t) {
     if (s) {
      return undefined;
     }
     if (C(x, t)) {
      return x;
     }
     var n = J(e, t), r = n.dirPath, i = n.ignore;
     return !i && y.has(r) ? r : undefined;
    }
    function ue(e, n) {
     return t.watchTypeRootsDirectory(n, function(r) {
      var i = t.toPath(r);
      if (l) {
       l.addOrDeleteFileOrDirectory(r, i);
      }
      t.onChangedAutomaticTypeDirectiveNames();
      var a = ce(n, e);
      if (a && oe(i, a === i)) {
       t.onInvalidatedResolution();
      }
     }, 1);
    }
    function le() {
     var n = t.getCompilationSettings();
     if (n.types) {
      se();
      return;
     }
     var r = e.getEffectiveTypeRoots(n, {
      directoryExists: fe,
      getCurrentDirectory: u
     });
     if (r) {
      e.mutateMap(k, e.arrayToMap(r, function(e) {
       return t.toPath(e);
      }), {
       createNewValue: ue,
       onDeleteValue: e.closeFileWatcher
      });
     } else {
      se();
     }
    }
    function fe(n) {
     var r = e.getDirectoryPath(e.getDirectoryPath(n));
     var i = t.toPath(r);
     return i === x || j(i);
    }
   }
   e.createResolutionCache = t;
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    function n(t, n, r, s, c, u, f) {
     if (f === void 0) {
      f = {};
     }
     var d = i(t, n, r, c);
     var p = l(u, s, d.getCanonicalFileName, c);
     return e.firstDefined(p, function(e) {
      return a(e, d, c, t);
     }) || e.first(o(s, d, t, f));
    }
    t.getModuleSpecifier = n;
    function r(t, n, r, s, c, u) {
     var f = d(t);
     if (f) return [ [ f ] ];
     var p = i(n, r, r.path, s);
     if (!c) {
      return e.Debug.fail("Files list must be present to resolve symlinks in specifier resolution");
     }
     var m = l(c, e.getSourceFileOfNode(t.valueDeclaration).fileName, p.getCanonicalFileName, s);
     var _ = e.mapDefined(m, function(e) {
      return a(e, p, s, n);
     });
     return _.length ? _.map(function(e) {
      return [ e ];
     }) : m.map(function(e) {
      return o(e, p, n, u);
     });
    }
    t.getModuleSpecifiers = r;
    function i(t, n, r, i) {
     var a = e.getEmitModuleResolutionKind(t);
     var o = s(n);
     var c = e.createGetCanonicalFileName(i.useCaseSensitiveFileNames ? i.useCaseSensitiveFileNames() : true);
     var u = e.getDirectoryPath(r);
     return {
      moduleResolutionKind: a,
      addJsExtension: o,
      getCanonicalFileName: c,
      sourceDirectory: u
     };
    }
    function a(e, t, n, r) {
     var i = t.addJsExtension, a = t.getCanonicalFileName, o = t.sourceDirectory;
     return _(r, n, a, e, i) || g(r, e, n, a, o);
    }
    function o(t, n, r, i) {
     var a = n.moduleResolutionKind, o = n.addJsExtension, s = n.getCanonicalFileName, c = n.sourceDirectory;
     var u = r.baseUrl, l = r.paths, d = r.rootDirs;
     var _ = d && m(d, t, c, s) || b(e.ensurePathIsNonModuleName(e.getRelativePathFromDirectory(c, t, s)), a, o);
     if (!u || i.importModuleSpecifierPreference === "relative") {
      return [ _ ];
     }
     var g = x(t, u, s);
     if (!g) {
      return [ _ ];
     }
     var h = b(g, a, o);
     if (l) {
      var v = p(e.removeFileExtension(g), h, l);
      if (v) {
       return [ v ];
      }
     }
     if (i.importModuleSpecifierPreference === "non-relative") {
      return [ h ];
     }
     if (i.importModuleSpecifierPreference !== undefined) e.Debug.assertNever(i.importModuleSpecifierPreference);
     if (k(g)) {
      return [ _ ];
     }
     var y = e.ensurePathIsNonModuleName(e.getRelativePathFromDirectory(c, u, s));
     var S = f(_) < f(y);
     return S ? [ _, h ] : [ h, _ ];
    }
    function s(t) {
     var n = t.imports;
     return e.firstDefined(n, function(t) {
      var n = t.text;
      return e.pathIsRelative(n) ? e.fileExtensionIs(n, ".js") : undefined;
     }) || false;
    }
    function c(t, n, r) {
     var i = e.mapDefined(t, function(t) {
      return t.resolvedModules && e.firstDefinedIterator(t.resolvedModules.values(), function(e) {
       return e && e.originalPath && e.resolvedFileName !== e.originalPath ? [ e.resolvedFileName, e.originalPath ] : undefined;
      });
     });
     var a = e.createMap();
     if (i) {
      var o = r.getCurrentDirectory ? r.getCurrentDirectory() : "";
      var s = !r.useCaseSensitiveFileNames || r.useCaseSensitiveFileNames() ? e.compareStringsCaseSensitive : e.compareStringsCaseInsensitive;
      for (var c = 0, u = i; c < u.length; c++) {
       var l = u[c], f = l[0], d = l[1];
       var p = e.getPathComponents(e.toPath(f, o, n));
       var m = e.getPathComponents(e.toPath(d, o, n));
       while (s(p[p.length - 1], m[m.length - 1]) === 0) {
        p.pop();
        m.pop();
       }
       a.set(e.getPathFromPathComponents(m), e.getPathFromPathComponents(p));
      }
     }
     return a;
    }
    function u(t, n, r, i) {
     var a = c(t, r, i);
     var o = e.arrayFrom(a.keys());
     var s;
     var u = !i.useCaseSensitiveFileNames || i.useCaseSensitiveFileNames() ? e.compareStringsCaseSensitive : e.compareStringsCaseInsensitive;
     for (var l = 0, f = o; l < f.length; l++) {
      var d = f[l];
      var p = a.get(d);
      if (u(n.slice(0, p.length + 1), p + "/") === 0) {
       var m = e.getRelativePathFromDirectory(p, n, r);
       var _ = e.resolvePath(d, m);
       if (!i.fileExists || i.fileExists(_)) {
        if (!s) s = [];
        s.push(_);
       }
      }
     }
     if (s) {
      s.push(n);
      return s;
     }
     return [ n ];
    }
    function l(t, n, r, i) {
     var a = e.mapDefined(t, function(t) {
      return t.resolvedModules && e.firstDefinedIterator(t.resolvedModules.values(), function(e) {
       return e && e.resolvedFileName === n ? e.originalPath : undefined;
      });
     });
     var o = i.getCurrentDirectory ? i.getCurrentDirectory() : "";
     var s = u(t, e.getNormalizedAbsolutePath(n, o), r, i);
     if (a.length === 0) {
      return s;
     }
     return e.deduplicate(e.concatenate(s, e.flatMap(a, function(n) {
      return u(t, e.getNormalizedAbsolutePath(n, o), r, i);
     })));
    }
    function f(t) {
     var n = e.getPathComponents(t);
     if (n[0] || n.length === 1) return 0;
     for (var r = 1; r < n.length; r++) {
      if (n[r] !== "..") return r - 1;
     }
     return n.length - 1;
    }
    function d(t) {
     var n = t.valueDeclaration;
     if (e.isModuleDeclaration(n) && e.isStringLiteral(n.name)) {
      return n.name.text;
     }
    }
    function p(t, n, r) {
     for (var i in r) {
      for (var a = 0, o = r[i]; a < o.length; a++) {
       var s = o[a];
       var c = e.removeFileExtension(e.normalizePath(s));
       var u = c.indexOf("*");
       if (u === 0 && c.length === 1) {
        continue;
       } else if (u !== -1) {
        var l = c.substr(0, u);
        var f = c.substr(u + 1);
        if (n.length >= l.length + f.length && e.startsWith(n, l) && e.endsWith(n, f)) {
         var d = n.substr(l.length, n.length - f.length);
         return i.replace("*", d);
        }
       } else if (c === n || c === t) {
        return i;
       }
      }
     }
    }
    function m(t, n, r, i) {
     var a = y(n, t, i);
     if (a === undefined) {
      return undefined;
     }
     var o = y(r, t, i);
     var s = o !== undefined ? e.ensurePathIsNonModuleName(e.getRelativePathFromDirectory(o, a, i)) : a;
     return e.removeFileExtension(s);
    }
    function _(t, n, r, i, a) {
     var o = e.getEffectiveTypeRoots(t, n);
     return e.firstDefined(o, function(t) {
      var n = e.toPath(t, undefined, r);
      if (e.startsWith(i, n)) {
       return b(i.substring(n.length + 1), e.ModuleResolutionKind.NodeJs, a);
      }
     });
    }
    function g(t, n, r, i, a) {
     if (e.getEmitModuleResolutionKind(t) !== e.ModuleResolutionKind.NodeJs) {
      return undefined;
     }
     var o = v(n);
     if (!o) {
      return undefined;
     }
     var s = c(n);
     if (!e.startsWith(a, i(s.substring(0, o.topLevelNodeModulesIndex)))) return undefined;
     return e.getPackageNameFromAtTypesDirectory(s.substring(o.topLevelPackageNameIndex + 1));
     function c(t) {
      var n = t.substring(0, o.packageRootIndex);
      var a = e.combinePaths(n, "package.json");
      if (r.fileExists(a)) {
       var s = JSON.parse(r.readFile(a));
       if (s) {
        var c = s.typings || s.types || s.main;
        if (c) {
         var u = e.toPath(c, n, i);
         if (e.removeFileExtension(u) === e.removeFileExtension(i(t))) {
          return n;
         }
        }
       }
      }
      var l = e.removeFileExtension(t);
      if (i(l.substring(o.fileNameIndex)) === "/index" && !h(r, l.substring(0, o.fileNameIndex))) {
       return l.substring(0, o.fileNameIndex);
      }
      return l;
     }
    }
    function h(t, n) {
     var r = e.getSupportedExtensions({
      allowJs: true
     }, [ {
      extension: "node",
      isMixedContent: false
     }, {
      extension: "json",
      isMixedContent: false,
      scriptKind: 6
     } ]);
     for (var i = 0, a = r; i < a.length; i++) {
      var o = a[i];
      var s = n + o;
      if (t.fileExists(s)) {
       return s;
      }
     }
    }
    function v(e) {
     var t = 0;
     var n = 0;
     var r = 0;
     var i = 0;
     var a;
     (function(e) {
      e[e["BeforeNodeModules"] = 0] = "BeforeNodeModules";
      e[e["NodeModules"] = 1] = "NodeModules";
      e[e["Scope"] = 2] = "Scope";
      e[e["PackageContent"] = 3] = "PackageContent";
     })(a || (a = {}));
     var o = 0;
     var s = 0;
     var c = 0;
     while (s >= 0) {
      o = s;
      s = e.indexOf("/", o + 1);
      switch (c) {
      case 0:
       if (e.indexOf("/node_modules/", o) === o) {
        t = o;
        n = s;
        c = 1;
       }
       break;

      case 1:
      case 2:
       if (c === 1 && e.charAt(o + 1) === "@") {
        c = 2;
       } else {
        r = s;
        c = 3;
       }
       break;

      case 3:
       if (e.indexOf("/node_modules/", o) === o) {
        c = 1;
       } else {
        c = 3;
       }
       break;
      }
     }
     i = o;
     return c > 1 ? {
      topLevelNodeModulesIndex: t,
      topLevelPackageNameIndex: n,
      packageRootIndex: r,
      fileNameIndex: i
     } : undefined;
    }
    function y(t, n, r) {
     return e.firstDefined(n, function(e) {
      var n = x(t, e, r);
      return k(n) ? undefined : n;
     });
    }
    function b(t, n, r) {
     var i = e.removeFileExtension(t);
     return r ? i + ".js" : n === e.ModuleResolutionKind.NodeJs ? e.removeSuffix(i, "/index") : i;
    }
    function x(t, n, r) {
     var i = e.getRelativePathToDirectoryOrUrl(n, t, n, r, false);
     return e.isRootedDiskPath(i) ? undefined : i;
    }
    function k(t) {
     return e.startsWith(t, "..");
    }
   })(t = e.moduleSpecifiers || (e.moduleSpecifiers = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t = e.sys ? {
    getCurrentDirectory: function() {
     return e.sys.getCurrentDirectory();
    },
    getNewLine: function() {
     return e.sys.newLine;
    },
    getCanonicalFileName: e.createGetCanonicalFileName(e.sys.useCaseSensitiveFileNames)
   } : undefined;
   function n(n, r) {
    var i = n === e.sys ? t : {
     getCurrentDirectory: function() {
      return n.getCurrentDirectory();
     },
     getNewLine: function() {
      return n.newLine;
     },
     getCanonicalFileName: e.createGetCanonicalFileName(n.useCaseSensitiveFileNames)
    };
    if (!r) {
     return function(t) {
      return n.write(e.formatDiagnostic(t, i));
     };
    }
    var a = new Array(1);
    return function(t) {
     a[0] = t;
     n.write(e.formatDiagnosticsWithColorAndContext(a, i) + i.getNewLine());
     a[0] = undefined;
    };
   }
   e.createDiagnosticReporter = n;
   e.nonClearingMessageCodes = [ e.Diagnostics.Found_1_error_Watching_for_file_changes.code, e.Diagnostics.Found_0_errors_Watching_for_file_changes.code ];
   function r(t, n, r) {
    if (t.clearScreen && !r.preserveWatchOutput && !r.extendedDiagnostics && !r.diagnostics && !e.contains(e.nonClearingMessageCodes, n.code)) {
     t.clearScreen();
     return true;
    }
    return false;
   }
   e.screenStartingMessageCodes = [ e.Diagnostics.Starting_compilation_in_watch_mode.code, e.Diagnostics.File_change_detected_Starting_incremental_compilation.code ];
   function i(t, n) {
    return e.contains(e.screenStartingMessageCodes, t.code) ? n + n : n;
   }
   function a(t, n) {
    return n ? function(n, i, a) {
     r(t, n, a);
     var o = "[" + e.formatColorAndReset(new Date().toLocaleTimeString(), e.ForegroundColorEscapeSequences.Grey) + "] ";
     o += "" + e.flattenDiagnosticMessageText(n.messageText, t.newLine) + (i + i);
     t.write(o);
    } : function(n, a, o) {
     var s = "";
     if (!r(t, n, o)) {
      s += a;
     }
     s += new Date().toLocaleTimeString() + " - ";
     s += "" + e.flattenDiagnosticMessageText(n.messageText, t.newLine) + i(n, a);
     t.write(s);
    };
   }
   e.createWatchStatusReporter = a;
   function o(t, n, r, i) {
    var a = r;
    a.onUnRecoverableConfigFileDiagnostic = function(t) {
     return l(e.sys, i, t);
    };
    var o = e.getParsedCommandLineOfConfigFile(t, n, a);
    a.onUnRecoverableConfigFileDiagnostic = undefined;
    return o;
   }
   e.parseConfigFileWithSystem = o;
   function s(t, n, r, i) {
    var a = t.getConfigFileParsingDiagnostics().slice();
    var o = a.length;
    e.addRange(a, t.getSyntacticDiagnostics());
    var s = false;
    if (a.length === o) {
     e.addRange(a, t.getOptionsDiagnostics());
     e.addRange(a, t.getGlobalDiagnostics());
     if (a.length === o) {
      s = true;
     }
    }
    var c = t.emit(), u = c.emittedFiles, l = c.emitSkipped, f = c.diagnostics;
    e.addRange(a, f);
    if (s) {
     e.addRange(a, t.getSemanticDiagnostics());
    }
    e.sortAndDeduplicateDiagnostics(a).forEach(n);
    if (r) {
     var d = t.getCurrentDirectory();
     e.forEach(u, function(t) {
      var n = e.getNormalizedAbsolutePath(t, d);
      r("TSFILE: " + n);
     });
     if (t.getCompilerOptions().listFiles) {
      e.forEach(t.getSourceFiles(), function(e) {
       r(e.fileName);
      });
     }
    }
    if (i) {
     i(a.filter(function(t) {
      return t.category === e.DiagnosticCategory.Error;
     }).length);
    }
    if (l && a.length > 0) {
     return e.ExitStatus.DiagnosticsPresent_OutputsSkipped;
    } else if (a.length > 0) {
     return e.ExitStatus.DiagnosticsPresent_OutputsGenerated;
    }
    return e.ExitStatus.Success;
   }
   e.emitFilesAndReportErrors = s;
   var c = {
    close: e.noop
   };
   function u(t, n, r, i) {
    if (t === void 0) {
     t = e.sys;
    }
    if (!n) {
     n = e.createEmitAndSemanticDiagnosticsBuilderProgram;
    }
    var o = t;
    var u = function() {
     return t.useCaseSensitiveFileNames;
    };
    var l = function(e) {
     return t.write(e + t.newLine);
    };
    var f = i || a(t);
    return {
     useCaseSensitiveFileNames: u,
     getNewLine: function() {
      return t.newLine;
     },
     getCurrentDirectory: function() {
      return t.getCurrentDirectory();
     },
     getDefaultLibLocation: d,
     getDefaultLibFileName: function(t) {
      return e.combinePaths(d(), e.getDefaultLibFileName(t));
     },
     fileExists: function(e) {
      return t.fileExists(e);
     },
     readFile: function(e, n) {
      return t.readFile(e, n);
     },
     directoryExists: function(e) {
      return t.directoryExists(e);
     },
     getDirectories: function(e) {
      return t.getDirectories(e);
     },
     readDirectory: function(e, n, r, i, a) {
      return t.readDirectory(e, n, r, i, a);
     },
     realpath: t.realpath && function(e) {
      return t.realpath(e);
     },
     getEnvironmentVariable: t.getEnvironmentVariable && function(e) {
      return t.getEnvironmentVariable(e);
     },
     watchFile: t.watchFile ? function(e, n, r) {
      return t.watchFile(e, n, r);
     } : function() {
      return c;
     },
     watchDirectory: t.watchDirectory ? function(e, n, r) {
      return t.watchDirectory(e, n, r);
     } : function() {
      return c;
     },
     setTimeout: t.setTimeout ? function(e, n) {
      var r = [];
      for (var i = 2; i < arguments.length; i++) {
       r[i - 2] = arguments[i];
      }
      var a;
      return (a = t.setTimeout).call.apply(a, [ t, e, n ].concat(r));
     } : e.noop,
     clearTimeout: t.clearTimeout ? function(e) {
      return t.clearTimeout(e);
     } : e.noop,
     trace: function(e) {
      return t.write(e);
     },
     onWatchStatusChange: f,
     createDirectory: function(e) {
      return t.createDirectory(e);
     },
     writeFile: function(e, n, r) {
      return t.writeFile(e, n, r);
     },
     onCachedDirectoryStructureHostCreate: function(e) {
      return o = e || t;
     },
     createHash: t.createHash && function(e) {
      return t.createHash(e);
     },
     createProgram: n,
     afterProgramCreate: p
    };
    function d() {
     return e.getDirectoryPath(e.normalizePath(t.getExecutingFilePath()));
    }
    function p(n) {
     var i = n.getCompilerOptions();
     var a = e.getNewLineCharacter(i, function() {
      return t.newLine;
     });
     var o = function(t) {
      if (t === 1) {
       f(e.createCompilerDiagnostic(e.Diagnostics.Found_1_error_Watching_for_file_changes, t), a, i);
      } else {
       f(e.createCompilerDiagnostic(e.Diagnostics.Found_0_errors_Watching_for_file_changes, t, t), a, i);
      }
     };
     s(n, r, l, o);
    }
   }
   function l(t, n, r) {
    n(r);
    t.exit(e.ExitStatus.DiagnosticsPresent_OutputsSkipped);
   }
   function f(e, t, r, i, a, o) {
    var s = a || n(r);
    var c = u(r, i, s, o);
    c.onUnRecoverableConfigFileDiagnostic = function(e) {
     return l(r, s, e);
    };
    c.configFileName = e;
    c.optionsToExtend = t;
    return c;
   }
   e.createWatchCompilerHostOfConfigFile = f;
   function d(e, t, r, i, a, o) {
    var s = u(r, i, a || n(r), o);
    s.rootFiles = e;
    s.options = t;
    return s;
   }
   e.createWatchCompilerHostOfFilesAndCompilerOptions = d;
  })(s || (s = {}));
  (function(e) {
   function t(t, n, r, i, a, o) {
    if (e.isArray(t)) {
     return e.createWatchCompilerHostOfFilesAndCompilerOptions(t, n, r, i, a, o);
    } else {
     return e.createWatchCompilerHostOfConfigFile(t, n, r, i, a, o);
    }
   }
   e.createWatchCompilerHost = t;
   var n = 1;
   function r(t) {
    var r;
    var i;
    var a;
    var o;
    var s;
    var c = e.createMap();
    var u;
    var l = false;
    var f = false;
    var d = t.useCaseSensitiveFileNames();
    var p = t.getCurrentDirectory();
    var m = function() {
     return p;
    };
    var _ = function(e, n) {
     return t.readFile(e, n);
    };
    var g = t.configFileName, h = t.optionsToExtend, v = h === void 0 ? {} : h, y = t.createProgram;
    var b = t.rootFiles, x = t.options;
    var k;
    var S;
    var w = false;
    var C = g === undefined ? undefined : e.createCachedDirectoryStructureHost(t, p, d);
    if (C && t.onCachedDirectoryStructureHostCreate) {
     t.onCachedDirectoryStructureHostCreate(C);
    }
    var D = C || t;
    var T = {
     useCaseSensitiveFileNames: d,
     readDirectory: function(e, t, n, r, i) {
      return D.readDirectory(e, t, n, r, i);
     },
     fileExists: function(e) {
      return t.fileExists(e);
     },
     readFile: _,
     getCurrentDirectory: m,
     onUnRecoverableConfigFileDiagnostic: t.onUnRecoverableConfigFileDiagnostic
    };
    var E = V();
    if (g && t.configFileParsingResult) {
     se(t.configFileParsingResult);
     E = V();
    }
    ee(e.Diagnostics.Starting_compilation_in_watch_mode);
    if (g && !t.configFileParsingResult) {
     E = e.getNewLineCharacter(v, function() {
      return t.getNewLine();
     });
     e.Debug.assert(!b);
     oe();
     E = V();
    }
    var N = t.trace && function(e) {
     t.trace(e + E);
    };
    var A = N ? x.extendedDiagnostics ? e.WatchLogLevel.Verbose : x.diagnostics ? e.WatchLogLevel.TriggerOnly : e.WatchLogLevel.None : e.WatchLogLevel.None;
    var F = A !== e.WatchLogLevel.None ? N : e.noop;
    var P = e.getWatchFactory(A, F), I = P.watchFile, O = P.watchFilePath, M = P.watchDirectory;
    var L = e.createGetCanonicalFileName(d);
    F("Current directory: " + p + " CaseSensitiveFileNames: " + d);
    if (g) {
     I(t, g, ne, e.PollingInterval.High, "Config file");
    }
    var R = {
     getSourceFile: function(e, t, n, r) {
      return X(e, W(e), t, n, r);
     },
     getSourceFileByPath: X,
     getDefaultLibLocation: t.getDefaultLibLocation && function() {
      return t.getDefaultLibLocation();
     },
     getDefaultLibFileName: function(e) {
      return t.getDefaultLibFileName(e);
     },
     writeFile: _e,
     getCurrentDirectory: m,
     useCaseSensitiveFileNames: function() {
      return d;
     },
     getCanonicalFileName: L,
     getNewLine: function() {
      return E;
     },
     fileExists: $,
     readFile: _,
     trace: N,
     directoryExists: D.directoryExists && function(e) {
      return D.directoryExists(e);
     },
     getDirectories: D.getDirectories && function(e) {
      return D.getDirectories(e);
     },
     realpath: t.realpath && function(e) {
      return t.realpath(e);
     },
     getEnvironmentVariable: t.getEnvironmentVariable ? function(e) {
      return t.getEnvironmentVariable(e);
     } : function() {
      return "";
     },
     onReleaseOldSourceFile: Z,
     createHash: t.createHash && function(e) {
      return t.createHash(e);
     },
     toPath: W,
     getCompilationSettings: function() {
      return x;
     },
     watchDirectoryOfFailedLookupLocation: function(e, n, r) {
      return M(t, e, n, r, "Failed Lookup Locations");
     },
     watchTypeRootsDirectory: function(e, n, r) {
      return M(t, e, n, r, "Type roots");
     },
     getCachedDirectoryStructureHost: function() {
      return C;
     },
     onInvalidatedResolution: te,
     onChangedAutomaticTypeDirectiveNames: function() {
      f = true;
      te();
     },
     maxNumberOfFilesToIterateForInvalidation: t.maxNumberOfFilesToIterateForInvalidation,
     getCurrentProgram: q,
     writeLog: F
    };
    var B = e.createResolutionCache(R, g ? e.getDirectoryPath(e.getNormalizedAbsolutePath(g, p)) : p, false);
    R.resolveModuleNames = t.resolveModuleNames ? function(e, n, r) {
     return t.resolveModuleNames(e, n, r);
    } : function(e, t, n) {
     return B.resolveModuleNames(e, t, n);
    };
    R.resolveTypeReferenceDirectives = t.resolveTypeReferenceDirectives ? function(e, n) {
     return t.resolveTypeReferenceDirectives(e, n);
    } : function(e, t) {
     return B.resolveTypeReferenceDirectives(e, t);
    };
    var z = !!t.resolveModuleNames || !!t.resolveTypeReferenceDirectives;
    U();
    de();
    return g ? {
     getCurrentProgram: j,
     getProgram: U
    } : {
     getCurrentProgram: j,
     getProgram: U,
     updateRootFileNames: K
    };
    function j() {
     return r;
    }
    function q() {
     return r && r.getProgram();
    }
    function U() {
     F("Synchronizing program");
     var n = q();
     if (l) {
      E = V();
      if (n && e.changesAffectModuleResolution(n.getCompilerOptions(), x)) {
       B.clear();
      }
     }
     var i = B.createHasInvalidatedResolution(z);
     if (e.isProgramUptoDate(q(), b, x, Y, $, i, f)) {
      if (w) {
       r = y(undefined, undefined, R, r, S);
       w = false;
      }
     } else {
      J(n, i);
     }
     if (t.afterProgramCreate) {
      t.afterProgramCreate(r);
     }
     return r;
    }
    function J(t, n) {
     if (A !== e.WatchLogLevel.None) {
      F("CreatingProgramWith::");
      F("  roots: " + JSON.stringify(b));
      F("  options: " + JSON.stringify(x));
     }
     var i = l || !t;
     l = false;
     w = false;
     B.startCachingPerDirectoryResolution();
     R.hasInvalidatedResolution = n;
     R.hasChangedAutomaticTypeDirectiveNames = f;
     r = y(b, x, R, r, S);
     B.finishCachingPerDirectoryResolution();
     e.updateMissingFilePathsWatch(r.getProgram(), a || (a = e.createMap()), le);
     if (i) {
      B.updateTypeRootsWatch();
     }
     if (u) {
      for (var o = 0, s = u; o < s.length; o++) {
       var d = s[o];
       if (!a.has(d)) {
        c.delete(d);
       }
      }
      u = undefined;
     }
    }
    function K(t) {
     e.Debug.assert(!g, "Cannot update root file names with config file watch mode");
     b = t;
     te();
    }
    function V() {
     return e.getNewLineCharacter(x || v, function() {
      return t.getNewLine();
     });
    }
    function W(t) {
     return e.toPath(t, p, L);
    }
    function H(e) {
     return typeof e === "number";
    }
    function G(e) {
     return !!e.sourceFile;
    }
    function $(e) {
     var t = W(e);
     if (H(c.get(t))) {
      return true;
     }
     return D.fileExists(e);
    }
    function X(r, i, a, o, s) {
     var u = c.get(i);
     if (H(u)) {
      return undefined;
     }
     if (!u || s || !G(u) || u.version.toString() !== u.sourceFile.version) {
      var l = d();
      if (u) {
       if (s) {
        u.version++;
       }
       if (l) {
        u.sourceFile = l;
        l.version = u.version.toString();
        if (!u.fileWatcher) {
         u.fileWatcher = O(t, r, ce, e.PollingInterval.Low, i, "Source file");
        }
       } else {
        if (G(u)) {
         u.fileWatcher.close();
        }
        c.set(i, u.version);
       }
      } else {
       if (l) {
        l.version = n.toString();
        var f = O(t, r, ce, e.PollingInterval.Low, i, "Source file");
        c.set(i, {
         sourceFile: l,
         version: n,
         fileWatcher: f
        });
       } else {
        c.set(i, n);
       }
      }
      return l;
     }
     return u.sourceFile;
     function d() {
      var n;
      try {
       e.performance.mark("beforeIORead");
       n = t.readFile(r, x.charset);
       e.performance.mark("afterIORead");
       e.performance.measure("I/O Read", "beforeIORead", "afterIORead");
      } catch (e) {
       if (o) {
        o(e.message);
       }
      }
      return n !== undefined ? e.createSourceFile(r, n, a) : undefined;
     }
    }
    function Q(e) {
     var t = c.get(e);
     if (t !== undefined) {
      if (H(t)) {
       c.set(e, {
        version: Number(t) + 1
       });
      } else {
       t.version++;
      }
     }
    }
    function Y(e) {
     var t = c.get(e);
     return !t || H(t) ? undefined : t.version.toString();
    }
    function Z(e, t) {
     var n = c.get(e.path);
     if (n) {
      if (H(n)) {
       (u || (u = [])).push(e.path);
      } else if (n.sourceFile === e) {
       if (n.fileWatcher) {
        n.fileWatcher.close();
       }
       c.delete(e.path);
       B.removeResolutionsOfFile(e.path);
      }
     }
    }
    function ee(n) {
     if (t.onWatchStatusChange) {
      t.onWatchStatusChange(e.createCompilerDiagnostic(n), E, x || v);
     }
    }
    function te() {
     if (!t.setTimeout || !t.clearTimeout) {
      return;
     }
     if (s) {
      t.clearTimeout(s);
     }
     F("Scheduling update");
     s = t.setTimeout(re, 250);
    }
    function ne() {
     e.Debug.assert(!!g);
     i = e.ConfigFileProgramReloadLevel.Full;
     te();
    }
    function re() {
     s = undefined;
     ee(e.Diagnostics.File_change_detected_Starting_incremental_compilation);
     switch (i) {
     case e.ConfigFileProgramReloadLevel.Partial:
      return ie();

     case e.ConfigFileProgramReloadLevel.Full:
      return ae();

     default:
      U();
      return;
     }
    }
    function ie() {
     F("Reloading new file names and options");
     var t = e.getFileNamesFromConfigSpecs(k, e.getDirectoryPath(g), x, T);
     if (t.fileNames.length) {
      S = e.filter(S, function(t) {
       return !e.isErrorNoInputFiles(t);
      });
      w = true;
     } else if (!k.filesSpecs && !e.some(S, e.isErrorNoInputFiles)) {
      S = S.concat(e.getErrorForNoInputFiles(k, g));
      w = true;
     }
     b = t.fileNames;
     U();
    }
    function ae() {
     F("Reloading config file: " + g);
     i = e.ConfigFileProgramReloadLevel.None;
     if (C) {
      C.clearCache();
     }
     oe();
     l = true;
     U();
     de();
    }
    function oe() {
     se(e.getParsedCommandLineOfConfigFile(g, v, T));
    }
    function se(t) {
     b = t.fileNames;
     x = t.options;
     k = t.configFileSpecs;
     S = e.getConfigFileParsingDiagnostics(t);
     w = true;
    }
    function ce(t, n, r) {
     ue(t, r, n);
     if (n === e.FileWatcherEventKind.Deleted && c.get(r)) {
      B.invalidateResolutionOfFile(r);
     }
     Q(r);
     te();
    }
    function ue(e, t, n) {
     if (C) {
      C.addOrDeleteFile(e, t, n);
     }
    }
    function le(n) {
     return O(t, n, fe, e.PollingInterval.Medium, n, "Missing file");
    }
    function fe(t, n, r) {
     ue(t, r, n);
     if (n === e.FileWatcherEventKind.Created && a.has(r)) {
      a.get(r).close();
      a.delete(r);
      Q(r);
      te();
     }
    }
    function de() {
     if (k) {
      e.updateWatchingWildcardDirectories(o || (o = e.createMap()), e.createMapFromTemplate(k.wildcardDirectories), pe);
     } else if (o) {
      e.clearMap(o, e.closeFileWatcherOf);
     }
    }
    function pe(n, r) {
     return M(t, n, function(t) {
      e.Debug.assert(!!g);
      var r = W(t);
      if (C) {
       C.addOrDeleteFileOrDirectory(t, r);
      }
      Q(r);
      if (r !== n && e.hasExtension(r) && !e.isSupportedSourceFileName(t, x)) {
       F("Project: " + g + " Detected file add/remove of non supported extension: " + t);
       return;
      }
      if (i !== e.ConfigFileProgramReloadLevel.Full) {
       i = e.ConfigFileProgramReloadLevel.Partial;
       te();
      }
     }, r, "Wild card directories");
    }
    function me(n) {
     if (n.length > e.getRootLength(n) && !t.directoryExists(n)) {
      var r = e.getDirectoryPath(n);
      me(r);
      t.createDirectory(n);
     }
    }
    function _e(n, r, i, a) {
     try {
      e.performance.mark("beforeIOWrite");
      me(e.getDirectoryPath(e.normalizePath(n)));
      t.writeFile(n, r, i);
      e.performance.mark("afterIOWrite");
      e.performance.measure("I/O Write", "beforeIOWrite", "afterIOWrite");
     } catch (e) {
      if (a) {
       a(e.message);
      }
     }
    }
   }
   e.createWatchProgram = r;
  })(s || (s = {}));
  var s;
  (function(e) {
   var t = new Date(-864e13);
   var n = new Date(864e13);
   var r;
   (function(e) {
    e[e["None"] = 0] = "None";
    e[e["Success"] = 1] = "Success";
    e[e["DeclarationOutputUnchanged"] = 2] = "DeclarationOutputUnchanged";
    e[e["ConfigFileErrors"] = 4] = "ConfigFileErrors";
    e[e["SyntaxErrors"] = 8] = "SyntaxErrors";
    e[e["TypeErrors"] = 16] = "TypeErrors";
    e[e["DeclarationEmitErrors"] = 32] = "DeclarationEmitErrors";
    e[e["AnyErrors"] = 60] = "AnyErrors";
   })(r || (r = {}));
   var i;
   (function(e) {
    e[e["Unbuildable"] = 0] = "Unbuildable";
    e[e["UpToDate"] = 1] = "UpToDate";
    e[e["UpToDateWithUpstreamTypes"] = 2] = "UpToDateWithUpstreamTypes";
    e[e["OutputMissing"] = 3] = "OutputMissing";
    e[e["OutOfDateWithSelf"] = 4] = "OutOfDateWithSelf";
    e[e["OutOfDateWithUpstream"] = 5] = "OutOfDateWithUpstream";
    e[e["UpstreamOutOfDate"] = 6] = "UpstreamOutOfDate";
    e[e["UpstreamBlocked"] = 7] = "UpstreamBlocked";
    e[e["ContainerOnly"] = 8] = "ContainerOnly";
   })(i = e.UpToDateStatusType || (e.UpToDateStatusType = {}));
   function a() {
    var t = e.createMap();
    return {
     setValue: a,
     getValue: o,
     getValueOrUndefined: s,
     removeKey: i,
     getKeys: n,
     hasKey: r
    };
    function n() {
     return Object.keys(t);
    }
    function r(n) {
     return t.has(e.normalizePath(n));
    }
    function i(n) {
     t.delete(e.normalizePath(n));
    }
    function a(n, r) {
     t.set(e.normalizePath(n), r);
    }
    function o(n) {
     var r = e.normalizePath(n);
     if (t.has(r)) {
      return t.get(r);
     } else {
      throw new Error("No value corresponding to " + n + " exists in this map");
     }
    }
    function s(n) {
     var r = e.normalizePath(n);
     return t.get(r);
    }
   }
   function o() {
    var t = a();
    var n = a();
    var r = a();
    function i(e, r) {
     u(t, e, r);
     u(n, r, e);
    }
    function o(e) {
     return n.getValueOrUndefined(e) || [];
    }
    function s(e) {
     return t.getValueOrUndefined(e) || [];
    }
    function c() {
     return r.getKeys();
    }
    function u(t, n, i) {
     n = e.normalizePath(n);
     i = e.normalizePath(i);
     var a = t.getValueOrUndefined(n);
     if (a === undefined) {
      t.setValue(n, a = []);
     }
     if (a.indexOf(i) < 0) {
      a.push(i);
     }
     r.setValue(n, true);
     r.setValue(i, true);
    }
    return {
     addReference: i,
     getReferencesTo: o,
     getReferencesOf: s,
     getKeys: c
    };
   }
   function s(t, n) {
    var r = e.getRelativePathFromDirectory(f(n.options, n.options.configFilePath), t, true);
    var i = e.resolvePath(n.options.declarationDir || n.options.outDir || e.getDirectoryPath(n.options.configFilePath), r);
    return e.changeExtension(i, ".d.ts");
   }
   function c(t, n) {
    var r = e.getRelativePathFromDirectory(f(n.options, n.options.configFilePath), t, true);
    var i = e.resolvePath(n.options.outDir || e.getDirectoryPath(n.options.configFilePath), r);
    var a = e.fileExtensionIs(t, ".json") ? ".json" : e.fileExtensionIs(t, ".tsx") && n.options.jsx === 1 ? ".jsx" : ".js";
    return e.changeExtension(i, a);
   }
   function u(t, n) {
    if (n.options.outFile || n.options.out || e.fileExtensionIs(t, ".d.ts")) {
     return e.emptyArray;
    }
    var r = [];
    r.push(c(t, n));
    if (e.getEmitDeclarations(n.options) && !e.fileExtensionIs(t, ".json")) {
     var i = s(t, n);
     r.push(i);
     if (n.options.declarationMap) {
      r.push(i + ".map");
     }
    }
    return r;
   }
   function l(t) {
    if (!t.options.outFile) {
     return e.Debug.fail("outFile must be set");
    }
    var n = [];
    n.push(t.options.outFile);
    if (e.getEmitDeclarations(t.options)) {
     var r = e.changeExtension(t.options.outFile, ".d.ts");
     n.push(r);
     if (t.options.declarationMap) {
      n.push(r + ".map");
     }
    }
    return n;
   }
   function f(t, n) {
    return t.rootDir || e.getDirectoryPath(n);
   }
   function d(t) {
    var n = a();
    var r = e.parseConfigHostFromCompilerHost(t);
    function i(i) {
     var a = t.getSourceFile(i, 100);
     if (a === undefined) {
      return undefined;
     }
     var o = e.parseJsonSourceFileConfigFileContent(a, r, e.getDirectoryPath(i));
     o.options.configFilePath = i;
     n.setValue(i, o);
     return o;
    }
    function o(e) {
     n.removeKey(e);
    }
    return {
     parseConfigFile: i,
     removeKey: o
    };
   }
   function p(e, t) {
    return t > e ? t : e;
   }
   function m(t) {
    return e.fileExtensionIs(t, ".d.ts");
   }
   function _(t) {
    var n = a();
    var r = a();
    var i = e.createMap();
    return {
     options: t,
     projectStatus: a(),
     unchangedOutputs: a(),
     invalidatedProjects: n,
     missingRoots: i,
     queuedProjects: r
    };
   }
   e.createBuildContext = _;
   var g = [ {
    name: "verbose",
    shortName: "v",
    category: e.Diagnostics.Command_line_Options,
    description: e.Diagnostics.Enable_verbose_logging,
    type: "boolean"
   }, {
    name: "dry",
    shortName: "d",
    category: e.Diagnostics.Command_line_Options,
    description: e.Diagnostics.Show_what_would_be_built_or_deleted_if_specified_with_clean,
    type: "boolean"
   }, {
    name: "force",
    shortName: "f",
    category: e.Diagnostics.Command_line_Options,
    description: e.Diagnostics.Build_all_projects_including_those_that_appear_to_be_up_to_date,
    type: "boolean"
   }, {
    name: "clean",
    category: e.Diagnostics.Command_line_Options,
    description: e.Diagnostics.Delete_the_outputs_of_all_projects,
    type: "boolean"
   }, {
    name: "watch",
    category: e.Diagnostics.Command_line_Options,
    description: e.Diagnostics.Watch_input_files,
    type: "boolean"
   } ];
   function h(t, n, r, i) {
    var a = false;
    var o = false;
    var s = false;
    var c = false;
    var u = false;
    var l = [];
    for (var f = 0, d = t; f < d.length; f++) {
     var p = d[f];
     switch (p.toLowerCase()) {
     case "-v":
     case "--verbose":
      a = true;
      continue;

     case "-d":
     case "--dry":
      o = true;
      continue;

     case "-f":
     case "--force":
      s = true;
      continue;

     case "--clean":
      c = true;
      continue;

     case "--watch":
     case "-w":
      u = true;
      continue;

     case "--?":
     case "-?":
     case "--help":
      e.printHelp(g, "--build ");
      return e.ExitStatus.Success;
     }
     _(p);
    }
    if (c && s) {
     r.error(e.Diagnostics.Options_0_and_1_cannot_be_combined, "clean", "force");
     return e.ExitStatus.DiagnosticsPresent_OutputsSkipped;
    }
    if (c && a) {
     r.error(e.Diagnostics.Options_0_and_1_cannot_be_combined, "clean", "verbose");
     return e.ExitStatus.DiagnosticsPresent_OutputsSkipped;
    }
    if (c && u) {
     r.error(e.Diagnostics.Options_0_and_1_cannot_be_combined, "clean", "watch");
     return e.ExitStatus.DiagnosticsPresent_OutputsSkipped;
    }
    if (u && o) {
     r.error(e.Diagnostics.Options_0_and_1_cannot_be_combined, "watch", "dry");
     return e.ExitStatus.DiagnosticsPresent_OutputsSkipped;
    }
    if (l.length === 0) {
     _(".");
    }
    var m = v(n, r, l, {
     dry: o,
     force: s,
     verbose: a
    }, i);
    if (c) {
     return m.cleanAllProjects();
    }
    if (u) {
     m.buildAllProjects();
     m.startWatching();
     return undefined;
    }
    return m.buildAllProjects();
    function _(t) {
     var i = e.resolvePath(n.getCurrentDirectory(), t);
     var a = e.resolveProjectReferencePath(n, {
      path: i
     });
     if (!n.fileExists(a)) {
      return r.error(e.Diagnostics.File_0_does_not_exist, i);
     }
     l.push(a);
    }
   }
   e.performBuild = h;
   function v(a, s, c, u, l) {
    if (!a.getModifiedTime || !a.setModifiedTime) {
     throw new Error("Host must support timestamp APIs");
    }
    var f = d(a);
    var g = _(u);
    var h = e.createMap();
    var v = {
     fileExists: function(e) {
      return a.fileExists(e);
     },
     getModifiedTime: function(e) {
      return a.getModifiedTime(e);
     },
     getUnchangedTime: function(e) {
      return g.unchangedOutputs.getValueOrUndefined(e);
     },
     getLastStatus: function(e) {
      return g.projectStatus.getValueOrUndefined(e);
     },
     setLastStatus: function(e, t) {
      return g.projectStatus.setValue(e, t);
     },
     parseConfigFile: function(e) {
      return f.parseConfigFile(e);
     }
    };
    return {
     buildAllProjects: z,
     getUpToDateStatus: D,
     getUpToDateStatusOfFile: S,
     cleanAllProjects: L,
     resetBuildContext: b,
     getBuildGraph: w,
     invalidateProject: T,
     buildInvalidatedProjects: E,
     buildDependentInvalidatedProjects: N,
     resolveProjectName: R,
     startWatching: y
    };
    function y() {
     if (!l) throw new Error("System host must be provided if using --watch");
     if (!l.watchFile || !l.watchDirectory || !l.setTimeout) throw new Error("System host must support watchFile / watchDirectory / setTimeout if using --watch");
     var t = C();
     if (!t.buildQueue) {
      return;
     }
     var n = function(t) {
      var n = f.parseConfigFile(t);
      if (n) {
       l.watchFile(t, function() {
        f.removeKey(t);
        o(t);
       });
       if (n.configFileSpecs) {
        e.updateWatchingWildcardDirectories(h, e.createMapFromTemplate(n.configFileSpecs.wildcardDirectories), function(e, n) {
         return l.watchDirectory(e, function() {
          o(t);
         }, !!(n & 1));
        });
       }
       for (var r = 0, i = n.fileNames; r < i.length; r++) {
        var a = i[r];
        l.watchFile(a, function() {
         o(t);
        });
       }
      }
     };
     for (var r = 0, i = t.buildQueue; r < i.length; r++) {
      var a = i[r];
      n(a);
     }
     function o(e) {
      T(e);
      l.setTimeout(E, 100);
      l.setTimeout(N, 3e3);
     }
    }
    function b(e) {
     if (e === void 0) {
      e = u;
     }
     g = _(e);
    }
    function S(e) {
     return D(f.parseConfigFile(e));
    }
    function w(e) {
     var t = B(e);
     if (t === undefined) return undefined;
     return F(t);
    }
    function C() {
     return w(c);
    }
    function D(t) {
     return e.getUpToDateStatus(v, t);
    }
    function T(e) {
     var t = R(e);
     if (t === undefined) {
      return;
     }
     f.removeKey(t);
     g.invalidatedProjects.setValue(t, true);
     g.projectStatus.removeKey(t);
     var n = C();
     if (n) {
      r(t);
     }
     function r(e) {
      var t = n.dependencyMap.getReferencesTo(e);
      for (var i = 0, a = t; i < a.length; i++) {
       var o = a[i];
       if (!g.queuedProjects.hasKey(o)) {
        g.queuedProjects.setValue(o, true);
        r(o);
       }
      }
     }
    }
    function E() {
     A(function(e) {
      return g.invalidatedProjects.hasKey(e);
     });
    }
    function N() {
     A(function(e) {
      return g.queuedProjects.hasKey(e);
     });
    }
    function A(t) {
     var n = B(c);
     if (n === undefined) return;
     var r = F(n);
     for (var a = 0, o = r.buildQueue; a < o.length; a++) {
      var u = o[a];
      if (!t(u)) continue;
      var l = R(u);
      if (!l) continue;
      var d = f.parseConfigFile(l);
      if (!d) continue;
      var p = D(d);
      J(u, p);
      if (p.type === i.UpstreamBlocked) {
       if (g.options.verbose) s.verbose(e.Diagnostics.Skipping_build_of_project_0_because_its_dependency_1_has_errors, l, p.upstreamProjectName);
       continue;
      }
      P(u);
     }
    }
    function F(t) {
     var n = {};
     var r = {};
     var i = [];
     var a = [];
     var c = o();
     var u = false;
     for (var l = 0, d = t; l < d.length; l++) {
      var p = d[l];
      m(p);
     }
     if (u) {
      return undefined;
     }
     return {
      buildQueue: a,
      dependencyMap: c
     };
     function m(t, o) {
      if (o === void 0) {
       o = false;
      }
      if (r[t]) return;
      if (n[t]) {
       if (!o) {
        u = true;
        s.error(e.Diagnostics.Project_references_may_not_form_a_circular_graph_Cycle_detected_Colon_0, i.join("\r\n"));
        return;
       }
      }
      n[t] = true;
      i.push(t);
      var l = f.parseConfigFile(t);
      if (l === undefined) {
       u = true;
       return;
      }
      if (l.projectReferences) {
       for (var d = 0, p = l.projectReferences; d < p.length; d++) {
        var _ = p[d];
        var g = R(_.path);
        if (g === undefined) {
         u = true;
         break;
        }
        m(g, o || _.circular);
        c.addReference(t, g);
       }
      }
      i.pop();
      r[t] = true;
      a.push(t);
     }
    }
    function P(o) {
     if (g.options.dry) {
      s.message(e.Diagnostics.A_non_dry_build_would_build_project_0, o);
      return r.Success;
     }
     if (g.options.verbose) s.verbose(e.Diagnostics.Building_project_0, o);
     var c = r.None;
     c |= r.DeclarationOutputUnchanged;
     var u = f.parseConfigFile(o);
     if (!u) {
      c |= r.ConfigFileErrors;
      g.projectStatus.setValue(o, {
       type: i.Unbuildable,
       reason: "Config file errors"
      });
      return c;
     }
     if (u.fileNames.length === 0) {
      return r.None;
     }
     var l = {
      projectReferences: u.projectReferences,
      host: a,
      rootNames: u.fileNames,
      options: u.options
     };
     var d = e.createProgram(l);
     var _ = d.getOptionsDiagnostics().concat(d.getConfigFileParsingDiagnostics(), d.getSyntacticDiagnostics());
     if (_.length) {
      c |= r.SyntaxErrors;
      for (var h = 0, v = _; h < v.length; h++) {
       var y = v[h];
       s.errorDiagnostic(y);
      }
      g.projectStatus.setValue(o, {
       type: i.Unbuildable,
       reason: "Syntactic errors"
      });
      return c;
     }
     if (e.getEmitDeclarations(d.getCompilerOptions())) {
      var b = d.getDeclarationDiagnostics();
      if (b.length) {
       c |= r.DeclarationEmitErrors;
       for (var x = 0, k = b; x < k.length; x++) {
        var y = k[x];
        s.errorDiagnostic(y);
       }
       g.projectStatus.setValue(o, {
        type: i.Unbuildable,
        reason: "Declaration file errors"
       });
       return c;
      }
     }
     var S = d.getSemanticDiagnostics();
     if (S.length) {
      c |= r.TypeErrors;
      for (var w = 0, C = S; w < C.length; w++) {
       var y = C[w];
       s.errorDiagnostic(y);
      }
      g.projectStatus.setValue(o, {
       type: i.Unbuildable,
       reason: "Semantic errors"
      });
      return c;
     }
     var D = t;
     var T = false;
     d.emit(undefined, function(t, n, i, o) {
      var s;
      if (!T && m(t) && a.fileExists(t)) {
       if (a.readFile(t) === n) {
        c &= ~r.DeclarationOutputUnchanged;
        s = a.getModifiedTime && a.getModifiedTime(t);
       } else {
        T = true;
       }
      }
      a.writeFile(t, n, i, o, e.emptyArray);
      if (s !== undefined) {
       D = p(s, D);
       g.unchangedOutputs.setValue(t, s);
      }
     });
     var E = {
      type: i.UpToDate,
      newestDeclarationFileContentChangedTime: T ? n : D
     };
     g.projectStatus.setValue(o, E);
     return c;
    }
    function I(n) {
     if (g.options.dry) {
      return s.message(e.Diagnostics.A_non_dry_build_would_build_project_0, n.options.configFilePath);
     }
     if (g.options.verbose) s.verbose(e.Diagnostics.Updating_output_timestamps_of_project_0, n.options.configFilePath);
     var r = new Date();
     var o = x(n);
     var c = t;
     for (var u = 0, l = o; u < l.length; u++) {
      var f = l[u];
      if (m(f)) {
       c = p(c, a.getModifiedTime(f));
      }
      a.setModifiedTime(f, r);
     }
     g.projectStatus.setValue(n.options.configFilePath, {
      type: i.UpToDate,
      newestDeclarationFileContentChangedTime: c
     });
    }
    function O(e) {
     var t = B(e);
     if (t === undefined) return undefined;
     var n = F(t);
     if (n === undefined) return undefined;
     var r = [];
     for (var i = 0, o = n.buildQueue; i < o.length; i++) {
      var s = o[i];
      var c = f.parseConfigFile(s);
      if (c === undefined) {
       continue;
      }
      var u = x(c);
      for (var l = 0, d = u; l < d.length; l++) {
       var p = d[l];
       if (a.fileExists(p)) {
        r.push(p);
       }
      }
     }
     return r;
    }
    function M() {
     var e = B(c);
     if (e === undefined) return undefined;
     var t = F(e);
     if (t === undefined) return undefined;
     return t.buildQueue;
    }
    function L() {
     var t = M();
     if (t === undefined) {
      s.message(e.Diagnostics.Skipping_clean_because_not_all_projects_could_be_located);
      return e.ExitStatus.DiagnosticsPresent_OutputsSkipped;
     }
     var n = O(t);
     if (n === undefined) {
      s.message(e.Diagnostics.Skipping_clean_because_not_all_projects_could_be_located);
      return e.ExitStatus.DiagnosticsPresent_OutputsSkipped;
     }
     if (g.options.dry) {
      s.message(e.Diagnostics.A_non_dry_build_would_delete_the_following_files_Colon_0, n.map(function(e) {
       return "\r\n * " + e;
      }).join(""));
      return e.ExitStatus.Success;
     }
     if (!a.deleteFile) {
      throw new Error("Host does not support deleting files");
     }
     for (var r = 0, i = n; r < i.length; r++) {
      var o = i[r];
      a.deleteFile(o);
     }
     return e.ExitStatus.Success;
    }
    function R(t) {
     var n = e.resolvePath(a.getCurrentDirectory(), t);
     if (a.fileExists(n)) {
      return n;
     }
     var r = e.combinePaths(n, "tsconfig.json");
     if (a.fileExists(r)) {
      return r;
     }
     s.error(e.Diagnostics.File_0_not_found, q(n));
     return undefined;
    }
    function B(e) {
     var t = [];
     for (var n = 0, r = e; n < r.length; n++) {
      var i = r[n];
      var a = R(i);
      if (a === undefined) {
       return undefined;
      }
      t.push(a);
     }
     return t;
    }
    function z() {
     var t = C();
     if (t === undefined) return e.ExitStatus.DiagnosticsPresent_OutputsSkipped;
     var n = t.buildQueue;
     j(t);
     var a = false;
     for (var o = 0, c = n; o < c.length; o++) {
      var l = c[o];
      var d = f.parseConfigFile(l);
      if (d === undefined) {
       a = true;
       break;
      }
      var p = D(d);
      J(l, p);
      var m = d.options.configFilePath;
      if (p.type === i.UpToDate && !g.options.force) {
       if (u.dry) {
        s.message(e.Diagnostics.Project_0_is_up_to_date, m);
       }
       continue;
      }
      if (p.type === i.UpToDateWithUpstreamTypes && !g.options.force) {
       I(d);
       continue;
      }
      if (p.type === i.UpstreamBlocked) {
       if (g.options.verbose) s.verbose(e.Diagnostics.Skipping_build_of_project_0_because_its_dependency_1_has_errors, m, p.upstreamProjectName);
       continue;
      }
      if (p.type === i.ContainerOnly) {
       continue;
      }
      var _ = P(l);
      a = a || !!(_ & r.AnyErrors);
     }
     return a ? e.ExitStatus.DiagnosticsPresent_OutputsSkipped : e.ExitStatus.Success;
    }
    function j(t) {
     if (!g.options.verbose) return;
     var n = [];
     for (var r = 0, i = t.buildQueue; r < i.length; r++) {
      var a = i[r];
      n.push(a);
     }
     if (g.options.verbose) s.verbose(e.Diagnostics.Projects_in_this_build_Colon_0, n.map(function(e) {
      return "\r\n    * " + q(e);
     }).join(""));
    }
    function q(t) {
     return e.convertToRelativePath(t, a.getCurrentDirectory(), function(e) {
      return a.getCanonicalFileName(e);
     });
    }
    function U(e) {
     var t = [];
     for (var n = 1; n < arguments.length; n++) {
      t[n - 1] = arguments[n];
     }
     s.verbose.apply(s, [ e ].concat(t));
    }
    function J(e, t) {
     if (!g.options.verbose) return;
     return k(e, t, q, U);
    }
   }
   e.createSolutionBuilder = v;
   function y(e, t) {
    if (t === undefined) {
     return {
      type: i.Unbuildable,
      reason: "File deleted mid-build"
     };
    }
    var n = e.getLastStatus ? e.getLastStatus(t.options.configFilePath) : undefined;
    if (n !== undefined) {
     return n;
    }
    var r = b(e, t);
    if (e.setLastStatus) {
     e.setLastStatus(t.options.configFilePath, r);
    }
    return r;
   }
   e.getUpToDateStatus = y;
   function b(r, a) {
    var o = undefined;
    var s = t;
    for (var c = 0, u = a.fileNames; c < u.length; c++) {
     var l = u[c];
     if (!r.fileExists(l)) {
      return {
       type: i.Unbuildable,
       reason: l + " does not exist"
      };
     }
     var f = r.getModifiedTime(l);
     if (f > s) {
      o = l;
      s = f;
     }
    }
    var d = x(a);
    if (d.length === 0) {
     return {
      type: i.ContainerOnly
     };
    }
    var _ = "(none)";
    var g = n;
    var h = "(none)";
    var v = t;
    var b;
    var k = t;
    var S = false;
    for (var w = 0, C = d; w < C.length; w++) {
     var D = C[w];
     if (!r.fileExists(D)) {
      b = D;
      break;
     }
     var T = r.getModifiedTime(D);
     if (T < g) {
      g = T;
      _ = D;
     }
     if (T < s) {
      S = true;
      break;
     }
     if (T > v) {
      v = T;
      h = D;
     }
     if (m(D)) {
      var E = r.getUnchangedTime ? r.getUnchangedTime(D) : undefined;
      if (E !== undefined) {
       k = p(E, k);
      } else {
       k = p(k, r.getModifiedTime(D));
      }
     }
    }
    var N = false;
    var A = false;
    var F;
    if (a.projectReferences && r.parseConfigFile) {
     for (var P = 0, I = a.projectReferences; P < I.length; P++) {
      var O = I[P];
      A = A || !!O.prepend;
      var M = e.resolveProjectReferencePath(r, O);
      var L = y(r, r.parseConfigFile(M));
      if (L.type === i.Unbuildable) {
       return {
        type: i.UpstreamBlocked,
        upstreamProjectName: O.path
       };
      }
      if (L.type !== i.UpToDate) {
       return {
        type: i.UpstreamOutOfDate,
        upstreamProjectName: O.path
       };
      }
      if (L.newestInputFileTime && L.newestInputFileTime <= g) {
       continue;
      }
      if (L.newestDeclarationFileContentChangedTime && L.newestDeclarationFileContentChangedTime <= g) {
       N = true;
       F = O.path;
       continue;
      }
      e.Debug.assert(_ !== undefined, "Should have an oldest output filename here");
      return {
       type: i.OutOfDateWithUpstream,
       outOfDateOutputFileName: _,
       newerProjectName: O.path
      };
     }
    }
    if (b !== undefined) {
     return {
      type: i.OutputMissing,
      missingOutputFileName: b
     };
    }
    if (S) {
     return {
      type: i.OutOfDateWithSelf,
      outOfDateOutputFileName: _,
      newerInputFileName: o
     };
    }
    if (A && N) {
     return {
      type: i.OutOfDateWithUpstream,
      outOfDateOutputFileName: _,
      newerProjectName: F
     };
    }
    return {
     type: N ? i.UpToDateWithUpstreamTypes : i.UpToDate,
     newestDeclarationFileContentChangedTime: k,
     newestInputFileTime: s,
     newestOutputFileTime: v,
     newestInputFileName: o,
     newestOutputFileName: h,
     oldestOutputFileName: _
    };
   }
   function x(e) {
    if (e.options.outFile) {
     return l(e);
    } else {
     var t = [];
     for (var n = 0, r = e.fileNames; n < r.length; n++) {
      var i = r[n];
      t.push.apply(t, u(i, e));
     }
     return t;
    }
   }
   e.getAllProjectOutputs = x;
   function k(t, n, r, a) {
    switch (n.type) {
    case i.OutOfDateWithSelf:
     return a(e.Diagnostics.Project_0_is_out_of_date_because_oldest_output_1_is_older_than_newest_input_2, r(t), r(n.outOfDateOutputFileName), r(n.newerInputFileName));

    case i.OutOfDateWithUpstream:
     return a(e.Diagnostics.Project_0_is_out_of_date_because_oldest_output_1_is_older_than_newest_input_2, r(t), r(n.outOfDateOutputFileName), r(n.newerProjectName));

    case i.OutputMissing:
     return a(e.Diagnostics.Project_0_is_out_of_date_because_output_file_1_does_not_exist, r(t), r(n.missingOutputFileName));

    case i.UpToDate:
     if (n.newestInputFileTime !== undefined) {
      return a(e.Diagnostics.Project_0_is_up_to_date_because_newest_input_1_is_older_than_oldest_output_2, r(t), r(n.newestInputFileName || ""), r(n.oldestOutputFileName || ""));
     }
     break;

    case i.UpToDateWithUpstreamTypes:
     return a(e.Diagnostics.Project_0_is_up_to_date_with_d_ts_files_from_its_dependencies, r(t));

    case i.UpstreamOutOfDate:
     return a(e.Diagnostics.Project_0_is_out_of_date_because_its_dependency_1_is_out_of_date, r(t), r(n.upstreamProjectName));

    case i.UpstreamBlocked:
     return a(e.Diagnostics.Project_0_can_t_be_built_because_its_dependency_1_has_errors, r(t), r(n.upstreamProjectName));

    case i.Unbuildable:
     return a(e.Diagnostics.Failed_to_parse_file_0_Colon_1, r(t), n.reason);

    case i.ContainerOnly:
     break;

    default:
     e.assertTypeIsNever(n);
    }
   }
   e.formatUpToDateStatus = k;
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    t.ActionSet = "action::set";
    t.ActionInvalidate = "action::invalidate";
    t.ActionPackageInstalled = "action::packageInstalled";
    t.EventTypesRegistry = "event::typesRegistry";
    t.EventBeginInstallTypes = "event::beginInstallTypes";
    t.EventEndInstallTypes = "event::endInstallTypes";
    t.EventInitializationFailed = "event::initializationFailed";
    var n;
    (function(e) {
     e.GlobalCacheLocation = "--globalTypingsCacheLocation";
     e.LogFile = "--logFile";
     e.EnableTelemetry = "--enableTelemetry";
     e.TypingSafeListLocation = "--typingSafeListLocation";
     e.TypesMapLocation = "--typesMapLocation";
     e.NpmLocation = "--npmLocation";
    })(n = t.Arguments || (t.Arguments = {}));
    function r(t) {
     return e.sys.args.indexOf(t) >= 0;
    }
    t.hasArgument = r;
    function i(t) {
     var n = e.sys.args.indexOf(t);
     return n >= 0 && n < e.sys.args.length - 1 ? e.sys.args[n + 1] : undefined;
    }
    t.findArgument = i;
    function a() {
     var e = new Date();
     return e.getHours() + ":" + e.getMinutes() + ":" + e.getSeconds() + "." + e.getMilliseconds();
    }
    t.nowString = a;
   })(t = e.server || (e.server = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    function n(t, n) {
     var r = e.Semver.parse(e.getProperty(n, "ts" + e.versionMajorMinor) || e.getProperty(n, "latest"));
     return !r.greaterThan(t.version);
    }
    t.isTypingUpToDate = n;
    t.nodeCoreModuleList = [ "assert", "async_hooks", "buffer", "child_process", "cluster", "console", "constants", "crypto", "dgram", "dns", "domain", "events", "fs", "http", "https", "http2", "inspector", "net", "os", "path", "perf_hooks", "process", "punycode", "querystring", "readline", "repl", "stream", "string_decoder", "timers", "tls", "tty", "url", "util", "v8", "vm", "zlib" ];
    t.nodeCoreModules = e.arrayToSet(t.nodeCoreModuleList);
    function r(t, n) {
     var r = e.readConfigFile(n, function(e) {
      return t.readFile(e);
     });
     return e.createMapFromTemplate(r.config);
    }
    t.loadSafeList = r;
    function i(t, n) {
     var r = e.readConfigFile(n, function(e) {
      return t.readFile(e);
     });
     if (r.config) {
      return e.createMapFromTemplate(r.config.simpleMap);
     }
     return undefined;
    }
    t.loadTypesMap = i;
    function a(r, i, a, o, s, c, u, l, f) {
     if (!u || !u.enable) {
      return {
       cachedTypingPaths: [],
       newTypingNames: [],
       filesToWatch: []
      };
     }
     var d = e.createMap();
     a = e.mapDefined(a, function(t) {
      var n = e.normalizePath(t);
      if (e.hasJavaScriptFileExtension(n)) {
       return n;
      }
     });
     var p = [];
     if (u.include) C(u.include, "Explicitly included types");
     var m = u.exclude || [];
     var _ = e.arrayToSet(a, e.getDirectoryPath);
     _.set(o, true);
     _.forEach(function(t, n) {
      var r = e.combinePaths(n, "package.json");
      D(r, p);
      var i = e.combinePaths(n, "bower.json");
      D(i, p);
      var a = e.combinePaths(n, "bower_components");
      E(a, p);
      var o = e.combinePaths(n, "node_modules");
      E(o, p);
     });
     T(a);
     if (l) {
      var g = e.deduplicate(l.map(function(e) {
       return t.nodeCoreModules.has(e) ? "node" : e;
      }), e.equateStringsCaseSensitive, e.compareStringsCaseSensitive);
      C(g, "Inferred typings from unresolved imports");
     }
     c.forEach(function(e, t) {
      var r = f.get(t);
      if (d.has(t) && d.get(t) === undefined && r !== undefined && n(e, r)) {
       d.set(t, e.typingLocation);
      }
     });
     for (var h = 0, v = m; h < v.length; h++) {
      var y = v[h];
      var b = d.delete(y);
      if (b && i) i("Typing for " + y + " is in exclude list, will be ignored.");
     }
     var x = [];
     var k = [];
     d.forEach(function(e, t) {
      if (e !== undefined) {
       k.push(e);
      } else {
       x.push(t);
      }
     });
     var S = {
      cachedTypingPaths: k,
      newTypingNames: x,
      filesToWatch: p
     };
     if (i) i("Result: " + JSON.stringify(S));
     return S;
     function w(e) {
      if (!d.has(e)) {
       d.set(e, undefined);
      }
     }
     function C(t, n) {
      if (i) i(n + ": " + JSON.stringify(t));
      e.forEach(t, w);
     }
     function D(t, n) {
      if (!r.fileExists(t)) {
       return;
      }
      n.push(t);
      var i = e.readConfigFile(t, function(e) {
       return r.readFile(e);
      }).config;
      var a = e.flatMap([ i.dependencies, i.devDependencies, i.optionalDependencies, i.peerDependencies ], e.getOwnKeys);
      C(a, "Typing names in '" + t + "' dependencies");
     }
     function T(t) {
      var n = e.mapDefined(t, function(t) {
       if (!e.hasJavaScriptFileExtension(t)) return undefined;
       var n = e.removeFileExtension(e.getBaseFileName(t.toLowerCase()));
       var r = e.removeMinAndVersionNumbers(n);
       return s.get(r);
      });
      if (n.length) {
       C(n, "Inferred typings from file names");
      }
      var r = e.some(t, function(t) {
       return e.fileExtensionIs(t, ".jsx");
      });
      if (r) {
       if (i) i("Inferred 'react' typings due to presence of '.jsx' extension");
       w("react");
      }
     }
     function E(t, n) {
      n.push(t);
      if (!r.directoryExists(t)) {
       return;
      }
      var a = r.readDirectory(t, [ ".json" ], undefined, undefined, 2);
      if (i) i("Searching for typing names in " + t + "; all files: " + JSON.stringify(a));
      var o = [];
      for (var s = 0, c = a; s < c.length; s++) {
       var u = c[s];
       var l = e.normalizePath(u);
       var f = e.getBaseFileName(l);
       if (f !== "package.json" && f !== "bower.json") {
        continue;
       }
       var p = e.readConfigFile(l, function(e) {
        return r.readFile(e);
       });
       var m = p.config;
       if (f === "package.json" && m._requiredBy && e.filter(m._requiredBy, function(e) {
        return e[0] === "#" || e === "/";
       }).length === 0) {
        continue;
       }
       if (!m.name) {
        continue;
       }
       var _ = m.types || m.typings;
       if (_) {
        var g = e.getNormalizedAbsolutePath(_, e.getDirectoryPath(l));
        if (i) i("    Package '" + m.name + "' provides its own types.");
        d.set(m.name, g);
       } else {
        o.push(m.name);
       }
      }
      C(o, "    Found package names");
     }
    }
    t.discoverTypings = a;
    var o;
    (function(e) {
     e[e["Ok"] = 0] = "Ok";
     e[e["ScopedPackagesNotSupported"] = 1] = "ScopedPackagesNotSupported";
     e[e["EmptyName"] = 2] = "EmptyName";
     e[e["NameTooLong"] = 3] = "NameTooLong";
     e[e["NameStartsWithDot"] = 4] = "NameStartsWithDot";
     e[e["NameStartsWithUnderscore"] = 5] = "NameStartsWithUnderscore";
     e[e["NameContainsNonURISafeCharacters"] = 6] = "NameContainsNonURISafeCharacters";
    })(o = t.PackageNameValidationResult || (t.PackageNameValidationResult = {}));
    var s = 214;
    function c(e) {
     if (!e) {
      return 2;
     }
     if (e.length > s) {
      return 3;
     }
     if (e.charCodeAt(0) === 46) {
      return 4;
     }
     if (e.charCodeAt(0) === 95) {
      return 5;
     }
     if (/^@[^/]+\/[^/]+$/.test(e)) {
      return 1;
     }
     if (encodeURIComponent(e) !== e) {
      return 6;
     }
     return 0;
    }
    t.validatePackageName = c;
    function u(t, n) {
     switch (t) {
     case 2:
      return "Package name '" + n + "' cannot be empty";

     case 3:
      return "Package name '" + n + "' should be less than " + s + " characters";

     case 4:
      return "Package name '" + n + "' cannot start with '.'";

     case 5:
      return "Package name '" + n + "' cannot start with '_'";

     case 1:
      return "Package '" + n + "' is scoped and currently is not supported";

     case 6:
      return "Package name '" + n + "' contains non URI safe characters";

     case 0:
      return e.Debug.fail();

     default:
      throw e.Debug.assertNever(t);
     }
    }
    t.renderPackageNameValidationFailure = u;
   })(t = e.JsTyping || (e.JsTyping = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   function t(e) {
    var t = parseInt(e, 10);
    if (isNaN(t)) {
     throw new Error("Error in parseInt(" + JSON.stringify(e) + ")");
    }
    return t;
   }
   var n = /^(.*)-next.\d+/;
   var r = /^(\d+)\.(\d+)\.0-next.(\d+)$/;
   var i = /^(\d+)\.(\d+)\.(\d+)$/;
   var a = function() {
    function e(e, t, n, r) {
     this.major = e;
     this.minor = t;
     this.patch = n;
     this.isPrerelease = r;
    }
    e.parse = function(t) {
     var r = n.test(t);
     var i = e.tryParse(t, r);
     if (!i) {
      throw new Error("Unexpected semver: " + t + " (isPrerelease: " + r + ")");
     }
     return i;
    };
    e.fromRaw = function(t) {
     var n = t.major, r = t.minor, i = t.patch, a = t.isPrerelease;
     return new e(n, r, i, a);
    };
    e.tryParse = function(n, a) {
     var o = a ? r : i;
     var s = o.exec(n);
     return s ? new e(t(s[1]), t(s[2]), t(s[3]), a) : undefined;
    };
    Object.defineProperty(e.prototype, "versionString", {
     get: function() {
      return this.isPrerelease ? this.major + "." + this.minor + ".0-next." + this.patch : this.major + "." + this.minor + "." + this.patch;
     },
     enumerable: true,
     configurable: true
    });
    e.prototype.equals = function(e) {
     return this.major === e.major && this.minor === e.minor && this.patch === e.patch && this.isPrerelease === e.isPrerelease;
    };
    e.prototype.greaterThan = function(e) {
     return this.major > e.major || this.major === e.major && (this.minor > e.minor || this.minor === e.minor && (!this.isPrerelease && e.isPrerelease || this.isPrerelease === e.isPrerelease && this.patch > e.patch));
    };
    return e;
   }();
   e.Semver = a;
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(e) {
    var t = function() {
     function e(e) {
      this.text = e;
     }
     e.prototype.getText = function(e, t) {
      return e === 0 && t === this.text.length ? this.text : this.text.substring(e, t);
     };
     e.prototype.getLength = function() {
      return this.text.length;
     };
     e.prototype.getChangeRange = function() {
      return undefined;
     };
     return e;
    }();
    function n(e) {
     return new t(e);
    }
    e.fromString = n;
   })(t = e.ScriptSnapshot || (e.ScriptSnapshot = {}));
   e.emptyOptions = {};
   var n = function() {
    function e() {}
    return e;
   }();
   e.TextChange = n;
   var r;
   (function(e) {
    e["none"] = "none";
    e["definition"] = "definition";
    e["reference"] = "reference";
    e["writtenReference"] = "writtenReference";
   })(r = e.HighlightSpanKind || (e.HighlightSpanKind = {}));
   var i;
   (function(e) {
    e[e["None"] = 0] = "None";
    e[e["Block"] = 1] = "Block";
    e[e["Smart"] = 2] = "Smart";
   })(i = e.IndentStyle || (e.IndentStyle = {}));
   var a;
   (function(e) {
    e[e["aliasName"] = 0] = "aliasName";
    e[e["className"] = 1] = "className";
    e[e["enumName"] = 2] = "enumName";
    e[e["fieldName"] = 3] = "fieldName";
    e[e["interfaceName"] = 4] = "interfaceName";
    e[e["keyword"] = 5] = "keyword";
    e[e["lineBreak"] = 6] = "lineBreak";
    e[e["numericLiteral"] = 7] = "numericLiteral";
    e[e["stringLiteral"] = 8] = "stringLiteral";
    e[e["localName"] = 9] = "localName";
    e[e["methodName"] = 10] = "methodName";
    e[e["moduleName"] = 11] = "moduleName";
    e[e["operator"] = 12] = "operator";
    e[e["parameterName"] = 13] = "parameterName";
    e[e["propertyName"] = 14] = "propertyName";
    e[e["punctuation"] = 15] = "punctuation";
    e[e["space"] = 16] = "space";
    e[e["text"] = 17] = "text";
    e[e["typeParameterName"] = 18] = "typeParameterName";
    e[e["enumMemberName"] = 19] = "enumMemberName";
    e[e["functionName"] = 20] = "functionName";
    e[e["regularExpressionLiteral"] = 21] = "regularExpressionLiteral";
   })(a = e.SymbolDisplayPartKind || (e.SymbolDisplayPartKind = {}));
   var o;
   (function(e) {
    e["Comment"] = "comment";
    e["Region"] = "region";
    e["Code"] = "code";
    e["Imports"] = "imports";
   })(o = e.OutliningSpanKind || (e.OutliningSpanKind = {}));
   var s;
   (function(e) {
    e[e["JavaScript"] = 0] = "JavaScript";
    e[e["SourceMap"] = 1] = "SourceMap";
    e[e["Declaration"] = 2] = "Declaration";
   })(s = e.OutputFileType || (e.OutputFileType = {}));
   var c;
   (function(e) {
    e[e["None"] = 0] = "None";
    e[e["InMultiLineCommentTrivia"] = 1] = "InMultiLineCommentTrivia";
    e[e["InSingleQuoteStringLiteral"] = 2] = "InSingleQuoteStringLiteral";
    e[e["InDoubleQuoteStringLiteral"] = 3] = "InDoubleQuoteStringLiteral";
    e[e["InTemplateHeadOrNoSubstitutionTemplate"] = 4] = "InTemplateHeadOrNoSubstitutionTemplate";
    e[e["InTemplateMiddleOrTail"] = 5] = "InTemplateMiddleOrTail";
    e[e["InTemplateSubstitutionPosition"] = 6] = "InTemplateSubstitutionPosition";
   })(c = e.EndOfLineState || (e.EndOfLineState = {}));
   var u;
   (function(e) {
    e[e["Punctuation"] = 0] = "Punctuation";
    e[e["Keyword"] = 1] = "Keyword";
    e[e["Operator"] = 2] = "Operator";
    e[e["Comment"] = 3] = "Comment";
    e[e["Whitespace"] = 4] = "Whitespace";
    e[e["Identifier"] = 5] = "Identifier";
    e[e["NumberLiteral"] = 6] = "NumberLiteral";
    e[e["StringLiteral"] = 7] = "StringLiteral";
    e[e["RegExpLiteral"] = 8] = "RegExpLiteral";
   })(u = e.TokenClass || (e.TokenClass = {}));
   var l;
   (function(e) {
    e["unknown"] = "";
    e["warning"] = "warning";
    e["keyword"] = "keyword";
    e["scriptElement"] = "script";
    e["moduleElement"] = "module";
    e["classElement"] = "class";
    e["localClassElement"] = "local class";
    e["interfaceElement"] = "interface";
    e["typeElement"] = "type";
    e["enumElement"] = "enum";
    e["enumMemberElement"] = "enum member";
    e["variableElement"] = "var";
    e["localVariableElement"] = "local var";
    e["functionElement"] = "function";
    e["localFunctionElement"] = "local function";
    e["memberFunctionElement"] = "method";
    e["memberGetAccessorElement"] = "getter";
    e["memberSetAccessorElement"] = "setter";
    e["memberVariableElement"] = "property";
    e["constructorImplementationElement"] = "constructor";
    e["callSignatureElement"] = "call";
    e["indexSignatureElement"] = "index";
    e["constructSignatureElement"] = "construct";
    e["parameterElement"] = "parameter";
    e["typeParameterElement"] = "type parameter";
    e["primitiveType"] = "primitive type";
    e["label"] = "label";
    e["alias"] = "alias";
    e["constElement"] = "const";
    e["letElement"] = "let";
    e["directory"] = "directory";
    e["externalModuleName"] = "external module name";
    e["jsxAttribute"] = "JSX attribute";
    e["string"] = "string";
   })(l = e.ScriptElementKind || (e.ScriptElementKind = {}));
   var f;
   (function(e) {
    e["none"] = "";
    e["publicMemberModifier"] = "public";
    e["privateMemberModifier"] = "private";
    e["protectedMemberModifier"] = "protected";
    e["exportedModifier"] = "export";
    e["ambientModifier"] = "declare";
    e["staticModifier"] = "static";
    e["abstractModifier"] = "abstract";
    e["optionalModifier"] = "optional";
   })(f = e.ScriptElementKindModifier || (e.ScriptElementKindModifier = {}));
   var d;
   (function(e) {
    e["comment"] = "comment";
    e["identifier"] = "identifier";
    e["keyword"] = "keyword";
    e["numericLiteral"] = "number";
    e["operator"] = "operator";
    e["stringLiteral"] = "string";
    e["whiteSpace"] = "whitespace";
    e["text"] = "text";
    e["punctuation"] = "punctuation";
    e["className"] = "class name";
    e["enumName"] = "enum name";
    e["interfaceName"] = "interface name";
    e["moduleName"] = "module name";
    e["typeParameterName"] = "type parameter name";
    e["typeAliasName"] = "type alias name";
    e["parameterName"] = "parameter name";
    e["docCommentTagName"] = "doc comment tag name";
    e["jsxOpenTagName"] = "jsx open tag name";
    e["jsxCloseTagName"] = "jsx close tag name";
    e["jsxSelfClosingTagName"] = "jsx self closing tag name";
    e["jsxAttribute"] = "jsx attribute";
    e["jsxText"] = "jsx text";
    e["jsxAttributeStringLiteralValue"] = "jsx attribute string literal value";
   })(d = e.ClassificationTypeNames || (e.ClassificationTypeNames = {}));
   var p;
   (function(e) {
    e[e["comment"] = 1] = "comment";
    e[e["identifier"] = 2] = "identifier";
    e[e["keyword"] = 3] = "keyword";
    e[e["numericLiteral"] = 4] = "numericLiteral";
    e[e["operator"] = 5] = "operator";
    e[e["stringLiteral"] = 6] = "stringLiteral";
    e[e["regularExpressionLiteral"] = 7] = "regularExpressionLiteral";
    e[e["whiteSpace"] = 8] = "whiteSpace";
    e[e["text"] = 9] = "text";
    e[e["punctuation"] = 10] = "punctuation";
    e[e["className"] = 11] = "className";
    e[e["enumName"] = 12] = "enumName";
    e[e["interfaceName"] = 13] = "interfaceName";
    e[e["moduleName"] = 14] = "moduleName";
    e[e["typeParameterName"] = 15] = "typeParameterName";
    e[e["typeAliasName"] = 16] = "typeAliasName";
    e[e["parameterName"] = 17] = "parameterName";
    e[e["docCommentTagName"] = 18] = "docCommentTagName";
    e[e["jsxOpenTagName"] = 19] = "jsxOpenTagName";
    e[e["jsxCloseTagName"] = 20] = "jsxCloseTagName";
    e[e["jsxSelfClosingTagName"] = 21] = "jsxSelfClosingTagName";
    e[e["jsxAttribute"] = 22] = "jsxAttribute";
    e[e["jsxText"] = 23] = "jsxText";
    e[e["jsxAttributeStringLiteralValue"] = 24] = "jsxAttributeStringLiteralValue";
   })(p = e.ClassificationType || (e.ClassificationType = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   e.scanner = e.createScanner(6, true);
   var t;
   (function(e) {
    e[e["None"] = 0] = "None";
    e[e["Value"] = 1] = "Value";
    e[e["Type"] = 2] = "Type";
    e[e["Namespace"] = 4] = "Namespace";
    e[e["All"] = 7] = "All";
   })(t = e.SemanticMeaning || (e.SemanticMeaning = {}));
   function n(t) {
    switch (t.kind) {
    case 149:
    case 235:
    case 184:
    case 152:
    case 151:
    case 273:
    case 274:
    case 154:
    case 153:
    case 155:
    case 156:
    case 157:
    case 237:
    case 194:
    case 195:
    case 272:
    case 265:
     return 1;

    case 148:
    case 239:
    case 240:
    case 166:
     return 2;

    case 301:
     return t.name === undefined ? 1 | 2 : 2;

    case 276:
    case 238:
     return 1 | 2;

    case 242:
     if (e.isAmbientModule(t)) {
      return 4 | 1;
     } else if (e.getModuleInstanceState(t) === 1) {
      return 4 | 1;
     } else {
      return 4;
     }

    case 241:
    case 250:
    case 251:
    case 246:
    case 247:
    case 252:
    case 253:
     return 7;

    case 277:
     return 4 | 1;
    }
    return 7;
   }
   e.getMeaningFromDeclaration = n;
   function r(t) {
    if (t.kind === 277) {
     return 1;
    } else if (t.parent.kind === 252) {
     return 7;
    } else if (a(t)) {
     return i(t);
    } else if (e.isDeclarationName(t)) {
     return n(t.parent);
    } else if (u(t)) {
     return 2;
    } else if (o(t)) {
     return 4;
    } else if (e.isTypeParameterDeclaration(t.parent)) {
     e.Debug.assert(e.isJSDocTemplateTag(t.parent.parent));
     return 2;
    } else if (e.isLiteralTypeNode(t.parent)) {
     return 2 | 1;
    } else {
     return 1;
    }
   }
   e.getMeaningFromLocation = r;
   function i(t) {
    var n = t.kind === 146 ? t : e.isQualifiedName(t.parent) && t.parent.right === t ? t.parent : undefined;
    return n && n.parent.kind === 246 ? 7 : 4;
   }
   function a(t) {
    while (t.parent.kind === 146) {
     t = t.parent;
    }
    return e.isInternalModuleImportEqualsDeclaration(t.parent) && t.parent.moduleReference === t;
   }
   e.isInRightSideOfInternalImportEqualsDeclaration = a;
   function o(e) {
    return s(e) || c(e);
   }
   function s(e) {
    var t = e;
    var n = true;
    if (t.parent.kind === 146) {
     while (t.parent && t.parent.kind === 146) {
      t = t.parent;
     }
     n = t.right === e;
    }
    return t.parent.kind === 162 && !n;
   }
   function c(e) {
    var t = e;
    var n = true;
    if (t.parent.kind === 187) {
     while (t.parent && t.parent.kind === 187) {
      t = t.parent;
     }
     n = t.name === e;
    }
    if (!n && t.parent.kind === 209 && t.parent.parent.kind === 271) {
     var r = t.parent.parent.parent;
     return r.kind === 238 && t.parent.parent.token === 108 || r.kind === 239 && t.parent.parent.token === 85;
    }
    return false;
   }
   function u(t) {
    if (e.isRightSideOfQualifiedNameOrPropertyAccess(t)) {
     t = t.parent;
    }
    switch (t.kind) {
    case 99:
     return !e.isExpressionNode(t);

    case 176:
     return true;
    }
    switch (t.parent.kind) {
    case 162:
     return true;

    case 181:
     return !t.parent.isTypeOf;

    case 209:
     return !e.isExpressionWithTypeArgumentsInClassExtendsClause(t.parent);
    }
    return false;
   }
   function l(e) {
    return d(e, 189);
   }
   e.isCallExpressionTarget = l;
   function f(e) {
    return d(e, 190);
   }
   e.isNewExpressionTarget = f;
   function d(e, t) {
    var n = p(e);
    return !!n && !!n.parent && n.parent.kind === t && n.parent.expression === n;
   }
   function p(e) {
    return y(e) ? e.parent : e;
   }
   e.climbPastPropertyAccess = p;
   function m(e, t) {
    while (e) {
     if (e.kind === 231 && e.label.escapedText === t) {
      return e.label;
     }
     e = e.parent;
    }
    return undefined;
   }
   e.getTargetLabel = m;
   function _(t) {
    return t.kind === 71 && e.isBreakOrContinueStatement(t.parent) && t.parent.label === t;
   }
   e.isJumpStatementTarget = _;
   function g(t) {
    return t.kind === 71 && e.isLabeledStatement(t.parent) && t.parent.label === t;
   }
   e.isLabelOfLabeledStatement = g;
   function h(e) {
    return g(e) || _(e);
   }
   e.isLabelName = h;
   function v(e) {
    return e.parent.kind === 146 && e.parent.right === e;
   }
   e.isRightSideOfQualifiedName = v;
   function y(e) {
    return e && e.parent && e.parent.kind === 187 && e.parent.name === e;
   }
   e.isRightSideOfPropertyAccess = y;
   function b(e) {
    return e.parent.kind === 242 && e.parent.name === e;
   }
   e.isNameOfModuleDeclaration = b;
   function x(t) {
    return t.kind === 71 && e.isFunctionLike(t.parent) && t.parent.name === t;
   }
   e.isNameOfFunctionDeclaration = x;
   function k(t) {
    switch (t.parent.kind) {
    case 152:
    case 151:
    case 273:
    case 276:
    case 154:
    case 153:
    case 156:
    case 157:
    case 242:
     return e.getNameOfDeclaration(t.parent) === t;

    case 188:
     return t.parent.argumentExpression === t;

    case 147:
     return true;

    case 180:
     return t.parent.parent.kind === 178;

    default:
     return false;
    }
   }
   e.isLiteralNameOfPropertyDeclarationOrIndexAccess = k;
   function S(t) {
    return e.isExternalModuleImportEqualsDeclaration(t.parent.parent) && e.getExternalModuleImportEqualsDeclarationExpression(t.parent.parent) === t;
   }
   e.isExpressionOfExternalModuleImportEqualsDeclaration = S;
   function w(t) {
    if (e.isJSDocTypeAlias(t)) {
     t = t.parent.parent;
    }
    while (true) {
     t = t.parent;
     if (!t) {
      return undefined;
     }
     switch (t.kind) {
     case 277:
     case 154:
     case 153:
     case 237:
     case 194:
     case 156:
     case 157:
     case 238:
     case 239:
     case 241:
     case 242:
      return t;
     }
    }
   }
   e.getContainerNode = w;
   function C(t) {
    switch (t.kind) {
    case 277:
     return e.isExternalModule(t) ? "module" : "script";

    case 242:
     return "module";

    case 238:
    case 207:
     return "class";

    case 239:
     return "interface";

    case 240:
    case 295:
    case 301:
     return "type";

    case 241:
     return "enum";

    case 235:
     return a(t);

    case 184:
     return a(e.getRootDeclaration(t));

    case 195:
    case 237:
    case 194:
     return "function";

    case 156:
     return "getter";

    case 157:
     return "setter";

    case 154:
    case 153:
     return "method";

    case 152:
    case 151:
     return "property";

    case 160:
     return "index";

    case 159:
     return "construct";

    case 158:
     return "call";

    case 155:
     return "constructor";

    case 148:
     return "type parameter";

    case 276:
     return "enum member";

    case 149:
     return e.hasModifier(t, 92) ? "property" : "parameter";

    case 246:
    case 251:
    case 255:
    case 249:
     return "alias";

    case 202:
     var n = e.getSpecialPropertyAssignmentKind(t);
     var r = t.right;
     switch (n) {
     case 0:
      return "";

     case 1:
     case 2:
      var i = C(r);
      return i === "" ? "const" : i;

     case 3:
      return e.isFunctionExpression(r) ? "method" : "property";

     case 4:
      return "property";

     case 5:
      return e.isFunctionExpression(r) ? "method" : "property";

     case 6:
      return "local class";

     default:
      {
       e.assertTypeIsNever(n);
       return "";
      }
     }

    case 71:
     return e.isImportClause(t.parent) ? "alias" : "";

    default:
     return "";
    }
    function a(t) {
     return e.isVarConst(t) ? "const" : e.isLet(t) ? "let" : "var";
    }
   }
   e.getNodeKind = C;
   function D(t) {
    switch (t.kind) {
    case 99:
     return true;

    case 71:
     return e.identifierIsThisKeyword(t) && t.parent.kind === 149;

    default:
     return false;
    }
   }
   e.isThis = D;
   var T = /^\/\/\/\s*</;
   function E(t, n) {
    var r = e.getLineStarts(n);
    var i = n.getLineAndCharacterOfPosition(t).line;
    return r[i];
   }
   e.getLineStartPositionForPosition = E;
   function N(e, t) {
    return I(e.pos, e.end, t);
   }
   e.rangeContainsRange = N;
   function A(e, t) {
    return P(e, t.pos) && P(e, t.end);
   }
   e.rangeContainsRangeExclusive = A;
   function F(e, t) {
    return e.pos <= t && t <= e.end;
   }
   e.rangeContainsPosition = F;
   function P(e, t) {
    return e.pos < t && t < e.end;
   }
   e.rangeContainsPositionExclusive = P;
   function I(e, t, n) {
    return e <= n.pos && t >= n.end;
   }
   e.startEndContainsRange = I;
   function O(e, t, n) {
    return e.pos <= t && e.end >= n;
   }
   e.rangeContainsStartEnd = O;
   function M(e, t, n) {
    return R(e.pos, e.end, t, n);
   }
   e.rangeOverlapsWithStartEnd = M;
   function L(e, t, n, r) {
    return R(e.getStart(t), e.end, n, r);
   }
   e.nodeOverlapsWithStartEnd = L;
   function R(e, t, n, r) {
    var i = Math.max(e, n);
    var a = Math.min(t, r);
    return i < a;
   }
   e.startEndOverlapsWithStartEnd = R;
   function B(t, n, r) {
    e.Debug.assert(t.pos <= n);
    return n < t.end || !z(t, r);
   }
   e.positionBelongsToNode = B;
   function z(t, n) {
    if (t === undefined || e.nodeIsMissing(t)) {
     return false;
    }
    switch (t.kind) {
    case 238:
    case 239:
    case 241:
    case 186:
    case 182:
    case 166:
    case 216:
    case 243:
    case 244:
    case 250:
    case 254:
     return j(t, 18, n);

    case 272:
     return z(t.block, n);

    case 190:
     if (!t.arguments) {
      return true;
     }

    case 189:
    case 193:
    case 175:
     return j(t, 20, n);

    case 163:
    case 164:
     return z(t.type, n);

    case 155:
    case 156:
    case 157:
    case 237:
    case 194:
    case 154:
    case 153:
    case 159:
    case 158:
    case 195:
     if (t.body) {
      return z(t.body, n);
     }
     if (t.type) {
      return z(t.type, n);
     }
     return U(t, 20, n);

    case 242:
     return !!t.body && z(t.body, n);

    case 220:
     if (t.elseStatement) {
      return z(t.elseStatement, n);
     }
     return z(t.thenStatement, n);

    case 219:
     return z(t.expression, n) || U(t, 25, n);

    case 185:
    case 183:
    case 188:
    case 147:
    case 168:
     return j(t, 22, n);

    case 160:
     if (t.type) {
      return z(t.type, n);
     }
     return U(t, 22, n);

    case 269:
    case 270:
     return false;

    case 223:
    case 224:
    case 225:
    case 222:
     return z(t.statement, n);

    case 221:
     return U(t, 106, n) ? j(t, 20, n) : z(t.statement, n);

    case 165:
     return z(t.exprName, n);

    case 197:
    case 196:
    case 198:
    case 205:
    case 206:
     var r = t;
     return z(r.expression, n);

    case 191:
     return z(t.template, n);

    case 204:
     var i = e.lastOrUndefined(t.templateSpans);
     return z(i, n);

    case 214:
     return e.nodeIsPresent(t.literal);

    case 253:
    case 247:
     return e.nodeIsPresent(t.moduleSpecifier);

    case 200:
     return z(t.operand, n);

    case 202:
     return z(t.right, n);

    case 203:
     return z(t.whenFalse, n);

    default:
     return true;
    }
   }
   function j(t, n, r) {
    var i = t.getChildren(r);
    if (i.length) {
     var a = e.last(i);
     if (a.kind === n) {
      return true;
     } else if (a.kind === 25 && i.length !== 1) {
      return i[i.length - 2].kind === n;
     }
    }
    return false;
   }
   function q(t) {
    var n = K(t);
    if (!n) {
     return undefined;
    }
    var r = n.getChildren();
    var i = e.indexOfNode(r, t);
    return {
     listItemIndex: i,
     list: n
    };
   }
   e.findListItemInfo = q;
   function U(e, t, n) {
    return !!J(e, t, n);
   }
   e.hasChildOfKind = U;
   function J(t, n, r) {
    return e.find(t.getChildren(r), function(e) {
     return e.kind === n;
    });
   }
   e.findChildOfKind = J;
   function K(t) {
    var n = e.find(t.parent.getChildren(), function(n) {
     return e.isSyntaxList(n) && N(n, t);
    });
    e.Debug.assert(!n || e.contains(n.getChildren(), t));
    return n;
   }
   e.findContainingList = K;
   function V(t, n) {
    return W(t, n, function(t) {
     return e.isPropertyNameLiteral(t) || e.isKeyword(t.kind);
    });
   }
   e.getTouchingPropertyName = V;
   function W(e, t, n) {
    return G(e, t, false, n, false);
   }
   e.getTouchingToken = W;
   function H(e, t) {
    return G(e, t, true, undefined, false);
   }
   e.getTokenAtPosition = H;
   function G(e, t, n, r, i) {
    var a = e;
    e: while (true) {
     for (var o = 0, s = a.getChildren(e); o < s.length; o++) {
      var c = s[o];
      var u = n ? c.getFullStart() : c.getStart(e, true);
      if (u > t) {
       break;
      }
      var l = c.getEnd();
      if (t < l || t === l && (c.kind === 1 || i)) {
       a = c;
       continue e;
      } else if (r && l === t) {
       var f = Q(t, e, c);
       if (f && r(f)) {
        return f;
       }
      }
     }
     return a;
    }
   }
   function $(t, n) {
    var r = H(t, n);
    if (e.isToken(r) && n > r.getStart(t) && n < r.getEnd()) {
     return r;
    }
    return Q(n, t);
   }
   e.findTokenOnLeftOfPosition = $;
   function X(t, n, r) {
    return i(n);
    function i(n) {
     if (e.isToken(n) && n.pos === t.end) {
      return n;
     }
     return e.firstDefined(n.getChildren(), function(e) {
      var n = e.pos <= t.pos && e.end > t.end || e.pos === t.end;
      return n && fe(e, r) ? i(e) : undefined;
     });
    }
   }
   e.findNextToken = X;
   function Q(t, n, r, i) {
    var a = o(r || n);
    e.Debug.assert(!(a && re(a)));
    return a;
    function o(a) {
     if (Y(a)) {
      return a;
     }
     var s = a.getChildren(n);
     for (var c = 0; c < s.length; c++) {
      var u = s[c];
      if (t < u.end) {
       var l = u.getStart(n, !i);
       var f = l >= t || !fe(u, n) || re(u);
       if (f) {
        var d = ee(s, c, n);
        return d && Z(d, n);
       } else {
        return o(u);
       }
      }
     }
     e.Debug.assert(r !== undefined || a.kind === 277 || e.isJSDocCommentContainingNode(a));
     if (s.length) {
      var d = ee(s, s.length, n);
      return d && Z(d, n);
     }
    }
   }
   e.findPrecedingToken = Q;
   function Y(t) {
    return e.isToken(t) && !re(t);
   }
   function Z(e, t) {
    if (Y(e)) {
     return e;
    }
    var n = e.getChildren(t);
    var r = ee(n, n.length, t);
    return r && Z(r, t);
   }
   function ee(t, n, r) {
    for (var i = n - 1; i >= 0; i--) {
     var a = t[i];
     if (re(a)) {
      e.Debug.assert(i > 0, "`JsxText` tokens should not be the first child of `JsxElement | JsxSelfClosingElement`");
     } else if (fe(t[i], r)) {
      return t[i];
     }
    }
   }
   function te(t, n, r) {
    if (r === void 0) {
     r = Q(n, t);
    }
    if (r && e.isStringTextContainingNode(r)) {
     var i = r.getStart(t);
     var a = r.getEnd();
     if (i < n && n < a) {
      return true;
     }
     if (n === a) {
      return !!r.isUnterminated;
     }
    }
    return false;
   }
   e.isInString = te;
   function ne(e, t) {
    var n = H(e, t);
    if (!n) {
     return false;
    }
    if (n.kind === 10) {
     return true;
    }
    if (n.kind === 27 && n.parent.kind === 10) {
     return true;
    }
    if (n.kind === 27 && n.parent.kind === 268) {
     return true;
    }
    if (n && n.kind === 18 && n.parent.kind === 268) {
     return true;
    }
    if (n.kind === 27 && n.parent.kind === 261) {
     return true;
    }
    return false;
   }
   e.isInsideJsxElementOrAttribute = ne;
   function re(t) {
    return e.isJsxText(t) && t.containsOnlyWhiteSpaces;
   }
   function ie(t, n) {
    var r = H(t, n);
    return e.isTemplateLiteralKind(r.kind) && n > r.getStart(t);
   }
   e.isInTemplateString = ie;
   function ae(e, t, n) {
    var r = e.kind;
    var i = 0;
    while (true) {
     var a = Q(e.getFullStart(), n);
     if (!a) {
      return undefined;
     }
     e = a;
     if (e.kind === t) {
      if (i === 0) {
       return e;
      }
      i--;
     } else if (e.kind === r) {
      i++;
     }
    }
   }
   e.findPrecedingMatchingToken = ae;
   function oe(t, n, r) {
    var i = ce(t, n);
    return i !== undefined && (e.isPartOfTypeNode(i.called) || se(i.called, i.nTypeArguments, r).length !== 0 || oe(i.called, n, r));
   }
   e.isPossiblyTypeArgumentPosition = oe;
   function se(t, n, r) {
    var i = r.getTypeAtLocation(t);
    var a = e.isNewExpression(t.parent) ? i.getConstructSignatures() : i.getCallSignatures();
    return a.filter(function(e) {
     return !!e.typeParameters && e.typeParameters.length >= n;
    });
   }
   e.getPossibleGenericSignatures = se;
   function ce(t, n) {
    var r = t;
    var i = 0;
    var a = 0;
    while (r) {
     switch (r.kind) {
     case 27:
      r = Q(r.getFullStart(), n);
      if (!r || !e.isIdentifier(r)) return undefined;
      if (!i) {
       return e.isDeclarationName(r) ? undefined : {
        called: r,
        nTypeArguments: a
       };
      }
      i--;
      break;

     case 47:
      i = +3;
      break;

     case 46:
      i = +2;
      break;

     case 29:
      i++;
      break;

     case 18:
      r = ae(r, 17, n);
      if (!r) return undefined;
      break;

     case 20:
      r = ae(r, 19, n);
      if (!r) return undefined;
      break;

     case 22:
      r = ae(r, 21, n);
      if (!r) return undefined;
      break;

     case 26:
      a++;
      break;

     case 36:
     case 71:
     case 9:
     case 8:
     case 101:
     case 86:
     case 103:
     case 85:
     case 128:
     case 23:
     case 49:
     case 55:
     case 56:
      break;

     default:
      if (e.isTypeNode(r)) {
       break;
      }
      return undefined;
     }
     r = Q(r.getFullStart(), n);
    }
    return undefined;
   }
   e.getPossibleTypeArgumentsInfo = ce;
   function ue(t, n, r) {
    return e.formatting.getRangeOfEnclosingComment(t, n, undefined, r);
   }
   e.isInComment = ue;
   function le(t, n) {
    var r = H(t, n);
    return !!e.findAncestor(r, e.isJSDoc);
   }
   e.hasDocComment = le;
   function fe(e, t) {
    return e.getWidth(t) !== 0;
   }
   function de(t) {
    var n = e.isDeclaration(t) ? e.getCombinedModifierFlags(t) : 0;
    var r = [];
    if (n & 8) r.push("private");
    if (n & 16) r.push("protected");
    if (n & 4) r.push("public");
    if (n & 32) r.push("static");
    if (n & 128) r.push("abstract");
    if (n & 1) r.push("export");
    if (t.flags & 4194304) r.push("declare");
    return r.length > 0 ? r.join(",") : "";
   }
   e.getNodeModifiers = de;
   function pe(t) {
    if (t.kind === 162 || t.kind === 189) {
     return t.typeArguments;
    }
    if (e.isFunctionLike(t) || t.kind === 238 || t.kind === 239) {
     return t.typeParameters;
    }
    return undefined;
   }
   e.getTypeArgumentOrTypeParameterList = pe;
   function me(e) {
    return e === 2 || e === 3;
   }
   e.isComment = me;
   function _e(t) {
    if (t === 9 || t === 12 || e.isTemplateLiteralKind(t)) {
     return true;
    }
    return false;
   }
   e.isStringOrRegularExpressionOrTemplateLiteral = _e;
   function ge(e) {
    return 17 <= e && e <= 70;
   }
   e.isPunctuation = ge;
   function he(t, n, r) {
    return e.isTemplateLiteralKind(t.kind) && (t.getStart(r) < n && n < t.end) || !!t.isUnterminated && n === t.end;
   }
   e.isInsideTemplateLiteral = he;
   function ve(e) {
    switch (e) {
    case 114:
    case 112:
    case 113:
     return true;
    }
    return false;
   }
   e.isAccessibilityModifier = ve;
   function ye(t) {
    var n = e.clone(t);
    e.setConfigFileInOptions(n, t && t.configFile);
    return n;
   }
   e.cloneCompilerOptions = ye;
   function be(e) {
    if (e.kind === 185 || e.kind === 186) {
     if (e.parent.kind === 202 && e.parent.left === e && e.parent.operatorToken.kind === 58) {
      return true;
     }
     if (e.parent.kind === 225 && e.parent.initializer === e) {
      return true;
     }
     if (be(e.parent.kind === 273 ? e.parent.parent : e.parent)) {
      return true;
     }
    }
    return false;
   }
   e.isArrayLiteralOrObjectLiteralDestructuringPattern = be;
   function xe(e, t) {
    return Se(e, t, true);
   }
   e.isInReferenceComment = xe;
   function ke(e, t) {
    return Se(e, t, false);
   }
   e.isInNonReferenceComment = ke;
   function Se(e, t, n) {
    var r = ue(e, t, undefined);
    return !!r && n === T.test(e.text.substring(r.pos, r.end));
   }
   function we(t, n) {
    return e.createTextSpanFromBounds(t.getStart(n), t.getEnd());
   }
   e.createTextSpanFromNode = we;
   function Ce(t, n) {
    return e.createTextRange(t.getStart(n), t.end);
   }
   e.createTextRangeFromNode = Ce;
   function De(t) {
    return e.createTextSpanFromBounds(t.pos, t.end);
   }
   e.createTextSpanFromRange = De;
   function Te(t) {
    return e.createTextRange(t.start, t.start + t.length);
   }
   e.createTextRangeFromSpan = Te;
   function Ee(t, n, r) {
    return Ne(e.createTextSpan(t, n), r);
   }
   e.createTextChangeFromStartLength = Ee;
   function Ne(e, t) {
    return {
     span: e,
     newText: t
    };
   }
   e.createTextChange = Ne;
   e.typeKeywords = [ 119, 122, 128, 131, 95, 134, 135, 137, 138, 105, 140, 141, 142 ];
   function Ae(t) {
    return e.contains(e.typeKeywords, t);
   }
   e.isTypeKeyword = Ae;
   function Fe(e) {
    return !!(e.flags & 1536) && e.name.charCodeAt(0) === 34;
   }
   e.isExternalModuleSymbol = Fe;
   function Pe() {
    var t = [];
    return function(n) {
     var r = e.getNodeId(n);
     return !t[r] && (t[r] = true);
    };
   }
   e.nodeSeenTracker = Pe;
   function Ie(e) {
    return e.getText(0, e.getLength());
   }
   e.getSnapshotText = Ie;
   function Oe(e, t) {
    var n = "";
    for (var r = 0; r < t; r++) {
     n += e;
    }
    return n;
   }
   e.repeatString = Oe;
   function Me(e) {
    return e.isTypeParameter() ? e.getConstraint() : e;
   }
   e.skipConstraint = Me;
   function Le(t) {
    return t.kind === 147 ? e.isStringOrNumericLiteral(t.expression) ? t.expression.text : undefined : e.getTextOfIdentifierOrLiteral(t);
   }
   e.getNameFromPropertyName = Le;
   function Re(e) {
    return e.getSourceFiles().some(function(t) {
     return !t.isDeclarationFile && !e.isSourceFileFromExternalLibrary(t) && !!t.externalModuleIndicator;
    });
   }
   e.programContainsEs6Modules = Re;
   function Be(e) {
    return !!e.module || e.target >= 2 || !!e.noEmit;
   }
   e.compilerOptionsIndicateEs6Modules = Be;
   function ze(e) {
    return e.useCaseSensitiveFileNames ? e.useCaseSensitiveFileNames() : false;
   }
   e.hostUsesCaseSensitiveFileNames = ze;
   function je(t) {
    return e.createGetCanonicalFileName(ze(t));
   }
   e.hostGetCanonicalFileName = je;
   function qe(e, t, n, r) {
    return e || t && t.length ? Ue(e, t, n, r) : undefined;
   }
   e.makeImportIfNecessary = qe;
   function Ue(t, n, r, i) {
    return e.createImportDeclaration(undefined, undefined, t || n ? e.createImportClause(t, n && n.length ? e.createNamedImports(n) : undefined) : undefined, typeof r === "string" ? Je(r, i) : r);
   }
   e.makeImport = Ue;
   function Je(t, n) {
    return e.createLiteral(t, n === 0);
   }
   e.makeStringLiteral = Je;
   var Ke;
   (function(e) {
    e[e["Single"] = 0] = "Single";
    e[e["Double"] = 1] = "Double";
   })(Ke = e.QuotePreference || (e.QuotePreference = {}));
   function Ve(t, n) {
    return e.isStringDoubleQuoted(t, n) ? 1 : 0;
   }
   e.quotePreferenceFromString = Ve;
   function We(t, n) {
    if (n.quotePreference) {
     return n.quotePreference === "single" ? 0 : 1;
    } else {
     var r = t.imports && e.find(t.imports, e.isStringLiteral);
     return r ? Ve(r, t) : 1;
    }
   }
   e.getQuotePreference = We;
   function He(t) {
    var n = Ge(t);
    return n === undefined ? undefined : e.unescapeLeadingUnderscores(n);
   }
   e.symbolNameNoDefault = He;
   function Ge(t) {
    if (t.escapedName !== "default") {
     return t.escapedName;
    }
    return e.firstDefined(t.declarations, function(t) {
     var n = e.getNameOfDeclaration(t);
     return n && n.kind === 71 ? n.escapedText : undefined;
    });
   }
   e.symbolEscapedNameNoDefault = Ge;
   function $e(t, n) {
    var r = t.getTypeAtLocation(n.parent);
    var i = r && t.getPropertyOfType(r, n.name.text);
    if (i && i.flags & 98304) {
     e.Debug.assert(!!(i.flags & 33554432));
     return i.target;
    }
    return i;
   }
   e.getPropertySymbolFromBindingElement = $e;
   function Xe(t, n, r, i) {
    var a = e.createMap();
    return o(t);
    function o(t) {
     if (!(t.flags & (32 | 64)) || !e.addToSeen(a, e.getSymbolId(t))) return;
     return e.firstDefined(t.declarations, function(t) {
      return e.firstDefined(e.getAllSuperTypeNodes(t), function(t) {
       var a = r.getTypeAtLocation(t);
       var s = a && a.symbol && r.getPropertyOfType(a, n);
       return a && s && (e.firstDefined(r.getRootSymbols(s), i) || o(a.symbol));
      });
     });
    }
   }
   e.getPropertySymbolsFromBaseTypes = Xe;
   function Qe(e, t) {
    return Xe(e.parent, e.name, t, function(e) {
     return true;
    }) || false;
   }
   e.isMemberSymbolInBaseType = Qe;
   var Ye = function() {
    function t() {
     this.map = e.createMap();
    }
    t.prototype.add = function(t) {
     this.map.set(String(e.getNodeId(t)), t);
    };
    t.prototype.has = function(t) {
     return this.map.has(String(e.getNodeId(t)));
    };
    t.prototype.forEach = function(e) {
     this.map.forEach(e);
    };
    t.prototype.some = function(t) {
     return e.forEachEntry(this.map, t) || false;
    };
    return t;
   }();
   e.NodeSet = Ye;
   var Ze = function() {
    function t() {
     this.map = e.createMap();
    }
    t.prototype.get = function(t) {
     var n = this.map.get(String(e.getNodeId(t)));
     return n && n.value;
    };
    t.prototype.getOrUpdate = function(e, t) {
     var n = this.get(e);
     if (n) return n;
     var r = t();
     this.set(e, r);
     return r;
    };
    t.prototype.set = function(t, n) {
     this.map.set(String(e.getNodeId(t)), {
      node: t,
      value: n
     });
    };
    t.prototype.has = function(t) {
     return this.map.has(String(e.getNodeId(t)));
    };
    t.prototype.forEach = function(e) {
     this.map.forEach(function(t) {
      var n = t.node, r = t.value;
      return e(r, n);
     });
    };
    return t;
   }();
   e.NodeMap = Ze;
   function et(t, n, r) {
    if (!t) return undefined;
    while (t.parent) {
     if (e.isSourceFile(t.parent) || !tt(r, t.parent, n)) {
      return t;
     }
     t = t.parent;
    }
   }
   e.getParentNodeInSpan = et;
   function tt(t, n, r) {
    return e.textSpanContainsPosition(t, n.getStart(r)) && n.getEnd() <= e.textSpanEnd(t);
   }
   function nt(t, n) {
    return t.modifiers && e.find(t.modifiers, function(e) {
     return e.kind === n;
    });
   }
   e.findModifier = nt;
   function rt(t, n, r) {
    var i = e.findLast(n.statements, e.isAnyImportSyntax);
    if (i) {
     t.insertNodeAfter(n, i, r);
    } else {
     t.insertNodeAtTopOfFile(n, r, true);
    }
   }
   e.insertImport = rt;
   function it(e, t) {
    return !!e && !!t && e.start === t.start && e.length === t.length;
   }
   e.textSpansEqual = it;
   function at(e, t) {
    return e.fileName === t.fileName && it(e.textSpan, t.textSpan);
   }
   e.documentSpansEqual = at;
  })(s || (s = {}));
  (function(e) {
   function t(e) {
    return e.declarations && e.declarations.length > 0 && e.declarations[0].kind === 149;
   }
   e.isFirstDeclarationOfSymbolParameter = t;
   var n = r();
   function r() {
    var t = e.defaultMaximumTruncationLength * 10;
    var n;
    var r;
    var o;
    var s;
    p();
    var c = function(t) {
     return l(t, e.SymbolDisplayPartKind.text);
    };
    return {
     displayParts: function() {
      var r = n.length && n[n.length - 1].text;
      if (s > t && r && r !== "...") {
       if (!e.isWhiteSpaceLike(r.charCodeAt(r.length - 1))) {
        n.push(a(" ", e.SymbolDisplayPartKind.space));
       }
       n.push(a("...", e.SymbolDisplayPartKind.punctuation));
      }
      return n;
     },
     writeKeyword: function(t) {
      return l(t, e.SymbolDisplayPartKind.keyword);
     },
     writeOperator: function(t) {
      return l(t, e.SymbolDisplayPartKind.operator);
     },
     writePunctuation: function(t) {
      return l(t, e.SymbolDisplayPartKind.punctuation);
     },
     writeSpace: function(t) {
      return l(t, e.SymbolDisplayPartKind.space);
     },
     writeStringLiteral: function(t) {
      return l(t, e.SymbolDisplayPartKind.stringLiteral);
     },
     writeParameter: function(t) {
      return l(t, e.SymbolDisplayPartKind.parameterName);
     },
     writeProperty: function(t) {
      return l(t, e.SymbolDisplayPartKind.propertyName);
     },
     writeLiteral: function(t) {
      return l(t, e.SymbolDisplayPartKind.stringLiteral);
     },
     writeSymbol: f,
     writeLine: d,
     write: c,
     writeTextOfNode: c,
     getText: function() {
      return "";
     },
     getTextPos: function() {
      return 0;
     },
     getColumn: function() {
      return 0;
     },
     getLine: function() {
      return 0;
     },
     isAtStartOfLine: function() {
      return false;
     },
     rawWrite: e.notImplemented,
     getIndent: function() {
      return o;
     },
     increaseIndent: function() {
      o++;
     },
     decreaseIndent: function() {
      o--;
     },
     clear: p,
     trackSymbol: e.noop,
     reportInaccessibleThisError: e.noop,
     reportInaccessibleUniqueSymbolError: e.noop,
     reportPrivateInBaseOfClassExpression: e.noop
    };
    function u() {
     if (s > t) return;
     if (r) {
      var i = e.getIndentString(o);
      if (i) {
       s += i.length;
       n.push(a(i, e.SymbolDisplayPartKind.space));
      }
      r = false;
     }
    }
    function l(e, r) {
     if (s > t) return;
     u();
     s += e.length;
     n.push(a(e, r));
    }
    function f(e, r) {
     if (s > t) return;
     u();
     s += e.length;
     n.push(i(e, r));
    }
    function d() {
     if (s > t) return;
     s += 1;
     n.push(m());
     r = true;
    }
    function p() {
     n = [];
     r = true;
     o = 0;
     s = 0;
    }
   }
   function i(n, r) {
    return a(n, i(r));
    function i(n) {
     var r = n.flags;
     if (r & 3) {
      return t(n) ? e.SymbolDisplayPartKind.parameterName : e.SymbolDisplayPartKind.localName;
     } else if (r & 4) {
      return e.SymbolDisplayPartKind.propertyName;
     } else if (r & 32768) {
      return e.SymbolDisplayPartKind.propertyName;
     } else if (r & 65536) {
      return e.SymbolDisplayPartKind.propertyName;
     } else if (r & 8) {
      return e.SymbolDisplayPartKind.enumMemberName;
     } else if (r & 16) {
      return e.SymbolDisplayPartKind.functionName;
     } else if (r & 32) {
      return e.SymbolDisplayPartKind.className;
     } else if (r & 64) {
      return e.SymbolDisplayPartKind.interfaceName;
     } else if (r & 384) {
      return e.SymbolDisplayPartKind.enumName;
     } else if (r & 1536) {
      return e.SymbolDisplayPartKind.moduleName;
     } else if (r & 8192) {
      return e.SymbolDisplayPartKind.methodName;
     } else if (r & 262144) {
      return e.SymbolDisplayPartKind.typeParameterName;
     } else if (r & 524288) {
      return e.SymbolDisplayPartKind.aliasName;
     } else if (r & 2097152) {
      return e.SymbolDisplayPartKind.aliasName;
     }
     return e.SymbolDisplayPartKind.text;
    }
   }
   e.symbolPart = i;
   function a(t, n) {
    return {
     text: t,
     kind: e.SymbolDisplayPartKind[n]
    };
   }
   e.displayPart = a;
   function o() {
    return a(" ", e.SymbolDisplayPartKind.space);
   }
   e.spacePart = o;
   function s(t) {
    return a(e.tokenToString(t), e.SymbolDisplayPartKind.keyword);
   }
   e.keywordPart = s;
   function c(t) {
    return a(e.tokenToString(t), e.SymbolDisplayPartKind.punctuation);
   }
   e.punctuationPart = c;
   function u(t) {
    return a(e.tokenToString(t), e.SymbolDisplayPartKind.operator);
   }
   e.operatorPart = u;
   function l(t) {
    var n = e.stringToToken(t);
    return n === undefined ? f(t) : s(n);
   }
   e.textOrKeywordPart = l;
   function f(t) {
    return a(t, e.SymbolDisplayPartKind.text);
   }
   e.textPart = f;
   var d = "\r\n";
   function p(e, t) {
    return t && t.newLineCharacter || e.getNewLine && e.getNewLine() || d;
   }
   e.getNewLineOrDefaultFromHost = p;
   function m() {
    return a("\n", e.SymbolDisplayPartKind.lineBreak);
   }
   e.lineBreakPart = m;
   function _(e) {
    try {
     e(n);
     return n.displayParts();
    } finally {
     n.clear();
    }
   }
   e.mapToDisplayParts = _;
   function g(e, t, n, r) {
    if (r === void 0) {
     r = 0;
    }
    return _(function(i) {
     e.writeType(t, n, r | 1024 | 16384, i);
    });
   }
   e.typeToDisplayParts = g;
   function h(e, t, n, r, i) {
    if (i === void 0) {
     i = 0;
    }
    return _(function(a) {
     e.writeSymbol(t, n, r, i | 8, a);
    });
   }
   e.symbolToDisplayParts = h;
   function v(e, t, n, r) {
    if (r === void 0) {
     r = 0;
    }
    r |= 16384 | 1024 | 32 | 8192;
    return _(function(i) {
     e.writeSignature(t, n, r, undefined, i);
    });
   }
   e.signatureToDisplayParts = v;
   function y(e) {
    return !!e.parent && (e.parent.kind === 251 || e.parent.kind === 255) && e.parent.propertyName === e;
   }
   e.isImportOrExportSpecifierName = y;
   function b(e) {
    var t = e.length;
    if (t >= 2 && e.charCodeAt(0) === e.charCodeAt(t - 1) && x(e)) {
     return e.substring(1, t - 1);
    }
    return e;
   }
   e.stripQuotes = b;
   function x(t) {
    return e.isSingleOrDoubleQuote(t.charCodeAt(0));
   }
   e.startsWithQuote = x;
   function k(t, n) {
    var r = [];
    for (var i = 2; i < arguments.length; i++) {
     r[i - 2] = arguments[i];
    }
    var a = S(t, n);
    return e.some(r, function(e) {
     return e === a;
    });
   }
   e.scriptKindIs = k;
   function S(t, n) {
    return e.ensureScriptKind(t, n && n.getScriptKind && n.getScriptKind(t));
   }
   e.getScriptKind = S;
   function w(t, n) {
    return e.getSymbolId(e.skipAlias(t, n));
   }
   e.getUniqueSymbolId = w;
   function C(t, n) {
    while (e.isWhiteSpaceLike(t.charCodeAt(n))) {
     n += 1;
    }
    return n;
   }
   e.getFirstNonSpaceCharacterPosition = C;
   function D(e, t) {
    if (t === void 0) {
     t = true;
    }
    var n = e && T(e);
    if (n && !t) N(n);
    return n;
   }
   e.getSynthesizedDeepClone = D;
   function T(t) {
    var n = e.visitEachChild(t, D, e.nullTransformationContext);
    if (n === t) {
     var r = e.getSynthesizedClone(t);
     if (e.isStringLiteral(r)) {
      r.textSourceNode = t;
     } else if (e.isNumericLiteral(r)) {
      r.numericLiteralFlags = t.numericLiteralFlags;
     }
     return e.setTextRange(r, t);
    }
    n.parent = undefined;
    return n;
   }
   function E(t, n) {
    if (n === void 0) {
     n = true;
    }
    return t && e.createNodeArray(t.map(function(e) {
     return D(e, n);
    }), t.hasTrailingComma);
   }
   e.getSynthesizedDeepClones = E;
   function N(e) {
    A(e);
    F(e);
   }
   e.suppressLeadingAndTrailingTrivia = N;
   function A(e) {
    P(e, 512, I);
   }
   e.suppressLeadingTrivia = A;
   function F(t) {
    P(t, 1024, e.getLastChild);
   }
   e.suppressTrailingTrivia = F;
   function P(t, n, r) {
    e.addEmitFlags(t, n);
    var i = r(t);
    if (i) P(i, n, r);
   }
   function I(e) {
    return e.forEachChild(function(e) {
     return e;
    });
   }
   function O(t, n) {
    var r = t;
    for (var i = 1; !e.isFileLevelUniqueName(n, r); i++) {
     r = t + "_" + i;
    }
    return r;
   }
   e.getUniqueName = O;
   function M(t, n, r, i) {
    var a = 0;
    var o = -1;
    for (var s = 0, c = t; s < c.length; s++) {
     var u = c[s], l = u.fileName, f = u.textChanges;
     e.Debug.assert(l === n);
     for (var d = 0, p = f; d < p.length; d++) {
      var m = p[d];
      var _ = m.span, g = m.newText;
      var h = R(g, r);
      if (h !== -1) {
       o = _.start + a + h;
       if (!i) {
        return o;
       }
      }
      a += g.length - _.length;
     }
    }
    e.Debug.assert(i);
    e.Debug.assert(o >= 0);
    return o;
   }
   e.getRenameLocation = M;
   function L(t, n, r, i, a) {
    e.forEachLeadingCommentRange(r.text, t.pos, function(t, o, s, c) {
     if (s === 3) {
      t += 2;
      o -= 2;
     } else {
      t += 2;
     }
     e.addSyntheticLeadingComment(n, i || s, r.text.slice(t, o), a !== undefined ? a : c);
    });
   }
   e.copyComments = L;
   function R(t, n) {
    if (e.startsWith(t, n)) return 0;
    var r = t.indexOf(" " + n);
    if (r === -1) r = t.indexOf("." + n);
    if (r === -1) r = t.indexOf('"' + n);
    return r === -1 ? -1 : r + 1;
   }
  })(s || (s = {}));
  var s;
  (function(e) {
   function t() {
    var t = e.createScanner(6, false);
    function o(e, t, n) {
     return a(u(e, t, n), e);
    }
    function u(a, o, u) {
     var l = 0;
     var d = 0;
     var p = [];
     var m = c(o), _ = m.prefix, g = m.pushTemplate;
     a = _ + a;
     var h = _.length;
     if (g) {
      p.push(14);
     }
     t.setText(a);
     var v = 0;
     var y = [];
     var b = 0;
     do {
      l = t.scan();
      if (!e.isTrivia(l)) {
       S();
       d = l;
      }
      var x = t.getTextPos();
      i(t.getTokenPos(), x, h, f(l), y);
      if (x >= a.length) {
       var k = r(t, l, e.lastOrUndefined(p));
       if (k !== undefined) {
        v = k;
       }
      }
     } while (l !== 1);
     function S() {
      switch (l) {
      case 41:
      case 63:
       if (!n[d] && t.reScanSlashToken() === 12) {
        l = 12;
       }
       break;

      case 27:
       if (d === 71) {
        b++;
       }
       break;

      case 29:
       if (b > 0) {
        b--;
       }
       break;

      case 119:
      case 137:
      case 134:
      case 122:
      case 138:
       if (b > 0 && !u) {
        l = 71;
       }
       break;

      case 14:
       p.push(l);
       break;

      case 17:
       if (p.length > 0) {
        p.push(l);
       }
       break;

      case 18:
       if (p.length > 0) {
        var r = e.lastOrUndefined(p);
        if (r === 14) {
         l = t.reScanTemplateToken();
         if (l === 16) {
          p.pop();
         } else {
          e.Debug.assertEqual(l, 15, "Should have been a template middle.");
         }
        } else {
         e.Debug.assertEqual(r, 17, "Should have been an open brace");
         p.pop();
        }
       }
       break;

      default:
       if (!e.isKeyword(l)) {
        break;
       }
       if (d === 23) {
        l = 71;
       } else if (e.isKeyword(d) && e.isKeyword(l) && !s(d, l)) {
        l = 71;
       }
      }
     }
     return {
      endOfLineState: v,
      spans: y
     };
    }
    return {
     getClassificationsForLine: o,
     getEncodedLexicalClassifications: u
    };
   }
   e.createClassifier = t;
   var n = e.arrayToNumericMap([ 71, 9, 8, 12, 99, 43, 44, 20, 22, 18, 101, 86 ], function(e) {
    return e;
   }, function() {
    return true;
   });
   function r(t, n, r) {
    switch (n) {
    case 9:
     {
      if (!t.isUnterminated()) return undefined;
      var i = t.getTokenText();
      var a = i.length - 1;
      var o = 0;
      while (i.charCodeAt(a - o) === 92) {
       o++;
      }
      if ((o & 1) === 0) return undefined;
      return i.charCodeAt(0) === 34 ? 3 : 2;
     }

    case 3:
     return t.isUnterminated() ? 1 : undefined;

    default:
     if (e.isTemplateLiteralKind(n)) {
      if (!t.isUnterminated()) {
       return undefined;
      }
      switch (n) {
      case 16:
       return 5;

      case 13:
       return 4;

      default:
       return e.Debug.fail("Only 'NoSubstitutionTemplateLiteral's and 'TemplateTail's can be unterminated; got SyntaxKind #" + n);
      }
     }
     return r === 14 ? 6 : undefined;
    }
   }
   function i(e, t, n, r, i) {
    if (r === 8) {
     return;
    }
    if (e === 0 && n > 0) {
     e += n;
    }
    var a = t - e;
    if (a > 0) {
     i.push(e - n, a, r);
    }
   }
   function a(t, n) {
    var r = [];
    var i = t.spans;
    var a = 0;
    for (var s = 0; s < i.length; s += 3) {
     var c = i[s];
     var u = i[s + 1];
     var l = i[s + 2];
     if (a >= 0) {
      var f = c - a;
      if (f > 0) {
       r.push({
        length: f,
        classification: e.TokenClass.Whitespace
       });
      }
     }
     r.push({
      length: u,
      classification: o(l)
     });
     a = c + u;
    }
    var d = n.length - a;
    if (d > 0) {
     r.push({
      length: d,
      classification: e.TokenClass.Whitespace
     });
    }
    return {
     entries: r,
     finalLexState: t.endOfLineState
    };
   }
   function o(t) {
    switch (t) {
    case 1:
     return e.TokenClass.Comment;

    case 3:
     return e.TokenClass.Keyword;

    case 4:
     return e.TokenClass.NumberLiteral;

    case 5:
     return e.TokenClass.Operator;

    case 6:
     return e.TokenClass.StringLiteral;

    case 8:
     return e.TokenClass.Whitespace;

    case 10:
     return e.TokenClass.Punctuation;

    case 2:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 9:
    case 17:
     return e.TokenClass.Identifier;

    default:
     return undefined;
    }
   }
   function s(t, n) {
    if (!e.isAccessibilityModifier(t)) {
     return true;
    }
    switch (n) {
    case 125:
    case 136:
    case 123:
    case 115:
     return true;

    default:
     return false;
    }
   }
   function c(t) {
    switch (t) {
    case 3:
     return {
      prefix: '"\\\n'
     };

    case 2:
     return {
      prefix: "'\\\n"
     };

    case 1:
     return {
      prefix: "/*\n"
     };

    case 4:
     return {
      prefix: "`\n"
     };

    case 5:
     return {
      prefix: "}\n",
      pushTemplate: true
     };

    case 6:
     return {
      prefix: "",
      pushTemplate: true
     };

    case 0:
     return {
      prefix: ""
     };

    default:
     return e.Debug.assertNever(t);
    }
   }
   function u(e) {
    switch (e) {
    case 39:
    case 41:
    case 42:
    case 37:
    case 38:
    case 45:
    case 46:
    case 47:
    case 27:
    case 29:
    case 30:
    case 31:
    case 93:
    case 92:
    case 118:
    case 32:
    case 33:
    case 34:
    case 35:
    case 48:
    case 50:
    case 49:
    case 53:
    case 54:
    case 69:
    case 68:
    case 70:
    case 65:
    case 66:
    case 67:
    case 59:
    case 60:
    case 61:
    case 63:
    case 64:
    case 58:
    case 26:
     return true;

    default:
     return false;
    }
   }
   function l(e) {
    switch (e) {
    case 37:
    case 38:
    case 52:
    case 51:
    case 43:
    case 44:
     return true;

    default:
     return false;
    }
   }
   function f(t) {
    if (e.isKeyword(t)) {
     return 3;
    } else if (u(t) || l(t)) {
     return 5;
    } else if (t >= 17 && t <= 70) {
     return 10;
    }
    switch (t) {
    case 8:
     return 4;

    case 9:
     return 6;

    case 12:
     return 7;

    case 7:
    case 3:
    case 2:
     return 1;

    case 5:
    case 4:
     return 8;

    case 71:
    default:
     if (e.isTemplateLiteralKind(t)) {
      return 6;
     }
     return 2;
    }
   }
   function d(e, t, n, r, i) {
    return v(m(e, t, n, r, i));
   }
   e.getSemanticClassifications = d;
   function p(e, t) {
    switch (t) {
    case 242:
    case 238:
    case 239:
    case 237:
     e.throwIfCancellationRequested();
    }
   }
   function m(t, n, r, i, a) {
    var o = [];
    r.forEachChild(function o(c) {
     if (!c || !e.textSpanIntersectsWith(a, c.pos, c.getFullWidth())) {
      return;
     }
     p(n, c.kind);
     if (e.isIdentifier(c) && !e.nodeIsMissing(c) && i.has(c.escapedText)) {
      var u = t.getSymbolAtLocation(c);
      var l = u && _(u, e.getMeaningFromLocation(c), t);
      if (l) {
       s(c.getStart(r), c.getEnd(), l);
      }
     }
     c.forEachChild(o);
    });
    return {
     spans: o,
     endOfLineState: 0
    };
    function s(e, t, n) {
     o.push(e);
     o.push(t - e);
     o.push(n);
    }
   }
   e.getEncodedSemanticClassifications = m;
   function _(e, t, n) {
    var r = e.getFlags();
    if ((r & 2885600) === 0) {
     return undefined;
    } else if (r & 32) {
     return 11;
    } else if (r & 384) {
     return 12;
    } else if (r & 524288) {
     return 16;
    } else if (r & 1536) {
     return t & 4 || t & 1 && g(e) ? 14 : undefined;
    } else if (r & 2097152) {
     return _(n.getAliasedSymbol(e), t, n);
    } else if (t & 2) {
     return r & 64 ? 13 : r & 262144 ? 15 : undefined;
    } else {
     return undefined;
    }
   }
   function g(t) {
    return e.some(t.declarations, function(t) {
     return e.isModuleDeclaration(t) && e.getModuleInstanceState(t) === 1;
    });
   }
   function h(e) {
    switch (e) {
    case 1:
     return "comment";

    case 2:
     return "identifier";

    case 3:
     return "keyword";

    case 4:
     return "number";

    case 5:
     return "operator";

    case 6:
     return "string";

    case 8:
     return "whitespace";

    case 9:
     return "text";

    case 10:
     return "punctuation";

    case 11:
     return "class name";

    case 12:
     return "enum name";

    case 13:
     return "interface name";

    case 14:
     return "module name";

    case 15:
     return "type parameter name";

    case 16:
     return "type alias name";

    case 17:
     return "parameter name";

    case 18:
     return "doc comment tag name";

    case 19:
     return "jsx open tag name";

    case 20:
     return "jsx close tag name";

    case 21:
     return "jsx self closing tag name";

    case 22:
     return "jsx attribute";

    case 23:
     return "jsx text";

    case 24:
     return "jsx attribute string literal value";

    default:
     return undefined;
    }
   }
   function v(t) {
    e.Debug.assert(t.spans.length % 3 === 0);
    var n = t.spans;
    var r = [];
    for (var i = 0; i < n.length; i += 3) {
     r.push({
      textSpan: e.createTextSpan(n[i], n[i + 1]),
      classificationType: h(n[i + 2])
     });
    }
    return r;
   }
   function y(e, t, n) {
    return v(b(e, t, n));
   }
   e.getSyntacticClassifications = y;
   function b(t, n, r) {
    var i = r.start;
    var a = r.length;
    var o = e.createScanner(6, false, n.languageVariant, n.text);
    var s = e.createScanner(6, false, n.languageVariant, n.text);
    var c = [];
    x(n);
    return {
     spans: c,
     endOfLineState: 0
    };
    function u(e, t, n) {
     c.push(e);
     c.push(t);
     c.push(n);
    }
    function l(t) {
     o.setTextPos(t.pos);
     while (true) {
      var r = o.getTextPos();
      if (!e.couldStartTrivia(n.text, r)) {
       return r;
      }
      var i = o.scan();
      var a = o.getTextPos();
      var s = a - r;
      if (!e.isTrivia(i)) {
       return r;
      }
      switch (i) {
      case 4:
      case 5:
       continue;

      case 2:
      case 3:
       f(t, i, r, s);
       o.setTextPos(a);
       continue;

      case 7:
       var c = n.text;
       var l = c.charCodeAt(r);
       if (l === 60 || l === 62) {
        u(r, s, 1);
        continue;
       }
       e.Debug.assert(l === 124 || l === 61);
       g(c, r, a);
       break;

      case 6:
       break;

      default:
       e.Debug.assertNever(i);
      }
     }
    }
    function f(t, r, i, a) {
     if (r === 3) {
      var o = e.parseIsolatedJSDocComment(n.text, i, a);
      if (o && o.jsDoc) {
       o.jsDoc.parent = t;
       m(o.jsDoc);
       return;
      }
     }
     d(i, a);
    }
    function d(e, t) {
     u(e, t, 1);
    }
    function m(e) {
     var t = e.pos;
     if (e.tags) {
      for (var n = 0, r = e.tags; n < r.length; n++) {
       var i = r[n];
       if (i.pos !== t) {
        d(t, i.pos - t);
       }
       u(i.atToken.pos, i.atToken.end - i.atToken.pos, 10);
       u(i.tagName.pos, i.tagName.end - i.tagName.pos, 18);
       t = i.tagName.end;
       switch (i.kind) {
       case 296:
        a(i);
        break;

       case 300:
        _(i);
        t = i.end;
        break;

       case 299:
        x(i.typeExpression);
        t = i.end;
        break;

       case 297:
        x(i.typeExpression);
        t = i.end;
        break;
       }
      }
     }
     if (t !== e.end) {
      d(t, e.end - t);
     }
     return;
     function a(e) {
      if (e.isNameFirst) {
       d(t, e.name.pos - t);
       u(e.name.pos, e.name.end - e.name.pos, 17);
       t = e.name.end;
      }
      if (e.typeExpression) {
       d(t, e.typeExpression.pos - t);
       x(e.typeExpression);
       t = e.typeExpression.end;
      }
      if (!e.isNameFirst) {
       d(t, e.name.pos - t);
       u(e.name.pos, e.name.end - e.name.pos, 17);
       t = e.name.end;
      }
     }
    }
    function _(e) {
     for (var t = 0, n = e.getChildren(); t < n.length; t++) {
      var r = n[t];
      x(r);
     }
    }
    function g(t, n, r) {
     var i;
     for (i = n; i < r; i++) {
      if (e.isLineBreak(t.charCodeAt(i))) {
       break;
      }
     }
     u(n, i - n, 1);
     s.setTextPos(i);
     while (s.getTextPos() < r) {
      h();
     }
    }
    function h() {
     var e = s.getTextPos();
     var t = s.scan();
     var n = s.getTextPos();
     var r = b(t);
     if (r) {
      u(e, n - e, r);
     }
    }
    function v(t) {
     if (e.isJSDoc(t)) {
      return true;
     }
     if (e.nodeIsMissing(t)) {
      return true;
     }
     var n = y(t);
     if (!e.isToken(t) && t.kind !== 10 && n === undefined) {
      return false;
     }
     var r = t.kind === 10 ? t.pos : l(t);
     var i = t.end - r;
     e.Debug.assert(i >= 0);
     if (i > 0) {
      var a = n || b(t.kind, t);
      if (a) {
       u(r, i, a);
      }
     }
     return true;
    }
    function y(e) {
     switch (e.parent && e.parent.kind) {
     case 260:
      if (e.parent.tagName === e) {
       return 19;
      }
      break;

     case 261:
      if (e.parent.tagName === e) {
       return 20;
      }
      break;

     case 259:
      if (e.parent.tagName === e) {
       return 21;
      }
      break;

     case 265:
      if (e.parent.name === e) {
       return 22;
      }
      break;
     }
     return undefined;
    }
    function b(t, n) {
     if (e.isKeyword(t)) {
      return 3;
     }
     if (t === 27 || t === 29) {
      if (n && e.getTypeArgumentOrTypeParameterList(n.parent)) {
       return 10;
      }
     }
     if (e.isPunctuation(t)) {
      if (n) {
       var r = n.parent;
       if (t === 58) {
        if (r.kind === 235 || r.kind === 152 || r.kind === 149 || r.kind === 265) {
         return 5;
        }
       }
       if (r.kind === 202 || r.kind === 200 || r.kind === 201 || r.kind === 203) {
        return 5;
       }
      }
      return 10;
     } else if (t === 8) {
      return 4;
     } else if (t === 9) {
      return n.parent.kind === 265 ? 24 : 6;
     } else if (t === 12) {
      return 6;
     } else if (e.isTemplateLiteralKind(t)) {
      return 6;
     } else if (t === 10) {
      return 23;
     } else if (t === 71) {
      if (n) {
       switch (n.parent.kind) {
       case 238:
        if (n.parent.name === n) {
         return 11;
        }
        return;

       case 148:
        if (n.parent.name === n) {
         return 15;
        }
        return;

       case 239:
        if (n.parent.name === n) {
         return 13;
        }
        return;

       case 241:
        if (n.parent.name === n) {
         return 12;
        }
        return;

       case 242:
        if (n.parent.name === n) {
         return 14;
        }
        return;

       case 149:
        if (n.parent.name === n) {
         return e.isThisIdentifier(n) ? 3 : 17;
        }
        return;
       }
      }
      return 2;
     }
    }
    function x(r) {
     if (!r) {
      return;
     }
     if (e.decodedTextSpanIntersectsWith(i, a, r.pos, r.getFullWidth())) {
      p(t, r.kind);
      for (var o = 0, s = r.getChildren(n); o < s.length; o++) {
       var c = s[o];
       if (!v(c)) {
        x(c);
       }
      }
     }
    }
   }
   e.getEncodedSyntacticClassifications = b;
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n;
    (function(t) {
     function n(e, t) {
      return {
       name: e,
       kind: t
      };
     }
     function r(e, t, n) {
      var r = b(e, t);
      return n.map(function(e) {
       var t = e.name, n = e.kind;
       return {
        name: t,
        kind: n,
        span: r
       };
      });
     }
     function i(e, t, n, i, o) {
      return r(t.text, t.getStart(e) + 1, a(e, t, n, i, o));
     }
     t.getStringLiteralCompletionsFromModuleNames = i;
     function a(t, n, r, i, a) {
      var s = e.normalizeSlashes(n.text);
      var f = t.path;
      var d = e.getDirectoryPath(f);
      if (x(s) || e.isRootedDiskPath(s)) {
       var p = o(r);
       if (r.rootDirs) {
        return c(r.rootDirs, s, d, p, false, r, i, f);
       } else {
        return u(s, d, p, false, i, f);
       }
      } else {
       return l(s, d, r, i, a);
      }
     }
     function o(t) {
      var n = e.getSupportedExtensions(t);
      return t.resolveJsonModule && e.getEmitModuleResolutionKind(t) === e.ModuleResolutionKind.NodeJs ? n.concat(".json") : n;
     }
     function s(t, n, r, i) {
      t = t.map(function(t) {
       return e.normalizePath(e.isRootedDiskPath(t) ? t : e.combinePaths(n, t));
      });
      var a = e.firstDefined(t, function(t) {
       return e.containsPath(t, r, n, i) ? r.substr(t.length) : undefined;
      });
      return e.deduplicate(t.map(function(t) {
       return e.combinePaths(t, a);
      }), e.equateStringsCaseSensitive, e.compareStringsCaseSensitive);
     }
     function c(e, t, n, r, i, a, o, c) {
      var l = a.project || o.getCurrentDirectory();
      var f = !(o.useCaseSensitiveFileNames && o.useCaseSensitiveFileNames());
      var d = s(e, l, n, f);
      var p = [];
      for (var m = 0, _ = d; m < _.length; m++) {
       var g = _[m];
       u(t, g, r, i, o, c, p);
      }
      return p;
     }
     function u(t, r, i, a, o, s, c) {
      if (c === void 0) {
       c = [];
      }
      if (t === undefined) {
       t = "";
      }
      t = e.normalizeSlashes(t);
      if (!e.hasTrailingDirectorySeparator(t)) {
       t = e.getDirectoryPath(t);
      }
      if (t === "") {
       t = "." + e.directorySeparator;
      }
      t = e.ensureTrailingDirectorySeparator(t);
      var u = e.resolvePath(r, t);
      var l = e.hasTrailingDirectorySeparator(u) ? u : e.getDirectoryPath(u);
      var f = !(o.useCaseSensitiveFileNames && o.useCaseSensitiveFileNames());
      if (T(o, l)) {
       var d = C(o, l, i, undefined, [ "./*" ]);
       if (d) {
        var p = e.createMap();
        for (var m = 0, _ = d; m < _.length; m++) {
         var g = _[m];
         g = e.normalizePath(g);
         if (s && e.comparePaths(g, s, r, f) === 0) {
          continue;
         }
         var h = a || e.fileExtensionIs(g, ".json") ? e.getBaseFileName(g) : e.removeFileExtension(e.getBaseFileName(g));
         if (!p.has(h)) {
          p.set(h, true);
         }
        }
        e.forEachKey(p, function(e) {
         c.push(n(e, "script"));
        });
       }
       var v = w(o, l);
       if (v) {
        for (var y = 0, b = v; y < b.length; y++) {
         var x = b[y];
         var k = e.getBaseFileName(e.normalizePath(x));
         if (k !== "@types") {
          c.push(n(k, "directory"));
         }
        }
       }
      }
      return c;
     }
     function l(t, r, i, a, s) {
      var c = i.baseUrl, l = i.paths;
      var d = [];
      var p = o(i);
      if (c) {
       var m = i.project || a.getCurrentDirectory();
       var g = e.isRootedDiskPath(c) ? c : e.combinePaths(m, c);
       u(t, e.normalizePath(g), p, false, a, undefined, d);
       for (var v in l) {
        var b = l[v];
        if (l.hasOwnProperty(v) && b) {
         var x = function(e, t) {
          if (!d.some(function(t) {
           return t.name === e;
          })) {
           d.push(n(e, t));
          }
         };
         for (var k = 0, S = f(v, b, t, c, p, a); k < S.length; k++) {
          var w = S[k], C = w.name, D = w.kind;
          x(C, D);
         }
        }
       }
      }
      var E = N(t) ? e.hasTrailingDirectorySeparator(t) ? t : e.getDirectoryPath(t) : undefined;
      for (var A = 0, F = _(t, E, s); A < F.length; A++) {
       var P = F[A];
       d.push(n(P, "external module name"));
      }
      h(a, i, r, d);
      if (e.getEmitModuleResolutionKind(i) === e.ModuleResolutionKind.NodeJs) {
       var I = false;
       if (E === undefined) {
        var O = function(e) {
         if (!d.some(function(t) {
          return t.name === e;
         })) {
          I = true;
          d.push(n(e, "external module name"));
         }
        };
        for (var M = 0, L = y(a, r); M < L.length; M++) {
         var R = L[M];
         O(R);
        }
       }
       if (!I) {
        e.forEachAncestorDirectory(r, function(n) {
         var r = e.combinePaths(n, "node_modules");
         if (T(a, r)) {
          u(t, r, p, false, a, undefined, d);
         }
        });
       }
      }
      return d;
     }
     function f(t, n, r, i, a, o) {
      if (!e.endsWith(t, "*")) {
       return !e.stringContains(t, "*") ? u(t) : e.emptyArray;
      }
      var s = t.slice(0, t.length - 1);
      var c = e.tryRemovePrefix(r, s);
      return c === undefined ? u(s) : e.flatMap(n, function(e) {
       return d(c, i, e, a, o);
      });
      function u(t) {
       return e.startsWith(t, r) ? [ {
        name: t,
        kind: "directory"
       } ] : e.emptyArray;
      }
     }
     function d(t, n, r, i, a) {
      if (!a.readDirectory) {
       return undefined;
      }
      var o = e.hasZeroOrOneAsteriskCharacter(r) ? e.tryParsePattern(r) : undefined;
      if (!o) {
       return undefined;
      }
      var s = e.resolvePath(o.prefix);
      var c = e.hasTrailingDirectorySeparator(o.prefix) ? s : e.getDirectoryPath(s);
      var u = e.hasTrailingDirectorySeparator(o.prefix) ? "" : e.getBaseFileName(s);
      var l = N(t);
      var f = l ? e.hasTrailingDirectorySeparator(t) ? t : e.getDirectoryPath(t) : undefined;
      var d = l ? e.combinePaths(c, u + f) : c;
      var _ = e.normalizePath(o.suffix);
      var g = e.normalizePath(e.combinePaths(n, d));
      var h = l ? g : e.ensureTrailingDirectorySeparator(g) + u;
      var v = _ ? "**/*" : "./*";
      var y = C(a, g, i, undefined, [ v ]).map(function(e) {
       return {
        name: e,
        kind: "script"
       };
      });
      var b = w(a, g).map(function(t) {
       return e.combinePaths(g, t);
      }).map(function(e) {
       return {
        name: e,
        kind: "directory"
       };
      });
      return e.mapDefined(e.concatenate(y, b), function(t) {
       var n = t.name, r = t.kind;
       var i = e.normalizePath(n);
       var a = p(i, h, _);
       return a !== undefined ? {
        name: m(e.removeFileExtension(a)),
        kind: r
       } : undefined;
      });
     }
     function p(t, n, r) {
      return e.startsWith(t, n) && e.endsWith(t, r) ? t.slice(n.length, t.length - r.length) : undefined;
     }
     function m(t) {
      return t[0] === e.directorySeparator ? t.slice(1) : t;
     }
     function _(t, n, r) {
      var i = r.getAmbientModules().map(function(t) {
       return e.stripQuotes(t.name);
      });
      var a = i.filter(function(n) {
       return e.startsWith(n, t);
      });
      if (n !== undefined) {
       var o = e.ensureTrailingDirectorySeparator(n);
       return a.map(function(t) {
        return e.removePrefix(t, o);
       });
      }
      return a;
     }
     function g(t, n, i, a) {
      var o = e.getTokenAtPosition(t, n);
      var s = e.getLeadingCommentRanges(t.text, o.pos);
      var c = s && e.find(s, function(e) {
       return n >= e.pos && n <= e.end;
      });
      if (!c) {
       return undefined;
      }
      var l = t.text.slice(c.pos, n);
      var f = k.exec(l);
      if (!f) {
       return undefined;
      }
      var d = f[1], p = f[2], m = f[3];
      var _ = e.getDirectoryPath(t.path);
      var g = p === "path" ? u(m, _, e.getSupportedExtensions(i), true, a, t.path) : p === "types" ? h(a, i, _) : undefined;
      return g && r(m, c.pos + d.length, g);
     }
     t.getTripleSlashReferenceCompletion = g;
     function h(t, r, i, a) {
      if (a === void 0) {
       a = [];
      }
      var o = e.createMap();
      if (r.types) {
       for (var s = 0, c = r.types; s < c.length; s++) {
        var u = c[s];
        var l = e.getUnmangledNameForScopedPackage(u);
        x(l);
       }
      } else if (t.getDirectories) {
       var f = void 0;
       try {
        f = e.getEffectiveTypeRoots(r, t);
       } catch (e) {}
       if (f) {
        for (var d = 0, p = f; d < p.length; d++) {
         var m = p[d];
         b(m);
        }
       }
       for (var _ = 0, g = v(i, t); _ < g.length; _++) {
        var h = g[_];
        var y = e.combinePaths(e.getDirectoryPath(h), "node_modules/@types");
        b(y);
       }
      }
      return a;
      function b(n) {
       e.Debug.assert(!!t.getDirectories);
       if (T(t, n)) {
        var r = w(t, n);
        if (r) {
         for (var i = 0, a = r; i < a.length; i++) {
          var o = a[i];
          o = e.normalizePath(o);
          var s = e.getBaseFileName(o);
          var c = e.getUnmangledNameForScopedPackage(s);
          x(c);
         }
        }
       }
      }
      function x(e) {
       if (!o.has(e)) {
        a.push(n(e, "external module name"));
        o.set(e, true);
       }
      }
     }
     function v(t, n) {
      var r = [];
      e.forEachAncestorDirectory(t, function(t) {
       var i = e.findConfigFile(t, function(e) {
        return D(n, e);
       }, "package.json");
       if (!i) {
        return true;
       }
       r.push(i);
      });
      return r;
     }
     function y(t, n) {
      if (!t.readFile || !t.fileExists) return e.emptyArray;
      var r = [];
      for (var i = 0, a = v(n, t); i < a.length; i++) {
       var o = a[i];
       var s = e.readJson(o, t);
       for (var c = 0, u = S; c < u.length; c++) {
        var l = u[c];
        var f = s[l];
        if (!f) continue;
        for (var d in f) {
         if (f.hasOwnProperty(d) && !e.startsWith(d, "@types/")) {
          r.push(d);
         }
        }
       }
      }
      return r;
     }
     function b(t, n) {
      var r = Math.max(t.lastIndexOf(e.directorySeparator), t.lastIndexOf("\\"));
      var i = r !== -1 ? r + 1 : 0;
      var a = t.length - i;
      return a === 0 || e.isIdentifierText(t.substr(i, a), 6) ? undefined : e.createTextSpan(n + i, a);
     }
     function x(e) {
      if (e && e.length >= 2 && e.charCodeAt(0) === 46) {
       var t = e.length >= 3 && e.charCodeAt(1) === 46 ? 2 : 1;
       var n = e.charCodeAt(t);
       return n === 47 || n === 92;
      }
      return false;
     }
     var k = /^(\/\/\/\s*<reference\s+(path|types)\s*=\s*(?:'|"))([^\3"]*)$/;
     var S = [ "dependencies", "devDependencies", "peerDependencies", "optionalDependencies" ];
     function w(e, t) {
      return E(e, e.getDirectories, t) || [];
     }
     function C(t, n, r, i, a) {
      return E(t, t.readDirectory, n, r, i, a) || e.emptyArray;
     }
     function D(e, t) {
      return E(e, e.fileExists, t);
     }
     function T(t, n) {
      try {
       return e.directoryProbablyExists(n, t);
      } catch (e) {}
      return false;
     }
     function E(e, t) {
      var n = [];
      for (var r = 2; r < arguments.length; r++) {
       n[r - 2] = arguments[r];
      }
      try {
       return t && t.apply(e, n);
      } catch (e) {}
      return undefined;
     }
     function N(t) {
      return e.stringContains(t, e.directorySeparator);
     }
    })(n = t.PathCompletions || (t.PathCompletions = {}));
   })(t = e.Completions || (e.Completions = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n;
    (function(e) {
     e[e["ThisType"] = 0] = "ThisType";
     e[e["SymbolMemberNoExport"] = 1] = "SymbolMemberNoExport";
     e[e["SymbolMemberExport"] = 2] = "SymbolMemberExport";
     e[e["Export"] = 3] = "Export";
    })(n || (n = {}));
    function r(e) {
     return e.kind === 2 || e.kind === 1;
    }
    function i(e) {
     return e.kind === 2 || e.kind === 3;
    }
    var a;
    (function(e) {
     e[e["None"] = 0] = "None";
     e[e["ClassElementKeywords"] = 1] = "ClassElementKeywords";
     e[e["InterfaceElementKeywords"] = 2] = "InterfaceElementKeywords";
     e[e["ConstructorParameterKeywords"] = 3] = "ConstructorParameterKeywords";
     e[e["FunctionLikeBodyKeywords"] = 4] = "FunctionLikeBodyKeywords";
     e[e["TypeKeywords"] = 5] = "TypeKeywords";
    })(a || (a = {}));
    var o;
    (function(e) {
     e[e["Continue"] = 0] = "Continue";
     e[e["Success"] = 1] = "Success";
     e[e["Fail"] = 2] = "Fail";
    })(o || (o = {}));
    function s(n, r, i, a, o, s, p) {
     var m = r.getTypeChecker();
     var _ = r.getCompilerOptions();
     if (e.isInReferenceComment(a, o)) {
      var g = t.PathCompletions.getTripleSlashReferenceCompletion(a, o, _, n);
      return g && u(g);
     }
     var h = e.findPrecedingToken(o, a);
     if (p && !ce(a, p, h, o)) return undefined;
     if (e.isInString(a, o, h)) {
      return !h || !e.isStringLiteralLike(h) ? undefined : c(D(a, h, o, m, _, n), a, m, i, s);
     }
     if (h && e.isBreakOrContinueStatement(h.parent) && (h.kind === 72 || h.kind === 77 || h.kind === 71)) {
      return S(h.parent);
     }
     var v = H(r, i, a, d(a, _), o, s, undefined);
     if (!v) {
      return undefined;
     }
     switch (v.kind) {
     case 0:
      return f(a, m, _, i, v, s);

     case 1:
      return l(e.JsDoc.getJSDocTagNameCompletions());

     case 2:
      return l(e.JsDoc.getJSDocTagCompletions());

     case 3:
      return l(e.JsDoc.getJSDocParameterNameCompletions(v.tag));

     default:
      return e.Debug.assertNever(v);
     }
    }
    t.getCompletionsAtPosition = s;
    function c(t, n, r, i, a) {
     if (t === undefined) {
      return undefined;
     }
     switch (t.kind) {
     case 0:
      return u(t.paths);

     case 1:
      {
       var o = [];
       k(t.symbols, o, n, n, r, 6, i, 4, a);
       return {
        isGlobalCompletion: false,
        isMemberCompletion: true,
        isNewIdentifierLocation: t.hasIndexSignature,
        entries: o
       };
      }

     case 2:
      {
       var o = t.types.map(function(e) {
        return {
         name: e.value,
         kindModifiers: "",
         kind: "string",
         sortText: "0"
        };
       });
       return {
        isGlobalCompletion: false,
        isMemberCompletion: false,
        isNewIdentifierLocation: t.isNewIdentifier,
        entries: o
       };
      }

     default:
      return e.Debug.assertNever(t);
     }
    }
    function u(e) {
     var t = false;
     var n = true;
     var r = e.map(function(e) {
      var t = e.name, n = e.kind, r = e.span;
      return {
       name: t,
       kind: n,
       kindModifiers: "",
       sortText: "0",
       replacementSpan: r
      };
     });
     return {
      isGlobalCompletion: t,
      isMemberCompletion: false,
      isNewIdentifierLocation: n,
      entries: r
     };
    }
    function l(e) {
     return {
      isGlobalCompletion: false,
      isMemberCompletion: false,
      isNewIdentifierLocation: false,
      entries: e
     };
    }
    function f(t, n, r, i, a, o) {
     var s = a.symbols, c = a.completionKind, u = a.isInSnippetScope, l = a.isNewIdentifierLocation, f = a.location, _ = a.propertyAccessToConvert, h = a.keywordFilters, v = a.literals, y = a.symbolToOriginInfoMap, b = a.recommendedCompletion, x = a.isJsxInitializer;
     if (f && f.parent && e.isJsxClosingElement(f.parent)) {
      var S = f.parent.parent.openingElement.tagName;
      var w = !!e.findChildOfKind(f.parent, 29, t);
      var C = {
       name: S.getFullText(t) + (w ? "" : ">"),
       kind: "class",
       kindModifiers: undefined,
       sortText: "0"
      };
      return {
       isGlobalCompletion: false,
       isMemberCompletion: true,
       isNewIdentifierLocation: false,
       entries: [ C ]
      };
     }
     var D = [];
     if (d(t, r)) {
      var T = k(s, D, f, t, n, r.target, i, c, o, _, x, b, y);
      m(t, f.pos, T, r.target, D);
     } else {
      if ((!s || s.length === 0) && h === 0) {
       return undefined;
      }
      k(s, D, f, t, n, r.target, i, c, o, _, x, b, y);
     }
     var E = p(c);
     if (h !== 0 || !E) {
      e.addRange(D, Q(h));
     }
     for (var N = 0, A = v; N < A.length; N++) {
      var F = A[N];
      D.push(g(F));
     }
     return {
      isGlobalCompletion: u,
      isMemberCompletion: E,
      isNewIdentifierLocation: l,
      entries: D
     };
    }
    function d(t, n) {
     return e.isSourceFileJavaScript(t) && !e.isCheckJsEnabledForFile(t, n);
    }
    function p(e) {
     switch (e) {
     case 0:
     case 3:
     case 2:
      return true;

     default:
      return false;
     }
    }
    function m(t, n, r, i, a) {
     e.getNameTable(t).forEach(function(t, o) {
      if (t === n) {
       return;
      }
      var s = e.unescapeLeadingUnderscores(o);
      if (e.addToSeen(r, s) && e.isIdentifierText(s, i) && !e.isStringANonContextualKeyword(s)) {
       a.push({
        name: s,
        kind: "warning",
        kindModifiers: "",
        sortText: "1"
       });
      }
     });
    }
    var _ = JSON.stringify;
    function g(e) {
     return {
      name: _(e),
      kind: "string",
      kindModifiers: "",
      sortText: "0"
     };
    }
    function h(t, n, a, o, s, c, u, l, f, d, p) {
     var m = G(t, s, u, c);
     if (!m) {
      return undefined;
     }
     var _ = m.name, g = m.needsConvertPropertyAccess;
     var h;
     var k;
     if (u && u.kind === 0) {
      h = g ? "this[" + v(_, p) + "]" : "this." + _;
     } else if ((u && r(u) || g) && f) {
      h = g ? "[" + v(_, p) + "]" : "[" + _ + "]";
      var S = e.findChildOfKind(f, 23, a);
      var w = e.startsWith(_, f.name.text) ? f.name.end : S.end;
      k = e.createTextSpanFromBounds(S.getStart(a), w);
     }
     if (d) {
      if (h === undefined) h = _;
      h = "{" + h + "}";
      if (typeof d !== "boolean") {
       k = e.createTextSpanFromNode(d, a);
      }
     }
     if (h !== undefined && !p.includeCompletionsWithInsertText) {
      return undefined;
     }
     return {
      name: _,
      kind: e.SymbolDisplay.getSymbolKind(o, t, n),
      kindModifiers: e.SymbolDisplay.getSymbolModifiers(t),
      sortText: "0",
      source: x(u),
      hasAction: b(!!u && i(u)),
      isRecommended: b(y(t, l, o)),
      insertText: h,
      replacementSpan: k
     };
    }
    function v(t, n) {
     var r = JSON.stringify(t);
     switch (n.quotePreference) {
     case undefined:
     case "double":
      return r;

     case "single":
      return "'" + e.stripQuotes(r).replace("'", "\\'").replace('\\"', '"') + "'";

     default:
      return e.Debug.assertNever(n.quotePreference);
     }
    }
    function y(e, t, n) {
     return e === t || !!(e.flags & 1048576) && n.getExportSymbolOfSymbol(e) === t;
    }
    function b(e) {
     return e ? true : undefined;
    }
    function x(t) {
     return t && i(t) ? e.stripQuotes(t.moduleSymbol.name) : undefined;
    }
    function k(t, n, r, i, a, o, s, c, u, l, f, d, p) {
     var m = e.timestamp();
     var _ = e.createMap();
     for (var g = 0, v = t; g < v.length; g++) {
      var y = v[g];
      var b = p ? p[e.getSymbolId(y)] : undefined;
      var x = h(y, r, i, a, o, c, b, d, l, f, u);
      if (!x) {
       continue;
      }
      var k = x.name;
      if (_.has(k)) {
       continue;
      }
      if (!b && !(y.parent === undefined && !e.some(y.declarations, function(e) {
       return e.getSourceFile() === r.getSourceFile();
      }))) {
       _.set(k, true);
      }
      n.push(x);
     }
     s("getCompletionsAtPosition: getCompletionEntriesFromSymbols: " + (e.timestamp() - m));
     return _;
    }
    function S(e) {
     var t = w(e);
     if (t.length) {
      return {
       isGlobalCompletion: false,
       isMemberCompletion: false,
       isNewIdentifierLocation: false,
       entries: t
      };
     }
    }
    function w(t) {
     var n = [];
     var r = e.createMap();
     var i = t;
     while (i) {
      if (e.isFunctionLike(i)) {
       break;
      }
      if (e.isLabeledStatement(i)) {
       var a = i.label.text;
       if (!r.has(a)) {
        r.set(a, true);
        n.push({
         name: a,
         kindModifiers: "",
         kind: "label",
         sortText: "0"
        });
       }
      }
      i = i.parent;
     }
     return n;
    }
    var C;
    (function(e) {
     e[e["Paths"] = 0] = "Paths";
     e[e["Properties"] = 1] = "Properties";
     e[e["Types"] = 2] = "Types";
    })(C || (C = {}));
    function D(n, r, i, a, o, s) {
     switch (r.parent.kind) {
     case 180:
      switch (r.parent.parent.kind) {
      case 162:
       return {
        kind: 2,
        types: N(a.getTypeArgumentConstraint(r.parent)),
        isNewIdentifier: false
       };

      case 178:
       return E(a.getTypeFromTypeNode(r.parent.parent.objectType));

      case 181:
       return {
        kind: 0,
        paths: t.PathCompletions.getStringLiteralCompletionsFromModuleNames(n, r, o, s, a)
       };

      default:
       return undefined;
      }

     case 273:
      if (e.isObjectLiteralExpression(r.parent.parent) && r.parent.name === r) {
       return E(a.getContextualType(r.parent.parent));
      }
      return d();

     case 188:
      {
       var c = r.parent, u = c.expression, l = c.argumentExpression;
       if (r === l) {
        return E(a.getTypeAtLocation(u));
       }
       return undefined;
      }

     case 189:
     case 190:
      if (!e.isRequireCall(r.parent, false) && !e.isImportCall(r.parent)) {
       var f = e.SignatureHelp.getArgumentInfoForCompletions(r, i, n);
       return f ? T(f, a) : d();
      }

     case 247:
     case 253:
     case 257:
      return {
       kind: 0,
       paths: t.PathCompletions.getStringLiteralCompletionsFromModuleNames(n, r, o, s, a)
      };

     default:
      return d();
     }
     function d() {
      return {
       kind: 2,
       types: N(J(r, a)),
       isNewIdentifier: false
      };
     }
    }
    function T(t, n) {
     var r = false;
     var i = e.createMap();
     var a = [];
     n.getResolvedSignature(t.invocation, a, t.argumentCount);
     var o = e.flatMap(a, function(e) {
      if (!e.hasRestParameter && t.argumentCount > e.parameters.length) return;
      var a = n.getParameterType(e, t.argumentIndex);
      r = r || !!(a.flags & 4);
      return N(a, i);
     });
     return {
      kind: 2,
      types: o,
      isNewIdentifier: r
     };
    }
    function E(e) {
     return e && {
      kind: 1,
      symbols: e.getApparentProperties(),
      hasIndexSignature: se(e)
     };
    }
    function N(t, n) {
     if (n === void 0) {
      n = e.createMap();
     }
     if (!t) return e.emptyArray;
     t = e.skipConstraint(t);
     return t.isUnion() ? e.flatMap(t.types, function(e) {
      return N(e, n);
     }) : t.isStringLiteral() && !(t.flags & 512) && e.addToSeen(n, t.value) ? [ t ] : e.emptyArray;
    }
    function A(t, n, r, i, a) {
     var o = t.getCompilerOptions();
     var s = H(t, n, r, d(r, o), i, {
      includeCompletionsForModuleExports: true,
      includeCompletionsWithInsertText: true
     }, a);
     if (!s) {
      return {
       type: "none"
      };
     }
     if (s.kind !== 0) {
      return {
       type: "request",
       request: s
      };
     }
     var c = s.symbols, u = s.literals, l = s.location, f = s.completionKind, p = s.symbolToOriginInfoMap, m = s.previousToken, g = s.isJsxInitializer;
     var h = e.find(u, function(e) {
      return _(e) === a.name;
     });
     if (h !== undefined) return {
      type: "literal",
      literal: h
     };
     return e.firstDefined(c, function(t) {
      var n = p[e.getSymbolId(t)];
      var r = G(t, o.target, n, f);
      return r && r.name === a.name && x(n) === a.source ? {
       type: "symbol",
       symbol: t,
       location: l,
       symbolToOriginInfoMap: p,
       previousToken: m,
       isJsxInitializer: g
      } : undefined;
     }) || {
      type: "none"
     };
    }
    function F(t, n, r) {
     return n && i(n) && n.isDefaultExport && t.escapedName === "default" ? e.firstDefined(t.declarations, function(t) {
      return e.isExportAssignment(t) && e.isIdentifier(t.expression) ? t.expression.text : undefined;
     }) || e.codefix.moduleSymbolToValidIdentifier(n.moduleSymbol, r) : t.name;
    }
    function P(t, n, r, i, a, o, s, c, u) {
     var l = t.getTypeChecker();
     var f = t.getCompilerOptions();
     var d = a.name;
     var p = e.findPrecedingToken(i, r);
     if (e.isInString(r, i, p)) {
      var m = !p || !e.isStringLiteralLike(p) ? undefined : D(r, p, i, l, f, o);
      return m && M(d, p, m, r, l, u);
     }
     var g = A(t, n, r, i, a);
     switch (g.type) {
     case "request":
      {
       var h = g.request;
       switch (h.kind) {
       case 1:
        return e.JsDoc.getJSDocTagNameCompletionDetails(d);

       case 2:
        return e.JsDoc.getJSDocTagCompletionDetails(d);

       case 3:
        return e.JsDoc.getJSDocParameterNameCompletionDetails(d);

       default:
        return e.Debug.assertNever(h);
       }
      }

     case "symbol":
      {
       var v = g.symbol, y = g.location, b = g.symbolToOriginInfoMap, x = g.previousToken;
       var k = R(b, v, t, l, o, f, r, x, s, t.getSourceFiles(), c), S = k.codeActions, w = k.sourceDisplay;
       return O(v, l, r, y, u, S, w);
      }

     case "literal":
      {
       var C = g.literal;
       return I(_(C), "string", typeof C === "string" ? e.SymbolDisplayPartKind.stringLiteral : e.SymbolDisplayPartKind.numericLiteral);
      }

     case "none":
      return X().some(function(e) {
       return e.name === d;
      }) ? I(d, "keyword", e.SymbolDisplayPartKind.keyword) : undefined;

     default:
      e.Debug.assertNever(g);
     }
    }
    t.getCompletionEntryDetails = P;
    function I(t, n, r) {
     return L(t, "", n, [ e.displayPart(t, r) ]);
    }
    function O(t, n, r, i, a, o, s) {
     var c = n.runWithCancellationToken(a, function(n) {
      return e.SymbolDisplay.getSymbolDisplayPartsDocumentationAndSymbolKind(n, t, r, i, i, 7);
     }), u = c.displayParts, l = c.documentation, f = c.symbolKind, d = c.tags;
     return L(t.name, e.SymbolDisplay.getSymbolModifiers(t), f, u, l, d, o, s);
    }
    function M(t, n, r, i, a, o) {
     switch (r.kind) {
     case 0:
      {
       var s = e.find(r.paths, function(e) {
        return e.name === t;
       });
       return s && L(t, "", s.kind, [ e.textPart(t) ]);
      }

     case 1:
      {
       var s = e.find(r.symbols, function(e) {
        return e.name === t;
       });
       return s && O(s, a, i, n, o);
      }

     case 2:
      return e.find(r.types, function(e) {
       return e.value === t;
      }) ? L(t, "", "type", [ e.textPart(t) ]) : undefined;

     default:
      return e.Debug.assertNever(r);
     }
    }
    function L(e, t, n, r, i, a, o, s) {
     return {
      name: e,
      kindModifiers: t,
      kind: n,
      displayParts: r,
      documentation: i,
      tags: a,
      codeActions: o,
      source: s
     };
    }
    function R(t, n, r, a, o, s, c, u, l, f, d) {
     var p = t[e.getSymbolId(n)];
     if (!p || !i(p)) {
      return {
       codeActions: undefined,
       sourceDisplay: undefined
      };
     }
     var m = p.moduleSymbol;
     var _ = a.getMergedSymbol(e.skipAlias(n.exportSymbol || n, a));
     var g = e.codefix.getImportCompletionAction(_, m, c, F(n, p, s.target), o, r, a, f, l, u, d), h = g.moduleSpecifier, v = g.codeAction;
     return {
      sourceDisplay: [ e.textPart(h) ],
      codeActions: [ v ]
     };
    }
    function B(e, t, n, r, i) {
     var a = A(e, t, n, r, i);
     return a.type === "symbol" ? a.symbol : undefined;
    }
    t.getCompletionEntrySymbol = B;
    var z;
    (function(e) {
     e[e["Data"] = 0] = "Data";
     e[e["JsDocTagName"] = 1] = "JsDocTagName";
     e[e["JsDocTag"] = 2] = "JsDocTag";
     e[e["JsDocParameterName"] = 3] = "JsDocParameterName";
    })(z || (z = {}));
    var j;
    (function(e) {
     e[e["ObjectPropertyDeclaration"] = 0] = "ObjectPropertyDeclaration";
     e[e["Global"] = 1] = "Global";
     e[e["PropertyAccess"] = 2] = "PropertyAccess";
     e[e["MemberLike"] = 3] = "MemberLike";
     e[e["String"] = 4] = "String";
     e[e["None"] = 5] = "None";
    })(j || (j = {}));
    function q(t, n, r) {
     return e.firstDefined(n && (n.isUnion() ? n.types : [ n ]), function(n) {
      var i = n && n.symbol;
      return i && (i.flags & (8 | 384 | 32) && !e.isAbstractConstructorSymbol(i)) ? V(i, t, r) : undefined;
     });
    }
    function U(t, n, r, i) {
     var a = t.parent;
     switch (t.kind) {
     case 71:
      return J(t, i);

     case 58:
      switch (a.kind) {
      case 235:
       return i.getContextualType(a.initializer);

      case 202:
       return i.getTypeAtLocation(a.left);

      case 265:
       return i.getContextualTypeForJsxAttribute(a);

      default:
       return undefined;
      }

     case 94:
      return i.getContextualType(a);

     case 73:
      return K(e.cast(a, e.isCaseClause), i);

     case 17:
      return e.isJsxExpression(a) && a.parent.kind !== 258 ? i.getContextualTypeForJsxAttribute(a.parent) : undefined;

     default:
      var o = e.SignatureHelp.getArgumentInfoForCompletions(t, n, r);
      return o ? i.getContextualTypeForArgumentAtIndex(o.invocation, o.argumentIndex + (t.kind === 26 ? 1 : 0)) : te(t.kind) && e.isBinaryExpression(a) && te(a.operatorToken.kind) ? i.getTypeAtLocation(a.left) : i.getContextualType(t);
     }
    }
    function J(e, t) {
     var n = e.parent;
     switch (n.kind) {
     case 190:
      return t.getContextualType(n);

     case 202:
      {
       var r = n, i = r.left, a = r.operatorToken, o = r.right;
       return te(a.kind) ? t.getTypeAtLocation(e === o ? i : o) : t.getContextualType(e);
      }

     case 269:
      return n.expression === e ? K(n, t) : undefined;

     default:
      return t.getContextualType(e);
     }
    }
    function K(e, t) {
     return t.getTypeAtLocation(e.parent.parent.expression);
    }
    function V(t, n, r) {
     var i = r.getAccessibleSymbolChain(t, n, 67108863, false);
     if (i) return e.first(i);
     return t.parent && (W(t.parent) ? t : V(t.parent, n, r));
    }
    function W(e) {
     return e.declarations.some(function(e) {
      return e.kind === 277;
     });
    }
    function H(t, n, r, i, a, o, s) {
     var c = t.getTypeChecker();
     var u = e.timestamp();
     var l = e.getTokenAtPosition(r, a);
     n("getCompletionData: Get current token: " + (e.timestamp() - u));
     u = e.timestamp();
     var f = e.isInComment(r, a, l);
     n("getCompletionData: Is inside comment: " + (e.timestamp() - u));
     var d = false;
     var p = false;
     if (f) {
      if (e.hasDocComment(r, a)) {
       if (r.text.charCodeAt(a - 1) === 64) {
        return {
         kind: 1
        };
       } else {
        var m = e.getLineStartPositionForPosition(a, r);
        if (!r.text.substring(m, a).match(/[^\*|\s|(/\*\*)]/)) {
         return {
          kind: 2
         };
        }
       }
      }
      var _ = ne(l, a);
      if (_) {
       if (_.tagName.pos <= a && a <= _.tagName.end) {
        return {
         kind: 1
        };
       }
       if (j(_) && _.typeExpression && _.typeExpression.kind === 281) {
        l = e.getTokenAtPosition(r, a);
        if (!l || !e.isDeclarationName(l) && (l.parent.kind !== 302 || l.parent.name !== l)) {
         d = Oe(_.typeExpression);
        }
       }
       if (e.isJSDocParameterTag(_) && (e.nodeIsMissing(_.name) || _.name.pos <= a && a <= _.name.end)) {
        return {
         kind: 3,
         tag: _
        };
       }
      }
      if (!d) {
       n("Returning an empty list because completion was inside a regular comment or plain text part of a JsDoc comment.");
       return undefined;
      }
     }
     u = e.timestamp();
     var g = e.findPrecedingToken(a, r, undefined);
     n("getCompletionData: Get previous token 1: " + (e.timestamp() - u));
     var h = g;
     if (h && a <= h.end && (e.isIdentifier(h) || e.isKeyword(h.kind))) {
      var v = e.timestamp();
      h = e.findPrecedingToken(h.getFullStart(), r, undefined);
      n("getCompletionData: Get previous token 2: " + (e.timestamp() - v));
     }
     var y = l;
     var b;
     var x = false;
     var k = false;
     var S = false;
     var w = false;
     var C = e.getTouchingPropertyName(r, a);
     if (h) {
      if (ge(h)) {
       n("Returning an empty list because completion was requested in an invalid position.");
       return undefined;
      }
      var D = h.parent;
      if (h.kind === 23) {
       x = true;
       switch (D.kind) {
       case 187:
        b = D;
        y = b.expression;
        break;

       case 146:
        y = D.left;
        break;

       case 181:
       case 212:
        y = D;
        break;

       default:
        return undefined;
       }
      } else if (r.languageVariant === 1) {
       if (D && D.kind === 187) {
        h = D;
        D = D.parent;
       }
       if (l.parent === C) {
        switch (l.kind) {
        case 29:
         if (l.parent.kind === 258 || l.parent.kind === 260) {
          C = l;
         }
         break;

        case 41:
         if (l.parent.kind === 259) {
          C = l;
         }
         break;
        }
       }
       switch (D.kind) {
       case 261:
        if (h.kind === 41) {
         S = true;
         C = h;
        }
        break;

       case 202:
        if (!ue(D)) {
         break;
        }

       case 259:
       case 258:
       case 260:
        if (h.kind === 27) {
         k = true;
         C = h;
        }
        break;

       case 265:
        switch (g.kind) {
        case 58:
         w = true;
         break;

        case 71:
         if (D !== g.parent && !D.initializer) {
          w = g;
         }
        }
        break;
       }
      }
     }
     var T = e.timestamp();
     var E = 5;
     var N = false;
     var A = 0;
     var P = [];
     var I = [];
     if (x) {
      J();
     } else if (k) {
      var O = e.Debug.assertEachDefined(c.getJsxIntrinsicTagNamesAt(C), "getJsxIntrinsicTagNames() should all be defined");
      G();
      P = O.concat(P);
      E = 3;
     } else if (S) {
      var M = h.parent.parent.openingElement.tagName;
      var L = c.getSymbolAtLocation(M);
      if (L) {
       P = [ L ];
      }
      E = 3;
     } else {
      if (!G()) {
       return undefined;
      }
     }
     n("getCompletionData: Semantic work: " + (e.timestamp() - T));
     var R = g && U(g, a, r, c);
     var B = e.mapDefined(R && (R.isUnion() ? R.types : [ R ]), function(e) {
      return e.isLiteral() ? e.value : undefined;
     });
     var z = g && R && q(g, R, c);
     return {
      kind: 0,
      symbols: P,
      completionKind: E,
      isInSnippetScope: p,
      propertyAccessToConvert: b,
      isNewIdentifierLocation: N,
      location: C,
      keywordFilters: A,
      literals: B,
      symbolToOriginInfoMap: I,
      recommendedCompletion: z,
      previousToken: g,
      isJsxInitializer: w
     };
     function j(e) {
      switch (e.kind) {
      case 296:
      case 302:
      case 297:
      case 299:
      case 301:
       return true;

      default:
       return false;
      }
     }
     function J() {
      E = 2;
      var t = e.isLiteralImportTypeNode(y);
      var n = d || t && !y.isTypeOf || e.isPartOfTypeNode(y.parent);
      var i = e.isInRightSideOfInternalImportEqualsDeclaration(y);
      var a = i || !n && e.isPossiblyTypeArgumentPosition(h, r, c);
      if (e.isEntityName(y) || t) {
       var o = c.getSymbolAtLocation(y);
       if (o) {
        o = e.skipAlias(o, c);
        if (o.flags & (1536 | 384)) {
         var s = e.Debug.assertEachDefined(c.getExportsOfModule(o), "getExportsOfModule() should all be defined");
         var u = function(e) {
          return c.isValidPropertyAccess(t ? y : y.parent, e.name);
         };
         var l = function(e) {
          return de(e);
         };
         var f = a ? function(e) {
          return l(e) || u(e);
         } : n ? l : u;
         for (var p = 0, m = s; p < m.length; p++) {
          var _ = m[p];
          if (f(_)) {
           P.push(_);
          }
         }
         if (!n && o.declarations.some(function(e) {
          return e.kind !== 277 && e.kind !== 242 && e.kind !== 241;
         })) {
          K(c.getTypeOfSymbolAtLocation(o, y));
         }
         return;
        }
       }
      }
      if (e.isMetaProperty(y) && (y.keywordToken === 94 || y.keywordToken === 91)) {
       var g = y.keywordToken === 94 ? "target" : "meta";
       P.push(c.createSymbol(4, e.escapeLeadingUnderscores(g)));
       return;
      }
      if (!n) {
       K(c.getTypeAtLocation(y));
      }
     }
     function K(e) {
      N = !!e.getStringIndexType();
      if (i) {
       P.push.apply(P, ie(e, c));
      } else {
       for (var t = 0, n = e.getApparentProperties(); t < n.length; t++) {
        var r = n[t];
        if (c.isValidPropertyAccessForCompletions(y.kind === 181 ? y : y.parent, e, r)) {
         W(r);
        }
       }
      }
     }
     function W(t) {
      var n = e.firstDefined(t.declarations, function(t) {
       return e.tryCast(e.getNameOfDeclaration(t), e.isComputedPropertyName);
      });
      if (n) {
       var r = H(n.expression);
       var i = r && c.getSymbolAtLocation(r);
       var a = i && V(i, h, c);
       if (a && !I[e.getSymbolId(a)]) {
        P.push(a);
        var o = a.parent;
        I[e.getSymbolId(a)] = !o || !e.isExternalModuleSymbol(o) ? {
         kind: 1
        } : {
         kind: 2,
         moduleSymbol: o,
         isDefaultExport: false
        };
       }
      } else {
       P.push(t);
      }
     }
     function H(t) {
      return e.isIdentifier(t) ? t : e.isPropertyAccessExpression(t) ? H(t.expression) : undefined;
     }
     function G() {
      var e = be() || xe() || $() || ke() || X() || (Q(), 1);
      return e === 1;
     }
     function $() {
      if (!Ce(h)) return 0;
      E = 5;
      N = true;
      A = 3;
      return 1;
     }
     function X() {
      var e = Te(h);
      var t = e && c.getAllAttributesTypeFromJsxOpeningLikeElement(e);
      if (!t) return 0;
      P = Ie(c.getPropertiesOfType(t), e.attributes.properties);
      E = 3;
      N = false;
      return 1;
     }
     function Q() {
      if (De(h)) {
       A = 4;
      }
      E = 1;
      N = ve(h);
      if (g !== h) {
       e.Debug.assert(!!g, "Expected 'contextToken' to be defined when different from 'previousToken'.");
      }
      var n = g !== h ? g.getStart() : a;
      var i = _e(h, n, r) || r;
      p = te(i);
      var s = 67901928 | 67216319 | 1920 | 2097152;
      P = e.Debug.assertEachDefined(c.getSymbolsInScope(i, s), "getSymbolsInScope() should all be defined");
      if (o.includeCompletionsWithInsertText && i.kind !== 277) {
       var u = c.tryGetThisTypeAt(i);
       if (u) {
        for (var l = 0, f = ie(u, c); l < f.length; l++) {
         var d = f[l];
         I[e.getSymbolId(d)] = {
          kind: 0
         };
         P.push(d);
        }
       }
      }
      if (Y()) {
       pe(P, g && e.isIdentifier(g) ? g.text : "", t.getCompilerOptions().target);
      }
      ce(P);
     }
     function Y() {
      if (!o.includeCompletionsForModuleExports) return false;
      if (r.externalModuleIndicator) return true;
      if (r.commonJsModuleIndicator) return false;
      if (e.programContainsEs6Modules(t)) return true;
      if (i) return false;
      return e.compilerOptionsIndicateEs6Modules(t.getCompilerOptions());
     }
     function te(t) {
      switch (t.kind) {
      case 277:
      case 204:
      case 268:
      case 216:
       return true;

      default:
       return e.isStatement(t);
      }
     }
     function ce(t) {
      var n = d || !le(h) && (e.isPartOfTypeNode(C) || fe(h));
      var i = n || !le(h) && e.isPossiblyTypeArgumentPosition(h, r, c);
      if (n) A = 5;
      e.filterMutate(t, function(t) {
       if (!e.isSourceFile(C)) {
        if (e.isExportAssignment(C.parent)) {
         return true;
        }
        t = e.skipAlias(t, c);
        if (e.isInRightSideOfInternalImportEqualsDeclaration(C)) {
         return !!(t.flags & 1920);
        }
        if (i) {
         var r = de(t);
         if (r || n) {
          return r;
         }
        }
       }
       return !!(e.getCombinedLocalAndExportSymbolFlags(t) & 67216319);
      });
     }
     function le(t) {
      return t && t.kind === 103 && (t.parent.kind === 165 || e.isTypeOfExpression(t.parent));
     }
     function fe(t) {
      if (t) {
       var n = t.parent.kind;
       switch (t.kind) {
       case 56:
        return n === 152 || n === 151 || n === 149 || n === 235 || e.isFunctionLikeKind(n);

       case 58:
        return n === 240;

       case 118:
        return n === 210;
       }
      }
      return false;
     }
     function de(t) {
      t = t.exportSymbol || t;
      t = e.skipAlias(t, c);
      if (t.flags & 67901928) {
       return true;
      }
      if (t.flags & 1536) {
       var n = c.getExportsOfModule(t);
       return n.some(de);
      }
      return false;
     }
     function pe(n, i, a) {
      var o = i.toLowerCase();
      var u = e.createMap();
      e.codefix.forEachExternalModuleToImportFrom(c, r, t.getSourceFiles(), function(t) {
       if (s && s.source && e.stripQuotes(t.name) !== s.source) {
        return;
       }
       var r = c.resolveExternalModuleSymbol(t);
       if (!e.addToSeen(u, e.getSymbolId(r))) {
        return;
       }
       for (var i = 0, l = c.getExportsOfModule(t); i < l.length; i++) {
        var f = l[i];
        if (c.getMergedSymbol(f.parent) !== r || e.some(f.declarations, function(t) {
         return e.isExportSpecifier(t) && !!t.parent.parent.moduleSpecifier;
        })) {
         continue;
        }
        var d = f.name === "default";
        if (d) {
         f = e.getLocalSymbolForExportDefault(f) || f;
        }
        var p = {
         kind: 3,
         moduleSymbol: t,
         isDefaultExport: d
        };
        if (s || me(F(f, p, a).toLowerCase(), o)) {
         n.push(f);
         I[e.getSymbolId(f)] = p;
        }
       }
      });
     }
     function me(e, t) {
      if (t.length === 0) {
       return true;
      }
      var n = 0;
      for (var r = 0; r < e.length; r++) {
       if (e.charCodeAt(r) === t.charCodeAt(n)) {
        n++;
        if (n === t.length) {
         return true;
        }
       }
      }
      return false;
     }
     function _e(t, n, r) {
      var i = t;
      while (i && !e.positionBelongsToNode(i, n, r)) {
       i = i.parent;
      }
      return i;
     }
     function ge(t) {
      var r = e.timestamp();
      var i = ye(t) || Ee(t) || Ae(t) || he(t);
      n("getCompletionsAtPosition: isCompletionListBlocker: " + (e.timestamp() - r));
      return i;
     }
     function he(e) {
      if (e.kind === 10) {
       return true;
      }
      if (e.kind === 29 && e.parent) {
       if (e.parent.kind === 260) {
        return true;
       }
       if (e.parent.kind === 261 || e.parent.kind === 259) {
        return !!e.parent.parent && e.parent.parent.kind === 258;
       }
      }
      return false;
     }
     function ve(e) {
      if (e) {
       var t = e.parent.kind;
       switch (e.kind) {
       case 26:
        return t === 189 || t === 155 || t === 190 || t === 185 || t === 202 || t === 163;

       case 19:
        return t === 189 || t === 155 || t === 190 || t === 193 || t === 175;

       case 21:
        return t === 185 || t === 160 || t === 147;

       case 129:
       case 130:
        return true;

       case 23:
        return t === 242;

       case 17:
        return t === 238;

       case 58:
        return t === 235 || t === 202;

       case 14:
        return t === 204;

       case 15:
        return t === 214;

       case 114:
       case 112:
       case 113:
        return t === 152;
       }
       switch (ee(e)) {
       case 114:
       case 113:
       case 112:
        return true;
       }
      }
      return false;
     }
     function ye(t) {
      return (e.isRegularExpressionLiteral(t) || e.isStringTextContainingNode(t)) && (e.rangeContainsPositionExclusive(e.createTextRangeFromSpan(e.createTextSpanFromNode(t)), a) || a === t.end && (!!t.isUnterminated || e.isRegularExpressionLiteral(t)));
     }
     function be() {
      var t = Se(h);
      if (!t) return 0;
      E = 0;
      var n;
      var r;
      if (t.kind === 186) {
       var i = c.getContextualType(t);
       if (!i) return 2;
       N = se(i);
       n = re(i, t, c);
       r = t.properties;
      } else {
       e.Debug.assert(t.kind === 182);
       N = false;
       var a = e.getRootDeclaration(t.parent);
       if (!e.isVariableLike(a)) return e.Debug.fail("Root declaration is not variable-like.");
       var o = e.hasInitializer(a) || e.hasType(a) || a.parent.parent.kind === 225;
       if (!o && a.kind === 149) {
        if (e.isExpression(a.parent)) {
         o = !!c.getContextualType(a.parent);
        } else if (a.parent.kind === 154 || a.parent.kind === 157) {
         o = e.isExpression(a.parent.parent) && !!c.getContextualType(a.parent.parent);
        }
       }
       if (o) {
        var i = c.getTypeAtLocation(t);
        if (!i) return 2;
        n = c.getPropertiesOfType(i).filter(function(t) {
         return !(e.getDeclarationModifierFlagsFromSymbol(t) & 24);
        });
        r = t.elements;
       }
      }
      if (n && n.length > 0) {
       P = Fe(n, e.Debug.assertDefined(r));
      }
      return 1;
     }
     function xe() {
      var t = h && (h.kind === 17 || h.kind === 26) ? e.tryCast(h.parent, e.isNamedImportsOrExports) : undefined;
      if (!t) return 0;
      var n = (t.kind === 250 ? t.parent.parent : t.parent).moduleSpecifier;
      var r = c.getSymbolAtLocation(n);
      if (!r) return 2;
      E = 3;
      N = false;
      var i = c.getExportsAndPropertiesOfModule(r);
      var a = e.arrayToSet(t.elements, function(e) {
       return Oe(e) ? undefined : (e.propertyName || e.name).escapedText;
      });
      P = i.filter(function(e) {
       return e.escapedName !== "default" && !a.get(e.escapedName);
      });
      return 1;
     }
     function ke() {
      var t = ae(r, h, C);
      if (!t) return 0;
      E = 3;
      N = true;
      A = e.isClassLike(t) ? 1 : 2;
      if (!e.isClassLike(t)) return 1;
      var n = h.parent;
      var i = e.isClassElement(n) ? e.getModifierFlags(n) : 0;
      if (h.kind === 71 && !Oe(h)) {
       switch (h.getText()) {
       case "private":
        i = i | 8;
        break;

       case "static":
        i = i | 32;
        break;
       }
      }
      if (!(i & 8)) {
       var a = e.flatMap(e.getAllSuperTypeNodes(t), function(e) {
        var n = c.getTypeAtLocation(e);
        return n && c.getPropertiesOfType(i & 32 ? c.getTypeOfSymbolAtLocation(n.symbol, t) : n);
       });
       P = Pe(a, t.members, i);
      }
      return 1;
     }
     function Se(t) {
      if (t) {
       switch (t.kind) {
       case 17:
       case 26:
        var n = t.parent;
        if (e.isObjectLiteralExpression(n) || e.isObjectBindingPattern(n)) {
         return n;
        }
        break;
       }
      }
      return undefined;
     }
     function we(t) {
      return !!t.parent && e.isParameter(t.parent) && e.isConstructorDeclaration(t.parent.parent) && (e.isParameterPropertyModifier(t.kind) || e.isDeclarationName(t));
     }
     function Ce(t) {
      if (t) {
       var n = t.parent;
       switch (t.kind) {
       case 19:
       case 26:
        return e.isConstructorDeclaration(t.parent) ? t.parent : undefined;

       default:
        if (we(t)) {
         return n.parent;
        }
       }
      }
      return undefined;
     }
     function De(t) {
      if (t) {
       var n;
       var r = e.findAncestor(t.parent, function(t) {
        if (e.isClassLike(t)) {
         return "quit";
        }
        if (e.isFunctionLikeDeclaration(t) && n === t.body) {
         return true;
        }
        n = t;
        return false;
       });
       return r && r;
      }
     }
     function Te(e) {
      if (e) {
       var t = e.parent;
       switch (e.kind) {
       case 28:
       case 41:
       case 71:
       case 187:
       case 266:
       case 265:
       case 267:
        if (t && (t.kind === 259 || t.kind === 260)) {
         return t;
        } else if (t.kind === 265) {
         return t.parent.parent;
        }
        break;

       case 9:
        if (t && (t.kind === 265 || t.kind === 267)) {
         return t.parent.parent;
        }
        break;

       case 18:
        if (t && t.kind === 268 && t.parent && t.parent.kind === 265) {
         return t.parent.parent.parent;
        }
        if (t && t.kind === 267) {
         return t.parent.parent;
        }
        break;
       }
      }
      return undefined;
     }
     function Ee(t) {
      var n = t.parent;
      var r = n.kind;
      switch (t.kind) {
      case 26:
       return r === 235 || r === 236 || r === 217 || r === 241 || Ne(r) || r === 239 || r === 183 || r === 240 || e.isClassLike(n) && !!n.typeParameters && n.typeParameters.end >= t.pos;

      case 23:
       return r === 183;

      case 56:
       return r === 184;

      case 21:
       return r === 183;

      case 19:
       return r === 272 || Ne(r);

      case 17:
       return r === 241;

      case 27:
       return r === 238 || r === 207 || r === 239 || r === 240 || e.isFunctionLikeKind(r);

      case 115:
       return r === 152 && !e.isClassLike(n.parent);

      case 24:
       return r === 149 || !!n.parent && n.parent.kind === 183;

      case 114:
      case 112:
      case 113:
       return r === 149 && !e.isConstructorDeclaration(n.parent);

      case 118:
       return r === 251 || r === 255 || r === 249;

      case 125:
      case 136:
       if (oe(t)) {
        return false;
       }

      case 75:
      case 83:
      case 109:
      case 89:
      case 104:
      case 91:
      case 110:
      case 76:
      case 116:
      case 139:
       return true;
      }
      if (Z(ee(t)) && oe(t)) {
       return false;
      }
      if (we(t)) {
       if (!e.isIdentifier(t) || e.isParameterPropertyModifier(ee(t)) || Oe(t)) {
        return false;
       }
      }
      switch (ee(t)) {
      case 117:
      case 120:
      case 75:
      case 76:
      case 124:
      case 83:
      case 89:
      case 109:
      case 110:
      case 112:
      case 113:
      case 114:
      case 115:
      case 104:
      case 116:
       return true;
      }
      return e.isDeclarationName(t) && !e.isJsxAttribute(t.parent) && !(e.isClassLike(t.parent) && (t !== g || a > g.end));
     }
     function Ne(t) {
      return e.isFunctionLikeKind(t) && t !== 155;
     }
     function Ae(e) {
      if (e.kind === 8) {
       var t = e.getFullText();
       return t.charAt(t.length - 1) === ".";
      }
      return false;
     }
     function Fe(t, n) {
      if (n.length === 0) {
       return t;
      }
      var r = e.createUnderscoreEscapedMap();
      for (var i = 0, a = n; i < a.length; i++) {
       var o = a[i];
       if (o.kind !== 273 && o.kind !== 274 && o.kind !== 184 && o.kind !== 154 && o.kind !== 156 && o.kind !== 157) {
        continue;
       }
       if (Oe(o)) {
        continue;
       }
       var s = void 0;
       if (e.isBindingElement(o) && o.propertyName) {
        if (o.propertyName.kind === 71) {
         s = o.propertyName.escapedText;
        }
       } else {
        var c = e.getNameOfDeclaration(o);
        s = c && e.isPropertyNameLiteral(c) ? e.getEscapedTextOfIdentifierOrLiteral(c) : undefined;
       }
       r.set(s, true);
      }
      return t.filter(function(e) {
       return !r.get(e.escapedName);
      });
     }
     function Pe(t, n, r) {
      var i = e.createUnderscoreEscapedMap();
      for (var a = 0, o = n; a < o.length; a++) {
       var s = o[a];
       if (s.kind !== 152 && s.kind !== 154 && s.kind !== 156 && s.kind !== 157) {
        continue;
       }
       if (Oe(s)) {
        continue;
       }
       if (e.hasModifier(s, 8)) {
        continue;
       }
       if (e.hasModifier(s, 32) !== !!(r & 32)) {
        continue;
       }
       var c = e.getPropertyNameForPropertyNameNode(s.name);
       if (c) {
        i.set(c, true);
       }
      }
      return t.filter(function(t) {
       return !i.has(t.escapedName) && !!t.declarations && !(e.getDeclarationModifierFlagsFromSymbol(t) & 8);
      });
     }
     function Ie(t, n) {
      var r = e.createUnderscoreEscapedMap();
      for (var i = 0, a = n; i < a.length; i++) {
       var o = a[i];
       if (Oe(o)) {
        continue;
       }
       if (o.kind === 265) {
        r.set(o.name.escapedText, true);
       }
      }
      return t.filter(function(e) {
       return !r.get(e.escapedName);
      });
     }
     function Oe(e) {
      return e.getStart(r) <= a && a <= e.getEnd();
     }
    }
    function G(t, n, r, i) {
     var a = F(t, r, n);
     if (a === undefined || t.flags & 1536 && e.startsWithQuote(a) || e.isKnownSymbol(t)) {
      return undefined;
     }
     var o = {
      name: a,
      needsConvertPropertyAccess: false
     };
     if (e.isIdentifierText(a, n)) return o;
     switch (i) {
     case 3:
      return undefined;

     case 0:
      return {
       name: JSON.stringify(a),
       needsConvertPropertyAccess: false
      };

     case 2:
     case 1:
      return a.charCodeAt(0) === 32 ? undefined : {
       name: a,
       needsConvertPropertyAccess: true
      };

     case 5:
     case 4:
      return o;

     default:
      e.Debug.assertNever(i);
     }
    }
    var $ = [];
    var X = e.memoize(function() {
     var t = [];
     for (var n = 72; n <= 145; n++) {
      t.push({
       name: e.tokenToString(n),
       kind: "keyword",
       kindModifiers: "",
       sortText: "0"
      });
     }
     return t;
    });
    function Q(t) {
     return $[t] || ($[t] = X().filter(function(n) {
      var r = e.stringToToken(n.name);
      switch (t) {
      case 0:
       return r !== 140;

      case 1:
       return Z(r);

      case 2:
       return Y(r);

      case 3:
       return e.isParameterPropertyModifier(r);

      case 4:
       return !Z(r);

      case 5:
       return e.isTypeKeyword(r);

      default:
       return e.Debug.assertNever(t);
      }
     }));
    }
    function Y(e) {
     return e === 132;
    }
    function Z(t) {
     switch (t) {
     case 117:
     case 123:
     case 125:
     case 136:
     case 120:
      return true;

     default:
      return e.isClassMemberModifier(t);
     }
    }
    function ee(t) {
     return e.isIdentifier(t) ? t.originalKeywordKind || 0 : t.kind;
    }
    function te(e) {
     switch (e) {
     case 34:
     case 32:
     case 35:
     case 33:
      return true;

     default:
      return false;
     }
    }
    function ne(t, n) {
     var r = e.findAncestor(t, e.isJSDoc);
     return r && r.tags && (e.rangeContainsPosition(r, n) ? e.findLast(r.tags, function(e) {
      return e.pos < n;
     }) : undefined);
    }
    function re(t, n, r) {
     return t.isUnion() ? r.getAllPossiblePropertiesOfTypes(t.types.filter(function(t) {
      return !(t.flags & 32764 || r.isArrayLikeType(t) || e.typeHasCallOrConstructSignatures(t, r) || r.isTypeInvalidDueToUnionDiscriminant(t, n));
     })) : t.getApparentProperties();
    }
    function ie(t, n) {
     return t.isUnion() ? e.Debug.assertEachDefined(n.getAllPossiblePropertiesOfTypes(t.types), "getAllPossiblePropertiesOfTypes() should all be defined") : e.Debug.assertEachDefined(t.getApparentProperties(), "getApparentProperties() should all be defined");
    }
    function ae(t, n, r) {
     switch (r.kind) {
     case 303:
      return e.tryCast(r.parent, e.isObjectTypeDeclaration);

     case 1:
      var i = e.tryCast(e.lastOrUndefined(e.cast(r.parent, e.isSourceFile).statements), e.isObjectTypeDeclaration);
      if (i && !e.findChildOfKind(i, 18, t)) {
       return i;
      }
     }
     if (!n) return undefined;
     switch (n.kind) {
     case 25:
     case 18:
      return oe(r) && r.parent.name === r ? r.parent.parent : e.tryCast(r, e.isObjectTypeDeclaration);

     case 17:
     case 26:
      return e.tryCast(n.parent, e.isObjectTypeDeclaration);

     default:
      if (!oe(n)) return undefined;
      var a = e.isClassLike(n.parent.parent) ? Z : Y;
      return a(n.kind) || e.isIdentifier(n) && a(e.stringToToken(n.text)) ? n.parent.parent : undefined;
     }
    }
    function oe(t) {
     return t.parent && e.isClassOrTypeElement(t.parent) && e.isObjectTypeDeclaration(t.parent.parent);
    }
    function se(e) {
     return !!e.getStringIndexType() || !!e.getNumberIndexType();
    }
    function ce(t, n, r, i) {
     switch (n) {
     case ".":
     case "@":
      return true;

     case '"':
     case "'":
     case "`":
      return le(r) && i === r.getStart(t) + 1;

     case "<":
      return r.kind === 27 && (!e.isBinaryExpression(r.parent) || ue(r.parent));

     case "/":
      return e.isStringLiteralLike(r) ? !!e.tryGetImportFromModuleSpecifier(r) : r.kind === 41 && e.isJsxClosingElement(r.parent);

     default:
      return e.Debug.assertNever(n);
     }
    }
    function ue(t) {
     var n = t.left;
     return e.nodeIsMissing(n);
    }
    function le(e) {
     switch (e.kind) {
     case 9:
     case 13:
     case 204:
     case 191:
      return true;

     default:
      return false;
     }
    }
   })(t = e.Completions || (e.Completions = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    function n(t, n, o, s, c) {
     var u = e.getTouchingPropertyName(o, s);
     if (u.parent && (e.isJsxOpeningElement(u.parent) && u.parent.tagName === u || e.isJsxClosingElement(u.parent))) {
      var l = u.parent.parent, f = l.openingElement, d = l.closingElement;
      var p = [ f, d ].map(function(e) {
       var t = e.tagName;
       return r(t, o);
      });
      return [ {
       fileName: o.fileName,
       highlightSpans: p
      } ];
     }
     return i(s, u, t, n, c) || a(u, o);
    }
    t.getDocumentHighlights = n;
    function r(t, n) {
     return {
      fileName: n.fileName,
      textSpan: e.createTextSpanFromNode(t, n),
      kind: "none"
     };
    }
    function i(t, n, r, i, a) {
     var o = e.arrayToSet(a, function(e) {
      return e.fileName;
     });
     var s = e.FindAllReferences.getReferenceEntriesForNode(t, n, r, a, i, undefined, o);
     if (!s) return undefined;
     var c = e.arrayToMultiMap(s.map(e.FindAllReferences.toHighlightSpan), function(e) {
      return e.fileName;
     }, function(e) {
      return e.span;
     });
     return e.arrayFrom(c.entries(), function(t) {
      var n = t[0], i = t[1];
      if (!o.has(n)) {
       e.Debug.assert(r.redirectTargetsSet.has(n));
       var s = r.getSourceFile(n);
       var c = e.find(a, function(e) {
        return !!e.redirectInfo && e.redirectInfo.redirectTarget === s;
       });
       n = c.fileName;
       e.Debug.assert(o.has(n));
      }
      return {
       fileName: n,
       highlightSpans: i
      };
     });
    }
    function a(e, t) {
     var n = o(e, t);
     return n && [ {
      fileName: t.fileName,
      highlightSpans: n
     } ];
    }
    function o(t, n) {
     switch (t.kind) {
     case 90:
     case 82:
      return e.isIfStatement(t.parent) ? C(t.parent, n) : undefined;

     case 96:
      return o(t.parent, e.isReturnStatement, x);

     case 100:
      return o(t.parent, e.isThrowStatement, b);

     case 102:
     case 74:
     case 87:
      var i = t.kind === 74 ? t.parent.parent : t.parent;
      return o(i, e.isTryStatement, y);

     case 98:
      return o(t.parent, e.isSwitchStatement, v);

     case 73:
     case 79:
      return o(t.parent.parent.parent, e.isSwitchStatement, v);

     case 72:
     case 77:
      return o(t.parent, e.isBreakOrContinueStatement, h);

     case 88:
     case 106:
     case 81:
      return o(t.parent, function(t) {
       return e.isIterationStatement(t, true);
      }, g);

     case 123:
      return a(e.isConstructorDeclaration, [ 123 ]);

     case 125:
     case 136:
      return a(e.isAccessor, [ 125, 136 ]);

     case 121:
      return o(t.parent, e.isAwaitExpression, k);

     case 120:
      return s(k(t));

     case 116:
      return s(S(t));

     default:
      return e.isModifierKind(t.kind) && (e.isDeclaration(t.parent) || e.isVariableStatement(t.parent)) ? s(p(t.kind, t.parent)) : undefined;
     }
     function a(r, i) {
      return o(t.parent, r, function(t) {
       return e.mapDefined(t.symbol.declarations, function(t) {
        return r(t) ? e.find(t.getChildren(n), function(t) {
         return e.contains(i, t.kind);
        }) : undefined;
       });
      });
     }
     function o(e, t, r) {
      return t(e) ? s(r(e, n)) : undefined;
     }
     function s(e) {
      return e && e.map(function(e) {
       return r(e, n);
      });
     }
    }
    function s(t) {
     if (e.isThrowStatement(t)) {
      return [ t ];
     } else if (e.isTryStatement(t)) {
      return e.concatenate(t.catchClause ? s(t.catchClause) : t.tryBlock && s(t.tryBlock), t.finallyBlock && s(t.finallyBlock));
     }
     return e.isFunctionLike(t) ? undefined : l(t, s);
    }
    function c(t) {
     var n = t;
     while (n.parent) {
      var r = n.parent;
      if (e.isFunctionBlock(r) || r.kind === 277) {
       return r;
      }
      if (e.isTryStatement(r) && r.tryBlock === n && r.catchClause) {
       return n;
      }
      n = r;
     }
     return undefined;
    }
    function u(t) {
     return e.isBreakOrContinueStatement(t) ? [ t ] : e.isFunctionLike(t) ? undefined : l(t, u);
    }
    function l(t, n) {
     var r = [];
     t.forEachChild(function(t) {
      var i = n(t);
      if (i !== undefined) {
       r.push.apply(r, e.toArray(i));
      }
     });
     return r;
    }
    function f(e, t) {
     var n = d(t);
     return !!n && n === e;
    }
    function d(t) {
     return e.findAncestor(t, function(n) {
      switch (n.kind) {
      case 230:
       if (t.kind === 226) {
        return false;
       }

      case 223:
      case 224:
      case 225:
      case 222:
      case 221:
       return !t.label || T(n, t.label.escapedText);

      default:
       return e.isFunctionLike(n) && "quit";
      }
     });
    }
    function p(t, n) {
     return e.mapDefined(m(n, e.modifierToFlag(t)), function(n) {
      return e.findModifier(n, t);
     });
    }
    function m(t, n) {
     var r = t.parent;
     switch (r.kind) {
     case 243:
     case 277:
     case 216:
     case 269:
     case 270:
      if (n & 128 && e.isClassDeclaration(t)) {
       return t.members.concat([ t ]);
      } else {
       return r.statements;
      }

     case 155:
     case 154:
     case 237:
      return r.parameters.concat(e.isClassLike(r.parent) ? r.parent.members : []);

     case 238:
     case 207:
      var i = r.members;
      if (n & 28) {
       var a = e.find(r.members, e.isConstructorDeclaration);
       if (a) {
        return i.concat(a.parameters);
       }
      } else if (n & 128) {
       return i.concat([ r ]);
      }
      return i;

     default:
      e.Debug.assertNever(r, "Invalid container kind.");
     }
    }
    function _(t, n) {
     var r = [];
     for (var i = 2; i < arguments.length; i++) {
      r[i - 2] = arguments[i];
     }
     if (n && e.contains(r, n.kind)) {
      t.push(n);
      return true;
     }
     return false;
    }
    function g(t) {
     var n = [];
     if (_(n, t.getFirstToken(), 88, 106, 81)) {
      if (t.kind === 221) {
       var r = t.getChildren();
       for (var i = r.length - 1; i >= 0; i--) {
        if (_(n, r[i], 106)) {
         break;
        }
       }
      }
     }
     e.forEach(u(t.statement), function(e) {
      if (f(t, e)) {
       _(n, e.getFirstToken(), 72, 77);
      }
     });
     return n;
    }
    function h(e) {
     var t = d(e);
     if (t) {
      switch (t.kind) {
      case 223:
      case 224:
      case 225:
      case 221:
      case 222:
       return g(t);

      case 230:
       return v(t);
      }
     }
     return undefined;
    }
    function v(t) {
     var n = [];
     _(n, t.getFirstToken(), 98);
     e.forEach(t.caseBlock.clauses, function(r) {
      _(n, r.getFirstToken(), 73, 79);
      e.forEach(u(r), function(e) {
       if (f(t, e)) {
        _(n, e.getFirstToken(), 72);
       }
      });
     });
     return n;
    }
    function y(t, n) {
     var r = [];
     _(r, t.getFirstToken(), 102);
     if (t.catchClause) {
      _(r, t.catchClause.getFirstToken(), 74);
     }
     if (t.finallyBlock) {
      var i = e.findChildOfKind(t, 87, n);
      _(r, i, 87);
     }
     return r;
    }
    function b(t, n) {
     var r = c(t);
     if (!r) {
      return undefined;
     }
     var i = [];
     e.forEach(s(r), function(t) {
      i.push(e.findChildOfKind(t, 100, n));
     });
     if (e.isFunctionBlock(r)) {
      e.forEachReturnStatement(r, function(t) {
       i.push(e.findChildOfKind(t, 96, n));
      });
     }
     return i;
    }
    function x(t, n) {
     var r = e.getContainingFunction(t);
     if (!r) {
      return undefined;
     }
     var i = [];
     e.forEachReturnStatement(e.cast(r.body, e.isBlock), function(t) {
      i.push(e.findChildOfKind(t, 96, n));
     });
     e.forEach(s(r.body), function(t) {
      i.push(e.findChildOfKind(t, 100, n));
     });
     return i;
    }
    function k(t) {
     var n = e.getContainingFunction(t);
     if (!n) {
      return undefined;
     }
     var r = [];
     if (n.modifiers) {
      n.modifiers.forEach(function(e) {
       _(r, e, 120);
      });
     }
     e.forEachChild(n, function(t) {
      w(t, function(t) {
       if (e.isAwaitExpression(t)) {
        _(r, t.getFirstToken(), 121);
       }
      });
     });
     return r;
    }
    function S(t) {
     var n = e.getContainingFunction(t);
     if (!n) {
      return undefined;
     }
     var r = [];
     e.forEachChild(n, function(t) {
      w(t, function(t) {
       if (e.isYieldExpression(t)) {
        _(r, t.getFirstToken(), 116);
       }
      });
     });
     return r;
    }
    function w(t, n) {
     n(t);
     if (!e.isFunctionLike(t) && !e.isClassLike(t) && !e.isInterfaceDeclaration(t) && !e.isModuleDeclaration(t) && !e.isTypeAliasDeclaration(t) && !e.isTypeNode(t)) {
      e.forEachChild(t, function(e) {
       return w(e, n);
      });
     }
    }
    function C(t, n) {
     var i = D(t, n);
     var a = [];
     for (var o = 0; o < i.length; o++) {
      if (i[o].kind === 82 && o < i.length - 1) {
       var s = i[o];
       var c = i[o + 1];
       var u = true;
       for (var l = c.getStart(n) - 1; l >= s.end; l--) {
        if (!e.isWhiteSpaceSingleLine(n.text.charCodeAt(l))) {
         u = false;
         break;
        }
       }
       if (u) {
        a.push({
         fileName: n.fileName,
         textSpan: e.createTextSpanFromBounds(s.getStart(), c.end),
         kind: "reference"
        });
        o++;
        continue;
       }
      }
      a.push(r(i[o], n));
     }
     return a;
    }
    function D(t, n) {
     var r = [];
     while (e.isIfStatement(t.parent) && t.parent.elseStatement === t) {
      t = t.parent;
     }
     while (true) {
      var i = t.getChildren(n);
      _(r, i[0], 90);
      for (var a = i.length - 1; a >= 0; a--) {
       if (_(r, i[a], 82)) {
        break;
       }
      }
      if (!t.elseStatement || !e.isIfStatement(t.elseStatement)) {
       break;
      }
      t = t.elseStatement;
     }
     return r;
    }
    function T(t, n) {
     return !!e.findAncestor(t.parent, function(t) {
      return !e.isLabeledStatement(t) ? "quit" : t.label.escapedText === n;
     });
    }
   })(t = e.DocumentHighlights || (e.DocumentHighlights = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   function t(e, t) {
    return n(e, t);
   }
   e.createDocumentRegistry = t;
   function n(t, n, r) {
    if (n === void 0) {
     n = "";
    }
    var i = e.createMap();
    var a = e.createGetCanonicalFileName(!!t);
    function o(e) {
     return "_" + e.target + "|" + e.module + "|" + e.noResolve + "|" + e.jsx + "|" + e.allowJs + "|" + e.baseUrl + "|" + JSON.stringify(e.typeRoots) + "|" + JSON.stringify(e.rootDirs) + "|" + JSON.stringify(e.paths);
    }
    function s(t, n) {
     var r = i.get(t);
     if (!r && n) {
      i.set(t, r = e.createMap());
     }
     return r;
    }
    function c() {
     var t = e.arrayFrom(i.keys()).filter(function(e) {
      return e && e.charAt(0) === "_";
     }).map(function(e) {
      var t = i.get(e);
      var n = [];
      t.forEach(function(e, t) {
       n.push({
        name: t,
        refCount: e.languageServiceRefCount
       });
      });
      n.sort(function(e, t) {
       return t.refCount - e.refCount;
      });
      return {
       bucket: e,
       sourceFiles: n
      };
     });
     return JSON.stringify(t, undefined, 2);
    }
    function u(t, r, i, s, c) {
     var u = e.toPath(t, n, a);
     var f = o(r);
     return l(t, u, r, f, i, s, c);
    }
    function l(e, t, n, r, i, a, o) {
     return p(e, t, n, r, i, a, true, o);
    }
    function f(t, r, i, s, c) {
     var u = e.toPath(t, n, a);
     var l = o(r);
     return d(t, u, r, l, i, s, c);
    }
    function d(e, t, n, r, i, a, o) {
     return p(e, t, n, r, i, a, false, o);
    }
    function p(t, n, i, a, o, c, u, l) {
     var f = s(a, true);
     var d = f.get(n);
     var p = l === 6 ? 100 : i.target;
     if (!d && r) {
      var m = r.getDocument(a, n);
      if (m) {
       e.Debug.assert(u);
       d = {
        sourceFile: m,
        languageServiceRefCount: 0
       };
       f.set(n, d);
      }
     }
     if (!d) {
      var m = e.createLanguageServiceSourceFile(t, o, p, c, false, l);
      if (r) {
       r.setDocument(a, n, m);
      }
      d = {
       sourceFile: m,
       languageServiceRefCount: 1
      };
      f.set(n, d);
     } else {
      if (d.sourceFile.version !== c) {
       d.sourceFile = e.updateLanguageServiceSourceFile(d.sourceFile, o, c, o.getChangeRange(d.sourceFile.scriptSnapshot));
       if (r) {
        r.setDocument(a, n, d.sourceFile);
       }
      }
      if (u) {
       d.languageServiceRefCount++;
      }
     }
     e.Debug.assert(d.languageServiceRefCount !== 0);
     return d.sourceFile;
    }
    function m(t, r) {
     var i = e.toPath(t, n, a);
     var s = o(r);
     return _(i, s);
    }
    function _(t, n) {
     var r = s(n, false);
     e.Debug.assert(r !== undefined);
     var i = r.get(t);
     i.languageServiceRefCount--;
     e.Debug.assert(i.languageServiceRefCount >= 0);
     if (i.languageServiceRefCount === 0) {
      r.delete(t);
     }
    }
    function g(t) {
     return e.arrayFrom(i.entries(), function(e) {
      var n = e[0], r = e[1];
      var i = r.get(t);
      return [ n, i && i.languageServiceRefCount ];
     });
    }
    return {
     acquireDocument: u,
     acquireDocumentWithKey: l,
     updateDocument: f,
     updateDocumentWithKey: d,
     releaseDocument: m,
     releaseDocumentWithKey: _,
     getLanguageServiceRefCounts: g,
     reportStats: c,
     getKeyForCompilationSettings: o
    };
   }
   e.createDocumentRegistryInternal = n;
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    function n(e, t, n, i) {
     var a = l(e, n, i);
     return function(c, u, l) {
      var f = o(e, t, a, u, n, i), d = f.directImports, p = f.indirectUsers;
      return r({
       indirectUsers: p
      }, s(d, c, u.exportKind, n, l));
     };
    }
    t.createImportTracker = n;
    var i;
    (function(e) {
     e[e["Named"] = 0] = "Named";
     e[e["Default"] = 1] = "Default";
     e[e["ExportEquals"] = 2] = "ExportEquals";
    })(i = t.ExportKind || (t.ExportKind = {}));
    var a;
    (function(e) {
     e[e["Import"] = 0] = "Import";
     e[e["Export"] = 1] = "Export";
    })(a = t.ImportExport || (t.ImportExport = {}));
    function o(t, n, r, i, a, o) {
     var s = i.exportingModuleSymbol, u = i.exportKind;
     var l = e.nodeSeenTracker();
     var f = e.nodeSeenTracker();
     var d = [];
     var p = !!s.globalExports;
     var m = p ? undefined : [];
     g(s);
     return {
      directImports: d,
      indirectUsers: _()
     };
     function _() {
      if (p) {
       return t;
      }
      for (var r = 0, i = s.declarations; r < i.length; r++) {
       var a = i[r];
       if (e.isExternalModuleAugmentation(a) && n.has(a.getSourceFile().fileName)) {
        v(a);
       }
      }
      return m.map(e.getSourceFileOfNode);
     }
     function g(t) {
      var n = k(t);
      if (n) {
       for (var r = 0, i = n; r < i.length; r++) {
        var s = i[r];
        if (!l(s)) {
         continue;
        }
        if (o) o.throwIfCancellationRequested();
        switch (s.kind) {
        case 189:
         if (!p) {
          var c = s.parent;
          if (u === 2 && c.kind === 235) {
           var f = c.name;
           if (f.kind === 71) {
            d.push(f);
            break;
           }
          }
          v(s.getSourceFile());
         }
         break;

        case 71:
         break;

        case 246:
         h(s, s.name, e.hasModifier(s, 1), false);
         break;

        case 247:
         d.push(s);
         var m = s.importClause && s.importClause.namedBindings;
         if (m && m.kind === 249) {
          h(s, m.name, false, true);
         } else if (!p && e.isDefaultImport(s)) {
          v(b(s));
         }
         break;

        case 253:
         if (!s.exportClause) {
          g(y(s, a));
         } else {
          d.push(s);
         }
         break;

        case 181:
         d.push(s);
         break;

        default:
         e.Debug.assertNever(s, "Unexpected import kind: " + e.Debug.showSyntaxKind(s));
        }
       }
      }
     }
     function h(t, n, r, i) {
      if (u === 2) {
       if (!i) d.push(t);
      } else if (!p) {
       var o = b(t);
       e.Debug.assert(o.kind === 277 || o.kind === 242);
       if (r || c(o, n, a)) {
        x(o);
       } else {
        v(o);
       }
      }
     }
     function v(t) {
      e.Debug.assert(!p);
      var n = f(t);
      if (n) {
       m.push(t);
      }
      return n;
     }
     function x(t) {
      if (!v(t)) {
       return;
      }
      var n = a.getMergedSymbol(t.symbol);
      e.Debug.assert(!!(n.flags & 1536));
      var r = k(n);
      if (r) {
       for (var i = 0, o = r; i < o.length; i++) {
        var s = o[i];
        x(b(s));
       }
      }
     }
     function k(t) {
      return r.get(e.getSymbolId(t).toString());
     }
    }
    function s(t, n, r, i, a) {
     var o = [];
     var s = [];
     function c(e, t) {
      o.push([ e, t ]);
     }
     if (t) {
      for (var u = 0, l = t; u < l.length; u++) {
       var f = l[u];
       d(f);
      }
     }
     return {
      importSearches: o,
      singleReferences: s
     };
     function d(t) {
      if (t.kind === 246) {
       if (k(t)) {
        p(t.name);
       }
       return;
      }
      if (t.kind === 71) {
       p(t);
       return;
      }
      if (t.kind === 181) {
       if (t.qualifier) {
        if (e.isIdentifier(t.qualifier) && t.qualifier.escapedText === e.symbolName(n)) {
         s.push(t.qualifier);
        }
       } else if (r === 2) {
        s.push(t.argument.literal);
       }
       return;
      }
      if (t.moduleSpecifier.kind !== 9) {
       return;
      }
      if (t.kind === 253) {
       m(t.exportClause);
       return;
      }
      var o = t.importClause || {
       name: undefined,
       namedBindings: undefined
      }, u = o.name, l = o.namedBindings;
      if (l) {
       switch (l.kind) {
       case 249:
        p(l.name);
        break;

       case 250:
        if (r === 0 || r === 1) {
         m(l);
        }
        break;

       default:
        e.Debug.assertNever(l);
       }
      }
      if (u && (r === 1 || r === 2) && (!a || u.escapedText === e.symbolEscapedNameNoDefault(n))) {
       var f = i.getSymbolAtLocation(u);
       c(u, f);
      }
     }
     function p(e) {
      if (r === 2 && (!a || _(e.escapedText))) {
       c(e, i.getSymbolAtLocation(e));
      }
     }
     function m(e) {
      if (!e) {
       return;
      }
      for (var t = 0, r = e.elements; t < r.length; t++) {
       var o = r[t];
       var u = o.name, l = o.propertyName;
       if (!_((l || u).escapedText)) {
        continue;
       }
       if (l) {
        s.push(l);
        if (!a || u.escapedText === n.escapedName) {
         c(u, i.getSymbolAtLocation(u));
        }
       } else {
        var f = o.kind === 255 && o.propertyName ? i.getExportSpecifierLocalTargetSymbol(o) : i.getSymbolAtLocation(u);
        c(u, f);
       }
      }
     }
     function _(e) {
      return e === n.escapedName || r !== 0 && e === "default";
     }
    }
    function c(t, n, r) {
     var i = r.getSymbolAtLocation(n);
     return !!f(t, function(t) {
      if (!e.isExportDeclaration(t)) return;
      var n = t.exportClause, a = t.moduleSpecifier;
      return !a && n && n.elements.some(function(e) {
       return r.getExportSpecifierLocalTargetSymbol(e) === i;
      });
     });
    }
    function u(e, t, n) {
     var r = [];
     var i = e.getTypeChecker();
     for (var a = 0, o = t; a < o.length; a++) {
      var s = o[a];
      var c = n.valueDeclaration;
      if (c.kind === 277) {
       for (var u = 0, l = s.referencedFiles; u < l.length; u++) {
        var f = l[u];
        if (e.getSourceFileFromReference(s, f) === c) {
         r.push({
          kind: "reference",
          referencingFile: s,
          ref: f
         });
        }
       }
       for (var p = 0, m = s.typeReferenceDirectives; p < m.length; p++) {
        var f = m[p];
        var _ = e.getResolvedTypeReferenceDirectives().get(f.fileName);
        if (_ !== undefined && _.resolvedFileName === c.fileName) {
         r.push({
          kind: "reference",
          referencingFile: s,
          ref: f
         });
        }
       }
      }
      d(s, function(e, t) {
       var a = i.getSymbolAtLocation(t);
       if (a === n) {
        r.push({
         kind: "import",
         literal: t
        });
       }
      });
     }
     return r;
    }
    t.findModuleReferences = u;
    function l(t, n, r) {
     var i = e.createMap();
     for (var a = 0, o = t; a < o.length; a++) {
      var s = o[a];
      if (r) r.throwIfCancellationRequested();
      d(s, function(t, r) {
       var a = n.getSymbolAtLocation(r);
       if (a) {
        var o = e.getSymbolId(a).toString();
        var s = i.get(o);
        if (!s) {
         i.set(o, s = []);
        }
        s.push(t);
       }
      });
     }
     return i;
    }
    function f(t, n) {
     return e.forEach(t.kind === 277 ? t.statements : t.body.statements, function(t) {
      return n(t) || x(t) && e.forEach(t.body && t.body.statements, n);
     });
    }
    function d(t, n) {
     if (t.externalModuleIndicator || t.imports !== undefined) {
      for (var r = 0, i = t.imports; r < i.length; r++) {
       var a = i[r];
       n(e.importFromModuleSpecifier(a), a);
      }
     } else {
      f(t, function(t) {
       switch (t.kind) {
       case 253:
       case 247:
        {
         var r = t;
         if (r.moduleSpecifier && e.isStringLiteral(r.moduleSpecifier)) {
          n(r, r.moduleSpecifier);
         }
         break;
        }

       case 246:
        {
         var r = t;
         if (k(r)) {
          n(r, r.moduleReference.expression);
         }
         break;
        }
       }
      });
     }
    }
    function p(t, n, i, a) {
     return a ? o() : o() || s();
     function o() {
      var r = t.parent;
      var o = r.parent;
      if (n.exportSymbol) {
       if (r.kind === 187) {
        return n.declarations.some(function(e) {
         return e === r;
        }) && e.isBinaryExpression(o) ? d(o, false) : undefined;
       } else {
        return c(n.exportSymbol, u(r));
       }
      } else {
       var s = _(r, t);
       if (s && e.hasModifier(s, 1)) {
        if (e.isImportEqualsDeclaration(s) && s.moduleReference === t) {
         if (a) {
          return undefined;
         }
         var l = i.getSymbolAtLocation(s.name);
         return {
          kind: 0,
          symbol: l,
          isNamedImport: false
         };
        } else {
         return c(n, u(s));
        }
       } else if (e.isExportAssignment(r)) {
        return f(r);
       } else if (e.isExportAssignment(o)) {
        return f(o);
       } else if (e.isBinaryExpression(r)) {
        return d(r, true);
       } else if (e.isBinaryExpression(o)) {
        return d(o, true);
       } else if (e.isJSDocTypedefTag(r)) {
        return c(n, 0);
       }
      }
      function f(t) {
       var r = e.Debug.assertDefined(t.symbol.parent, "Expected export symbol to have a parent");
       var i = t.isExportEquals ? 2 : 1;
       return {
        kind: 1,
        symbol: n,
        exportInfo: {
         exportingModuleSymbol: r,
         exportKind: i
        }
       };
      }
      function d(t, r) {
       var a;
       switch (e.getSpecialPropertyAssignmentKind(t)) {
       case 1:
        a = 0;
        break;

       case 2:
        a = 2;
        break;

       default:
        return undefined;
       }
       var o = r ? i.getSymbolAtLocation(e.cast(t.left, e.isPropertyAccessExpression).name) : n;
       if (o && !(i.getMergedSymbol(o.parent).flags & 1536)) {
        e.Debug.fail("Special property assignment kind does not have a module as its parent. Assignment is " + e.Debug.showSymbol(o) + ", parent is " + e.Debug.showSymbol(o.parent));
       }
       return o && c(o, a);
      }
     }
     function s() {
      var a = g(t);
      if (!a) return undefined;
      var o = i.getImmediateAliasedSymbol(n);
      if (!o) return undefined;
      o = v(o, i);
      if (o.escapedName === "export=") {
       o = m(o, i);
      }
      var s = e.symbolEscapedNameNoDefault(o);
      if (s === undefined || s === "default" || s === n.escapedName) {
       return r({
        kind: 0,
        symbol: o
       }, a);
      }
     }
     function c(e, t) {
      var n = h(e, t, i);
      return n && {
       kind: 1,
       symbol: e,
       exportInfo: n
      };
     }
     function u(t) {
      return e.hasModifier(t, 512) ? 1 : 0;
     }
    }
    t.getImportOrExportSymbol = p;
    function m(t, n) {
     if (t.flags & 2097152) {
      return e.Debug.assertDefined(n.getImmediateAliasedSymbol(t));
     }
     var r = t.valueDeclaration;
     if (e.isExportAssignment(r)) {
      return e.Debug.assertDefined(r.expression.symbol);
     } else if (e.isBinaryExpression(r)) {
      return e.Debug.assertDefined(r.right.symbol);
     } else if (e.isSourceFile(r)) {
      return e.Debug.assertDefined(r.symbol);
     }
     return e.Debug.fail();
    }
    function _(e, t) {
     if (e.kind === 235) {
      var n = e;
      return n.name !== t ? undefined : n.parent.kind === 272 ? undefined : n.parent.parent.kind === 217 ? n.parent.parent : undefined;
     } else {
      return e;
     }
    }
    function g(t) {
     var n = t.parent;
     switch (n.kind) {
     case 246:
      return n.name === t && k(n) ? {
       isNamedImport: false
      } : undefined;

     case 251:
      return n.propertyName ? undefined : {
       isNamedImport: true
      };

     case 248:
     case 249:
      e.Debug.assert(n.name === t);
      return {
       isNamedImport: false
      };

     default:
      return undefined;
     }
    }
    function h(t, n, r) {
     var i = t.parent;
     if (!i) return undefined;
     var a = r.getMergedSymbol(i);
     return e.isExternalModuleSymbol(a) ? {
      exportingModuleSymbol: a,
      exportKind: n
     } : undefined;
    }
    t.getExportInfo = h;
    function v(t, n) {
     if (t.declarations) {
      for (var r = 0, i = t.declarations; r < i.length; r++) {
       var a = i[r];
       if (e.isExportSpecifier(a) && !a.propertyName && !a.parent.parent.moduleSpecifier) {
        return n.getExportSpecifierLocalTargetSymbol(a);
       }
      }
     }
     return t;
    }
    function y(e, t) {
     return t.getMergedSymbol(b(e).symbol);
    }
    function b(t) {
     if (t.kind === 189) {
      return t.getSourceFile();
     }
     var n = t.parent;
     if (n.kind === 277) {
      return n;
     }
     e.Debug.assert(n.kind === 243);
     return e.cast(n.parent, x);
    }
    function x(e) {
     return e.kind === 242 && e.name.kind === 9;
    }
    function k(e) {
     return e.moduleReference.kind === 257 && e.moduleReference.expression.kind === 9;
    }
   })(t = e.FindAllReferences || (e.FindAllReferences = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    function n(e, t) {
     return {
      type: "node",
      node: e.name || e,
      isInString: t
     };
    }
    t.nodeEntry = n;
    function i(n, r, i, a, o) {
     var s = e.getTouchingPropertyName(a, o);
     var c = t.Core.getReferencedSymbolsForNode(o, s, n, i, r);
     var u = n.getTypeChecker();
     return !c || !c.length ? undefined : e.mapDefined(c, function(e) {
      var t = e.definition, n = e.references;
      return t && {
       definition: u.runWithCancellationToken(r, function(e) {
        return l(t, e, s);
       }),
       references: n.map(d)
      };
     });
    }
    t.findReferencedSymbols = i;
    function a(t, n, r, i, a) {
     var s = e.getTouchingPropertyName(i, a);
     var c = o(t, n, r, s, a);
     var u = t.getTypeChecker();
     return e.map(c, function(e) {
      return p(e, u);
     });
    }
    t.getImplementationsAtPosition = a;
    function o(r, i, a, o, s) {
     if (o.kind === 277) {
      return undefined;
     }
     var u = r.getTypeChecker();
     if (o.parent.kind === 274) {
      var l = [];
      t.Core.getReferenceEntriesForShorthandPropertyAssignment(o, u, function(e) {
       return l.push(n(e));
      });
      return l;
     } else if (o.kind === 97 || e.isSuperProperty(o.parent)) {
      var f = u.getSymbolAtLocation(o);
      return f.valueDeclaration && [ n(f.valueDeclaration) ];
     } else {
      return c(s, o, r, a, i, {
       implementations: true
      });
     }
    }
    function s(n, r, i, a, o, s) {
     return e.map(u(t.Core.getReferencedSymbolsForNode(o, a, n, i, r, s)), d);
    }
    t.findReferencedEntries = s;
    function c(n, r, i, a, o, s, c) {
     if (s === void 0) {
      s = {};
     }
     if (c === void 0) {
      c = e.arrayToSet(a, function(e) {
       return e.fileName;
      });
     }
     return u(t.Core.getReferencedSymbolsForNode(n, r, i, a, o, s, c));
    }
    t.getReferenceEntriesForNode = c;
    function u(t) {
     return t && e.flatMap(t, function(e) {
      return e.references;
     });
    }
    function l(t, n, r) {
     var i = function() {
      switch (t.type) {
      case "symbol":
       {
        var i = t.symbol;
        var a = f(i, n, r), o = a.displayParts, s = a.kind;
        var c = o.map(function(e) {
         return e.text;
        }).join("");
        return {
         node: i.declarations ? e.getNameOfDeclaration(e.first(i.declarations)) || e.first(i.declarations) : r,
         name: c,
         kind: s,
         displayParts: o
        };
       }

      case "label":
       {
        var u = t.node;
        return {
         node: u,
         name: u.text,
         kind: "label",
         displayParts: [ e.displayPart(u.text, e.SymbolDisplayPartKind.text) ]
        };
       }

      case "keyword":
       {
        var l = t.node;
        var d = e.tokenToString(l.kind);
        return {
         node: l,
         name: d,
         kind: "keyword",
         displayParts: [ {
          text: d,
          kind: "keyword"
         } ]
        };
       }

      case "this":
       {
        var p = t.node;
        var i = n.getSymbolAtLocation(p);
        var m = i && e.SymbolDisplay.getSymbolDisplayPartsDocumentationAndSymbolKind(n, i, p.getSourceFile(), e.getContainerNode(p), p).displayParts || [ e.textPart("this") ];
        return {
         node: p,
         name: "this",
         kind: "var",
         displayParts: m
        };
       }

      case "string":
       {
        var _ = t.node;
        return {
         node: _,
         name: _.text,
         kind: "var",
         displayParts: [ e.displayPart(e.getTextOfNode(_), e.SymbolDisplayPartKind.stringLiteral) ]
        };
       }

      default:
       return e.Debug.assertNever(t);
      }
     }();
     var a = i.node, o = i.name, s = i.kind, c = i.displayParts;
     var u = a.getSourceFile();
     return {
      containerKind: "",
      containerName: "",
      fileName: u.fileName,
      kind: s,
      name: o,
      textSpan: g(e.isComputedPropertyName(a) ? a.expression : a, u),
      displayParts: c
     };
    }
    function f(n, r, i) {
     var a = t.Core.getIntersectingMeaningFromDeclarations(i, n);
     var o = e.firstOrUndefined(n.declarations) || i;
     var s = e.SymbolDisplay.getSymbolDisplayPartsDocumentationAndSymbolKind(r, n, o.getSourceFile(), o, o, a), c = s.displayParts, u = s.symbolKind;
     return {
      displayParts: c,
      kind: u
     };
    }
    function d(t) {
     if (t.type === "span") {
      return {
       textSpan: t.textSpan,
       fileName: t.fileName,
       isWriteAccess: false,
       isDefinition: false
      };
     }
     var n = t.node, r = t.isInString;
     var i = n.getSourceFile();
     return {
      fileName: i.fileName,
      textSpan: g(n, i),
      isWriteAccess: h(n),
      isDefinition: n.kind === 79 || e.isAnyDeclarationName(n) || e.isLiteralComputedPropertyDeclarationName(n),
      isInString: r
     };
    }
    function p(e, t) {
     if (e.type === "node") {
      var n = e.node;
      var i = n.getSourceFile();
      return r({
       textSpan: g(n, i),
       fileName: i.fileName
      }, m(n, t));
     } else {
      var a = e.textSpan, o = e.fileName;
      return {
       textSpan: a,
       fileName: o,
       kind: "",
       displayParts: []
      };
     }
    }
    function m(t, n) {
     var r = n.getSymbolAtLocation(e.isDeclaration(t) && t.name ? t.name : t);
     if (r) {
      return f(r, n, t);
     } else if (t.kind === 186) {
      return {
       kind: "interface",
       displayParts: [ e.punctuationPart(19), e.textPart("object literal"), e.punctuationPart(20) ]
      };
     } else if (t.kind === 207) {
      return {
       kind: "local class",
       displayParts: [ e.punctuationPart(19), e.textPart("anonymous local class"), e.punctuationPart(20) ]
      };
     } else {
      return {
       kind: e.getNodeKind(t),
       displayParts: []
      };
     }
    }
    function _(e) {
     if (e.type === "span") {
      var t = e.fileName, n = e.textSpan;
      return {
       fileName: t,
       span: {
        textSpan: n,
        kind: "reference"
       }
      };
     }
     var r = e.node, i = e.isInString;
     var a = r.getSourceFile();
     var o = h(r);
     var s = {
      textSpan: g(r, a),
      kind: o ? "writtenReference" : "reference",
      isInString: i
     };
     return {
      fileName: a.fileName,
      span: s
     };
    }
    t.toHighlightSpan = _;
    function g(t, n) {
     var r = t.getStart(n);
     var i = t.getEnd();
     if (t.kind === 9) {
      r += 1;
      i -= 1;
     }
     return e.createTextSpanFromBounds(r, i);
    }
    function h(t) {
     return t.kind === 79 || e.isAnyDeclarationName(t) || e.isWriteAccess(t);
    }
   })(t = e.FindAllReferences || (e.FindAllReferences = {}));
  })(s || (s = {}));
  (function(e) {
   var t;
   (function(t) {
    var n;
    (function(n) {
     function r(t, n, r, c, u, l, f) {
      if (l === void 0) {
       l = {};
      }
      if (f === void 0) {
       f = e.arrayToSet(c, function(e) {
        return e.fileName;
       });
      }
      if (e.isSourceFile(n)) {
       var d = e.GoToDefinition.getReferenceAtPosition(n, t, r);
       var p = d && r.getTypeChecker().getMergedSymbol(d.file.symbol);
       return p && a(r, p, false, c, f);
      }
      if (!l.implementations) {
       var m = o(n, c, u);
       if (m) {
        return m;
       }
      }
      var _ = r.getTypeChecker();
      var g = _.getSymbolAtLocation(n);
      if (!g) {
       return !l.implementations && e.isStringLiteral(n) ? $(n, c, u) : undefined;
      }
      var h = e.emptyArray;
      var v = i(g);
      var y = n;
      if (v) {
       var b = g.exports.get("export=");
       h = a(r, g, !!b, c, f);
       if (!b || !f.has(v.fileName)) return h;
       g = e.skipAlias(b, _);
       y = undefined;
      }
      return e.concatenate(h, s(g, y, c, f, _, u, l));
     }
     n.getReferencedSymbolsForNode = r;
     function i(t) {
      return t.flags & 1536 ? e.find(t.declarations, e.isSourceFile) : undefined;
     }
     function a(n, r, i, a, o) {
      e.Debug.assert(!!r.valueDeclaration);
      var s = e.mapDefined(t.findModuleReferences(n, a, r), function(t) {
       if (t.kind === "import") {
        var n = t.literal.parent;
        if (e.isLiteralTypeNode(n)) {
         var r = e.cast(n.parent, e.isImportTypeNode);
         if (i && !r.qualifier) {
          return undefined;
         }
        }
        return {
         type: "node",
         node: t.literal
        };
       } else {
        return {
         type: "span",
         fileName: t.referencingFile.fileName,
         textSpan: e.createTextSpanFromRange(t.ref)
        };
       }
      });
      for (var c = 0, u = r.declarations; c < u.length; c++) {
       var l = u[c];
       switch (l.kind) {
       case 277:
        break;

       case 242:
        if (o.has(l.getSourceFile().fileName)) {
         s.push({
          type: "node",
          node: l.name
         });
        }
        break;

       default:
        e.Debug.fail("Expected a module symbol to be declared by a SourceFile or ModuleDeclaration.");
       }
      }
      return s.length ? [ {
       definition: {
        type: "symbol",
        symbol: r
       },
       references: s
      } ] : e.emptyArray;
     }
     function o(t, n, r) {
      if (e.isTypeKeyword(t.kind)) {
       return E(n, t.kind, r);
      }
      if (e.isJumpStatementTarget(t)) {
       var i = e.getTargetLabel(t.parent, t.text);
       return i && D(i.parent, i);
      } else if (e.isLabelOfLabeledStatement(t)) {
       return D(t.parent, t);
      }
      if (e.isThis(t)) {
       return G(t, n, r);
      }
      if (t.kind === 97) {
       return H(t);
      }
      return undefined;
     }
     function s(t, n, r, i, a, o, s) {
      t = n && u(t, n, a) || t;
      var l = n ? ee(n, t) : 7;
      var p = [];
      var m = new f(r, i, n ? c(n) : 0, a, o, l, s, p);
      if (n && n.kind === 79) {
       B(n, t, m);
       d(n, t, {
        exportingModuleSymbol: e.Debug.assertDefined(t.parent, "Expected export symbol to have a parent"),
        exportKind: 1
       }, m);
      } else {
       var _ = m.createSearch(n, t, undefined, {
        allSearchSymbols: n ? X(t, n, a, !!s.implementations) : [ t ]
       });
       var h = b(t);
       if (h) {
        A(h, h.getSourceFile(), _, m, !(e.isSourceFile(h) && !e.contains(r, h)));
       } else {
        for (var v = 0, y = m.sourceFiles; v < y.length; v++) {
         var x = y[v];
         m.cancellationToken.throwIfCancellationRequested();
         g(x, _, m);
        }
       }
      }
      return p;
     }
     function c(t) {
      switch (t.kind) {
      case 123:
       return 1;

      case 71:
       if (e.isClassLike(t.parent)) {
        e.Debug.assert(t.parent.name === t);
        return 2;
       }

      default:
       return 0;
      }
     }
     function u(t, n, r) {
      var i = n.parent;
      if (e.isExportSpecifier(i)) {
       return O(n, t, i, r);
      }
      if (e.isImportSpecifier(i) && i.propertyName === n) {
       return r.getImmediateAliasedSymbol(t);
      }
      return e.firstDefined(t.declarations, function(i) {
       if (!i.parent) {
        e.Debug.fail("Unexpected symbol at " + e.Debug.showSyntaxKind(n) + ": " + e.Debug.showSymbol(t));
       }
       return e.isTypeLiteralNode(i.parent) && e.isUnionTypeNode(i.parent.parent) ? r.getPropertyOfType(r.getTypeFromTypeNode(i.parent.parent), t.name) : undefined;
      });
     }
     var l;
     (function(e) {
      e[e["None"] = 0] = "None";
      e[e["Constructor"] = 1] = "Constructor";
      e[e["Class"] = 2] = "Class";
     })(l || (l = {}));
     var f = function() {
      function n(t, n, r, i, a, o, s, c) {
       this.sourceFiles = t;
       this.sourceFilesSet = n;
       this.specialSearchKind = r;
       this.checker = i;
       this.cancellationToken = a;
       this.searchMeaning = o;
       this.options = s;
       this.result = c;
       this.inheritsFromCache = e.createMap();
       this.markSeenContainingTypeReference = e.nodeSeenTracker();
       this.markSeenReExportRHS = e.nodeSeenTracker();
       this.symbolIdToReferences = [];
       this.sourceFileToSeenSymbols = [];
      }
      n.prototype.includesSourceFile = function(e) {
       return this.sourceFilesSet.has(e.fileName);
      };
      n.prototype.getImportSearches = function(e, n) {
       if (!this.importTracker) this.importTracker = t.createImportTracker(this.sourceFiles, this.sourceFilesSet, this.checker, this.cancellationToken);
       return this.importTracker(e, n, !!this.options.isForRename);
      };
      n.prototype.createSearch = function(t, n, r, i) {
       if (i === void 0) {
        i = {};
       }
       var a = i.text, o = a === void 0 ? e.stripQuotes(e.unescapeLeadingUnderscores((e.getLocalSymbolForExportDefault(n) || n).escapedName)) : a, s = i.allSearchSymbols, c = s === void 0 ? [ n ] : s;
       var u = e.escapeLeadingUnderscores(o);
       var l = this.options.implementations && t ? ae(t, n, this.checker) : undefined;
       return {
        symbol: n,
        comingFrom: r,
        text: o,
        escapedText: u,
        parents: l,
        allSearchSymbols: c,
        includes: function(t) {
         return e.contains(c, t);
        }
       };
      };
      n.prototype.referenceAdder = function(n) {
       var r = e.getSymbolId(n);
       var i = this.symbolIdToReferences[r];
       if (!i) {
        i = this.symbolIdToReferences[r] = [];
        this.result.push({
         definition: {
          type: "symbol",
          symbol: n
         },
         references: i
        });
       }
       return function(e) {
        return i.push(t.nodeEntry(e));
       };
      };
      n.prototype.addStringOrCommentReference = function(e, t) {
       this.result.push({
        definition: undefined,
        references: [ {
         type: "span",
         fileName: e,
         textSpan: t
        } ]
       });
      };
      n.prototype.markSearchedSymbols = function(t, n) {
       var r = e.getNodeId(t);
       var i = this.sourceFileToSeenSymbols[r] || (this.sourceFileToSeenSymbols[r] = e.createMap());
       var a = false;
       for (var o = 0, s = n; o < s.length; o++) {
        var c = s[o];
        a = e.addToSeen(i, e.getSymbolId(c)) || a;
       }
       return a;
      };
      return n;
     }();
     function d(e, t, n, r) {
      var i = r.getImportSearches(t, n), a = i.importSearches, o = i.singleReferences, s = i.indirectUsers;
      if (o.length) {
       var c = r.referenceAdder(t);
       for (var u = 0, l = o; u < l.length; u++) {
        var f = l[u];
        if (m(f, r)) c(f);
       }
      }
      for (var d = 0, p = a; d < p.length; d++) {
       var _ = p[d], h = _[0], v = _[1];
       N(h.getSourceFile(), r.createSearch(h, v, 1), r);
      }
      if (s.length) {
       var y = void 0;
       switch (n.exportKind) {
       case 0:
        y = r.createSearch(e, t, 1);
        break;

       case 1:
        y = r.options.isForRename ? undefined : r.createSearch(e, t, 1, {
         text: "default"
        });
        break;

       case 2:
        break;
       }
       if (y) {
        for (var b = 0, x = s; b < x.length; b++) {
         var k = x[b];
         g(k, y, r);
        }
       }
      }
     }
     function p(n, r, i, a, o, s, c, u) {
      var l = t.createImportTracker(n, e.arrayToSet(n, function(e) {
       return e.fileName;
      }), r, i);
      var f = l(a, {
       exportKind: c ? 1 : 0,
       exportingModuleSymbol: o
      }, false), d = f.importSearches, p = f.indirectUsers;
      for (var m = 0, _ = d; m < _.length; m++) {
       var g = _[m][0];
       u(g);
      }
      for (var h = 0, v = p; h < v.length; h++) {
       var y = v[h];
       for (var b = 0, x = w(y, c ? "default" : s); b < x.length; b++) {
        var k = x[b];
        if (e.isIdentifier(k) && r.getSymbolAtLocation(k) === a) {
         u(k);
        }
       }
      }
     }
     n.eachExportReference = p;
     function m(t, n) {
      if (!F(t, n)) return false;
      if (!n.options.isForRename) return true;
      if (!e.isIdentifier(t)) return false;
      return !((e.isExportSpecifier(t.parent) || e.isImportSpecifier(t.parent)) && t.escapedText === "default");
     }
     function _(e, t) {
      for (var n = 0, r = e.declarations; n < r.length; n++) {
       var i = r[n];
       var a = i.getSourceFile();
       N(a, t.createSearch(i, e, 0), t, t.includesSourceFile(a));
      }
     }
     function g(t, n, r) {
      if (e.getNameTable(t).get(n.escapedText) !== undefined) {
       N(t, n, r);
      }
     }
     function h(t, n) {
      return e.isArrayLiteralOrObjectLiteralDestructuringPattern(t.parent.parent) ? n.getPropertySymbolOfDestructuringAssignment(t) : undefined;
     }
     function v(t) {
      var n = e.getDeclarationOfKind(t, 184);
      if (n && n.parent.kind === 182 && e.isIdentifier(n.name) && !n.propertyName) {
       return n;
      }
     }
     function y(t, n) {
      var r = v(t);
      return r && e.getPropertySymbolFromBindingElement(n, r);
     }
     function b(t) {
      var n = t.declarations, r = t.flags, i = t.parent, a = t.valueDeclaration;
      if (a && (a.kind === 194 || a.kind === 207)) {
       return a;
      }
      if (!n) {
       return undefined;
      }
      if (r & (4 | 8192)) {
       var o = e.find(n, function(t) {
        return e.hasModifier(t, 8);
       });
       if (o) {
        return e.getAncestor(o, 238);
       }
       return undefined;
      }
      if (v(t)) {
       return undefined;
      }
      var s = i && !(t.flags & 262144);
      if (s && !(e.isExternalModuleSymbol(i) && !i.globalExports)) {
       return undefined;
      }
      var c;
      for (var u = 0, l = n; u < l.length; u++) {
       var f = l[u];
       var d = e.getContainerNode(f);
       if (c && c !== d) {
        return undefined;
       }
       if (!d || d.kind === 277 && !e.isExternalOrCommonJsModule(d)) {
        return undefined;
       }
       c = d;
      }
      return s ? c.getSourceFile() : c;
     }
     function x(e, t, n) {
      return k(e, t, n, function() {
       return true;
      }) || false;
     }
     n.isSymbolReferencedInFile = x;
     function k(t, n, r, i) {
      var a = n.getSymbolAtLocation(t);
      if (!a) return undefined;
      for (var o = 0, s = w(r, a.name); o < s.length; o++) {
       var c = s[o];
       if (!e.isIdentifier(c) || c === t || c.escapedText !== t.escapedText) continue;
       var u = n.getSymbolAtLocation(c);
       if (u === a || n.getShorthandAssignmentValueSymbol(c.parent) === a || e.isExportSpecifier(c.parent) && O(c, u, c.parent, n) === a) {
        var l = i(c);
        if (l) return l;
       }
      }
     }
     n.eachSymbolReferenceInFile = k;
     function S(t, n, r, i) {
      if (!t.name || !e.isIdentifier(t.name)) return;
      var a = e.Debug.assertDefined(r.getSymbolAtLocation(t.name));
      for (var o = 0, s = n; o < s.length; o++) {
       var c = s[o];
       for (var u = 0, l = w(c, a.name); u < l.length; u++) {
        var f = l[u];
        if (!e.isIdentifier(f) || f === t.name || f.escapedText !== t.name.escapedText) continue;
        var d = e.climbPastPropertyAccess(f);
        var p = d.parent;
        if (!e.isCallExpression(p) || p.expression !== d) continue;
        var m = r.getSymbolAtLocation(f);
        if (m && r.getRootSymbols(m).some(function(e) {
         return e === a;
        })) {
         i(p);
        }
       }
      }
     }
     n.eachSignatureCall = S;
     function w(t, n, r) {
      if (r === void 0) {
       r = t;
      }
      return C(t, n, r).map(function(n) {
       return e.getTouchingPropertyName(t, n);
      });
     }
     function C(t, n, r) {
      if (r === void 0) {
       r = t;
      }
      var i = [];
      if (!n || !n.length) {
       return i;
      }
      var a = t.text;
      var o = a.length;
      var s = n.length;
      var c = a.indexOf(n, r.pos);
      while (c >= 0) {
       if (c > r.end) break;
       var u = c + s;
       if ((c === 0 || !e.isIdentifierPart(a.charCodeAt(c - 1), 6)) && (u === o || !e.isIdentifierPart(a.charCodeAt(u), 6))) {
        i.push(c);
       }
       c = a.indexOf(n, c + s + 1);
      }
      return i;
     }
     function D(n, r) {
      var i = n.getSourceFile();
      var a = r.text;
      var o = e.mapDefined(w(i, a, n), function(n) {
       return n === r || e.isJumpStatementTarget(n) && e.getTargetLabel(n, a) === r ? t.nodeEntry(n) : undefined;
      });
      return [ {
       definition: {
        type: "label",
        node: r
       },
       references: o
      } ];
     }
     function T(t, n) {
      switch (t.kind) {
      case 71:
       return t.text.length === n.length;

      case 9:
       {
        var r = t;
        return (e.isLiteralNameOfPropertyDeclarationOrIndexAccess(r) || e.isNameOfModuleDeclaration(t) || e.isExpressionOfExternalModuleImportEqualsDeclaration(t)) && r.text.length === n.length;
       }

      case 8:
       return e.isLiteralNameOfPropertyDeclarationOrIndexAccess(t) && t.text.length === n.length;

      case 79:
       return "default".length === n.length;

      default:
       return false;
      }
     }
     function E(n, r, i) {
      var a = e.flatMap(n, function(n) {
       i.throwIfCancellationRequested();
       return e.mapDefined(w(n, e.tokenToString(r), n), function(e) {
        return e.kind === r ? t.nodeEntry(e) : undefined;
       });
      });
      return a.length ? [ {
       definition: {
        type: "keyword",
        node: a[0].node
       },
       references: a
      } ] : undefined;
     }
     function N(e, t, n, r) {
      if (r === void 0) {
       r = true;
      }
      n.cancellationToken.throwIfCancellationRequested();
      return A(e, e, t, n, r);
     }
     function A(e, t, n, r, i) {
      if (!r.markSearchedSymbols(t, n.allSearchSymbols)) {
       return;
      }
      for (var a = 0, o = C(t, n.text, e); a < o.length; a++) {
       var s = o[a];
       P(t, s, n, r, i);
      }
     }
     function F(t, n) {
      return !!(e.getMeaningFromLocation(t) & n.searchMeaning);
     }
     function P(t, n, r, i, a) {
      var o = e.getTouchingPropertyName(t, n);
      if (!T(o, r.text)) {
       if (!i.options.implementations && (i.options.findInStrings && e.isInString(t, n) || i.options.findInComments && e.isInNonReferenceComment(t, n))) {
        i.addStringOrCommentReference(t.fileName, e.createTextSpan(n, r.text.length));
       }
       return;
      }
      if (!F(o, i)) return;
      var s = i.checker.getSymbolAtLocation(o);
      if (!s) {
       return;
      }
      var c = o.parent;
      if (e.isImportSpecifier(c) && c.propertyName === o) {
       return;
      }
      if (e.isExportSpecifier(c)) {
       e.Debug.assert(o.kind === 71);
       I(o, s, c, r, i, a);
       return;
      }
      var u = Y(r, s, o, i);
      if (!u) {
       R(s, r, i);
       return;
      }
      switch (i.specialSearchKind) {
      case 0:
       if (a) B(o, u, i);
       break;

      case 1:
       z(o, t, r, i);
       break;

      case 2:
       j(o, r, i);
       break;

      default:
       e.Debug.assertNever(i.specialSearchKind);
      }
      L(o, s, r, i);
     }
     function I(n, r, i, a, o, s) {
      var c = i.parent, u = i.propertyName, l = i.name;
      var f = c.parent;
      var p = O(n, r, i, o.checker);
      if (!a.includes(p)) {
       return;
      }
      if (!u) {
       if (!(o.options.isForRename && l.escapedText === "default")) {
        v();
       }
      } else if (n === u) {
       if (!f.moduleSpecifier) {
        v();
       }
       if (s && !o.options.isForRename && o.markSeenReExportRHS(l)) {
        B(l, r, o);
       }
      } else {
       if (o.markSeenReExportRHS(n)) {
        v();
       }
      }
      if (!(n === u && o.options.isForRename)) {
       var m = n.originalKeywordKind === 79 ? 1 : 0;
       var g = t.getExportInfo(r, m, o.checker);
       if (!g) return e.Debug.fail();
       d(n, r, g, o);
      }
      if (a.comingFrom !== 1 && f.moduleSpecifier && !u) {
       var h = o.checker.getExportSpecifierLocalTargetSymbol(i);
       if (h) _(h, o);
      }
      function v() {
       if (s) B(n, p, o);
      }
     }
     function O(e, t, n, r) {
      return M(e, n) && r.getExportSpecifierLocalTargetSymbol(n) || t;
     }
     function M(t, n) {
      var r = n.parent, i = n.propertyName, a = n.name;
      e.Debug.assert(i === t || a === t);
      if (i) {
       return i === t;
      } else {
       return !r.parent.moduleSpecifier;
      }
     }
     function L(e, n, r, i) {
      var a = t.getImportOrExportSymbol(e, n, i.checker, r.comingFrom === 1);
      if (!a) return;
      var o = a.symbol;
      if (a.kind === 0) {
       if (!i.options.isForRename || a.isNamedImport) {
        _(o, i);
       }
      } else {
       d(e, o, a.exportInfo, i);
      }
     }
     function R(t, n, r) {
      var i = t.flags, a = t.valueDeclaration;
      var o = r.checker.getShorthandAssignmentValueSymbol(a);
      var s = a && e.getNameOfDeclaration(a);
      if (!(i & 33554432) && s && n.includes(o)) {
       B(s, o, r);
      }
     }
     function B(e, t, n) {
      var r = n.referenceAdder(t);
      if (n.options.implementations) {
       J(e, r, n);
      } else {
       r(e);
      }
     }
     function z(t, n, r, i) {
      if (e.isNewExpressionTarget(t)) {
       B(t, r.symbol, i);
      }
      var a = function() {
       return i.referenceAdder(r.symbol);
      };
      if (e.isClassLike(t.parent)) {
       e.Debug.assert(t.kind === 79 || t.parent.name === t);
       q(r.symbol, n, a());
      } else {
       var o = ie(t);
       if (o) {
        U(o, a());
       }
      }
     }
     function j(t, n, r) {
      B(t, n.symbol, r);
      var i = t.parent;
      if (r.options.isForRename || !e.isClassLike(i)) return;
      e.Debug.assert(i.name === t);
      var a = r.referenceAdder(n.symbol);
      for (var o = 0, s = i.members; o < s.length; o++) {
       var c = s[o];
       if (!(e.isMethodOrAccessor(c) && e.hasModifier(c, 32))) {
        continue;
       }
       if (c.body) {
        c.body.forEachChild(function t(n) {
         if (n.kind === 99) {
          a(n);
         } else if (!e.isFunctionLike(n) && !e.isClassLike(n)) {
          n.forEachChild(t);
         }
        });
       }
      }
     }
     function q(t, n, r) {
      for (var i = 0, a = t.members.get("__constructor").declarations; i < a.length; i++) {
       var o = a[i];
       var s = e.findChildOfKind(o, 123, n);
       e.Debug.assert(o.kind === 155 && !!s);
       r(s);
      }
      t.exports.forEach(function(t) {
       var n = t.valueDeclaration;
       if (n && n.kind === 154) {
        var i = n.body;
        if (i) {
         re(i, 99, function(t) {
          if (e.isNewExpressionTarget(t)) {
           r(t);
          }
         });
        }
       }
      });
     }
     function U(t, n) {
      var r = t.symbol.members.get("__constructor");
      if (!r) {
       return;
      }
      for (var i = 0, a = r.declarations; i < a.length; i++) {
       var o = a[i];
       e.Debug.assert(o.kind === 155);
       var s = o.body;
       if (s) {
        re(s, 97, function(t) {
         if (e.isCallExpressionTarget(t)) {
          n(t);
         }
        });
       }
      }
     }
     function J(t, n, r) {
      if (e.isDeclarationName(t) && te(t.parent)) {
       n(t);
       return;
      }
      if (t.kind !== 71) {
       return;
      }
      if (t.parent.kind === 274) {
       ne(t, r.checker, n);
      }
      var i = K(t);
      if (i) {
       n(i);
       return;
      }
      var a = e.findAncestor(t, function(t) {
       return !e.isQualifiedName(t.parent) && !e.isTypeNode(t.parent) && !e.isTypeElement(t.parent);
      });
      var o = a.parent;
      if (e.hasType(o) && o.type === a && r.markSeenContainingTypeReference(o)) {
       if (e.hasInitializer(o)) {
        c(o.initializer);
       } else if (e.isFunctionLike(o) && o.body) {
        var s = o.body;
        if (s.kind === 216) {
         e.forEachReturnStatement(s, function(e) {
          if (e.expression) c(e.expression);
         });
        } else {
         c(s);
        }
       } else if (e.isAssertionExpression(o)) {
        c(o.expression);
       }
      }
      function c(e) {
       if (V(e)) n(e);
      }
     }
     function K(t) {
      return e.isIdentifier(t) || e.isPropertyAccessExpression(t) ? K(t.parent) : e.isExpressionWithTypeArguments(t) ? e.tryCast(t.parent.parent, e.isClassLike) : undefined;
     }
     function V(e) {
      switch (e.kind) {
      case 193:
       return V(e.expression);

      case 195:
      case 194:
      case 186:
      case 207:
      case 185:
       return true;

      default:
       return false;
      }
     }
     function W(t, n, r, i) {
      if (t === n) {
       return true;
      }
      var a = e.getSymbolId(t) + "," + e.getSymbolId(n);
      var o = r.get(a);
      if (o !== undefined) {
       return o;
      }
      r.set(a, false);
      var s = t.declarations.some(function(t) {
       return e.getAllSuperTypeNodes(t).some(function(e) {
        var t = i.getTypeAtLocation(e);
        return !!t && !!t.symbol && W(t.symbol, n, r, i);
       });
      });
      r.set(a, s);
      return s;
     }
     function H(n) {
      var r = e.getSuperContainer(n, false);
      if (!r) {
       return undefined;
      }
      var i = 32;
      switch (r.kind) {
      case 152:
      case 151:
      case 154:
      case 153:
      case 155:
      case 156:
      case 157:
       i &= e.getModifierFlags(r);
       r = r.parent;
       break;

      default:
       return undefined;
      }
      var a = r.getSourceFile();
      var o = e.mapDefined(w(a, "super", r), function(n) {
       if (n.kind !== 97) {
        return;
       }
       var a = e.getSuperContainer(n, false);
       return a && (32 & e.getModifierFlags(a)) === i && a.parent.symbol === r.symbol ? t.nodeEntry(n) : undefined;
      });
      return [ {
       definition: {
        type: "symbol",
        symbol: r.symbol
       },
       references: o
      } ];
     }
     function G(n, r, i) {
      var a = e.getThisContainer(n, false);
      var o = 32;
      switch (a.kind) {
      case 154:
      case 153:
       if (e.isObjectLiteralMethod(a)) {
        break;
       }

      case 152:
      case 151:
      case 155:
      case 156:
      case 157:
       o &= e.getModifierFlags(a);
       a = a.parent;
       break;

      case 277:
       if (e.isExternalModule(a)) {
        return undefined;
       }

      case 237:
      case 194:
       break;

      default:
       return undefined;
      }
      var s = e.flatMap(a.kind === 277 ? r : [ a.getSourceFile() ], function(t) {
       i.throwIfCancellationRequested();
       return w(t, "this", e.isSourceFile(a) ? t : a).filter(function(t) {
        if (!e.isThis(t)) {
         return false;
        }
        var n = e.getThisContainer(t, false);
        switch (a.kind) {
        case 194:
        case 237:
         return a.symbol === n.symbol;

        case 154:
        case 153:
         return e.isObjectLiteralMethod(a) && a.symbol === n.symbol;

        case 207:
        case 238:
         return n.parent && a.symbol === n.parent.symbol && (e.getModifierFlags(n) & 32) === o;

        case 277:
         return n.kind === 277 && !e.isExternalModule(n);
        }
       });
      }).map(function(e) {
       return t.nodeEntry(e);
      });
      return [ {
       definition: {
        type: "this",
        node: n
       },
       references: s
      } ];
     }
     function $(n, r, i) {
      var a = e.flatMap(r, function(r) {
       i.throwIfCancellationRequested();
       return e.mapDefined(w(r, n.text), function(r) {
        return e.isStringLiteral(r) && r.text === n.text ? t.nodeEntry(r, true) : undefined;
       });
      });
      return [ {
       definition: {
        type: "string",
        node: n
       },
       references: a
      } ];
     }
     function X(e, t, n, r) {
      var i = [];
      Q(e, t, n, function(e, t, n) {
       i.push(n || t || e);
      }, function() {
       return !r;
      });
      return i;
     }
     function Q(t, n, r, i, a) {
      var o = e.getContainingObjectLiteralElement(n);
      if (o) {
       var s = e.firstDefined(Z(o, r), _);
       if (s) return s;
       var c = h(n, r);
       var u = c && i(c);
       if (u) return u;
       var l = r.getShorthandAssignmentValueSymbol(n.parent);
       var f = l && i(l);
       if (f) return f;
      }
      var d = _(t);
      if (d) return d;
      if (t.valueDeclaration && e.isParameterPropertyDeclaration(t.valueDeclaration)) {
       var p = r.getSymbolsOfParameterPropertyDeclaration(e.cast(t.valueDeclaration, e.isParameter), t.name);
       e.Debug.assert(p.length === 2 && !!(p[0].flags & 1) && !!(p[1].flags & 4));
       return _(t.flags & 1 ? p[1] : p[0]);
      }
      var m = y(t, r);
      return m && _(m);
      function _(t) {
       return e.firstDefined(r.getRootSymbols(t), function(n) {
        return i(t, n) || (n.parent && n.parent.flags & (32 | 64) && a(n) ? e.getPropertySymbolsFromBaseTypes(n.parent, n.name, r, function(e) {
         return i(t, n, e);
        }) : undefined);
       });
      }
     }
     function Y(t, n, r, i) {
      var a = i.checker;
      return Q(n, r, a, function(n, r, i) {
       return t.includes(i || r || n) ? r && !(e.getCheckFlags(n) & 6) ? r : n : undefined;
      }, function(e) {
       return !(t.parents && !t.parents.some(function(t) {
        return W(e.parent, t, i.inheritsFromCache, a);
       }));
      });
     }
     function Z(t, n) {
      var r = n.getContextualType(t.parent);
      if (!r) return e.emptyArray;
      var i = e.getNameFromPropertyName(t.name);
      if (!i) return e.emptyArray;
      var a = r.getProperty(i);
      return a ? [ a ] : r.isUnion() ? e.mapDefined(r.types, function(e) {
       return e.getProperty(i);
      }) : e.emptyArray;
     }
     function ee(t, n) {
      var r = e.getMeaningFromLocation(t);
      var i = n.declarations;
      if (i) {
       var a = void 0;
       do {
        a = r;
        for (var o = 0, s = i; o < s.length; o++) {
         var c = s[o];
         var u = e.getMeaningFromDeclaration(c);
         if (u & r) {
          r |= u;
         }
        }
       } while (r !== a);
      }
      return r;
     }
     n.getIntersectingMeaningFromDeclarations = ee;
     function te(t) {
      return !!(t.flags & 4194304) || (e.isVariableLike(t) ? e.hasInitializer(t) : e.isFunctionLikeDeclaration(t) ? !!t.body : e.isClassLike(t) || e.isModuleOrEnumDeclaration(t));
     }
     function ne(t, n, r) {
      var i = n.getSymbolAtLocation(t);
      var a = n.getShorthandAssignmentValueSymbol(i.valueDeclaration);
      if (a) {
       for (var o = 0, s = a.getDeclarations(); o < s.length; o++) {
        var c = s[o];
        if (e.getMeaningFromDeclaration(c) & 1) {
         r(c);
        }
       }
      }
     }
     n.getReferenceEntriesForShorthandPropertyAssignment = ne;
     function re(t, n, r) {
      e.forEachChild(t, function(e) {
       if (e.kind === n) {
        r(e);
       }
       re(e, n, r);
      });
     }
     function ie(t) {
      return e.tryGetClassExtendingExpressionWithTypeArguments(e.climbPastPropertyAccess(t).parent);
     }
     function ae(t, n, r) {
      var i = e.isRightSideOfPropertyAccess(t) ? t.parent : undefined;
      var a = i && r.getTypeAtLocation(i.expression);
      var o = e.mapDefined(a && (a.isUnionOrIntersection() ? a.types : a.symbol === n.parent ? undefined : [ a ]), function(e) {
       return e.symbol && e.symbol.flags & (32 | 64) ? e.symbol : undefined;
      });
      return o.length === 0 ? undefined : o;
     }
    })(n = t.Core || (t.Core = {}));
   })(t = e.FindAllReferences || (e.FindAllReferences = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   function t(t, r, o, s, c, u, l) {
    var f = e.hostUsesCaseSensitiveFileNames(s);
    var d = e.createGetCanonicalFileName(f);
    var p = n(r, o, d, l);
    var m = n(o, r, d, l);
    return e.textChanges.ChangeTracker.with({
     host: s,
     formatContext: c
    }, function(e) {
     i(t, e, p, o, s.getCurrentDirectory(), f);
     a(t, e, p, m, s, d, u);
    });
   }
   e.getEditsForFileRename = t;
   function n(t, n, i, a) {
    var o = i(t);
    return function(e) {
     var t = a && a.tryGetOriginalLocation({
      fileName: e,
      position: 0
     });
     var n = s(t ? t.fileName : e);
     return t ? n === undefined ? undefined : r(t.fileName, n, e, i) : n;
    };
    function s(t) {
     if (i(t) === o) return n;
     var r = e.tryRemoveDirectoryPrefix(t, o, i);
     return r === undefined ? undefined : n + "/" + r;
    }
   }
   e.getPathUpdater = n;
   function r(t, n, r, i) {
    var a = e.getRelativePathFromFile(t, n, i);
    return s(e.getDirectoryPath(r), a);
   }
   function i(t, n, r, i, a, o) {
    var c = t.getCompilerOptions().configFile;
    if (!c) return;
    var u = e.getDirectoryPath(c.fileName);
    var l = e.getTsConfigObjectLiteralExpression(c);
    if (!l) return;
    d(l, function(t, r) {
     switch (r) {
     case "files":
     case "include":
     case "exclude":
      {
       var s = p(t);
       if (!s && r === "include" && e.isArrayLiteralExpression(t.initializer)) {
        var l = e.mapDefined(t.initializer.elements, function(t) {
         return e.isStringLiteral(t) ? t.text : undefined;
        });
        var f = e.getFileMatcherPatterns(u, [], l, o, a);
        if (!e.getRegexFromPattern(e.Debug.assertDefined(f.includeFilePattern), o).test(i)) {
         n.insertNodeAfter(c, e.last(t.initializer.elements), e.createStringLiteral(_(i)));
        }
       }
       break;
      }

     case "compilerOptions":
      d(t.initializer, function(t, n) {
       var r = e.getOptionFromName(n);
       if (r && (r.isFilePath || r.type === "list" && r.element.isFilePath)) {
        p(t);
       } else if (n === "paths") {
        d(t.initializer, function(t) {
         if (!e.isArrayLiteralExpression(t.initializer)) return;
         for (var n = 0, r = t.initializer.elements; n < r.length; n++) {
          var i = r[n];
          m(i);
         }
        });
       }
      });
      break;
     }
    });
    function p(t) {
     var n = e.isArrayLiteralExpression(t.initializer) ? t.initializer.elements : [ t.initializer ];
     var r = false;
     for (var i = 0, a = n; i < a.length; i++) {
      var o = a[i];
      r = m(o) || r;
     }
     return r;
    }
    function m(t) {
     if (!e.isStringLiteral(t)) return false;
     var i = s(u, t.text);
     var a = r(i);
     if (a !== undefined) {
      n.replaceRangeWithText(c, f(t, c), _(a));
      return true;
     }
     return false;
    }
    function _(t) {
     return e.getRelativePathFromDirectory(u, t, !o);
    }
   }
   function a(t, n, r, i, a, o, f) {
    var d = t.getSourceFiles();
    var p = function(p) {
     var m = r(p.path);
     var _ = m !== undefined ? m : p.path;
     var g = e.getDirectoryPath(_);
     var h = i(p.fileName);
     var v = h || p.fileName;
     var y = e.getDirectoryPath(v);
     var b = m !== undefined || h !== undefined;
     l(p, n, function(t) {
      if (!e.pathIsRelative(t)) return undefined;
      var n = s(y, t);
      var i = r(n);
      return i === undefined ? undefined : e.ensurePathIsNonModuleName(e.getRelativePathFromDirectory(g, i, o));
     }, function(n) {
      var i = t.getTypeChecker().getSymbolAtLocation(n);
      if (i && i.declarations.some(function(t) {
       return e.isAmbientModule(t);
      })) return undefined;
      var o = h !== undefined ? u(e.resolveModuleName(n.text, v, t.getCompilerOptions(), a), r, a) : c(i, n, p, t, a, r);
      return o !== undefined && (o.updated || b && e.pathIsRelative(n.text)) ? e.moduleSpecifiers.getModuleSpecifier(t.getCompilerOptions(), p, _, o.newFileName, a, d, f) : undefined;
     });
    };
    for (var m = 0, _ = d; m < _.length; m++) {
     var g = _[m];
     p(g);
    }
   }
   function o(t, n) {
    return e.normalizePath(e.combinePaths(t, n));
   }
   function s(t, n) {
    return e.ensurePathIsNonModuleName(o(t, n));
   }
   function c(t, n, r, i, a, o) {
    if (t) {
     var s = e.find(t.declarations, e.isSourceFile).fileName;
     var c = o(s);
     return c === undefined ? {
      newFileName: s,
      updated: false
     } : {
      newFileName: c,
      updated: true
     };
    } else {
     var l = a.resolveModuleNames ? a.getResolvedModuleWithFailedLookupLocationsFromCache && a.getResolvedModuleWithFailedLookupLocationsFromCache(n.text, r.fileName) : i.getResolvedModuleWithFailedLookupLocationsFromCache(n.text, r.fileName);
     return u(l, o, a);
    }
   }
   function u(t, n, r) {
    return t && (t.resolvedModule && i(t.resolvedModule.resolvedFileName) || e.firstDefined(t.failedLookupLocations, i));
    function i(e) {
     var t = n(e);
     return r.fileExists(e) || t !== undefined && r.fileExists(t) ? t !== undefined ? {
      newFileName: t,
      updated: true
     } : {
      newFileName: e,
      updated: false
     } : undefined;
    }
   }
   function l(e, t, n, r) {
    for (var i = 0, a = e.referencedFiles; i < a.length; i++) {
     var o = a[i];
     var s = n(o.fileName);
     if (s !== undefined && s !== e.text.slice(o.pos, o.end)) t.replaceRangeWithText(e, o, s);
    }
    for (var c = 0, u = e.imports; c < u.length; c++) {
     var l = u[c];
     var s = r(l);
     if (s !== undefined && s !== l.text) t.replaceRangeWithText(e, f(l, e), s);
    }
   }
   function f(t, n) {
    return e.createTextRange(t.getStart(n) + 1, t.end - 1);
   }
   function d(t, n) {
    if (!e.isObjectLiteralExpression(t)) return;
    for (var r = 0, i = t.properties; r < i.length; r++) {
     var a = i[r];
     if (e.isPropertyAssignment(a) && e.isStringLiteral(a.name)) {
      n(a, a.name.text);
     }
    }
   }
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    function n(t, n, a) {
     var o = i(n, a, t);
     if (o) {
      return [ _(o.fileName, o.file.fileName) ];
     }
     var u = e.getTouchingPropertyName(n, a);
     if (u === n) {
      return undefined;
     }
     var m = u.parent;
     if (e.isJumpStatementTarget(u)) {
      var g = e.getTargetLabel(u.parent, u.text);
      return g ? [ d(g, "label", u.text, undefined) ] : undefined;
     }
     var h = t.getTypeChecker();
     var y = c(u, h);
     if (!y) {
      return s(u, h);
     }
     var b = v(h, u);
     if (b && !(e.isJsxOpeningLikeElement(u.parent) && e.isConstructorDeclaration(b))) {
      var x = p(h, b);
      if (h.getRootSymbols(y).some(function(e) {
       return r(e, b);
      }) || y.declarations.some(function(t) {
       return e.isVariableDeclaration(t) && !!t.initializer && e.isRequireCall(t.initializer, false);
      })) {
       return [ x ];
      } else {
       var k = l(h, y, u);
       return u.kind === 97 ? [ x ].concat(k) : k.concat([ x ]);
      }
     }
     if (u.parent.kind === 274) {
      var S = h.getShorthandAssignmentValueSymbol(y.valueDeclaration);
      return S ? S.declarations.map(function(e) {
       return f(e, h, S, u);
      }) : [];
     }
     if (e.isPropertyName(u) && e.isBindingElement(m) && e.isObjectBindingPattern(m.parent) && u === (m.propertyName || m.name)) {
      var w = h.getTypeAtLocation(m.parent);
      if (w) {
       var C = e.getPropertySymbolsFromType(w, u);
       if (C) {
        return e.flatMap(C, function(e) {
         return l(h, e, u);
        });
       }
      }
     }
     var D = e.getContainingObjectLiteralElement(u);
     if (D && h.getContextualType(D.parent)) {
      return e.flatMap(e.getPropertySymbolsFromContextualType(h, D), function(e) {
       return l(h, e, u);
      });
     }
     return l(h, y, u);
    }
    t.getDefinitionAtPosition = n;
    function r(t, n) {
     return t === n.symbol || t === n.symbol.parent || !e.isCallLikeExpression(n.parent) && t === n.parent.symbol;
    }
    function i(t, n, r) {
     var i = m(t.referencedFiles, n);
     if (i) {
      var a = e.tryResolveScriptReference(r, t, i);
      return a && {
       fileName: i.fileName,
       file: a
      };
     }
     var o = m(t.typeReferenceDirectives, n);
     if (o) {
      var s = r.getResolvedTypeReferenceDirectives().get(o.fileName);
      var a = s && r.getSourceFile(s.resolvedFileName);
      return a && {
       fileName: o.fileName,
       file: a
      };
     }
     var c = m(t.libReferenceDirectives, n);
     if (c) {
      var a = r.getLibFileFromReference(c);
      return a && {
       fileName: c.fileName,
       file: a
      };
     }
     return undefined;
    }
    t.getReferenceAtPosition = i;
    function a(t, n, r) {
     var i = e.getTouchingPropertyName(n, r);
     if (i === n) {
      return undefined;
     }
     var a = t.getSymbolAtLocation(i);
     var o = a && t.getTypeOfSymbolAtLocation(a, i);
     if (!o) {
      return undefined;
     }
     if (o.isUnion() && !(o.flags & 32)) {
      return e.flatMap(o.types, function(e) {
       return e.symbol && l(t, e.symbol, i);
      });
     }
     return o.symbol && l(t, o.symbol, i);
    }
    t.getTypeDefinitionAtPosition = a;
    function o(t, r, i) {
     var a = n(t, r, i);
     if (!a || a.length === 0) {
      return undefined;
     }
     var o = m(r.referencedFiles, i) || m(r.typeReferenceDirectives, i) || m(r.libReferenceDirectives, i);
     if (o) {
      return {
       definitions: a,
       textSpan: e.createTextSpanFromRange(o)
      };
     }
     var s = e.getTouchingPropertyName(r, i);
     var c = e.createTextSpan(s.getStart(), s.getWidth());
     return {
      definitions: a,
      textSpan: c
     };
    }
    t.getDefinitionAndBoundSpan = o;
    function s(t, n) {
     if (!e.isPropertyAccessExpression(t.parent) || t.parent.name !== t) return;
     var r = n.getTypeAtLocation(t.parent.expression);
     return e.mapDefined(r.isUnionOrIntersection() ? r.types : [ r ], function(e) {
      var t = n.getIndexInfoOfType(e, 0);
      return t && t.declaration && p(n, t.declaration);
     });
    }
    function c(e, t) {
     var n = t.getSymbolAtLocation(e);
     if (n && n.flags & 2097152 && u(e, n.declarations[0])) {
      var r = t.getAliasedSymbol(n);
      if (r.declarations) {
       return r;
      }
     }
     return n;
    }
    function u(e, t) {
     if (e.kind !== 71) {
      return false;
     }
     if (e.parent === t) {
      return true;
     }
     switch (t.kind) {
     case 248:
     case 246:
      return true;

     case 251:
      return t.parent.kind === 250;

     default:
      return false;
     }
    }
    function l(t, n, r) {
     return i() || a() || e.map(n.declarations, function(e) {
      return f(e, t, n, r);
     });
     function i() {
      if (n.flags & 32 && (e.isNewExpressionTarget(r) || r.kind === 123)) {
       var t = e.find(n.declarations, e.isClassLike) || e.Debug.fail("Expected declaration to have at least one class-like declaration");
       return o(t.members, true);
      }
     }
     function a() {
      return e.isCallExpressionTarget(r) || e.isNewExpressionTarget(r) || e.isNameOfFunctionDeclaration(r) ? o(n.declarations, false) : undefined;
     }
     function o(i, a) {
      if (!i) {
       return undefined;
      }
      var o = i.filter(a ? e.isConstructorDeclaration : e.isFunctionLike);
      return o.length ? [ f(e.find(o, function(e) {
       return !!e.body;
      }) || e.last(o), t, n, r) ] : undefined;
     }
    }
    function f(t, n, r, i) {
     var a = n.symbolToString(r);
     var o = e.SymbolDisplay.getSymbolKind(n, r, i);
     var s = r.parent ? n.symbolToString(r.parent, i) : "";
     return d(t, o, a, s);
    }
    function d(t, n, r, i) {
     var a = e.getNameOfDeclaration(t) || t;
     var o = a.getSourceFile();
     return {
      fileName: o.fileName,
      textSpan: e.createTextSpanFromNode(a, o),
      kind: n,
      name: r,
      containerKind: undefined,
      containerName: i
     };
    }
    function p(e, t) {
     return f(t, e, t.symbol, t);
    }
    function m(t, n) {
     return e.find(t, function(t) {
      return e.textRangeContainsPositionInclusive(t, n);
     });
    }
    t.findReferenceInPosition = m;
    function _(t, n) {
     return {
      fileName: n,
      textSpan: e.createTextSpanFromBounds(0, 0),
      kind: "script",
      name: t,
      containerName: undefined,
      containerKind: undefined
     };
    }
    function g(t) {
     var n = h(t);
     var r = n.parent;
     return r && e.isCallLikeExpression(r) && e.getInvokedExpression(r) === n ? r : undefined;
    }
    function h(t) {
     return e.isRightSideOfPropertyAccess(t) ? h(t.parent) : t;
    }
    function v(t, n) {
     var r = g(n);
     var i = r && t.getResolvedSignature(r);
     return e.tryCast(i && i.declaration, function(t) {
      return e.isFunctionLike(t) && !e.isFunctionTypeNode(t);
     });
    }
   })(t = e.GoToDefinition || (e.GoToDefinition = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n = [ "abstract", "access", "alias", "argument", "async", "augments", "author", "borrows", "callback", "class", "classdesc", "constant", "constructor", "constructs", "copyright", "default", "deprecated", "description", "emits", "enum", "event", "example", "exports", "extends", "external", "field", "file", "fileoverview", "fires", "function", "generator", "global", "hideconstructor", "host", "ignore", "implements", "inheritdoc", "inner", "instance", "interface", "kind", "lends", "license", "listens", "member", "memberof", "method", "mixes", "module", "name", "namespace", "override", "package", "param", "private", "property", "protected", "public", "readonly", "requires", "returns", "see", "since", "static", "summary", "template", "this", "throws", "todo", "tutorial", "type", "typedef", "var", "variation", "version", "virtual", "yields" ];
    var r;
    var i;
    function a(t) {
     var n = [];
     u(t, function(t) {
      for (var r = 0, i = o(t); r < i.length; r++) {
       var a = i[r].comment;
       if (a === undefined) continue;
       if (n.length) {
        n.push(e.lineBreakPart());
       }
       n.push(e.textPart(a));
      }
     });
     return n;
    }
    t.getJsDocCommentsFromDeclarations = a;
    function o(t) {
     switch (t.kind) {
     case 296:
     case 302:
      return [ t ];

     case 295:
     case 301:
      return [ t, t.parent ];

     default:
      return e.getJSDocCommentsAndTags(t);
     }
    }
    function s(t) {
     var n = [];
     u(t, function(t) {
      for (var r = 0, i = e.getJSDocTags(t); r < i.length; r++) {
       var a = i[r];
       n.push({
        name: a.tagName.text,
        text: c(a)
       });
      }
     });
     return n;
    }
    t.getJsDocTagsFromDeclarations = s;
    function c(e) {
     var t = e.comment;
     switch (e.kind) {
     case 293:
      return r(e.class);

     case 300:
      return i(e.typeParameters);

     case 299:
      return r(e.typeExpression);

     case 301:
     case 295:
     case 302:
     case 296:
      var n = e.name;
      return n ? r(n) : t;

     default:
      return t;
     }
     function r(e) {
      return a(e.getText());
     }
     function i(e) {
      return a(e.map(function(e) {
       return e.getText();
      }).join(", "));
     }
     function a(e) {
      return t === undefined ? e : e + " " + t;
     }
    }
    function u(e, t) {
     if (e) {
      for (var n = 0; n < e.length; n++) {
       if (e.indexOf(e[n]) === n) {
        var r = t(e[n], n);
        if (r) {
         return r;
        }
       }
      }
     }
     return undefined;
    }
    function l() {
     return r || (r = e.map(n, function(e) {
      return {
       name: e,
       kind: "keyword",
       kindModifiers: "",
       sortText: "0"
      };
     }));
    }
    t.getJSDocTagNameCompletions = l;
    t.getJSDocTagNameCompletionDetails = d;
    function f() {
     return i || (i = e.map(n, function(e) {
      return {
       name: "@" + e,
       kind: "keyword",
       kindModifiers: "",
       sortText: "0"
      };
     }));
    }
    t.getJSDocTagCompletions = f;
    function d(t) {
     return {
      name: t,
      kind: "",
      kindModifiers: "",
      displayParts: [ e.textPart(t) ],
      documentation: e.emptyArray,
      tags: e.emptyArray,
      codeActions: undefined
     };
    }
    t.getJSDocTagCompletionDetails = d;
    function p(t) {
     if (!e.isIdentifier(t.name)) {
      return e.emptyArray;
     }
     var n = t.name.text;
     var r = t.parent;
     var i = r.parent;
     if (!e.isFunctionLike(i)) return [];
     return e.mapDefined(i.parameters, function(i) {
      if (!e.isIdentifier(i.name)) return undefined;
      var a = i.name.text;
      if (r.tags.some(function(n) {
       return n !== t && e.isJSDocParameterTag(n) && e.isIdentifier(n.name) && n.name.escapedText === a;
      }) || n !== undefined && !e.startsWith(a, n)) {
       return undefined;
      }
      return {
       name: a,
       kind: "parameter",
       kindModifiers: "",
       sortText: "0"
      };
     });
    }
    t.getJSDocParameterNameCompletions = p;
    function m(t) {
     return {
      name: t,
      kind: "parameter",
      kindModifiers: "",
      displayParts: [ e.textPart(t) ],
      documentation: e.emptyArray,
      tags: e.emptyArray,
      codeActions: undefined
     };
    }
    t.getJSDocParameterNameCompletionDetails = m;
    function _(t, n, r) {
     if (e.isInString(n, r) || e.isInComment(n, r) || e.hasDocComment(n, r)) {
      return undefined;
     }
     var i = e.getTokenAtPosition(n, r);
     var a = i.getStart(n);
     if (!i || a < r) {
      return undefined;
     }
     var o = v(i);
     if (!o) {
      return undefined;
     }
     var s = o.commentOwner, c = o.parameters;
     if (s.getStart(n) < r) {
      return undefined;
     }
     if (!c || c.length === 0) {
      var u = "/** */";
      return {
       newText: u,
       caretOffset: 3
      };
     }
     var l = g(n, r);
     var f = "/**" + t + l + " * ";
     var d = f + t + h(c, e.hasJavaScriptFileExtension(n.fileName), l, t) + l + " */" + (a === r ? t + l : "");
     return {
      newText: d,
      caretOffset: f.length
     };
    }
    t.getDocCommentTemplateAtPosition = _;
    function g(t, n) {
     var r = t.text;
     var i = e.getLineStartPositionForPosition(n, t);
     var a = i;
     for (;a <= n && e.isWhiteSpaceSingleLine(r.charCodeAt(a)); a++) ;
     return r.slice(i, a);
    }
    function h(e, t, n, r) {
     return e.map(function(e, i) {
      var a = e.name, o = e.dotDotDotToken;
      var s = a.kind === 71 ? a.text : "param" + i;
      var c = t ? o ? "{...any} " : "{any} " : "";
      return n + " * @param " + c + s + r;
     }).join("");
    }
    function v(t) {
     for (var n = t; n; n = n.parent) {
      switch (n.kind) {
      case 237:
      case 194:
      case 154:
      case 155:
      case 153:
       var r = n.parameters;
       return {
        commentOwner: n,
        parameters: r
       };

      case 238:
      case 239:
      case 151:
      case 241:
      case 276:
      case 240:
       return {
        commentOwner: n
       };

      case 217:
       {
        var i = n;
        var a = i.declarationList.declarations;
        var o = a.length === 1 && a[0].initializer ? y(a[0].initializer) : undefined;
        return {
         commentOwner: n,
         parameters: o
        };
       }

      case 277:
       return undefined;

      case 242:
       return n.parent.kind === 242 ? undefined : {
        commentOwner: n
       };

      case 202:
       {
        var s = n;
        if (e.getSpecialPropertyAssignmentKind(s) === 0) {
         return undefined;
        }
        var c = e.isFunctionLike(s.right) ? s.right.parameters : e.emptyArray;
        return {
         commentOwner: n,
         parameters: c
        };
       }
      }
     }
    }
    function y(t) {
     while (t.kind === 193) {
      t = t.expression;
     }
     switch (t.kind) {
     case 194:
     case 195:
      return t.parameters;

     case 207:
      {
       var n = e.find(t.members, e.isConstructorDeclaration);
       return n ? n.parameters : e.emptyArray;
      }
     }
     return e.emptyArray;
    }
   })(t = e.JsDoc || (e.JsDoc = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    function n(t, n, i, a, o, s) {
     var l = e.createPatternMatcher(a);
     if (!l) return e.emptyArray;
     var f = [];
     var d = function(e) {
      i.throwIfCancellationRequested();
      if (s && e.isDeclarationFile) {
       return "continue";
      }
      e.getNamedDeclarations().forEach(function(t, i) {
       r(l, i, t, n, e.fileName, f);
      });
     };
     for (var p = 0, m = t; p < m.length; p++) {
      var _ = m[p];
      d(_);
     }
     f.sort(c);
     return (o === undefined ? f : f.slice(0, o)).map(u);
    }
    t.getNavigateToItems = n;
    function r(e, t, n, r, a, o) {
     var c = e.getMatchForLastSegmentOfPattern(t);
     if (!c) {
      return;
     }
     for (var u = 0, l = n; u < l.length; u++) {
      var f = l[u];
      if (!i(f, r)) continue;
      if (e.patternContainsDots) {
       var d = e.getFullMatch(s(f), t);
       if (d) {
        o.push({
         name: t,
         fileName: a,
         matchKind: d.kind,
         isCaseSensitive: d.isCaseSensitive,
         declaration: f
        });
       }
      } else {
       o.push({
        name: t,
        fileName: a,
        matchKind: c.kind,
        isCaseSensitive: c.isCaseSensitive,
        declaration: f
       });
      }
     }
    }
    function i(e, t) {
     switch (e.kind) {
     case 248:
     case 251:
     case 246:
      var n = t.getSymbolAtLocation(e.name);
      var r = t.getAliasedSymbol(n);
      return n.escapedName !== r.escapedName;

     default:
      return true;
     }
    }
    function a(t, n) {
     var r = e.getNameOfDeclaration(t);
     if (r && e.isPropertyNameLiteral(r)) {
      n.unshift(e.getTextOfIdentifierOrLiteral(r));
      return true;
     } else if (r && r.kind === 147) {
      return o(r.expression, n, true);
     } else {
      return false;
     }
    }
    function o(t, n, r) {
     if (e.isPropertyNameLiteral(t)) {
      var i = e.getTextOfIdentifierOrLiteral(t);
      if (r) {
       n.unshift(i);
      }
      return true;
     }
     if (e.isPropertyAccessExpression(t)) {
      if (r) {
       n.unshift(t.name.text);
      }
      return o(t.expression, n, true);
     }
     return false;
    }
    function s(t) {
     var n = [];
     var r = e.getNameOfDeclaration(t);
     if (r && r.kind === 147 && !o(r.expression, n, false)) {
      return e.emptyArray;
     }
     var i = e.getContainerNode(t);
     while (i) {
      if (!a(i, n)) {
       return e.emptyArray;
      }
      i = e.getContainerNode(i);
     }
     return n;
    }
    function c(t, n) {
     return e.compareValues(t.matchKind, n.matchKind) || e.compareStringsCaseSensitiveUI(t.name, n.name);
    }
    function u(t) {
     var n = t.declaration;
     var r = e.getContainerNode(n);
     var i = r && e.getNameOfDeclaration(r);
     return {
      name: t.name,
      kind: e.getNodeKind(n),
      kindModifiers: e.getNodeModifiers(n),
      matchKind: e.PatternMatchKind[t.matchKind],
      isCaseSensitive: t.isCaseSensitive,
      fileName: t.fileName,
      textSpan: e.createTextSpanFromNode(n),
      containerName: i ? i.text : "",
      containerKind: i ? e.getNodeKind(r) : ""
     };
    }
   })(t = e.NavigateTo || (e.NavigateTo = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n = /\s+/g;
    var r;
    var i;
    var a = [];
    var o;
    var s = [];
    function c(t, n) {
     r = n;
     i = t;
     try {
      return e.map(F(m(t)), I);
     } finally {
      l();
     }
    }
    t.getNavigationBarItems = c;
    function u(e, t) {
     r = t;
     i = e;
     try {
      return P(m(e));
     } finally {
      l();
     }
    }
    t.getNavigationTree = u;
    function l() {
     i = undefined;
     r = undefined;
     a = [];
     o = undefined;
     s = [];
    }
    function f(e) {
     return e.getText(i);
    }
    function d(e) {
     return e.node.kind;
    }
    function p(e, t) {
     if (e.children) {
      e.children.push(t);
     } else {
      e.children = [ t ];
     }
    }
    function m(t) {
     e.Debug.assert(!a.length);
     var n = {
      node: t,
      name: undefined,
      additionalNodes: undefined,
      parent: undefined,
      children: undefined,
      indent: 0
     };
     o = n;
     for (var r = 0, i = t.statements; r < i.length; r++) {
      var s = i[r];
      b(s);
     }
     v();
     e.Debug.assert(!o && !a.length);
     return n;
    }
    function _(e) {
     p(o, g(e));
    }
    function g(t) {
     return {
      node: t,
      name: e.isDeclaration(t) || e.isExpression(t) ? e.getNameOfDeclaration(t) : undefined,
      additionalNodes: undefined,
      parent: o,
      children: undefined,
      indent: o.indent + 1
     };
    }
    function h(e) {
     var t = g(e);
     p(o, t);
     a.push(o);
     o = t;
    }
    function v() {
     if (o.children) {
      x(o.children, o);
      T(o.children);
     }
     o = a.pop();
    }
    function y(e, t) {
     h(e);
     b(t);
     v();
    }
    function b(t) {
     r.throwIfCancellationRequested();
     if (!t || e.isToken(t)) {
      return;
     }
     switch (t.kind) {
     case 155:
      var n = t;
      y(n, n.body);
      for (var i = 0, a = n.parameters; i < a.length; i++) {
       var o = a[i];
       if (e.isParameterPropertyDeclaration(o)) {
        _(o);
       }
      }
      break;

     case 154:
     case 156:
     case 157:
     case 153:
      if (!e.hasDynamicName(t)) {
       y(t, t.body);
      }
      break;

     case 152:
     case 151:
      if (!e.hasDynamicName(t)) {
       _(t);
      }
      break;

     case 248:
      var s = t;
      if (s.name) {
       _(s.name);
      }
      var c = s.namedBindings;
      if (c) {
       if (c.kind === 249) {
        _(c);
       } else {
        for (var u = 0, l = c.elements; u < l.length; u++) {
         var f = l[u];
         _(f);
        }
       }
      }
      break;

     case 184:
     case 235:
      var d = t, p = d.name, m = d.initializer;
      if (e.isBindingPattern(p)) {
       b(p);
      } else if (m && q(m)) {
       if (m.name) {
        b(m);
       } else {
        h(t);
        e.forEachChild(m, b);
        v();
       }
      } else {
       y(t, m);
      }
      break;

     case 195:
     case 237:
     case 194:
      y(t, t.body);
      break;

     case 241:
      h(t);
      for (var g = 0, x = t.members; g < x.length; g++) {
       var k = x[g];
       if (!R(k)) {
        _(k);
       }
      }
      v();
      break;

     case 238:
     case 207:
     case 239:
      h(t);
      for (var S = 0, w = t.members; S < w.length; S++) {
       var k = w[S];
       b(k);
      }
      v();
      break;

     case 242:
      y(t, L(t).body);
      break;

     case 255:
     case 246:
     case 160:
     case 158:
     case 159:
     case 240:
      _(t);
      break;

     case 202:
      {
       var C = e.getSpecialPropertyAssignmentKind(t);
       switch (C) {
       case 1:
       case 2:
       case 3:
       case 6:
        y(t, t.right);
        return;

       case 4:
       case 5:
       case 0:
        break;

       default:
        e.Debug.assertNever(C);
       }
      }

     default:
      if (e.hasJSDocNodes(t)) {
       e.forEach(t.jsDoc, function(t) {
        e.forEach(t.tags, function(t) {
         if (e.isJSDocTypeAlias(t)) {
          _(t);
         }
        });
       });
      }
      e.forEachChild(t, b);
     }
    }
    function x(t, n) {
     var r = e.createMap();
     e.filterMutate(t, function(t) {
      var i = e.getNameOfDeclaration(t.node);
      var a = i && f(i);
      if (!a) {
       return true;
      }
      var o = r.get(a);
      if (!o) {
       r.set(a, t);
       return true;
      }
      if (o instanceof Array) {
       for (var s = 0, c = o; s < c.length; s++) {
        var u = c[s];
        if (k(u, t, n)) {
         return false;
        }
       }
       o.push(t);
       return true;
      } else {
       var u = o;
       if (k(u, t, n)) {
        return false;
       }
       r.set(a, [ u, t ]);
       return true;
      }
     });
    }
    function k(e, t, n) {
     if (S(e.node, t.node, n)) {
      D(e, t);
      return true;
     }
     return false;
    }
    function S(t, n, r) {
     if (t.kind !== n.kind || t.parent !== n.parent && !(w(t, r) && w(n, r))) {
      return false;
     }
     switch (t.kind) {
     case 152:
     case 154:
     case 156:
     case 157:
      return e.hasModifier(t, 32) === e.hasModifier(n, 32);

     case 242:
      return C(t, n);

     default:
      return true;
     }
    }
    function w(t, n) {
     var r = e.isModuleBlock(t.parent) ? t.parent.parent : t.parent;
     return r === n.node || e.contains(n.additionalNodes, r);
    }
    function C(e, t) {
     return e.body.kind === t.body.kind && (e.body.kind !== 242 || C(e.body, t.body));
    }
    function D(t, n) {
     var r;
     t.additionalNodes = t.additionalNodes || [];
     t.additionalNodes.push(n.node);
     if (n.additionalNodes) {
      (r = t.additionalNodes).push.apply(r, n.additionalNodes);
     }
     t.children = e.concatenate(t.children, n.children);
     if (t.children) {
      x(t.children, t);
      T(t.children);
     }
    }
    function T(e) {
     e.sort(E);
    }
    function E(t, n) {
     return e.compareStringsCaseSensitiveUI(N(t.node), N(n.node)) || e.compareValues(d(t), d(n));
    }
    function N(t) {
     if (t.kind === 242) {
      return M(t);
     }
     var n = e.getNameOfDeclaration(t);
     if (n) {
      return e.unescapeLeadingUnderscores(e.getPropertyNameForPropertyNameNode(n));
     }
     switch (t.kind) {
     case 194:
     case 195:
     case 207:
      return j(t);

     default:
      return undefined;
     }
    }
    function A(t, n) {
     if (t.kind === 242) {
      return M(t);
     }
     if (n) {
      var r = f(n);
      if (r.length > 0) {
       return r;
      }
     }
     switch (t.kind) {
     case 277:
      var i = t;
      return e.isExternalModule(i) ? '"' + e.escapeString(e.getBaseFileName(e.removeFileExtension(e.normalizePath(i.fileName)))) + '"' : "<global>";

     case 195:
     case 237:
     case 194:
     case 238:
     case 207:
      if (e.getModifierFlags(t) & 512) {
       return "default";
      }
      return j(t);

     case 155:
      return "constructor";

     case 159:
      return "new()";

     case 158:
      return "()";

     case 160:
      return "[]";

     default:
      return "<unknown>";
     }
    }
    function F(t) {
     var n = [];
     function r(e) {
      if (i(e)) {
       n.push(e);
       if (e.children) {
        for (var t = 0, a = e.children; t < a.length; t++) {
         var o = a[t];
         r(o);
        }
       }
      }
     }
     r(t);
     return n;
     function i(t) {
      switch (d(t)) {
      case 238:
      case 207:
      case 241:
      case 239:
      case 242:
      case 277:
      case 240:
      case 301:
      case 295:
       return true;

      case 155:
      case 154:
      case 156:
      case 157:
      case 235:
       return r(t);

      case 195:
      case 237:
      case 194:
       return n(t);

      default:
       return false;
      }
      function n(e) {
       if (!e.node.body) {
        return false;
       }
       switch (d(e.parent)) {
       case 243:
       case 277:
       case 154:
       case 155:
        return true;

       default:
        return r(e);
       }
      }
      function r(t) {
       return e.some(t.children, function(e) {
        var t = d(e);
        return t !== 235 && t !== 184;
       });
      }
     }
    }
    function P(t) {
     return {
      text: A(t.node, t.name),
      kind: e.getNodeKind(t.node),
      kindModifiers: z(t.node),
      spans: O(t),
      nameSpan: t.name && B(t.name),
      childItems: e.map(t.children, P)
     };
    }
    function I(t) {
     return {
      text: A(t.node, t.name),
      kind: e.getNodeKind(t.node),
      kindModifiers: z(t.node),
      spans: O(t),
      childItems: e.map(t.children, n) || s,
      indent: t.indent,
      bolded: false,
      grayed: false
     };
     function n(t) {
      return {
       text: A(t.node, t.name),
       kind: e.getNodeKind(t.node),
       kindModifiers: e.getNodeModifiers(t.node),
       spans: O(t),
       childItems: s,
       indent: 0,
       bolded: false,
       grayed: false
      };
     }
    }
    function O(e) {
     var t = [ B(e.node) ];
     if (e.additionalNodes) {
      for (var n = 0, r = e.additionalNodes; n < r.length; n++) {
       var i = r[n];
       t.push(B(i));
      }
     }
     return t;
    }
    function M(t) {
     if (e.isAmbientModule(t)) {
      return e.getTextOfNode(t.name);
     }
     var n = [];
     n.push(e.getTextOfIdentifierOrLiteral(t.name));
     while (t.body && t.body.kind === 242) {
      t = t.body;
      n.push(e.getTextOfIdentifierOrLiteral(t.name));
     }
     return n.join(".");
    }
    function L(e) {
     return e.body.kind === 242 ? L(e.body) : e;
    }
    function R(e) {
     return !e.name || e.name.kind === 147;
    }
    function B(t) {
     return t.kind === 277 ? e.createTextSpanFromRange(t) : e.createTextSpanFromNode(t, i);
    }
    function z(t) {
     if (t.parent && t.parent.kind === 235) {
      t = t.parent;
     }
     return e.getNodeModifiers(t);
    }
    function j(t) {
     if (t.name && e.getFullWidth(t.name) > 0) {
      return e.declarationNameToString(t.name);
     } else if (t.parent.kind === 235) {
      return e.declarationNameToString(t.parent.name);
     } else if (t.parent.kind === 202 && t.parent.operatorToken.kind === 58) {
      return f(t.parent.left).replace(n, "");
     } else if (t.parent.kind === 273 && t.parent.name) {
      return f(t.parent.name);
     } else if (e.getModifierFlags(t) & 512) {
      return "default";
     } else {
      return e.isClassLike(t) ? "<class>" : "<function>";
     }
    }
    function q(e) {
     switch (e.kind) {
     case 195:
     case 194:
     case 207:
      return true;

     default:
      return false;
     }
    }
   })(t = e.NavigationBar || (e.NavigationBar = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    function n(t, n, c, u, f) {
     var d = e.textChanges.ChangeTracker.fromContext({
      host: c,
      formatContext: n
     });
     var p = function(e) {
      return o(i(e, t, u));
     };
     var m = t.statements.filter(e.isImportDeclaration);
     k(m, p);
     var _ = t.statements.filter(e.isExportDeclaration);
     k(_, s);
     for (var g = 0, h = t.statements.filter(e.isAmbientModule); g < h.length; g++) {
      var v = h[g];
      var y = r(v);
      var b = y.statements.filter(e.isImportDeclaration);
      k(b, p);
      var x = y.statements.filter(e.isExportDeclaration);
      k(x, s);
     }
     return d.getChanges();
     function k(r, i) {
      if (e.length(r) === 0) {
       return;
      }
      e.suppressLeadingTrivia(r[0]);
      var o = e.group(r, function(e) {
       return a(e.moduleSpecifier);
      });
      var s = e.stableSort(o, function(e, t) {
       return l(e[0].moduleSpecifier, t[0].moduleSpecifier);
      });
      var u = e.flatMap(s, function(e) {
       return a(e[0].moduleSpecifier) ? i(e) : e;
      });
      if (u.length === 0) {
       d.delete(t, r[0]);
      } else {
       d.replaceNodeWithNodes(t, r[0], u, {
        useNonAdjustedStartPosition: true,
        useNonAdjustedEndPosition: false,
        suffix: e.getNewLineOrDefaultFromHost(c, n.options)
       });
      }
      for (var f = 1; f < r.length; f++) {
       d.delete(t, r[f]);
      }
     }
    }
    t.organizeImports = n;
    function r(t) {
     var n = t.body;
     return n && !e.isIdentifier(n) ? e.isModuleBlock(n) ? n : r(n) : undefined;
    }
    function i(t, n, r) {
     var i = r.getTypeChecker();
     var a = i.getJsxNamespace();
     var o = !!(n.transformFlags & 4);
     var s = [];
     for (var u = 0, l = t; u < l.length; u++) {
      var f = l[u];
      var d = f.importClause;
      if (!d) {
       s.push(f);
       continue;
      }
      var p = d.name, m = d.namedBindings;
      if (p && !g(p)) {
       p = undefined;
      }
      if (m) {
       if (e.isNamespaceImport(m)) {
        if (!g(m.name)) {
         m = undefined;
        }
       } else {
        var _ = m.elements.filter(function(e) {
         return g(e.name);
        });
        if (_.length < m.elements.length) {
         m = _.length ? e.updateNamedImports(m, _) : undefined;
        }
       }
      }
      if (p || m) {
       s.push(c(f, p, m));
      }
     }
     return s;
     function g(t) {
      return o && t.text === a || e.FindAllReferences.Core.isSymbolReferencedInFile(t, i, n);
     }
    }
    function a(t) {
     return t !== undefined && e.isStringLiteralLike(t) ? t.text : undefined;
    }
    function o(t) {
     if (t.length === 0) {
      return t;
     }
     var n = S(t), r = n.importWithoutClause, i = n.defaultImports, a = n.namespaceImports, o = n.namedImports;
     var s = [];
     if (r) {
      s.push(r);
     }
     if (i.length === 1 && a.length === 1 && o.length === 0) {
      var l = i[0];
      s.push(c(l, l.importClause.name, a[0].importClause.namedBindings));
      return s;
     }
     var d = e.stableSort(a, function(e, t) {
      return f(e.importClause.namedBindings.name, t.importClause.namedBindings.name);
     });
     for (var p = 0, m = d; p < m.length; p++) {
      var _ = m[p];
      s.push(c(_, undefined, _.importClause.namedBindings));
     }
     if (i.length === 0 && o.length === 0) {
      return s;
     }
     var g;
     var h = [];
     if (i.length === 1) {
      g = i[0].importClause.name;
     } else {
      for (var v = 0, y = i; v < y.length; v++) {
       var l = y[v];
       h.push(e.createImportSpecifier(e.createIdentifier("default"), l.importClause.name));
      }
     }
     h.push.apply(h, e.flatMap(o, function(e) {
      return e.importClause.namedBindings.elements;
     }));
     var b = u(h);
     var x = i.length > 0 ? i[0] : o[0];
     var k = b.length === 0 ? g ? undefined : e.createNamedImports(e.emptyArray) : o.length === 0 ? e.createNamedImports(b) : e.updateNamedImports(o[0].importClause.namedBindings, b);
     s.push(c(x, g, k));
     return s;
     function S(t) {
      var n;
      var r = [];
      var i = [];
      var a = [];
      for (var o = 0, s = t; o < s.length; o++) {
       var c = s[o];
       if (c.importClause === undefined) {
        n = n || c;
        continue;
       }
       var u = c.importClause, l = u.name, f = u.namedBindings;
       if (l) {
        r.push(c);
       }
       if (f) {
        if (e.isNamespaceImport(f)) {
         i.push(c);
        } else {
         a.push(c);
        }
       }
      }
      return {
       importWithoutClause: n,
       defaultImports: r,
       namespaceImports: i,
       namedImports: a
      };
     }
    }
    t.coalesceImports = o;
    function s(t) {
     if (t.length === 0) {
      return t;
     }
     var n = l(t), r = n.exportWithoutClause, i = n.namedExports;
     var a = [];
     if (r) {
      a.push(r);
     }
     if (i.length === 0) {
      return a;
     }
     var o = [];
     o.push.apply(o, e.flatMap(i, function(e) {
      return e.exportClause.elements;
     }));
     var s = u(o);
     var c = i[0];
     a.push(e.updateExportDeclaration(c, c.decorators, c.modifiers, e.updateNamedExports(c.exportClause, s), c.moduleSpecifier));
     return a;
     function l(e) {
      var t;
      var n = [];
      for (var r = 0, i = e; r < i.length; r++) {
       var a = i[r];
       if (a.exportClause === undefined) {
        t = t || a;
       } else {
        n.push(a);
       }
      }
      return {
       exportWithoutClause: t,
       namedExports: n
      };
     }
    }
    t.coalesceExports = s;
    function c(t, n, r) {
     return e.updateImportDeclaration(t, t.decorators, t.modifiers, e.updateImportClause(t.importClause, n, r), t.moduleSpecifier);
    }
    function u(t) {
     return e.stableSort(t, function(e, t) {
      return f(e.propertyName || e.name, t.propertyName || t.name) || f(e.name, t.name);
     });
    }
    function l(t, n) {
     var r = a(t);
     var i = a(n);
     return e.compareBooleans(r === undefined, i === undefined) || e.compareBooleans(e.isExternalModuleNameRelative(r), e.isExternalModuleNameRelative(i)) || e.compareStringsCaseInsensitive(r, i);
    }
    t.compareModuleSpecifiers = l;
    function f(t, n) {
     return e.compareStringsCaseInsensitive(t.text, n.text);
    }
   })(t = e.OrganizeImports || (e.OrganizeImports = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    function n(e, t) {
     var n = [];
     r(e, t, n);
     i(e, n);
     return n.sort(function(e, t) {
      return e.textSpan.start - t.textSpan.start;
     });
    }
    t.collectElements = n;
    function r(t, n, r) {
     var i = 40;
     var a = 0;
     var o = t.statements;
     var l = o.length;
     while (a < l) {
      while (a < l && !e.isAnyImportSyntax(o[a])) {
       p(o[a]);
       a++;
      }
      if (a === l) break;
      var f = a;
      while (a < l && e.isAnyImportSyntax(o[a])) {
       s(o[a], t, n, r);
       a++;
      }
      var d = a - 1;
      if (d !== f) {
       r.push(c(e.findChildOfKind(o[f], 91, t).getStart(t), o[d].getEnd(), "imports"));
      }
     }
     function p(a) {
      if (i === 0) return;
      n.throwIfCancellationRequested();
      if (e.isDeclaration(a)) {
       s(a, t, n, r);
      }
      var o = u(a, t);
      if (o) r.push(o);
      i--;
      if (e.isIfStatement(a) && a.elseStatement && e.isIfStatement(a.elseStatement)) {
       p(a.expression);
       p(a.thenStatement);
       i++;
       p(a.elseStatement);
       i--;
      } else {
       a.forEachChild(p);
      }
      i++;
     }
    }
    function i(t, n) {
     var r = [];
     var i = t.getLineStarts();
     for (var a = 0; a < i.length; a++) {
      var s = i[a];
      var c = a + 1 === i.length ? t.getEnd() : i[a + 1] - 1;
      var u = t.text.substring(s, c);
      var f = o(u);
      if (!f || e.isInComment(t, s)) {
       continue;
      }
      if (!f[1]) {
       var d = e.createTextSpanFromBounds(t.text.indexOf("//", s), c);
       r.push(l(d, "region", d, false, f[2] || "#region"));
      } else {
       var p = r.pop();
       if (p) {
        p.textSpan.length = c - p.textSpan.start;
        p.hintSpan.length = c - p.textSpan.start;
        n.push(p);
       }
      }
     }
    }
    var a = /^\s*\/\/\s*#(end)?region(?:\s+(.*))?(?:\r)?$/;
    function o(e) {
     return a.exec(e);
    }
    function s(t, n, r, i) {
     var a = e.getLeadingCommentRangesOfNode(t, n);
     if (!a) return;
     var s = -1;
     var u = -1;
     var l = 0;
     var f = n.getFullText();
     for (var d = 0, p = a; d < p.length; d++) {
      var m = p[d], _ = m.kind, g = m.pos, h = m.end;
      r.throwIfCancellationRequested();
      switch (_) {
      case 2:
       var v = f.slice(g, h);
       if (o(v)) {
        y();
        l = 0;
        break;
       }
       if (l === 0) {
        s = g;
       }
       u = h;
       l++;
       break;

      case 3:
       y();
       i.push(c(g, h, "comment"));
       l = 0;
       break;

      default:
       e.Debug.assertNever(_);
      }
     }
     y();
     function y() {
      if (l > 1) {
       i.push(c(s, u, "comment"));
      }
     }
    }
    function c(t, n, r) {
     return l(e.createTextSpanFromBounds(t, n), r);
    }
    function u(t, n) {
     switch (t.kind) {
     case 216:
      if (e.isFunctionBlock(t)) {
       return s(t.parent, t.parent.kind !== 195);
      }
      switch (t.parent.kind) {
      case 221:
      case 224:
      case 225:
      case 223:
      case 220:
      case 222:
      case 229:
      case 272:
       return s(t.parent);

      case 233:
       var r = t.parent;
       if (r.tryBlock === t) {
        return s(t.parent);
       } else if (r.finallyBlock === t) {
        return s(e.findChildOfKind(r, 87, n));
       }

      default:
       return l(e.createTextSpanFromNode(t, n), "code");
      }

     case 243:
      return s(t.parent);

     case 238:
     case 239:
     case 241:
     case 244:
      return s(t);

     case 186:
      return o(t);

     case 185:
      return o(t, 21);

     case 258:
      return i(t);

     case 259:
     case 260:
      return a(t.attributes);
     }
     function i(t) {
      var r = e.createTextSpanFromBounds(t.openingElement.getStart(n), t.closingElement.getEnd());
      var i = t.openingElement.tagName.getText(n);
      var a = "<" + i + ">...</" + i + ">";
      return l(r, "code", r, false, a);
     }
     function a(e) {
      if (e.properties.length === 0) {
       return undefined;
      }
      return c(e.getStart(n), e.getEnd(), "code");
     }
     function o(t, n) {
      if (n === void 0) {
       n = 17;
      }
      return s(t, false, !e.isArrayLiteralExpression(t.parent), n);
     }
     function s(r, i, a, o) {
      if (i === void 0) {
       i = false;
      }
      if (a === void 0) {
       a = true;
      }
      if (o === void 0) {
       o = 17;
      }
      var s = e.findChildOfKind(t, o, n);
      var c = o === 17 ? 18 : 22;
      var u = e.findChildOfKind(t, c, n);
      if (!s || !u) {
       return undefined;
      }
      var f = e.createTextSpanFromBounds(a ? s.getFullStart() : s.getStart(n), u.getEnd());
      return l(f, "code", e.createTextSpanFromNode(r, n), i);
     }
    }
    function l(e, t, n, r, i) {
     if (n === void 0) {
      n = e;
     }
     if (r === void 0) {
      r = false;
     }
     if (i === void 0) {
      i = "...";
     }
     return {
      textSpan: e,
      kind: t,
      hintSpan: n,
      bannerText: i,
      autoCollapse: r
     };
    }
   })(t = e.OutliningElementsCollector || (e.OutliningElementsCollector = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(e) {
    e[e["exact"] = 0] = "exact";
    e[e["prefix"] = 1] = "prefix";
    e[e["substring"] = 2] = "substring";
    e[e["camelCase"] = 3] = "camelCase";
   })(t = e.PatternMatchKind || (e.PatternMatchKind = {}));
   function n(e, t) {
    return {
     kind: e,
     isCaseSensitive: t
    };
   }
   function r(t) {
    var n = e.createMap();
    var r = t.trim().split(".").map(function(e) {
     return p(e.trim());
    });
    if (r.some(function(e) {
     return !e.subWordTextChunks.length;
    })) return undefined;
    return {
     getFullMatch: function(e, t) {
      return i(e, t, r, n);
     },
     getMatchForLastSegmentOfPattern: function(t) {
      return s(t, e.last(r), n);
     },
     patternContainsDots: r.length > 1
    };
   }
   e.createPatternMatcher = r;
   function i(t, n, r, i) {
    var a = s(n, e.last(r), i);
    if (!a) {
     return undefined;
    }
    if (r.length - 1 > t.length) {
     return undefined;
    }
    var o;
    for (var u = r.length - 2, l = t.length - 1; u >= 0; u -= 1, l -= 1) {
     o = c(o, s(t[l], r[u], i));
    }
    return o;
   }
   function a(e, t) {
    var n = t.get(e);
    if (!n) {
     t.set(e, n = S(e));
    }
    return n;
   }
   function o(r, i, o) {
    var s = g(r, i.textLowerCase);
    if (s === 0) {
     return n(i.text.length === r.length ? t.exact : t.prefix, e.startsWith(r, i.text));
    }
    if (i.isLowerCase) {
     if (s === -1) return undefined;
     var c = a(r, o);
     for (var u = 0, f = c; u < f.length; u++) {
      var p = f[u];
      if (l(r, p, i.text, true)) {
       return n(t.substring, l(r, p, i.text, false));
      }
     }
     if (i.text.length < r.length && m(r.charCodeAt(s))) {
      return n(t.substring, false);
     }
    } else {
     if (r.indexOf(i.text) > 0) {
      return n(t.substring, true);
     }
     if (i.characterSpans.length > 0) {
      var _ = a(r, o);
      var h = d(r, _, i, false) ? true : d(r, _, i, true) ? false : undefined;
      if (h !== undefined) {
       return n(t.camelCase, h);
      }
     }
    }
   }
   function s(e, t, n) {
    if (A(t.totalTextChunk.text, function(e) {
     return e !== 32 && e !== 42;
    })) {
     var r = o(e, t.totalTextChunk, n);
     if (r) return r;
    }
    var i = t.subWordTextChunks;
    var a;
    for (var s = 0, u = i; s < u.length; s++) {
     var l = u[s];
     a = c(a, o(e, l, n));
    }
    return a;
   }
   function c(t, n) {
    return e.min(t, n, u);
   }
   function u(t, n) {
    return t === undefined ? 1 : n === undefined ? -1 : e.compareValues(t.kind, n.kind) || e.compareBooleans(!t.isCaseSensitive, !n.isCaseSensitive);
   }
   function l(e, t, n, r, i) {
    if (i === void 0) {
     i = {
      start: 0,
      length: n.length
     };
    }
    return i.length <= t.length && N(0, i.length, function(a) {
     return f(n.charCodeAt(i.start + a), e.charCodeAt(t.start + a), r);
    });
   }
   function f(e, t, n) {
    return n ? h(e) === h(t) : e === t;
   }
   function d(t, n, r, i) {
    var a = r.characterSpans;
    var o = 0;
    var s = 0;
    var c;
    var u;
    while (true) {
     if (s === a.length) {
      return true;
     } else if (o === n.length) {
      return false;
     }
     var f = n[o];
     var d = false;
     for (;s < a.length; s++) {
      var p = a[s];
      if (d) {
       if (!m(r.text.charCodeAt(a[s - 1].start)) || !m(r.text.charCodeAt(a[s].start))) {
        break;
       }
      }
      if (!l(t, f, r.text, i, p)) {
       break;
      }
      d = true;
      c = c === undefined ? o : c;
      u = u === undefined ? true : u;
      f = e.createTextSpan(f.start + p.length, f.length - p.length);
     }
     if (!d && u !== undefined) {
      u = false;
     }
     o++;
    }
   }
   function p(e) {
    return {
     totalTextChunk: x(e),
     subWordTextChunks: b(e)
    };
   }
   function m(t) {
    if (t >= 65 && t <= 90) {
     return true;
    }
    if (t < 127 || !e.isUnicodeIdentifierStart(t, 6)) {
     return false;
    }
    var n = String.fromCharCode(t);
    return n === n.toUpperCase();
   }
   function _(t) {
    if (t >= 97 && t <= 122) {
     return true;
    }
    if (t < 127 || !e.isUnicodeIdentifierStart(t, 6)) {
     return false;
    }
    var n = String.fromCharCode(t);
    return n === n.toLowerCase();
   }
   function g(e, t) {
    var n = e.length - t.length;
    var r = function(n) {
     if (A(t, function(t, r) {
      return h(e.charCodeAt(r + n)) === t;
     })) {
      return {
       value: n
      };
     }
    };
    for (var i = 0; i <= n; i++) {
     var a = r(i);
     if (typeof a === "object") return a.value;
    }
    return -1;
   }
   function h(e) {
    if (e >= 65 && e <= 90) {
     return 97 + (e - 65);
    }
    if (e < 127) {
     return e;
    }
    return String.fromCharCode(e).toLowerCase().charCodeAt(0);
   }
   function v(e) {
    return e >= 48 && e <= 57;
   }
   function y(e) {
    return m(e) || _(e) || v(e) || e === 95 || e === 36;
   }
   function b(e) {
    var t = [];
    var n = 0;
    var r = 0;
    for (var i = 0; i < e.length; i++) {
     var a = e.charCodeAt(i);
     if (y(a)) {
      if (r === 0) {
       n = i;
      }
      r++;
     } else {
      if (r > 0) {
       t.push(x(e.substr(n, r)));
       r = 0;
      }
     }
    }
    if (r > 0) {
     t.push(x(e.substr(n, r)));
    }
    return t;
   }
   function x(e) {
    var t = e.toLowerCase();
    return {
     text: e,
     textLowerCase: t,
     isLowerCase: e === t,
     characterSpans: k(e)
    };
   }
   function k(e) {
    return w(e, false);
   }
   e.breakIntoCharacterSpans = k;
   function S(e) {
    return w(e, true);
   }
   e.breakIntoWordSpans = S;
   function w(t, n) {
    var r = [];
    var i = 0;
    for (var a = 1; a < t.length; a++) {
     var o = v(t.charCodeAt(a - 1));
     var s = v(t.charCodeAt(a));
     var c = E(t, n, a);
     var u = n && T(t, a, i);
     if (C(t.charCodeAt(a - 1)) || C(t.charCodeAt(a)) || o !== s || c || u) {
      if (!D(t, i, a)) {
       r.push(e.createTextSpan(i, a - i));
      }
      i = a;
     }
    }
    if (!D(t, i, t.length)) {
     r.push(e.createTextSpan(i, t.length - i));
    }
    return r;
   }
   function C(e) {
    switch (e) {
    case 33:
    case 34:
    case 35:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 44:
    case 45:
    case 46:
    case 47:
    case 58:
    case 59:
    case 63:
    case 64:
    case 91:
    case 92:
    case 93:
    case 95:
    case 123:
    case 125:
     return true;
    }
    return false;
   }
   function D(e, t, n) {
    return A(e, function(e) {
     return C(e) && e !== 95;
    }, t, n);
   }
   function T(e, t, n) {
    return t !== n && t + 1 < e.length && m(e.charCodeAt(t)) && _(e.charCodeAt(t + 1)) && A(e, m, n, t);
   }
   function E(e, t, n) {
    var r = m(e.charCodeAt(n - 1));
    var i = m(e.charCodeAt(n));
    return i && (!t || !r);
   }
   function N(e, t, n) {
    for (var r = e; r < t; r++) {
     if (!n(r)) {
      return false;
     }
    }
    return true;
   }
   function A(e, t, n, r) {
    if (n === void 0) {
     n = 0;
    }
    if (r === void 0) {
     r = e.length;
    }
    return N(n, r, function(n) {
     return t(e.charCodeAt(n), n);
    });
   }
  })(s || (s = {}));
  var s;
  (function(e) {
   function t(t, n, r) {
    if (n === void 0) {
     n = true;
    }
    if (r === void 0) {
     r = false;
    }
    var i = {
     languageVersion: 1,
     pragmas: undefined,
     checkJsDirective: undefined,
     referencedFiles: [],
     typeReferenceDirectives: [],
     libReferenceDirectives: [],
     amdDependencies: [],
     hasNoDefaultLib: undefined,
     moduleName: undefined
    };
    var a = [];
    var o;
    var s;
    var c;
    var u = 0;
    var l = false;
    function f() {
     s = c;
     c = e.scanner.scan();
     if (c === 17) {
      u++;
     } else if (c === 18) {
      u--;
     }
     return c;
    }
    function d() {
     var t = e.scanner.getTokenValue();
     var n = e.scanner.getTokenPos();
     return {
      fileName: t,
      pos: n,
      end: n + t.length
     };
    }
    function p() {
     if (!o) {
      o = [];
     }
     o.push({
      ref: d(),
      depth: u
     });
    }
    function m() {
     a.push(d());
     _();
    }
    function _() {
     if (u === 0) {
      l = true;
     }
    }
    function g() {
     var t = e.scanner.getToken();
     if (t === 124) {
      t = f();
      if (t === 129) {
       t = f();
       if (t === 9) {
        p();
       }
      }
      return true;
     }
     return false;
    }
    function h() {
     if (s === 23) {
      return false;
     }
     var t = e.scanner.getToken();
     if (t === 91) {
      t = f();
      if (t === 19) {
       t = f();
       if (t === 9) {
        m();
        return true;
       }
      } else if (t === 9) {
       m();
       return true;
      } else {
       if (t === 71 || e.isKeyword(t)) {
        t = f();
        if (t === 143) {
         t = f();
         if (t === 9) {
          m();
          return true;
         }
        } else if (t === 58) {
         if (y(true)) {
          return true;
         }
        } else if (t === 26) {
         t = f();
        } else {
         return true;
        }
       }
       if (t === 17) {
        t = f();
        while (t !== 18 && t !== 1) {
         t = f();
        }
        if (t === 18) {
         t = f();
         if (t === 143) {
          t = f();
          if (t === 9) {
           m();
          }
         }
        }
       } else if (t === 39) {
        t = f();
        if (t === 118) {
         t = f();
         if (t === 71 || e.isKeyword(t)) {
          t = f();
          if (t === 143) {
           t = f();
           if (t === 9) {
            m();
           }
          }
         }
        }
       }
      }
      return true;
     }
     return false;
    }
    function v() {
     var t = e.scanner.getToken();
     if (t === 84) {
      _();
      t = f();
      if (t === 17) {
       t = f();
       while (t !== 18 && t !== 1) {
        t = f();
       }
       if (t === 18) {
        t = f();
        if (t === 143) {
         t = f();
         if (t === 9) {
          m();
         }
        }
       }
      } else if (t === 39) {
       t = f();
       if (t === 143) {
        t = f();
        if (t === 9) {
         m();
        }
       }
      } else if (t === 91) {
       t = f();
       if (t === 71 || e.isKeyword(t)) {
        t = f();
        if (t === 58) {
         if (y(true)) {
          return true;
         }
        }
       }
      }
      return true;
     }
     return false;
    }
    function y(t) {
     var n = t ? f() : e.scanner.getToken();
     if (n === 133) {
      n = f();
      if (n === 19) {
       n = f();
       if (n === 9) {
        m();
       }
      }
      return true;
     }
     return false;
    }
    function b() {
     var t = e.scanner.getToken();
     if (t === 71 && e.scanner.getTokenValue() === "define") {
      t = f();
      if (t !== 19) {
       return true;
      }
      t = f();
      if (t === 9) {
       t = f();
       if (t === 26) {
        t = f();
       } else {
        return true;
       }
      }
      if (t !== 21) {
       return true;
      }
      t = f();
      while (t !== 22 && t !== 1) {
       if (t === 9) {
        m();
       }
       t = f();
      }
      return true;
     }
     return false;
    }
    function x() {
     e.scanner.setText(t);
     f();
     while (true) {
      if (e.scanner.getToken() === 1) {
       break;
      }
      if (g() || h() || v() || r && (y(false) || b())) {
       continue;
      } else {
       f();
      }
     }
     e.scanner.setText(undefined);
    }
    if (n) {
     x();
    }
    e.processCommentPragmas(i, t);
    e.processPragmasIntoFields(i, e.noop);
    if (l) {
     if (o) {
      for (var k = 0, S = o; k < S.length; k++) {
       var w = S[k];
       a.push(w.ref);
      }
     }
     return {
      referencedFiles: i.referencedFiles,
      typeReferenceDirectives: i.typeReferenceDirectives,
      libReferenceDirectives: i.libReferenceDirectives,
      importedFiles: a,
      isLibFile: !!i.hasNoDefaultLib,
      ambientExternalModules: undefined
     };
    } else {
     var C = void 0;
     if (o) {
      for (var D = 0, T = o; D < T.length; D++) {
       var w = T[D];
       if (w.depth === 0) {
        if (!C) {
         C = [];
        }
        C.push(w.ref.fileName);
       } else {
        a.push(w.ref);
       }
      }
     }
     return {
      referencedFiles: i.referencedFiles,
      typeReferenceDirectives: i.typeReferenceDirectives,
      libReferenceDirectives: i.libReferenceDirectives,
      importedFiles: a,
      isLibFile: !!i.hasNoDefaultLib,
      ambientExternalModules: C
     };
    }
   }
   e.preProcessFile = t;
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    function n(t, n, i) {
     var o = e.getTouchingPropertyName(n, i);
     var c = o && s(o) ? r(o, t.getTypeChecker(), n, function(e) {
      return t.isSourceFileDefaultLibrary(e.getSourceFile());
     }) : undefined;
     return c || a(e.Diagnostics.You_cannot_rename_this_element);
    }
    t.getRenameInfo = n;
    function r(t, n, r, o) {
     var s = n.getSymbolAtLocation(t);
     if (!s) return;
     var c = s.declarations;
     if (!c || c.length === 0) return;
     if (c.some(o)) {
      return a(e.Diagnostics.You_cannot_rename_elements_that_are_defined_in_the_standard_TypeScript_library);
     }
     if (e.isIdentifier(t) && t.originalKeywordKind === 79 && s.parent.flags & 1536) {
      return undefined;
     }
     if (e.isStringLiteralLike(t) && e.tryGetImportFromModuleSpecifier(t)) return undefined;
     var u = e.SymbolDisplay.getSymbolKind(n, s, t);
     var l = e.isImportOrExportSpecifierName(t) || e.isStringOrNumericLiteral(t) && t.parent.kind === 147 ? e.stripQuotes(e.getTextOfIdentifierOrLiteral(t)) : undefined;
     var f = l || n.symbolToString(s);
     var d = l || n.getFullyQualifiedName(s);
     return i(f, d, u, e.SymbolDisplay.getSymbolModifiers(s), t, r);
    }
    function i(e, t, n, r, i, a) {
     return {
      canRename: true,
      kind: n,
      displayName: e,
      localizedErrorMessage: undefined,
      fullDisplayName: t,
      kindModifiers: r,
      triggerSpan: o(i, a)
     };
    }
    function a(t) {
     return {
      canRename: false,
      localizedErrorMessage: e.getLocaleSpecificMessage(t),
      displayName: undefined,
      fullDisplayName: undefined,
      kind: undefined,
      kindModifiers: undefined,
      triggerSpan: undefined
     };
    }
    function o(t, n) {
     var r = t.getStart(n);
     var i = t.getWidth(n);
     if (t.kind === 9) {
      r += 1;
      i -= 2;
     }
     return e.createTextSpan(r, i);
    }
    function s(t) {
     switch (t.kind) {
     case 71:
     case 9:
     case 99:
      return true;

     case 8:
      return e.isLiteralNameOfPropertyDeclarationOrIndexAccess(t);

     default:
      return false;
     }
    }
   })(t = e.Rename || (e.Rename = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n;
    (function(e) {
     e[e["TypeArguments"] = 0] = "TypeArguments";
     e[e["CallArguments"] = 1] = "CallArguments";
     e[e["TaggedTemplateArguments"] = 2] = "TaggedTemplateArguments";
     e[e["JSXAttributesArguments"] = 3] = "JSXAttributesArguments";
    })(n || (n = {}));
    var r;
    (function(e) {
     e[e["Call"] = 0] = "Call";
     e[e["TypeArgs"] = 1] = "TypeArgs";
    })(r || (r = {}));
    function i(t, n, r, i, s) {
     var c = t.getTypeChecker();
     var u = e.findTokenOnLeftOfPosition(n, r);
     if (!u) {
      return undefined;
     }
     var l = !!i && i.kind === "characterTyped";
     if (l) {
      if (e.isInString(n, r, u) || e.isInComment(n, r)) {
       return undefined;
      }
     }
     var f = g(u, r, n);
     if (!f) return undefined;
     s.throwIfCancellationRequested();
     var d = a(f, c, n, u, l);
     s.throwIfCancellationRequested();
     if (!d) {
      if (e.isSourceFileJavaScript(n)) {
       return o(f, t, s);
      }
      return undefined;
     }
     return c.runWithCancellationToken(s, function(e) {
      return b(d.candidates, d.resolvedSignature, f, n, e);
     });
    }
    t.getSignatureHelpItems = i;
    function a(t, n, r, i, a) {
     var o = t.invocation;
     if (o.kind === 0) {
      if (a) {
       if (e.isCallOrNewExpression(o.node)) {
        var c = o.node.getChildren(r);
        switch (i.kind) {
        case 19:
         if (!e.contains(c, i)) {
          return undefined;
         }
         break;

        case 26:
         var u = e.findContainingList(i);
         if (!u || !e.contains(c, e.findContainingList(i))) {
          return undefined;
         }
         break;

        case 27:
         if (!s(i, r, o.node.expression)) {
          return undefined;
         }
         break;

        default:
         return undefined;
        }
       } else {
        return undefined;
       }
      }
      var l = [];
      var f = n.getResolvedSignature(o.node, l, t.argumentCount);
      return l.length === 0 ? undefined : {
       candidates: l,
       resolvedSignature: f
      };
     } else if (o.kind === 1) {
      if (a && !s(i, r, o.called)) {
       return undefined;
      }
      var l = e.getPossibleGenericSignatures(o.called, t.argumentCount, n);
      return l.length === 0 ? undefined : {
       candidates: l,
       resolvedSignature: e.first(l)
      };
     } else {
      e.Debug.assertNever(o);
     }
    }
    function o(t, n, r) {
     var i = v(t.invocation);
     var a = e.isIdentifier(i) ? i : e.isPropertyAccessExpression(i) ? i.name : undefined;
     if (!a || !a.escapedText) {
      return undefined;
     }
     var o = n.getTypeChecker();
     var s = function(e) {
      var n = e.getNamedDeclarations();
      var i = n.get(a.text);
      if (i) {
       var s = function(n) {
        var i = n.symbol;
        if (i) {
         var a = o.getTypeOfSymbolAtLocation(i, n);
         if (a) {
          var s = a.getCallSignatures();
          if (s && s.length) {
           return {
            value: o.runWithCancellationToken(r, function(n) {
             return b(s, s[0], t, e, n);
            })
           };
          }
         }
        }
       };
       for (var c = 0, u = i; c < u.length; c++) {
        var l = u[c];
        var f = s(l);
        if (typeof f === "object") return f;
       }
      }
     };
     for (var c = 0, u = n.getSourceFiles(); c < u.length; c++) {
      var l = u[c];
      var f = s(l);
      if (typeof f === "object") return f.value;
     }
    }
    function s(t, n, r) {
     var i = e.Debug.assertDefined(e.findPrecedingToken(t.getFullStart(), n, t.parent, true));
     return e.rangeContainsRange(r, i);
    }
    function c(e, t, n) {
     var r = u(e, t, n);
     return !r || r.kind === 0 || r.invocation.kind === 1 ? undefined : {
      invocation: r.invocation.node,
      argumentCount: r.argumentCount,
      argumentIndex: r.argumentIndex
     };
    }
    t.getArgumentInfoForCompletions = c;
    function u(t, n, r) {
     var i = t.parent;
     if (e.isCallOrNewExpression(i)) {
      var a = i;
      var o = void 0;
      var s = void 0;
      if (t.kind === 27 || t.kind === 19) {
       o = h(i, t, r);
       e.Debug.assert(o !== undefined);
       s = 0;
      } else {
       o = e.findContainingList(t);
       if (!o) return undefined;
       s = l(o, t);
      }
      var c = i.typeArguments && i.typeArguments.pos === o.pos ? 0 : 1;
      var u = f(o);
      if (s !== 0) {
       e.Debug.assertLessThan(s, u);
      }
      var _ = m(o, r);
      return {
       kind: c,
       invocation: {
        kind: 0,
        node: a
       },
       argumentsSpan: _,
       argumentIndex: s,
       argumentCount: u
      };
     } else if (e.isNoSubstitutionTemplateLiteral(t) && e.isTaggedTemplateExpression(i)) {
      if (e.isInsideTemplateLiteral(t, n, r)) {
       return p(i, 0, r);
      }
     } else if (e.isTemplateHead(t) && i.parent.kind === 191) {
      var g = i;
      var v = g.parent;
      e.Debug.assert(g.kind === 204);
      var s = e.isInsideTemplateLiteral(t, n, r) ? 0 : 1;
      return p(v, s, r);
     } else if (e.isTemplateSpan(i) && e.isTaggedTemplateExpression(i.parent.parent)) {
      var y = i;
      var v = i.parent.parent;
      if (e.isTemplateTail(t) && !e.isInsideTemplateLiteral(t, n, r)) {
       return undefined;
      }
      var b = y.parent.templateSpans.indexOf(y);
      var s = d(b, t, n, r);
      return p(v, s, r);
     } else if (e.isJsxOpeningLikeElement(i)) {
      var x = i.attributes.pos;
      var k = e.skipTrivia(r.text, i.attributes.end, false);
      return {
       kind: 3,
       invocation: {
        kind: 0,
        node: i
       },
       argumentsSpan: e.createTextSpan(x, k - x),
       argumentIndex: 0,
       argumentCount: 1
      };
     } else {
      var S = e.getPossibleTypeArgumentsInfo(t, r);
      if (S) {
       var w = S.called, C = S.nTypeArguments;
       var a = {
        kind: 1,
        called: w
       };
       var _ = e.createTextSpanFromBounds(w.getStart(r), t.end);
       return {
        kind: 0,
        invocation: a,
        argumentsSpan: _,
        argumentIndex: C,
        argumentCount: C + 1
       };
      }
     }
     return undefined;
    }
    function l(e, t) {
     var n = 0;
     for (var r = 0, i = e.getChildren(); r < i.length; r++) {
      var a = i[r];
      if (a === t) {
       break;
      }
      if (a.kind !== 26) {
       n++;
      }
     }
     return n;
    }
    function f(t) {
     var n = t.getChildren();
     var r = e.countWhere(n, function(e) {
      return e.kind !== 26;
     });
     if (n.length > 0 && e.last(n).kind === 26) {
      r++;
     }
     return r;
    }
    function d(t, n, r, i) {
     e.Debug.assert(r >= n.getStart(), "Assumed 'position' could not occur before node.");
     if (e.isTemplateLiteralToken(n)) {
      if (e.isInsideTemplateLiteral(n, r, i)) {
       return 0;
      }
      return t + 2;
     }
     return t + 1;
    }
    function p(t, n, r) {
     var i = e.isNoSubstitutionTemplateLiteral(t.template) ? 1 : t.template.templateSpans.length + 1;
     if (n !== 0) {
      e.Debug.assertLessThan(n, i);
     }
     return {
      kind: 2,
      invocation: {
       kind: 0,
       node: t
      },
      argumentsSpan: _(t, r),
      argumentIndex: n,
      argumentCount: i
     };
    }
    function m(t, n) {
     var r = t.getFullStart();
     var i = e.skipTrivia(n.text, t.getEnd(), false);
     return e.createTextSpan(r, i - r);
    }
    function _(t, n) {
     var r = t.template;
     var i = r.getStart();
     var a = r.getEnd();
     if (r.kind === 204) {
      var o = e.last(r.templateSpans);
      if (o.literal.getFullWidth() === 0) {
       a = e.skipTrivia(n.text, a, false);
      }
     }
     return e.createTextSpan(i, a - i);
    }
    function g(t, n, r) {
     var i = function(t) {
      e.Debug.assert(e.rangeContainsRange(t.parent, t), "Not a subspan", function() {
       return "Child: " + e.Debug.showSyntaxKind(t) + ", parent: " + e.Debug.showSyntaxKind(t.parent);
      });
      var i = u(t, n, r);
      if (i) {
       return {
        value: i
       };
      }
     };
     for (var a = t; !e.isBlock(a) && !e.isSourceFile(a); a = a.parent) {
      var o = i(a);
      if (typeof o === "object") return o.value;
     }
     return undefined;
    }
    function h(t, n, r) {
     var i = t.getChildren(r);
     var a = i.indexOf(n);
     e.Debug.assert(a >= 0 && i.length > a + 1);
     return i[a + 1];
    }
    function v(t) {
     return t.kind === 0 ? e.getInvokedExpression(t.node) : t.called;
    }
    var y = 8192 | 3112960 | 16384;
    function b(t, n, r, i, a) {
     var o = r.argumentCount, s = r.argumentsSpan, c = r.invocation, u = r.argumentIndex;
     var l = r.kind === 0;
     var f = c.kind === 0 ? c.node : c.called;
     var d = a.getSymbolAtLocation(v(c));
     var p = d && e.symbolToDisplayParts(a, d, undefined, undefined);
     var m = e.createPrinter({
      removeComments: true
     });
     var _ = t.map(function(t) {
      var n;
      var r = [];
      var o = [];
      if (p) {
       e.addRange(r, p);
      }
      var s;
      if (l) {
       s = false;
       r.push(e.punctuationPart(27));
       var c = (t.target || t).typeParameters;
       n = c && c.length > 0 ? e.map(c, b) : e.emptyArray;
       o.push(e.punctuationPart(29));
       var u = e.mapToDisplayParts(function(n) {
        var r = t.thisParameter ? [ a.symbolToParameterDeclaration(t.thisParameter, f, y) ] : [];
        var o = e.createNodeArray(r.concat(t.parameters.map(function(e) {
         return a.symbolToParameterDeclaration(e, f, y);
        })));
        m.writeList(1296, o, i, n);
       });
       e.addRange(o, u);
      } else {
       s = t.hasRestParameter;
       var d = e.mapToDisplayParts(function(n) {
        if (t.typeParameters && t.typeParameters.length) {
         var r = e.createNodeArray(t.typeParameters.map(function(e) {
          return a.typeParameterToDeclaration(e, f);
         }));
         m.writeList(26896, r, i, n);
        }
       });
       e.addRange(r, d);
       r.push(e.punctuationPart(19));
       n = e.map(t.parameters, h);
       o.push(e.punctuationPart(20));
      }
      var _ = e.mapToDisplayParts(function(e) {
       e.writePunctuation(":");
       e.writeSpace(" ");
       var n = a.getTypePredicateOfSignature(t);
       if (n) {
        a.writeTypePredicate(n, f, undefined, e);
       } else {
        a.writeType(a.getReturnTypeOfSignature(t), f, undefined, e);
       }
      });
      e.addRange(o, _);
      return {
       isVariadic: s,
       prefixDisplayParts: r,
       suffixDisplayParts: o,
       separatorDisplayParts: [ e.punctuationPart(26), e.spacePart() ],
       parameters: n,
       documentation: t.getDocumentationComment(a),
       tags: t.getJsDocTags()
      };
     });
     if (u !== 0) {
      e.Debug.assertLessThan(u, o);
     }
     var g = t.indexOf(n);
     e.Debug.assert(g !== -1);
     return {
      items: _,
      applicableSpan: s,
      selectedItemIndex: g,
      argumentIndex: u,
      argumentCount: o
     };
     function h(t) {
      var n = e.mapToDisplayParts(function(e) {
       var n = a.symbolToParameterDeclaration(t, f, y);
       m.writeNode(4, n, i, e);
      });
      return {
       name: t.name,
       documentation: t.getDocumentationComment(a),
       displayParts: n,
       isOptional: a.isOptionalParameter(t.valueDeclaration)
      };
     }
     function b(t) {
      var n = e.mapToDisplayParts(function(e) {
       var n = a.typeParameterToDeclaration(t, f);
       m.writeNode(4, n, i, e);
      });
      return {
       name: t.symbol.name,
       documentation: e.emptyArray,
       displayParts: n,
       isOptional: false
      };
     }
    }
   })(t = e.SignatureHelp || (e.SignatureHelp = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t = /^\/\/[@#] source[M]appingURL=(.+)\s*$/;
   var n = /^\s*(\/\/[@#] .*)?$/;
   var r = /^data:(?:application\/json(?:;charset=[uU][tT][fF]-8);base64,([A-Za-z0-9+\/=]+)$)?/;
   function i(i, a, o, s, c) {
    var u;
    return {
     tryGetOriginalLocation: p,
     tryGetGeneratedLocation: m,
     toLineColumnOffset: g,
     clearCache: h
    };
    function l(r) {
     var o = u.get(e.toPath(r, a, i));
     if (!o) {
      return;
     }
     var s = e.getLineStarts(o);
     for (var c = s.length - 1; c >= 0; c--) {
      var l = o.text.substring(s[c], s[c + 1]);
      var f = t.exec(l);
      if (f) {
       return f[1];
      } else if (!l.match(n)) {
       break;
      }
     }
    }
    function f(t, n, r) {
     var a;
     try {
      a = JSON.parse(n);
     } catch (e) {}
     if (!a || !a.sources || !a.file || !a.mappings) {
      return t.sourceMapper = e.sourcemaps.identitySourceMapper;
     }
     return t.sourceMapper = e.sourcemaps.decode({
      readFile: function(e) {
       return s.readFile(e);
      },
      fileExists: function(e) {
       return s.fileExists(e);
      },
      getCanonicalFileName: i,
      log: o
     }, r, a, c(), u);
    }
    function d(t, n) {
     if (!s.readFile || !s.fileExists) {
      return n.sourceMapper = e.sourcemaps.identitySourceMapper;
     }
     if (n.sourceMapper) {
      return n.sourceMapper;
     }
     var a = l(t);
     if (a) {
      var o = r.exec(a);
      if (o) {
       if (o[1]) {
        var c = o[1];
        return f(n, e.base64decode(e.sys, c), t);
       }
       a = undefined;
      }
     }
     var u = [];
     if (a) {
      u.push(a);
     }
     u.push(t + ".map");
     for (var d = 0, p = u; d < p.length; d++) {
      var m = p[d];
      var _ = e.toPath(m, e.getDirectoryPath(t), i);
      if (s.fileExists(_)) {
       return f(n, s.readFile(_), _);
      }
     }
     return n.sourceMapper = e.sourcemaps.identitySourceMapper;
    }
    function p(t) {
     if (!e.isDeclarationFileName(t.fileName)) return undefined;
     var n = _(t.fileName);
     if (!n) return undefined;
     var r = d(t.fileName, n).getOriginalPosition(t);
     return r === t ? undefined : p(r) || r;
    }
    function m(t) {
     var n = c();
     var r = e.getDeclarationEmitOutputFilePathWorker(t.fileName, n.getCompilerOptions(), a, n.getCommonSourceDirectory(), i);
     if (r === undefined) return undefined;
     var o = _(r);
     if (!o) return undefined;
     var s = d(r, o).getGeneratedPosition(t);
     return s === t ? undefined : s;
    }
    function _(t) {
     return c().getSourceFile(t) || u.get(e.toPath(t, a, i));
    }
    function g(t, n) {
     var r = e.toPath(t, a, i);
     var o = c().getSourceFile(r) || u.get(r);
     return o.getLineAndCharacterOfPosition(n);
    }
    function h() {
     u = e.createSourceFileLikeCache(s);
    }
   }
   e.getSourceMapper = i;
  })(s || (s = {}));
  var s;
  (function(e) {
   function t(t, r, o) {
    r.getSemanticDiagnostics(t, o);
    var s = [];
    if (t.commonJsModuleIndicator && (e.programContainsEs6Modules(r) || e.compilerOptionsIndicateEs6Modules(r.getCompilerOptions())) && n(t)) {
     s.push(e.createDiagnosticForNode(a(t.commonJsModuleIndicator), e.Diagnostics.File_is_a_CommonJS_module_it_may_be_converted_to_an_ES6_module));
    }
    var c = e.isSourceFileJavaScript(t);
    g(t);
    if (e.getAllowSyntheticDefaultImports(r.getCompilerOptions())) {
     for (var u = 0, l = t.imports; u < l.length; u++) {
      var f = l[u];
      var d = e.importFromModuleSpecifier(f);
      var p = i(d);
      if (!p) continue;
      var m = e.getResolvedModule(t, f.text);
      var _ = m && r.getSourceFile(m.resolvedFileName);
      if (_ && _.externalModuleIndicator && e.isExportAssignment(_.externalModuleIndicator) && _.externalModuleIndicator.isExportEquals) {
       s.push(e.createDiagnosticForNode(p, e.Diagnostics.Import_may_be_converted_to_a_default_import));
      }
     }
    }
    e.addRange(s, t.bindSuggestionDiagnostics);
    e.addRange(s, r.getSuggestionDiagnostics(t, o));
    return s.sort(function(e, t) {
     return e.start - t.start;
    });
    function g(n) {
     if (c) {
      switch (n.kind) {
      case 194:
       var r = e.getDeclarationOfJSInitializer(n);
       if (r) {
        var i = r.symbol;
        if (i && (i.exports && i.exports.size || i.members && i.members.size)) {
         s.push(e.createDiagnosticForNode(e.isVariableDeclaration(n.parent) ? n.parent.name : n, e.Diagnostics.This_constructor_function_may_be_converted_to_a_class_declaration));
         break;
        }
       }

      case 237:
       var a = n.symbol;
       if (a.members && a.members.size > 0) {
        s.push(e.createDiagnosticForNode(e.isVariableDeclaration(n.parent) ? n.parent.name : n, e.Diagnostics.This_constructor_function_may_be_converted_to_a_class_declaration));
       }
       break;
      }
     } else {
      if (e.isVariableStatement(n) && n.parent === t && n.declarationList.flags & 2 && n.declarationList.declarations.length === 1) {
       var o = n.declarationList.declarations[0].initializer;
       if (o && e.isRequireCall(o, true)) {
        s.push(e.createDiagnosticForNode(o, e.Diagnostics.require_call_may_be_converted_to_an_import));
       }
      }
      if (e.codefix.parameterShouldGetTypeFromJSDoc(n)) {
       s.push(e.createDiagnosticForNode(n.name || n, e.Diagnostics.JSDoc_types_may_be_moved_to_TypeScript_types));
      }
     }
     n.forEachChild(g);
    }
   }
   e.computeSuggestionDiagnostics = t;
   function n(t) {
    return t.statements.some(function(t) {
     switch (t.kind) {
     case 217:
      return t.declarationList.declarations.some(function(t) {
       return e.isRequireCall(r(t.initializer), true);
      });

     case 219:
      {
       var n = t.expression;
       if (!e.isBinaryExpression(n)) return e.isRequireCall(n, true);
       var i = e.getSpecialPropertyAssignmentKind(n);
       return i === 1 || i === 2;
      }

     default:
      return false;
     }
    });
   }
   function r(t) {
    return e.isPropertyAccessExpression(t) ? r(t.expression) : t;
   }
   function i(t) {
    switch (t.kind) {
    case 247:
     var n = t.importClause, r = t.moduleSpecifier;
     return n && !n.name && n.namedBindings && n.namedBindings.kind === 249 && e.isStringLiteral(r) ? n.namedBindings.name : undefined;

    case 246:
     return t.name;

    default:
     return undefined;
    }
   }
   function a(t) {
    return e.isBinaryExpression(t) ? t.left : t;
   }
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    function n(t, n, i) {
     var a = r(t, n, i);
     if (a !== "") {
      return a;
     }
     var o = e.getCombinedLocalAndExportSymbolFlags(n);
     if (o & 32) {
      return e.getDeclarationOfKind(n, 207) ? "local class" : "class";
     }
     if (o & 384) return "enum";
     if (o & 524288) return "type";
     if (o & 64) return "interface";
     if (o & 262144) return "type parameter";
     if (o & 262144) return "type parameter";
     if (o & 8) return "enum member";
     if (o & 2097152) return "alias";
     if (o & 1536) return "module";
     return a;
    }
    t.getSymbolKind = n;
    function r(t, n, r) {
     var i = t.getRootSymbols(n);
     if (i.length === 1 && e.first(i).flags & 8192 && t.getTypeOfSymbolAtLocation(n, r).getNonNullableType().getCallSignatures().length !== 0) {
      return "method";
     }
     if (t.isUndefinedSymbol(n)) {
      return "var";
     }
     if (t.isArgumentsSymbol(n)) {
      return "local var";
     }
     if (r.kind === 99 && e.isExpression(r)) {
      return "parameter";
     }
     var a = e.getCombinedLocalAndExportSymbolFlags(n);
     if (a & 3) {
      if (e.isFirstDeclarationOfSymbolParameter(n)) {
       return "parameter";
      } else if (n.valueDeclaration && e.isVarConst(n.valueDeclaration)) {
       return "const";
      } else if (e.forEach(n.declarations, e.isLet)) {
       return "let";
      }
      return o(n) ? "local var" : "var";
     }
     if (a & 16) return o(n) ? "local function" : "function";
     if (a & 32768) return "getter";
     if (a & 65536) return "setter";
     if (a & 8192) return "method";
     if (a & 16384) return "constructor";
     if (a & 4) {
      if (a & 33554432 && n.checkFlags & 6) {
       var s = e.forEach(t.getRootSymbols(n), function(t) {
        var n = t.getFlags();
        if (n & (98308 | 3)) {
         return "property";
        }
        e.Debug.assert(!!(n & (8192 | 16)));
       });
       if (!s) {
        var c = t.getTypeOfSymbolAtLocation(n, r);
        if (c.getCallSignatures().length) {
         return "method";
        }
        return "property";
       }
       return s;
      }
      switch (r.parent && r.parent.kind) {
      case 260:
      case 258:
      case 259:
       return r.kind === 71 ? "property" : "JSX attribute";

      case 265:
       return "JSX attribute";

      default:
       return "property";
      }
     }
     return "";
    }
    function i(t) {
     var n = t && t.declarations && t.declarations.length > 0 ? e.getNodeModifiers(t.declarations[0]) : "";
     var r = t && t.flags & 16777216 ? "optional" : "";
     return n && r ? n + "," + r : n || r;
    }
    t.getSymbolModifiers = i;
    function a(t, i, o, s, c, u, l) {
     if (u === void 0) {
      u = e.getMeaningFromLocation(c);
     }
     var f = [];
     var d;
     var p;
     var m = e.getCombinedLocalAndExportSymbolFlags(i);
     var _ = r(t, i, c);
     var g = false;
     var h = c.kind === 99 && e.isExpression(c);
     var v;
     var y;
     var b;
     var x;
     if (_ !== "" || m & 32 || m & 2097152) {
      if (_ === "getter" || _ === "setter") {
       _ = "property";
      }
      var k = void 0;
      v = h ? t.getTypeAtLocation(c) : t.getTypeOfSymbolAtLocation(i.exportSymbol || i, c);
      if (c.parent && c.parent.kind === 187) {
       var S = c.parent.name;
       if (S === c || S && S.getFullWidth() === 0) {
        c = c.parent;
       }
      }
      var w = void 0;
      if (e.isCallOrNewExpression(c)) {
       w = c;
      } else if (e.isCallExpressionTarget(c) || e.isNewExpressionTarget(c)) {
       w = c.parent;
      } else if (c.parent && e.isJsxOpeningLikeElement(c.parent) && e.isFunctionLike(i.valueDeclaration)) {
       w = c.parent;
      }
      if (w) {
       var C = [];
       k = t.getResolvedSignature(w, C);
       var D = w.kind === 190 || e.isCallExpression(w) && w.expression.kind === 97;
       var T = D ? v.getConstructSignatures() : v.getCallSignatures();
       if (!e.contains(T, k.target) && !e.contains(T, k)) {
        k = T.length ? T[0] : undefined;
       }
       if (k) {
        if (D && m & 32) {
         _ = "constructor";
         $(v.symbol, _);
        } else if (m & 2097152) {
         _ = "alias";
         X(_);
         f.push(e.spacePart());
         if (D) {
          f.push(e.keywordPart(94));
          f.push(e.spacePart());
         }
         G(i);
        } else {
         $(i, _);
        }
        switch (_) {
        case "JSX attribute":
        case "property":
        case "var":
        case "const":
        case "let":
        case "parameter":
        case "local var":
         f.push(e.punctuationPart(56));
         f.push(e.spacePart());
         if (!(e.getObjectFlags(v) & 16) && v.symbol) {
          e.addRange(f, e.symbolToDisplayParts(t, v.symbol, s, undefined, 4 | 1));
          f.push(e.lineBreakPart());
         }
         if (D) {
          f.push(e.keywordPart(94));
          f.push(e.spacePart());
         }
         Q(k, T, 262144);
         break;

        default:
         Q(k, T);
        }
        g = true;
       }
      } else if (e.isNameOfFunctionDeclaration(c) && !(m & 98304) || c.kind === 123 && c.parent.kind === 155) {
       var E = c.parent;
       var N = e.find(i.declarations, function(e) {
        return e === (c.kind === 123 ? E.parent : E);
       });
       if (N) {
        var T = E.kind === 155 ? v.getNonNullableType().getConstructSignatures() : v.getNonNullableType().getCallSignatures();
        if (!t.isImplementationOfOverload(E)) {
         k = t.getSignatureFromDeclaration(E);
        } else {
         k = T[0];
        }
        if (E.kind === 155) {
         _ = "constructor";
         $(v.symbol, _);
        } else {
         $(E.kind === 158 && !(v.symbol.flags & 2048 || v.symbol.flags & 4096) ? v.symbol : i, _);
        }
        Q(k, T);
        g = true;
       }
      }
     }
     if (m & 32 && !g && !h) {
      W();
      if (e.getDeclarationOfKind(i, 207)) {
       X("local class");
      } else {
       f.push(e.keywordPart(75));
      }
      f.push(e.spacePart());
      G(i);
      Y(i, o);
     }
     if (m & 64 && u & 2) {
      V();
      f.push(e.keywordPart(109));
      f.push(e.spacePart());
      G(i);
      Y(i, o);
     }
     if (m & 524288) {
      V();
      f.push(e.keywordPart(139));
      f.push(e.spacePart());
      G(i);
      Y(i, o);
      f.push(e.spacePart());
      f.push(e.operatorPart(58));
      f.push(e.spacePart());
      e.addRange(f, e.typeToDisplayParts(t, t.getDeclaredTypeOfSymbol(i), s, 8388608));
     }
     if (m & 384) {
      V();
      if (e.some(i.declarations, function(t) {
       return e.isEnumDeclaration(t) && e.isEnumConst(t);
      })) {
       f.push(e.keywordPart(76));
       f.push(e.spacePart());
      }
      f.push(e.keywordPart(83));
      f.push(e.spacePart());
      G(i);
     }
     if (m & 1536) {
      V();
      var A = e.getDeclarationOfKind(i, 242);
      var F = A && A.name && A.name.kind === 71;
      f.push(e.keywordPart(F ? 130 : 129));
      f.push(e.spacePart());
      G(i);
     }
     if (m & 262144 && u & 2) {
      V();
      f.push(e.punctuationPart(19));
      f.push(e.textPart("type parameter"));
      f.push(e.punctuationPart(20));
      f.push(e.spacePart());
      G(i);
      if (i.parent) {
       H();
       G(i.parent, s);
       Y(i.parent, s);
      } else {
       var P = e.getDeclarationOfKind(i, 148);
       if (P === undefined) return e.Debug.fail();
       var A = P.parent;
       if (A) {
        if (e.isFunctionLikeKind(A.kind)) {
         H();
         var k = t.getSignatureFromDeclaration(A);
         if (A.kind === 159) {
          f.push(e.keywordPart(94));
          f.push(e.spacePart());
         } else if (A.kind !== 158 && A.name) {
          G(A.symbol);
         }
         e.addRange(f, e.signatureToDisplayParts(t, k, o, 32));
        } else if (A.kind === 240) {
         H();
         f.push(e.keywordPart(139));
         f.push(e.spacePart());
         G(A.symbol);
         Y(A.symbol, o);
        }
       }
      }
     }
     if (m & 8) {
      _ = "enum member";
      $(i, "enum member");
      var A = i.declarations[0];
      if (A.kind === 276) {
       var I = t.getConstantValue(A);
       if (I !== undefined) {
        f.push(e.spacePart());
        f.push(e.operatorPart(58));
        f.push(e.spacePart());
        f.push(e.displayPart(e.getTextOfConstantValue(I), typeof I === "number" ? e.SymbolDisplayPartKind.numericLiteral : e.SymbolDisplayPartKind.stringLiteral));
       }
      }
     }
     if (m & 2097152) {
      V();
      if (!g) {
       var O = t.getAliasedSymbol(i);
       if (O !== i && O.declarations && O.declarations.length > 0) {
        var M = O.declarations[0];
        var L = e.getNameOfDeclaration(M);
        if (L) {
         var R = e.isModuleWithStringLiteralName(M) && e.hasModifier(M, 2);
         var B = i.name !== "default" && !R;
         var z = a(t, O, e.getSourceFileOfNode(M), M, L, u, B ? i : O);
         f.push.apply(f, z.displayParts);
         f.push(e.lineBreakPart());
         b = z.documentation;
         x = z.tags;
        }
       }
      }
      switch (i.declarations[0].kind) {
      case 245:
       f.push(e.keywordPart(84));
       f.push(e.spacePart());
       f.push(e.keywordPart(130));
       break;

      case 252:
       f.push(e.keywordPart(84));
       f.push(e.spacePart());
       f.push(e.keywordPart(i.declarations[0].isExportEquals ? 58 : 79));
       break;

      case 255:
       f.push(e.keywordPart(84));
       break;

      default:
       f.push(e.keywordPart(91));
      }
      f.push(e.spacePart());
      G(i);
      e.forEach(i.declarations, function(n) {
       if (n.kind === 246) {
        var r = n;
        if (e.isExternalModuleImportEqualsDeclaration(r)) {
         f.push(e.spacePart());
         f.push(e.operatorPart(58));
         f.push(e.spacePart());
         f.push(e.keywordPart(133));
         f.push(e.punctuationPart(19));
         f.push(e.displayPart(e.getTextOfNode(e.getExternalModuleImportEqualsDeclarationExpression(r)), e.SymbolDisplayPartKind.stringLiteral));
         f.push(e.punctuationPart(20));
        } else {
         var i = t.getSymbolAtLocation(r.moduleReference);
         if (i) {
          f.push(e.spacePart());
          f.push(e.operatorPart(58));
          f.push(e.spacePart());
          G(i, s);
         }
        }
        return true;
       }
      });
     }
     if (!g) {
      if (_ !== "") {
       if (v) {
        if (h) {
         V();
         f.push(e.keywordPart(99));
        } else {
         $(i, _);
        }
        if (_ === "property" || _ === "JSX attribute" || m & 3 || _ === "local var" || h) {
         f.push(e.punctuationPart(56));
         f.push(e.spacePart());
         if (v.symbol && v.symbol.flags & 262144) {
          var j = e.mapToDisplayParts(function(n) {
           var r = t.typeParameterToDeclaration(v, s);
           K().writeNode(4, r, e.getSourceFileOfNode(e.getParseTreeNode(s)), n);
          });
          e.addRange(f, j);
         } else {
          e.addRange(f, e.typeToDisplayParts(t, v, s));
         }
        } else if (m & 16 || m & 8192 || m & 16384 || m & 131072 || m & 98304 || _ === "method") {
         var T = v.getNonNullableType().getCallSignatures();
         if (T.length) {
          Q(T[0], T);
         }
        }
       }
      } else {
       _ = n(t, i, c);
      }
     }
     if (!d) {
      d = i.getDocumentationComment(t);
      p = i.getJsDocTags();
      if (d.length === 0 && m & 4) {
       if (i.parent && e.forEach(i.parent.declarations, function(e) {
        return e.kind === 277;
       })) {
        for (var q = 0, U = i.declarations; q < U.length; q++) {
         var A = U[q];
         if (!A.parent || A.parent.kind !== 202) {
          continue;
         }
         var J = t.getSymbolAtLocation(A.parent.right);
         if (!J) {
          continue;
         }
         d = J.getDocumentationComment(t);
         p = J.getJsDocTags();
         if (d.length > 0) {
          break;
         }
        }
       }
      }
     }
     if (d.length === 0 && b) {
      d = b;
     }
     if (p.length === 0 && x) {
      p = x;
     }
     return {
      displayParts: f,
      documentation: d,
      symbolKind: _,
      tags: p
     };
     function K() {
      if (!y) {
       y = e.createPrinter({
        removeComments: true
       });
      }
      return y;
     }
     function V() {
      if (f.length) {
       f.push(e.lineBreakPart());
      }
      W();
     }
     function W() {
      if (l) {
       X("alias");
       f.push(e.spacePart());
      }
     }
     function H() {
      f.push(e.spacePart());
      f.push(e.keywordPart(92));
      f.push(e.spacePart());
     }
     function G(n, r) {
      if (l && n === i) {
       n = l;
      }
      var a = e.symbolToDisplayParts(t, n, r || o, undefined, 1 | 2 | 4);
      e.addRange(f, a);
      if (i.flags & 16777216) {
       f.push(e.punctuationPart(55));
      }
     }
     function $(t, n) {
      V();
      if (n) {
       X(n);
       if (t && !e.some(t.declarations, function(t) {
        return e.isArrowFunction(t) || (e.isFunctionExpression(t) || e.isClassExpression(t)) && !t.name;
       })) {
        f.push(e.spacePart());
        G(t);
       }
      }
     }
     function X(t) {
      switch (t) {
      case "var":
      case "function":
      case "let":
      case "const":
      case "constructor":
       f.push(e.textOrKeywordPart(t));
       return;

      default:
       f.push(e.punctuationPart(19));
       f.push(e.textOrKeywordPart(t));
       f.push(e.punctuationPart(20));
       return;
      }
     }
     function Q(n, r, i) {
      if (i === void 0) {
       i = 0;
      }
      e.addRange(f, e.signatureToDisplayParts(t, n, s, i | 32));
      if (r.length > 1) {
       f.push(e.spacePart());
       f.push(e.punctuationPart(19));
       f.push(e.operatorPart(37));
       f.push(e.displayPart((r.length - 1).toString(), e.SymbolDisplayPartKind.numericLiteral));
       f.push(e.spacePart());
       f.push(e.textPart(r.length === 2 ? "overload" : "overloads"));
       f.push(e.punctuationPart(20));
      }
      d = n.getDocumentationComment(t);
      p = n.getJsDocTags();
     }
     function Y(n, r) {
      var i = e.mapToDisplayParts(function(i) {
       var a = t.symbolToTypeParameterDeclarations(n, r);
       K().writeList(26896, a, e.getSourceFileOfNode(e.getParseTreeNode(r)), i);
      });
      e.addRange(f, i);
     }
    }
    t.getSymbolDisplayPartsDocumentationAndSymbolKind = a;
    function o(t) {
     if (t.parent) {
      return false;
     }
     return e.forEach(t.declarations, function(t) {
      if (t.kind === 194) {
       return true;
      }
      if (t.kind !== 235 && t.kind !== 237) {
       return false;
      }
      for (var n = t.parent; !e.isFunctionBlock(n); n = n.parent) {
       if (n.kind === 277 || n.kind === 243) {
        return false;
       }
      }
      return true;
     });
    }
   })(t = e.SymbolDisplay || (e.SymbolDisplay = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   function t(t, n) {
    var r = [];
    var a = n.compilerOptions ? i(n.compilerOptions, r) : e.getDefaultCompilerOptions();
    a.isolatedModules = true;
    a.suppressOutputPathCheck = true;
    a.allowNonTsExtensions = true;
    a.noLib = true;
    a.lib = undefined;
    a.types = undefined;
    a.noEmit = undefined;
    a.noEmitOnError = undefined;
    a.paths = undefined;
    a.rootDirs = undefined;
    a.declaration = undefined;
    a.declarationDir = undefined;
    a.out = undefined;
    a.outFile = undefined;
    a.noResolve = true;
    var o = n.fileName || (a.jsx ? "module.tsx" : "module.ts");
    var s = e.createSourceFile(o, t, a.target);
    if (n.moduleName) {
     s.moduleName = n.moduleName;
    }
    if (n.renamedDependencies) {
     s.renamedDependencies = e.createMapFromTemplate(n.renamedDependencies);
    }
    var c = e.getNewLineCharacter(a);
    var u;
    var l;
    var f = {
     getSourceFile: function(t) {
      return t === e.normalizePath(o) ? s : undefined;
     },
     writeFile: function(t, n) {
      if (e.fileExtensionIs(t, ".map")) {
       e.Debug.assertEqual(l, undefined, "Unexpected multiple source map outputs, file:", t);
       l = n;
      } else {
       e.Debug.assertEqual(u, undefined, "Unexpected multiple outputs, file:", t);
       u = n;
      }
     },
     getDefaultLibFileName: function() {
      return "lib.d.ts";
     },
     useCaseSensitiveFileNames: function() {
      return false;
     },
     getCanonicalFileName: function(e) {
      return e;
     },
     getCurrentDirectory: function() {
      return "";
     },
     getNewLine: function() {
      return c;
     },
     fileExists: function(e) {
      return e === o;
     },
     readFile: function() {
      return "";
     },
     directoryExists: function() {
      return true;
     },
     getDirectories: function() {
      return [];
     }
    };
    var d = e.createProgram([ o ], a, f);
    if (n.reportDiagnostics) {
     e.addRange(r, d.getSyntacticDiagnostics(s));
     e.addRange(r, d.getOptionsDiagnostics());
    }
    d.emit(undefined, undefined, undefined, undefined, n.transformers);
    if (u === undefined) return e.Debug.fail("Output generation failed");
    return {
     outputText: u,
     diagnostics: r,
     sourceMapText: l
    };
   }
   e.transpileModule = t;
   function n(n, r, i, a, o) {
    var s = t(n, {
     compilerOptions: r,
     fileName: i,
     reportDiagnostics: !!a,
     moduleName: o
    });
    e.addRange(a, s.diagnostics);
    return s.outputText;
   }
   e.transpile = n;
   var r;
   function i(t, n) {
    r = r || e.filter(e.optionDeclarations, function(t) {
     return typeof t.type === "object" && !e.forEachEntry(t.type, function(e) {
      return typeof e !== "number";
     });
    });
    t = e.cloneCompilerOptions(t);
    var i = function(r) {
     if (!e.hasProperty(t, r.name)) {
      return "continue";
     }
     var i = t[r.name];
     if (e.isString(i)) {
      t[r.name] = e.parseCustomTypeOption(r, i, n);
     } else {
      if (!e.forEachEntry(r.type, function(e) {
       return e === i;
      })) {
       n.push(e.createCompilerDiagnosticForInvalidCustomType(r));
      }
     }
    };
    for (var a = 0, o = r; a < o.length; a++) {
     var s = o[a];
     i(s);
    }
    return t;
   }
   e.fixupCompilerOptions = i;
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n;
    (function(e) {
     e[e["FormatDocument"] = 0] = "FormatDocument";
     e[e["FormatSelection"] = 1] = "FormatSelection";
     e[e["FormatOnEnter"] = 2] = "FormatOnEnter";
     e[e["FormatOnSemicolon"] = 3] = "FormatOnSemicolon";
     e[e["FormatOnOpeningCurlyBrace"] = 4] = "FormatOnOpeningCurlyBrace";
     e[e["FormatOnClosingCurlyBrace"] = 5] = "FormatOnClosingCurlyBrace";
    })(n = t.FormattingRequestKind || (t.FormattingRequestKind = {}));
    var r = function() {
     function t(e, t, n) {
      this.sourceFile = e;
      this.formattingRequestKind = t;
      this.options = n;
     }
     t.prototype.updateContext = function(t, n, r, i, a) {
      e.Debug.assert(t !== undefined, "currentTokenSpan is null");
      e.Debug.assert(n !== undefined, "currentTokenParent is null");
      e.Debug.assert(r !== undefined, "nextTokenSpan is null");
      e.Debug.assert(i !== undefined, "nextTokenParent is null");
      e.Debug.assert(a !== undefined, "commonParent is null");
      this.currentTokenSpan = t;
      this.currentTokenParent = n;
      this.nextTokenSpan = r;
      this.nextTokenParent = i;
      this.contextNode = a;
      this.contextNodeAllOnSameLine = undefined;
      this.nextNodeAllOnSameLine = undefined;
      this.tokensAreOnSameLine = undefined;
      this.contextNodeBlockIsOnOneLine = undefined;
      this.nextNodeBlockIsOnOneLine = undefined;
     };
     t.prototype.ContextNodeAllOnSameLine = function() {
      if (this.contextNodeAllOnSameLine === undefined) {
       this.contextNodeAllOnSameLine = this.NodeIsOnOneLine(this.contextNode);
      }
      return this.contextNodeAllOnSameLine;
     };
     t.prototype.NextNodeAllOnSameLine = function() {
      if (this.nextNodeAllOnSameLine === undefined) {
       this.nextNodeAllOnSameLine = this.NodeIsOnOneLine(this.nextTokenParent);
      }
      return this.nextNodeAllOnSameLine;
     };
     t.prototype.TokensAreOnSameLine = function() {
      if (this.tokensAreOnSameLine === undefined) {
       var e = this.sourceFile.getLineAndCharacterOfPosition(this.currentTokenSpan.pos).line;
       var t = this.sourceFile.getLineAndCharacterOfPosition(this.nextTokenSpan.pos).line;
       this.tokensAreOnSameLine = e === t;
      }
      return this.tokensAreOnSameLine;
     };
     t.prototype.ContextNodeBlockIsOnOneLine = function() {
      if (this.contextNodeBlockIsOnOneLine === undefined) {
       this.contextNodeBlockIsOnOneLine = this.BlockIsOnOneLine(this.contextNode);
      }
      return this.contextNodeBlockIsOnOneLine;
     };
     t.prototype.NextNodeBlockIsOnOneLine = function() {
      if (this.nextNodeBlockIsOnOneLine === undefined) {
       this.nextNodeBlockIsOnOneLine = this.BlockIsOnOneLine(this.nextTokenParent);
      }
      return this.nextNodeBlockIsOnOneLine;
     };
     t.prototype.NodeIsOnOneLine = function(e) {
      var t = this.sourceFile.getLineAndCharacterOfPosition(e.getStart(this.sourceFile)).line;
      var n = this.sourceFile.getLineAndCharacterOfPosition(e.getEnd()).line;
      return t === n;
     };
     t.prototype.BlockIsOnOneLine = function(t) {
      var n = e.findChildOfKind(t, 17, this.sourceFile);
      var r = e.findChildOfKind(t, 18, this.sourceFile);
      if (n && r) {
       var i = this.sourceFile.getLineAndCharacterOfPosition(n.getEnd()).line;
       var a = this.sourceFile.getLineAndCharacterOfPosition(r.getStart(this.sourceFile)).line;
       return i === a;
      }
      return false;
     };
     return t;
    }();
    t.FormattingContext = r;
   })(t = e.formatting || (e.formatting = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n = e.createScanner(6, false, 0);
    var r = e.createScanner(6, false, 1);
    var i;
    (function(e) {
     e[e["Scan"] = 0] = "Scan";
     e[e["RescanGreaterThanToken"] = 1] = "RescanGreaterThanToken";
     e[e["RescanSlashToken"] = 2] = "RescanSlashToken";
     e[e["RescanTemplateToken"] = 3] = "RescanTemplateToken";
     e[e["RescanJsxIdentifier"] = 4] = "RescanJsxIdentifier";
     e[e["RescanJsxText"] = 5] = "RescanJsxText";
    })(i || (i = {}));
    function a(t, i, a, o, s) {
     var c = i === 1 ? r : n;
     c.setText(t);
     c.setTextPos(a);
     var u = true;
     var l;
     var f;
     var d;
     var p;
     var m;
     var _ = s({
      advance: g,
      readTokenInfo: S,
      isOnToken: C,
      getCurrentLeadingTrivia: function() {
       return l;
      },
      lastTrailingTriviaWasNewLine: function() {
       return u;
      },
      skipToEndOf: T
     });
     m = undefined;
     c.setText(undefined);
     return _;
     function g() {
      m = undefined;
      var t = c.getStartPos() !== a;
      if (t) {
       u = !!f && e.last(f).kind === 4;
      } else {
       c.scan();
      }
      l = undefined;
      f = undefined;
      var n = c.getStartPos();
      while (n < o) {
       var r = c.getToken();
       if (!e.isTrivia(r)) {
        break;
       }
       c.scan();
       var i = {
        pos: n,
        end: c.getStartPos(),
        kind: r
       };
       n = c.getStartPos();
       l = e.append(l, i);
      }
      d = c.getStartPos();
     }
     function h(e) {
      switch (e.kind) {
      case 31:
      case 66:
      case 67:
      case 47:
      case 46:
       return true;
      }
      return false;
     }
     function v(t) {
      if (t.parent) {
       switch (t.parent.kind) {
       case 265:
       case 260:
       case 261:
       case 259:
        return e.isKeyword(t.kind) || t.kind === 71;
       }
      }
      return false;
     }
     function y(e) {
      return e.kind === 10;
     }
     function b(e) {
      return e.kind === 12;
     }
     function x(e) {
      return e.kind === 15 || e.kind === 16;
     }
     function k(e) {
      return e === 41 || e === 63;
     }
     function S(t) {
      e.Debug.assert(C());
      var n = h(t) ? 1 : b(t) ? 2 : x(t) ? 3 : v(t) ? 4 : y(t) ? 5 : 0;
      if (m && n === p) {
       return D(m, t);
      }
      if (c.getStartPos() !== d) {
       e.Debug.assert(m !== undefined);
       c.setTextPos(d);
       c.scan();
      }
      var r = w(t, n);
      var i = {
       pos: c.getStartPos(),
       end: c.getTextPos(),
       kind: r
      };
      if (f) {
       f = undefined;
      }
      while (c.getStartPos() < o) {
       r = c.scan();
       if (!e.isTrivia(r)) {
        break;
       }
       var a = {
        pos: c.getStartPos(),
        end: c.getTextPos(),
        kind: r
       };
       if (!f) {
        f = [];
       }
       f.push(a);
       if (r === 4) {
        c.scan();
        break;
       }
      }
      m = {
       leadingTrivia: l,
       trailingTrivia: f,
       token: i
      };
      return D(m, t);
     }
     function w(t, n) {
      var r = c.getToken();
      p = 0;
      switch (n) {
      case 1:
       if (r === 29) {
        p = 1;
        var i = c.reScanGreaterToken();
        e.Debug.assert(t.kind === i);
        return i;
       }
       break;

      case 2:
       if (k(r)) {
        p = 2;
        var i = c.reScanSlashToken();
        e.Debug.assert(t.kind === i);
        return i;
       }
       break;

      case 3:
       if (r === 18) {
        p = 3;
        return c.reScanTemplateToken();
       }
       break;

      case 4:
       p = 4;
       return c.scanJsxIdentifier();

      case 5:
       p = 5;
       return c.reScanJsxToken();

      case 0:
       break;

      default:
       e.Debug.assertNever(n);
      }
      return r;
     }
     function C() {
      var t = m ? m.token.kind : c.getToken();
      var n = m ? m.token.pos : c.getStartPos();
      return n < o && t !== 1 && !e.isTrivia(t);
     }
     function D(t, n) {
      if (e.isToken(n) && t.token.kind !== n.kind) {
       t.token.kind = n.kind;
      }
      return t;
     }
     function T(e) {
      c.setTextPos(e.end);
      d = c.getStartPos();
      p = undefined;
      m = undefined;
      u = false;
      l = undefined;
      f = undefined;
     }
    }
    t.getFormattingScanner = a;
   })(t = e.formatting || (e.formatting = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    t.anyContext = e.emptyArray;
    var n;
    (function(e) {
     e[e["Ignore"] = 1] = "Ignore";
     e[e["Space"] = 2] = "Space";
     e[e["NewLine"] = 4] = "NewLine";
     e[e["Delete"] = 8] = "Delete";
    })(n = t.RuleAction || (t.RuleAction = {}));
    var r;
    (function(e) {
     e[e["None"] = 0] = "None";
     e[e["CanDeleteNewLines"] = 1] = "CanDeleteNewLines";
    })(r = t.RuleFlags || (t.RuleFlags = {}));
   })(t = e.formatting || (e.formatting = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    function n() {
     var n = [];
     for (var a = 0; a <= 145; a++) {
      n.push(a);
     }
     function S() {
      var e = [];
      for (var t = 0; t < arguments.length; t++) {
       e[t] = arguments[t];
      }
      return {
       tokens: n.filter(function(t) {
        return !e.some(function(e) {
         return e === t;
        });
       }),
       isSpecific: false
      };
     }
     var w = {
      tokens: n,
      isSpecific: false
     };
     var D = i(n.concat([ 3 ]));
     var F = o(72, 145);
     var M = o(27, 70);
     var L = [ 92, 93, 145, 118, 127 ];
     var X = [ 43, 44, 52, 51 ];
     var ne = [ 8, 71, 19, 21, 17, 99, 94 ];
     var ce = [ 71, 19, 99, 94 ];
     var ue = [ 71, 20, 22, 94 ];
     var le = [ 71, 19, 99, 94 ];
     var fe = [ 71, 20, 22, 94 ];
     var de = [ 2, 3 ];
     var pe = [ 71 ].concat(e.typeKeywords);
     var me = D;
     var _e = i([ 71, 3, 75, 84, 91 ]);
     var ge = i([ 20, 3, 81, 102, 87, 82 ]);
     var he = [ r("IgnoreBeforeComment", w, de, t.anyContext, 1), r("IgnoreAfterLineComment", 2, w, t.anyContext, 1), r("NotSpaceBeforeColon", w, 56, [ U, _, g ], 8), r("SpaceAfterColon", 56, w, [ U, _ ], 2), r("NoSpaceBeforeQuestionMark", w, 55, [ U, _ ], 8), r("SpaceAfterQuestionMarkInConditionalOperator", 55, w, [ U, v ], 2), r("NoSpaceAfterQuestionMark", 55, w, [ U ], 8), r("NoSpaceBeforeDot", w, 23, [ U ], 8), r("NoSpaceAfterDot", 23, w, [ U ], 8), r("NoSpaceBetweenImportParenInImportType", 91, 19, [ U, q ], 8), r("NoSpaceAfterUnaryPrefixOperator", X, ne, [ U, _ ], 8), r("NoSpaceAfterUnaryPreincrementOperator", 43, ce, [ U ], 8), r("NoSpaceAfterUnaryPredecrementOperator", 44, le, [ U ], 8), r("NoSpaceBeforeUnaryPostincrementOperator", ue, 43, [ U ], 8), r("NoSpaceBeforeUnaryPostdecrementOperator", fe, 44, [ U ], 8), r("SpaceAfterPostincrementWhenFollowedByAdd", 43, 37, [ U, m ], 2), r("SpaceAfterAddWhenFollowedByUnaryPlus", 37, 37, [ U, m ], 2), r("SpaceAfterAddWhenFollowedByPreincrement", 37, 43, [ U, m ], 2), r("SpaceAfterPostdecrementWhenFollowedBySubtract", 44, 38, [ U, m ], 2), r("SpaceAfterSubtractWhenFollowedByUnaryMinus", 38, 38, [ U, m ], 2), r("SpaceAfterSubtractWhenFollowedByPredecrement", 38, 44, [ U, m ], 2), r("NoSpaceAfterCloseBrace", 18, [ 26, 25 ], [ U ], 8), r("NewLineBeforeCloseBraceInBlockContext", D, 18, [ k ], 4), r("SpaceAfterCloseBrace", 18, S(20), [ U, P ], 2), r("SpaceBetweenCloseBraceAndElse", 18, 82, [ U ], 2), r("SpaceBetweenCloseBraceAndWhile", 18, 106, [ U ], 2), r("NoSpaceBetweenEmptyBraceBrackets", 17, 18, [ U, O ], 8), r("SpaceAfterConditionalClosingParen", 20, 21, [ I ], 2), r("NoSpaceBetweenFunctionKeywordAndStar", 89, 39, [ N ], 8), r("SpaceAfterStarInGeneratorDeclaration", 39, [ 71, 19 ], [ N ], 2), r("SpaceAfterFunctionInFuncDecl", 89, w, [ T ], 2), r("NewLineAfterOpenBraceInBlockContext", 17, w, [ k ], 4), r("SpaceAfterGetSetInMember", [ 125, 136 ], 71, [ T ], 2), r("NoSpaceBetweenYieldKeywordAndStar", 116, 39, [ U, oe ], 8), r("SpaceBetweenYieldOrYieldStarAndOperand", [ 116, 39 ], w, [ U, oe ], 2), r("NoSpaceBetweenReturnAndSemicolon", 96, 25, [ U ], 8), r("SpaceAfterCertainKeywords", [ 104, 100, 94, 80, 96, 103, 121 ], w, [ U ], 2), r("SpaceAfterLetConstInVariableDeclaration", [ 110, 76 ], w, [ U, Q ], 2), r("NoSpaceBeforeOpenParenInFuncCall", w, 19, [ U, R, B ], 8), r("SpaceBeforeBinaryKeywordOperator", w, L, [ U, m ], 2), r("SpaceAfterBinaryKeywordOperator", L, w, [ U, m ], 2), r("SpaceAfterVoidOperator", 105, w, [ U, ae ], 2), r("SpaceBetweenAsyncAndOpenParen", 120, 19, [ j, U ], 2), r("SpaceBetweenAsyncAndFunctionKeyword", 120, 89, [ U ], 2), r("NoSpaceBetweenTagAndTemplateString", [ 71, 20 ], [ 13, 14 ], [ U ], 8), r("SpaceBeforeJsxAttribute", w, 71, [ V, U ], 2), r("SpaceBeforeSlashInJsxOpeningElement", w, 41, [ H, U ], 2), r("NoSpaceBeforeGreaterThanTokenInJsxOpeningElement", 41, 29, [ H, U ], 8), r("NoSpaceBeforeEqualInJsxAttribute", w, 58, [ W, U ], 8), r("NoSpaceAfterEqualInJsxAttribute", 58, w, [ W, U ], 8), r("NoSpaceAfterModuleImport", [ 129, 133 ], 19, [ U ], 8), r("SpaceAfterCertainTypeScriptKeywords", [ 117, 75, 124, 79, 83, 84, 85, 125, 108, 91, 109, 129, 130, 112, 114, 113, 132, 136, 115, 139, 143, 128, 126 ], w, [ U ], 2), r("SpaceBeforeCertainTypeScriptKeywords", w, [ 85, 108, 143 ], [ U ], 2), r("SpaceAfterModuleName", 9, 17, [ Z ], 2), r("SpaceBeforeArrow", w, 36, [ U ], 2), r("SpaceAfterArrow", 36, w, [ U ], 2), r("NoSpaceAfterEllipsis", 24, 71, [ U ], 8), r("NoSpaceAfterOptionalParameters", 55, [ 20, 26 ], [ U, _ ], 8), r("NoSpaceBetweenEmptyInterfaceBraceBrackets", 17, 18, [ U, ee ], 8), r("NoSpaceBeforeOpenAngularBracket", pe, 27, [ U, re ], 8), r("NoSpaceBetweenCloseParenAndAngularBracket", 20, 27, [ U, re ], 8), r("NoSpaceAfterOpenAngularBracket", 27, w, [ U, re ], 8), r("NoSpaceBeforeCloseAngularBracket", w, 29, [ U, re ], 8), r("NoSpaceAfterCloseAngularBracket", 29, [ 19, 21, 29, 26 ], [ U, re, E ], 8), r("SpaceBeforeAt", [ 20, 71 ], 57, [ U ], 2), r("NoSpaceAfterAt", 57, w, [ U ], 8), r("SpaceAfterDecorator", w, [ 117, 71, 84, 79, 75, 115, 114, 112, 113, 125, 136, 21, 39 ], [ $ ], 2), r("NoSpaceBeforeNonNullAssertionOperator", w, 51, [ U, se ], 8), r("NoSpaceAfterNewKeywordOnConstructorSignature", 94, 19, [ U, te ], 8) ];
     var ve = [ r("SpaceAfterConstructor", 123, 19, [ s("insertSpaceAfterConstructor"), U ], 2), r("NoSpaceAfterConstructor", 123, 19, [ u("insertSpaceAfterConstructor"), U ], 8), r("SpaceAfterComma", 26, w, [ s("insertSpaceAfterCommaDelimiter"), U, J, z ], 2), r("NoSpaceAfterComma", 26, w, [ u("insertSpaceAfterCommaDelimiter"), U, J ], 8), r("SpaceAfterAnonymousFunctionKeyword", 89, 19, [ s("insertSpaceAfterFunctionKeywordForAnonymousFunctions"), T ], 2), r("NoSpaceAfterAnonymousFunctionKeyword", 89, 19, [ u("insertSpaceAfterFunctionKeywordForAnonymousFunctions"), T ], 8), r("SpaceAfterKeywordInControl", F, 19, [ s("insertSpaceAfterKeywordsInControlFlowStatements"), I ], 2), r("NoSpaceAfterKeywordInControl", F, 19, [ u("insertSpaceAfterKeywordsInControlFlowStatements"), I ], 8), r("SpaceAfterOpenParen", 19, w, [ s("insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis"), U ], 2), r("SpaceBeforeCloseParen", w, 20, [ s("insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis"), U ], 2), r("SpaceBetweenOpenParens", 19, 19, [ s("insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis"), U ], 2), r("NoSpaceBetweenParens", 19, 20, [ U ], 8), r("NoSpaceAfterOpenParen", 19, w, [ u("insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis"), U ], 8), r("NoSpaceBeforeCloseParen", w, 20, [ u("insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis"), U ], 8), r("SpaceAfterOpenBracket", 21, w, [ s("insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets"), U ], 2), r("SpaceBeforeCloseBracket", w, 22, [ s("insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets"), U ], 2), r("NoSpaceBetweenBrackets", 21, 22, [ U ], 8), r("NoSpaceAfterOpenBracket", 21, w, [ u("insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets"), U ], 8), r("NoSpaceBeforeCloseBracket", w, 22, [ u("insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets"), U ], 8), r("SpaceAfterOpenBrace", 17, w, [ f("insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces"), b ], 2), r("SpaceBeforeCloseBrace", w, 18, [ f("insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces"), b ], 2), r("NoSpaceBetweenEmptyBraceBrackets", 17, 18, [ U, O ], 8), r("NoSpaceAfterOpenBrace", 17, w, [ c("insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces"), U ], 8), r("NoSpaceBeforeCloseBrace", w, 18, [ c("insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces"), U ], 8), r("SpaceAfterTemplateHeadAndMiddle", [ 14, 15 ], w, [ s("insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces"), U ], 2), r("SpaceBeforeTemplateMiddleAndTail", w, [ 15, 16 ], [ s("insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces"), U ], 2), r("NoSpaceAfterTemplateHeadAndMiddle", [ 14, 15 ], w, [ u("insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces"), U ], 8), r("NoSpaceBeforeTemplateMiddleAndTail", w, [ 15, 16 ], [ u("insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces"), U ], 8), r("SpaceAfterOpenBraceInJsxExpression", 17, w, [ s("insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces"), U, K ], 2), r("SpaceBeforeCloseBraceInJsxExpression", w, 18, [ s("insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces"), U, K ], 2), r("NoSpaceAfterOpenBraceInJsxExpression", 17, w, [ u("insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces"), U, K ], 8), r("NoSpaceBeforeCloseBraceInJsxExpression", w, 18, [ u("insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces"), U, K ], 8), r("SpaceAfterSemicolonInFor", 25, w, [ s("insertSpaceAfterSemicolonInForStatements"), U, d ], 2), r("NoSpaceAfterSemicolonInFor", 25, w, [ u("insertSpaceAfterSemicolonInForStatements"), U, d ], 8), r("SpaceBeforeBinaryOperator", w, M, [ s("insertSpaceBeforeAndAfterBinaryOperators"), U, m ], 2), r("SpaceAfterBinaryOperator", M, w, [ s("insertSpaceBeforeAndAfterBinaryOperators"), U, m ], 2), r("NoSpaceBeforeBinaryOperator", w, M, [ u("insertSpaceBeforeAndAfterBinaryOperators"), U, m ], 8), r("NoSpaceAfterBinaryOperator", M, w, [ u("insertSpaceBeforeAndAfterBinaryOperators"), U, m ], 8), r("SpaceBeforeOpenParenInFuncDecl", w, 19, [ s("insertSpaceBeforeFunctionParenthesis"), U, T ], 2), r("NoSpaceBeforeOpenParenInFuncDecl", w, 19, [ u("insertSpaceBeforeFunctionParenthesis"), U, T ], 8), r("NewLineBeforeOpenBraceInControl", ge, 17, [ s("placeOpenBraceOnNewLineForControlBlocks"), I, x ], 4, 1), r("NewLineBeforeOpenBraceInFunction", me, 17, [ s("placeOpenBraceOnNewLineForFunctions"), T, x ], 4, 1), r("NewLineBeforeOpenBraceInTypeScriptDeclWithBlock", _e, 17, [ s("placeOpenBraceOnNewLineForFunctions"), A, x ], 4, 1), r("SpaceAfterTypeAssertion", 29, w, [ s("insertSpaceAfterTypeAssertion"), U, ie ], 2), r("NoSpaceAfterTypeAssertion", 29, w, [ u("insertSpaceAfterTypeAssertion"), U, ie ], 8), r("SpaceBeforeTypeAnnotation", w, 56, [ s("insertSpaceBeforeTypeAnnotation"), U, h ], 2), r("NoSpaceBeforeTypeAnnotation", w, 56, [ u("insertSpaceBeforeTypeAnnotation"), U, h ], 8) ];
     var ye = [ r("NoSpaceBeforeSemicolon", w, 25, [ U ], 8), r("SpaceBeforeOpenBraceInControl", ge, 17, [ l("placeOpenBraceOnNewLineForControlBlocks"), I, Y, y ], 2, 1), r("SpaceBeforeOpenBraceInFunction", me, 17, [ l("placeOpenBraceOnNewLineForFunctions"), T, C, Y, y ], 2, 1), r("SpaceBeforeOpenBraceInTypeScriptDeclWithBlock", _e, 17, [ l("placeOpenBraceOnNewLineForFunctions"), A, Y, y ], 2, 1), r("NoSpaceBeforeComma", w, 26, [ U ], 8), r("NoSpaceBeforeOpenBracket", S(120, 73), 21, [ U ], 8), r("NoSpaceAfterCloseBracket", 22, w, [ U, G ], 8), r("SpaceAfterSemicolon", 25, w, [ U ], 2), r("SpaceBetweenForAndAwaitKeyword", 88, 121, [ U ], 2), r("SpaceBetweenStatements", [ 20, 81, 82, 73 ], w, [ U, J, p ], 2), r("SpaceAfterTryFinally", [ 102, 87 ], 17, [ U ], 2) ];
     return he.concat(ve, ye);
    }
    t.getAllRules = n;
    function r(e, t, n, r, i, o) {
     if (o === void 0) {
      o = 0;
     }
     return {
      leftTokenRange: a(t),
      rightTokenRange: a(n),
      rule: {
       debugName: e,
       context: r,
       action: i,
       flags: o
      }
     };
    }
    function i(e) {
     return {
      tokens: e,
      isSpecific: true
     };
    }
    function a(t) {
     return typeof t === "number" ? i([ t ]) : e.isArray(t) ? i(t) : t;
    }
    function o(t, n, r) {
     if (r === void 0) {
      r = [];
     }
     var a = [];
     for (var o = t; o <= n; o++) {
      if (!e.contains(r, o)) {
       a.push(o);
      }
     }
     return i(a);
    }
    function s(e) {
     return function(t) {
      return t.options && t.options.hasOwnProperty(e) && !!t.options[e];
     };
    }
    function c(e) {
     return function(t) {
      return t.options && t.options.hasOwnProperty(e) && !t.options[e];
     };
    }
    function u(e) {
     return function(t) {
      return !t.options || !t.options.hasOwnProperty(e) || !t.options[e];
     };
    }
    function l(e) {
     return function(t) {
      return !t.options || !t.options.hasOwnProperty(e) || !t.options[e] || t.TokensAreOnSameLine();
     };
    }
    function f(e) {
     return function(t) {
      return !t.options || !t.options.hasOwnProperty(e) || !!t.options[e];
     };
    }
    function d(e) {
     return e.contextNode.kind === 223;
    }
    function p(e) {
     return !d(e);
    }
    function m(e) {
     switch (e.contextNode.kind) {
     case 202:
     case 203:
     case 173:
     case 210:
     case 255:
     case 251:
     case 161:
     case 171:
     case 172:
      return true;

     case 184:
     case 240:
     case 246:
     case 235:
     case 149:
     case 276:
     case 152:
     case 151:
      return e.currentTokenSpan.kind === 58 || e.nextTokenSpan.kind === 58;

     case 224:
     case 148:
      return e.currentTokenSpan.kind === 92 || e.nextTokenSpan.kind === 92;

     case 225:
      return e.currentTokenSpan.kind === 145 || e.nextTokenSpan.kind === 145;
     }
     return false;
    }
    function _(e) {
     return !m(e);
    }
    function g(e) {
     return !h(e);
    }
    function h(t) {
     var n = t.contextNode.kind;
     return n === 152 || n === 151 || n === 149 || n === 235 || e.isFunctionLikeKind(n);
    }
    function v(e) {
     return e.contextNode.kind === 203 || e.contextNode.kind === 173;
    }
    function y(e) {
     return e.TokensAreOnSameLine() || C(e);
    }
    function b(e) {
     return e.contextNode.kind === 182 || e.contextNode.kind === 179 || S(e);
    }
    function x(e) {
     return C(e) && !(e.NextNodeAllOnSameLine() || e.NextNodeBlockIsOnOneLine());
    }
    function k(e) {
     return w(e) && !(e.ContextNodeAllOnSameLine() || e.ContextNodeBlockIsOnOneLine());
    }
    function S(e) {
     return w(e) && (e.ContextNodeAllOnSameLine() || e.ContextNodeBlockIsOnOneLine());
    }
    function w(e) {
     return D(e.contextNode);
    }
    function C(e) {
     return D(e.nextTokenParent);
    }
    function D(e) {
     if (F(e)) {
      return true;
     }
     switch (e.kind) {
     case 216:
     case 244:
     case 186:
     case 243:
      return true;
     }
     return false;
    }
    function T(e) {
     switch (e.contextNode.kind) {
     case 237:
     case 154:
     case 153:
     case 156:
     case 157:
     case 158:
     case 194:
     case 155:
     case 195:
     case 239:
      return true;
     }
     return false;
    }
    function E(e) {
     return !T(e);
    }
    function N(e) {
     return e.contextNode.kind === 237 || e.contextNode.kind === 194;
    }
    function A(e) {
     return F(e.contextNode);
    }
    function F(e) {
     switch (e.kind) {
     case 238:
     case 207:
     case 239:
     case 241:
     case 166:
     case 242:
     case 253:
     case 254:
     case 247:
     case 250:
      return true;
     }
     return false;
    }
    function P(e) {
     switch (e.currentTokenParent.kind) {
     case 238:
     case 242:
     case 241:
     case 272:
     case 243:
     case 230:
      return true;

     case 216:
      {
       var t = e.currentTokenParent.parent;
       if (!t || t.kind !== 195 && t.kind !== 194) {
        return true;
       }
      }
     }
     return false;
    }
    function I(e) {
     switch (e.contextNode.kind) {
     case 220:
     case 230:
     case 223:
     case 224:
     case 225:
     case 222:
     case 233:
     case 221:
     case 229:
     case 272:
      return true;

     default:
      return false;
     }
    }
    function O(e) {
     return e.contextNode.kind === 186;
    }
    function M(e) {
     return e.contextNode.kind === 189;
    }
    function L(e) {
     return e.contextNode.kind === 190;
    }
    function R(e) {
     return M(e) || L(e);
    }
    function B(e) {
     return e.currentTokenSpan.kind !== 26;
    }
    function z(e) {
     return e.nextTokenSpan.kind !== 22;
    }
    function j(e) {
     return e.contextNode.kind === 195;
    }
    function q(e) {
     return e.contextNode.kind === 181;
    }
    function U(e) {
     return e.TokensAreOnSameLine() && e.contextNode.kind !== 10;
    }
    function J(e) {
     return e.contextNode.kind !== 258 && e.contextNode.kind !== 262;
    }
    function K(e) {
     return e.contextNode.kind === 268 || e.contextNode.kind === 267;
    }
    function V(e) {
     return e.nextTokenParent.kind === 265;
    }
    function W(e) {
     return e.contextNode.kind === 265;
    }
    function H(e) {
     return e.contextNode.kind === 259;
    }
    function G(e) {
     return !T(e) && !C(e);
    }
    function $(e) {
     return e.TokensAreOnSameLine() && !!e.contextNode.decorators && X(e.currentTokenParent) && !X(e.nextTokenParent);
    }
    function X(t) {
     while (e.isExpressionNode(t)) {
      t = t.parent;
     }
     return t.kind === 150;
    }
    function Q(e) {
     return e.currentTokenParent.kind === 236 && e.currentTokenParent.getStart(e.sourceFile) === e.currentTokenSpan.pos;
    }
    function Y(e) {
     return e.formattingRequestKind !== 2;
    }
    function Z(e) {
     return e.contextNode.kind === 242;
    }
    function ee(e) {
     return e.contextNode.kind === 166;
    }
    function te(e) {
     return e.contextNode.kind === 159;
    }
    function ne(e, t) {
     if (e.kind !== 27 && e.kind !== 29) {
      return false;
     }
     switch (t.kind) {
     case 162:
     case 192:
     case 240:
     case 238:
     case 207:
     case 239:
     case 237:
     case 194:
     case 195:
     case 154:
     case 153:
     case 158:
     case 159:
     case 189:
     case 190:
     case 209:
      return true;

     default:
      return false;
     }
    }
    function re(e) {
     return ne(e.currentTokenSpan, e.currentTokenParent) || ne(e.nextTokenSpan, e.nextTokenParent);
    }
    function ie(e) {
     return e.contextNode.kind === 192;
    }
    function ae(e) {
     return e.currentTokenSpan.kind === 105 && e.currentTokenParent.kind === 198;
    }
    function oe(e) {
     return e.contextNode.kind === 205 && e.contextNode.expression !== undefined;
    }
    function se(e) {
     return e.contextNode.kind === 211;
    }
   })(t = e.formatting || (e.formatting = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    function n(e) {
     return {
      options: e,
      getRule: i()
     };
    }
    t.getFormatContext = n;
    var r;
    function i() {
     if (r === undefined) {
      r = a(t.getAllRules());
     }
     return r;
    }
    function a(t) {
     var n = o(t);
     return function(t) {
      var r = n[s(t.currentTokenSpan.kind, t.nextTokenSpan.kind)];
      return r && e.find(r, function(n) {
       return e.every(n.context, function(e) {
        return e(t);
       });
      });
     };
    }
    function o(e) {
     var t = new Array(l * l);
     var n = new Array(t.length);
     for (var r = 0, i = e; r < i.length; r++) {
      var a = i[r];
      var o = a.leftTokenRange.isSpecific && a.rightTokenRange.isSpecific;
      for (var c = 0, u = a.leftTokenRange.tokens; c < u.length; c++) {
       var f = u[c];
       for (var p = 0, m = a.rightTokenRange.tokens; p < m.length; p++) {
        var _ = m[p];
        var g = s(f, _);
        var h = t[g];
        if (h === undefined) {
         h = t[g] = [];
        }
        d(h, a.rule, o, n, g);
       }
      }
     }
     return t;
    }
    function s(t, n) {
     e.Debug.assert(t <= 145 && n <= 145, "Must compute formatting context from tokens");
     return t * l + n;
    }
    var c = 5;
    var u = 31;
    var l = 145 + 1;
    var f;
    (function(e) {
     e[e["IgnoreRulesSpecific"] = 0] = "IgnoreRulesSpecific";
     e[e["IgnoreRulesAny"] = c * 1] = "IgnoreRulesAny";
     e[e["ContextRulesSpecific"] = c * 2] = "ContextRulesSpecific";
     e[e["ContextRulesAny"] = c * 3] = "ContextRulesAny";
     e[e["NoContextRulesSpecific"] = c * 4] = "NoContextRulesSpecific";
     e[e["NoContextRulesAny"] = c * 5] = "NoContextRulesAny";
    })(f || (f = {}));
    function d(e, n, r, i, a) {
     var o = n.action === 1 ? r ? f.IgnoreRulesSpecific : f.IgnoreRulesAny : n.context !== t.anyContext ? r ? f.ContextRulesSpecific : f.ContextRulesAny : r ? f.NoContextRulesSpecific : f.NoContextRulesAny;
     var s = i[a] || 0;
     e.splice(p(s, o), 0, n);
     i[a] = m(s, o);
    }
    function p(e, t) {
     var n = 0;
     for (var r = 0; r <= t; r += c) {
      n += e & u;
      e >>= c;
     }
     return n;
    }
    function m(t, n) {
     var r = (t >> n & u) + 1;
     e.Debug.assert((r & u) === r, "Adding more rules into the sub-bucket than allowed. Maximum allowed is 32 rules.");
     return t & ~(u << n) | r << n;
    }
   })(t = e.formatting || (e.formatting = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n;
    (function(e) {
     e[e["Unknown"] = -1] = "Unknown";
    })(n || (n = {}));
    function r(t, n, r) {
     var i = n.getLineAndCharacterOfPosition(t).line;
     if (i === 0) {
      return [];
     }
     var a = e.getEndLinePosition(i, n);
     while (e.isWhiteSpaceSingleLine(n.text.charCodeAt(a))) {
      a--;
     }
     if (e.isLineBreak(n.text.charCodeAt(a))) {
      a--;
     }
     var o = {
      pos: e.getStartPositionOfLine(i - 1, n),
      end: a + 1
     };
     return v(o, n, r, 2);
    }
    t.formatOnEnter = r;
    function i(e, t, n) {
     var r = u(e, 25, t);
     return h(l(r), t, n, 3);
    }
    t.formatOnSemicolon = i;
    function a(t, n, r) {
     var i = u(t, 17, n);
     if (!i) {
      return [];
     }
     var a = i.parent;
     var o = l(a);
     var s = {
      pos: e.getLineStartPositionForPosition(o.getStart(n), n),
      end: t
     };
     return v(s, n, r, 4);
    }
    t.formatOnOpeningCurly = a;
    function o(e, t, n) {
     var r = u(e, 18, t);
     return h(l(r), t, n, 5);
    }
    t.formatOnClosingCurly = o;
    function s(e, t) {
     var n = {
      pos: 0,
      end: e.text.length
     };
     return v(n, e, t, 0);
    }
    t.formatDocument = s;
    function c(t, n, r, i) {
     var a = {
      pos: e.getLineStartPositionForPosition(t, r),
      end: n
     };
     return v(a, r, i, 1);
    }
    t.formatSelection = c;
    function u(t, n, r) {
     var i = e.findPrecedingToken(t, r);
     return i && i.kind === n && t === i.getEnd() ? i : undefined;
    }
    function l(e) {
     var t = e;
     while (t && t.parent && t.parent.end === e.end && !f(t.parent, t)) {
      t = t.parent;
     }
     return t;
    }
    function f(t, n) {
     switch (t.kind) {
     case 238:
     case 239:
      return e.rangeContainsRange(t.members, n);

     case 242:
      var r = t.body;
      return !!r && r.kind === 243 && e.rangeContainsRange(r.statements, n);

     case 277:
     case 216:
     case 243:
      return e.rangeContainsRange(t.statements, n);

     case 272:
      return e.rangeContainsRange(t.block.statements, n);
     }
     return false;
    }
    function d(t, n) {
     return r(n);
     function r(i) {
      var a = e.forEachChild(i, function(r) {
       return e.startEndContainsRange(r.getStart(n), r.end, t) && r;
      });
      if (a) {
       var o = r(a);
       if (o) {
        return o;
       }
      }
      return i;
     }
    }
    function p(t, n) {
     if (!t.length) {
      return a;
     }
     var r = t.filter(function(t) {
      return e.rangeOverlapsWithStartEnd(n, t.start, t.start + t.length);
     }).sort(function(e, t) {
      return e.start - t.start;
     });
     if (!r.length) {
      return a;
     }
     var i = 0;
     return function(t) {
      while (true) {
       if (i >= r.length) {
        return false;
       }
       var n = r[i];
       if (t.end <= n.start) {
        return false;
       }
       if (e.startEndOverlapsWithStartEnd(t.pos, t.end, n.start, n.start + n.length)) {
        return true;
       }
       i++;
      }
     };
     function a() {
      return false;
     }
    }
    function m(t, n, r) {
     var i = t.getStart(r);
     if (i === n.pos && t.end === n.end) {
      return i;
     }
     var a = e.findPrecedingToken(n.pos, r);
     if (!a) {
      return t.pos;
     }
     if (a.end >= n.pos) {
      return t.pos;
     }
     return a.end;
    }
    function _(e, n, r) {
     var i = -1;
     var a;
     while (e) {
      var o = r.getLineAndCharacterOfPosition(e.getStart(r)).line;
      if (i !== -1 && o !== i) {
       break;
      }
      if (t.SmartIndenter.shouldIndentChildNode(n, e, a, r)) {
       return n.indentSize;
      }
      i = o;
      a = e;
      e = e.parent;
     }
     return 0;
    }
    function g(e, n, r, i, a, o) {
     var s = {
      pos: 0,
      end: n.text.length
     };
     return t.getFormattingScanner(n.text, r, s.pos, s.end, function(t) {
      return y(s, e, i, a, t, o, 1, function(e) {
       return false;
      }, n);
     });
    }
    t.formatNodeGivenIndentation = g;
    function h(t, n, r, i) {
     if (!t) {
      return [];
     }
     var a = {
      pos: e.getLineStartPositionForPosition(t.getStart(n), n),
      end: t.end
     };
     return v(a, n, r, i);
    }
    function v(e, n, r, i) {
     var a = d(e, n);
     return t.getFormattingScanner(n.text, n.languageVariant, m(a, e, n), e.end, function(o) {
      return y(e, a, t.SmartIndenter.getIndentationForNode(a, e, n, r.options), _(a, r.options, n), o, r, i, p(n.parseDiagnostics, e), n);
     });
    }
    function y(n, r, i, a, o, s, c, u, l) {
     var f = s.options, d = s.getRule;
     var p = new t.FormattingContext(l, c, f);
     var m;
     var _;
     var g;
     var h;
     var v;
     var y = [];
     o.advance();
     if (o.isOnToken()) {
      var b = l.getLineAndCharacterOfPosition(r.getStart(l)).line;
      var x = b;
      if (r.decorators) {
       x = l.getLineAndCharacterOfPosition(e.getNonDecoratorTokenPosOfNode(r, l)).line;
      }
      A(r, r, b, x, i, a);
     }
     if (!o.isOnToken()) {
      var w = o.getCurrentLeadingTrivia();
      if (w) {
       F(w, r, r, undefined);
       j();
      }
     }
     return y;
     function C(n, r, i, a, o) {
      if (e.rangeOverlapsWithStartEnd(a, n, r) || e.rangeContainsStartEnd(a, n, r)) {
       if (o !== -1) {
        return o;
       }
      } else {
       var s = l.getLineAndCharacterOfPosition(n).line;
       var c = e.getLineStartPositionForPosition(n, l);
       var u = t.SmartIndenter.findFirstNonWhitespaceColumn(c, n, l, f);
       if (s !== i || n === u) {
        var d = t.SmartIndenter.getBaseIndentation(f);
        return d > u ? d : u;
       }
      }
      return -1;
     }
     function D(e, n, r, i, a, o) {
      var s = t.SmartIndenter.shouldIndentChildNode(f, e) ? f.indentSize : 0;
      if (o === n) {
       return {
        indentation: n === h ? v : a.getIndentation(),
        delta: Math.min(f.indentSize, a.getDelta(e) + s)
       };
      } else if (r === -1) {
       if (e.kind === 19 && n === h) {
        return {
         indentation: v,
         delta: a.getDelta(e)
        };
       } else if (t.SmartIndenter.childStartsOnTheSameLineWithElseInIfStatement(i, e, n, l)) {
        return {
         indentation: a.getIndentation(),
         delta: s
        };
       } else {
        return {
         indentation: a.getIndentation() + a.getDelta(e),
         delta: s
        };
       }
      } else {
       return {
        indentation: r,
        delta: s
       };
      }
     }
     function E(t) {
      if (t.modifiers && t.modifiers.length) {
       return t.modifiers[0].kind;
      }
      switch (t.kind) {
      case 238:
       return 75;

      case 239:
       return 109;

      case 237:
       return 89;

      case 241:
       return 241;

      case 156:
       return 125;

      case 157:
       return 136;

      case 154:
       if (t.asteriskToken) {
        return 39;
       }

      case 152:
      case 149:
       var n = e.getNameOfDeclaration(t);
       if (n) {
        return n.kind;
       }
      }
     }
     function N(e, n, r, i) {
      return {
       getIndentationForComment: function(e, t, n) {
        switch (e) {
        case 18:
        case 22:
        case 20:
         return r + o(n);
        }
        return t !== -1 ? t : r;
       },
       getIndentationForToken: function(e, t, n) {
        return a(e, t, n) ? r + o(n) : r;
       },
       getIndentation: function() {
        return r;
       },
       getDelta: o,
       recomputeIndentation: function(n) {
        if (e.parent && t.SmartIndenter.shouldIndentChildNode(f, e.parent, e, l)) {
         r += n ? f.indentSize : -f.indentSize;
         i = t.SmartIndenter.shouldIndentChildNode(f, e) ? f.indentSize : 0;
        }
       }
      };
      function a(t, r, i) {
       switch (r) {
       case 17:
       case 18:
       case 19:
       case 20:
       case 82:
       case 106:
       case 57:
        return false;

       case 41:
       case 29:
        switch (i.kind) {
        case 260:
        case 261:
        case 259:
         return false;
        }
        break;

       case 21:
       case 22:
        if (i.kind !== 179) {
         return false;
        }
        break;
       }
       return n !== t && !(e.decorators && r === E(e));
      }
      function o(n) {
       return t.SmartIndenter.nodeWillIndentChild(f, e, n, l, true) ? i : 0;
      }
     }
     function A(t, r, i, a, s, c) {
      if (!e.rangeOverlapsWithStartEnd(n, t.getStart(l), t.getEnd())) {
       return;
      }
      var f = N(t, i, s, c);
      var d = r;
      e.forEachChild(t, function(e) {
       _(e, -1, t, f, i, a, false);
      }, function(e) {
       g(e, t, i, f);
      });
      while (o.isOnToken()) {
       var p = o.readTokenInfo(t);
       if (p.token.end > t.end) {
        break;
       }
       y(p, t, f, t);
      }
      function _(r, i, a, s, c, u, f, p) {
       var m = r.getStart(l);
       var _ = l.getLineAndCharacterOfPosition(m).line;
       var g = _;
       if (r.decorators) {
        g = l.getLineAndCharacterOfPosition(e.getNonDecoratorTokenPosOfNode(r, l)).line;
       }
       var h = -1;
       if (f && e.rangeContainsRange(n, a)) {
        h = C(m, r.end, c, n, i);
        if (h !== -1) {
         i = h;
        }
       }
       if (!e.rangeOverlapsWithStartEnd(n, r.pos, r.end)) {
        if (r.end < n.pos) {
         o.skipToEndOf(r);
        }
        return i;
       }
       if (r.getFullWidth() === 0) {
        return i;
       }
       while (o.isOnToken()) {
        var v = o.readTokenInfo(t);
        if (v.token.end > m) {
         break;
        }
        y(v, t, s, t);
       }
       if (!o.isOnToken()) {
        return i;
       }
       if (e.isToken(r) && r.kind !== 10) {
        var v = o.readTokenInfo(r);
        e.Debug.assert(v.token.end === r.end, "Token end is child end");
        y(v, t, s, r);
        return i;
       }
       var b = r.kind === 150 ? _ : u;
       var x = D(r, _, h, t, s, b);
       A(r, d, _, g, x.indentation, x.delta);
       if (r.kind === 10) {
        var k = {
         pos: r.getStart(),
         end: r.getEnd()
        };
        R(k, x.indentation, true, false);
       }
       d = t;
       if (p && a.kind === 185 && i === -1) {
        i = x.indentation;
       }
       return i;
      }
      function g(n, r, i, a) {
       e.Debug.assert(e.isNodeArray(n));
       var s = k(r, n);
       var c = a;
       var u = i;
       if (s !== 0) {
        while (o.isOnToken()) {
         var f = o.readTokenInfo(r);
         if (f.token.end > n.pos) {
          break;
         } else if (f.token.kind === s) {
          u = l.getLineAndCharacterOfPosition(f.token.pos).line;
          var d = D(f.token, u, -1, r, a, i);
          c = N(r, i, d.indentation, d.delta);
          y(f, r, c, r);
         } else {
          y(f, r, a, r);
         }
        }
       }
       var p = -1;
       for (var m = 0; m < n.length; m++) {
        var g = n[m];
        p = _(g, p, t, c, u, u, true, m === 0);
       }
       var h = S(s);
       if (h !== 0 && o.isOnToken()) {
        var f = o.readTokenInfo(r);
        if (f.token.kind === 26 && e.isCallLikeExpression(r)) {
         o.advance();
         f = o.readTokenInfo(r);
        }
        if (f.token.kind === h && e.rangeContainsRange(r, f.token)) {
         y(f, r, c, r);
        }
       }
      }
      function y(t, r, i, a) {
       e.Debug.assert(e.rangeContainsRange(r, t.token));
       var s = o.lastTrailingTriviaWasNewLine();
       var c = false;
       if (t.leadingTrivia) {
        F(t.leadingTrivia, r, d, i);
       }
       var f = 0;
       var p = e.rangeContainsRange(n, t.token);
       var _ = l.getLineAndCharacterOfPosition(t.token.pos);
       if (p) {
        var g = u(t.token);
        var y = m;
        f = P(t.token, _, r, d, i);
        if (!g) {
         if (f === 0) {
          var b = y && l.getLineAndCharacterOfPosition(y.end).line;
          c = s && _.line !== b;
         } else {
          c = f === 1;
         }
        }
       }
       if (t.trailingTrivia) {
        F(t.trailingTrivia, r, d, i);
       }
       if (c) {
        var x = p && !u(t.token) ? i.getIndentationForToken(_.line, t.token.kind, a) : -1;
        var k = true;
        if (t.leadingTrivia) {
         var S = i.getIndentationForComment(t.token.kind, x, a);
         for (var w = 0, C = t.leadingTrivia; w < C.length; w++) {
          var D = C[w];
          var T = e.rangeContainsRange(n, D);
          switch (D.kind) {
          case 3:
           if (T) {
            R(D, S, !k);
           }
           k = false;
           break;

          case 2:
           if (k && T) {
            O(D.pos, S, false);
           }
           k = false;
           break;

          case 4:
           k = true;
           break;
          }
         }
        }
        if (x !== -1 && k) {
         O(t.token.pos, x, f === 1);
         h = _.line;
         v = x;
        }
       }
       o.advance();
       d = r;
      }
     }
     function F(t, r, i, a) {
      for (var o = 0, s = t; o < s.length; o++) {
       var c = s[o];
       if (e.isComment(c.kind) && e.rangeContainsRange(n, c)) {
        var u = l.getLineAndCharacterOfPosition(c.pos);
        P(c, u, r, i, a);
       }
      }
     }
     function P(e, t, r, i, a) {
      var o = u(e);
      var s = 0;
      if (!o) {
       if (!m) {
        var c = l.getLineAndCharacterOfPosition(n.pos);
        B(c.line, t.line);
       } else {
        s = I(e, t.line, r, m, g, _, i, a);
       }
      }
      m = e;
      _ = r;
      g = t.line;
      return s;
     }
     function I(t, n, r, i, a, o, s, c) {
      p.updateContext(i, o, t, r, s);
      var u = d(p);
      var f;
      var m = 0;
      if (u) {
       m = J(u, i, a, t, n);
       switch (m) {
       case 2:
        if (r.getStart(l) === t.pos) {
         c.recomputeIndentation(false);
        }
        break;

       case 1:
        if (r.getStart(l) === t.pos) {
         c.recomputeIndentation(true);
        }
        break;

       default:
        e.Debug.assert(m === 0);
       }
       f = !(u.action & 8) && u.flags !== 1;
      } else {
       f = true;
      }
      if (n !== a && f) {
       B(a, n, i);
      }
      return m;
     }
     function O(t, n, r) {
      var i = T(n, f);
      if (r) {
       U(t, 0, i);
      } else {
       var a = l.getLineAndCharacterOfPosition(t);
       var o = e.getStartPositionOfLine(a.line, l);
       if (n !== M(o, a.character) || L(i, o)) {
        U(o, a.character, i);
       }
      }
     }
     function M(e, t) {
      var n = 0;
      for (var r = 0; r < t; r++) {
       if (l.text.charCodeAt(e + r) === 9) {
        n += f.tabSize - n % f.tabSize;
       } else {
        n++;
       }
      }
      return n;
     }
     function L(e, t) {
      return e !== l.text.substr(t, e.length);
     }
     function R(n, r, i, a) {
      if (a === void 0) {
       a = true;
      }
      var o = l.getLineAndCharacterOfPosition(n.pos).line;
      var s = l.getLineAndCharacterOfPosition(n.end).line;
      if (o === s) {
       if (!i) {
        O(n.pos, r, false);
       }
       return;
      }
      var c = [];
      var u = n.pos;
      for (var d = o; d < s; d++) {
       var p = e.getEndLinePosition(d, l);
       c.push({
        pos: u,
        end: p
       });
       u = e.getStartPositionOfLine(d + 1, l);
      }
      if (a) {
       c.push({
        pos: u,
        end: n.end
       });
      }
      if (c.length === 0) return;
      var m = e.getStartPositionOfLine(o, l);
      var _ = t.SmartIndenter.findFirstNonWhitespaceCharacterAndColumn(m, c[0].pos, l, f);
      if (r === _.column) {
       return;
      }
      var g = 0;
      if (i) {
       g = 1;
       o++;
      }
      var h = r - _.column;
      for (var v = g; v < c.length; v++, o++) {
       var y = e.getStartPositionOfLine(o, l);
       var b = v === 0 ? _ : t.SmartIndenter.findFirstNonWhitespaceCharacterAndColumn(c[v].pos, c[v].end, l, f);
       var x = b.column + h;
       if (x > 0) {
        var k = T(x, f);
        U(y, b.character, k);
       } else {
        q(y, b.character);
       }
      }
     }
     function B(t, n, r) {
      for (var i = t; i < n; i++) {
       var a = e.getStartPositionOfLine(i, l);
       var o = e.getEndLinePosition(i, l);
       if (r && (e.isComment(r.kind) || e.isStringOrRegularExpressionOrTemplateLiteral(r.kind)) && r.pos <= o && r.end > o) {
        continue;
       }
       var s = z(a, o);
       if (s !== -1) {
        e.Debug.assert(s === a || !e.isWhiteSpaceSingleLine(l.text.charCodeAt(s - 1)));
        q(s, o + 1 - s);
       }
      }
     }
     function z(t, n) {
      var r = n;
      while (r >= t && e.isWhiteSpaceSingleLine(l.text.charCodeAt(r))) {
       r--;
      }
      if (r !== n) {
       return r + 1;
      }
      return -1;
     }
     function j() {
      var e = m ? m.end : n.pos;
      var t = l.getLineAndCharacterOfPosition(e).line;
      var r = l.getLineAndCharacterOfPosition(n.end).line;
      B(t, r + 1, m);
     }
     function q(t, n) {
      if (n) {
       y.push(e.createTextChangeFromStartLength(t, n, ""));
      }
     }
     function U(t, n, r) {
      if (n || r) {
       y.push(e.createTextChangeFromStartLength(t, n, r));
      }
     }
     function J(e, t, n, r, i) {
      var a = i !== n;
      switch (e.action) {
      case 1:
       return 0;

      case 8:
       if (t.end !== r.pos) {
        q(t.end, r.pos - t.end);
        return a ? 2 : 0;
       }
       break;

      case 4:
       if (e.flags !== 1 && n !== i) {
        return 0;
       }
       var o = i - n;
       if (o !== 1) {
        U(t.end, r.pos - t.end, f.newLineCharacter);
        return a ? 0 : 1;
       }
       break;

      case 2:
       if (e.flags !== 1 && n !== i) {
        return 0;
       }
       var s = r.pos - t.end;
       if (s !== 1 || l.text.charCodeAt(t.end) !== 32) {
        U(t.end, r.pos - t.end, " ");
        return a ? 2 : 0;
       }
      }
      return 0;
     }
    }
    var b;
    (function(e) {
     e[e["None"] = 0] = "None";
     e[e["LineAdded"] = 1] = "LineAdded";
     e[e["LineRemoved"] = 2] = "LineRemoved";
    })(b || (b = {}));
    function x(t, n, r, i) {
     if (i === void 0) {
      i = e.getTokenAtPosition(t, n);
     }
     var a = e.findAncestor(i, e.isJSDoc);
     if (a) i = a.parent;
     var o = i.getStart(t);
     if (o <= n && n < i.getEnd()) {
      return undefined;
     }
     r = r === null ? undefined : r === undefined ? e.findPrecedingToken(n, t) : r;
     var s = r && e.getTrailingCommentRanges(t.text, r.end);
     var c = e.getLeadingCommentRangesOfNode(i, t);
     var u = e.concatenate(s, c);
     return u && e.find(u, function(r) {
      return e.rangeContainsPositionExclusive(r, n) || n === r.end && (r.kind === 2 || n === t.getFullWidth());
     });
    }
    t.getRangeOfEnclosingComment = x;
    function k(e, t) {
     switch (e.kind) {
     case 155:
     case 237:
     case 194:
     case 154:
     case 153:
     case 195:
      if (e.typeParameters === t) {
       return 27;
      } else if (e.parameters === t) {
       return 19;
      }
      break;

     case 189:
     case 190:
      if (e.typeArguments === t) {
       return 27;
      } else if (e.arguments === t) {
       return 19;
      }
      break;

     case 162:
      if (e.typeArguments === t) {
       return 27;
      }
     }
     return 0;
    }
    function S(e) {
     switch (e) {
     case 19:
      return 20;

     case 27:
      return 29;
     }
     return 0;
    }
    var w;
    var C;
    var D;
    function T(t, n) {
     var r = !w || (w.tabSize !== n.tabSize || w.indentSize !== n.indentSize);
     if (r) {
      w = {
       tabSize: n.tabSize,
       indentSize: n.indentSize
      };
      C = D = undefined;
     }
     if (!n.convertTabsToSpaces) {
      var i = Math.floor(t / n.tabSize);
      var a = t - i * n.tabSize;
      var o = void 0;
      if (!C) {
       C = [];
      }
      if (C[i] === undefined) {
       C[i] = o = e.repeatString("\t", i);
      } else {
       o = C[i];
      }
      return a ? o + e.repeatString(" ", a) : o;
     } else {
      var s = void 0;
      var c = Math.floor(t / n.indentSize);
      var u = t % n.indentSize;
      if (!D) {
       D = [];
      }
      if (D[c] === undefined) {
       s = e.repeatString(" ", n.indentSize * c);
       D[c] = s;
      } else {
       s = D[c];
      }
      return u ? s + e.repeatString(" ", u) : s;
     }
    }
    t.getIndentationString = T;
   })(t = e.formatting || (e.formatting = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n;
    (function(n) {
     var r;
     (function(e) {
      e[e["Unknown"] = -1] = "Unknown";
     })(r || (r = {}));
     function i(n, r, i, c) {
      if (c === void 0) {
       c = false;
      }
      if (n > r.text.length) {
       return u(i);
      }
      if (i.indentStyle === e.IndentStyle.None) {
       return 0;
      }
      var l = e.findPrecedingToken(n, r, undefined, true);
      var f = t.getRangeOfEnclosingComment(r, n, l || null);
      if (f && f.kind === 3) {
       return a(r, n, i, f);
      }
      if (!l) {
       return u(i);
      }
      var p = e.isStringOrRegularExpressionOrTemplateLiteral(l.kind);
      if (p && l.getStart(r) <= n && n < l.end) {
       return 0;
      }
      var m = r.getLineAndCharacterOfPosition(n).line;
      if (i.indentStyle === e.IndentStyle.Block) {
       return o(r, n, i);
      }
      if (l.kind === 26 && l.parent.kind !== 202) {
       var _ = d(l, r, i);
       if (_ !== -1) {
        return _;
       }
      }
      return s(r, n, l, m, c, i);
     }
     n.getIndentation = i;
     function a(t, n, r, i) {
      var a = e.getLineAndCharacterOfPosition(t, n).line - 1;
      var o = e.getLineAndCharacterOfPosition(t, i.pos).line;
      e.Debug.assert(o >= 0);
      if (a <= o) {
       return D(e.getStartPositionOfLine(o, t), n, t, r);
      }
      var s = e.getStartPositionOfLine(a, t);
      var c = C(s, n, t, r), u = c.column, l = c.character;
      if (u === 0) {
       return u;
      }
      var f = t.text.charCodeAt(s + l);
      return f === 42 ? u - 1 : u;
     }
     function o(t, n, r) {
      var i = n;
      while (i > 0) {
       var a = t.text.charCodeAt(i);
       if (!e.isWhiteSpaceLike(a)) {
        break;
       }
       i--;
      }
      var o = e.getLineStartPositionForPosition(i, t);
      return D(o, i, t, r);
     }
     function s(t, n, r, i, a, o) {
      var s;
      var c = r;
      while (c) {
       if (e.positionBelongsToNode(c, n, t) && N(o, c, s, t, true)) {
        var f = g(c, t);
        var d = _(r, c, i, t);
        var p = d !== 0 ? a && d === 2 ? o.indentSize : 0 : i !== f.line ? o.indentSize : 0;
        return l(c, f, undefined, p, t, true, o);
       }
       var m = x(c, t, o);
       if (m !== -1) {
        return m;
       }
       m = k(c, t, o);
       if (m !== -1) {
        return m + o.indentSize;
       }
       s = c;
       c = c.parent;
      }
      return u(o);
     }
     function c(e, t, n, r) {
      var i = n.getLineAndCharacterOfPosition(e.getStart(n));
      return l(e, i, t, 0, n, false, r);
     }
     n.getIndentationForNode = c;
     function u(e) {
      return e.baseIndentSize || 0;
     }
     n.getBaseIndentation = u;
     function l(e, t, n, r, i, a, o) {
      var s = e.parent;
      while (s) {
       var c = true;
       if (n) {
        var l = e.getStart(i);
        c = l < n.pos || l > n.end;
       }
       if (c) {
        var d = x(e, i, o);
        if (d !== -1) {
         return d + r;
        }
       }
       var m = f(s, e, i);
       var _ = m.line === t.line || v(s, e, t.line, i);
       if (c) {
        var d = p(e, s, t, _, i, o);
        if (d !== -1) {
         return d + r;
        }
        d = k(e, i, o);
        if (d !== -1) {
         return d + r;
        }
       }
       if (N(o, s, e, i, a) && !_) {
        r += o.indentSize;
       }
       var g = h(s, e, t.line, i);
       e = s;
       s = e.parent;
       t = g ? i.getLineAndCharacterOfPosition(e.getStart(i)) : m;
      }
      return r + u(o);
     }
     function f(e, t, n) {
      var r = b(t, n);
      var i = r ? r.pos : e.getStart(n);
      return n.getLineAndCharacterOfPosition(i);
     }
     function d(t, n, r) {
      var i = e.findListItemInfo(t);
      if (i && i.listItemIndex > 0) {
       return S(i.list.getChildren(), i.listItemIndex - 1, n, r);
      } else {
       return -1;
      }
     }
     function p(t, n, r, i, a, o) {
      var s = (e.isDeclaration(t) || e.isStatementButNotDeclaration(t)) && (n.kind === 277 || !i);
      if (!s) {
       return -1;
      }
      return w(r, a, o);
     }
     var m;
     (function(e) {
      e[e["Unknown"] = 0] = "Unknown";
      e[e["OpenBrace"] = 1] = "OpenBrace";
      e[e["CloseBrace"] = 2] = "CloseBrace";
     })(m || (m = {}));
     function _(t, n, r, i) {
      var a = e.findNextToken(t, n, i);
      if (!a) {
       return 0;
      }
      if (a.kind === 17) {
       return 1;
      } else if (a.kind === 18) {
       var o = g(a, i).line;
       return r === o ? 2 : 0;
      }
      return 0;
     }
     function g(e, t) {
      return t.getLineAndCharacterOfPosition(e.getStart(t));
     }
     function h(t, n, r, i) {
      if (!(e.isCallExpression(t) && e.contains(t.arguments, n))) {
       return false;
      }
      var a = t.expression.getEnd();
      var o = e.getLineAndCharacterOfPosition(i, a).line;
      return o === r;
     }
     n.isArgumentAndStartLineOverlapsExpressionBeingCalled = h;
     function v(t, n, r, i) {
      if (t.kind === 220 && t.elseStatement === n) {
       var a = e.findChildOfKind(t, 82, i);
       e.Debug.assert(a !== undefined);
       var o = g(a, i).line;
       return o === r;
      }
      return false;
     }
     n.childStartsOnTheSameLineWithElseInIfStatement = v;
     function y(t, n, r) {
      return t && e.rangeContainsStartEnd(t, n, r) ? t : undefined;
     }
     function b(e, t) {
      if (e.parent) {
       var n = e.end;
       switch (e.parent.kind) {
       case 162:
        return y(e.parent.typeArguments, e.getStart(t), n);

       case 186:
        return e.parent.properties;

       case 185:
        return e.parent.elements;

       case 237:
       case 194:
       case 195:
       case 154:
       case 153:
       case 158:
       case 155:
       case 164:
       case 159:
        {
         var r = e.getStart(t);
         return y(e.parent.typeParameters, r, n) || y(e.parent.parameters, r, n);
        }

       case 238:
       case 207:
       case 239:
       case 240:
        return y(e.parent.typeParameters, e.getStart(t), n);

       case 190:
       case 189:
        {
         var r = e.getStart(t);
         return y(e.parent.typeArguments, r, n) || y(e.parent.arguments, r, n);
        }

       case 236:
        return y(e.parent.declarations, e.getStart(t), n);

       case 250:
       case 254:
        return y(e.parent.elements, e.getStart(t), n);

       case 182:
       case 183:
        return y(e.parent.elements, e.getStart(t), n);
       }
      }
      return undefined;
     }
     n.getContainingList = b;
     function x(e, t, n) {
      var r = b(e, t);
      if (r) {
       var i = r.indexOf(e);
       if (i !== -1) {
        return S(r, i, t, n);
       }
      }
      return -1;
     }
     function k(t, n, r) {
      if (t.kind === 20) {
       return -1;
      }
      if (t.parent && e.isCallOrNewExpression(t.parent) && t.parent.expression !== t) {
       var i = t.parent.expression;
       var a = c(i);
       if (i === a) {
        return -1;
       }
       var o = n.getLineAndCharacterOfPosition(i.end);
       var s = n.getLineAndCharacterOfPosition(a.end);
       if (o.line === s.line) {
        return -1;
       }
       return w(o, n, r);
      }
      return -1;
      function c(e) {
       while (true) {
        switch (e.kind) {
        case 189:
        case 190:
        case 187:
        case 188:
         e = e.expression;
         break;

        default:
         return e;
        }
       }
      }
     }
     function S(t, n, r, i) {
      e.Debug.assert(n >= 0 && n < t.length);
      var a = t[n];
      var o = g(a, r);
      for (var s = n - 1; s >= 0; s--) {
       if (t[s].kind === 26) {
        continue;
       }
       var c = r.getLineAndCharacterOfPosition(t[s].end).line;
       if (c !== o.line) {
        return w(o, r, i);
       }
       o = g(t[s], r);
      }
      return -1;
     }
     function w(e, t, n) {
      var r = t.getPositionOfLineAndCharacter(e.line, 0);
      return D(r, r + e.character, t, n);
     }
     function C(t, n, r, i) {
      var a = 0;
      var o = 0;
      for (var s = t; s < n; s++) {
       var c = r.text.charCodeAt(s);
       if (!e.isWhiteSpaceSingleLine(c)) {
        break;
       }
       if (c === 9) {
        o += i.tabSize + o % i.tabSize;
       } else {
        o++;
       }
       a++;
      }
      return {
       column: o,
       character: a
      };
     }
     n.findFirstNonWhitespaceCharacterAndColumn = C;
     function D(e, t, n, r) {
      return C(e, t, n, r).column;
     }
     n.findFirstNonWhitespaceColumn = D;
     function T(e, t, n, r, i) {
      var a = n ? n.kind : 0;
      switch (t.kind) {
      case 219:
      case 238:
      case 207:
      case 239:
      case 241:
      case 240:
      case 185:
      case 216:
      case 243:
      case 186:
      case 166:
      case 179:
      case 168:
      case 244:
      case 270:
      case 269:
      case 193:
      case 187:
      case 189:
      case 190:
      case 217:
      case 252:
      case 228:
      case 203:
      case 183:
      case 182:
      case 260:
      case 263:
      case 259:
      case 268:
      case 153:
      case 158:
      case 159:
      case 149:
      case 163:
      case 164:
      case 175:
      case 191:
      case 199:
      case 254:
      case 250:
      case 255:
      case 251:
      case 152:
       return true;

      case 235:
      case 273:
       if (!e.indentMultiLineObjectLiteralBeginningOnBlankLine && r && a === 186) {
        return A(r, n);
       }
       return true;

      case 221:
      case 222:
      case 224:
      case 225:
      case 223:
      case 220:
      case 237:
      case 194:
      case 154:
      case 195:
      case 155:
      case 156:
      case 157:
       return a !== 216;

      case 253:
       return a !== 254;

      case 247:
       return a !== 248 || !!n.namedBindings && n.namedBindings.kind !== 250;

      case 258:
       return a !== 261;

      case 262:
       return a !== 264;

      case 172:
      case 171:
       if (a === 166) {
        return false;
       }
      }
      return i;
     }
     n.nodeWillIndentChild = T;
     function E(e, t) {
      switch (e) {
      case 228:
      case 232:
      case 226:
      case 227:
       return t.kind !== 216;

      default:
       return false;
      }
     }
     function N(e, t, n, r, i) {
      if (i === void 0) {
       i = false;
      }
      return T(e, t, n, r, false) && !(i && n && E(n.kind, t));
     }
     n.shouldIndentChildNode = N;
     function A(t, n) {
      var r = e.skipTrivia(t.text, n.pos);
      var i = t.getLineAndCharacterOfPosition(r).line;
      var a = t.getLineAndCharacterOfPosition(n.end).line;
      return i === a;
     }
    })(n = t.SmartIndenter || (t.SmartIndenter = {}));
   })(t = e.formatting || (e.formatting = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    function n(t) {
     var n = t.__pos;
     e.Debug.assert(typeof n === "number");
     return n;
    }
    function i(t, n) {
     e.Debug.assert(typeof n === "number");
     t.__pos = n;
    }
    function a(t) {
     var n = t.__end;
     e.Debug.assert(typeof n === "number");
     return n;
    }
    function o(t, n) {
     e.Debug.assert(typeof n === "number");
     t.__end = n;
    }
    var s;
    (function(e) {
     e[e["FullStart"] = 0] = "FullStart";
     e[e["Start"] = 1] = "Start";
    })(s = t.Position || (t.Position = {}));
    function c(t, n) {
     return e.skipTrivia(t, n, false, true);
    }
    function u(t, n) {
     var r = n;
     while (r < t.length) {
      var i = t.charCodeAt(r);
      if (e.isWhiteSpaceSingleLine(i)) {
       r++;
       continue;
      }
      return i === 47;
     }
     return false;
    }
    t.useNonAdjustedPositions = {
     useNonAdjustedStartPosition: true,
     useNonAdjustedEndPosition: true
    };
    var l;
    (function(e) {
     e[e["Remove"] = 0] = "Remove";
     e[e["ReplaceWithSingleNode"] = 1] = "ReplaceWithSingleNode";
     e[e["ReplaceWithMultipleNodes"] = 2] = "ReplaceWithMultipleNodes";
     e[e["Text"] = 3] = "Text";
    })(l || (l = {}));
    function f(e, t, n, r) {
     return {
      pos: d(e, t, r, s.Start),
      end: p(e, n, r)
     };
    }
    function d(t, n, r, i) {
     if (r.useNonAdjustedStartPosition) {
      return n.getStart(t);
     }
     var a = n.getFullStart();
     var o = n.getStart(t);
     if (a === o) {
      return o;
     }
     var u = e.getLineStartPositionForPosition(a, t);
     var l = e.getLineStartPositionForPosition(o, t);
     if (l === u) {
      return i === s.Start ? o : a;
     }
     var f = a > 0 ? 1 : 0;
     var d = e.getStartPositionOfLine(e.getLineOfLocalPosition(t, u) + f, t);
     d = c(t.text, d);
     return e.getStartPositionOfLine(e.getLineOfLocalPosition(t, d), t);
    }
    function p(t, n, r) {
     var i = n.end;
     if (r.useNonAdjustedEndPosition || e.isExpression(n)) {
      return i;
     }
     var a = e.skipTrivia(t.text, i, true);
     return a !== i && e.isLineBreak(t.text.charCodeAt(a - 1)) ? a : i;
    }
    function m(e, t) {
     return !!t && !!e.parent && (t.kind === 26 || t.kind === 25 && e.parent.kind === 186);
    }
    function _(e) {
     var t = "";
     for (var n = 0; n < e; n++) {
      t += " ";
     }
     return t;
    }
    var g = function() {
     function n(t, n) {
      this.newLineCharacter = t;
      this.formatContext = n;
      this.changes = [];
      this.newFiles = [];
      this.classesWithNodesInsertedAtStart = e.createMap();
      this.deletedNodes = [];
     }
     n.fromContext = function(t) {
      return new n(e.getNewLineOrDefaultFromHost(t.host, t.formatContext.options), t.formatContext);
     };
     n.with = function(e, t) {
      var r = n.fromContext(e);
      t(r);
      return r.getChanges();
     };
     n.prototype.deleteRange = function(e, t) {
      this.changes.push({
       kind: l.Remove,
       sourceFile: e,
       range: t
      });
      return this;
     };
     n.prototype.delete = function(e, t) {
      this.deletedNodes.push({
       sourceFile: e,
       node: t
      });
     };
     n.prototype.deleteModifier = function(t, n) {
      this.deleteRange(t, {
       pos: n.getStart(t),
       end: e.skipTrivia(t.text, n.end, true)
      });
     };
     n.prototype.deleteNodeRange = function(e, t, n, r) {
      if (r === void 0) {
       r = {};
      }
      var i = d(e, t, r, s.FullStart);
      var a = p(e, n, r);
      this.deleteRange(e, {
       pos: i,
       end: a
      });
      return this;
     };
     n.prototype.deleteNodeRangeExcludingEnd = function(e, t, n, r) {
      if (r === void 0) {
       r = {};
      }
      var i = d(e, t, r, s.FullStart);
      var a = n === undefined ? e.text.length : d(e, n, r, s.FullStart);
      this.deleteRange(e, {
       pos: i,
       end: a
      });
     };
     n.prototype.replaceRange = function(e, t, n, r) {
      if (r === void 0) {
       r = {};
      }
      this.changes.push({
       kind: l.ReplaceWithSingleNode,
       sourceFile: e,
       range: t,
       options: r,
       node: n
      });
      return this;
     };
     n.prototype.replaceNode = function(e, n, r, i) {
      if (i === void 0) {
       i = t.useNonAdjustedPositions;
      }
      return this.replaceRange(e, f(e, n, n, i), r, i);
     };
     n.prototype.replaceNodeRange = function(e, n, r, i, a) {
      if (a === void 0) {
       a = t.useNonAdjustedPositions;
      }
      this.replaceRange(e, f(e, n, r, a), i, a);
     };
     n.prototype.replaceRangeWithNodes = function(e, t, n, r) {
      if (r === void 0) {
       r = {};
      }
      this.changes.push({
       kind: l.ReplaceWithMultipleNodes,
       sourceFile: e,
       range: t,
       options: r,
       nodes: n
      });
      return this;
     };
     n.prototype.replaceNodeWithNodes = function(e, n, r, i) {
      if (i === void 0) {
       i = t.useNonAdjustedPositions;
      }
      return this.replaceRangeWithNodes(e, f(e, n, n, i), r, i);
     };
     n.prototype.replaceNodeRangeWithNodes = function(e, n, r, i, a) {
      if (a === void 0) {
       a = t.useNonAdjustedPositions;
      }
      return this.replaceRangeWithNodes(e, f(e, n, r, a), i, a);
     };
     n.prototype.nextCommaToken = function(t, n) {
      var r = e.findNextToken(n, n.parent, t);
      return r && r.kind === 26 ? r : undefined;
     };
     n.prototype.replacePropertyAssignment = function(e, t, n) {
      var r = this.nextCommaToken(e, t) ? "" : "," + this.newLineCharacter;
      return this.replaceNode(e, t, n, {
       suffix: r
      });
     };
     n.prototype.insertNodeAt = function(t, n, r, i) {
      if (i === void 0) {
       i = {};
      }
      this.replaceRange(t, e.createTextRange(n), r, i);
     };
     n.prototype.insertNodesAt = function(e, t, n, r) {
      if (r === void 0) {
       r = {};
      }
      this.changes.push({
       kind: l.ReplaceWithMultipleNodes,
       sourceFile: e,
       options: r,
       nodes: n,
       range: {
        pos: t,
        end: t
       }
      });
     };
     n.prototype.insertNodeAtTopOfFile = function(t, n, r) {
      var i = C(t);
      this.insertNodeAt(t, i, n, {
       prefix: i === 0 ? undefined : this.newLineCharacter,
       suffix: (e.isLineBreak(t.text.charCodeAt(i)) ? "" : this.newLineCharacter) + (r ? this.newLineCharacter : "")
      });
     };
     n.prototype.insertNodeBefore = function(e, t, n, r) {
      if (r === void 0) {
       r = false;
      }
      this.insertNodeAt(e, d(e, t, {}, s.Start), n, this.getOptionsForInsertNodeBefore(t, r));
     };
     n.prototype.insertModifierBefore = function(t, n, r) {
      var i = r.getStart(t);
      this.replaceRange(t, {
       pos: i,
       end: i
      }, e.createToken(n), {
       suffix: " "
      });
     };
     n.prototype.insertCommentBeforeLine = function(t, n, r, i) {
      var a = e.getStartPositionOfLine(n, t);
      var o = e.getFirstNonSpaceCharacterPosition(t.text, a);
      var s = D(t, o);
      var c = e.getTouchingToken(t, s ? o : r);
      var u = t.text.slice(a, o);
      var l = (s ? "" : this.newLineCharacter) + "//" + i + this.newLineCharacter + u;
      this.insertText(t, c.getStart(t), l);
     };
     n.prototype.replaceRangeWithText = function(e, t, n) {
      this.changes.push({
       kind: l.Text,
       sourceFile: e,
       range: t,
       text: n
      });
     };
     n.prototype.insertText = function(t, n, r) {
      this.replaceRangeWithText(t, e.createTextRange(n), r);
     };
     n.prototype.tryInsertTypeAnnotation = function(t, n, r) {
      var i;
      if (e.isFunctionLike(n)) {
       i = e.findChildOfKind(n, 20, t);
       if (!i) {
        if (!e.isArrowFunction(n)) return;
        i = e.first(n.parameters);
       }
      } else {
       i = n.kind !== 235 && n.questionToken ? n.questionToken : n.name;
      }
      this.insertNodeAt(t, i.end, r, {
       prefix: ": "
      });
     };
     n.prototype.insertTypeParameters = function(t, n, r) {
      var i = (e.findChildOfKind(n, 19, t) || e.first(n.parameters)).getStart(t);
      this.insertNodesAt(t, i, r, {
       prefix: "<",
       suffix: ">"
      });
     };
     n.prototype.getOptionsForInsertNodeBefore = function(t, n) {
      if (e.isStatement(t) || e.isClassElement(t)) {
       return {
        suffix: n ? this.newLineCharacter + this.newLineCharacter : this.newLineCharacter
       };
      } else if (e.isVariableDeclaration(t)) {
       return {
        suffix: ", "
       };
      } else if (e.isParameter(t)) {
       return {};
      } else if (e.isStringLiteral(t) && e.isImportDeclaration(t.parent) || e.isNamedImports(t)) {
       return {
        suffix: ", "
       };
      }
      return e.Debug.failBadSyntaxKind(t);
     };
     n.prototype.insertNodeAtConstructorStart = function(t, n, r) {
      var i = e.firstOrUndefined(n.body.statements);
      if (!i || !n.body.multiLine) {
       this.replaceConstructorBody(t, n, [ r ].concat(n.body.statements));
      } else {
       this.insertNodeBefore(t, i, r);
      }
     };
     n.prototype.insertNodeAtConstructorEnd = function(t, n, r) {
      var i = e.lastOrUndefined(n.body.statements);
      if (!i || !n.body.multiLine) {
       this.replaceConstructorBody(t, n, n.body.statements.concat([ r ]));
      } else {
       this.insertNodeAfter(t, i, r);
      }
     };
     n.prototype.replaceConstructorBody = function(t, n, r) {
      this.replaceNode(t, n.body, e.createBlock(r, true));
     };
     n.prototype.insertNodeAtEndOfScope = function(t, n, r) {
      var i = d(t, n.getLastToken(), {}, s.Start);
      this.replaceRange(t, {
       pos: i,
       end: i
      }, r, {
       prefix: e.isLineBreak(t.text.charCodeAt(n.getLastToken().pos)) ? this.newLineCharacter : this.newLineCharacter + this.newLineCharacter,
       suffix: this.newLineCharacter
      });
     };
     n.prototype.insertNodeAtClassStart = function(t, n, i) {
      var a = n.getStart(t);
      var o = e.formatting.SmartIndenter.findFirstNonWhitespaceColumn(e.getLineStartPositionForPosition(a, t), a, t, this.formatContext.options) + this.formatContext.options.indentSize;
      this.insertNodeAt(t, n.members.pos, i, r({
       indentation: o
      }, this.getInsertNodeAtClassStartPrefixSuffix(t, n)));
     };
     n.prototype.getInsertNodeAtClassStartPrefixSuffix = function(t, n) {
      if (n.members.length === 0) {
       if (e.addToSeen(this.classesWithNodesInsertedAtStart, e.getNodeId(n), n)) {
        var r = e.positionsAreOnSameLine.apply(void 0, v(n, t).concat([ t ]));
        return {
         prefix: this.newLineCharacter,
         suffix: r ? this.newLineCharacter : ""
        };
       } else {
        return {
         prefix: "",
         suffix: this.newLineCharacter
        };
       }
      } else {
       return {
        prefix: this.newLineCharacter,
        suffix: ""
       };
      }
     };
     n.prototype.insertNodeAfterComma = function(e, t, n) {
      var r = this.insertNodeAfterWorker(e, this.nextCommaToken(e, t) || t, n);
      this.insertNodeAt(e, r, n, this.getInsertNodeAfterOptions(e, t));
     };
     n.prototype.insertNodeAfter = function(e, t, n) {
      var r = this.insertNodeAfterWorker(e, t, n);
      this.insertNodeAt(e, r, n, this.getInsertNodeAfterOptions(e, t));
     };
     n.prototype.insertNodeAtEndOfList = function(e, t, n) {
      this.insertNodeAt(e, t.end, n, {
       prefix: ", "
      });
     };
     n.prototype.insertNodesAfter = function(t, n, r) {
      var i = this.insertNodeAfterWorker(t, n, e.first(r));
      this.insertNodesAt(t, i, r, this.getInsertNodeAfterOptions(t, n));
     };
     n.prototype.insertNodeAfterWorker = function(t, n, r) {
      if (T(n, r)) {
       if (t.text.charCodeAt(n.end - 1) !== 59) {
        this.replaceRange(t, e.createTextRange(n.end), e.createToken(25));
       }
      }
      var i = p(t, n, {});
      return i;
     };
     n.prototype.getInsertNodeAfterOptions = function(t, n) {
      var i = this.getInsertNodeAfterOptionsWorker(n);
      return r({}, i, {
       prefix: n.end === t.end && e.isStatement(n) ? i.prefix ? "\n" + i.prefix : "\n" : i.prefix
      });
     };
     n.prototype.getInsertNodeAfterOptionsWorker = function(t) {
      switch (t.kind) {
      case 238:
      case 242:
       return {
        prefix: this.newLineCharacter,
        suffix: this.newLineCharacter
       };

      case 235:
      case 9:
      case 71:
       return {
        prefix: ", "
       };

      case 273:
       return {
        suffix: "," + this.newLineCharacter
       };

      case 84:
       return {
        prefix: " "
       };

      case 149:
       return {};

      default:
       e.Debug.assert(e.isStatement(t) || e.isClassOrTypeElement(t));
       return {
        suffix: this.newLineCharacter
       };
      }
     };
     n.prototype.insertName = function(t, n, r) {
      e.Debug.assert(!n.name);
      if (n.kind === 195) {
       var i = e.findChildOfKind(n, 36, t);
       var a = e.findChildOfKind(n, 19, t);
       if (a) {
        this.insertNodesAt(t, a.getStart(t), [ e.createToken(89), e.createIdentifier(r) ], {
         joiner: " "
        });
        N(this, t, i);
       } else {
        this.insertText(t, e.first(n.parameters).getStart(t), "function " + r + "(");
        this.replaceRange(t, i, e.createToken(20));
       }
       if (n.body.kind !== 216) {
        this.insertNodesAt(t, n.body.getStart(t), [ e.createToken(17), e.createToken(96) ], {
         joiner: " ",
         suffix: " "
        });
        this.insertNodesAt(t, n.body.end, [ e.createToken(25), e.createToken(18) ], {
         joiner: " "
        });
       }
      } else {
       var o = e.findChildOfKind(n, n.kind === 194 ? 89 : 75, t).end;
       this.insertNodeAt(t, o, e.createIdentifier(r), {
        prefix: " "
       });
      }
     };
     n.prototype.insertExportModifier = function(e, t) {
      this.insertText(e, t.getStart(e), "export ");
     };
     n.prototype.insertNodeInListAfter = function(t, n, r, i) {
      if (i === void 0) {
       i = e.formatting.SmartIndenter.getContainingList(n, t);
      }
      if (!i) {
       e.Debug.fail("node is not a list element");
       return this;
      }
      var a = e.indexOfNode(i, n);
      if (a < 0) {
       return this;
      }
      var o = n.getEnd();
      if (a !== i.length - 1) {
       var s = e.getTokenAtPosition(t, n.end);
       if (s && m(n, s)) {
        var l = e.getLineAndCharacterOfPosition(t, c(t.text, i[a + 1].getFullStart()));
        var f = e.getLineAndCharacterOfPosition(t, s.end);
        var d = void 0;
        var p = void 0;
        if (f.line === l.line) {
         p = s.end;
         d = _(l.character - f.character);
        } else {
         p = e.getStartPositionOfLine(l.line, t);
        }
        var g = "" + e.tokenToString(s.kind) + t.text.substring(s.end, i[a + 1].getStart(t));
        this.replaceRange(t, e.createTextRange(p, i[a + 1].getStart(t)), r, {
         prefix: d,
         suffix: g
        });
       }
      } else {
       var h = n.getStart(t);
       var v = e.getLineStartPositionForPosition(h, t);
       var y = void 0;
       var b = false;
       if (i.length === 1) {
        y = 26;
       } else {
        var x = e.findPrecedingToken(n.pos, t);
        y = m(n, x) ? x.kind : 26;
        var k = e.getLineStartPositionForPosition(i[a - 1].getStart(t), t);
        b = k !== v;
       }
       if (u(t.text, n.end)) {
        b = true;
       }
       if (b) {
        this.replaceRange(t, e.createTextRange(o), e.createToken(y));
        var S = e.formatting.SmartIndenter.findFirstNonWhitespaceColumn(v, h, t, this.formatContext.options);
        var w = e.skipTrivia(t.text, o, true, false);
        if (w !== o && e.isLineBreak(t.text.charCodeAt(w - 1))) {
         w--;
        }
        this.replaceRange(t, e.createTextRange(w), r, {
         indentation: S,
         prefix: this.newLineCharacter
        });
       } else {
        this.replaceRange(t, e.createTextRange(o), r, {
         prefix: e.tokenToString(y) + " "
        });
       }
      }
      return this;
     };
     n.prototype.finishClassesWithNodesInsertedAtStart = function() {
      var t = this;
      this.classesWithNodesInsertedAtStart.forEach(function(n) {
       var r = n.getSourceFile();
       var i = v(n, r), a = i[0], o = i[1];
       if (e.positionsAreOnSameLine(a, o, r) && a !== o - 1) {
        t.deleteRange(r, e.createTextRange(a, o - 1));
       }
      });
     };
     n.prototype.finishDeleteDeclarations = function() {
      var t = this;
      var n = new e.NodeSet();
      var r = function(t, r) {
       if (!i.deletedNodes.some(function(n) {
        return n.sourceFile === t && e.rangeContainsRangeExclusive(n.node, r);
       })) {
        E.deleteDeclaration(i, n, t, r);
       }
      };
      var i = this;
      for (var a = 0, o = this.deletedNodes; a < o.length; a++) {
       var s = o[a], c = s.sourceFile, u = s.node;
       r(c, u);
      }
      n.forEach(function(r) {
       var i = r.getSourceFile();
       var a = e.formatting.SmartIndenter.getContainingList(r, i);
       if (r !== e.last(a)) return;
       var o = e.findLastIndex(a, function(e) {
        return !n.has(e);
       }, a.length - 2);
       if (o !== -1) {
        t.deleteRange(i, {
         pos: a[o].end,
         end: h(i, a[o + 1])
        });
       }
      });
     };
     n.prototype.getChanges = function(e) {
      this.finishDeleteDeclarations();
      this.finishClassesWithNodesInsertedAtStart();
      var t = y.getTextChangesFromChanges(this.changes, this.newLineCharacter, this.formatContext, e);
      for (var n = 0, r = this.newFiles; n < r.length; n++) {
       var i = r[n], a = i.oldFile, o = i.fileName, s = i.statements;
       t.push(y.newFileChanges(a, o, s, this.newLineCharacter, this.formatContext));
      }
      return t;
     };
     n.prototype.createNewFile = function(e, t, n) {
      this.newFiles.push({
       oldFile: e,
       fileName: t,
       statements: n
      });
     };
     return n;
    }();
    t.ChangeTracker = g;
    function h(t, n) {
     return e.skipTrivia(t.text, d(t, n, {}, s.FullStart), false, true);
    }
    function v(t, n) {
     return [ e.findChildOfKind(t, 17, n).end, e.findChildOfKind(t, 18, n).end ];
    }
    var y;
    (function(t) {
     function n(t, n, r, a) {
      return e.group(t, function(e) {
       return e.sourceFile.path;
      }).map(function(t) {
       var o = t[0].sourceFile;
       var s = e.stableSort(t, function(e, t) {
        return e.range.pos - t.range.pos || e.range.end - t.range.end;
       });
       var c = function(t) {
        e.Debug.assert(s[t].range.end <= s[t + 1].range.pos, "Changes overlap", function() {
         return JSON.stringify(s[t].range) + " and " + JSON.stringify(s[t + 1].range);
        });
       };
       for (var u = 0; u < s.length - 1; u++) {
        c(u);
       }
       var l = s.map(function(t) {
        return e.createTextChange(e.createTextSpanFromRange(t.range), i(t, o, n, r, a));
       });
       return {
        fileName: o.fileName,
        textChanges: l
       };
      });
     }
     t.getTextChangesFromChanges = n;
     function r(t, n, r, i, a) {
      var s = r.map(function(e) {
       return o(e, t, i).text;
      }).join(i);
      var c = e.createSourceFile(n, s, 6, true);
      var u = e.formatting.formatDocument(c, a);
      var l = b(s, u);
      return {
       fileName: n,
       textChanges: [ e.createTextChange(e.createTextSpan(0, 0), l) ],
       isNewFile: true
      };
     }
     t.newFileChanges = r;
     function i(t, n, r, i, o) {
      if (t.kind === l.Remove) {
       return "";
      }
      if (t.kind === l.Text) {
       return t.text;
      }
      var s = t.options, c = s === void 0 ? {} : s, u = t.range.pos;
      var f = function(e) {
       return a(e, n, u, c, r, i, o);
      };
      var d = t.kind === l.ReplaceWithMultipleNodes ? t.nodes.map(function(t) {
       return e.removeSuffix(f(t), r);
      }).join(t.options.joiner || r) : f(t.node);
      var p = c.preserveLeadingWhitespace || c.indentation !== undefined || e.getLineStartPositionForPosition(u, n) === u ? d : d.replace(/^\s+/, "");
      return (c.prefix || "") + p + (c.suffix || "");
     }
     function a(t, n, r, i, a, s, c) {
      var u = i.indentation, l = i.prefix, f = i.delta;
      var d = o(t, n, a), p = d.node, m = d.text;
      if (c) c(p, m);
      var _ = s.options;
      var g = u !== undefined ? u : e.formatting.SmartIndenter.getIndentation(r, n, _, l === a || e.getLineStartPositionForPosition(r, n) === r);
      if (f === undefined) {
       f = e.formatting.SmartIndenter.shouldIndentChildNode(s.options, t) ? _.indentSize || 0 : 0;
      }
      var h = {
       text: m,
       getLineAndCharacterOfPosition: function(t) {
        return e.getLineAndCharacterOfPosition(this, t);
       }
      };
      var v = e.formatting.formatNodeGivenIndentation(p, h, n.languageVariant, g, f, s);
      return b(m, v);
     }
     function o(t, n, r) {
      var i = new w(r);
      var a = r === "\n" ? 1 : 0;
      e.createPrinter({
       newLine: a
      }, i).writeNode(4, t, n, i);
      return {
       text: i.getText(),
       node: k(t)
      };
     }
    })(y || (y = {}));
    function b(t, n) {
     for (var r = n.length - 1; r >= 0; r--) {
      var i = n[r], a = i.span, o = i.newText;
      t = "" + t.substring(0, a.start) + o + t.substring(e.textSpanEnd(a));
     }
     return t;
    }
    t.applyChanges = b;
    function x(t) {
     return e.skipTrivia(t, 0) === t.length;
    }
    function k(t) {
     var r = e.visitEachChild(t, k, e.nullTransformationContext, S, k);
     var i = e.nodeIsSynthesized(r) ? r : Object.create(r);
     i.pos = n(t);
     i.end = a(t);
     return i;
    }
    function S(t, r, i, o, s) {
     var c = e.visitNodes(t, r, i, o, s);
     if (!c) {
      return c;
     }
     var u = c === t ? e.createNodeArray(c.slice(0)) : c;
     u.pos = n(t);
     u.end = a(t);
     return u;
    }
    var w = function() {
     function t(t) {
      var n = this;
      this.lastNonTriviaPosition = 0;
      this.writer = e.createTextWriter(t);
      this.onEmitNode = function(e, t, r) {
       if (t) {
        i(t, n.lastNonTriviaPosition);
       }
       r(e, t);
       if (t) {
        o(t, n.lastNonTriviaPosition);
       }
      };
      this.onBeforeEmitNodeArray = function(e) {
       if (e) {
        i(e, n.lastNonTriviaPosition);
       }
      };
      this.onAfterEmitNodeArray = function(e) {
       if (e) {
        o(e, n.lastNonTriviaPosition);
       }
      };
      this.onBeforeEmitToken = function(e) {
       if (e) {
        i(e, n.lastNonTriviaPosition);
       }
      };
      this.onAfterEmitToken = function(e) {
       if (e) {
        o(e, n.lastNonTriviaPosition);
       }
      };
     }
     t.prototype.setLastNonTriviaPosition = function(t, n) {
      if (n || !x(t)) {
       this.lastNonTriviaPosition = this.writer.getTextPos();
       var r = 0;
       while (e.isWhiteSpaceLike(t.charCodeAt(t.length - r - 1))) {
        r++;
       }
       this.lastNonTriviaPosition -= r;
      }
     };
     t.prototype.write = function(e) {
      this.writer.write(e);
      this.setLastNonTriviaPosition(e, false);
     };
     t.prototype.writeKeyword = function(e) {
      this.writer.writeKeyword(e);
      this.setLastNonTriviaPosition(e, false);
     };
     t.prototype.writeOperator = function(e) {
      this.writer.writeOperator(e);
      this.setLastNonTriviaPosition(e, false);
     };
     t.prototype.writePunctuation = function(e) {
      this.writer.writePunctuation(e);
      this.setLastNonTriviaPosition(e, false);
     };
     t.prototype.writeParameter = function(e) {
      this.writer.writeParameter(e);
      this.setLastNonTriviaPosition(e, false);
     };
     t.prototype.writeProperty = function(e) {
      this.writer.writeProperty(e);
      this.setLastNonTriviaPosition(e, false);
     };
     t.prototype.writeSpace = function(e) {
      this.writer.writeSpace(e);
      this.setLastNonTriviaPosition(e, false);
     };
     t.prototype.writeStringLiteral = function(e) {
      this.writer.writeStringLiteral(e);
      this.setLastNonTriviaPosition(e, false);
     };
     t.prototype.writeSymbol = function(e, t) {
      this.writer.writeSymbol(e, t);
      this.setLastNonTriviaPosition(e, false);
     };
     t.prototype.writeTextOfNode = function(e, t) {
      this.writer.writeTextOfNode(e, t);
     };
     t.prototype.writeLine = function() {
      this.writer.writeLine();
     };
     t.prototype.increaseIndent = function() {
      this.writer.increaseIndent();
     };
     t.prototype.decreaseIndent = function() {
      this.writer.decreaseIndent();
     };
     t.prototype.getText = function() {
      return this.writer.getText();
     };
     t.prototype.rawWrite = function(e) {
      this.writer.rawWrite(e);
      this.setLastNonTriviaPosition(e, false);
     };
     t.prototype.writeLiteral = function(e) {
      this.writer.writeLiteral(e);
      this.setLastNonTriviaPosition(e, true);
     };
     t.prototype.getTextPos = function() {
      return this.writer.getTextPos();
     };
     t.prototype.getLine = function() {
      return this.writer.getLine();
     };
     t.prototype.getColumn = function() {
      return this.writer.getColumn();
     };
     t.prototype.getIndent = function() {
      return this.writer.getIndent();
     };
     t.prototype.isAtStartOfLine = function() {
      return this.writer.isAtStartOfLine();
     };
     t.prototype.clear = function() {
      this.writer.clear();
      this.lastNonTriviaPosition = 0;
     };
     return t;
    }();
    function C(t) {
     var n = t.text;
     var r = e.getShebang(n);
     var i = 0;
     if (r !== undefined) {
      i = r.length;
      u();
     }
     var a = e.getLeadingCommentRanges(n, i);
     if (!a) return i;
     if (a.length && a[0].kind === 3 && e.isPinnedComment(n, a[0].pos)) {
      i = a[0].end;
      u();
      a = a.slice(1);
     }
     for (var o = 0, s = a; o < s.length; o++) {
      var c = s[o];
      if (c.kind === 2 && e.isRecognizedTripleSlashComment(n, c.pos, c.end)) {
       i = c.end;
       u();
       continue;
      }
      break;
     }
     return i;
     function u() {
      if (i < n.length) {
       var t = n.charCodeAt(i);
       if (e.isLineBreak(t)) {
        i++;
        if (i < n.length && t === 13 && n.charCodeAt(i) === 10) {
         i++;
        }
       }
      }
     }
    }
    function D(t, n) {
     return !e.isInComment(t, n) && !e.isInString(t, n) && !e.isInTemplateString(t, n);
    }
    t.isValidLocationToAddComment = D;
    function T(t, n) {
     return (e.isPropertySignature(t) || e.isPropertyDeclaration(t)) && e.isClassOrTypeElement(n) && n.name.kind === 147 || e.isStatementButNotDeclaration(t) && e.isStatementButNotDeclaration(n);
    }
    var E;
    (function(t) {
     function n(t, n, s, c) {
      switch (c.kind) {
      case 149:
       {
        var u = c.parent;
        if (e.isArrowFunction(u) && u.parameters.length === 1) {
         var l = e.updateArrowFunction(u, u.modifiers, u.typeParameters, undefined, u.type, u.equalsGreaterThanToken, u.body);
         e.suppressLeadingAndTrailingTrivia(l);
         t.replaceNode(s, u, l);
        } else {
         A(t, n, s, c);
        }
        break;
       }

      case 247:
       N(t, s, c, c === s.imports[0].parent ? {
        useNonAdjustedStartPosition: true,
        useNonAdjustedEndPosition: false
       } : undefined);
       break;

      case 184:
       var f = c.parent;
       var d = f.kind === 183 && c !== e.last(f.elements);
       if (d) {
        N(t, s, c);
       } else {
        A(t, n, s, c);
       }
       break;

      case 235:
       a(t, n, s, c);
       break;

      case 148:
       {
        var p = c;
        switch (p.parent.kind) {
        case 300:
         t.deleteRange(s, o(p.parent, s));
         break;

        case 174:
         break;

        default:
         {
          var m = e.getEffectiveTypeParameterDeclarations(p.parent);
          if (m.length === 1) {
           var _ = e.cast(m, e.isNodeArray), g = _.pos, h = _.end;
           var v = e.getTokenAtPosition(s, g - 1);
           var y = e.getTokenAtPosition(s, h);
           e.Debug.assert(v.kind === 27);
           e.Debug.assert(y.kind === 29);
           t.deleteNodeRange(s, v, y);
          } else {
           A(t, n, s, c);
          }
         }
        }
        break;
       }

      case 251:
       var b = c.parent;
       if (b.elements.length === 1) {
        i(t, s, b);
       } else {
        A(t, n, s, c);
       }
       break;

      case 249:
       i(t, s, c);
       break;

      default:
       if (e.isImportClause(c.parent) && c.parent.name === c) {
        r(t, s, c.parent);
       } else if (e.isCallLikeExpression(c.parent)) {
        A(t, n, s, c);
       } else {
        N(t, s, c, c.kind === 25 ? {
         useNonAdjustedEndPosition: true
        } : undefined);
       }
      }
     }
     t.deleteDeclaration = n;
     function r(t, n, r) {
      if (!r.namedBindings) {
       N(t, n, r.parent);
      } else {
       var i = r.name.getStart(n);
       var a = e.getTokenAtPosition(n, r.name.end);
       if (a && a.kind === 26) {
        var o = e.skipTrivia(n.text, a.end, false, true);
        t.deleteRange(n, {
         pos: i,
         end: o
        });
       } else {
        N(t, n, r.name);
       }
      }
     }
     function i(t, n, r) {
      if (r.parent.name) {
       var i = e.Debug.assertDefined(e.getTokenAtPosition(n, r.pos - 1));
       t.deleteRange(n, {
        pos: i.getStart(n),
        end: r.end
       });
      } else {
       var a = e.getAncestor(r, 247);
       N(t, n, a);
      }
     }
     function a(t, n, r, i) {
      var a = i.parent;
      if (a.kind === 272) {
       t.deleteNodeRange(r, e.findChildOfKind(a, 19, r), e.findChildOfKind(a, 20, r));
       return;
      }
      if (a.declarations.length !== 1) {
       A(t, n, r, i);
       return;
      }
      var o = a.parent;
      switch (o.kind) {
      case 225:
      case 224:
       t.replaceNode(r, i, e.createObjectLiteral());
       break;

      case 223:
       N(t, r, a);
       break;

      case 217:
       N(t, r, o);
       break;

      default:
       e.Debug.assertNever(o);
      }
     }
     function o(t, n) {
      var r = t.parent;
      var i = r.kind === 289 && r.comment === undefined && r.tags.length === 1 ? r : t;
      return e.createTextRangeFromNode(i, n);
     }
    })(E || (E = {}));
    function N(e, t, n, r) {
     if (r === void 0) {
      r = {};
     }
     var i = d(t, n, r, s.FullStart);
     var a = p(t, n, r);
     e.deleteRange(t, {
      pos: i,
      end: a
     });
    }
    t.deleteNode = N;
    function A(t, n, r, i) {
     var a = e.Debug.assertDefined(e.formatting.SmartIndenter.getContainingList(i, r));
     var o = e.indexOfNode(a, i);
     e.Debug.assert(o !== -1);
     if (a.length === 1) {
      N(t, r, i);
      return;
     }
     e.Debug.assert(!n.has(i), "Deleting a node twice");
     n.add(i);
     t.deleteRange(r, {
      pos: h(r, i),
      end: o === a.length - 1 ? p(r, i, {}) : h(r, a[o + 1])
     });
    }
   })(t = e.textChanges || (e.textChanges = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n = e.createMultiMap();
    var r = e.createMap();
    function i(t) {
     return e.isArray(t) ? e.formatStringFromArgs(e.getLocaleSpecificMessage(t[0]), t.slice(1)) : e.getLocaleSpecificMessage(t);
    }
    function a(e, t, n) {
     return s(e, i(n), t, undefined, undefined);
    }
    t.createCodeFixActionNoFixId = a;
    function o(e, t, n, r, a, o) {
     return s(e, i(n), t, r, i(a), o);
    }
    t.createCodeFixAction = o;
    function s(e, t, n, r, i, a) {
     return {
      fixName: e,
      description: t,
      changes: n,
      fixId: r,
      fixAllDescription: i,
      commands: a ? [ a ] : undefined
     };
    }
    function c(t) {
     for (var i = 0, a = t.errorCodes; i < a.length; i++) {
      var o = a[i];
      n.add(String(o), t);
     }
     if (t.fixIds) {
      for (var s = 0, c = t.fixIds; s < c.length; s++) {
       var u = c[s];
       e.Debug.assert(!r.has(u));
       r.set(u, t);
      }
     }
    }
    t.registerCodeFix = c;
    function u() {
     return e.arrayFrom(n.keys());
    }
    t.getSupportedErrorCodes = u;
    function l(t) {
     return e.flatMap(n.get(String(t.errorCode)) || e.emptyArray, function(e) {
      return e.getCodeActions(t);
     });
    }
    t.getFixes = l;
    function f(t) {
     return r.get(e.cast(t.fixId, e.isString)).getAllCodeActions(t);
    }
    t.getAllFixes = f;
    function d(e, t) {
     return {
      changes: e,
      commands: t
     };
    }
    t.createCombinedCodeActions = d;
    function p(e, t) {
     return {
      fileName: e,
      textChanges: t
     };
    }
    t.createFileTextChanges = p;
    function m(t, n, r) {
     var i = [];
     var a = e.textChanges.ChangeTracker.with(t, function(e) {
      return _(t, n, function(t) {
       return r(e, t, i);
      });
     });
     return d(a, i.length === 0 ? undefined : i);
    }
    t.codeFixAll = m;
    function _(t, n, r) {
     var i = t.program, a = t.sourceFile, o = t.cancellationToken;
     for (var s = 0, c = i.getSemanticDiagnostics(a, o).concat(e.computeSuggestionDiagnostics(a, i, o)); s < c.length; s++) {
      var u = c[s];
      if (e.contains(n, u.code)) {
       r(u);
      }
     }
    }
    t.eachDiagnostic = _;
   })(t = e.codefix || (e.codefix = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n = e.createMap();
    function r(e, t) {
     n.set(e, t);
    }
    t.registerRefactor = r;
    function i(t) {
     return e.arrayFrom(e.flatMapIterator(n.values(), function(e) {
      return t.cancellationToken && t.cancellationToken.isCancellationRequested() ? undefined : e.getAvailableActions(t);
     }));
    }
    t.getApplicableRefactors = i;
    function a(e, t, r) {
     var i = n.get(t);
     return i && i.getEditsForAction(e, r);
    }
    t.getEditsForRefactor = a;
   })(t = e.refactor || (e.refactor = {}));
   function n(t) {
    var n = t.startPosition, r = t.endPosition;
    return e.createTextSpanFromBounds(n, r === undefined ? n : r);
   }
   e.getRefactorContextSpan = n;
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n = "addMissingInvocationForDecorator";
    var r = [ e.Diagnostics._0_accepts_too_few_arguments_to_be_used_as_a_decorator_here_Did_you_mean_to_call_it_first_and_write_0.code ];
    t.registerCodeFix({
     errorCodes: r,
     getCodeActions: function(r) {
      var a = e.textChanges.ChangeTracker.with(r, function(e) {
       return i(e, r.sourceFile, r.span.start);
      });
      return [ t.createCodeFixAction(n, a, e.Diagnostics.Call_decorator_expression, n, e.Diagnostics.Add_to_all_uncalled_decorators) ];
     },
     fixIds: [ n ],
     getAllCodeActions: function(e) {
      return t.codeFixAll(e, r, function(e, t) {
       return i(e, t.file, t.start);
      });
     }
    });
    function i(t, n, r) {
     var i = e.getTokenAtPosition(n, r);
     var a = e.findAncestor(i, e.isDecorator);
     e.Debug.assert(!!a, "Expected position to be owned by a decorator.");
     var o = e.createCall(a.expression, undefined, undefined);
     t.replaceNode(n, a.expression, o);
    }
   })(t = e.codefix || (e.codefix = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n = "annotateWithTypeFromJSDoc";
    var r = [ e.Diagnostics.JSDoc_types_may_be_moved_to_TypeScript_types.code ];
    t.registerCodeFix({
     errorCodes: r,
     getCodeActions: function(r) {
      var a = i(r.sourceFile, r.span.start);
      if (!a) return;
      var o = e.textChanges.ChangeTracker.with(r, function(e) {
       return s(e, r.sourceFile, a);
      });
      return [ t.createCodeFixAction(n, o, e.Diagnostics.Annotate_with_type_from_JSDoc, n, e.Diagnostics.Annotate_everything_with_types_from_JSDoc) ];
     },
     fixIds: [ n ],
     getAllCodeActions: function(e) {
      return t.codeFixAll(e, r, function(e, t) {
       var n = i(t.file, t.start);
       if (n) s(e, t.file, n);
      });
     }
    });
    function i(t, n) {
     var r = e.getTokenAtPosition(t, n);
     return e.tryCast(e.isParameter(r.parent) ? r.parent.parent : r.parent, a);
    }
    function a(e) {
     return c(e) && o(e);
    }
    t.parameterShouldGetTypeFromJSDoc = a;
    function o(t) {
     return e.isFunctionLikeDeclaration(t) ? t.parameters.some(o) || !t.type && !!e.getJSDocReturnType(t) : !t.type && !!e.getJSDocType(t);
    }
    function s(t, n, r) {
     if (e.isFunctionLikeDeclaration(r) && (e.getJSDocReturnType(r) || r.parameters.some(function(t) {
      return !!e.getJSDocType(t);
     }))) {
      if (!r.typeParameters) {
       var i = e.getJSDocTypeParameterDeclarations(r);
       if (i.length) t.insertTypeParameters(n, r, i);
      }
      var a = e.isArrowFunction(r) && !e.findChildOfKind(r, 19, n);
      if (a) t.insertNodeBefore(n, e.first(r.parameters), e.createToken(19));
      for (var o = 0, s = r.parameters; o < s.length; o++) {
       var c = s[o];
       if (!c.type) {
        var l = e.getJSDocType(c);
        if (l) t.tryInsertTypeAnnotation(n, c, u(l));
       }
      }
      if (a) t.insertNodeAfter(n, e.last(r.parameters), e.createToken(20));
      if (!r.type) {
       var f = e.getJSDocReturnType(r);
       if (f) t.tryInsertTypeAnnotation(n, r, u(f));
      }
     } else {
      var d = e.Debug.assertDefined(e.getJSDocType(r));
      e.Debug.assert(!r.type);
      t.tryInsertTypeAnnotation(n, r, u(d));
     }
    }
    function c(t) {
     return e.isFunctionLikeDeclaration(t) || t.kind === 235 || t.kind === 151 || t.kind === 152;
    }
    function u(t) {
     switch (t.kind) {
     case 282:
     case 283:
      return e.createTypeReferenceNode("any", e.emptyArray);

     case 286:
      return l(t);

     case 285:
      return u(t.type);

     case 284:
      return f(t);

     case 288:
      return d(t);

     case 287:
      return p(t);

     case 162:
      return _(t);

     default:
      var n = e.visitEachChild(t, u, undefined);
      e.setEmitFlags(n, 1);
      return n;
     }
    }
    function l(t) {
     return e.createUnionTypeNode([ e.visitNode(t.type, u), e.createTypeReferenceNode("undefined", e.emptyArray) ]);
    }
    function f(t) {
     return e.createUnionTypeNode([ e.visitNode(t.type, u), e.createTypeReferenceNode("null", e.emptyArray) ]);
    }
    function d(t) {
     return e.createArrayTypeNode(e.visitNode(t.type, u));
    }
    function p(t) {
     return e.createFunctionTypeNode(e.emptyArray, t.parameters.map(m), t.type);
    }
    function m(t) {
     var n = t.parent.parameters.indexOf(t);
     var r = t.type.kind === 288 && n === t.parent.parameters.length - 1;
     var i = t.name || (r ? "rest" : "arg" + n);
     var a = r ? e.createToken(24) : t.dotDotDotToken;
     return e.createParameter(t.decorators, t.modifiers, a, i, t.questionToken, e.visitNode(t.type, u), t.initializer);
    }
    function _(t) {
     var n = t.typeName;
     var r = t.typeArguments;
     if (e.isIdentifier(t.typeName)) {
      if (e.isJSDocIndexSignature(t)) {
       return g(t);
      }
      var i = t.typeName.text;
      switch (t.typeName.text) {
      case "String":
      case "Boolean":
      case "Object":
      case "Number":
       i = i.toLowerCase();
       break;

      case "array":
      case "date":
      case "promise":
       i = i[0].toUpperCase() + i.slice(1);
       break;
      }
      n = e.createIdentifier(i);
      if ((i === "Array" || i === "Promise") && !t.typeArguments) {
       r = e.createNodeArray([ e.createTypeReferenceNode("any", e.emptyArray) ]);
      } else {
       r = e.visitNodes(t.typeArguments, u);
      }
     }
     return e.createTypeReferenceNode(n, r);
    }
    function g(t) {
     var n = e.createParameter(undefined, undefined, undefined, t.typeArguments[0].kind === 134 ? "n" : "s", undefined, e.createTypeReferenceNode(t.typeArguments[0].kind === 134 ? "number" : "string", []), undefined);
     var r = e.createTypeLiteralNode([ e.createIndexSignature(undefined, undefined, [ n ], t.typeArguments[1]) ]);
     e.setEmitFlags(r, 1);
     return r;
    }
   })(t = e.codefix || (e.codefix = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n = "convertFunctionToEs6Class";
    var r = [ e.Diagnostics.This_constructor_function_may_be_converted_to_a_class_declaration.code ];
    t.registerCodeFix({
     errorCodes: r,
     getCodeActions: function(r) {
      var a = e.textChanges.ChangeTracker.with(r, function(e) {
       return i(e, r.sourceFile, r.span.start, r.program.getTypeChecker());
      });
      return [ t.createCodeFixAction(n, a, e.Diagnostics.Convert_function_to_an_ES2015_class, n, e.Diagnostics.Convert_all_constructor_functions_to_classes) ];
     },
     fixIds: [ n ],
     getAllCodeActions: function(e) {
      return t.codeFixAll(e, r, function(t, n) {
       return i(t, n.file, n.start, e.program.getTypeChecker());
      });
     }
    });
    function i(t, n, r, i) {
     var o = i.getSymbolAtLocation(e.getTokenAtPosition(n, r));
     if (!o || !(o.flags & (16 | 3))) {
      return undefined;
     }
     var s = o.valueDeclaration;
     var c;
     var u;
     switch (s.kind) {
     case 237:
      c = s;
      t.delete(n, s);
      u = d(s);
      break;

     case 235:
      c = s.parent.parent;
      u = f(s);
      if (s.parent.declarations.length === 1) {
       e.copyComments(c, u, n);
       t.delete(n, c);
      } else {
       t.delete(n, s);
      }
      break;
     }
     if (!u) {
      return undefined;
     }
     e.copyComments(s, u, n);
     t.insertNodeAfter(n, c, u);
     function l(r) {
      var i = [];
      if (r.members) {
       r.members.forEach(function(e) {
        var t = s(e, undefined);
        if (t) {
         i.push(t);
        }
       });
      }
      if (r.exports) {
       r.exports.forEach(function(t) {
        var n = s(t, [ e.createToken(115) ]);
        if (n) {
         i.push(n);
        }
       });
      }
      return i;
      function o(t, n) {
       return e.isFunctionLike(n);
      }
      function s(r, i) {
       if (!(r.flags & 8192)) {
        return;
       }
       var s = r.valueDeclaration;
       var c = s.parent;
       if (!o(s, c.right)) {
        return;
       }
       var u = c.parent && c.parent.kind === 219 ? c.parent : c;
       t.delete(n, u);
       if (!c.right) {
        return e.createProperty([], i, r.name, undefined, undefined, undefined);
       }
       switch (c.right.kind) {
       case 194:
        {
         var l = c.right;
         var f = e.concatenate(i, a(l, 120));
         var d = e.createMethod(undefined, f, undefined, s.name, undefined, undefined, l.parameters, undefined, l.body);
         e.copyComments(c, d, n);
         return d;
        }

       case 195:
        {
         var p = c.right;
         var m = p.body;
         var _ = void 0;
         if (m.kind === 216) {
          _ = m;
         } else {
          _ = e.createBlock([ e.createReturn(m) ]);
         }
         var f = e.concatenate(i, a(p, 120));
         var d = e.createMethod(undefined, f, undefined, s.name, undefined, undefined, p.parameters, undefined, _);
         e.copyComments(c, d, n);
         return d;
        }

       default:
        {
         if (e.isSourceFileJavaScript(n)) {
          return;
         }
         var g = e.createProperty(undefined, i, s.name, undefined, undefined, c.right);
         e.copyComments(c.parent, g, n);
         return g;
        }
       }
      }
     }
     function f(t) {
      var n = t.initializer;
      if (!n || n.kind !== 194) {
       return undefined;
      }
      if (t.name.kind !== 71) {
       return undefined;
      }
      var r = l(t.symbol);
      if (n.body) {
       r.unshift(e.createConstructor(undefined, undefined, n.parameters, n.body));
      }
      var i = a(c, 84);
      var o = e.createClassDeclaration(undefined, i, t.name, undefined, undefined, r);
      return o;
     }
     function d(t) {
      var n = l(o);
      if (t.body) {
       n.unshift(e.createConstructor(undefined, undefined, t.parameters, t.body));
      }
      var r = a(t, 84);
      var i = e.createClassDeclaration(undefined, r, t.name, undefined, undefined, n);
      return i;
     }
    }
    function a(t, n) {
     return e.filter(t.modifiers, function(e) {
      return e.kind === n;
     });
    }
   })(t = e.codefix || (e.codefix = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    t.registerCodeFix({
     errorCodes: [ e.Diagnostics.File_is_a_CommonJS_module_it_may_be_converted_to_an_ES6_module.code ],
     getCodeActions: function(i) {
      var a = i.sourceFile, o = i.program, s = i.preferences;
      var c = e.textChanges.ChangeTracker.with(i, function(t) {
       var i = r(a, o.getTypeChecker(), t, o.getCompilerOptions().target, e.getQuotePreference(a, s));
       if (i) {
        for (var c = 0, u = o.getSourceFiles(); c < u.length; c++) {
         var l = u[c];
         n(l, a, t, e.getQuotePreference(l, s));
        }
       }
      });
      return [ t.createCodeFixActionNoFixId("convertToEs6Module", c, e.Diagnostics.Convert_to_ES6_module) ];
     }
    });
    function n(t, n, r, i) {
     for (var a = 0, o = t.imports; a < o.length; a++) {
      var s = o[a];
      var c = e.getResolvedModule(t, s.text);
      if (!c || c.resolvedFileName !== n.fileName) {
       continue;
      }
      var u = e.importFromModuleSpecifier(s);
      switch (u.kind) {
      case 246:
       r.replaceNode(t, u, e.makeImport(u.name, undefined, s, i));
       break;

      case 189:
       if (e.isRequireCall(u, false)) {
        r.replaceNode(t, u, e.createPropertyAccess(e.getSynthesizedDeepClone(u), "default"));
       }
       break;
      }
     }
    }
    function r(t, n, r, o, c) {
     var u = {
      original: x(t),
      additional: e.createMap()
     };
     var l = i(t, n, u);
     a(t, l, r);
     var f = false;
     for (var d = 0, p = t.statements; d < p.length; d++) {
      var m = p[d];
      var _ = s(t, m, n, r, u, o, l, c);
      f = f || _;
     }
     return f;
    }
    function i(t, n, r) {
     var i = e.createMap();
     o(t, function(t) {
      var a = t.name, o = a.text, s = a.originalKeywordKind;
      if (!i.has(o) && (s !== undefined && e.isNonContextualKeyword(s) || n.resolveName(t.name.text, t, 67216319, true))) {
       i.set(o, b("_" + o, r));
      }
     });
     return i;
    }
    function a(t, n, r) {
     o(t, function(i, a) {
      if (a) {
       return;
      }
      var o = i.name.text;
      r.replaceNode(t, i, e.createIdentifier(n.get(o) || o));
     });
    }
    function o(t, n) {
     t.forEachChild(function r(i) {
      if (e.isPropertyAccessExpression(i) && e.isExportsOrModuleExportsOrAlias(t, i.expression)) {
       var a = i.parent;
       n(i, e.isBinaryExpression(a) && a.left === i && a.operatorToken.kind === 58);
      }
      i.forEachChild(r);
     });
    }
    function s(t, n, r, i, a, o, s, u) {
     switch (n.kind) {
     case 217:
      c(t, n, i, r, a, o, u);
      return false;

     case 219:
      {
       var f = n.expression;
       switch (f.kind) {
       case 189:
        {
         if (e.isRequireCall(f, true)) {
          i.replaceNode(t, n, e.makeImport(undefined, undefined, f.arguments[0], u));
         }
         return false;
        }

       case 202:
        {
         var d = f.operatorToken;
         return d.kind === 58 && l(t, r, f, i, s);
        }
       }
      }

     default:
      return false;
     }
    }
    function c(t, n, r, i, a, o, s) {
     var c = n.declarationList;
     var l = false;
     var f = e.flatMap(c.declarations, function(n) {
      var f = n.name, d = n.initializer;
      if (d) {
       if (e.isExportsOrModuleExportsOrAlias(t, d)) {
        l = true;
        return [];
       } else if (e.isRequireCall(d, true)) {
        l = true;
        return v(t, f, d.arguments[0], r, i, a, o, s);
       } else if (e.isPropertyAccessExpression(d) && e.isRequireCall(d.expression, true)) {
        l = true;
        return u(f, d.name.text, d.expression.arguments[0], a, s);
       }
      }
      return e.createVariableStatement(undefined, e.createVariableDeclarationList([ n ], c.flags));
     });
     if (l) {
      r.replaceNodeWithNodes(t, n, f);
     }
    }
    function u(t, n, r, i, a) {
     switch (t.kind) {
     case 182:
     case 183:
      {
       var o = b(n, i);
       return [ D(o, n, r, a), E(undefined, t, e.createIdentifier(o)) ];
      }

     case 71:
      return [ D(t.text, n, r, a) ];

     default:
      return e.Debug.assertNever(t);
     }
    }
    function l(t, n, r, i, a) {
     var o = r.left, s = r.right;
     if (!e.isPropertyAccessExpression(o)) {
      return false;
     }
     if (e.isExportsOrModuleExportsOrAlias(t, o)) {
      if (e.isExportsOrModuleExportsOrAlias(t, s)) {
       i.delete(t, r.parent);
      } else {
       var c = e.isObjectLiteralExpression(s) ? f(s) : e.isRequireCall(s, true) ? p(s.arguments[0], n) : undefined;
       if (c) {
        i.replaceNodeWithNodes(t, r.parent, c[0]);
        return c[1];
       } else {
        i.replaceRangeWithText(t, e.createTextRange(o.getStart(t), s.pos), "export default");
        return true;
       }
      }
     } else if (e.isExportsOrModuleExportsOrAlias(t, o.expression)) {
      d(t, r, i, a);
     }
     return false;
    }
    function f(t) {
     var n = e.mapAllOrFail(t.properties, function(t) {
      switch (t.kind) {
      case 156:
      case 157:
      case 274:
      case 275:
       return undefined;

      case 273:
       return !e.isIdentifier(t.name) ? undefined : h(t.name.text, t.initializer);

      case 154:
       return !e.isIdentifier(t.name) ? undefined : w(t.name.text, [ e.createToken(84) ], t);

      default:
       e.Debug.assertNever(t);
      }
     });
     return n && [ n, false ];
    }
    function d(t, n, r, i) {
     var a = n.left.name.text;
     var o = i.get(a);
     if (o !== undefined) {
      var s = [ E(undefined, o, n.right), N([ e.createExportSpecifier(o, a) ]) ];
      r.replaceNodeWithNodes(t, n.parent, s);
     } else {
      g(n, t, r);
     }
    }
    function p(t, n) {
     var r = t.text;
     var i = n.getSymbolAtLocation(t);
     var a = i ? i.exports : e.emptyUnderscoreEscapedMap;
     return a.has("export=") ? [ [ _(r) ], true ] : !a.has("default") ? [ [ m(r) ], false ] : a.size > 1 ? [ [ m(r), _(r) ], true ] : [ [ _(r) ], true ];
    }
    function m(e) {
     return N(undefined, e);
    }
    function _(t) {
     return N([ e.createExportSpecifier(undefined, "default") ], t);
    }
    function g(t, n, r) {
     var i = t.left, a = t.right, o = t.parent;
     var s = i.name.text;
     if ((e.isFunctionExpression(a) || e.isArrowFunction(a) || e.isClassExpression(a)) && (!a.name || a.name.text === s)) {
      r.replaceRange(n, {
       pos: i.getStart(n),
       end: a.getStart(n)
      }, e.createToken(84), {
       suffix: " "
      });
      if (!a.name) r.insertName(n, a, s);
      var c = e.findChildOfKind(o, 25, n);
      if (c) r.delete(n, c);
     } else {
      r.replaceNodeRangeWithNodes(n, i.expression, e.findChildOfKind(i, 23, n), [ e.createToken(84), e.createToken(76) ], {
       joiner: " ",
       suffix: " "
      });
     }
    }
    function h(t, n) {
     var r = [ e.createToken(84) ];
     switch (n.kind) {
     case 194:
      {
       var i = n.name;
       if (i && i.text !== t) {
        return a();
       }
      }

     case 195:
      return w(t, r, n);

     case 207:
      return C(t, r, n);

     default:
      return a();
     }
     function a() {
      return E(r, e.createIdentifier(t), n);
     }
    }
    function v(n, r, i, a, o, s, c, u) {
     switch (r.kind) {
     case 182:
      {
       var l = e.mapAllOrFail(r.elements, function(t) {
        return t.dotDotDotToken || t.initializer || t.propertyName && !e.isIdentifier(t.propertyName) || !e.isIdentifier(t.name) ? undefined : T(t.propertyName && t.propertyName.text, t.name.text);
       });
       if (l) {
        return [ e.makeImport(undefined, l, i, u) ];
       }
      }

     case 183:
      {
       var f = b(t.moduleSpecifierToValidIdentifier(i.text, c), s);
       return [ e.makeImport(e.createIdentifier(f), undefined, i, u), E(undefined, e.getSynthesizedDeepClone(r), e.createIdentifier(f)) ];
      }

     case 71:
      return y(n, r, i, a, o, s, u);

     default:
      return e.Debug.assertNever(r);
     }
    }
    function y(t, n, r, i, a, o, s) {
     var c = a.getSymbolAtLocation(n);
     var u = e.createMap();
     var l = false;
     for (var f = 0, d = o.original.get(n.text); f < d.length; f++) {
      var p = d[f];
      if (a.getSymbolAtLocation(p) !== c || p === n) {
       continue;
      }
      var m = p.parent;
      if (e.isPropertyAccessExpression(m)) {
       var _ = m.expression, g = m.name.text;
       e.Debug.assert(_ === p);
       var h = u.get(g);
       if (h === undefined) {
        h = b(g, o);
        u.set(g, h);
       }
       i.replaceNode(t, m, e.createIdentifier(h));
      } else {
       l = true;
      }
     }
     var v = u.size === 0 ? undefined : e.arrayFrom(e.mapIterator(u.entries(), function(t) {
      var n = t[0], r = t[1];
      return e.createImportSpecifier(n === r ? undefined : e.createIdentifier(n), e.createIdentifier(r));
     }));
     if (!v) {
      l = true;
     }
     return [ e.makeImport(l ? e.getSynthesizedDeepClone(n) : undefined, v, r, s) ];
    }
    function b(e, t) {
     while (t.original.has(e) || t.additional.has(e)) {
      e = "_" + e;
     }
     t.additional.set(e, true);
     return e;
    }
    function x(t) {
     var n = e.createMultiMap();
     k(t, function(e) {
      return n.add(e.text, e);
     });
     return n;
    }
    function k(t, n) {
     if (e.isIdentifier(t) && S(t)) n(t);
     t.forEachChild(function(e) {
      return k(e, n);
     });
    }
    function S(e) {
     var t = e.parent;
     switch (t.kind) {
     case 187:
      return t.name !== e;

     case 184:
      return t.propertyName !== e;

     case 251:
      return t.propertyName !== e;

     default:
      return true;
     }
    }
    function w(t, n, r) {
     return e.createFunctionDeclaration(e.getSynthesizedDeepClones(r.decorators), e.concatenate(n, e.getSynthesizedDeepClones(r.modifiers)), e.getSynthesizedDeepClone(r.asteriskToken), t, e.getSynthesizedDeepClones(r.typeParameters), e.getSynthesizedDeepClones(r.parameters), e.getSynthesizedDeepClone(r.type), e.convertToFunctionBody(e.getSynthesizedDeepClone(r.body)));
    }
    function C(t, n, r) {
     return e.createClassDeclaration(e.getSynthesizedDeepClones(r.decorators), e.concatenate(n, e.getSynthesizedDeepClones(r.modifiers)), t, e.getSynthesizedDeepClones(r.typeParameters), e.getSynthesizedDeepClones(r.heritageClauses), e.getSynthesizedDeepClones(r.members));
    }
    function D(t, n, r, i) {
     return n === "default" ? e.makeImport(e.createIdentifier(t), undefined, r, i) : e.makeImport(undefined, [ T(n, t) ], r, i);
    }
    function T(t, n) {
     return e.createImportSpecifier(t !== undefined && t !== n ? e.createIdentifier(t) : undefined, e.createIdentifier(n));
    }
    function E(t, n, r) {
     return e.createVariableStatement(t, e.createVariableDeclarationList([ e.createVariableDeclaration(n, undefined, r) ], 2));
    }
    function N(t, n) {
     return e.createExportDeclaration(undefined, undefined, t && e.createNamedExports(t), n === undefined ? undefined : e.createLiteral(n));
    }
   })(t = e.codefix || (e.codefix = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n = "correctQualifiedNameToIndexedAccessType";
    var r = [ e.Diagnostics.Cannot_access_0_1_because_0_is_a_type_but_not_a_namespace_Did_you_mean_to_retrieve_the_type_of_the_property_1_in_0_with_0_1.code ];
    t.registerCodeFix({
     errorCodes: r,
     getCodeActions: function(r) {
      var o = i(r.sourceFile, r.span.start);
      if (!o) return undefined;
      var s = e.textChanges.ChangeTracker.with(r, function(e) {
       return a(e, r.sourceFile, o);
      });
      var c = o.left.text + '["' + o.right.text + '"]';
      return [ t.createCodeFixAction(n, s, [ e.Diagnostics.Rewrite_as_the_indexed_access_type_0, c ], n, e.Diagnostics.Rewrite_all_as_indexed_access_types) ];
     },
     fixIds: [ n ],
     getAllCodeActions: function(e) {
      return t.codeFixAll(e, r, function(e, t) {
       var n = i(t.file, t.start);
       if (n) {
        a(e, t.file, n);
       }
      });
     }
    });
    function i(t, n) {
     var r = e.findAncestor(e.getTokenAtPosition(t, n), e.isQualifiedName);
     e.Debug.assert(!!r, "Expected position to be owned by a qualified name.");
     return e.isIdentifier(r.left) ? r : undefined;
    }
    function a(t, n, r) {
     var i = r.right.text;
     var a = e.createIndexedAccessTypeNode(e.createTypeReferenceNode(r.left, undefined), e.createLiteralTypeNode(e.createLiteral(i)));
     t.replaceNode(n, r, a);
    }
   })(t = e.codefix || (e.codefix = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n = [ e.Diagnostics.Class_0_incorrectly_implements_interface_1.code, e.Diagnostics.Class_0_incorrectly_implements_class_1_Did_you_mean_to_extend_1_and_inherit_its_members_as_a_subclass.code ];
    var r = "fixClassIncorrectlyImplementsInterface";
    t.registerCodeFix({
     errorCodes: n,
     getCodeActions: function(n) {
      var a = n.program, s = n.sourceFile, c = n.span;
      var u = i(s, c.start);
      var l = a.getTypeChecker();
      return e.mapDefined(e.getClassImplementsHeritageClauseElements(u), function(i) {
       var a = e.textChanges.ChangeTracker.with(n, function(e) {
        return o(l, i, s, u, e, n.preferences);
       });
       return a.length === 0 ? undefined : t.createCodeFixAction(r, a, [ e.Diagnostics.Implement_interface_0, i.getText(s) ], r, e.Diagnostics.Implement_all_unimplemented_interfaces);
      });
     },
     fixIds: [ r ],
     getAllCodeActions: function(r) {
      var a = e.createMap();
      return t.codeFixAll(r, n, function(t, n) {
       var s = i(n.file, n.start);
       if (e.addToSeen(a, e.getNodeId(s))) {
        for (var c = 0, u = e.getClassImplementsHeritageClauseElements(s); c < u.length; c++) {
         var l = u[c];
         o(r.program.getTypeChecker(), l, n.file, s, t, r.preferences);
        }
       }
      });
     }
    });
    function i(t, n) {
     return e.Debug.assertDefined(e.getContainingClass(e.getTokenAtPosition(t, n)));
    }
    function a(t) {
     return !(e.getModifierFlags(t.valueDeclaration) & 8);
    }
    function o(n, r, i, o, c, u) {
     var l = s(o, n);
     var f = n.getTypeAtLocation(r);
     var d = n.getPropertiesOfType(f);
     var p = d.filter(e.and(a, function(e) {
      return !l.has(e.escapedName);
     }));
     var m = n.getTypeAtLocation(o);
     if (!m.getNumberIndexType()) {
      _(f, 1);
     }
     if (!m.getStringIndexType()) {
      _(f, 0);
     }
     t.createMissingMemberNodes(o, p, n, u, function(e) {
      return c.insertNodeAtClassStart(i, o, e);
     });
     function _(e, t) {
      var r = n.getIndexInfoOfType(e, t);
      if (r) {
       c.insertNodeAtClassStart(i, o, n.indexInfoToIndexSignatureDeclaration(r, t, o));
      }
     }
    }
    function s(t, n) {
     var r = e.getEffectiveBaseTypeNode(t);
     if (!r) return e.createSymbolTable();
     var i = n.getTypeAtLocation(r);
     var o = n.getPropertiesOfType(i);
     return e.createSymbolTable(o.filter(a));
    }
   })(t = e.codefix || (e.codefix = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    t.importFixId = "fixMissingImport";
    var n = [ e.Diagnostics.Cannot_find_name_0.code, e.Diagnostics.Cannot_find_name_0_Did_you_mean_1.code, e.Diagnostics.Cannot_find_name_0_Did_you_mean_the_instance_member_this_0.code, e.Diagnostics.Cannot_find_name_0_Did_you_mean_the_static_member_1_0.code, e.Diagnostics.Cannot_find_namespace_0.code, e.Diagnostics._0_refers_to_a_UMD_global_but_the_current_file_is_a_module_Consider_adding_an_import_instead.code, e.Diagnostics._0_only_refers_to_a_type_but_is_being_used_as_a_value_here.code ];
    t.registerCodeFix({
     errorCodes: n,
     getCodeActions: function(t) {
      var n = t.errorCode, r = t.preferences, i = t.sourceFile, a = t.span;
      var o = g(t, n, a.start);
      if (!o) return undefined;
      var s = o.fixes, c = o.symbolName;
      var u = e.getQuotePreference(i, r);
      return s.map(function(e) {
       return w(t, i, c, e, u);
      });
     },
     fixIds: [ t.importFixId ],
     getAllCodeActions: function(r) {
      var i = r.sourceFile, a = r.preferences;
      var o = [];
      var s = e.createMap();
      var c = e.createMap();
      t.eachDiagnostic(r, n, function(t) {
       var n = g(r, t.code, t.start);
       if (!n || !n.fixes.length) return;
       var i = n.fixes, a = n.symbolName;
       var u = e.first(i);
       switch (u.kind) {
       case 0:
        o.push(u);
        break;

       case 1:
        {
         var l = u.importClause, f = u.importKind;
         var d = String(e.getNodeId(l));
         var p = s.get(d);
         if (!p) {
          s.set(d, p = {
           importClause: l,
           defaultImport: undefined,
           namedImports: []
          });
         }
         if (f === 0) {
          e.pushIfUnique(p.namedImports, a);
         } else {
          e.Debug.assert(p.defaultImport === undefined || p.defaultImport === a);
          p.defaultImport = a;
         }
         break;
        }

       case 2:
        {
         var m = u.moduleSpecifier, f = u.importKind;
         var p = c.get(m);
         if (!p) {
          c.set(m, p = {
           defaultImport: undefined,
           namedImports: [],
           namespaceLikeImport: undefined
          });
         }
         switch (f) {
         case 1:
          e.Debug.assert(p.defaultImport === undefined || p.defaultImport === a);
          p.defaultImport = a;
          break;

         case 0:
          e.pushIfUnique(p.namedImports, a);
          break;

         case 3:
         case 2:
          e.Debug.assert(p.namespaceLikeImport === undefined || p.namespaceLikeImport.name === a);
          p.namespaceLikeImport = {
           importKind: f,
           name: a
          };
          break;
         }
         break;
        }

       default:
        e.Debug.assertNever(u);
       }
      });
      return t.createCombinedCodeActions(e.textChanges.ChangeTracker.with(r, function(t) {
       for (var n = 0, r = o; n < r.length; n++) {
        var u = r[n];
        T(t, i, u);
       }
       s.forEach(function(e) {
        var n = e.importClause, r = e.defaultImport, a = e.namedImports;
        D(t, i, n, r, a);
       });
       var l = e.getQuotePreference(i, a);
       c.forEach(function(e, n) {
        E(t, i, n, l, e);
       });
      }));
     }
    });
    var i;
    (function(e) {
     e[e["UseNamespace"] = 0] = "UseNamespace";
     e[e["AddToExisting"] = 1] = "AddToExisting";
     e[e["AddNew"] = 2] = "AddNew";
    })(i || (i = {}));
    var a;
    (function(e) {
     e[e["Named"] = 0] = "Named";
     e[e["Default"] = 1] = "Default";
     e[e["Namespace"] = 2] = "Namespace";
     e[e["Equals"] = 3] = "Equals";
    })(a || (a = {}));
    function o(t, n, r, i, a, o, u, l, f, d, m) {
     var _ = s(t, n, i, r, u, l);
     e.Debug.assert(_.some(function(e) {
      return e.moduleSymbol === n;
     }));
     var g = e.first(p(o, r, _, a, m)).moduleSpecifier;
     var h = e.first(c(_, i, d, o, r, a, m));
     return {
      moduleSpecifier: g,
      codeAction: w({
       host: a,
       formatContext: f
      }, r, i, h, e.getQuotePreference(r, m))
     };
    }
    t.getImportCompletionAction = o;
    function s(t, n, r, i, a, o) {
     var s = [];
     F(a, o, function(o, c) {
      if (c && o !== n && e.startsWith(i.fileName, e.getDirectoryPath(c.fileName))) {
       return;
      }
      for (var u = 0, l = a.getExportsOfModule(o); u < l.length; u++) {
       var f = l[u];
       if ((f.escapedName === "default" || f.name === r) && e.skipAlias(f, a) === t) {
        var d = a.tryGetMemberInModuleExports("default", o) === f;
        s.push({
         moduleSymbol: o,
         importKind: d ? 1 : 0
        });
       }
      }
     });
     return s;
    }
    function c(t, n, r, i, a, o, s) {
     var c = i.getTypeChecker();
     var f = e.flatMap(t, function(e) {
      return d(e, c, a);
     });
     var p = u(f, n, r, c);
     var _ = l(f);
     var g = _ ? [ _ ] : m(t, f, i, a, o, s);
     return (p ? [ p ] : e.emptyArray).concat(g);
    }
    function u(t, n, r, i) {
     return !r || !e.isIdentifier(r) ? undefined : e.firstDefined(t, function(t) {
      var a = t.declaration;
      var o = f(a);
      if (o) {
       var s = i.getAliasedSymbol(i.getSymbolAtLocation(o));
       if (s && s.exports.has(e.escapeLeadingUnderscores(n))) {
        return {
         kind: 0,
         namespacePrefix: o.text,
         symbolToken: r
        };
       }
      }
     });
    }
    function l(t) {
     return e.firstDefined(t, function(e) {
      var t = e.declaration, n = e.importKind;
      if (t.kind !== 247) return undefined;
      var r = t.importClause;
      if (!r) return undefined;
      var i = r.name, a = r.namedBindings;
      return n === 1 && !i || n === 0 && (!a || a.kind === 250) ? {
       kind: 1,
       importClause: r,
       importKind: n
      } : undefined;
     });
    }
    function f(t) {
     if (t.kind === 247) {
      var n = t.importClause && e.isImportClause(t.importClause) && t.importClause.namedBindings;
      return n && n.kind === 249 ? n.name : undefined;
     } else {
      return t.name;
     }
    }
    function d(t, n, r) {
     var i = t.moduleSymbol, a = t.importKind;
     var o = r.imports;
     return e.mapDefined(o, function(t) {
      var r = e.importFromModuleSpecifier(t);
      return (r.kind === 247 || r.kind === 246) && n.getSymbolAtLocation(t) === i ? {
       declaration: r,
       importKind: a
      } : undefined;
     });
    }
    function p(t, n, r, i, a) {
     var o = e.flatMap(r, function(r) {
      var o = r.moduleSymbol, s = r.importKind;
      var c = e.moduleSpecifiers.getModuleSpecifiers(o, t.getCompilerOptions(), n, i, t.getSourceFiles(), a);
      return c.map(function(e) {
       return e.map(function(e) {
        return {
         kind: 2,
         moduleSpecifier: e,
         importKind: s
        };
       });
      });
     });
     return e.flatten(o.sort(function(t, n) {
      return e.first(t).moduleSpecifier.length - e.first(n).moduleSpecifier.length;
     }));
    }
    function m(t, n, r, i, a, o) {
     var s = e.firstDefined(n, _);
     return s ? [ s ] : p(r, i, t, a, o);
    }
    function _(t) {
     var n = t.declaration, r = t.importKind;
     var i = n.kind === 247 ? n.moduleSpecifier : n.moduleReference.kind === 257 ? n.moduleReference.expression : undefined;
     return i && e.isStringLiteral(i) ? {
      kind: 2,
      moduleSpecifier: i.text,
      importKind: r
     } : undefined;
    }
    function g(t, n, i) {
     var a = e.getTokenAtPosition(t.sourceFile, i);
     var o = n === e.Diagnostics._0_refers_to_a_UMD_global_but_the_current_file_is_a_module_Consider_adding_an_import_instead.code ? h(t, a) : b(t, a);
     return o && r({}, o, {
      fixes: e.sort(o.fixes, function(e, t) {
       return e.kind - t.kind;
      })
     });
    }
    function h(e, t) {
     var n = e.sourceFile, r = e.program, i = e.host, a = e.preferences;
     var o = r.getTypeChecker();
     var s = v(t, o);
     if (!s) return undefined;
     var u = o.getAliasedSymbol(s);
     var l = s.name;
     var f = [ {
      moduleSymbol: u,
      importKind: y(r.getCompilerOptions())
     } ];
     var d = c(f, l, t, r, n, i, a);
     return {
      fixes: d,
      symbolName: l
     };
    }
    function v(t, n) {
     var r = e.isIdentifier(t) ? n.getSymbolAtLocation(t) : undefined;
     if (e.isUMDExportSymbol(r)) return r;
     var i = t.parent;
     return e.isJsxOpeningLikeElement(i) && i.tagName === t || e.isJsxOpeningFragment(i) ? e.tryCast(n.resolveName(n.getJsxNamespace(i), e.isJsxOpeningLikeElement(i) ? t : i, 67216319, false), e.isUMDExportSymbol) : undefined;
    }
    function y(t) {
     if (e.getAllowSyntheticDefaultImports(t)) {
      return 1;
     }
     var n = e.getEmitModuleKind(t);
     switch (n) {
     case e.ModuleKind.AMD:
     case e.ModuleKind.CommonJS:
     case e.ModuleKind.UMD:
      return 3;

     case e.ModuleKind.System:
     case e.ModuleKind.ES2015:
     case e.ModuleKind.ESNext:
     case e.ModuleKind.None:
      return 2;

     default:
      return e.Debug.assertNever(n);
     }
    }
    function b(t, n) {
     var r = t.sourceFile, i = t.program, a = t.cancellationToken, o = t.host, s = t.preferences;
     var u = i.getTypeChecker();
     var l = e.isJsxOpeningLikeElement(n.parent) && n.parent.tagName === n && (!e.isIdentifier(n) || e.isIntrinsicJsxName(n.text) || u.resolveName(n.text, n, 67108863, false)) ? u.getJsxNamespace() : e.isIdentifier(n) ? n.text : undefined;
     if (!l) return undefined;
     e.Debug.assert(l !== "default");
     var f = e.arrayFrom(e.flatMapIterator(x(l, e.getMeaningFromLocation(n), a, r, u, i).entries(), function(e) {
      var t = e[0], a = e[1];
      return c(a, l, n, i, r, o, s);
     }));
     return {
      fixes: f,
      symbolName: l
     };
    }
    function x(t, n, r, i, a, o) {
     var s = e.createMultiMap();
     function c(t, n, r) {
      s.add(e.getUniqueSymbolId(n, a).toString(), {
       moduleSymbol: t,
       importKind: r
      });
     }
     A(a, i, o.getSourceFiles(), function(e) {
      r.throwIfCancellationRequested();
      var i = a.tryGetMemberInModuleExports("default", e);
      if (i) {
       var s = k(i, e, o);
       if (s && s.name === t && N(s.symbolForMeaning, n)) {
        c(e, i, 1);
       }
      }
      var u = a.tryGetMemberInModuleExportsAndProperties(t, e);
      if (u && N(u, n)) {
       c(e, u, 0);
      }
     });
     return s;
    }
    function k(t, n, r) {
     var i = r.getTypeChecker();
     var a = e.getLocalSymbolForExportDefault(t);
     if (a) return {
      symbolForMeaning: a,
      name: a.name
     };
     var o = S(t);
     if (o !== undefined) return {
      symbolForMeaning: t,
      name: o
     };
     if (t.flags & 2097152) {
      var s = i.getAliasedSymbol(t);
      return k(s, e.Debug.assertDefined(s.parent), r);
     } else {
      var c = I(n, r.getCompilerOptions().target);
      return c === undefined ? undefined : {
       symbolForMeaning: t,
       name: c
      };
     }
    }
    function S(t) {
     return t.declarations && e.firstDefined(t.declarations, function(t) {
      if (e.isExportAssignment(t)) {
       if (e.isIdentifier(t.expression)) {
        return t.expression.text;
       }
      } else if (e.isExportSpecifier(t)) {
       e.Debug.assert(t.name.text === "default");
       return t.propertyName && t.propertyName.text;
      }
     });
    }
    function w(n, r, i, a, o) {
     var s;
     var c = e.textChanges.ChangeTracker.with(n, function(e) {
      s = C(e, r, i, a, o);
     });
     return t.createCodeFixAction("import", c, s, t.importFixId, e.Diagnostics.Add_all_missing_imports);
    }
    function C(t, n, r, i, a) {
     switch (i.kind) {
     case 0:
      T(t, n, i);
      return [ e.Diagnostics.Change_0_to_1, r, i.namespacePrefix + "." + r ];

     case 1:
      {
       var o = i.importClause, s = i.importKind;
       D(t, n, o, s === 1 ? r : undefined, s === 0 ? [ r ] : e.emptyArray);
       var c = e.stripQuotes(o.parent.moduleSpecifier.getText());
       return [ e.Diagnostics.Add_0_to_existing_import_declaration_from_1, r, c ];
      }

     case 2:
      {
       var s = i.importKind, u = i.moduleSpecifier;
       E(t, n, u, a, s === 1 ? {
        defaultImport: r,
        namedImports: e.emptyArray,
        namespaceLikeImport: undefined
       } : s === 0 ? {
        defaultImport: undefined,
        namedImports: [ r ],
        namespaceLikeImport: undefined
       } : {
        defaultImport: undefined,
        namedImports: e.emptyArray,
        namespaceLikeImport: {
         importKind: s,
         name: r
        }
       });
       return [ e.Diagnostics.Import_0_from_module_1, r, u ];
      }

     default:
      return e.Debug.assertNever(i);
     }
    }
    function D(t, n, r, i, a) {
     if (i) {
      e.Debug.assert(!r.name);
      t.insertNodeAt(n, r.getStart(n), e.createIdentifier(i), {
       suffix: ", "
      });
     }
     if (a.length) {
      var o = a.map(function(t) {
       return e.createImportSpecifier(undefined, e.createIdentifier(t));
      });
      if (r.namedBindings && e.cast(r.namedBindings, e.isNamedImports).elements.length) {
       for (var s = 0, c = o; s < c.length; s++) {
        var u = c[s];
        t.insertNodeInListAfter(n, e.last(e.cast(r.namedBindings, e.isNamedImports).elements), u);
       }
      } else {
       if (o.length) {
        var l = e.createNamedImports(o);
        if (r.namedBindings) {
         t.replaceNode(n, r.namedBindings, l);
        } else {
         t.insertNodeAfter(n, e.Debug.assertDefined(r.name), l);
        }
       }
      }
     }
    }
    function T(t, n, r) {
     var i = r.namespacePrefix, a = r.symbolToken;
     t.replaceNode(n, a, e.createPropertyAccess(e.createIdentifier(i), a));
    }
    function E(t, n, r, i, a) {
     var o = a.defaultImport, s = a.namedImports, c = a.namespaceLikeImport;
     var u = e.makeStringLiteral(r, i);
     if (o !== undefined || s.length) {
      e.insertImport(t, n, e.makeImport(o === undefined ? undefined : e.createIdentifier(o), s.map(function(t) {
       return e.createImportSpecifier(undefined, e.createIdentifier(t));
      }), r, i));
     }
     if (c) {
      e.insertImport(t, n, c.importKind === 3 ? e.createImportEqualsDeclaration(undefined, undefined, e.createIdentifier(c.name), e.createExternalModuleReference(u)) : e.createImportDeclaration(undefined, undefined, e.createImportClause(undefined, e.createNamespaceImport(e.createIdentifier(c.name))), u));
     }
    }
    function N(t, n) {
     var r = t.declarations;
     return e.some(r, function(t) {
      return !!(e.getMeaningFromDeclaration(t) & n);
     });
    }
    function A(e, t, n, r) {
     F(e, n, function(e, n) {
      if (n === undefined || n !== t && P(t.fileName, n.fileName)) {
       r(e);
      }
     });
    }
    t.forEachExternalModuleToImportFrom = A;
    function F(t, n, r) {
     for (var i = 0, a = t.getAmbientModules(); i < a.length; i++) {
      var o = a[i];
      r(o, undefined);
     }
     for (var s = 0, c = n; s < c.length; s++) {
      var u = c[s];
      if (e.isExternalOrCommonJsModule(u)) {
       r(t.getMergedSymbol(u.symbol), u);
      }
     }
    }
    function P(t, n) {
     var r = e.forEachAncestorDirectory(n, function(t) {
      return e.getBaseFileName(t) === "node_modules" ? t : undefined;
     });
     return r === undefined || e.startsWith(t, e.getDirectoryPath(r));
    }
    function I(t, n) {
     return O(e.removeFileExtension(e.stripQuotes(t.name)), n);
    }
    t.moduleSymbolToValidIdentifier = I;
    function O(t, n) {
     var r = e.getBaseFileName(e.removeSuffix(t, "/index"));
     var i = "";
     var a = true;
     var o = r.charCodeAt(0);
     if (e.isIdentifierStart(o, n)) {
      i += String.fromCharCode(o);
     } else {
      a = false;
     }
     for (var s = 1; s < r.length; s++) {
      var c = r.charCodeAt(s);
      var u = e.isIdentifierPart(c, n);
      if (u) {
       var l = String.fromCharCode(c);
       if (!a) {
        l = l.toUpperCase();
       }
       i += l;
      }
      a = u;
     }
     return !e.isStringANonContextualKeyword(i) ? i || "_" : "_" + i;
    }
    t.moduleSpecifierToValidIdentifier = O;
   })(t = e.codefix || (e.codefix = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n = "fixSpelling";
    var r = [ e.Diagnostics.Property_0_does_not_exist_on_type_1_Did_you_mean_2.code, e.Diagnostics.Cannot_find_name_0_Did_you_mean_1.code, e.Diagnostics.Cannot_find_name_0_Did_you_mean_the_instance_member_this_0.code, e.Diagnostics.Cannot_find_name_0_Did_you_mean_the_static_member_1_0.code, e.Diagnostics.Module_0_has_no_exported_member_1_Did_you_mean_2.code ];
    t.registerCodeFix({
     errorCodes: r,
     getCodeActions: function(r) {
      var o = r.sourceFile;
      var s = i(o, r.span.start, r);
      if (!s) return undefined;
      var c = s.node, u = s.suggestion;
      var l = r.host.getCompilationSettings().target;
      var f = e.textChanges.ChangeTracker.with(r, function(e) {
       return a(e, o, c, u, l);
      });
      return [ t.createCodeFixAction("spelling", f, [ e.Diagnostics.Change_spelling_to_0, u ], n, e.Diagnostics.Fix_all_detected_spelling_errors) ];
     },
     fixIds: [ n ],
     getAllCodeActions: function(e) {
      return t.codeFixAll(e, r, function(t, n) {
       var r = i(n.file, n.start, e);
       var o = e.host.getCompilationSettings().target;
       if (r) a(t, e.sourceFile, r.node, r.suggestion, o);
      });
     }
    });
    function i(t, n, r) {
     var i = e.getTokenAtPosition(t, n);
     var a = r.program.getTypeChecker();
     var c;
     if (e.isPropertyAccessExpression(i.parent) && i.parent.name === i) {
      e.Debug.assert(i.kind === 71);
      var u = a.getTypeAtLocation(i.parent.expression);
      c = a.getSuggestionForNonexistentProperty(i, u);
     } else if (e.isImportSpecifier(i.parent) && i.parent.name === i) {
      e.Debug.assert(i.kind === 71);
      var l = e.findAncestor(i, e.isImportDeclaration);
      var f = s(t, r, l);
      if (f && f.symbol) {
       c = a.getSuggestionForNonexistentExport(i, f.symbol);
      }
     } else {
      var d = e.getMeaningFromLocation(i);
      var p = e.getTextOfNode(i);
      e.Debug.assert(p !== undefined, "name should be defined");
      c = a.getSuggestionForNonexistentSymbol(i, p, o(d));
     }
     return c === undefined ? undefined : {
      node: i,
      suggestion: c
     };
    }
    function a(t, n, r, i, a) {
     if (!e.isIdentifierText(i, a) && e.isPropertyAccessExpression(r.parent)) {
      t.replaceNode(n, r.parent, e.createElementAccess(r.parent.expression, e.createLiteral(i)));
     } else {
      t.replaceNode(n, r, e.createIdentifier(i));
     }
    }
    function o(e) {
     var t = 0;
     if (e & 4) {
      t |= 1920;
     }
     if (e & 2) {
      t |= 67901928;
     }
     if (e & 1) {
      t |= 67216319;
     }
     return t;
    }
    function s(t, n, r) {
     if (!r || !e.isStringLiteralLike(r.moduleSpecifier)) return undefined;
     var i = e.getResolvedModule(t, r.moduleSpecifier.text);
     if (!i) return undefined;
     return n.program.getSourceFile(i.resolvedFileName);
    }
   })(t = e.codefix || (e.codefix = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n = "addMissingMember";
    var r = [ e.Diagnostics.Property_0_does_not_exist_on_type_1.code, e.Diagnostics.Property_0_does_not_exist_on_type_1_Did_you_mean_2.code ];
    var i = "addMissingMember";
    t.registerCodeFix({
     errorCodes: r,
     getCodeActions: function(r) {
      var a = s(r.sourceFile, r.span.start, r.program.getTypeChecker());
      if (!a) return undefined;
      if (a.kind === o.enum) {
       var u = a.token, l = a.parentDeclaration;
       var d = e.textChanges.ChangeTracker.with(r, function(e) {
        return y(e, r.program.getTypeChecker(), u, l);
       });
       return [ t.createCodeFixAction(n, d, [ e.Diagnostics.Add_missing_enum_member_0, u.text ], i, e.Diagnostics.Add_all_missing_members) ];
      }
      var p = a.parentDeclaration, m = a.classDeclarationSourceFile, _ = a.inJs, g = a.makeStatic, v = a.token, b = a.call;
      var x = b && h(r, m, p, v, b, g, _, r.preferences);
      var k = _ ? e.singleElementArray(c(r, m, p, v.text, g)) : f(r, m, p, v, g);
      return e.concatenate(e.singleElementArray(x), k);
     },
     fixIds: [ i ],
     getAllCodeActions: function(n) {
      var i = n.program, c = n.preferences;
      var l = i.getTypeChecker();
      var f = e.createMap();
      var p = new e.NodeMap();
      return t.createCombinedCodeActions(e.textChanges.ChangeTracker.with(n, function(_) {
       t.eachDiagnostic(n, r, function(t) {
        var n = s(t.file, t.start, l);
        if (!n || !e.addToSeen(f, e.getNodeId(n.parentDeclaration) + "#" + n.token.text)) {
         return;
        }
        if (n.kind === o.enum) {
         var r = n.token, i = n.parentDeclaration;
         y(_, l, r, i);
        } else {
         var i = n.parentDeclaration, a = n.token;
         var c = p.getOrUpdate(i, function() {
          return [];
         });
         if (!c.some(function(e) {
          return e.token.text === a.text;
         })) c.push(n);
        }
       });
       p.forEach(function(e, t) {
        var r = a(t, l);
        var o = function(e) {
         if (r.some(function(t) {
          var n = p.get(t);
          return !!n && n.some(function(t) {
           var n = t.token;
           return n.text === e.token.text;
          });
         })) return "continue";
         var t = e.parentDeclaration, a = e.classDeclarationSourceFile, o = e.inJs, s = e.makeStatic, l = e.token, f = e.call;
         if (f) {
          v(n, _, a, t, l, f, s, o, c);
         } else {
          if (o) {
           u(_, a, t, l.text, s);
          } else {
           var g = d(i.getTypeChecker(), t, l);
           m(_, a, t, l.text, g, s);
          }
         }
        };
        for (var s = 0, f = e; s < f.length; s++) {
         var g = f[s];
         o(g);
        }
       });
      }));
     }
    });
    function a(t, n) {
     var r = [];
     while (t) {
      var i = e.getClassExtendsHeritageElement(t);
      var a = i && n.getSymbolAtLocation(i.expression);
      var o = a && e.find(a.declarations, e.isClassLike);
      if (o) {
       r.push(o);
      }
      t = o;
     }
     return r;
    }
    var o;
    (function(e) {
     e[e["enum"] = 0] = "enum";
     e[e["class"] = 1] = "class";
    })(o || (o = {}));
    function s(t, n, r) {
     var i = e.getTokenAtPosition(t, n);
     if (!e.isIdentifier(i)) {
      return undefined;
     }
     var a = i.parent;
     if (!e.isPropertyAccessExpression(a)) return undefined;
     var s = e.skipConstraint(r.getTypeAtLocation(a.expression));
     var c = s.symbol;
     if (!c || !c.declarations) return undefined;
     var u = e.find(c.declarations, e.isClassLike);
     if (u) {
      var l = s.target !== r.getDeclaredTypeOfSymbol(c);
      var f = u.getSourceFile();
      var d = e.isSourceFileJavaScript(f);
      var p = e.tryCast(a.parent, e.isCallExpression);
      return {
       kind: o.class,
       token: i,
       parentDeclaration: u,
       makeStatic: l,
       classDeclarationSourceFile: f,
       inJs: d,
       call: p
      };
     }
     var m = e.find(c.declarations, e.isEnumDeclaration);
     if (m) {
      return {
       kind: o.enum,
       token: i,
       parentDeclaration: m
      };
     }
     return undefined;
    }
    function c(r, a, o, s, c) {
     var l = e.textChanges.ChangeTracker.with(r, function(e) {
      return u(e, a, o, s, c);
     });
     return l.length === 0 ? undefined : t.createCodeFixAction(n, l, [ c ? e.Diagnostics.Initialize_static_property_0 : e.Diagnostics.Initialize_property_0_in_the_constructor, s ], i, e.Diagnostics.Add_all_missing_members);
    }
    function u(t, n, r, i, a) {
     if (a) {
      if (r.kind === 207) {
       return;
      }
      var o = r.name.getText();
      var s = l(e.createIdentifier(o), i);
      t.insertNodeAfter(n, r, s);
     } else {
      var c = e.getFirstConstructorWithBody(r);
      if (!c) {
       return;
      }
      var u = l(e.createThis(), i);
      t.insertNodeAtConstructorEnd(n, c, u);
     }
    }
    function l(t, n) {
     return e.createStatement(e.createAssignment(e.createPropertyAccess(t, n), e.createIdentifier("undefined")));
    }
    function f(e, t, n, r, i) {
     var a = d(e.program.getTypeChecker(), n, r);
     var o = p(e, t, n, i, r.text, a);
     return i ? [ o ] : [ o, g(e, t, n, r.text, a) ];
    }
    function d(t, n, r) {
     var i;
     if (r.parent.parent.kind === 202) {
      var a = r.parent.parent;
      var o = r.parent === a.left ? a.right : a.left;
      var s = t.getWidenedType(t.getBaseTypeOfLiteralType(t.getTypeAtLocation(o)));
      i = t.typeToTypeNode(s, n);
     }
     return i || e.createKeywordTypeNode(119);
    }
    function p(r, a, o, s, c, u) {
     var l = e.textChanges.ChangeTracker.with(r, function(e) {
      return m(e, a, o, c, u, s);
     });
     return t.createCodeFixAction(n, l, [ s ? e.Diagnostics.Declare_static_property_0 : e.Diagnostics.Declare_property_0, c ], i, e.Diagnostics.Add_all_missing_members);
    }
    function m(t, n, r, i, a, o) {
     var s = e.createProperty(undefined, o ? [ e.createToken(115) ] : undefined, i, undefined, a, undefined);
     var c = _(r);
     if (c) {
      t.insertNodeAfter(n, c, s);
     } else {
      t.insertNodeAtClassStart(n, r, s);
     }
    }
    function _(t) {
     var n;
     for (var r = 0, i = t.members; r < i.length; r++) {
      var a = i[r];
      if (!e.isPropertyDeclaration(a)) break;
      n = a;
     }
     return n;
    }
    function g(r, i, a, o, s) {
     var c = e.createKeywordTypeNode(137);
     var u = e.createParameter(undefined, undefined, undefined, "x", undefined, c, undefined);
     var l = e.createIndexSignature(undefined, undefined, [ u ], s);
     var f = e.textChanges.ChangeTracker.with(r, function(e) {
      return e.insertNodeAtClassStart(i, a, l);
     });
     return t.createCodeFixActionNoFixId(n, f, [ e.Diagnostics.Add_index_signature_for_property_0, o ]);
    }
    function h(r, a, o, s, c, u, l, f) {
     var d = e.textChanges.ChangeTracker.with(r, function(e) {
      return v(r, e, a, o, s, c, u, l, f);
     });
     return t.createCodeFixAction(n, d, [ u ? e.Diagnostics.Declare_static_method_0 : e.Diagnostics.Declare_method_0, s.text ], i, e.Diagnostics.Add_all_missing_members);
    }
    function v(n, r, i, a, o, s, c, u, l) {
     var f = t.createMethodFromCallExpression(n, s, o.text, u, c, l);
     var d = e.getAncestor(s, 154);
     if (d && d.parent === a) {
      r.insertNodeAfter(i, d, f);
     } else {
      r.insertNodeAtClassStart(i, a, f);
     }
    }
    function y(t, n, r, i) {
     var a = e.some(i.members, function(e) {
      var t = n.getTypeAtLocation(e);
      return !!(t && t.flags & 68);
     });
     var o = e.createEnumMember(r, a ? e.createStringLiteral(r.text) : undefined);
     t.replaceNode(i.getSourceFile(), i, e.updateEnumDeclaration(i, i.decorators, i.modifiers, i.name, e.concatenate(i.members, e.singleElementArray(o))));
    }
   })(t = e.codefix || (e.codefix = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n = "fixCannotFindModule";
    var r = e.Diagnostics.Cannot_find_module_0.code;
    var i = [ r, e.Diagnostics.Could_not_find_a_declaration_file_for_module_0_1_implicitly_has_an_any_type.code ];
    t.registerCodeFix({
     errorCodes: i,
     getCodeActions: function(r) {
      var i = r.host, s = r.sourceFile, c = r.span.start;
      var u = o(i, s, c, r.errorCode);
      return u === undefined ? [] : [ t.createCodeFixAction(n, [], [ e.Diagnostics.Install_0, u ], n, e.Diagnostics.Install_all_missing_types_packages, a(s.fileName, u)) ];
     },
     fixIds: [ n ],
     getAllCodeActions: function(e) {
      return t.codeFixAll(e, i, function(t, n, r) {
       var i = o(e.host, n.file, n.start, n.code);
       if (i) {
        r.push(a(n.file.fileName, i));
       }
      });
     }
    });
    function a(e, t) {
     return {
      type: "install package",
      file: e,
      packageName: t
     };
    }
    function o(t, n, i, a) {
     var o = e.cast(e.getTokenAtPosition(n, i), e.isStringLiteral).text;
     var s = e.getPackageName(o).packageName;
     return a === r ? e.JsTyping.nodeCoreModules.has(s) ? "@types/node" : undefined : t.isKnownTypesPackageName(s) ? e.getTypesPackageName(s) : undefined;
    }
   })(t = e.codefix || (e.codefix = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n = [ e.Diagnostics.Non_abstract_class_0_does_not_implement_inherited_abstract_member_1_from_class_2.code, e.Diagnostics.Non_abstract_class_expression_does_not_implement_inherited_abstract_member_0_from_class_1.code ];
    var r = "fixClassDoesntImplementInheritedAbstractMember";
    t.registerCodeFix({
     errorCodes: n,
     getCodeActions: function(n) {
      var o = n.program, s = n.sourceFile, c = n.span;
      var u = e.textChanges.ChangeTracker.with(n, function(e) {
       return a(i(s, c.start), s, o.getTypeChecker(), e, n.preferences);
      });
      return u.length === 0 ? undefined : [ t.createCodeFixAction(r, u, e.Diagnostics.Implement_inherited_abstract_class, r, e.Diagnostics.Implement_all_inherited_abstract_classes) ];
     },
     fixIds: [ r ],
     getAllCodeActions: function(r) {
      var o = e.createMap();
      return t.codeFixAll(r, n, function(t, n) {
       var s = i(n.file, n.start);
       if (e.addToSeen(o, e.getNodeId(s))) {
        a(s, r.sourceFile, r.program.getTypeChecker(), t, r.preferences);
       }
      });
     }
    });
    function i(t, n) {
     var r = e.getTokenAtPosition(t, n);
     return e.cast(r.parent, e.isClassLike);
    }
    function a(n, r, i, a, s) {
     var c = e.getEffectiveBaseTypeNode(n);
     var u = i.getTypeAtLocation(c);
     var l = i.getPropertiesOfType(u).filter(o);
     t.createMissingMemberNodes(n, l, i, s, function(e) {
      return a.insertNodeAtClassStart(r, n, e);
     });
    }
    function o(t) {
     var n = e.getModifierFlags(e.first(t.getDeclarations()));
     return !(n & 8) && !!(n & 128);
    }
   })(t = e.codefix || (e.codefix = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n = "classSuperMustPrecedeThisAccess";
    var r = [ e.Diagnostics.super_must_be_called_before_accessing_this_in_the_constructor_of_a_derived_class.code ];
    t.registerCodeFix({
     errorCodes: r,
     getCodeActions: function(r) {
      var o = r.sourceFile, s = r.span;
      var c = a(o, s.start);
      if (!c) return undefined;
      var u = c.constructor, l = c.superCall;
      var f = e.textChanges.ChangeTracker.with(r, function(e) {
       return i(e, o, u, l);
      });
      return [ t.createCodeFixAction(n, f, e.Diagnostics.Make_super_call_the_first_statement_in_the_constructor, n, e.Diagnostics.Make_all_super_calls_the_first_statement_in_their_constructor) ];
     },
     fixIds: [ n ],
     getAllCodeActions: function(n) {
      var o = n.sourceFile;
      var s = e.createMap();
      return t.codeFixAll(n, r, function(t, n) {
       var r = a(n.file, n.start);
       if (!r) return;
       var c = r.constructor, u = r.superCall;
       if (e.addToSeen(s, e.getNodeId(c.parent))) {
        i(t, o, c, u);
       }
      });
     }
    });
    function i(e, t, n, r) {
     e.insertNodeAtConstructorStart(t, n, r);
     e.delete(t, r);
    }
    function a(t, n) {
     var r = e.getTokenAtPosition(t, n);
     if (r.kind !== 99) return undefined;
     var i = e.getContainingFunction(r);
     var a = o(i.body);
     return a && !a.expression.arguments.some(function(t) {
      return e.isPropertyAccessExpression(t) && t.expression === r;
     }) ? {
      constructor: i,
      superCall: a
     } : undefined;
    }
    function o(t) {
     return e.isExpressionStatement(t) && e.isSuperCall(t.expression) ? t : e.isFunctionLike(t) ? undefined : e.forEachChild(t, o);
    }
   })(t = e.codefix || (e.codefix = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n = "constructorForDerivedNeedSuperCall";
    var r = [ e.Diagnostics.Constructors_for_derived_classes_must_contain_a_super_call.code ];
    t.registerCodeFix({
     errorCodes: r,
     getCodeActions: function(r) {
      var o = r.sourceFile, s = r.span;
      var c = i(o, s.start);
      var u = e.textChanges.ChangeTracker.with(r, function(e) {
       return a(e, o, c);
      });
      return [ t.createCodeFixAction(n, u, e.Diagnostics.Add_missing_super_call, n, e.Diagnostics.Add_all_missing_super_calls) ];
     },
     fixIds: [ n ],
     getAllCodeActions: function(e) {
      return t.codeFixAll(e, r, function(t, n) {
       return a(t, e.sourceFile, i(n.file, n.start));
      });
     }
    });
    function i(t, n) {
     var r = e.getTokenAtPosition(t, n);
     e.Debug.assert(r.kind === 123);
     return r.parent;
    }
    function a(t, n, r) {
     var i = e.createStatement(e.createCall(e.createSuper(), undefined, e.emptyArray));
     t.insertNodeAtConstructorStart(n, r, i);
    }
   })(t = e.codefix || (e.codefix = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n = "extendsInterfaceBecomesImplements";
    var r = [ e.Diagnostics.Cannot_extend_an_interface_0_Did_you_mean_implements.code ];
    t.registerCodeFix({
     errorCodes: r,
     getCodeActions: function(r) {
      var o = r.sourceFile;
      var s = i(o, r.span.start);
      if (!s) return undefined;
      var c = s.extendsToken, u = s.heritageClauses;
      var l = e.textChanges.ChangeTracker.with(r, function(e) {
       return a(e, o, c, u);
      });
      return [ t.createCodeFixAction(n, l, e.Diagnostics.Change_extends_to_implements, n, e.Diagnostics.Change_all_extended_interfaces_to_implements) ];
     },
     fixIds: [ n ],
     getAllCodeActions: function(e) {
      return t.codeFixAll(e, r, function(e, t) {
       var n = i(t.file, t.start);
       if (n) a(e, t.file, n.extendsToken, n.heritageClauses);
      });
     }
    });
    function i(t, n) {
     var r = e.getTokenAtPosition(t, n);
     var i = e.getContainingClass(r).heritageClauses;
     var a = i[0].getFirstToken();
     return a.kind === 85 ? {
      extendsToken: a,
      heritageClauses: i
     } : undefined;
    }
    function a(t, n, r, i) {
     t.replaceNode(n, r, e.createToken(108));
     if (i.length === 2 && i[0].token === 85 && i[1].token === 108) {
      var a = i[1].getFirstToken();
      var o = a.getFullStart();
      t.replaceRange(n, {
       pos: o,
       end: o
      }, e.createToken(26));
      var s = n.text;
      var c = a.end;
      while (c < s.length && e.isWhiteSpaceSingleLine(s.charCodeAt(c))) {
       c++;
      }
      t.deleteRange(n, {
       pos: a.getStart(),
       end: c
      });
     }
    }
   })(t = e.codefix || (e.codefix = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n = "forgottenThisPropertyAccess";
    var r = e.Diagnostics.Cannot_find_name_0_Did_you_mean_the_static_member_1_0.code;
    var i = [ e.Diagnostics.Cannot_find_name_0_Did_you_mean_the_instance_member_this_0.code, r ];
    t.registerCodeFix({
     errorCodes: i,
     getCodeActions: function(r) {
      var i = r.sourceFile;
      var s = a(i, r.span.start, r.errorCode);
      if (!s) {
       return undefined;
      }
      var c = e.textChanges.ChangeTracker.with(r, function(e) {
       return o(e, i, s);
      });
      return [ t.createCodeFixAction(n, c, [ e.Diagnostics.Add_0_to_unresolved_variable, s.className || "this" ], n, e.Diagnostics.Add_qualifier_to_all_unresolved_variables_matching_a_member_name) ];
     },
     fixIds: [ n ],
     getAllCodeActions: function(e) {
      return t.codeFixAll(e, i, function(t, n) {
       var r = a(n.file, n.start, n.code);
       if (r) o(t, e.sourceFile, r);
      });
     }
    });
    function a(t, n, i) {
     var a = e.getTokenAtPosition(t, n);
     if (!e.isIdentifier(a)) return undefined;
     return {
      node: a,
      className: i === r ? e.getContainingClass(a).name.text : undefined
     };
    }
    function o(t, n, r) {
     var i = r.node, a = r.className;
     e.suppressLeadingAndTrailingTrivia(i);
     t.replaceNode(n, i, e.createPropertyAccess(a ? e.createIdentifier(a) : e.createThis(), i));
    }
   })(t = e.codefix || (e.codefix = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n = "unusedIdentifier";
    var r = "unusedIdentifier_prefix";
    var i = "unusedIdentifier_delete";
    var a = [ e.Diagnostics._0_is_declared_but_its_value_is_never_read.code, e.Diagnostics._0_is_declared_but_never_used.code, e.Diagnostics.Property_0_is_declared_but_its_value_is_never_read.code, e.Diagnostics.All_imports_in_import_declaration_are_unused.code, e.Diagnostics.All_destructured_elements_are_unused.code, e.Diagnostics.All_variables_are_unused.code ];
    t.registerCodeFix({
     errorCodes: a,
     getCodeActions: function(a) {
      var l = a.errorCode, d = a.sourceFile, p = a.program;
      var m = p.getTypeChecker();
      var _ = p.getSourceFiles();
      var g = e.getTokenAtPosition(d, a.span.start);
      var h = o(g);
      if (h) {
       var v = e.textChanges.ChangeTracker.with(a, function(e) {
        return e.delete(d, h);
       });
       return [ t.createCodeFixAction(n, v, [ e.Diagnostics.Remove_import_from_0, e.showModuleSpecifier(h) ], i, e.Diagnostics.Delete_all_unused_declarations) ];
      }
      var y = e.textChanges.ChangeTracker.with(a, function(e) {
       return s(g, e, d, m, _, false);
      });
      if (y.length) {
       return [ t.createCodeFixAction(n, y, e.Diagnostics.Remove_destructuring, i, e.Diagnostics.Delete_all_unused_declarations) ];
      }
      var b = e.textChanges.ChangeTracker.with(a, function(e) {
       return c(d, g, e);
      });
      if (b.length) {
       return [ t.createCodeFixAction(n, b, e.Diagnostics.Remove_variable_statement, i, e.Diagnostics.Delete_all_unused_declarations) ];
      }
      var x = [];
      var k = e.textChanges.ChangeTracker.with(a, function(e) {
       return f(d, g, e, m, _, false);
      });
      if (k.length) {
       var S = e.isComputedPropertyName(g.parent) ? g.parent : g;
       x.push(t.createCodeFixAction(n, k, [ e.Diagnostics.Remove_declaration_for_Colon_0, S.getText(d) ], i, e.Diagnostics.Delete_all_unused_declarations));
      }
      var w = e.textChanges.ChangeTracker.with(a, function(e) {
       return u(e, l, d, g);
      });
      if (w.length) {
       x.push(t.createCodeFixAction(n, w, [ e.Diagnostics.Prefix_0_with_an_underscore, g.getText(d) ], r, e.Diagnostics.Prefix_all_unused_declarations_with_where_possible));
      }
      return x;
     },
     fixIds: [ r, i ],
     getAllCodeActions: function(n) {
      var d = n.sourceFile, p = n.program;
      var m = p.getTypeChecker();
      var _ = p.getSourceFiles();
      return t.codeFixAll(n, a, function(t, a) {
       var p = e.getTokenAtPosition(d, a.start);
       switch (n.fixId) {
       case r:
        if (e.isIdentifier(p) && l(p)) {
         u(t, a.code, d, p);
        }
        break;

       case i:
        {
         var g = o(p);
         if (g) {
          t.delete(d, g);
         } else if (!s(p, t, d, m, _, true) && !c(d, p, t)) {
          f(d, p, t, m, _, true);
         }
         break;
        }

       default:
        e.Debug.fail(JSON.stringify(n.fixId));
       }
      });
     }
    });
    function o(t) {
     return t.kind === 91 ? e.tryCast(t.parent, e.isImportDeclaration) : undefined;
    }
    function s(t, n, r, i, a, o) {
     if (t.kind !== 17 || !e.isObjectBindingPattern(t.parent)) return false;
     var s = t.parent.parent;
     if (s.kind === 149) {
      m(n, r, s, i, a, o);
     } else {
      n.delete(r, s);
     }
     return true;
    }
    function c(t, n, r) {
     var i = e.tryCast(n.parent, e.isVariableDeclarationList);
     if (i && i.getChildren(t)[0] === n) {
      r.delete(t, i.parent.kind === 217 ? i.parent : i);
      return true;
     }
     return false;
    }
    function u(t, n, r, i) {
     if (n !== e.Diagnostics.Property_0_is_declared_but_its_value_is_never_read.code && e.isIdentifier(i) && l(i)) {
      t.replaceNode(r, i, e.createIdentifier("_" + i.text));
     }
    }
    function l(e) {
     switch (e.parent.kind) {
     case 149:
      return true;

     case 235:
      {
       var t = e.parent;
       switch (t.parent.parent.kind) {
       case 225:
       case 224:
        return true;
       }
      }
     }
     return false;
    }
    function f(t, n, r, i, a, o) {
     p(n, r, t, i, a, o);
     if (e.isIdentifier(n)) d(r, t, n, i);
    }
    function d(t, n, r, i) {
     e.FindAllReferences.Core.eachSymbolReferenceInFile(r, i, n, function(e) {
      if (e.parent.kind === 187) e = e.parent;
      if (e.parent.kind === 202 && e.parent.parent.kind === 219) {
       t.delete(n, e.parent.parent);
      }
     });
    }
    function p(t, n, r, i, a, o) {
     var s = t.parent;
     if (e.isParameter(s)) {
      m(n, r, s, i, a, o);
     } else {
      n.delete(r, e.isImportClause(s) ? t : e.isComputedPropertyName(s) ? s.parent : s);
     }
    }
    function m(e, t, n, r, i, a) {
     if (_(n, r, a)) {
      e.delete(t, n);
      g(e, t, n, i, r);
     }
    }
    function _(t, n, r) {
     var i = t.parent;
     switch (i.kind) {
     case 154:
      var a = n.getSymbolAtLocation(i.name);
      if (e.isMemberSymbolInBaseType(a, n)) return false;

     case 155:
     case 237:
      return true;

     case 194:
     case 195:
      {
       var o = i.parameters;
       var s = o.indexOf(t);
       e.Debug.assert(s !== -1);
       return r ? o.slice(s + 1).every(function(e) {
        return e.name.kind === 71 && !e.symbol.isReferenced;
       }) : s === o.length - 1;
      }

     case 157:
      return false;

     default:
      return e.Debug.failBadSyntaxKind(i);
     }
    }
    function g(t, n, r, i, a) {
     e.FindAllReferences.Core.eachSignatureCall(r.parent, i, a, function(e) {
      var i = r.parent.parameters.indexOf(r);
      if (e.arguments.length > i) {
       t.delete(n, e.arguments[i]);
      }
     });
    }
   })(t = e.codefix || (e.codefix = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n = "fixUnreachableCode";
    var r = [ e.Diagnostics.Unreachable_code_detected.code ];
    t.registerCodeFix({
     errorCodes: r,
     getCodeActions: function(r) {
      var a = e.textChanges.ChangeTracker.with(r, function(e) {
       return i(e, r.sourceFile, r.span.start, r.span.length);
      });
      return [ t.createCodeFixAction(n, a, e.Diagnostics.Remove_unreachable_code, n, e.Diagnostics.Remove_all_unreachable_code) ];
     },
     fixIds: [ n ],
     getAllCodeActions: function(e) {
      return t.codeFixAll(e, r, function(e, t) {
       return i(e, t.file, t.start, t.length);
      });
     }
    });
    function i(t, n, r, i) {
     var o = e.getTokenAtPosition(n, r);
     var s = e.findAncestor(o, e.isStatement);
     e.Debug.assert(s.getStart(n) === o.getStart(n));
     var c = (e.isBlock(s.parent) ? s.parent : s).parent;
     if (!e.isBlock(s.parent) || s === e.first(s.parent.statements)) {
      switch (c.kind) {
      case 220:
       if (c.elseStatement) {
        if (e.isBlock(s.parent)) {
         break;
        } else {
         t.replaceNode(n, s, e.createBlock(e.emptyArray));
        }
        return;
       }

      case 222:
      case 223:
       t.delete(n, c);
       return;
      }
     }
     if (e.isBlock(s.parent)) {
      var u = r + i;
      var l = e.Debug.assertDefined(a(e.sliceAfter(s.parent.statements, s), function(e) {
       return e.pos < u;
      }));
      t.deleteNodeRange(n, s, l);
     } else {
      t.delete(n, s);
     }
    }
    function a(e, t) {
     var n;
     for (var r = 0, i = e; r < i.length; r++) {
      var a = i[r];
      if (!t(a)) break;
      n = a;
     }
     return n;
    }
   })(t = e.codefix || (e.codefix = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n = "fixUnusedLabel";
    var r = [ e.Diagnostics.Unused_label.code ];
    t.registerCodeFix({
     errorCodes: r,
     getCodeActions: function(r) {
      var a = e.textChanges.ChangeTracker.with(r, function(e) {
       return i(e, r.sourceFile, r.span.start);
      });
      return [ t.createCodeFixAction(n, a, e.Diagnostics.Remove_unused_label, n, e.Diagnostics.Remove_all_unused_labels) ];
     },
     fixIds: [ n ],
     getAllCodeActions: function(e) {
      return t.codeFixAll(e, r, function(e, t) {
       return i(e, t.file, t.start);
      });
     }
    });
    function i(t, n, r) {
     var i = e.getTokenAtPosition(n, r);
     var a = e.cast(i.parent, e.isLabeledStatement);
     var o = i.getStart(n);
     var s = a.statement.getStart(n);
     var c = e.positionsAreOnSameLine(o, s, n) ? s : e.skipTrivia(n.text, e.findChildOfKind(a, 56, n).end, true);
     t.deleteRange(n, {
      pos: o,
      end: c
     });
    }
   })(t = e.codefix || (e.codefix = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n = "fixJSDocTypes_plain";
    var r = "fixJSDocTypes_nullable";
    var i = [ e.Diagnostics.JSDoc_types_can_only_be_used_inside_documentation_comments.code ];
    t.registerCodeFix({
     errorCodes: i,
     getCodeActions: function(i) {
      var s = i.sourceFile;
      var c = i.program.getTypeChecker();
      var u = o(s, i.span.start, c);
      if (!u) return undefined;
      var l = u.typeNode, f = u.type;
      var d = l.getText(s);
      var p = [ m(f, n, e.Diagnostics.Change_all_jsdoc_style_types_to_TypeScript) ];
      if (l.kind === 284) {
       p.push(m(c.getNullableType(f, 8192), r, e.Diagnostics.Change_all_jsdoc_style_types_to_TypeScript_and_add_undefined_to_nullable_types));
      }
      return p;
      function m(n, r, o) {
       var u = e.textChanges.ChangeTracker.with(i, function(e) {
        return a(e, s, l, n, c);
       });
       return t.createCodeFixAction("jdocTypes", u, [ e.Diagnostics.Change_0_to_1, d, c.typeToString(n) ], r, o);
      }
     },
     fixIds: [ n, r ],
     getAllCodeActions: function(e) {
      var n = e.fixId, s = e.program, c = e.sourceFile;
      var u = s.getTypeChecker();
      return t.codeFixAll(e, i, function(e, t) {
       var i = o(t.file, t.start, u);
       if (!i) return;
       var s = i.typeNode, l = i.type;
       var f = s.kind === 284 && n === r ? u.getNullableType(l, 8192) : l;
       a(e, c, s, f, u);
      });
     }
    });
    function a(e, t, n, r, i) {
     e.replaceNode(t, n, i.typeToTypeNode(r, n));
    }
    function o(t, n, r) {
     var i = e.findAncestor(e.getTokenAtPosition(t, n), s);
     var a = i && i.type;
     return a && {
      typeNode: a,
      type: r.getTypeFromTypeNode(a)
     };
    }
    function s(e) {
     switch (e.kind) {
     case 210:
     case 158:
     case 159:
     case 237:
     case 156:
     case 160:
     case 179:
     case 154:
     case 153:
     case 149:
     case 152:
     case 151:
     case 157:
     case 240:
     case 192:
     case 235:
      return true;

     default:
      return false;
     }
    }
   })(t = e.codefix || (e.codefix = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n = "fixAwaitInSyncFunction";
    var r = [ e.Diagnostics.await_expression_is_only_allowed_within_an_async_function.code, e.Diagnostics.A_for_await_of_statement_is_only_allowed_within_an_async_function_or_async_generator.code ];
    t.registerCodeFix({
     errorCodes: r,
     getCodeActions: function(r) {
      var i = r.sourceFile, s = r.span;
      var c = a(i, s.start);
      if (!c) return undefined;
      var u = e.textChanges.ChangeTracker.with(r, function(e) {
       return o(e, i, c);
      });
      return [ t.createCodeFixAction(n, u, e.Diagnostics.Add_async_modifier_to_containing_function, n, e.Diagnostics.Add_all_missing_async_modifiers) ];
     },
     fixIds: [ n ],
     getAllCodeActions: function(e) {
      return t.codeFixAll(e, r, function(t, n) {
       var r = a(n.file, n.start);
       if (!r) return;
       o(t, e.sourceFile, r);
      });
     }
    });
    function i(t) {
     if (t.type) {
      return t.type;
     }
     if (e.isVariableDeclaration(t.parent) && t.parent.type && e.isFunctionTypeNode(t.parent.type)) {
      return t.parent.type.type;
     }
    }
    function a(t, n) {
     var r = e.getTokenAtPosition(t, n);
     var a = e.getContainingFunction(r);
     if (!a) {
      return;
     }
     var o;
     switch (a.kind) {
     case 154:
      o = a.name;
      break;

     case 237:
     case 194:
      o = e.findChildOfKind(a, 89, t);
      break;

     case 195:
      o = e.findChildOfKind(a, 19, t) || e.first(a.parameters);
      break;

     default:
      return;
     }
     return o && {
      insertBefore: o,
      returnType: i(a)
     };
    }
    function o(t, n, r) {
     var i = r.insertBefore, a = r.returnType;
     if (a) {
      var o = e.getEntityNameFromTypeNode(a);
      if (!o || o.kind !== 71 || o.text !== "Promise") {
       t.replaceNode(n, a, e.createTypeReferenceNode("Promise", e.createNodeArray([ a ])));
      }
     }
     t.insertModifierBefore(n, 120, i);
    }
   })(t = e.codefix || (e.codefix = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n = "disableJsDiagnostics";
    var r = "disableJsDiagnostics";
    var i = e.mapDefined(Object.keys(e.Diagnostics), function(t) {
     var n = e.Diagnostics[t];
     return n.category === e.DiagnosticCategory.Error ? n.code : undefined;
    });
    t.registerCodeFix({
     errorCodes: i,
     getCodeActions: function(i) {
      var o = i.sourceFile, s = i.program, c = i.span, u = i.host, l = i.formatContext;
      if (!e.isInJavaScriptFile(o) || !e.isCheckJsEnabledForFile(o, s.getCompilerOptions())) {
       return undefined;
      }
      var f = [ t.createCodeFixActionNoFixId(n, [ t.createFileTextChanges(o.fileName, [ e.createTextChange(o.checkJsDirective ? e.createTextSpanFromBounds(o.checkJsDirective.pos, o.checkJsDirective.end) : e.createTextSpan(0, 0), "// @ts-nocheck" + e.getNewLineOrDefaultFromHost(u, l.options)) ]) ], e.Diagnostics.Disable_checking_for_this_file) ];
      if (e.textChanges.isValidLocationToAddComment(o, c.start)) {
       f.unshift(t.createCodeFixAction(n, e.textChanges.ChangeTracker.with(i, function(e) {
        return a(e, o, c.start);
       }), e.Diagnostics.Ignore_this_error_message, r, e.Diagnostics.Add_ts_ignore_to_all_error_messages));
      }
      return f;
     },
     fixIds: [ r ],
     getAllCodeActions: function(n) {
      var r = e.createMap();
      return t.codeFixAll(n, i, function(t, n) {
       if (e.textChanges.isValidLocationToAddComment(n.file, n.start)) {
        a(t, n.file, n.start, r);
       }
      });
     }
    });
    function a(t, n, r, i) {
     var a = e.getLineAndCharacterOfPosition(n, r).line;
     if (!i || e.addToSeen(i, a)) {
      t.insertCommentBeforeLine(n, a, r, " @ts-ignore");
     }
    }
   })(t = e.codefix || (e.codefix = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    function n(e, t, n, i, a) {
     var o = e.symbol.members;
     for (var s = 0, c = t; s < c.length; s++) {
      var u = c[s];
      if (!o.has(u.escapedName)) {
       r(u, e, n, i, a);
      }
     }
    }
    t.createMissingMemberNodes = n;
    function r(t, n, r, a, o) {
     var c = t.getDeclarations();
     if (!(c && c.length)) {
      return undefined;
     }
     var f = c[0];
     var d = e.getSynthesizedDeepClone(e.getNameOfDeclaration(f), false);
     var p = l(e.getModifierFlags(f));
     var m = p ? e.createNodeArray([ p ]) : undefined;
     var _ = r.getWidenedType(r.getTypeOfSymbolAtLocation(t, n));
     var g = !!(t.flags & 16777216);
     switch (f.kind) {
     case 156:
     case 157:
     case 151:
     case 152:
      var h = r.typeToTypeNode(_, n);
      o(e.createProperty(undefined, m, d, g ? e.createToken(55) : undefined, h, undefined));
      break;

     case 153:
     case 154:
      var v = r.getSignaturesOfType(_, 0);
      if (!e.some(v)) {
       break;
      }
      if (c.length === 1) {
       e.Debug.assert(v.length === 1);
       var y = v[0];
       k(y, m, d, u(a));
       break;
      }
      for (var b = 0, x = v; b < x.length; b++) {
       var y = x[b];
       k(y, e.getSynthesizedDeepClones(m, false), e.getSynthesizedDeepClone(d, false));
      }
      if (c.length > v.length) {
       var y = r.getSignatureFromDeclaration(c[c.length - 1]);
       k(y, m, d, u(a));
      } else {
       e.Debug.assert(c.length === v.length);
       o(s(v, d, g, m, a));
      }
      break;
     }
     function k(e, t, a, s) {
      var c = i(r, e, n, t, a, g, s);
      if (c) o(c);
     }
    }
    function i(t, n, r, i, a, o, s) {
     var c = t.signatureToSignatureDeclaration(n, 154, r, 256);
     if (!c) {
      return undefined;
     }
     c.decorators = undefined;
     c.modifiers = i;
     c.name = a;
     c.questionToken = o ? e.createToken(55) : undefined;
     c.body = s;
     return c;
    }
    function a(t, n, r, i, a, s) {
     var c = n.typeArguments, l = n.arguments, f = n.parent;
     var d = t.program.getTypeChecker();
     var p = e.map(l, function(e) {
      var t = d.getTypeAtLocation(e);
      if (t === undefined) {
       return undefined;
      }
      t = d.getBaseTypeOfLiteralType(t);
      return d.typeToTypeNode(t);
     });
     var m = e.map(l, function(t) {
      return e.isIdentifier(t) ? t.text : e.isPropertyAccessExpression(t) ? t.name.text : undefined;
     });
     return e.createMethod(undefined, a ? [ e.createToken(115) ] : undefined, e.isYieldExpression(f) ? e.createToken(39) : undefined, r, undefined, i ? undefined : e.map(c, function(t, n) {
      return e.createTypeParameterDeclaration(84 + c.length - 1 <= 90 ? String.fromCharCode(84 + n) : "T" + n);
     }), o(l.length, m, p, undefined, i), i ? undefined : e.createKeywordTypeNode(119), u(s));
    }
    t.createMethodFromCallExpression = a;
    function o(t, n, r, i, a) {
     var o = [];
     for (var s = 0; s < t; s++) {
      var c = e.createParameter(undefined, undefined, undefined, n && n[s] || "arg" + s, i !== undefined && s >= i ? e.createToken(55) : undefined, a ? undefined : r && r[s] || e.createKeywordTypeNode(119), undefined);
      o.push(c);
     }
     return o;
    }
    function s(t, n, r, i, a) {
     var s = t[0];
     var u = t[0].minArgumentCount;
     var l = false;
     for (var f = 0, d = t; f < d.length; f++) {
      var p = d[f];
      u = Math.min(p.minArgumentCount, u);
      if (p.hasRestParameter) {
       l = true;
      }
      if (p.parameters.length >= s.parameters.length && (!p.hasRestParameter || s.hasRestParameter)) {
       s = p;
      }
     }
     var m = s.parameters.length - (s.hasRestParameter ? 1 : 0);
     var _ = s.parameters.map(function(e) {
      return e.name;
     });
     var g = o(m, _, undefined, u, false);
     if (l) {
      var h = e.createArrayTypeNode(e.createKeywordTypeNode(119));
      var v = e.createParameter(undefined, undefined, e.createToken(24), _[m] || "rest", m >= u ? e.createToken(55) : undefined, h, undefined);
      g.push(v);
     }
     return c(i, n, r, undefined, g, undefined, a);
    }
    function c(t, n, r, i, a, o, s) {
     return e.createMethod(undefined, t, undefined, n, r ? e.createToken(55) : undefined, i, a, o, u(s));
    }
    function u(t) {
     return e.createBlock([ e.createThrow(e.createNew(e.createIdentifier("Error"), undefined, [ e.createLiteral("Method not implemented.", t.quotePreference === "single") ])) ], true);
    }
    function l(t) {
     if (t & 4) {
      return e.createToken(114);
     } else if (t & 16) {
      return e.createToken(113);
     }
     return undefined;
    }
   })(t = e.codefix || (e.codefix = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n = "inferFromUsage";
    var r = [ e.Diagnostics.Variable_0_implicitly_has_type_1_in_some_locations_where_its_type_cannot_be_determined.code, e.Diagnostics.Variable_0_implicitly_has_an_1_type.code, e.Diagnostics.Parameter_0_implicitly_has_an_1_type.code, e.Diagnostics.Rest_parameter_0_implicitly_has_an_any_type.code, e.Diagnostics.Property_0_implicitly_has_type_any_because_its_get_accessor_lacks_a_return_type_annotation.code, e.Diagnostics._0_which_lacks_return_type_annotation_implicitly_has_an_1_return_type.code, e.Diagnostics.Property_0_implicitly_has_type_any_because_its_set_accessor_lacks_a_parameter_type_annotation.code, e.Diagnostics.Member_0_implicitly_has_an_1_type.code ];
    t.registerCodeFix({
     errorCodes: r,
     getCodeActions: function(r) {
      var o = r.sourceFile, s = r.program, c = r.span.start, u = r.errorCode, l = r.cancellationToken;
      if (e.isSourceFileJavaScript(o)) {
       return undefined;
      }
      var f = e.getTokenAtPosition(o, c);
      var d;
      var p = e.textChanges.ChangeTracker.with(r, function(t) {
       d = a(t, o, f, u, s, l, e.returnTrue);
      });
      var m = d && e.getNameOfDeclaration(d);
      return !m || p.length === 0 ? undefined : [ t.createCodeFixAction(n, p, [ i(u, f), m.getText(o) ], n, e.Diagnostics.Infer_all_types_from_usage) ];
     },
     fixIds: [ n ],
     getAllCodeActions: function(n) {
      var i = n.sourceFile, o = n.program, s = n.cancellationToken;
      var c = e.nodeSeenTracker();
      return t.codeFixAll(n, r, function(t, n) {
       a(t, i, e.getTokenAtPosition(n.file, n.start), n.code, o, s, c);
      });
     }
    });
    function i(t, n) {
     switch (t) {
     case e.Diagnostics.Parameter_0_implicitly_has_an_1_type.code:
      return e.isSetAccessor(e.getContainingFunction(n)) ? e.Diagnostics.Infer_type_of_0_from_usage : e.Diagnostics.Infer_parameter_types_from_usage;

     case e.Diagnostics.Rest_parameter_0_implicitly_has_an_any_type.code:
      return e.Diagnostics.Infer_parameter_types_from_usage;

     default:
      return e.Diagnostics.Infer_type_of_0_from_usage;
     }
    }
    function a(t, n, r, i, a, s, f) {
     if (!e.isParameterPropertyModifier(r.kind) && r.kind !== 71 && r.kind !== 24) {
      return undefined;
     }
     var d = r.parent;
     switch (i) {
     case e.Diagnostics.Member_0_implicitly_has_an_1_type.code:
     case e.Diagnostics.Variable_0_implicitly_has_type_1_in_some_locations_where_its_type_cannot_be_determined.code:
      if (e.isVariableDeclaration(d) && f(d) || e.isPropertyDeclaration(d) || e.isPropertySignature(d)) {
       o(t, n, d, a, s);
       return d;
      }
      return undefined;

     case e.Diagnostics.Variable_0_implicitly_has_an_1_type.code:
      {
       var m = a.getTypeChecker().getSymbolAtLocation(r);
       if (m && m.valueDeclaration && e.isVariableDeclaration(m.valueDeclaration) && f(m.valueDeclaration)) {
        o(t, n, m.valueDeclaration, a, s);
        return m.valueDeclaration;
       }
       return undefined;
      }
     }
     var _ = e.getContainingFunction(r);
     if (_ === undefined) {
      return undefined;
     }
     switch (i) {
     case e.Diagnostics.Parameter_0_implicitly_has_an_1_type.code:
      if (e.isSetAccessor(_)) {
       u(t, n, _, a, s);
       return _;
      }

     case e.Diagnostics.Rest_parameter_0_implicitly_has_an_any_type.code:
      if (f(_)) {
       var g = e.cast(d, e.isParameter);
       c(t, g, _, n, a, s);
       return g;
      }
      return undefined;

     case e.Diagnostics.Property_0_implicitly_has_type_any_because_its_get_accessor_lacks_a_return_type_annotation.code:
     case e.Diagnostics._0_which_lacks_return_type_annotation_implicitly_has_an_1_return_type.code:
      if (e.isGetAccessor(_) && e.isIdentifier(_.name)) {
       l(t, n, _, p(_.name, a, s), a);
       return _;
      }
      return undefined;

     case e.Diagnostics.Property_0_implicitly_has_type_any_because_its_set_accessor_lacks_a_parameter_type_annotation.code:
      if (e.isSetAccessor(_)) {
       u(t, n, _, a, s);
       return _;
      }
      return undefined;

     default:
      return e.Debug.fail(String(i));
     }
    }
    function o(t, n, r, i, a) {
     if (e.isIdentifier(r.name)) {
      l(t, n, r, p(r.name, i, a), i);
     }
    }
    function s(e) {
     switch (e.kind) {
     case 237:
     case 154:
     case 155:
      return true;

     case 194:
      return !!e.name;
     }
     return false;
    }
    function c(t, n, r, i, a, o) {
     if (!e.isIdentifier(n.name) || !s(r)) {
      return;
     }
     var c = m(r, i, a, o) || r.parameters.map(function(t) {
      return e.isIdentifier(t.name) ? p(t.name, a, o) : undefined;
     });
     if (!c || r.parameters.length !== c.length) {
      return;
     }
     e.zipWith(r.parameters, c, function(e, n) {
      if (!e.type && !e.initializer) {
       l(t, i, e, n, a);
      }
     });
    }
    function u(t, n, r, i, a) {
     var o = e.firstOrUndefined(r.parameters);
     if (o && e.isIdentifier(r.name) && e.isIdentifier(o.name)) {
      var s = p(r.name, i, a) || p(o.name, i, a);
      l(t, n, o, s, i);
     }
    }
    function l(e, t, n, r, i) {
     var a = r && f(r, n, i.getTypeChecker());
     if (a) e.tryInsertTypeAnnotation(t, n, a);
    }
    function f(e, t, n) {
     var r = true;
     var i = function() {
      r = false;
     };
     var a = n.typeToTypeNode(e, t, undefined, {
      trackSymbol: function(e, t, i) {
       r = r && n.isSymbolAccessible(e, t, i, false).accessibility === 0;
      },
      reportInaccessibleThisError: i,
      reportPrivateInBaseOfClassExpression: i,
      reportInaccessibleUniqueSymbolError: i
     });
     return r ? a : undefined;
    }
    function d(t, n, r) {
     return e.mapDefined(e.FindAllReferences.getReferenceEntriesForNode(-1, t, n, n.getSourceFiles(), r), function(t) {
      return t.type === "node" ? e.tryCast(t.node, e.isIdentifier) : undefined;
     });
    }
    function p(e, t, n) {
     return _.inferTypeFromReferences(d(e, t, n), t.getTypeChecker(), n);
    }
    function m(t, n, r, i) {
     switch (t.kind) {
     case 155:
     case 194:
     case 237:
     case 154:
      var a = t.kind === 155;
      var o = a ? e.findChildOfKind(t, 123, n) : t.name;
      if (o) {
       return _.inferTypeForParametersFromReferences(d(o, r, i), t, r.getTypeChecker(), i);
      }
     }
    }
    var _;
    (function(t) {
     function n(e, t, n) {
      var r = {};
      for (var a = 0, o = e; a < o.length; a++) {
       var s = o[a];
       n.throwIfCancellationRequested();
       i(s, t, r);
      }
      return d(r, t);
     }
     t.inferTypeFromReferences = n;
     function r(t, n, r, a) {
      if (t.length === 0) {
       return undefined;
      }
      if (!n.parameters) {
       return undefined;
      }
      var o = {};
      for (var s = 0, c = t; s < c.length; s++) {
       var u = c[s];
       a.throwIfCancellationRequested();
       i(u, r, o);
      }
      var l = n.kind === 155;
      var f = l ? o.constructContexts : o.callContexts;
      return f && n.parameters.map(function(t, n) {
       var i = [];
       var a = e.isRestParameter(t);
       for (var o = 0, s = f; o < s.length; o++) {
        var c = s[o];
        if (c.argumentTypes.length <= n) {
         continue;
        }
        if (a) {
         for (var u = n; u < c.argumentTypes.length; u++) {
          i.push(r.getBaseTypeOfLiteralType(c.argumentTypes[u]));
         }
        } else {
         i.push(r.getBaseTypeOfLiteralType(c.argumentTypes[n]));
        }
       }
       if (!i.length) {
        return undefined;
       }
       var l = r.getWidenedType(r.getUnionType(i, 2));
       return a ? r.createArrayType(l) : l;
      });
     }
     t.inferTypeForParametersFromReferences = r;
     function i(t, n, r) {
      while (e.isRightSideOfQualifiedNameOrPropertyAccess(t)) {
       t = t.parent;
      }
      switch (t.parent.kind) {
      case 201:
       r.isNumber = true;
       break;

      case 200:
       o(t.parent, r);
       break;

      case 202:
       s(t, t.parent, n, r);
       break;

      case 269:
      case 270:
       c(t.parent, n, r);
       break;

      case 189:
      case 190:
       if (t.parent.expression === t) {
        u(t.parent, n, r);
       } else {
        a(t, n, r);
       }
       break;

      case 187:
       l(t.parent, n, r);
       break;

      case 188:
       f(t.parent, t, n, r);
       break;

      case 235:
       {
        var i = t.parent, d = i.name, p = i.initializer;
        if (t === d) {
         if (p) {
          _(r, n.getTypeAtLocation(p));
         }
         break;
        }
       }

      default:
       return a(t, n, r);
      }
     }
     function a(t, n, r) {
      if (e.isExpressionNode(t)) {
       _(r, n.getContextualType(t));
      }
     }
     function o(e, t) {
      switch (e.operator) {
      case 43:
      case 44:
      case 38:
      case 52:
       t.isNumber = true;
       break;

      case 37:
       t.isNumberOrString = true;
       break;
      }
     }
     function s(t, n, r, i) {
      switch (n.operatorToken.kind) {
      case 40:
      case 39:
      case 41:
      case 42:
      case 45:
      case 46:
      case 47:
      case 48:
      case 49:
      case 50:
      case 60:
      case 62:
      case 61:
      case 63:
      case 64:
      case 68:
      case 69:
      case 70:
      case 65:
      case 67:
      case 66:
      case 38:
      case 27:
      case 30:
      case 29:
      case 31:
       var a = r.getTypeAtLocation(n.left === t ? n.right : n.left);
       if (a.flags & 544) {
        _(i, a);
       } else {
        i.isNumber = true;
       }
       break;

      case 59:
      case 37:
       var o = r.getTypeAtLocation(n.left === t ? n.right : n.left);
       if (o.flags & 544) {
        _(i, o);
       } else if (o.flags & 168) {
        i.isNumber = true;
       } else if (o.flags & 68) {
        i.isString = true;
       } else {
        i.isNumberOrString = true;
       }
       break;

      case 58:
      case 32:
      case 34:
      case 35:
      case 33:
       _(i, r.getTypeAtLocation(n.left === t ? n.right : n.left));
       break;

      case 92:
       if (t === n.left) {
        i.isString = true;
       }
       break;

      case 54:
       if (t === n.left && (t.parent.parent.kind === 235 || e.isAssignmentExpression(t.parent.parent, true))) {
        _(i, r.getTypeAtLocation(n.right));
       }
       break;

      case 53:
      case 26:
      case 93:
       break;
      }
     }
     function c(e, t, n) {
      _(n, t.getTypeAtLocation(e.parent.parent.expression));
     }
     function u(e, t, n) {
      var r = {
       argumentTypes: [],
       returnType: {}
      };
      if (e.arguments) {
       for (var a = 0, o = e.arguments; a < o.length; a++) {
        var s = o[a];
        r.argumentTypes.push(t.getTypeAtLocation(s));
       }
      }
      i(e, t, r.returnType);
      if (e.kind === 189) {
       (n.callContexts || (n.callContexts = [])).push(r);
      } else {
       (n.constructContexts || (n.constructContexts = [])).push(r);
      }
     }
     function l(t, n, r) {
      var a = e.escapeLeadingUnderscores(t.name.text);
      if (!r.properties) {
       r.properties = e.createUnderscoreEscapedMap();
      }
      var o = r.properties.get(a) || {};
      i(t, n, o);
      r.properties.set(a, o);
     }
     function f(e, t, n, r) {
      if (t === e.argumentExpression) {
       r.isNumberOrString = true;
       return;
      } else {
       var a = n.getTypeAtLocation(e);
       var o = {};
       i(e, n, o);
       if (a.flags & 168) {
        r.numberIndexContext = o;
       } else {
        r.stringIndexContext = o;
       }
      }
     }
     function d(t, n) {
      if (t.isNumberOrString && !t.isNumber && !t.isString) {
       return n.getUnionType([ n.getNumberType(), n.getStringType() ]);
      } else if (t.isNumber) {
       return n.getNumberType();
      } else if (t.isString) {
       return n.getStringType();
      } else if (t.candidateTypes) {
       return n.getWidenedType(n.getUnionType(t.candidateTypes.map(function(e) {
        return n.getBaseTypeOfLiteralType(e);
       }), 2));
      } else if (t.properties && g(t.properties.get("then"))) {
       var r = p(0, t.properties.get("then").callContexts, false, n);
       var i = r.getCallSignatures().map(function(e) {
        return e.getReturnType();
       });
       return n.createPromiseType(i.length ? n.getUnionType(i, 2) : n.getAnyType());
      } else if (t.properties && g(t.properties.get("push"))) {
       return n.createArrayType(p(0, t.properties.get("push").callContexts, false, n));
      } else if (t.properties || t.callContexts || t.constructContexts || t.numberIndexContext || t.stringIndexContext) {
       var a = e.createUnderscoreEscapedMap();
       var o = [];
       var s = [];
       var c = void 0;
       var u = void 0;
       if (t.properties) {
        t.properties.forEach(function(e, t) {
         var r = n.createSymbol(4, t);
         r.type = d(e, n) || n.getAnyType();
         a.set(t, r);
        });
       }
       if (t.callContexts) {
        for (var l = 0, f = t.callContexts; l < f.length; l++) {
         var _ = f[l];
         o.push(m(_, n));
        }
       }
       if (t.constructContexts) {
        for (var h = 0, v = t.constructContexts; h < v.length; h++) {
         var y = v[h];
         s.push(m(y, n));
        }
       }
       if (t.numberIndexContext) {
        u = n.createIndexInfo(d(t.numberIndexContext, n), false);
       }
       if (t.stringIndexContext) {
        c = n.createIndexInfo(d(t.stringIndexContext, n), false);
       }
       return n.createAnonymousType(undefined, a, o, s, c, u);
      } else {
       return undefined;
      }
     }
     function p(t, n, r, i) {
      var a = [];
      if (n) {
       for (var o = 0, s = n; o < s.length; o++) {
        var c = s[o];
        if (c.argumentTypes.length > t) {
         if (r) {
          a = e.concatenate(a, e.map(c.argumentTypes.slice(t), function(e) {
           return i.getBaseTypeOfLiteralType(e);
          }));
         } else {
          a.push(i.getBaseTypeOfLiteralType(c.argumentTypes[t]));
         }
        }
       }
      }
      if (a.length) {
       var u = i.getWidenedType(i.getUnionType(a, 2));
       return r ? i.createArrayType(u) : u;
      }
      return undefined;
     }
     function m(t, n) {
      var r = [];
      for (var i = 0; i < t.argumentTypes.length; i++) {
       var a = n.createSymbol(1, e.escapeLeadingUnderscores("arg" + i));
       a.type = n.getWidenedType(n.getBaseTypeOfLiteralType(t.argumentTypes[i]));
       r.push(a);
      }
      var o = d(t.returnType, n) || n.getVoidType();
      return n.createSignature(undefined, undefined, undefined, r, o, undefined, t.argumentTypes.length, false, false);
     }
     function _(e, t) {
      if (t && !(t.flags & 1) && !(t.flags & 32768)) {
       (e.candidateTypes || (e.candidateTypes = [])).push(t);
      }
     }
     function g(e) {
      return !!e && !!e.callContexts;
     }
    })(_ || (_ = {}));
   })(t = e.codefix || (e.codefix = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n = "invalidImportSyntax";
    function r(t, n) {
     var r = e.getSourceFileOfNode(n);
     var a = e.getNamespaceDeclarationNode(n);
     var o = t.program.getCompilerOptions();
     var s = [];
     s.push(i(t, r, n, e.makeImport(a.name, undefined, n.moduleSpecifier, e.getQuotePreference(r, t.preferences))));
     if (e.getEmitModuleKind(o) === e.ModuleKind.CommonJS) {
      s.push(i(t, r, n, e.createImportEqualsDeclaration(undefined, undefined, a.name, e.createExternalModuleReference(n.moduleSpecifier))));
     }
     return s;
    }
    function i(r, i, a, o) {
     var s = e.textChanges.ChangeTracker.with(r, function(e) {
      return e.replaceNode(i, a, o);
     });
     return t.createCodeFixActionNoFixId(n, s, [ e.Diagnostics.Replace_import_with_0, s[0].textChanges[0].newText ]);
    }
    t.registerCodeFix({
     errorCodes: [ e.Diagnostics.Cannot_invoke_an_expression_whose_type_lacks_a_call_signature_Type_0_has_no_compatible_call_signatures.code, e.Diagnostics.Cannot_use_new_with_an_expression_whose_type_lacks_a_call_or_construct_signature.code ],
     getCodeActions: a
    });
    function a(t) {
     var n = t.sourceFile;
     var r = e.Diagnostics.Cannot_invoke_an_expression_whose_type_lacks_a_call_signature_Type_0_has_no_compatible_call_signatures.code === t.errorCode ? 189 : 190;
     var i = e.findAncestor(e.getTokenAtPosition(n, t.span.start), function(e) {
      return e.kind === r && e.getStart() === t.span.start && e.getEnd() === t.span.start + t.span.length;
     });
     if (!i) {
      return [];
     }
     var a = i.expression;
     return s(t, a);
    }
    t.registerCodeFix({
     errorCodes: [ e.Diagnostics.Argument_of_type_0_is_not_assignable_to_parameter_of_type_1.code, e.Diagnostics.Type_0_does_not_satisfy_the_constraint_1.code, e.Diagnostics.Type_0_is_not_assignable_to_type_1.code, e.Diagnostics.Type_0_is_not_assignable_to_type_1_Two_different_types_with_this_name_exist_but_they_are_unrelated.code, e.Diagnostics.Type_predicate_0_is_not_assignable_to_1.code, e.Diagnostics.Property_0_of_type_1_is_not_assignable_to_string_index_type_2.code, e.Diagnostics.Property_0_of_type_1_is_not_assignable_to_numeric_index_type_2.code, e.Diagnostics.Numeric_index_type_0_is_not_assignable_to_string_index_type_1.code, e.Diagnostics.Property_0_in_type_1_is_not_assignable_to_the_same_property_in_base_type_2.code, e.Diagnostics.Property_0_in_type_1_is_not_assignable_to_type_2.code, e.Diagnostics.Property_0_of_JSX_spread_attribute_is_not_assignable_to_target_property.code, e.Diagnostics.The_this_context_of_type_0_is_not_assignable_to_method_s_this_of_type_1.code ],
     getCodeActions: o
    });
    function o(t) {
     var n = t.sourceFile;
     var r = e.findAncestor(e.getTokenAtPosition(n, t.span.start), function(e) {
      return e.getStart() === t.span.start && e.getEnd() === t.span.start + t.span.length;
     });
     if (!r) {
      return [];
     }
     return s(t, r);
    }
    function s(i, a) {
     var o = i.program.getTypeChecker().getTypeAtLocation(a);
     if (!(o.symbol && o.symbol.originatingImport)) {
      return [];
     }
     var s = [];
     var c = o.symbol.originatingImport;
     if (!e.isImportCall(c)) {
      e.addRange(s, r(i, c));
     }
     if (e.isExpression(a) && !(e.isNamedDeclaration(a.parent) && a.parent.name === a)) {
      var u = i.sourceFile;
      var l = e.textChanges.ChangeTracker.with(i, function(t) {
       return t.replaceNode(u, a, e.createPropertyAccess(a, "default"), {});
      });
      s.push(t.createCodeFixActionNoFixId(n, l, e.Diagnostics.Use_synthetic_default_member));
     }
     return s;
    }
   })(t = e.codefix || (e.codefix = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n = "strictClassInitialization";
    var r = "addMissingPropertyDefiniteAssignmentAssertions";
    var i = "addMissingPropertyUndefinedType";
    var a = "addMissingPropertyInitializer";
    var o = [ e.Diagnostics.Property_0_has_no_initializer_and_is_not_definitely_assigned_in_the_constructor.code ];
    t.registerCodeFix({
     errorCodes: o,
     getCodeActions: function(t) {
      var n = s(t.sourceFile, t.span.start);
      if (!n) return;
      var r = [ l(t, n), c(t, n) ];
      e.append(r, d(t, n));
      return r;
     },
     fixIds: [ r, i, a ],
     getAllCodeActions: function(n) {
      return t.codeFixAll(n, o, function(t, o) {
       var c = s(o.file, o.start);
       if (!c) return;
       switch (n.fixId) {
       case r:
        u(t, o.file, c);
        break;

       case i:
        f(t, o.file, c);
        break;

       case a:
        var l = n.program.getTypeChecker();
        var d = m(l, c);
        if (!d) return;
        p(t, o.file, c, d);
        break;

       default:
        e.Debug.fail(JSON.stringify(n.fixId));
       }
      });
     }
    });
    function s(t, n) {
     var r = e.getTokenAtPosition(t, n);
     return e.isIdentifier(r) ? e.cast(r.parent, e.isPropertyDeclaration) : undefined;
    }
    function c(i, a) {
     var o = e.textChanges.ChangeTracker.with(i, function(e) {
      return u(e, i.sourceFile, a);
     });
     return t.createCodeFixAction(n, o, [ e.Diagnostics.Add_definite_assignment_assertion_to_property_0, a.getText() ], r, e.Diagnostics.Add_definite_assignment_assertions_to_all_uninitialized_properties);
    }
    function u(t, n, r) {
     var i = e.updateProperty(r, r.decorators, r.modifiers, r.name, e.createToken(51), r.type, r.initializer);
     t.replaceNode(n, r, i);
    }
    function l(r, a) {
     var o = e.textChanges.ChangeTracker.with(r, function(e) {
      return f(e, r.sourceFile, a);
     });
     return t.createCodeFixAction(n, o, [ e.Diagnostics.Add_undefined_type_to_property_0, a.name.getText() ], i, e.Diagnostics.Add_undefined_type_to_all_uninitialized_properties);
    }
    function f(t, n, r) {
     var i = e.createKeywordTypeNode(140);
     var a = r.type;
     var o = e.isUnionTypeNode(a) ? a.types.concat(i) : [ a, i ];
     t.replaceNode(n, a, e.createUnionTypeNode(o));
    }
    function d(r, i) {
     var o = r.program.getTypeChecker();
     var s = m(o, i);
     if (!s) return undefined;
     var c = e.textChanges.ChangeTracker.with(r, function(e) {
      return p(e, r.sourceFile, i, s);
     });
     return t.createCodeFixAction(n, c, [ e.Diagnostics.Add_initializer_to_property_0, i.name.getText() ], a, e.Diagnostics.Add_initializers_to_all_uninitialized_properties);
    }
    function p(t, n, r, i) {
     var a = e.updateProperty(r, r.decorators, r.modifiers, r.name, r.questionToken, r.type, i);
     t.replaceNode(n, r, a);
    }
    function m(e, t) {
     return _(e, e.getTypeFromTypeNode(t.type));
    }
    function _(t, n) {
     if (n.flags & 256) {
      return n === t.getFalseType() ? e.createFalse() : e.createTrue();
     } else if (n.isLiteral()) {
      return e.createLiteral(n.value);
     } else if (n.isUnion()) {
      return e.firstDefined(n.types, function(e) {
       return _(t, e);
      });
     } else if (n.isClass()) {
      var r = e.getClassLikeDeclarationOfSymbol(n.symbol);
      if (!r || e.hasModifier(r, 128)) return undefined;
      var i = e.getFirstConstructorWithBody(r);
      if (i && i.parameters.length) return undefined;
      return e.createNew(e.createIdentifier(n.symbol.name), undefined, undefined);
     } else if (t.isArrayLikeType(n)) {
      return e.createArrayLiteral();
     }
     return undefined;
    }
   })(t = e.codefix || (e.codefix = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n = "requireInTs";
    var r = [ e.Diagnostics.require_call_may_be_converted_to_an_import.code ];
    t.registerCodeFix({
     errorCodes: r,
     getCodeActions: function(r) {
      var a = e.textChanges.ChangeTracker.with(r, function(e) {
       return i(e, r.sourceFile, r.span.start, r.program);
      });
      return [ t.createCodeFixAction(n, a, e.Diagnostics.Convert_require_to_import, n, e.Diagnostics.Convert_all_require_to_import) ];
     },
     fixIds: [ n ],
     getAllCodeActions: function(e) {
      return t.codeFixAll(e, r, function(t, n) {
       return i(t, n.file, n.start, e.program);
      });
     }
    });
    function i(t, n, r, i) {
     var o = a(n, r), s = o.statement, c = o.name, u = o.required;
     t.replaceNode(n, s, e.getAllowSyntheticDefaultImports(i.getCompilerOptions()) ? e.createImportDeclaration(undefined, undefined, e.createImportClause(c, undefined), u) : e.createImportEqualsDeclaration(undefined, undefined, c, e.createExternalModuleReference(u)));
    }
    function a(t, n) {
     var r = e.getTokenAtPosition(t, n).parent;
     if (!e.isRequireCall(r, true)) throw e.Debug.failBadSyntaxKind(r);
     var i = e.cast(r.parent, e.isVariableDeclaration);
     return {
      statement: e.cast(i.parent.parent, e.isVariableStatement),
      name: e.cast(i.name, e.isIdentifier),
      required: r.arguments[0]
     };
    }
   })(t = e.codefix || (e.codefix = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n = "useDefaultImport";
    var r = [ e.Diagnostics.Import_may_be_converted_to_a_default_import.code ];
    t.registerCodeFix({
     errorCodes: r,
     getCodeActions: function(r) {
      var o = r.sourceFile, s = r.span.start;
      var c = i(o, s);
      if (!c) return undefined;
      var u = e.textChanges.ChangeTracker.with(r, function(e) {
       return a(e, o, c, r.preferences);
      });
      return [ t.createCodeFixAction(n, u, e.Diagnostics.Convert_to_default_import, n, e.Diagnostics.Convert_all_to_default_imports) ];
     },
     fixIds: [ n ],
     getAllCodeActions: function(e) {
      return t.codeFixAll(e, r, function(t, n) {
       var r = i(n.file, n.start);
       if (r) a(t, n.file, r, e.preferences);
      });
     }
    });
    function i(t, n) {
     var r = e.getTokenAtPosition(t, n);
     if (!e.isIdentifier(r)) return undefined;
     var i = r.parent;
     if (e.isImportEqualsDeclaration(i) && e.isExternalModuleReference(i.moduleReference)) {
      return {
       importNode: i,
       name: r,
       moduleSpecifier: i.moduleReference.expression
      };
     } else if (e.isNamespaceImport(i)) {
      var a = i.parent.parent;
      return {
       importNode: a,
       name: r,
       moduleSpecifier: a.moduleSpecifier
      };
     }
    }
    function a(t, n, r, i) {
     t.replaceNode(n, r.importNode, e.makeImport(r.name, undefined, r.moduleSpecifier, e.getQuotePreference(n, i)));
    }
   })(t = e.codefix || (e.codefix = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n = "fixAddModuleReferTypeMissingTypeof";
    var r = n;
    var i = [ e.Diagnostics.Module_0_does_not_refer_to_a_type_but_is_used_as_a_type_here_Did_you_mean_typeof_import_0.code ];
    t.registerCodeFix({
     errorCodes: i,
     getCodeActions: function(n) {
      var i = n.sourceFile, s = n.span;
      var c = a(i, s.start);
      var u = e.textChanges.ChangeTracker.with(n, function(e) {
       return o(e, i, c);
      });
      return [ t.createCodeFixAction(r, u, e.Diagnostics.Add_missing_typeof, r, e.Diagnostics.Add_missing_typeof) ];
     },
     fixIds: [ r ],
     getAllCodeActions: function(e) {
      return t.codeFixAll(e, i, function(t, n) {
       return o(t, e.sourceFile, a(n.file, n.start));
      });
     }
    });
    function a(t, n) {
     var r = e.getTokenAtPosition(t, n);
     e.Debug.assert(r.kind === 91);
     e.Debug.assert(r.parent.kind === 181);
     return r.parent;
    }
    function o(t, n, r) {
     var i = e.updateImportTypeNode(r, r.argument, r.qualifier, r.typeArguments, true);
     t.replaceNode(n, r, i);
    }
   })(t = e.codefix || (e.codefix = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n = "fixConvertToMappedObjectType";
    var r = n;
    var i = [ e.Diagnostics.An_index_signature_parameter_type_cannot_be_a_union_type_Consider_using_a_mapped_object_type_instead.code ];
    t.registerCodeFix({
     errorCodes: i,
     getCodeActions: function(n) {
      var i = n.sourceFile, o = n.span;
      var c = a(i, o.start);
      if (!c) return undefined;
      var u = e.textChanges.ChangeTracker.with(n, function(e) {
       return s(e, i, c);
      });
      var l = e.idText(c.container.name);
      return [ t.createCodeFixAction(r, u, [ e.Diagnostics.Convert_0_to_mapped_object_type, l ], r, [ e.Diagnostics.Convert_0_to_mapped_object_type, l ]) ];
     },
     fixIds: [ r ],
     getAllCodeActions: function(e) {
      return t.codeFixAll(e, i, function(e, t) {
       var n = a(t.file, t.start);
       if (n) s(e, t.file, n);
      });
     }
    });
    function a(t, n) {
     var r = e.getTokenAtPosition(t, n);
     var i = e.cast(r.parent.parent, e.isIndexSignatureDeclaration);
     if (e.isClassDeclaration(i.parent)) return undefined;
     var a = e.isInterfaceDeclaration(i.parent) ? i.parent : e.cast(i.parent.parent, e.isTypeAliasDeclaration);
     return {
      indexSignature: i,
      container: a
     };
    }
    function o(t, n) {
     return e.createTypeAliasDeclaration(t.decorators, t.modifiers, t.name, t.typeParameters, n);
    }
    function s(t, n, r) {
     var i = r.indexSignature, a = r.container;
     var s = e.isInterfaceDeclaration(a) ? a.members : a.type.members;
     var c = s.filter(function(t) {
      return !e.isIndexSignatureDeclaration(t);
     });
     var u = e.first(i.parameters);
     var l = e.createTypeParameterDeclaration(e.cast(u.name, e.isIdentifier), u.type);
     var f = e.createMappedTypeNode(e.hasReadonlyModifier(i) ? e.createModifier(132) : undefined, l, i.questionToken, i.type);
     var d = e.createIntersectionTypeNode(e.getAllSuperTypeNodes(a).concat([ f ], c.length ? [ e.createTypeLiteralNode(c) ] : e.emptyArray));
     t.replaceNode(n, a, o(a, d));
    }
   })(t = e.codefix || (e.codefix = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n = "Convert export";
    var r = "Convert default export to named export";
    var i = "Convert named export to default export";
    t.registerRefactor(n, {
     getAvailableActions: function(t) {
      var o = a(t);
      if (!o) return undefined;
      var s = o.wasDefault ? e.Diagnostics.Convert_default_export_to_named_export.message : e.Diagnostics.Convert_named_export_to_default_export.message;
      var c = o.wasDefault ? r : i;
      return [ {
       name: n,
       description: s,
       actions: [ {
        name: c,
        description: s
       } ]
      } ];
     },
     getEditsForAction: function(t, n) {
      e.Debug.assert(n === r || n === i);
      var s = e.textChanges.ChangeTracker.with(t, function(n) {
       return o(t.file, t.program, e.Debug.assertDefined(a(t)), n, t.cancellationToken);
      });
      return {
       edits: s,
       renameFilename: undefined,
       renameLocation: undefined
      };
     }
    });
    function a(t) {
     var n = t.file;
     var r = e.getRefactorContextSpan(t);
     var i = e.getTokenAtPosition(n, r.start);
     var a = e.getParentNodeInSpan(i, n, r);
     if (!a || !e.isSourceFile(a.parent) && !(e.isModuleBlock(a.parent) && e.isAmbientModule(a.parent.parent))) {
      return undefined;
     }
     var o = e.isSourceFile(a.parent) ? a.parent.symbol : a.parent.parent.symbol;
     var s = e.getModifierFlags(a);
     var c = !!(s & 512);
     if (!(s & 1) || !c && o.exports.has("default")) {
      return undefined;
     }
     switch (a.kind) {
     case 237:
     case 238:
     case 239:
     case 241:
     case 240:
     case 242:
      {
       var u = a;
       return u.name && e.isIdentifier(u.name) ? {
        exportNode: u,
        exportName: u.name,
        wasDefault: c,
        exportingModuleSymbol: o
       } : undefined;
      }

     case 217:
      {
       var l = a;
       if (!(l.declarationList.flags & 2) || l.declarationList.declarations.length !== 1) {
        return undefined;
       }
       var f = e.first(l.declarationList.declarations);
       if (!f.initializer) return undefined;
       e.Debug.assert(!c);
       return e.isIdentifier(f.name) ? {
        exportNode: l,
        exportName: f.name,
        wasDefault: c,
        exportingModuleSymbol: o
       } : undefined;
      }

     default:
      return undefined;
     }
    }
    function o(e, t, n, r, i) {
     s(e, n, r, t.getTypeChecker());
     c(t, n, r, i);
    }
    function s(t, n, r, i) {
     var a = n.wasDefault, o = n.exportNode, s = n.exportName;
     if (a) {
      r.delete(t, e.Debug.assertDefined(e.findModifier(o, 79)));
     } else {
      var c = e.Debug.assertDefined(e.findModifier(o, 84));
      switch (o.kind) {
      case 237:
      case 238:
      case 239:
       r.insertNodeAfter(t, c, e.createToken(79));
       break;

      case 217:
       if (!e.FindAllReferences.Core.isSymbolReferencedInFile(s, i, t)) {
        r.replaceNode(t, o, e.createExportDefault(e.Debug.assertDefined(e.first(o.declarationList.declarations).initializer)));
        break;
       }

      case 241:
      case 240:
      case 242:
       r.deleteModifier(t, c);
       r.insertNodeAfter(t, o, e.createExportDefault(e.createIdentifier(s.text)));
       break;

      default:
       e.Debug.assertNever(o);
      }
     }
    }
    function c(t, n, r, i) {
     var a = n.wasDefault, o = n.exportName, s = n.exportingModuleSymbol;
     var c = t.getTypeChecker();
     var f = e.Debug.assertDefined(c.getSymbolAtLocation(o));
     e.FindAllReferences.Core.eachExportReference(t.getSourceFiles(), c, i, f, s, o.text, a, function(e) {
      var t = e.getSourceFile();
      if (a) {
       u(t, e, r, o.text);
      } else {
       l(t, e, r);
      }
     });
    }
    function u(t, n, r, i) {
     var a = n.parent;
     switch (a.kind) {
     case 187:
      r.replaceNode(t, n, e.createIdentifier(i));
      break;

     case 251:
     case 255:
      {
       var o = a;
       r.replaceNode(t, o, f(i, o.name.text));
       break;
      }

     case 248:
      {
       var s = a;
       e.Debug.assert(s.name === n);
       var o = f(i, n.text);
       var c = s.namedBindings;
       if (!c) {
        r.replaceNode(t, n, e.createNamedImports([ o ]));
       } else if (c.kind === 249) {
        r.deleteRange(t, {
         pos: n.getStart(t),
         end: c.getStart(t)
        });
        var u = e.isStringLiteral(s.parent.moduleSpecifier) ? e.quotePreferenceFromString(s.parent.moduleSpecifier, t) : 1;
        var l = e.makeImport(undefined, [ f(i, n.text) ], s.parent.moduleSpecifier, u);
        r.insertNodeAfter(t, s.parent, l);
       } else {
        r.delete(t, n);
        r.insertNodeAtEndOfList(t, c.elements, o);
       }
       break;
      }

     default:
      e.Debug.failBadSyntaxKind(a);
     }
    }
    function l(t, n, r) {
     var i = n.parent;
     switch (i.kind) {
     case 187:
      r.replaceNode(t, n, e.createIdentifier("default"));
      break;

     case 251:
     case 255:
      {
       var a = i;
       if (a.kind === 251) {
        var o = e.createIdentifier(a.name.text);
        if (a.parent.elements.length === 1) {
         r.replaceNode(t, a.parent, o);
        } else {
         r.delete(t, a);
         r.insertNodeBefore(t, a.parent, o);
        }
       } else {
        r.replaceNode(t, a, d("default", a.name.text));
       }
       break;
      }

     default:
      e.Debug.failBadSyntaxKind(i);
     }
    }
    function f(t, n) {
     return e.createImportSpecifier(t === n ? undefined : e.createIdentifier(t), e.createIdentifier(n));
    }
    function d(t, n) {
     return e.createExportSpecifier(t === n ? undefined : e.createIdentifier(t), e.createIdentifier(n));
    }
   })(t = e.refactor || (e.refactor = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n = "Convert import";
    var r = "Convert namespace import to named imports";
    var i = "Convert named imports to namespace import";
    t.registerRefactor(n, {
     getAvailableActions: function(t) {
      var o = a(t);
      if (!o) return undefined;
      var s = o.kind === 249 ? e.Diagnostics.Convert_namespace_import_to_named_imports.message : e.Diagnostics.Convert_named_imports_to_namespace_import.message;
      var c = o.kind === 249 ? r : i;
      return [ {
       name: n,
       description: s,
       actions: [ {
        name: c,
        description: s
       } ]
      } ];
     },
     getEditsForAction: function(t, n) {
      e.Debug.assert(n === r || n === i);
      var s = e.textChanges.ChangeTracker.with(t, function(n) {
       return o(t.file, t.program, n, e.Debug.assertDefined(a(t)));
      });
      return {
       edits: s,
       renameFilename: undefined,
       renameLocation: undefined
      };
     }
    });
    function a(t) {
     var n = t.file;
     var r = e.getRefactorContextSpan(t);
     var i = e.getTokenAtPosition(n, r.start);
     var a = e.getParentNodeInSpan(i, n, r);
     if (!a || !e.isImportDeclaration(a)) return undefined;
     var o = a.importClause;
     return o && o.namedBindings;
    }
    function o(t, n, r, i) {
     var a = n.getTypeChecker();
     if (i.kind === 249) {
      s(t, a, r, i, e.getAllowSyntheticDefaultImports(n.getCompilerOptions()));
     } else {
      c(t, a, r, i);
     }
    }
    function s(t, n, r, i, a) {
     var o = false;
     var s = [];
     var c = e.createMap();
     e.FindAllReferences.Core.eachSymbolReferenceInFile(i.name, n, t, function(t) {
      if (!e.isPropertyAccessExpression(t.parent)) {
       o = true;
      } else {
       var r = e.cast(t.parent, e.isPropertyAccessExpression);
       var i = r.name.text;
       if (n.resolveName(i, t, 67108863, true)) {
        c.set(i, true);
       }
       e.Debug.assert(r.expression === t);
       s.push(r);
      }
     });
     var l = e.createMap();
     for (var f = 0, d = s; f < d.length; f++) {
      var p = d[f];
      var m = p.name.text;
      var _ = l.get(m);
      if (_ === undefined) {
       l.set(m, _ = c.has(m) ? e.getUniqueName(m, t) : m);
      }
      r.replaceNode(t, p, e.createIdentifier(_));
     }
     var g = [];
     l.forEach(function(t, n) {
      g.push(e.createImportSpecifier(t === n ? undefined : e.createIdentifier(n), e.createIdentifier(t)));
     });
     var h = i.parent.parent;
     if (o && !a) {
      r.insertNodeAfter(t, h, u(h, undefined, g));
     } else {
      r.replaceNode(t, h, u(h, o ? e.createIdentifier(i.name.text) : undefined, g));
     }
    }
    function c(t, n, r, i) {
     var a = i.parent.parent;
     var o = a.moduleSpecifier;
     var s = o && e.isStringLiteral(o) ? e.codefix.moduleSpecifierToValidIdentifier(o.text, 6) : "module";
     var c = i.elements.some(function(r) {
      return e.FindAllReferences.Core.eachSymbolReferenceInFile(r.name, n, t, function(e) {
       return !!n.resolveName(s, e, 67108863, true);
      }) || false;
     });
     var l = c ? e.getUniqueName(s, t) : s;
     var f = [];
     var d = function(i) {
      var a = (i.propertyName || i.name).text;
      e.FindAllReferences.Core.eachSymbolReferenceInFile(i.name, n, t, function(n) {
       var o = e.createPropertyAccess(e.createIdentifier(l), a);
       if (e.isShorthandPropertyAssignment(n.parent)) {
        r.replaceNode(t, n.parent, e.createPropertyAssignment(n.text, o));
       } else if (e.isExportSpecifier(n.parent) && !n.parent.propertyName) {
        if (!f.some(function(e) {
         return e.name === i.name;
        })) {
         f.push(e.createImportSpecifier(i.propertyName && e.createIdentifier(i.propertyName.text), e.createIdentifier(i.name.text)));
        }
       } else {
        r.replaceNode(t, n, o);
       }
      });
     };
     for (var p = 0, m = i.elements; p < m.length; p++) {
      var _ = m[p];
      d(_);
     }
     r.replaceNode(t, i, e.createNamespaceImport(e.createIdentifier(l)));
     if (f.length) {
      r.insertNodeAfter(t, i.parent.parent, u(a, undefined, f));
     }
    }
    function u(t, n, r) {
     return e.createImportDeclaration(undefined, undefined, e.createImportClause(n, r && r.length ? e.createNamedImports(r) : undefined), t.moduleSpecifier);
    }
   })(t = e.refactor || (e.refactor = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n;
    (function(n) {
     var r = "Extract Symbol";
     t.registerRefactor(r, {
      getAvailableActions: i,
      getEditsForAction: a
     });
     function i(t) {
      var n = c(t.file, e.getRefactorContextSpan(t));
      var i = n.targetRange;
      if (i === undefined) {
       return undefined;
      }
      var a = m(i, t);
      if (a === undefined) {
       return undefined;
      }
      var o = [];
      var s = e.createMap();
      var u = [];
      var l = e.createMap();
      var f = 0;
      for (var d = 0, p = a; d < p.length; d++) {
       var _ = p[d], g = _.functionExtraction, h = _.constantExtraction;
       if (g.errors.length === 0) {
        var v = g.description;
        if (!s.has(v)) {
         s.set(v, true);
         o.push({
          description: v,
          name: "function_scope_" + f
         });
        }
       }
       if (h.errors.length === 0) {
        var v = h.description;
        if (!l.has(v)) {
         l.set(v, true);
         u.push({
          description: v,
          name: "constant_scope_" + f
         });
        }
       }
       f++;
      }
      var y = [];
      if (o.length) {
       y.push({
        name: r,
        description: e.getLocaleSpecificMessage(e.Diagnostics.Extract_function),
        actions: o
       });
      }
      if (u.length) {
       y.push({
        name: r,
        description: e.getLocaleSpecificMessage(e.Diagnostics.Extract_constant),
        actions: u
       });
      }
      return y.length ? y : undefined;
     }
     n.getAvailableActions = i;
     function a(t, n) {
      var r = c(t.file, e.getRefactorContextSpan(t));
      var i = r.targetRange;
      var a = /^function_scope_(\d+)$/.exec(n);
      if (a) {
       var o = +a[1];
       e.Debug.assert(isFinite(o), "Expected to parse a finite number from the function scope index");
       return d(i, t, o);
      }
      var s = /^constant_scope_(\d+)$/.exec(n);
      if (s) {
       var o = +s[1];
       e.Debug.assert(isFinite(o), "Expected to parse a finite number from the constant scope index");
       return p(i, t, o);
      }
      e.Debug.fail("Unrecognized action name");
     }
     n.getEditsForAction = a;
     var o;
     (function(t) {
      function n(t) {
       return {
        message: t,
        code: 0,
        category: e.DiagnosticCategory.Message,
        key: t
       };
      }
      t.cannotExtractRange = n("Cannot extract range.");
      t.cannotExtractImport = n("Cannot extract import statement.");
      t.cannotExtractSuper = n("Cannot extract super call.");
      t.cannotExtractEmpty = n("Cannot extract empty range.");
      t.expressionExpected = n("expression expected.");
      t.uselessConstantType = n("No reason to extract constant of type.");
      t.statementOrExpressionExpected = n("Statement or expression expected.");
      t.cannotExtractRangeContainingConditionalBreakOrContinueStatements = n("Cannot extract range containing conditional break or continue statements.");
      t.cannotExtractRangeContainingConditionalReturnStatement = n("Cannot extract range containing conditional return statement.");
      t.cannotExtractRangeContainingLabeledBreakOrContinueStatementWithTargetOutsideOfTheRange = n("Cannot extract range containing labeled break or continue with target outside of the range.");
      t.cannotExtractRangeThatContainsWritesToReferencesLocatedOutsideOfTheTargetRangeInGenerators = n("Cannot extract range containing writes to references located outside of the target range in generators.");
      t.typeWillNotBeVisibleInTheNewScope = n("Type will not visible in the new scope.");
      t.functionWillNotBeVisibleInTheNewScope = n("Function will not visible in the new scope.");
      t.cannotExtractIdentifier = n("Select more than a single identifier.");
      t.cannotExtractExportedEntity = n("Cannot extract exported declaration");
      t.cannotWriteInExpression = n("Cannot write back side-effects when extracting an expression");
      t.cannotExtractReadonlyPropertyInitializerOutsideConstructor = n("Cannot move initialization of read-only class property outside of the constructor");
      t.cannotExtractAmbientBlock = n("Cannot extract code from ambient contexts");
      t.cannotAccessVariablesFromNestedScopes = n("Cannot access variables from nested scopes");
      t.cannotExtractToOtherFunctionLike = n("Cannot extract method to a function-like scope that is not a function");
      t.cannotExtractToJSClass = n("Cannot extract constant to a class scope in JS");
      t.cannotExtractToExpressionArrowFunction = n("Cannot extract constant to an arrow function without a block");
     })(o = n.Messages || (n.Messages = {}));
     var s;
     (function(e) {
      e[e["None"] = 0] = "None";
      e[e["HasReturn"] = 1] = "HasReturn";
      e[e["IsGenerator"] = 2] = "IsGenerator";
      e[e["IsAsyncFunction"] = 4] = "IsAsyncFunction";
      e[e["UsesThis"] = 8] = "UsesThis";
      e[e["InStaticRegion"] = 16] = "InStaticRegion";
     })(s || (s = {}));
     function c(t, n) {
      var r = n.length;
      if (r === 0) {
       return {
        errors: [ e.createFileDiagnostic(t, n.start, r, o.cannotExtractEmpty) ]
       };
      }
      var i = e.getParentNodeInSpan(e.getTokenAtPosition(t, n.start), t, n);
      var a = e.getParentNodeInSpan(e.findTokenOnLeftOfPosition(t, e.textSpanEnd(n)), t, n);
      var c = [];
      var l = s.None;
      if (!i || !a) {
       return {
        errors: [ e.createFileDiagnostic(t, n.start, r, o.cannotExtractRange) ]
       };
      }
      if (i.parent !== a.parent) {
       return {
        errors: [ e.createFileDiagnostic(t, n.start, r, o.cannotExtractRange) ]
       };
      }
      if (i !== a) {
       if (!j(i.parent)) {
        return {
         errors: [ e.createFileDiagnostic(t, n.start, r, o.cannotExtractRange) ]
        };
       }
       var f = [];
       var d = i;
       for (var p = 0, m = d.parent.statements; p < m.length; p++) {
        var _ = m[p];
        if (_ === i || f.length) {
         var g = k(_);
         if (g) {
          return {
           errors: g
          };
         }
         f.push(_);
        }
        if (_ === a) {
         break;
        }
       }
       if (!f.length) {
        return {
         errors: [ e.createFileDiagnostic(t, n.start, r, o.cannotExtractRange) ]
        };
       }
       return {
        targetRange: {
         range: f,
         facts: l,
         declarations: c
        }
       };
      }
      if (e.isReturnStatement(i) && !i.expression) {
       return {
        errors: [ e.createFileDiagnostic(t, n.start, r, o.cannotExtractRange) ]
       };
      }
      var h = y(i);
      var v = b(h) || k(h);
      if (v) {
       return {
        errors: v
       };
      }
      return {
       targetRange: {
        range: u(h),
        facts: l,
        declarations: c
       }
      };
      function y(t) {
       if (e.isReturnStatement(t)) {
        if (t.expression) {
         return t.expression;
        }
       } else if (e.isVariableStatement(t)) {
        var n = 0;
        var r = void 0;
        for (var i = 0, a = t.declarationList.declarations; i < a.length; i++) {
         var o = a[i];
         if (o.initializer) {
          n++;
          r = o.initializer;
         }
        }
        if (n === 1) {
         return r;
        }
       } else if (e.isVariableDeclaration(t)) {
        if (t.initializer) {
         return t.initializer;
        }
       }
       return t;
      }
      function b(t) {
       if (e.isIdentifier(e.isExpressionStatement(t) ? t.expression : t)) {
        return [ e.createDiagnosticForNode(t, o.cannotExtractIdentifier) ];
       }
       return undefined;
      }
      function x(t, n) {
       var r = t;
       while (r !== n) {
        if (r.kind === 152) {
         if (e.hasModifier(r, 32)) {
          l |= s.InStaticRegion;
         }
         break;
        } else if (r.kind === 149) {
         var i = e.getContainingFunction(r);
         if (i.kind === 155) {
          l |= s.InStaticRegion;
         }
         break;
        } else if (r.kind === 154) {
         if (e.hasModifier(r, 32)) {
          l |= s.InStaticRegion;
         }
        }
        r = r.parent;
       }
      }
      function k(t) {
       var r;
       (function(e) {
        e[e["None"] = 0] = "None";
        e[e["Break"] = 1] = "Break";
        e[e["Continue"] = 2] = "Continue";
        e[e["Return"] = 4] = "Return";
       })(r || (r = {}));
       e.Debug.assert(t.pos <= t.end, "This failure could trigger https://github.com/Microsoft/TypeScript/issues/20809");
       e.Debug.assert(!e.positionIsSynthesized(t.pos), "This failure could trigger https://github.com/Microsoft/TypeScript/issues/20809");
       if (!e.isStatement(t) && !(e.isExpressionNode(t) && z(t))) {
        return [ e.createDiagnosticForNode(t, o.statementOrExpressionExpected) ];
       }
       if (t.flags & 4194304) {
        return [ e.createDiagnosticForNode(t, o.cannotExtractAmbientBlock) ];
       }
       var i = e.getContainingClass(t);
       if (i) {
        x(t, i);
       }
       var a;
       var u = 4;
       var f;
       d(t);
       return a;
       function d(t) {
        if (a) {
         return true;
        }
        if (e.isDeclaration(t)) {
         var r = t.kind === 235 ? t.parent.parent : t;
         if (e.hasModifier(r, 1)) {
          (a || (a = [])).push(e.createDiagnosticForNode(t, o.cannotExtractExportedEntity));
          return true;
         }
         c.push(t.symbol);
        }
        switch (t.kind) {
        case 247:
         (a || (a = [])).push(e.createDiagnosticForNode(t, o.cannotExtractImport));
         return true;

        case 97:
         if (t.parent.kind === 189) {
          var i = e.getContainingClass(t);
          if (i.pos < n.start || i.end >= n.start + n.length) {
           (a || (a = [])).push(e.createDiagnosticForNode(t, o.cannotExtractSuper));
           return true;
          }
         } else {
          l |= s.UsesThis;
         }
         break;
        }
        if (e.isFunctionLikeDeclaration(t) || e.isClassLike(t)) {
         switch (t.kind) {
         case 237:
         case 238:
          if (e.isSourceFile(t.parent) && t.parent.externalModuleIndicator === undefined) {
           (a || (a = [])).push(e.createDiagnosticForNode(t, o.functionWillNotBeVisibleInTheNewScope));
          }
          break;
         }
         return false;
        }
        var p = u;
        switch (t.kind) {
        case 220:
         u = 0;
         break;

        case 233:
         u = 0;
         break;

        case 216:
         if (t.parent && t.parent.kind === 233 && t.parent.finallyBlock === t) {
          u = 4;
         }
         break;

        case 269:
         u |= 1;
         break;

        default:
         if (e.isIterationStatement(t, false)) {
          u |= 1 | 2;
         }
         break;
        }
        switch (t.kind) {
        case 176:
        case 99:
         l |= s.UsesThis;
         break;

        case 231:
         {
          var m = t.label;
          (f || (f = [])).push(m.escapedText);
          e.forEachChild(t, d);
          f.pop();
          break;
         }

        case 227:
        case 226:
         {
          var m = t.label;
          if (m) {
           if (!e.contains(f, m.escapedText)) {
            (a || (a = [])).push(e.createDiagnosticForNode(t, o.cannotExtractRangeContainingLabeledBreakOrContinueStatementWithTargetOutsideOfTheRange));
           }
          } else {
           if (!(u & (t.kind === 227 ? 1 : 2))) {
            (a || (a = [])).push(e.createDiagnosticForNode(t, o.cannotExtractRangeContainingConditionalBreakOrContinueStatements));
           }
          }
          break;
         }

        case 199:
         l |= s.IsAsyncFunction;
         break;

        case 205:
         l |= s.IsGenerator;
         break;

        case 228:
         if (u & 4) {
          l |= s.HasReturn;
         } else {
          (a || (a = [])).push(e.createDiagnosticForNode(t, o.cannotExtractRangeContainingConditionalReturnStatement));
         }
         break;

        default:
         e.forEachChild(t, d);
         break;
        }
        u = p;
       }
      }
     }
     n.getRangeToExtract = c;
     function u(t) {
      if (e.isStatement(t)) {
       return [ t ];
      } else if (e.isExpressionNode(t)) {
       return e.isExpressionStatement(t.parent) ? [ t.parent ] : t;
      }
      return undefined;
     }
     function l(t) {
      return e.isFunctionLikeDeclaration(t) || e.isSourceFile(t) || e.isModuleBlock(t) || e.isClassLike(t);
     }
     function f(t) {
      var n = M(t.range) ? e.first(t.range) : t.range;
      if (t.facts & s.UsesThis) {
       var r = e.getContainingClass(n);
       if (r) {
        var i = e.findAncestor(n, e.isFunctionLikeDeclaration);
        return i ? [ i, r ] : [ r ];
       }
      }
      var a = [];
      while (true) {
       n = n.parent;
       if (n.kind === 149) {
        n = e.findAncestor(n, function(t) {
         return e.isFunctionLikeDeclaration(t);
        }).parent;
       }
       if (l(n)) {
        a.push(n);
        if (n.kind === 277) {
         return a;
        }
       }
      }
     }
     function d(t, n, r) {
      var i = _(t, n), a = i.scopes, o = i.readsAndWrites, s = o.target, c = o.usagesPerScope, u = o.functionErrorsPerScope, l = o.exposedVariableDeclarations;
      e.Debug.assert(!u[r].length, "The extraction went missing? How?");
      n.cancellationToken.throwIfCancellationRequested();
      return k(s, a[r], c[r], l, t, n);
     }
     function p(t, n, r) {
      var i = _(t, n), a = i.scopes, o = i.readsAndWrites, s = o.target, c = o.usagesPerScope, u = o.constantErrorsPerScope, l = o.exposedVariableDeclarations;
      e.Debug.assert(!u[r].length, "The extraction went missing? How?");
      e.Debug.assert(l.length === 0, "Extract constant accepted a range containing a variable declaration?");
      n.cancellationToken.throwIfCancellationRequested();
      var f = e.isExpression(s) ? s : s.statements[0].expression;
      return S(f, a[r], c[r], t.facts, n);
     }
     function m(t, n) {
      var r = _(t, n), i = r.scopes, a = r.readsAndWrites, o = a.functionErrorsPerScope, s = a.constantErrorsPerScope;
      var c = i.map(function(t, n) {
       var r = g(t);
       var i = h(t);
       var a = e.isFunctionLikeDeclaration(t) ? v(t) : e.isClassLike(t) ? y(t) : b(t);
       var c;
       var u;
       if (a === 1) {
        c = e.formatStringFromArgs(e.getLocaleSpecificMessage(e.Diagnostics.Extract_to_0_in_1_scope), [ r, "global" ]);
        u = e.formatStringFromArgs(e.getLocaleSpecificMessage(e.Diagnostics.Extract_to_0_in_1_scope), [ i, "global" ]);
       } else if (a === 0) {
        c = e.formatStringFromArgs(e.getLocaleSpecificMessage(e.Diagnostics.Extract_to_0_in_1_scope), [ r, "module" ]);
        u = e.formatStringFromArgs(e.getLocaleSpecificMessage(e.Diagnostics.Extract_to_0_in_1_scope), [ i, "module" ]);
       } else {
        c = e.formatStringFromArgs(e.getLocaleSpecificMessage(e.Diagnostics.Extract_to_0_in_1), [ r, a ]);
        u = e.formatStringFromArgs(e.getLocaleSpecificMessage(e.Diagnostics.Extract_to_0_in_1), [ i, a ]);
       }
       if (n === 0 && !e.isClassLike(t)) {
        u = e.formatStringFromArgs(e.getLocaleSpecificMessage(e.Diagnostics.Extract_to_0_in_enclosing_scope), [ i ]);
       }
       return {
        functionExtraction: {
         description: c,
         errors: o[n]
        },
        constantExtraction: {
         description: u,
         errors: s[n]
        }
       };
      });
      return c;
     }
     function _(e, t) {
      var n = t.file;
      var r = f(e);
      var i = L(e, n);
      var a = B(e, r, i, n, t.program.getTypeChecker(), t.cancellationToken);
      return {
       scopes: r,
       readsAndWrites: a
      };
     }
     function g(t) {
      return e.isFunctionLikeDeclaration(t) ? "inner function" : e.isClassLike(t) ? "method" : "function";
     }
     function h(t) {
      return e.isClassLike(t) ? "readonly field" : "constant";
     }
     function v(t) {
      switch (t.kind) {
      case 155:
       return "constructor";

      case 194:
      case 237:
       return t.name ? "function '" + t.name.text + "'" : "anonymous function";

      case 195:
       return "arrow function";

      case 154:
       return "method '" + t.name.getText();

      case 156:
       return "'get " + t.name.getText() + "'";

      case 157:
       return "'set " + t.name.getText() + "'";

      default:
       throw e.Debug.assertNever(t);
      }
     }
     function y(e) {
      return e.kind === 238 ? e.name ? "class '" + e.name.text + "'" : "anonymous class declaration" : e.name ? "class expression '" + e.name.text + "'" : "anonymous class expression";
     }
     function b(e) {
      return e.kind === 243 ? "namespace '" + e.parent.name.getText() + "'" : e.externalModuleIndicator ? 0 : 1;
     }
     var x;
     (function(e) {
      e[e["Module"] = 0] = "Module";
      e[e["Global"] = 1] = "Global";
     })(x || (x = {}));
     function k(t, n, r, i, a, o) {
      var c = r.usages, u = r.typeParameterUsages, l = r.substitutions;
      var f = o.program.getTypeChecker();
      var d = n.getSourceFile();
      var p = e.getUniqueName(e.isClassLike(n) ? "newMethod" : "newFunction", d);
      var m = e.isInJavaScriptFile(n);
      var _ = e.createIdentifier(p);
      var g;
      var h = [];
      var v = [];
      var y;
      c.forEach(function(t, r) {
       var i;
       if (!m) {
        var a = f.getTypeOfSymbolAtLocation(t.symbol, t.node);
        a = f.getBaseTypeOfLiteralType(a);
        i = f.typeToTypeNode(a, n, 1);
       }
       var o = e.createParameter(undefined, undefined, undefined, r, undefined, i);
       h.push(o);
       if (t.usage === 2) {
        (y || (y = [])).push(t);
       }
       v.push(e.createIdentifier(r));
      });
      var b = e.arrayFrom(u.values()).map(function(e) {
       return {
        type: e,
        declaration: C(e)
       };
      });
      var x = b.sort(D);
      var k = x.length === 0 ? undefined : x.map(function(e) {
       return e.declaration;
      });
      var S = k !== undefined ? k.map(function(t) {
       return e.createTypeReferenceNode(t.name, undefined);
      }) : undefined;
      if (e.isExpression(t) && !m) {
       var w = f.getContextualType(t);
       g = f.typeToTypeNode(w, n, 1);
      }
      var N = E(t, i, y, l, !!(a.facts & s.HasReturn)), A = N.body, P = N.returnValueProperty;
      e.suppressLeadingAndTrailingTrivia(A);
      var I;
      if (e.isClassLike(n)) {
       var L = m ? [] : [ e.createToken(112) ];
       if (a.facts & s.InStaticRegion) {
        L.push(e.createToken(115));
       }
       if (a.facts & s.IsAsyncFunction) {
        L.push(e.createToken(120));
       }
       I = e.createMethod(undefined, L.length ? L : undefined, a.facts & s.IsGenerator ? e.createToken(39) : undefined, _, undefined, k, h, g, A);
      } else {
       I = e.createFunctionDeclaration(undefined, a.facts & s.IsAsyncFunction ? [ e.createToken(120) ] : undefined, a.facts & s.IsGenerator ? e.createToken(39) : undefined, _, k, h, g, A);
      }
      var R = e.textChanges.ChangeTracker.fromContext(o);
      var B = (M(a.range) ? e.last(a.range) : a.range).end;
      var z = F(B, n);
      if (z) {
       R.insertNodeBefore(o.file, z, I, true);
      } else {
       R.insertNodeAtEndOfScope(o.file, n, I);
      }
      var j = [];
      var q = T(n, a, p);
      var U = e.createCall(q, S, v);
      if (a.facts & s.IsGenerator) {
       U = e.createYield(e.createToken(39), U);
      }
      if (a.facts & s.IsAsyncFunction) {
       U = e.createAwait(U);
      }
      if (i.length && !y) {
       e.Debug.assert(!P);
       e.Debug.assert(!(a.facts & s.HasReturn));
       if (i.length === 1) {
        var J = i[0];
        j.push(e.createVariableStatement(undefined, e.createVariableDeclarationList([ e.createVariableDeclaration(e.getSynthesizedDeepClone(J.name), e.getSynthesizedDeepClone(J.type), U) ], J.parent.flags)));
       } else {
        var K = [];
        var V = [];
        var W = i[0].parent.flags;
        var H = false;
        for (var G = 0, $ = i; G < $.length; G++) {
         var J = $[G];
         K.push(e.createBindingElement(undefined, undefined, e.getSynthesizedDeepClone(J.name)));
         var X = f.typeToTypeNode(f.getBaseTypeOfLiteralType(f.getTypeAtLocation(J)), n, 1);
         V.push(e.createPropertySignature(undefined, J.symbol.name, undefined, X, undefined));
         H = H || J.type !== undefined;
         W = W & J.parent.flags;
        }
        var Q = H ? e.createTypeLiteralNode(V) : undefined;
        if (Q) {
         e.setEmitFlags(Q, 1);
        }
        j.push(e.createVariableStatement(undefined, e.createVariableDeclarationList([ e.createVariableDeclaration(e.createObjectBindingPattern(K), Q, U) ], W)));
       }
      } else if (i.length || y) {
       if (i.length) {
        for (var Y = 0, Z = i; Y < Z.length; Y++) {
         var J = Z[Y];
         var ee = J.parent.flags;
         if (ee & 2) {
          ee = ee & ~2 | 1;
         }
         j.push(e.createVariableStatement(undefined, e.createVariableDeclarationList([ e.createVariableDeclaration(J.symbol.name, oe(J.type)) ], ee)));
        }
       }
       if (P) {
        j.push(e.createVariableStatement(undefined, e.createVariableDeclarationList([ e.createVariableDeclaration(P, oe(g)) ], 1)));
       }
       var te = O(i, y);
       if (P) {
        te.unshift(e.createShorthandPropertyAssignment(P));
       }
       if (te.length === 1) {
        e.Debug.assert(!P);
        j.push(e.createStatement(e.createAssignment(te[0].name, U)));
        if (a.facts & s.HasReturn) {
         j.push(e.createReturn());
        }
       } else {
        j.push(e.createStatement(e.createAssignment(e.createObjectLiteral(te), U)));
        if (P) {
         j.push(e.createReturn(e.createIdentifier(P)));
        }
       }
      } else {
       if (a.facts & s.HasReturn) {
        j.push(e.createReturn(U));
       } else if (M(a.range)) {
        j.push(e.createStatement(U));
       } else {
        j.push(U);
       }
      }
      if (M(a.range)) {
       R.replaceNodeRangeWithNodes(o.file, e.first(a.range), e.last(a.range), j);
      } else {
       R.replaceNodeWithNodes(o.file, a.range, j);
      }
      var ne = R.getChanges();
      var re = M(a.range) ? e.first(a.range) : a.range;
      var ie = re.getSourceFile().fileName;
      var ae = e.getRenameLocation(ne, ie, p, false);
      return {
       renameFilename: ie,
       renameLocation: ae,
       edits: ne
      };
      function oe(t) {
       if (t === undefined) {
        return undefined;
       }
       var n = e.getSynthesizedDeepClone(t);
       var r = n;
       while (e.isParenthesizedTypeNode(r)) {
        r = r.type;
       }
       return e.isUnionTypeNode(r) && e.find(r.types, function(e) {
        return e.kind === 140;
       }) ? n : e.createUnionTypeNode([ n, e.createKeywordTypeNode(140) ]);
      }
     }
     function S(t, n, r, i, a) {
      var o = r.substitutions;
      var c = a.program.getTypeChecker();
      var u = n.getSourceFile();
      var f = e.getUniqueName(e.isClassLike(n) ? "newProperty" : "newLocal", u);
      var d = e.isInJavaScriptFile(n);
      var p = d || !c.isContextSensitive(t) ? undefined : c.typeToTypeNode(c.getContextualType(t), n, 1);
      var m = N(t, o);
      e.suppressLeadingAndTrailingTrivia(m);
      var _ = e.textChanges.ChangeTracker.fromContext(a);
      if (e.isClassLike(n)) {
       e.Debug.assert(!d);
       var g = [];
       g.push(e.createToken(112));
       if (i & s.InStaticRegion) {
        g.push(e.createToken(115));
       }
       g.push(e.createToken(132));
       var h = e.createProperty(undefined, g, f, undefined, p, m);
       var v = e.createPropertyAccess(i & s.InStaticRegion ? e.createIdentifier(n.name.getText()) : e.createThis(), e.createIdentifier(f));
       var y = t.pos;
       var b = P(y, n);
       _.insertNodeBefore(a.file, b, h, true);
       _.replaceNode(a.file, t, v);
      } else {
       var x = e.createVariableDeclaration(f, p, m);
       var k = w(t, n);
       if (k) {
        _.insertNodeBefore(a.file, k, x);
        var v = e.createIdentifier(f);
        _.replaceNode(a.file, t, v);
       } else if (t.parent.kind === 219 && n === e.findAncestor(t, l)) {
        var S = e.createVariableStatement(undefined, e.createVariableDeclarationList([ x ], 2));
        _.replaceNode(a.file, t.parent, S);
       } else {
        var S = e.createVariableStatement(undefined, e.createVariableDeclarationList([ x ], 2));
        var b = I(t, n);
        if (b.pos === 0) {
         _.insertNodeAtTopOfFile(a.file, S, false);
        } else {
         _.insertNodeBefore(a.file, b, S, false);
        }
        if (t.parent.kind === 219) {
         _.delete(a.file, t.parent);
        } else {
         var v = e.createIdentifier(f);
         _.replaceNode(a.file, t, v);
        }
       }
      }
      var C = _.getChanges();
      var D = t.getSourceFile().fileName;
      var T = e.getRenameLocation(C, D, f, true);
      return {
       renameFilename: D,
       renameLocation: T,
       edits: C
      };
     }
     function w(t, n) {
      var r;
      while (t !== undefined && t !== n) {
       if (e.isVariableDeclaration(t) && t.initializer === r && e.isVariableDeclarationList(t.parent) && t.parent.declarations.length > 1) {
        return t;
       }
       r = t;
       t = t.parent;
      }
     }
     function C(e) {
      var t;
      var n = e.symbol;
      if (n && n.declarations) {
       for (var r = 0, i = n.declarations; r < i.length; r++) {
        var a = i[r];
        if (t === undefined || a.pos < t.pos) {
         t = a;
        }
       }
      }
      return t;
     }
     function D(t, n) {
      var r = t.type, i = t.declaration;
      var a = n.type, o = n.declaration;
      return e.compareProperties(i, o, "pos", e.compareValues) || e.compareStringsCaseSensitive(r.symbol ? r.symbol.getName() : "", a.symbol ? a.symbol.getName() : "") || e.compareValues(r.id, a.id);
     }
     function T(t, n, r) {
      var i = e.createIdentifier(r);
      if (e.isClassLike(t)) {
       var a = n.facts & s.InStaticRegion ? e.createIdentifier(t.name.text) : e.createThis();
       return e.createPropertyAccess(a, i);
      } else {
       return i;
      }
     }
     function E(t, n, r, i, a) {
      var o = r !== undefined || n.length > 0;
      if (e.isBlock(t) && !o && i.size === 0) {
       return {
        body: e.createBlock(t.statements, true),
        returnValueProperty: undefined
       };
      }
      var s;
      var c = false;
      var u = e.createNodeArray(e.isBlock(t) ? t.statements.slice(0) : [ e.isStatement(t) ? t : e.createReturn(t) ]);
      if (o || i.size) {
       var l = e.visitNodes(u, d).slice();
       if (o && !a && e.isStatement(t)) {
        var f = O(n, r);
        if (f.length === 1) {
         l.push(e.createReturn(f[0].name));
        } else {
         l.push(e.createReturn(e.createObjectLiteral(f)));
        }
       }
       return {
        body: e.createBlock(l, true),
        returnValueProperty: s
       };
      } else {
       return {
        body: e.createBlock(u, true),
        returnValueProperty: undefined
       };
      }
      function d(t) {
       if (!c && t.kind === 228 && o) {
        var a = O(n, r);
        if (t.expression) {
         if (!s) {
          s = "__return";
         }
         a.unshift(e.createPropertyAssignment(s, e.visitNode(t.expression, d)));
        }
        if (a.length === 1) {
         return e.createReturn(a[0].name);
        } else {
         return e.createReturn(e.createObjectLiteral(a));
        }
       } else {
        var u = c;
        c = c || e.isFunctionLikeDeclaration(t) || e.isClassLike(t);
        var l = i.get(e.getNodeId(t).toString());
        var f = l ? e.getSynthesizedDeepClone(l) : e.visitEachChild(t, d, e.nullTransformationContext);
        c = u;
        return f;
       }
      }
     }
     function N(t, n) {
      return n.size ? r(t) : t;
      function r(t) {
       var i = n.get(e.getNodeId(t).toString());
       return i ? e.getSynthesizedDeepClone(i) : e.visitEachChild(t, r, e.nullTransformationContext);
      }
     }
     function A(t) {
      if (e.isFunctionLikeDeclaration(t)) {
       var n = t.body;
       if (e.isBlock(n)) {
        return n.statements;
       }
      } else if (e.isModuleBlock(t) || e.isSourceFile(t)) {
       return t.statements;
      } else if (e.isClassLike(t)) {
       return t.members;
      } else {
       e.assertTypeIsNever(t);
      }
      return e.emptyArray;
     }
     function F(t, n) {
      return e.find(A(n), function(n) {
       return n.pos >= t && e.isFunctionLikeDeclaration(n) && !e.isConstructorDeclaration(n);
      });
     }
     function P(t, n) {
      var r = n.members;
      e.Debug.assert(r.length > 0);
      var i;
      var a = true;
      for (var o = 0, s = r; o < s.length; o++) {
       var c = s[o];
       if (c.pos > t) {
        return i || r[0];
       }
       if (a && !e.isPropertyDeclaration(c)) {
        if (i !== undefined) {
         return c;
        }
        a = false;
       }
       i = c;
      }
      if (i === undefined) return e.Debug.fail();
      return i;
     }
     function I(t, n) {
      e.Debug.assert(!e.isClassLike(n));
      var r;
      for (var i = t; i !== n; i = i.parent) {
       if (l(i)) {
        r = i;
       }
      }
      for (var i = (r || t).parent; ;i = i.parent) {
       if (j(i)) {
        var a = void 0;
        for (var o = 0, s = i.statements; o < s.length; o++) {
         var c = s[o];
         if (c.pos > t.pos) {
          break;
         }
         a = c;
        }
        if (!a && e.isCaseClause(i)) {
         e.Debug.assert(e.isSwitchStatement(i.parent.parent));
         return i.parent.parent;
        }
        return e.Debug.assertDefined(a);
       }
       e.Debug.assert(i !== n, "Didn't encounter a block-like before encountering scope");
      }
     }
     function O(t, n) {
      var r = e.map(t, function(t) {
       return e.createShorthandPropertyAssignment(t.symbol.name);
      });
      var i = e.map(n, function(t) {
       return e.createShorthandPropertyAssignment(t.symbol.name);
      });
      return r === undefined ? i : i === undefined ? r : r.concat(i);
     }
     function M(t) {
      return e.isArray(t);
     }
     function L(t, n) {
      return M(t.range) ? {
       pos: e.first(t.range).getStart(n),
       end: e.last(t.range).getEnd()
      } : t.range;
     }
     var R;
     (function(e) {
      e[e["Read"] = 1] = "Read";
      e[e["Write"] = 2] = "Write";
     })(R || (R = {}));
     function B(t, n, r, i, a, c) {
      var u = e.createMap();
      var l = [];
      var f = [];
      var d = [];
      var p = [];
      var m = [];
      var _ = e.createMap();
      var g = [];
      var h;
      var v = !M(t.range) ? t.range : t.range.length === 1 && e.isExpressionStatement(t.range[0]) ? t.range[0].expression : undefined;
      var y;
      if (v === undefined) {
       var b = t.range;
       var x = e.first(b).getStart();
       var k = e.last(b).end;
       y = e.createFileDiagnostic(i, x, k - x, o.expressionExpected);
      } else if (a.getTypeAtLocation(v).flags & (4096 | 32768)) {
       y = e.createDiagnosticForNode(v, o.uselessConstantType);
      }
      for (var S = 0, w = n; S < w.length; S++) {
       var C = w[S];
       l.push({
        usages: e.createMap(),
        typeParameterUsages: e.createMap(),
        substitutions: e.createMap()
       });
       f.push(e.createMap());
       d.push(e.isFunctionLikeDeclaration(C) && C.kind !== 237 ? [ e.createDiagnosticForNode(C, o.cannotExtractToOtherFunctionLike) ] : []);
       var D = [];
       if (y) {
        D.push(y);
       }
       if (e.isClassLike(C) && e.isInJavaScriptFile(C)) {
        D.push(e.createDiagnosticForNode(C, o.cannotExtractToJSClass));
       }
       if (e.isArrowFunction(C) && !e.isBlock(C.body)) {
        D.push(e.createDiagnosticForNode(C, o.cannotExtractToExpressionArrowFunction));
       }
       p.push(D);
      }
      var T = e.createMap();
      var E = M(t.range) ? e.createBlock(t.range) : t.range;
      var N = M(t.range) ? e.first(t.range) : t.range;
      var A = J(N);
      V(E);
      if (A && !M(t.range)) {
       var F = a.getContextualType(t.range);
       K(F);
      }
      if (u.size > 0) {
       var P = e.createMap();
       var I = 0;
       for (var O = N; O !== undefined && I < n.length; O = O.parent) {
        if (O === n[I]) {
         P.forEach(function(e, t) {
          l[I].typeParameterUsages.set(t, e);
         });
         I++;
        }
        if (e.isDeclarationWithTypeParameters(O)) {
         for (var L = 0, R = e.getEffectiveTypeParameterDeclarations(O); L < R.length; L++) {
          var B = R[L];
          var z = a.getTypeAtLocation(B);
          if (u.has(z.id.toString())) {
           P.set(z.id.toString(), z);
          }
         }
        }
       }
       e.Debug.assert(I === n.length);
      }
      if (m.length) {
       var j = e.isBlockScope(n[0], n[0].parent) ? n[0] : e.getEnclosingBlockScopeContainer(n[0]);
       e.forEachChild(j, G);
      }
      var q = function(n) {
       var r = l[n];
       if (n > 0 && (r.usages.size > 0 || r.typeParameterUsages.size > 0)) {
        var i = M(t.range) ? t.range[0] : t.range;
        p[n].push(e.createDiagnosticForNode(i, o.cannotAccessVariablesFromNestedScopes));
       }
       var a = false;
       var s;
       l[n].usages.forEach(function(t) {
        if (t.usage === 2) {
         a = true;
         if (t.symbol.flags & 106500 && t.symbol.valueDeclaration && e.hasModifier(t.symbol.valueDeclaration, 64)) {
          s = t.symbol.valueDeclaration;
         }
        }
       });
       e.Debug.assert(M(t.range) || g.length === 0);
       if (a && !M(t.range)) {
        var c = e.createDiagnosticForNode(t.range, o.cannotWriteInExpression);
        d[n].push(c);
        p[n].push(c);
       } else if (s && n > 0) {
        var c = e.createDiagnosticForNode(s, o.cannotExtractReadonlyPropertyInitializerOutsideConstructor);
        d[n].push(c);
        p[n].push(c);
       } else if (h) {
        var c = e.createDiagnosticForNode(h, o.cannotExtractExportedEntity);
        d[n].push(c);
        p[n].push(c);
       }
      };
      for (var U = 0; U < n.length; U++) {
       q(U);
      }
      return {
       target: E,
       usagesPerScope: l,
       functionErrorsPerScope: d,
       constantErrorsPerScope: p,
       exposedVariableDeclarations: g
      };
      function J(t) {
       return !!e.findAncestor(t, function(t) {
        return e.isDeclarationWithTypeParameters(t) && e.getEffectiveTypeParameterDeclarations(t).length !== 0;
       });
      }
      function K(e) {
       var t = a.getSymbolWalker(function() {
        return c.throwIfCancellationRequested(), true;
       });
       var n = t.walkType(e).visitedTypes;
       for (var r = 0, i = n; r < i.length; r++) {
        var o = i[r];
        if (o.isTypeParameter()) {
         u.set(o.id.toString(), o);
        }
       }
      }
      function V(t, n) {
       if (n === void 0) {
        n = 1;
       }
       if (A) {
        var r = a.getTypeAtLocation(t);
        K(r);
       }
       if (e.isDeclaration(t) && t.symbol) {
        m.push(t);
       }
       if (e.isAssignmentExpression(t)) {
        V(t.left, 2);
        V(t.right);
       } else if (e.isUnaryExpressionWithWrite(t)) {
        V(t.operand, 2);
       } else if (e.isPropertyAccessExpression(t) || e.isElementAccessExpression(t)) {
        e.forEachChild(t, V);
       } else if (e.isIdentifier(t)) {
        if (!t.parent) {
         return;
        }
        if (e.isQualifiedName(t.parent) && t !== t.parent.left) {
         return;
        }
        if (e.isPropertyAccessExpression(t.parent) && t !== t.parent.expression) {
         return;
        }
        W(t, n, e.isPartOfTypeNode(t));
       } else {
        e.forEachChild(t, V);
       }
      }
      function W(t, r, i) {
       var a = H(t, r, i);
       if (a) {
        for (var o = 0; o < n.length; o++) {
         var s = f[o].get(a);
         if (s) {
          l[o].substitutions.set(e.getNodeId(t).toString(), s);
         }
        }
       }
      }
      function H(c, u, m) {
       var _ = $(c);
       if (!_) {
        return undefined;
       }
       var g = e.getSymbolId(_).toString();
       var h = T.get(g);
       if (h && h >= u) {
        return g;
       }
       T.set(g, u);
       if (h) {
        for (var v = 0, y = l; v < y.length; v++) {
         var b = y[v];
         var x = b.usages.get(c.text);
         if (x) {
          b.usages.set(c.text, {
           usage: u,
           symbol: _,
           node: c
          });
         }
        }
        return g;
       }
       var k = _.getDeclarations();
       var S = k && e.find(k, function(e) {
        return e.getSourceFile() === i;
       });
       if (!S) {
        return undefined;
       }
       if (e.rangeContainsStartEnd(r, S.getStart(), S.end)) {
        return undefined;
       }
       if (t.facts & s.IsGenerator && u === 2) {
        var w = e.createDiagnosticForNode(c, o.cannotExtractRangeThatContainsWritesToReferencesLocatedOutsideOfTheTargetRangeInGenerators);
        for (var C = 0, D = d; C < D.length; C++) {
         var E = D[C];
         E.push(w);
        }
        for (var N = 0, A = p; N < A.length; N++) {
         var E = A[N];
         E.push(w);
        }
       }
       for (var F = 0; F < n.length; F++) {
        var P = n[F];
        var I = a.resolveName(_.name, P, _.flags, false);
        if (I === _) {
         continue;
        }
        if (!f[F].has(g)) {
         var O = X(_.exportSymbol || _, P, m);
         if (O) {
          f[F].set(g, O);
         } else if (m) {
          if (!(_.flags & 262144)) {
           var w = e.createDiagnosticForNode(c, o.typeWillNotBeVisibleInTheNewScope);
           d[F].push(w);
           p[F].push(w);
          }
         } else {
          l[F].usages.set(c.text, {
           usage: u,
           symbol: _,
           node: c
          });
         }
        }
       }
       return g;
      }
      function G(n) {
       if (n === t.range || M(t.range) && t.range.indexOf(n) >= 0) {
        return;
       }
       var r = e.isIdentifier(n) ? $(n) : a.getSymbolAtLocation(n);
       if (r) {
        var i = e.find(m, function(e) {
         return e.symbol === r;
        });
        if (i) {
         if (e.isVariableDeclaration(i)) {
          var o = i.symbol.id.toString();
          if (!_.has(o)) {
           g.push(i);
           _.set(o, true);
          }
         } else {
          h = h || i;
         }
        }
       }
       e.forEachChild(n, G);
      }
      function $(t) {
       return t.parent && e.isShorthandPropertyAssignment(t.parent) && t.parent.name === t ? a.getShorthandAssignmentValueSymbol(t.parent) : a.getSymbolAtLocation(t);
      }
      function X(t, n, r) {
       if (!t) {
        return undefined;
       }
       var i = t.getDeclarations();
       if (i && i.some(function(e) {
        return e.parent === n;
       })) {
        return e.createIdentifier(t.name);
       }
       var a = X(t.parent, n, r);
       if (a === undefined) {
        return undefined;
       }
       return r ? e.createQualifiedName(a, e.createIdentifier(t.name)) : e.createPropertyAccess(a, t.name);
      }
     }
     function z(e) {
      var t = e.parent;
      switch (t.kind) {
      case 276:
       return false;
      }
      switch (e.kind) {
      case 9:
       return t.kind !== 247 && t.kind !== 251;

      case 206:
      case 182:
      case 184:
       return false;

      case 71:
       return t.kind !== 184 && t.kind !== 251 && t.kind !== 255;
      }
      return true;
     }
     function j(e) {
      switch (e.kind) {
      case 216:
      case 277:
      case 243:
      case 269:
       return true;

      default:
       return false;
      }
     }
    })(n = t.extractSymbol || (t.extractSymbol = {}));
   })(t = e.refactor || (e.refactor = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n;
    (function(n) {
     var r = "Generate 'get' and 'set' accessors";
     var i = e.Diagnostics.Generate_get_and_set_accessors.message;
     t.registerRefactor(r, {
      getEditsForAction: o,
      getAvailableActions: a
     });
     function a(e) {
      if (!p(e)) return undefined;
      return [ {
       name: r,
       description: i,
       actions: [ {
        name: r,
        description: i
       } ]
      } ];
     }
     function o(t, n) {
      var r = t.file;
      var i = p(t);
      if (!i) return undefined;
      var a = e.isSourceFileJavaScript(r);
      var o = e.textChanges.ChangeTracker.fromContext(t);
      var s = i.isStatic, c = i.isReadonly, u = i.fieldName, l = i.accessorName, d = i.originalName, g = i.type, h = i.container, x = i.declaration, k = i.renameAccessor;
      e.suppressLeadingAndTrailingTrivia(u);
      e.suppressLeadingAndTrailingTrivia(x);
      e.suppressLeadingAndTrailingTrivia(h);
      var S = e.isClassLike(h);
      var w = e.getModifierFlags(x) & ~64;
      var C = S ? !w || w & 8 ? f(a, s, 114) : e.createNodeArray(e.createModifiersFromModifierFlags(w)) : undefined;
      var D = S ? f(a, s, 112) : undefined;
      v(o, r, x, u, D);
      var T = m(u, l, g, C, s, h);
      e.suppressLeadingAndTrailingTrivia(T);
      y(o, r, T, x, h);
      if (c) {
       var E = e.getFirstConstructorWithBody(h);
       if (E) {
        b(o, t, E, u, d);
       }
      } else {
       var N = _(u, l, g, C, s, h);
       e.suppressLeadingAndTrailingTrivia(N);
       y(o, r, N, x, h);
      }
      var A = o.getChanges();
      var F = r.fileName;
      var P = k ? l : u;
      var I = e.isIdentifier(P) ? 0 : -1;
      var O = I + e.getRenameLocation(A, F, P.text, e.isParameter(x));
      return {
       renameFilename: F,
       renameLocation: O,
       edits: A
      };
     }
     function s(t) {
      return e.isIdentifier(t) || e.isStringLiteral(t);
     }
     function c(t) {
      return e.isParameterPropertyDeclaration(t) || e.isPropertyDeclaration(t) || e.isPropertyAssignment(t);
     }
     function u(t, n) {
      return e.isIdentifier(n) ? e.createIdentifier(t) : e.createLiteral(t);
     }
     function l(t, n, r) {
      var i = n ? r.name : e.createThis();
      return e.isIdentifier(t) ? e.createPropertyAccess(i, t) : e.createElementAccess(i, e.createLiteral(t));
     }
     function f(t, n, r) {
      var i = e.append(!t ? [ e.createToken(r) ] : undefined, n ? e.createToken(115) : undefined);
      return i && e.createNodeArray(i);
     }
     function d(e) {
      return e.charCodeAt(0) === 95;
     }
     function p(t) {
      var n = t.file, r = t.startPosition, i = t.endPosition;
      var a = e.getTokenAtPosition(n, r);
      var o = e.findAncestor(a.parent, c);
      var l = 28 | 32 | 64;
      if (!o || !e.nodeOverlapsWithStartEnd(o.name, n, r, i) || !s(o.name) || (e.getModifierFlags(o) | l) !== l) return undefined;
      var f = o.name.text;
      var p = d(f);
      var m = u(p ? f : e.getUniqueName("_" + f, n), o.name);
      var _ = u(p ? e.getUniqueName(f.substring(1), n) : f, o.name);
      return {
       isStatic: e.hasStaticModifier(o),
       isReadonly: e.hasReadonlyModifier(o),
       type: e.getTypeAnnotationNode(o),
       container: o.kind === 149 ? o.parent.parent : o.parent,
       originalName: o.name,
       declaration: o,
       fieldName: m,
       accessorName: _,
       renameAccessor: p
      };
     }
     function m(t, n, r, i, a, o) {
      return e.createGetAccessor(undefined, i, n, undefined, r, e.createBlock([ e.createReturn(l(t, a, o)) ], true));
     }
     function _(t, n, r, i, a, o) {
      return e.createSetAccessor(undefined, i, n, [ e.createParameter(undefined, undefined, undefined, e.createIdentifier("value"), undefined, r) ], e.createBlock([ e.createStatement(e.createAssignment(l(t, a, o), e.createIdentifier("value"))) ], true));
     }
     function g(t, n, r, i, a) {
      var o = e.updateProperty(r, r.decorators, a, i, r.questionToken || r.exclamationToken, r.type, r.initializer);
      t.replaceNode(n, r, o);
     }
     function h(t, n, r, i) {
      var a = e.updatePropertyAssignment(r, i, r.initializer);
      t.replacePropertyAssignment(n, r, a);
     }
     function v(t, n, r, i, a) {
      if (e.isPropertyDeclaration(r)) {
       g(t, n, r, i, a);
      } else if (e.isPropertyAssignment(r)) {
       h(t, n, r, i);
      } else {
       t.replaceNode(n, r, e.updateParameter(r, r.decorators, a, r.dotDotDotToken, e.cast(i, e.isIdentifier), r.questionToken, r.type, r.initializer));
      }
     }
     function y(t, n, r, i, a) {
      e.isParameterPropertyDeclaration(i) ? t.insertNodeAtClassStart(n, a, r) : e.isPropertyAssignment(i) ? t.insertNodeAfterComma(n, i, r) : t.insertNodeAfter(n, i, r);
     }
     function b(t, n, r, i, a) {
      if (!r.body) return;
      var o = n.file, s = n.program, c = n.cancellationToken;
      var u = e.mapDefined(e.FindAllReferences.getReferenceEntriesForNode(a.parent.pos, a, s, [ o ], c), function(t) {
       return t.type === "node" && e.rangeContainsRange(r, t.node) && e.isIdentifier(t.node) && e.isWriteAccess(t.node) ? t.node : undefined;
      });
      e.forEach(u, function(n) {
       var r = n.parent;
       var a = e.createIdentifier(i.text);
       var s = e.isBinaryExpression(r) ? e.updateBinary(r, a, r.right, r.operatorToken) : e.isPropertyAccessExpression(r) ? e.updatePropertyAccess(r, r.expression, a) : e.Debug.fail("Unexpected write access token");
       t.replaceNode(o, r, s);
      });
     }
    })(n = t.generateGetAccessorAndSetAccessor || (t.generateGetAccessorAndSetAccessor = {}));
   })(t = e.refactor || (e.refactor = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n = "Move to a new file";
    t.registerRefactor(n, {
     getAvailableActions: function(t) {
      if (!t.preferences.allowTextChangesInNewFiles || a(t) === undefined) return undefined;
      var r = e.getLocaleSpecificMessage(e.Diagnostics.Move_to_a_new_file);
      return [ {
       name: n,
       description: r,
       actions: [ {
        name: n,
        description: r
       } ]
      } ];
     },
     getEditsForAction: function(t, r) {
      e.Debug.assert(r === n);
      var o = e.Debug.assertDefined(a(t));
      var s = e.textChanges.ChangeTracker.with(t, function(e) {
       return i(t.file, t.program, o, e, t.host, t.preferences);
      });
      return {
       edits: s,
       renameFilename: undefined,
       renameLocation: undefined
      };
     }
    });
    function r(t) {
     var n = t.file;
     var r = e.createTextRangeFromSpan(e.getRefactorContextSpan(t));
     var i = n.statements;
     var a = e.findIndex(i, function(e) {
      return e.end > r.pos;
     });
     if (a === -1) return undefined;
     var o = i[a];
     if (e.isNamedDeclaration(o) && o.name && e.rangeContainsRange(o.name, r)) {
      return {
       toMove: [ i[a] ],
       afterLast: i[a + 1]
      };
     }
     if (r.pos > o.getStart(n)) return undefined;
     var s = e.findIndex(i, function(e) {
      return e.end > r.end;
     }, a);
     if (s !== -1 && (s === 0 || i[s].getStart(n) < r.end)) return undefined;
     return {
      toMove: i.slice(a, s === -1 ? i.length : s),
      afterLast: s === -1 ? undefined : i[s]
     };
    }
    function i(t, n, r, i, a, o) {
     var u = n.getTypeChecker();
     var l = E(t, r.all, u);
     var f = e.getDirectoryPath(t.fileName);
     var d = e.extensionFromPath(t.fileName);
     var p = D(T(l.movedSymbols), d, f, a);
     var m = p + d;
     i.createNewFile(t, e.combinePaths(f, m), c(t, l, i, r, n, p, o));
     s(n, i, t.fileName, m, e.hostGetCanonicalFileName(a));
    }
    function a(t) {
     var n = r(t);
     if (n === undefined) return undefined;
     var i = [];
     var a = [];
     var s = n.toMove, c = n.afterLast;
     e.getRangesWhere(s, function(e) {
      return !o(e);
     }, function(e, t) {
      for (var n = e; n < t; n++) i.push(s[n]);
      a.push({
       first: s[e],
       afterLast: c
      });
     });
     return i.length === 0 ? undefined : {
      all: i,
      ranges: a
     };
    }
    function o(t) {
     switch (t.kind) {
     case 247:
      return true;

     case 246:
      return !e.hasModifier(t, 1);

     case 217:
      return t.declarationList.declarations.every(function(t) {
       return !!t.initializer && e.isRequireCall(t.initializer, true);
      });

     default:
      return false;
     }
    }
    function s(t, n, r, i, a) {
     var o = t.getCompilerOptions().configFile;
     if (!o) return;
     var s = e.normalizePath(e.combinePaths(r, "..", i));
     var c = e.getRelativePathFromFile(o.fileName, s, a);
     var u = o.statements[0] && e.tryCast(o.statements[0].expression, e.isObjectLiteralExpression);
     var l = u && e.find(u.properties, function(t) {
      return e.isPropertyAssignment(t) && e.isStringLiteral(t.name) && t.name.text === "files";
     });
     if (l && e.isArrayLiteralExpression(l.initializer)) {
      n.insertNodeInListAfter(o, e.last(l.initializer.elements), e.createLiteral(c), l.initializer.elements);
     }
    }
    function c(t, n, r, i, a, o, s) {
     var c = a.getTypeChecker();
     if (!t.externalModuleIndicator && !t.commonJsModuleIndicator) {
      u(t, i.ranges, r);
      return i.all;
     }
     var d = !!t.externalModuleIndicator;
     var p = e.getQuotePreference(t, s);
     var m = h(n.oldFileImportsFromNewFile, o, d, p);
     if (m) {
      e.insertImport(r, t, m);
     }
     l(t, i.all, r, n.unusedImportsFromOldFile, c);
     u(t, i.ranges, r);
     f(r, a, t, n.movedSymbols, o);
     return C(t, n.oldImportsNeededByNewFile, n.newFileImportsFromOldFile, r, c, d, p).concat(x(t, i.all, n.oldFileImportsFromNewFile, d));
    }
    function u(e, t, n) {
     for (var r = 0, i = t; r < i.length; r++) {
      var a = i[r], o = a.first, s = a.afterLast;
      n.deleteNodeRangeExcludingEnd(e, o, s);
     }
    }
    function l(t, n, r, i, a) {
     for (var o = 0, s = t.statements; o < s.length; o++) {
      var c = s[o];
      if (e.contains(n, c)) continue;
      g(c, function(e) {
       return k(t, e, r, function(e) {
        return i.has(a.getSymbolAtLocation(e));
       });
      });
     }
    }
    function f(t, n, r, i, a) {
     var o = n.getTypeChecker();
     var s = function(n) {
      if (n === r) return "continue";
      var s = function(s) {
       g(s, function(c) {
        if (o.getSymbolAtLocation(_(c)) !== r.symbol) return;
        var u = function(t) {
         var n = e.isBindingElement(t.parent) ? e.getPropertySymbolFromBindingElement(o, t.parent) : e.skipAlias(o.getSymbolAtLocation(t), o);
         return !!n && i.has(n);
        };
        k(n, c, t, u);
        var l = e.combinePaths(e.getDirectoryPath(_(c).text), a);
        var f = F(c, e.createLiteral(l), u);
        if (f) t.insertNodeAfter(n, s, f);
        var m = d(c);
        if (m) p(t, n, o, i, a, l, m, c);
       });
      };
      for (var c = 0, u = n.statements; c < u.length; c++) {
       var l = u[c];
       s(l);
      }
     };
     for (var c = 0, u = n.getSourceFiles(); c < u.length; c++) {
      var l = u[c];
      s(l);
     }
    }
    function d(t) {
     switch (t.kind) {
     case 247:
      return t.importClause && t.importClause.namedBindings && t.importClause.namedBindings.kind === 249 ? t.importClause.namedBindings.name : undefined;

     case 246:
      return t.name;

     case 235:
      return e.tryCast(t.name, e.isIdentifier);

     default:
      return e.Debug.assertNever(t);
     }
    }
    function p(t, n, r, i, a, o, s, c) {
     var u = e.codefix.moduleSpecifierToValidIdentifier(a, 6);
     var l = false;
     var f = [];
     e.FindAllReferences.Core.eachSymbolReferenceInFile(s, r, n, function(t) {
      if (!e.isPropertyAccessExpression(t.parent)) return;
      l = l || !!r.resolveName(u, t, 67108863, true);
      if (i.has(r.getSymbolAtLocation(t.parent.name))) {
       f.push(t);
      }
     });
     if (f.length) {
      var d = l ? e.getUniqueName(u, n) : u;
      for (var p = 0, _ = f; p < _.length; p++) {
       var g = _[p];
       t.replaceNode(n, g, e.createIdentifier(d));
      }
      t.insertNodeAfter(n, c, m(c, a, o));
     }
    }
    function m(t, n, r) {
     var i = e.createIdentifier(n);
     var a = e.createLiteral(r);
     switch (t.kind) {
     case 247:
      return e.createImportDeclaration(undefined, undefined, e.createImportClause(undefined, e.createNamespaceImport(i)), a);

     case 246:
      return e.createImportEqualsDeclaration(undefined, undefined, i, e.createExternalModuleReference(a));

     case 235:
      return e.createVariableDeclaration(i, undefined, b(a));

     default:
      return e.Debug.assertNever(t);
     }
    }
    function _(e) {
     return e.kind === 247 ? e.moduleSpecifier : e.kind === 246 ? e.moduleReference.expression : e.initializer.arguments[0];
    }
    function g(t, n) {
     if (e.isImportDeclaration(t)) {
      if (e.isStringLiteral(t.moduleSpecifier)) n(t);
     } else if (e.isImportEqualsDeclaration(t)) {
      if (e.isExternalModuleReference(t.moduleReference) && e.isStringLiteralLike(t.moduleReference.expression)) {
       n(t);
      }
     } else if (e.isVariableStatement(t)) {
      for (var r = 0, i = t.declarationList.declarations; r < i.length; r++) {
       var a = i[r];
       if (a.initializer && e.isRequireCall(a.initializer, true)) {
        n(a);
       }
      }
     }
    }
    function h(t, n, r, i) {
     var a;
     var o = [];
     t.forEach(function(t) {
      if (t.escapedName === "default") {
       a = e.createIdentifier(e.symbolNameNoDefault(t));
      } else {
       o.push(t.name);
      }
     });
     return v(a, o, n, r, i);
    }
    function v(t, n, r, i, a) {
     r = e.ensurePathIsNonModuleName(r);
     if (i) {
      var o = n.map(function(t) {
       return e.createImportSpecifier(undefined, e.createIdentifier(t));
      });
      return e.makeImportIfNecessary(t, o, r, a);
     } else {
      e.Debug.assert(!t);
      var s = n.map(function(t) {
       return e.createBindingElement(undefined, undefined, t);
      });
      return s.length ? y(e.createObjectBindingPattern(s), undefined, b(e.createLiteral(r))) : undefined;
     }
    }
    function y(t, n, r, i) {
     if (i === void 0) {
      i = 2;
     }
     return e.createVariableStatement(undefined, e.createVariableDeclarationList([ e.createVariableDeclaration(t, n, r) ], i));
    }
    function b(t) {
     return e.createCall(e.createIdentifier("require"), undefined, [ t ]);
    }
    function x(t, n, r, i) {
     return e.flatMap(n, function(n) {
      if (B(n) && !K(t, n, i) && j(n, function(t) {
       return r.has(e.Debug.assertDefined(t.symbol));
      })) {
       var a = V(n, i);
       if (a) return a;
      }
      return n;
     });
    }
    function k(t, n, r, i) {
     switch (n.kind) {
     case 247:
      S(t, n, r, i);
      break;

     case 246:
      if (i(n.name)) {
       r.delete(t, n);
      }
      break;

     case 235:
      w(t, n, r, i);
      break;

     default:
      e.Debug.assertNever(n);
     }
    }
    function S(e, t, n, r) {
     if (!t.importClause) return;
     var i = t.importClause, a = i.name, o = i.namedBindings;
     var s = !a || r(a);
     var c = !o || (o.kind === 249 ? r(o.name) : o.elements.every(function(e) {
      return r(e.name);
     }));
     if (s && c) {
      n.delete(e, t);
     } else {
      if (a && s) {
       n.delete(e, a);
      }
      if (o) {
       if (c) {
        n.delete(e, o);
       } else if (o.kind === 250) {
        for (var u = 0, l = o.elements; u < l.length; u++) {
         var f = l[u];
         if (r(f.name)) n.delete(e, f);
        }
       }
      }
     }
    }
    function w(t, n, r, i) {
     var a = n.name;
     switch (a.kind) {
     case 71:
      if (i(a)) {
       r.delete(t, a);
      }
      break;

     case 183:
      break;

     case 182:
      if (a.elements.every(function(t) {
       return e.isIdentifier(t.name) && i(t.name);
      })) {
       r.delete(t, e.isVariableDeclarationList(n.parent) && n.parent.declarations.length === 1 ? n.parent.parent : n);
      } else {
       for (var o = 0, s = a.elements; o < s.length; o++) {
        var c = s[o];
        if (e.isIdentifier(c.name) && i(c.name)) {
         r.delete(t, c.name);
        }
       }
      }
      break;
     }
    }
    function C(t, n, r, i, a, o, s) {
     var c = [];
     for (var u = 0, l = t.statements; u < l.length; u++) {
      var f = l[u];
      g(f, function(t) {
       e.append(c, F(t, _(t), function(e) {
        return n.has(a.getSymbolAtLocation(e));
       }));
      });
     }
     var d;
     var p = [];
     var m = e.nodeSeenTracker();
     r.forEach(function(n) {
      for (var r = 0, a = n.declarations; r < a.length; r++) {
       var s = a[r];
       if (!L(s)) continue;
       var c = q(s);
       if (!c) continue;
       var u = U(s);
       if (m(u)) {
        J(t, u, i, o);
       }
       if (e.hasModifier(s, 512)) {
        d = c;
       } else {
        p.push(c.text);
       }
      }
     });
     e.append(c, v(d, p, e.removeFileExtension(e.getBaseFileName(t.fileName)), o, s));
     return c;
    }
    function D(t, n, r, i) {
     var a = t;
     for (var o = 1; ;o++) {
      var s = e.combinePaths(r, a + n);
      if (!i.fileExists(s)) return a;
      a = t + "." + o;
     }
    }
    function T(t) {
     return t.forEachEntry(e.symbolNameNoDefault) || "newFile";
    }
    function E(t, n, r) {
     var i = new M();
     var a = new M();
     var o = new M();
     for (var s = 0, c = n; s < c.length; s++) {
      var u = c[s];
      j(u, function(t) {
       i.add(e.Debug.assertDefined(e.isExpressionStatement(t) ? r.getSymbolAtLocation(t.expression.left) : t.symbol));
      });
     }
     for (var l = 0, f = n; l < f.length; l++) {
      var u = f[l];
      O(u, r, function(e) {
       if (!e.declarations) return;
       for (var n = 0, r = e.declarations; n < r.length; n++) {
        var s = r[n];
        if (N(s)) {
         a.add(e);
        } else if (L(s) && R(s) === t && !i.has(e)) {
         o.add(e);
        }
       }
      });
     }
     var d = a.clone();
     var p = new M();
     for (var m = 0, _ = t.statements; m < _.length; m++) {
      var u = _[m];
      if (e.contains(n, u)) continue;
      O(u, r, function(e) {
       if (i.has(e)) p.add(e);
       d.delete(e);
      });
     }
     return {
      movedSymbols: i,
      newFileImportsFromOldFile: o,
      oldFileImportsFromNewFile: p,
      oldImportsNeededByNewFile: a,
      unusedImportsFromOldFile: d
     };
    }
    function N(t) {
     switch (t.kind) {
     case 246:
     case 251:
     case 248:
      return true;

     case 235:
      return A(t);

     case 184:
      return e.isVariableDeclaration(t.parent.parent) && A(t.parent.parent);

     default:
      return false;
     }
    }
    function A(t) {
     return e.isSourceFile(t.parent.parent.parent) && t.initializer && e.isRequireCall(t.initializer, true);
    }
    function F(t, n, r) {
     switch (t.kind) {
     case 247:
      {
       var i = t.importClause;
       if (!i) return undefined;
       var a = i.name && r(i.name) ? i.name : undefined;
       var o = i.namedBindings && P(i.namedBindings, r);
       return a || o ? e.createImportDeclaration(undefined, undefined, e.createImportClause(a, o), n) : undefined;
      }

     case 246:
      return r(t.name) ? t : undefined;

     case 235:
      {
       var s = I(t.name, r);
       return s ? y(s, t.type, b(n), t.parent.flags) : undefined;
      }

     default:
      return e.Debug.assertNever(t);
     }
    }
    function P(t, n) {
     if (t.kind === 249) {
      return n(t.name) ? t : undefined;
     } else {
      var r = t.elements.filter(function(e) {
       return n(e.name);
      });
      return r.length ? e.createNamedImports(r) : undefined;
     }
    }
    function I(t, n) {
     switch (t.kind) {
     case 71:
      return n(t) ? t : undefined;

     case 183:
      return t;

     case 182:
      {
       var r = t.elements.filter(function(t) {
        return t.propertyName || !e.isIdentifier(t.name) || n(t.name);
       });
       return r.length ? e.createObjectBindingPattern(r) : undefined;
      }
     }
    }
    function O(t, n, r) {
     t.forEachChild(function t(i) {
      if (e.isIdentifier(i) && !e.isDeclarationName(i)) {
       var a = n.getSymbolAtLocation(i);
       if (a) r(a);
      } else {
       i.forEachChild(t);
      }
     });
    }
    var M = function() {
     function t() {
      this.map = e.createMap();
     }
     t.prototype.add = function(t) {
      this.map.set(String(e.getSymbolId(t)), t);
     };
     t.prototype.has = function(t) {
      return this.map.has(String(e.getSymbolId(t)));
     };
     t.prototype.delete = function(t) {
      this.map.delete(String(e.getSymbolId(t)));
     };
     t.prototype.forEach = function(e) {
      this.map.forEach(e);
     };
     t.prototype.forEachEntry = function(t) {
      return e.forEachEntry(this.map, t);
     };
     t.prototype.clone = function() {
      var n = new t();
      e.copyEntries(this.map, n.map);
      return n;
     };
     return t;
    }();
    function L(t) {
     return z(t) && e.isSourceFile(t.parent) || e.isVariableDeclaration(t) && e.isSourceFile(t.parent.parent.parent);
    }
    function R(t) {
     return e.isVariableDeclaration(t) ? t.parent.parent.parent : t.parent;
    }
    function B(t) {
     e.Debug.assert(e.isSourceFile(t.parent));
     return z(t) || e.isVariableStatement(t);
    }
    function z(e) {
     switch (e.kind) {
     case 237:
     case 238:
     case 242:
     case 241:
     case 240:
     case 239:
     case 246:
      return true;

     default:
      return false;
     }
    }
    function j(t, n) {
     switch (t.kind) {
     case 237:
     case 238:
     case 242:
     case 241:
     case 240:
     case 239:
     case 246:
      return n(t);

     case 217:
      return e.forEach(t.declarationList.declarations, n);

     case 219:
      {
       var r = t.expression;
       return e.isBinaryExpression(r) && e.getSpecialPropertyAssignmentKind(r) === 1 ? n(t) : undefined;
      }
     }
    }
    function q(t) {
     return t.kind === 219 ? t.expression.left.name : e.tryCast(t.name, e.isIdentifier);
    }
    function U(t) {
     return e.isVariableDeclaration(t) ? t.parent.parent : t;
    }
    function J(t, n, r, i) {
     if (K(t, n, i)) return;
     if (i) {
      if (!e.isExpressionStatement(n)) r.insertExportModifier(t, n);
     } else {
      var a = G(n);
      if (a.length !== 0) r.insertNodesAfter(t, n, a.map($));
     }
    }
    function K(t, n, r) {
     if (r) {
      return !e.isExpressionStatement(n) && e.hasModifier(n, 1);
     } else {
      return G(n).some(function(n) {
       return t.symbol.exports.has(e.escapeLeadingUnderscores(n));
      });
     }
    }
    function V(e, t) {
     return t ? [ W(e) ] : H(e);
    }
    function W(t) {
     var n = e.concatenate([ e.createModifier(84) ], t.modifiers);
     switch (t.kind) {
     case 237:
      return e.updateFunctionDeclaration(t, t.decorators, n, t.asteriskToken, t.name, t.typeParameters, t.parameters, t.type, t.body);

     case 238:
      return e.updateClassDeclaration(t, t.decorators, n, t.name, t.typeParameters, t.heritageClauses, t.members);

     case 217:
      return e.updateVariableStatement(t, n, t.declarationList);

     case 242:
      return e.updateModuleDeclaration(t, t.decorators, n, t.name, t.body);

     case 241:
      return e.updateEnumDeclaration(t, t.decorators, n, t.name, t.members);

     case 240:
      return e.updateTypeAliasDeclaration(t, t.decorators, n, t.name, t.typeParameters, t.type);

     case 239:
      return e.updateInterfaceDeclaration(t, t.decorators, n, t.name, t.typeParameters, t.heritageClauses, t.members);

     case 246:
      return e.updateImportEqualsDeclaration(t, t.decorators, n, t.name, t.moduleReference);

     case 219:
      return e.Debug.fail();

     default:
      return e.Debug.assertNever(t);
     }
    }
    function H(e) {
     return [ e ].concat(G(e).map($));
    }
    function G(t) {
     switch (t.kind) {
     case 237:
     case 238:
      return [ t.name.text ];

     case 217:
      return e.mapDefined(t.declarationList.declarations, function(t) {
       return e.isIdentifier(t.name) ? t.name.text : undefined;
      });

     case 242:
     case 241:
     case 240:
     case 239:
     case 246:
      return e.emptyArray;

     case 219:
      return e.Debug.fail();

     default:
      return e.Debug.assertNever(t);
     }
    }
    function $(t) {
     return e.createExpressionStatement(e.createBinary(e.createPropertyAccess(e.createIdentifier("exports"), e.createIdentifier(t)), 58, e.createIdentifier(t)));
    }
   })(t = e.refactor || (e.refactor = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    var n;
    (function(n) {
     var r = "Add or remove braces in an arrow function";
     var i = e.Diagnostics.Add_or_remove_braces_in_an_arrow_function.message;
     var a = "Add braces to arrow function";
     var o = "Remove braces from arrow function";
     var s = e.Diagnostics.Add_braces_to_arrow_function.message;
     var c = e.Diagnostics.Remove_braces_from_arrow_function.message;
     t.registerRefactor(r, {
      getEditsForAction: l,
      getAvailableActions: u
     });
     function u(e) {
      var t = e.file, n = e.startPosition;
      var u = d(t, n);
      if (!u) return undefined;
      return [ {
       name: r,
       description: i,
       actions: [ u.addBraces ? {
        name: a,
        description: s
       } : {
        name: o,
        description: c
       } ]
      } ];
     }
     function l(t, n) {
      var r = t.file, i = t.startPosition;
      var s = d(r, i);
      if (!s) return undefined;
      var c = s.expression, u = s.returnStatement, l = s.func;
      var p;
      if (n === a) {
       var m = e.createReturn(c);
       p = e.createBlock([ m ], true);
       e.suppressLeadingAndTrailingTrivia(p);
       e.copyComments(c, m, r, 3, true);
      } else if (n === o && u) {
       var _ = c || e.createVoidZero();
       p = f(_) ? e.createParen(_) : _;
       e.suppressLeadingAndTrailingTrivia(p);
       e.copyComments(u, p, r, 3, false);
      } else {
       e.Debug.fail("invalid action");
      }
      var g = e.textChanges.ChangeTracker.with(t, function(e) {
       return e.replaceNode(r, l.body, p);
      });
      return {
       renameFilename: undefined,
       renameLocation: undefined,
       edits: g
      };
     }
     function f(t) {
      return e.isBinaryExpression(t) && t.operatorToken.kind === 26 || e.isObjectLiteralExpression(t);
     }
     function d(t, n) {
      var r = e.getTokenAtPosition(t, n);
      var i = e.getContainingFunction(r);
      if (!i || !e.isArrowFunction(i) || (!e.rangeContainsRange(i, r) || e.rangeContainsRange(i.body, r))) return undefined;
      if (e.isExpression(i.body)) {
       return {
        func: i,
        addBraces: true,
        expression: i.body
       };
      } else if (i.body.statements.length === 1) {
       var a = e.first(i.body.statements);
       if (e.isReturnStatement(a)) {
        return {
         func: i,
         addBraces: false,
         expression: a.expression,
         returnStatement: a
        };
       }
      }
      return undefined;
     }
    })(n = t.addOrRemoveBracesToArrowFunction || (t.addOrRemoveBracesToArrowFunction = {}));
   })(t = e.refactor || (e.refactor = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   e.servicesVersion = "0.8";
   function t(t, r, i, a) {
    var o = e.isNodeKind(t) ? new n(t, r, i) : t === 71 ? new f(71, r, i) : new l(t, r, i);
    o.parent = a;
    o.flags = a.flags & 12679168;
    return o;
   }
   var n = function() {
    function t(e, t, n) {
     this.pos = t;
     this.end = n;
     this.flags = 0;
     this.transformFlags = undefined;
     this.parent = undefined;
     this.kind = e;
    }
    t.prototype.assertHasRealPosition = function(t) {
     e.Debug.assert(!e.positionIsSynthesized(this.pos) && !e.positionIsSynthesized(this.end), t || "Node must have a real position for this operation");
    };
    t.prototype.getSourceFile = function() {
     return e.getSourceFileOfNode(this);
    };
    t.prototype.getStart = function(t, n) {
     this.assertHasRealPosition();
     return e.getTokenPosOfNode(this, t, n);
    };
    t.prototype.getFullStart = function() {
     this.assertHasRealPosition();
     return this.pos;
    };
    t.prototype.getEnd = function() {
     this.assertHasRealPosition();
     return this.end;
    };
    t.prototype.getWidth = function(e) {
     this.assertHasRealPosition();
     return this.getEnd() - this.getStart(e);
    };
    t.prototype.getFullWidth = function() {
     this.assertHasRealPosition();
     return this.end - this.pos;
    };
    t.prototype.getLeadingTriviaWidth = function(e) {
     this.assertHasRealPosition();
     return this.getStart(e) - this.pos;
    };
    t.prototype.getFullText = function(e) {
     this.assertHasRealPosition();
     return (e || this.getSourceFile()).text.substring(this.pos, this.end);
    };
    t.prototype.getText = function(e) {
     this.assertHasRealPosition();
     if (!e) {
      e = this.getSourceFile();
     }
     return e.text.substring(this.getStart(e), this.getEnd());
    };
    t.prototype.getChildCount = function(e) {
     return this.getChildren(e).length;
    };
    t.prototype.getChildAt = function(e, t) {
     return this.getChildren(t)[e];
    };
    t.prototype.getChildren = function(e) {
     this.assertHasRealPosition("Node without a real position cannot be scanned and thus has no token nodes - use forEachChild and collect the result if that's fine");
     return this._children || (this._children = i(this, e));
    };
    t.prototype.getFirstToken = function(t) {
     this.assertHasRealPosition();
     var n = this.getChildren(t);
     if (!n.length) {
      return undefined;
     }
     var r = e.find(n, function(e) {
      return e.kind < 281 || e.kind > 302;
     });
     return r.kind < 146 ? r : r.getFirstToken(t);
    };
    t.prototype.getLastToken = function(t) {
     this.assertHasRealPosition();
     var n = this.getChildren(t);
     var r = e.lastOrUndefined(n);
     if (!r) {
      return undefined;
     }
     return r.kind < 146 ? r : r.getLastToken(t);
    };
    t.prototype.forEachChild = function(t, n) {
     return e.forEachChild(this, t, n);
    };
    return t;
   }();
   function i(t, n) {
    if (!e.isNodeKind(t.kind)) {
     return e.emptyArray;
    }
    var r = [];
    if (e.isJSDocCommentContainingNode(t)) {
     t.forEachChild(function(e) {
      r.push(e);
     });
     return r;
    }
    e.scanner.setText((n || t.getSourceFile()).text);
    var i = t.pos;
    var o = function(e) {
     a(r, i, e.pos, t);
     r.push(e);
     i = e.end;
    };
    var c = function(e) {
     a(r, i, e.pos, t);
     r.push(s(e, t));
     i = e.end;
    };
    e.forEach(t.jsDoc, o);
    i = t.pos;
    t.forEachChild(o, c);
    a(r, i, t.end, t);
    e.scanner.setText(undefined);
    return r;
   }
   function a(n, r, i, a) {
    e.scanner.setTextPos(r);
    while (r < i) {
     var o = e.scanner.scan();
     var s = e.scanner.getTextPos();
     if (s <= i) {
      if (o === 71) {
       e.Debug.fail("Did not expect " + e.Debug.showSyntaxKind(a) + " to have an Identifier in its trivia");
      }
      n.push(t(o, r, s, a));
     }
     r = s;
     if (o === 1) {
      break;
     }
    }
   }
   function s(e, n) {
    var r = t(303, e.pos, e.end, n);
    r._children = [];
    var i = e.pos;
    for (var o = 0, s = e; o < s.length; o++) {
     var c = s[o];
     a(r._children, i, c.pos, n);
     r._children.push(c);
     i = c.end;
    }
    a(r._children, i, e.end, n);
    return r;
   }
   var c = function() {
    function t(e, t) {
     this.pos = e;
     this.end = t;
     this.flags = 0;
     this.parent = undefined;
    }
    t.prototype.getSourceFile = function() {
     return e.getSourceFileOfNode(this);
    };
    t.prototype.getStart = function(t, n) {
     return e.getTokenPosOfNode(this, t, n);
    };
    t.prototype.getFullStart = function() {
     return this.pos;
    };
    t.prototype.getEnd = function() {
     return this.end;
    };
    t.prototype.getWidth = function(e) {
     return this.getEnd() - this.getStart(e);
    };
    t.prototype.getFullWidth = function() {
     return this.end - this.pos;
    };
    t.prototype.getLeadingTriviaWidth = function(e) {
     return this.getStart(e) - this.pos;
    };
    t.prototype.getFullText = function(e) {
     return (e || this.getSourceFile()).text.substring(this.pos, this.end);
    };
    t.prototype.getText = function(e) {
     if (!e) {
      e = this.getSourceFile();
     }
     return e.text.substring(this.getStart(e), this.getEnd());
    };
    t.prototype.getChildCount = function() {
     return 0;
    };
    t.prototype.getChildAt = function() {
     return undefined;
    };
    t.prototype.getChildren = function() {
     return this.kind === 1 ? this.jsDoc || e.emptyArray : e.emptyArray;
    };
    t.prototype.getFirstToken = function() {
     return undefined;
    };
    t.prototype.getLastToken = function() {
     return undefined;
    };
    t.prototype.forEachChild = function() {
     return undefined;
    };
    return t;
   }();
   var u = function() {
    function t(e, t) {
     this.flags = e;
     this.escapedName = t;
    }
    t.prototype.getFlags = function() {
     return this.flags;
    };
    Object.defineProperty(t.prototype, "name", {
     get: function() {
      return e.symbolName(this);
     },
     enumerable: true,
     configurable: true
    });
    t.prototype.getEscapedName = function() {
     return this.escapedName;
    };
    t.prototype.getName = function() {
     return this.name;
    };
    t.prototype.getDeclarations = function() {
     return this.declarations;
    };
    t.prototype.getDocumentationComment = function(t) {
     if (!this.documentationComment) {
      this.documentationComment = e.emptyArray;
      this.documentationComment = _(this.declarations, t);
     }
     return this.documentationComment;
    };
    t.prototype.getJsDocTags = function() {
     if (this.tags === undefined) {
      this.tags = e.JsDoc.getJsDocTagsFromDeclarations(this.declarations);
     }
     return this.tags;
    };
    return t;
   }();
   var l = function(e) {
    o(t, e);
    function t(t, n, r) {
     var i = e.call(this, n, r) || this;
     i.kind = t;
     return i;
    }
    return t;
   }(c);
   var f = function(t) {
    o(n, t);
    function n(e, n, r) {
     return t.call(this, n, r) || this;
    }
    Object.defineProperty(n.prototype, "text", {
     get: function() {
      return e.idText(this);
     },
     enumerable: true,
     configurable: true
    });
    return n;
   }(c);
   f.prototype.kind = 71;
   var d = function() {
    function t(e, t) {
     this.checker = e;
     this.flags = t;
    }
    t.prototype.getFlags = function() {
     return this.flags;
    };
    t.prototype.getSymbol = function() {
     return this.symbol;
    };
    t.prototype.getProperties = function() {
     return this.checker.getPropertiesOfType(this);
    };
    t.prototype.getProperty = function(e) {
     return this.checker.getPropertyOfType(this, e);
    };
    t.prototype.getApparentProperties = function() {
     return this.checker.getAugmentedPropertiesOfType(this);
    };
    t.prototype.getCallSignatures = function() {
     return this.checker.getSignaturesOfType(this, 0);
    };
    t.prototype.getConstructSignatures = function() {
     return this.checker.getSignaturesOfType(this, 1);
    };
    t.prototype.getStringIndexType = function() {
     return this.checker.getIndexTypeOfType(this, 0);
    };
    t.prototype.getNumberIndexType = function() {
     return this.checker.getIndexTypeOfType(this, 1);
    };
    t.prototype.getBaseTypes = function() {
     return this.isClassOrInterface() ? this.checker.getBaseTypes(this) : undefined;
    };
    t.prototype.getNonNullableType = function() {
     return this.checker.getNonNullableType(this);
    };
    t.prototype.getConstraint = function() {
     return this.checker.getBaseConstraintOfType(this);
    };
    t.prototype.getDefault = function() {
     return this.checker.getDefaultFromTypeParameter(this);
    };
    t.prototype.isUnion = function() {
     return !!(this.flags & 262144);
    };
    t.prototype.isIntersection = function() {
     return !!(this.flags & 524288);
    };
    t.prototype.isUnionOrIntersection = function() {
     return !!(this.flags & 786432);
    };
    t.prototype.isLiteral = function() {
     return !!(this.flags & 192);
    };
    t.prototype.isStringLiteral = function() {
     return !!(this.flags & 64);
    };
    t.prototype.isNumberLiteral = function() {
     return !!(this.flags & 128);
    };
    t.prototype.isTypeParameter = function() {
     return !!(this.flags & 65536);
    };
    t.prototype.isClassOrInterface = function() {
     return !!(e.getObjectFlags(this) & 3);
    };
    t.prototype.isClass = function() {
     return !!(e.getObjectFlags(this) & 1);
    };
    return t;
   }();
   var p = function() {
    function t(e) {
     this.checker = e;
    }
    t.prototype.getDeclaration = function() {
     return this.declaration;
    };
    t.prototype.getTypeParameters = function() {
     return this.typeParameters;
    };
    t.prototype.getParameters = function() {
     return this.parameters;
    };
    t.prototype.getReturnType = function() {
     return this.checker.getReturnTypeOfSignature(this);
    };
    t.prototype.getDocumentationComment = function() {
     return this.documentationComment || (this.documentationComment = _(e.singleElementArray(this.declaration), this.checker));
    };
    t.prototype.getJsDocTags = function() {
     if (this.jsDocTags === undefined) {
      this.jsDocTags = this.declaration ? e.JsDoc.getJsDocTagsFromDeclarations([ this.declaration ]) : [];
     }
     return this.jsDocTags;
    };
    return t;
   }();
   function m(t) {
    return e.getJSDocTags(t).some(function(e) {
     return e.tagName.text === "inheritDoc";
    });
   }
   function _(t, n) {
    if (!t) return e.emptyArray;
    var r = e.JsDoc.getJsDocCommentsFromDeclarations(t);
    if (r.length === 0 || t.some(m)) {
     for (var i = 0, a = t; i < a.length; i++) {
      var o = a[i];
      var s = g(o, o.symbol.name, n);
      if (s) r = r.length === 0 ? s.slice() : s.concat(e.lineBreakPart(), r);
     }
    }
    return r;
   }
   function g(t, n, r) {
    return e.firstDefined(t.parent ? e.getAllSuperTypeNodes(t.parent) : e.emptyArray, function(e) {
     var t = r.getTypeAtLocation(e);
     var i = t && r.getPropertyOfType(t, n);
     var a = i && i.getDocumentationComment(r);
     return a && a.length ? a : undefined;
    });
   }
   var h = function(t) {
    o(n, t);
    function n(e, n, r) {
     return t.call(this, e, n, r) || this;
    }
    n.prototype.update = function(t, n) {
     return e.updateSourceFile(this, t, n);
    };
    n.prototype.getLineAndCharacterOfPosition = function(t) {
     return e.getLineAndCharacterOfPosition(this, t);
    };
    n.prototype.getLineStarts = function() {
     return e.getLineStarts(this);
    };
    n.prototype.getPositionOfLineAndCharacter = function(t, n) {
     return e.getPositionOfLineAndCharacter(this, t, n);
    };
    n.prototype.getLineEndOfPosition = function(e) {
     var t = this.getLineAndCharacterOfPosition(e).line;
     var n = this.getLineStarts();
     var r;
     if (t + 1 >= n.length) {
      r = this.getEnd();
     }
     if (!r) {
      r = n[t + 1] - 1;
     }
     var i = this.getFullText();
     return i[r] === "\n" && i[r - 1] === "\r" ? r - 1 : r;
    };
    n.prototype.getNamedDeclarations = function() {
     if (!this.namedDeclarations) {
      this.namedDeclarations = this.computeNamedDeclarations();
     }
     return this.namedDeclarations;
    };
    n.prototype.computeNamedDeclarations = function() {
     var t = e.createMultiMap();
     this.forEachChild(a);
     return t;
     function n(e) {
      var n = i(e);
      if (n) {
       t.add(n, e);
      }
     }
     function r(e) {
      var n = t.get(e);
      if (!n) {
       t.set(e, n = []);
      }
      return n;
     }
     function i(t) {
      var n = e.getNonAssignedNameOfDeclaration(t);
      return n && (e.isComputedPropertyName(n) && e.isPropertyAccessExpression(n.expression) ? n.expression.name.text : e.isPropertyName(n) ? e.getNameFromPropertyName(n) : undefined);
     }
     function a(t) {
      switch (t.kind) {
      case 237:
      case 194:
      case 154:
      case 153:
       var o = t;
       var s = i(o);
       if (s) {
        var c = r(s);
        var u = e.lastOrUndefined(c);
        if (u && o.parent === u.parent && o.symbol === u.symbol) {
         if (o.body && !u.body) {
          c[c.length - 1] = o;
         }
        } else {
         c.push(o);
        }
       }
       e.forEachChild(t, a);
       break;

      case 238:
      case 207:
      case 239:
      case 240:
      case 241:
      case 242:
      case 246:
      case 255:
      case 251:
      case 248:
      case 249:
      case 156:
      case 157:
      case 166:
       n(t);
       e.forEachChild(t, a);
       break;

      case 149:
       if (!e.hasModifier(t, 92)) {
        break;
       }

      case 235:
      case 184:
       {
        var l = t;
        if (e.isBindingPattern(l.name)) {
         e.forEachChild(l.name, a);
         break;
        }
        if (l.initializer) {
         a(l.initializer);
        }
       }

      case 276:
      case 152:
      case 151:
       n(t);
       break;

      case 253:
       if (t.exportClause) {
        e.forEach(t.exportClause.elements, a);
       }
       break;

      case 247:
       var f = t.importClause;
       if (f) {
        if (f.name) {
         n(f.name);
        }
        if (f.namedBindings) {
         if (f.namedBindings.kind === 249) {
          n(f.namedBindings);
         } else {
          e.forEach(f.namedBindings.elements, a);
         }
        }
       }
       break;

      case 202:
       if (e.getSpecialPropertyAssignmentKind(t) !== 0) {
        n(t);
       }

      default:
       e.forEachChild(t, a);
      }
     }
    };
    return n;
   }(n);
   var v = function() {
    function t(e, t, n) {
     this.fileName = e;
     this.text = t;
     this.skipTrivia = n;
    }
    t.prototype.getLineAndCharacterOfPosition = function(t) {
     return e.getLineAndCharacterOfPosition(this, t);
    };
    return t;
   }();
   function y() {
    return {
     getNodeConstructor: function() {
      return n;
     },
     getTokenConstructor: function() {
      return l;
     },
     getIdentifierConstructor: function() {
      return f;
     },
     getSourceFileConstructor: function() {
      return h;
     },
     getSymbolConstructor: function() {
      return u;
     },
     getTypeConstructor: function() {
      return d;
     },
     getSignatureConstructor: function() {
      return p;
     },
     getSourceMapSourceConstructor: function() {
      return v;
     }
    };
   }
   function b(t) {
    var n = true;
    for (var r in t) {
     if (e.hasProperty(t, r) && !x(r)) {
      n = false;
      break;
     }
    }
    if (n) {
     return t;
    }
    var i = {};
    for (var r in t) {
     if (e.hasProperty(t, r)) {
      var a = x(r) ? r : r.charAt(0).toLowerCase() + r.substr(1);
      i[a] = t[r];
     }
    }
    return i;
   }
   e.toEditorSettings = b;
   function x(e) {
    return !e.length || e.charAt(0) === e.charAt(0).toLowerCase();
   }
   function k(t) {
    if (t) {
     return e.map(t, function(e) {
      return e.text;
     }).join("");
    }
    return "";
   }
   e.displayPartsToString = k;
   function S() {
    return {
     target: 1,
     jsx: 1
    };
   }
   e.getDefaultCompilerOptions = S;
   function w() {
    return e.codefix.getSupportedErrorCodes();
   }
   e.getSupportedCodeFixes = w;
   var C = function() {
    function t(t, n) {
     this.host = t;
     this.currentDirectory = t.getCurrentDirectory();
     this.fileNameToEntry = e.createMap();
     var r = t.getScriptFileNames();
     for (var i = 0, a = r; i < a.length; i++) {
      var o = a[i];
      this.createEntry(o, e.toPath(o, this.currentDirectory, n));
     }
     this._compilationSettings = t.getCompilationSettings() || S();
    }
    t.prototype.compilationSettings = function() {
     return this._compilationSettings;
    };
    t.prototype.getProjectReferences = function() {
     return this.host.getProjectReferences && this.host.getProjectReferences();
    };
    t.prototype.createEntry = function(t, n) {
     var r;
     var i = this.host.getScriptSnapshot(t);
     if (i) {
      r = {
       hostFileName: t,
       version: this.host.getScriptVersion(t),
       scriptSnapshot: i,
       scriptKind: e.getScriptKind(t, this.host)
      };
     } else {
      r = t;
     }
     this.fileNameToEntry.set(n, r);
     return r;
    };
    t.prototype.getEntryByPath = function(e) {
     return this.fileNameToEntry.get(e);
    };
    t.prototype.getHostFileInformation = function(t) {
     var n = this.fileNameToEntry.get(t);
     return !e.isString(n) ? n : undefined;
    };
    t.prototype.getOrCreateEntryByPath = function(t, n) {
     var r = this.getEntryByPath(n) || this.createEntry(t, n);
     return e.isString(r) ? undefined : r;
    };
    t.prototype.getRootFileNames = function() {
     var t = [];
     this.fileNameToEntry.forEach(function(n) {
      if (e.isString(n)) {
       t.push(n);
      } else {
       if (n.scriptKind !== 6) {
        t.push(n.hostFileName);
       }
      }
     });
     return t;
    };
    t.prototype.getVersion = function(e) {
     var t = this.getHostFileInformation(e);
     return t && t.version;
    };
    t.prototype.getScriptSnapshot = function(e) {
     var t = this.getHostFileInformation(e);
     return t && t.scriptSnapshot;
    };
    return t;
   }();
   var D = function() {
    function t(e) {
     this.host = e;
    }
    t.prototype.getCurrentSourceFile = function(t) {
     var n = this.host.getScriptSnapshot(t);
     if (!n) {
      throw new Error("Could not find file: '" + t + "'.");
     }
     var r = e.getScriptKind(t, this.host);
     var i = this.host.getScriptVersion(t);
     var a;
     if (this.currentFileName !== t) {
      a = E(t, n, 6, i, true, r);
     } else if (this.currentFileVersion !== i) {
      var o = n.getChangeRange(this.currentFileScriptSnapshot);
      a = N(this.currentSourceFile, n, i, o);
     }
     if (a) {
      this.currentFileVersion = i;
      this.currentFileName = t;
      this.currentFileScriptSnapshot = n;
      this.currentSourceFile = a;
     }
     return this.currentSourceFile;
    };
    return t;
   }();
   function T(e, t, n) {
    e.version = n;
    e.scriptSnapshot = t;
   }
   function E(t, n, r, i, a, o) {
    var s = e.createSourceFile(t, e.getSnapshotText(n), r, a, o);
    T(s, n, i);
    return s;
   }
   e.createLanguageServiceSourceFile = E;
   e.disableIncrementalParsing = false;
   function N(t, n, r, i, a) {
    if (i) {
     if (r !== t.version) {
      if (!e.disableIncrementalParsing) {
       var o = void 0;
       var s = i.span.start !== 0 ? t.text.substr(0, i.span.start) : "";
       var c = e.textSpanEnd(i.span) !== t.text.length ? t.text.substr(e.textSpanEnd(i.span)) : "";
       if (i.newLength === 0) {
        o = s && c ? s + c : s || c;
       } else {
        var u = n.getText(i.span.start, i.span.start + i.newLength);
        o = s && c ? s + u + c : s ? s + u : u + c;
       }
       var l = e.updateSourceFile(t, o, i, a);
       T(l, n, r);
       l.nameTable = undefined;
       if (t !== l && t.scriptSnapshot) {
        if (t.scriptSnapshot.dispose) {
         t.scriptSnapshot.dispose();
        }
        t.scriptSnapshot = undefined;
       }
       return l;
      }
     }
    }
    return E(t.fileName, n, t.languageVersion, r, true, t.scriptKind);
   }
   e.updateLanguageServiceSourceFile = N;
   var A = function() {
    function t(e) {
     this.cancellationToken = e;
    }
    t.prototype.isCancellationRequested = function() {
     return !!this.cancellationToken && this.cancellationToken.isCancellationRequested();
    };
    t.prototype.throwIfCancellationRequested = function() {
     if (this.isCancellationRequested()) {
      throw new e.OperationCanceledException();
     }
    };
    return t;
   }();
   var F = function() {
    function t(e, t) {
     if (t === void 0) {
      t = 20;
     }
     this.hostCancellationToken = e;
     this.throttleWaitMilliseconds = t;
     this.lastCancellationCheckTime = 0;
    }
    t.prototype.isCancellationRequested = function() {
     var t = e.timestamp();
     var n = Math.abs(t - this.lastCancellationCheckTime);
     if (n >= this.throttleWaitMilliseconds) {
      this.lastCancellationCheckTime = t;
      return this.hostCancellationToken.isCancellationRequested();
     }
     return false;
    };
    t.prototype.throwIfCancellationRequested = function() {
     if (this.isCancellationRequested()) {
      throw new e.OperationCanceledException();
     }
    };
    return t;
   }();
   e.ThrottledCancellationToken = F;
   function P(t, n, i) {
    if (n === void 0) {
     n = e.createDocumentRegistry(t.useCaseSensitiveFileNames && t.useCaseSensitiveFileNames(), t.getCurrentDirectory());
    }
    if (i === void 0) {
     i = false;
    }
    var a;
    var o = new D(t);
    var s;
    var c;
    var u = 0;
    var l = new A(t.getCancellationToken && t.getCancellationToken());
    var f = t.getCurrentDirectory();
    if (!e.localizedDiagnosticMessages && t.getLocalizedDiagnosticMessages) {
     e.localizedDiagnosticMessages = t.getLocalizedDiagnosticMessages();
    }
    function d(e) {
     if (t.log) {
      t.log(e);
     }
    }
    var p = e.hostUsesCaseSensitiveFileNames(t);
    var m = e.createGetCanonicalFileName(p);
    var _ = e.getSourceMapper(m, f, d, t, function() {
     return s;
    });
    function g(e) {
     var t = s.getSourceFile(e);
     if (!t) {
      throw new Error("Could not find file: '" + e + "'.");
     }
     return t;
    }
    function h() {
     e.Debug.assert(!i);
     if (t.getProjectVersion) {
      var r = t.getProjectVersion();
      if (r) {
       if (c === r && !t.hasChangedAutomaticTypeDirectiveNames) {
        return;
       }
       c = r;
      }
     }
     var a = t.getTypeRootsVersion ? t.getTypeRootsVersion() : 0;
     if (u !== a) {
      d("TypeRoots version has changed; provide new program");
      s = undefined;
      u = a;
     }
     var o = new C(t, m);
     var g = o.getRootFileNames();
     var h = t.hasInvalidatedResolution || e.returnFalse;
     if (e.isProgramUptoDate(s, g, o.compilationSettings(), function(e) {
      return o.getVersion(e);
     }, k, h, !!t.hasChangedAutomaticTypeDirectiveNames)) {
      return;
     }
     var v = o.compilationSettings();
     var y = {
      getSourceFile: w,
      getSourceFileByPath: D,
      getCancellationToken: function() {
       return l;
      },
      getCanonicalFileName: m,
      useCaseSensitiveFileNames: function() {
       return p;
      },
      getNewLine: function() {
       return e.getNewLineCharacter(v, function() {
        return e.getNewLineOrDefaultFromHost(t);
       });
      },
      getDefaultLibFileName: function(e) {
       return t.getDefaultLibFileName(e);
      },
      writeFile: e.noop,
      getCurrentDirectory: function() {
       return f;
      },
      fileExists: k,
      readFile: function(n) {
       var r = e.toPath(n, f, m);
       var i = o && o.getEntryByPath(r);
       if (i) {
        return e.isString(i) ? undefined : e.getSnapshotText(i.scriptSnapshot);
       }
       return t.readFile && t.readFile(n);
      },
      realpath: t.realpath && function(e) {
       return t.realpath(e);
      },
      directoryExists: function(n) {
       return e.directoryProbablyExists(n, t);
      },
      getDirectories: function(e) {
       return t.getDirectories ? t.getDirectories(e) : [];
      },
      onReleaseOldSourceFile: S,
      hasInvalidatedResolution: h,
      hasChangedAutomaticTypeDirectiveNames: t.hasChangedAutomaticTypeDirectiveNames
     };
     if (t.trace) {
      y.trace = function(e) {
       return t.trace(e);
      };
     }
     if (t.resolveModuleNames) {
      y.resolveModuleNames = function(e, n, r) {
       return t.resolveModuleNames(e, n, r);
      };
     }
     if (t.resolveTypeReferenceDirectives) {
      y.resolveTypeReferenceDirectives = function(e, n) {
       return t.resolveTypeReferenceDirectives(e, n);
      };
     }
     var b = n.getKeyForCompilationSettings(v);
     var x = {
      rootNames: g,
      options: v,
      host: y,
      oldProgram: s,
      projectReferences: o.getProjectReferences()
     };
     s = e.createProgram(x);
     o = undefined;
     _.clearCache();
     s.getTypeChecker();
     return;
     function k(n) {
      var r = e.toPath(n, f, m);
      var i = o && o.getEntryByPath(r);
      return i ? !e.isString(i) : !!t.fileExists && t.fileExists(n);
     }
     function S(e, t) {
      var r = n.getKeyForCompilationSettings(t);
      n.releaseDocumentWithKey(e.path, r);
     }
     function w(t, n, r, i) {
      return D(t, e.toPath(t, f, m), n, r, i);
     }
     function D(t, r, i, a, c) {
      e.Debug.assert(o !== undefined, "getOrCreateSourceFileByPath called after typical CompilerHost lifetime, check the callstack something with a reference to an old host.");
      var u = o && o.getOrCreateEntryByPath(t, r);
      if (!u) {
       return undefined;
      }
      if (!c) {
       var l = s && s.getSourceFileByPath(r);
       if (l) {
        e.Debug.assertEqual(u.scriptKind, l.scriptKind, "Registered script kind should match new script kind.", r);
        return n.updateDocumentWithKey(t, r, v, b, u.scriptSnapshot, u.version, u.scriptKind);
       }
      }
      return n.acquireDocumentWithKey(t, r, v, b, u.scriptSnapshot, u.version, u.scriptKind);
     }
    }
    function v() {
     if (i) {
      e.Debug.assert(s === undefined);
      return undefined;
     }
     h();
     return s;
    }
    function y() {
     s = undefined;
    }
    function x() {
     if (s) {
      e.forEach(s.getSourceFiles(), function(e) {
       return n.releaseDocument(e.fileName, s.getCompilerOptions());
      });
      s = undefined;
     }
     t = undefined;
    }
    function k(e) {
     h();
     return s.getSyntacticDiagnostics(g(e), l).slice();
    }
    function S(e) {
     h();
     var t = g(e);
     var n = s.getSemanticDiagnostics(t, l);
     if (!s.getCompilerOptions().declaration) {
      return n.slice();
     }
     var r = s.getDeclarationDiagnostics(t, l);
     return n.concat(r);
    }
    function w(t) {
     h();
     return e.computeSuggestionDiagnostics(g(t), s, l);
    }
    function T() {
     h();
     return s.getOptionsDiagnostics(l).concat(s.getGlobalDiagnostics(l));
    }
    function E(n, i, a) {
     if (a === void 0) {
      a = e.emptyOptions;
     }
     var o = r({}, e.identity(a), {
      includeCompletionsForModuleExports: a.includeCompletionsForModuleExports || a.includeExternalModuleExports,
      includeCompletionsWithInsertText: a.includeCompletionsWithInsertText || a.includeInsertTextCompletions
     });
     h();
     return e.Completions.getCompletionsAtPosition(t, s, d, g(n), i, o, a.triggerCharacter);
    }
    function N(n, r, i, a, o, c) {
     if (c === void 0) {
      c = e.emptyOptions;
     }
     h();
     return e.Completions.getCompletionEntryDetails(s, d, g(n), r, {
      name: i,
      source: o
     }, t, a && e.formatting.getFormatContext(a), c, l);
    }
    function F(t, n, r, i) {
     h();
     return e.Completions.getCompletionEntrySymbol(s, d, g(t), n, {
      name: r,
      source: i
     });
    }
    function P(t, n) {
     h();
     var r = g(t);
     var i = e.getTouchingPropertyName(r, n);
     if (i === r) {
      return undefined;
     }
     var a = s.getTypeChecker();
     var o = I(i, a);
     if (!o || a.isUnknownSymbol(o)) {
      switch (i.kind) {
      case 71:
       if (e.isLabelName(i)) {
        return undefined;
       }

      case 187:
      case 146:
      case 99:
      case 176:
      case 97:
       var c = a.getTypeAtLocation(i);
       return c && {
        kind: "",
        kindModifiers: "",
        textSpan: e.createTextSpanFromNode(i, r),
        displayParts: a.runWithCancellationToken(l, function(t) {
         return e.typeToDisplayParts(t, c, e.getContainerNode(i));
        }),
        documentation: c.symbol ? c.symbol.getDocumentationComment(a) : undefined,
        tags: c.symbol ? c.symbol.getJsDocTags() : undefined
       };
      }
      return undefined;
     }
     var u = a.runWithCancellationToken(l, function(t) {
      return e.SymbolDisplay.getSymbolDisplayPartsDocumentationAndSymbolKind(t, o, r, e.getContainerNode(i), i);
     }), f = u.symbolKind, d = u.displayParts, p = u.documentation, m = u.tags;
     return {
      kind: f,
      kindModifiers: e.SymbolDisplay.getSymbolModifiers(o),
      textSpan: e.createTextSpanFromNode(i, r),
      displayParts: d,
      documentation: p,
      tags: m
     };
    }
    function I(t, n) {
     if ((e.isIdentifier(t) || e.isStringLiteral(t)) && e.isPropertyAssignment(t.parent) && t.parent.name === t) {
      var r = n.getContextualType(t.parent.parent);
      var i = r && n.getPropertyOfType(r, e.getTextOfIdentifierOrLiteral(t));
      if (i) {
       return i;
      }
     }
     return n.getSymbolAtLocation(t);
    }
    function O(t, n) {
     h();
     return e.GoToDefinition.getDefinitionAtPosition(s, g(t), n);
    }
    function M(t, n) {
     h();
     return e.GoToDefinition.getDefinitionAndBoundSpan(s, g(t), n);
    }
    function L(t, n) {
     h();
     return e.GoToDefinition.getTypeDefinitionAtPosition(s.getTypeChecker(), g(t), n);
    }
    function R(t, n) {
     h();
     return e.FindAllReferences.getImplementationsAtPosition(s, l, s.getSourceFiles(), g(t), n);
    }
    function B(t, n) {
     return e.flatMap(z(t, n, [ t ]), function(e) {
      return e.highlightSpans.map(function(t) {
       return {
        fileName: e.fileName,
        textSpan: t.textSpan,
        isWriteAccess: t.kind === "writtenReference",
        isDefinition: false,
        isInString: t.isInString
       };
      });
     });
    }
    function z(t, n, r) {
     var i = e.normalizePath(t);
     e.Debug.assert(r.some(function(t) {
      return e.normalizePath(t) === i;
     }));
     h();
     var a = e.map(r, function(t) {
      return e.Debug.assertDefined(s.getSourceFile(t));
     });
     var o = g(t);
     return e.DocumentHighlights.getDocumentHighlights(s, l, o, n, a);
    }
    function j(t, n, r, i) {
     h();
     var a = g(t);
     var o = e.getTouchingPropertyName(a, n);
     if (e.isIdentifier(o) && e.isJsxOpeningElement(o.parent) || e.isJsxClosingElement(o.parent)) {
      var s = o.parent.parent, c = s.openingElement, u = s.closingElement;
      return [ c, u ].map(function(t) {
       return {
        fileName: a.fileName,
        textSpan: e.createTextSpanFromNode(t.tagName, a)
       };
      });
     } else {
      var l = U(o, n, {
       findInStrings: r,
       findInComments: i,
       isForRename: true
      });
      return l && l.map(function(e) {
       var t = e.fileName, n = e.textSpan;
       return {
        fileName: t,
        textSpan: n
       };
      });
     }
    }
    function q(t, n) {
     h();
     return U(e.getTouchingPropertyName(g(t), n), n);
    }
    function U(t, n, r) {
     h();
     var i = r && r.isForRename ? s.getSourceFiles().filter(function(e) {
      return !s.isSourceFileDefaultLibrary(e);
     }) : s.getSourceFiles();
     return e.FindAllReferences.findReferencedEntries(s, l, i, t, n, r);
    }
    function J(t, n) {
     h();
     return e.FindAllReferences.findReferencedSymbols(s, l, s.getSourceFiles(), g(t), n);
    }
    function K(t, n, r, i) {
     if (i === void 0) {
      i = false;
     }
     h();
     var a = r ? [ g(r) ] : s.getSourceFiles();
     return e.NavigateTo.getNavigateToItems(a, s.getTypeChecker(), l, t, n, i);
    }
    function V(n, r) {
     if (r === void 0) {
      r = false;
     }
     h();
     var i = g(n);
     var a = t.getCustomTransformers && t.getCustomTransformers();
     return e.getFileEmitOutput(s, i, r, l, a);
    }
    function W(t, n, r) {
     var i = (r === void 0 ? e.emptyOptions : r).triggerReason;
     h();
     var a = g(t);
     return e.SignatureHelp.getSignatureHelpItems(s, a, n, i, l);
    }
    function H(e) {
     return o.getCurrentSourceFile(e);
    }
    function G(t, n, r) {
     var i = o.getCurrentSourceFile(t);
     var a = e.getTouchingPropertyName(i, n);
     if (a === i) {
      return undefined;
     }
     switch (a.kind) {
     case 187:
     case 146:
     case 9:
     case 86:
     case 101:
     case 95:
     case 97:
     case 99:
     case 176:
     case 71:
      break;

     default:
      return undefined;
     }
     var s = a;
     while (true) {
      if (e.isRightSideOfPropertyAccess(s) || e.isRightSideOfQualifiedName(s)) {
       s = s.parent;
      } else if (e.isNameOfModuleDeclaration(s)) {
       if (s.parent.parent.kind === 242 && s.parent.parent.body === s.parent) {
        s = s.parent.parent.name;
       } else {
        break;
       }
      } else {
       break;
      }
     }
     return e.createTextSpanFromBounds(s.getStart(), a.getEnd());
    }
    function $(t, n) {
     var r = o.getCurrentSourceFile(t);
     return e.BreakpointResolver.spanInSourceFileAtLocation(r, n);
    }
    function X(t) {
     return e.NavigationBar.getNavigationBarItems(o.getCurrentSourceFile(t), l);
    }
    function Q(t) {
     return e.NavigationBar.getNavigationTree(o.getCurrentSourceFile(t), l);
    }
    function Y(n) {
     var r = e.getScriptKind(n, t);
     return r === 3 || r === 4;
    }
    function Z(t, n) {
     if (!Y(t)) {
      return [];
     }
     h();
     return e.getSemanticClassifications(s.getTypeChecker(), l, g(t), s.getClassifiableNames(), n);
    }
    function ee(t, n) {
     if (!Y(t)) {
      return {
       spans: [],
       endOfLineState: 0
      };
     }
     h();
     return e.getEncodedSemanticClassifications(s.getTypeChecker(), l, g(t), s.getClassifiableNames(), n);
    }
    function te(t, n) {
     return e.getSyntacticClassifications(l, o.getCurrentSourceFile(t), n);
    }
    function ne(t, n) {
     return e.getEncodedSyntacticClassifications(l, o.getCurrentSourceFile(t), n);
    }
    function re(t) {
     var n = o.getCurrentSourceFile(t);
     return e.OutliningElementsCollector.collectElements(n, l);
    }
    var ie = e.createMapFromTemplate((a = {}, a[17] = 18, a[19] = 20, a[21] = 22, a[29] = 27, 
    a));
    ie.forEach(function(e, t) {
     return ie.set(e.toString(), Number(t));
    });
    function ae(t, n) {
     var r = o.getCurrentSourceFile(t);
     var i = e.getTouchingToken(r, n);
     var a = i.getStart(r) === n ? ie.get(i.kind.toString()) : undefined;
     var s = a && e.findChildOfKind(i.parent, a, r);
     return s ? [ e.createTextSpanFromNode(i, r), e.createTextSpanFromNode(s, r) ].sort(function(e, t) {
      return e.start - t.start;
     }) : e.emptyArray;
    }
    function oe(t, n, r) {
     var i = e.timestamp();
     var a = b(r);
     var s = o.getCurrentSourceFile(t);
     d("getIndentationAtPosition: getCurrentSourceFile: " + (e.timestamp() - i));
     i = e.timestamp();
     var c = e.formatting.SmartIndenter.getIndentation(n, s, a);
     d("getIndentationAtPosition: computeIndentation  : " + (e.timestamp() - i));
     return c;
    }
    function se(t, n, r, i) {
     var a = o.getCurrentSourceFile(t);
     return e.formatting.formatSelection(n, r, a, e.formatting.getFormatContext(b(i)));
    }
    function ce(t, n) {
     return e.formatting.formatDocument(o.getCurrentSourceFile(t), e.formatting.getFormatContext(b(n)));
    }
    function ue(t, n, r, i) {
     var a = o.getCurrentSourceFile(t);
     var s = e.formatting.getFormatContext(b(i));
     if (!e.isInComment(a, n)) {
      switch (r) {
      case "{":
       return e.formatting.formatOnOpeningCurly(n, a, s);

      case "}":
       return e.formatting.formatOnClosingCurly(n, a, s);

      case ";":
       return e.formatting.formatOnSemicolon(n, a, s);

      case "\n":
       return e.formatting.formatOnEnter(n, a, s);
      }
     }
     return [];
    }
    function le(n, r, i, a, o, c) {
     if (c === void 0) {
      c = e.emptyOptions;
     }
     h();
     var u = g(n);
     var f = e.createTextSpanFromBounds(r, i);
     var d = e.formatting.getFormatContext(o);
     return e.flatMap(e.deduplicate(a, e.equateValues, e.compareValues), function(n) {
      l.throwIfCancellationRequested();
      return e.codefix.getFixes({
       errorCode: n,
       sourceFile: u,
       span: f,
       program: s,
       host: t,
       cancellationToken: l,
       formatContext: d,
       preferences: c
      });
     });
    }
    function fe(n, r, i, a) {
     if (a === void 0) {
      a = e.emptyOptions;
     }
     h();
     e.Debug.assert(n.type === "file");
     var o = g(n.fileName);
     var c = e.formatting.getFormatContext(i);
     return e.codefix.getAllFixes({
      fixId: r,
      sourceFile: o,
      program: s,
      host: t,
      cancellationToken: l,
      formatContext: c,
      preferences: a
     });
    }
    function de(n, r, i) {
     if (i === void 0) {
      i = e.emptyOptions;
     }
     h();
     e.Debug.assert(n.type === "file");
     var a = g(n.fileName);
     var o = e.formatting.getFormatContext(r);
     return e.OrganizeImports.organizeImports(a, o, t, s, i);
    }
    function pe(n, r, i, a) {
     if (a === void 0) {
      a = e.emptyOptions;
     }
     return e.getEditsForFileRename(v(), n, r, t, e.formatting.getFormatContext(i), a, _);
    }
    function me(t, n) {
     var r = typeof t === "string" ? n : t;
     return e.isArray(r) ? Promise.all(r.map(_e)) : _e(r);
    }
    function _e(n) {
     switch (n.type) {
     case "install package":
      return t.installPackage ? t.installPackage({
       fileName: e.toPath(n.file, f, m),
       packageName: n.packageName
      }) : Promise.reject("Host does not implement `installPackage`");

     default:
      return e.Debug.fail();
     }
    }
    function ge(n, r) {
     return e.JsDoc.getDocCommentTemplateAtPosition(e.getNewLineOrDefaultFromHost(t), o.getCurrentSourceFile(n), r);
    }
    function he(t, n, r) {
     if (r === 60) {
      return false;
     }
     var i = o.getCurrentSourceFile(t);
     if (e.isInString(i, n)) {
      return false;
     }
     if (e.isInsideJsxElementOrAttribute(i, n)) {
      return r === 123;
     }
     if (e.isInTemplateString(i, n)) {
      return false;
     }
     switch (r) {
     case 39:
     case 34:
     case 96:
      return !e.isInComment(i, n);
     }
     return true;
    }
    function ve(t, n) {
     var r = o.getCurrentSourceFile(t);
     var i = e.findPrecedingToken(n, r);
     if (!i) return undefined;
     var a = i.kind === 29 && e.isJsxOpeningElement(i.parent) ? i.parent.parent : e.isJsxText(i) ? i.parent : undefined;
     if (a && ye(a)) {
      return {
       newText: "</" + a.openingElement.tagName.getText(r) + ">"
      };
     }
    }
    function ye(t) {
     var n = t.openingElement, r = t.closingElement, i = t.parent;
     return !e.tagNamesAreEquivalent(n.tagName, r.tagName) || e.isJsxElement(i) && e.tagNamesAreEquivalent(n.tagName, i.openingElement.tagName) && ye(i);
    }
    function be(t, n, r) {
     var i = o.getCurrentSourceFile(t);
     var a = e.formatting.getRangeOfEnclosingComment(i, n);
     return a && (!r || a.kind === 3) ? e.createTextSpanFromRange(a) : undefined;
    }
    function xe(t, n) {
     h();
     var r = g(t);
     l.throwIfCancellationRequested();
     var i = r.text;
     var a = [];
     if (n.length > 0 && !b(r.fileName)) {
      var o = v();
      var s = void 0;
      while (s = o.exec(i)) {
       l.throwIfCancellationRequested();
       var c = 3;
       e.Debug.assert(s.length === n.length + c);
       var u = s[1];
       var f = s.index + u.length;
       if (!e.isInComment(r, f)) {
        continue;
       }
       var d = void 0;
       for (var p = 0; p < n.length; p++) {
        if (s[p + c]) {
         d = n[p];
        }
       }
       if (d === undefined) return e.Debug.fail();
       if (y(i.charCodeAt(f + d.text.length))) {
        continue;
       }
       var m = s[2];
       a.push({
        descriptor: d,
        message: m,
        position: f
       });
      }
     }
     return a;
     function _(e) {
      return e.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
     }
     function v() {
      var t = /(?:\/\/+\s*)/.source;
      var r = /(?:\/\*+\s*)/.source;
      var i = /(?:^(?:\s|\*)*)/.source;
      var a = "(" + i + "|" + t + "|" + r + ")";
      var o = "(?:" + e.map(n, function(e) {
       return "(" + _(e.text) + ")";
      }).join("|") + ")";
      var s = /(?:$|\*\/)/.source;
      var c = /(?:.*?)/.source;
      var u = "(" + o + c + ")";
      var l = a + u + s;
      return new RegExp(l, "gim");
     }
     function y(e) {
      return e >= 97 && e <= 122 || e >= 65 && e <= 90 || e >= 48 && e <= 57;
     }
     function b(t) {
      return e.stringContains(t, "/node_modules/");
     }
    }
    function ke(t, n) {
     h();
     return e.Rename.getRenameInfo(s, g(t), n);
    }
    function Se(n, r, i, a) {
     var o = typeof r === "number" ? [ r, undefined ] : [ r.pos, r.end ], s = o[0], c = o[1];
     return {
      file: n,
      startPosition: s,
      endPosition: c,
      program: v(),
      host: t,
      formatContext: e.formatting.getFormatContext(a),
      cancellationToken: l,
      preferences: i
     };
    }
    function we(t, n, r) {
     if (r === void 0) {
      r = e.emptyOptions;
     }
     h();
     var i = g(t);
     return e.refactor.getApplicableRefactors(Se(i, n, r));
    }
    function Ce(t, n, r, i, a, o) {
     if (o === void 0) {
      o = e.emptyOptions;
     }
     h();
     var s = g(t);
     return e.refactor.getEditsForRefactor(Se(s, r, o, n), i, a);
    }
    return {
     dispose: x,
     cleanupSemanticCache: y,
     getSyntacticDiagnostics: k,
     getSemanticDiagnostics: S,
     getSuggestionDiagnostics: w,
     getCompilerOptionsDiagnostics: T,
     getSyntacticClassifications: te,
     getSemanticClassifications: Z,
     getEncodedSyntacticClassifications: ne,
     getEncodedSemanticClassifications: ee,
     getCompletionsAtPosition: E,
     getCompletionEntryDetails: N,
     getCompletionEntrySymbol: F,
     getSignatureHelpItems: W,
     getQuickInfoAtPosition: P,
     getDefinitionAtPosition: O,
     getDefinitionAndBoundSpan: M,
     getImplementationAtPosition: R,
     getTypeDefinitionAtPosition: L,
     getReferencesAtPosition: q,
     findReferences: J,
     getOccurrencesAtPosition: B,
     getDocumentHighlights: z,
     getNameOrDottedNameSpan: G,
     getBreakpointStatementAtPosition: $,
     getNavigateToItems: K,
     getRenameInfo: ke,
     findRenameLocations: j,
     getNavigationBarItems: X,
     getNavigationTree: Q,
     getOutliningSpans: re,
     getTodoComments: xe,
     getBraceMatchingAtPosition: ae,
     getIndentationAtPosition: oe,
     getFormattingEditsForRange: se,
     getFormattingEditsForDocument: ce,
     getFormattingEditsAfterKeystroke: ue,
     getDocCommentTemplateAtPosition: ge,
     isValidBraceCompletionAtPosition: he,
     getJsxClosingTagAtPosition: ve,
     getSpanOfEnclosingComment: be,
     getCodeFixesAtPosition: le,
     getCombinedCodeFix: fe,
     applyCodeActionCommand: me,
     organizeImports: de,
     getEditsForFileRename: pe,
     getEmitOutput: V,
     getNonBoundSourceFile: H,
     getProgram: v,
     getApplicableRefactors: we,
     getEditsForRefactor: Ce,
     toLineColumnOffset: _.toLineColumnOffset,
     getSourceMapper: function() {
      return _;
     }
    };
   }
   e.createLanguageService = P;
   function I(e) {
    if (!e.nameTable) {
     O(e);
    }
    return e.nameTable;
   }
   e.getNameTable = I;
   function O(t) {
    var n = t.nameTable = e.createUnderscoreEscapedMap();
    t.forEachChild(function t(r) {
     if (e.isIdentifier(r) && r.escapedText || e.isStringOrNumericLiteral(r) && M(r)) {
      var i = e.getEscapedTextOfIdentifierOrLiteral(r);
      n.set(i, n.get(i) === undefined ? r.pos : -1);
     }
     e.forEachChild(r, t);
     if (e.hasJSDocNodes(r)) {
      for (var a = 0, o = r.jsDoc; a < o.length; a++) {
       var s = o[a];
       e.forEachChild(s, t);
      }
     }
    });
   }
   function M(t) {
    return e.isDeclarationName(t) || t.parent.kind === 257 || z(t) || e.isLiteralComputedPropertyDeclarationName(t);
   }
   function L(t) {
    switch (t.kind) {
    case 9:
    case 8:
     if (t.parent.kind === 147) {
      return e.isObjectLiteralElement(t.parent.parent) ? t.parent.parent : undefined;
     }

    case 71:
     return e.isObjectLiteralElement(t.parent) && (t.parent.parent.kind === 186 || t.parent.parent.kind === 266) && t.parent.name === t ? t.parent : undefined;
    }
    return undefined;
   }
   e.getContainingObjectLiteralElement = L;
   function R(e, t) {
    var n = t.parent;
    var r = e.getContextualType(n);
    return B(r, t.name);
   }
   e.getPropertySymbolsFromContextualType = R;
   function B(t, n) {
    var r = e.unescapeLeadingUnderscores(e.getTextOfPropertyName(n));
    if (r && t) {
     var i = [];
     var a = t.getProperty(r);
     if (t.flags & 262144) {
      e.forEach(t.types, function(e) {
       var t = e.getProperty(r);
       if (t) {
        i.push(t);
       }
      });
      return i;
     }
     if (a) {
      i.push(a);
      return i;
     }
    }
    return undefined;
   }
   e.getPropertySymbolsFromType = B;
   function z(e) {
    return e && e.parent && e.parent.kind === 188 && e.parent.argumentExpression === e;
   }
   function j(t) {
    if (true) {
     return __dirname + e.directorySeparator + e.getDefaultLibFileName(t);
    }
    throw new Error("getDefaultLibFilePath is only supported when consumed as a node module. ");
   }
   e.getDefaultLibFilePath = j;
   e.objectAllocator = y();
  })(s || (s = {}));
  var s;
  (function(e) {
   var t;
   (function(t) {
    function n(t, n) {
     if (t.isDeclarationFile) {
      return undefined;
     }
     var r = e.getTokenAtPosition(t, n);
     var i = t.getLineAndCharacterOfPosition(n).line;
     if (t.getLineAndCharacterOfPosition(r.getStart(t)).line > i) {
      var a = e.findPrecedingToken(r.pos, t);
      if (!a || t.getLineAndCharacterOfPosition(a.getEnd()).line !== i) {
       return undefined;
      }
      r = a;
     }
     if (r.flags & 4194304) {
      return undefined;
     }
     return d(r);
     function o(n, r) {
      var i = n.decorators ? e.skipTrivia(t.text, n.decorators.end) : n.getStart(t);
      return e.createTextSpanFromBounds(i, (r || n).getEnd());
     }
     function s(n, r) {
      return o(n, e.findNextToken(r, r.parent, t));
     }
     function c(e, n) {
      if (e && i === t.getLineAndCharacterOfPosition(e.getStart(t)).line) {
       return d(e);
      }
      return d(n);
     }
     function u(n) {
      return e.createTextSpanFromBounds(e.skipTrivia(t.text, n.pos), n.end);
     }
     function l(n) {
      return d(e.findPrecedingToken(n.pos, t));
     }
     function f(n) {
      return d(e.findNextToken(n, n.parent, t));
     }
     function d(n) {
      if (n) {
       var r = n.parent;
       switch (n.kind) {
       case 217:
        return v(n.declarationList.declarations[0]);

       case 235:
       case 152:
       case 151:
        return v(n);

       case 149:
        return b(n);

       case 237:
       case 154:
       case 153:
       case 156:
       case 157:
       case 155:
       case 194:
       case 195:
        return k(n);

       case 216:
        if (e.isFunctionBlock(n)) {
         return S(n);
        }

       case 243:
        return w(n);

       case 272:
        return w(n.block);

       case 219:
        return o(n.expression);

       case 228:
        return o(n.getChildAt(0), n.expression);

       case 222:
        return s(n, n.expression);

       case 221:
        return d(n.statement);

       case 234:
        return o(n.getChildAt(0));

       case 220:
        return s(n, n.expression);

       case 231:
        return d(n.statement);

       case 227:
       case 226:
        return o(n.getChildAt(0), n.label);

       case 223:
        return D(n);

       case 224:
        return s(n, n.expression);

       case 225:
        return C(n);

       case 230:
        return s(n, n.expression);

       case 269:
       case 270:
        return d(n.statements[0]);

       case 233:
        return w(n.tryBlock);

       case 232:
        return o(n, n.expression);

       case 252:
        return o(n, n.expression);

       case 246:
        return o(n, n.moduleReference);

       case 247:
        return o(n, n.moduleSpecifier);

       case 253:
        return o(n, n.moduleSpecifier);

       case 242:
        if (e.getModuleInstanceState(n) !== 1) {
         return undefined;
        }

       case 238:
       case 241:
       case 276:
       case 184:
        return o(n);

       case 229:
        return d(n.statement);

       case 150:
        return u(r.decorators);

       case 182:
       case 183:
        return T(n);

       case 239:
       case 240:
        return undefined;

       case 25:
       case 1:
        return c(e.findPrecedingToken(n.pos, t));

       case 26:
        return l(n);

       case 17:
        return N(n);

       case 18:
        return A(n);

       case 22:
        return F(n);

       case 19:
        return P(n);

       case 20:
        return I(n);

       case 56:
        return O(n);

       case 29:
       case 27:
        return M(n);

       case 106:
        return L(n);

       case 82:
       case 74:
       case 87:
        return f(n);

       case 145:
        return R(n);

       default:
        if (e.isArrayLiteralOrObjectLiteralDestructuringPattern(n)) {
         return E(n);
        }
        if ((n.kind === 71 || n.kind === 206 || n.kind === 273 || n.kind === 274) && e.isArrayLiteralOrObjectLiteralDestructuringPattern(r)) {
         return o(n);
        }
        if (n.kind === 202) {
         var i = n, a = i.left, p = i.operatorToken;
         if (e.isArrayLiteralOrObjectLiteralDestructuringPattern(a)) {
          return E(a);
         }
         if (p.kind === 58 && e.isArrayLiteralOrObjectLiteralDestructuringPattern(n.parent)) {
          return o(n);
         }
         if (p.kind === 26) {
          return d(a);
         }
        }
        if (e.isExpressionNode(n)) {
         switch (r.kind) {
         case 221:
          return l(n);

         case 150:
          return d(n.parent);

         case 223:
         case 225:
          return o(n);

         case 202:
          if (n.parent.operatorToken.kind === 26) {
           return o(n);
          }
          break;

         case 195:
          if (n.parent.body === n) {
           return o(n);
          }
          break;
         }
        }
        switch (n.parent.kind) {
        case 273:
         if (n.parent.name === n && !e.isArrayLiteralOrObjectLiteralDestructuringPattern(n.parent.parent)) {
          return d(n.parent.initializer);
         }
         break;

        case 192:
         if (n.parent.type === n) {
          return f(n.parent.type);
         }
         break;

        case 235:
        case 149:
         {
          var m = n.parent, _ = m.initializer, g = m.type;
          if (_ === n || g === n || e.isAssignmentOperator(n.kind)) {
           return l(n);
          }
          break;
         }

        case 202:
         {
          var a = n.parent.left;
          if (e.isArrayLiteralOrObjectLiteralDestructuringPattern(a) && n !== a) {
           return l(n);
          }
          break;
         }

        default:
         if (e.isFunctionLike(n.parent) && n.parent.type === n) {
          return l(n);
         }
        }
        return d(n.parent);
       }
      }
      function h(n) {
       if (e.isVariableDeclarationList(n.parent) && n.parent.declarations[0] === n) {
        return o(e.findPrecedingToken(n.pos, t, n.parent), n);
       } else {
        return o(n);
       }
      }
      function v(n) {
       if (n.parent.parent.kind === 224) {
        return d(n.parent.parent);
       }
       var r = n.parent;
       if (e.isBindingPattern(n.name)) {
        return T(n.name);
       }
       if (n.initializer || e.hasModifier(n, 1) || r.parent.kind === 225) {
        return h(n);
       }
       if (e.isVariableDeclarationList(n.parent) && n.parent.declarations[0] !== n) {
        return d(e.findPrecedingToken(n.pos, t, n.parent));
       }
      }
      function y(t) {
       return !!t.initializer || t.dotDotDotToken !== undefined || e.hasModifier(t, 4 | 8);
      }
      function b(t) {
       if (e.isBindingPattern(t.name)) {
        return T(t.name);
       } else if (y(t)) {
        return o(t);
       } else {
        var n = t.parent;
        var r = n.parameters.indexOf(t);
        e.Debug.assert(r !== -1);
        if (r !== 0) {
         return b(n.parameters[r - 1]);
        } else {
         return d(n.body);
        }
       }
      }
      function x(t) {
       return e.hasModifier(t, 1) || t.parent.kind === 238 && t.kind !== 155;
      }
      function k(e) {
       if (!e.body) {
        return undefined;
       }
       if (x(e)) {
        return o(e);
       }
       return d(e.body);
      }
      function S(e) {
       var t = e.statements.length ? e.statements[0] : e.getLastToken();
       if (x(e.parent)) {
        return c(e.parent, t);
       }
       return d(t);
      }
      function w(n) {
       switch (n.parent.kind) {
       case 242:
        if (e.getModuleInstanceState(n.parent) !== 1) {
         return undefined;
        }

       case 222:
       case 220:
       case 224:
        return c(n.parent, n.statements[0]);

       case 223:
       case 225:
        return c(e.findPrecedingToken(n.pos, t, n.parent), n.statements[0]);
       }
       return d(n.statements[0]);
      }
      function C(e) {
       if (e.initializer.kind === 236) {
        var t = e.initializer;
        if (t.declarations.length > 0) {
         return d(t.declarations[0]);
        }
       } else {
        return d(e.initializer);
       }
      }
      function D(e) {
       if (e.initializer) {
        return C(e);
       }
       if (e.condition) {
        return o(e.condition);
       }
       if (e.incrementor) {
        return o(e.incrementor);
       }
      }
      function T(t) {
       var n = e.forEach(t.elements, function(e) {
        return e.kind !== 208 ? e : undefined;
       });
       if (n) {
        return d(n);
       }
       if (t.parent.kind === 184) {
        return o(t.parent);
       }
       return h(t.parent);
      }
      function E(t) {
       e.Debug.assert(t.kind !== 183 && t.kind !== 182);
       var n = t.kind === 185 ? t.elements : t.properties;
       var r = e.forEach(n, function(e) {
        return e.kind !== 208 ? e : undefined;
       });
       if (r) {
        return d(r);
       }
       return o(t.parent.kind === 202 ? t.parent : t);
      }
      function N(n) {
       switch (n.parent.kind) {
       case 241:
        var r = n.parent;
        return c(e.findPrecedingToken(n.pos, t, n.parent), r.members.length ? r.members[0] : r.getLastToken(t));

       case 238:
        var i = n.parent;
        return c(e.findPrecedingToken(n.pos, t, n.parent), i.members.length ? i.members[0] : i.getLastToken(t));

       case 244:
        return c(n.parent.parent, n.parent.clauses[0]);
       }
       return d(n.parent);
      }
      function A(t) {
       switch (t.parent.kind) {
       case 243:
        if (e.getModuleInstanceState(t.parent.parent) !== 1) {
         return undefined;
        }

       case 241:
       case 238:
        return o(t);

       case 216:
        if (e.isFunctionBlock(t.parent)) {
         return o(t);
        }

       case 272:
        return d(e.lastOrUndefined(t.parent.statements));

       case 244:
        var n = t.parent;
        var r = e.lastOrUndefined(n.clauses);
        if (r) {
         return d(e.lastOrUndefined(r.statements));
        }
        return undefined;

       case 182:
        var i = t.parent;
        return d(e.lastOrUndefined(i.elements) || i);

       default:
        if (e.isArrayLiteralOrObjectLiteralDestructuringPattern(t.parent)) {
         var a = t.parent;
         return o(e.lastOrUndefined(a.properties) || a);
        }
        return d(t.parent);
       }
      }
      function F(t) {
       switch (t.parent.kind) {
       case 183:
        var n = t.parent;
        return o(e.lastOrUndefined(n.elements) || n);

       default:
        if (e.isArrayLiteralOrObjectLiteralDestructuringPattern(t.parent)) {
         var r = t.parent;
         return o(e.lastOrUndefined(r.elements) || r);
        }
        return d(t.parent);
       }
      }
      function P(e) {
       if (e.parent.kind === 221 || e.parent.kind === 189 || e.parent.kind === 190) {
        return l(e);
       }
       if (e.parent.kind === 193) {
        return f(e);
       }
       return d(e.parent);
      }
      function I(e) {
       switch (e.parent.kind) {
       case 194:
       case 237:
       case 195:
       case 154:
       case 153:
       case 156:
       case 157:
       case 155:
       case 222:
       case 221:
       case 223:
       case 225:
       case 189:
       case 190:
       case 193:
        return l(e);

       default:
        return d(e.parent);
       }
      }
      function O(t) {
       if (e.isFunctionLike(t.parent) || t.parent.kind === 273 || t.parent.kind === 149) {
        return l(t);
       }
       return d(t.parent);
      }
      function M(e) {
       if (e.parent.kind === 192) {
        return f(e);
       }
       return d(e.parent);
      }
      function L(e) {
       if (e.parent.kind === 221) {
        return s(e, e.parent.expression);
       }
       return d(e.parent);
      }
      function R(e) {
       if (e.parent.kind === 225) {
        return f(e);
       }
       return d(e.parent);
      }
     }
    }
    t.spanInSourceFileAtLocation = n;
   })(t = e.BreakpointResolver || (e.BreakpointResolver = {}));
  })(s || (s = {}));
  var s;
  (function(e) {
   function t(t, n, r) {
    var i = [];
    r = e.fixupCompilerOptions(r, i);
    var a = e.isArray(t) ? t : [ t ];
    var o = e.transformNodes(undefined, undefined, r, a, n, true);
    o.diagnostics = e.concatenate(o.diagnostics, i);
    return o;
   }
   e.transform = t;
  })(s || (s = {}));
  var c = function() {
   return this;
  }();
  var s;
  (function(t) {
   function n(e, t) {
    if (e) {
     e.log("*INTERNAL ERROR* - Exception in typescript services: " + t.message);
    }
   }
   var r = function() {
    function e(e) {
     this.scriptSnapshotShim = e;
    }
    e.prototype.getText = function(e, t) {
     return this.scriptSnapshotShim.getText(e, t);
    };
    e.prototype.getLength = function() {
     return this.scriptSnapshotShim.getLength();
    };
    e.prototype.getChangeRange = function(e) {
     var n = e;
     var r = this.scriptSnapshotShim.getChangeRange(n.scriptSnapshotShim);
     if (r === null) {
      return null;
     }
     var i = JSON.parse(r);
     return t.createTextChangeRange(t.createTextSpan(i.span.start, i.span.length), i.newLength);
    };
    e.prototype.dispose = function() {
     if ("dispose" in this.scriptSnapshotShim) {
      this.scriptSnapshotShim.dispose();
     }
    };
    return e;
   }();
   var i = function() {
    function e(e) {
     var n = this;
     this.shimHost = e;
     this.loggingEnabled = false;
     this.tracingEnabled = false;
     if ("getModuleResolutionsForFile" in this.shimHost) {
      this.resolveModuleNames = function(e, r) {
       var i = JSON.parse(n.shimHost.getModuleResolutionsForFile(r));
       return t.map(e, function(e) {
        var n = t.getProperty(i, e);
        return n ? {
         resolvedFileName: n,
         extension: t.extensionFromPath(n),
         isExternalLibraryImport: false
        } : undefined;
       });
      };
     }
     if ("directoryExists" in this.shimHost) {
      this.directoryExists = function(e) {
       return n.shimHost.directoryExists(e);
      };
     }
     if ("getTypeReferenceDirectiveResolutionsForFile" in this.shimHost) {
      this.resolveTypeReferenceDirectives = function(e, r) {
       var i = JSON.parse(n.shimHost.getTypeReferenceDirectiveResolutionsForFile(r));
       return t.map(e, function(e) {
        return t.getProperty(i, e);
       });
      };
     }
    }
    e.prototype.log = function(e) {
     if (this.loggingEnabled) {
      this.shimHost.log(e);
     }
    };
    e.prototype.trace = function(e) {
     if (this.tracingEnabled) {
      this.shimHost.trace(e);
     }
    };
    e.prototype.error = function(e) {
     this.shimHost.error(e);
    };
    e.prototype.getProjectVersion = function() {
     if (!this.shimHost.getProjectVersion) {
      return undefined;
     }
     return this.shimHost.getProjectVersion();
    };
    e.prototype.getTypeRootsVersion = function() {
     if (!this.shimHost.getTypeRootsVersion) {
      return 0;
     }
     return this.shimHost.getTypeRootsVersion();
    };
    e.prototype.useCaseSensitiveFileNames = function() {
     return this.shimHost.useCaseSensitiveFileNames ? this.shimHost.useCaseSensitiveFileNames() : false;
    };
    e.prototype.getCompilationSettings = function() {
     var e = this.shimHost.getCompilationSettings();
     if (e === null || e === "") {
      throw Error("LanguageServiceShimHostAdapter.getCompilationSettings: empty compilationSettings");
     }
     var t = JSON.parse(e);
     t.allowNonTsExtensions = true;
     return t;
    };
    e.prototype.getScriptFileNames = function() {
     var e = this.shimHost.getScriptFileNames();
     return this.files = JSON.parse(e);
    };
    e.prototype.getScriptSnapshot = function(e) {
     var t = this.shimHost.getScriptSnapshot(e);
     return t && new r(t);
    };
    e.prototype.getScriptKind = function(e) {
     if ("getScriptKind" in this.shimHost) {
      return this.shimHost.getScriptKind(e);
     } else {
      return 0;
     }
    };
    e.prototype.getScriptVersion = function(e) {
     return this.shimHost.getScriptVersion(e);
    };
    e.prototype.getLocalizedDiagnosticMessages = function() {
     var e = this.shimHost.getLocalizedDiagnosticMessages();
     if (e === null || e === "") {
      return null;
     }
     try {
      return JSON.parse(e);
     } catch (e) {
      this.log(e.description || "diagnosticMessages.generated.json has invalid JSON format");
      return null;
     }
    };
    e.prototype.getCancellationToken = function() {
     var e = this.shimHost.getCancellationToken();
     return new t.ThrottledCancellationToken(e);
    };
    e.prototype.getCurrentDirectory = function() {
     return this.shimHost.getCurrentDirectory();
    };
    e.prototype.getDirectories = function(e) {
     return JSON.parse(this.shimHost.getDirectories(e));
    };
    e.prototype.getDefaultLibFileName = function(e) {
     return this.shimHost.getDefaultLibFileName(JSON.stringify(e));
    };
    e.prototype.readDirectory = function(e, n, r, i, a) {
     var o = t.getFileMatcherPatterns(e, r, i, this.shimHost.useCaseSensitiveFileNames(), this.shimHost.getCurrentDirectory());
     return JSON.parse(this.shimHost.readDirectory(e, JSON.stringify(n), JSON.stringify(o.basePaths), o.excludePattern, o.includeFilePattern, o.includeDirectoryPattern, a));
    };
    e.prototype.readFile = function(e, t) {
     return this.shimHost.readFile(e, t);
    };
    e.prototype.fileExists = function(e) {
     return this.shimHost.fileExists(e);
    };
    return e;
   }();
   t.LanguageServiceShimHostAdapter = i;
   var a = function() {
    function e(e) {
     var t = this;
     this.shimHost = e;
     this.useCaseSensitiveFileNames = this.shimHost.useCaseSensitiveFileNames ? this.shimHost.useCaseSensitiveFileNames() : false;
     if ("directoryExists" in this.shimHost) {
      this.directoryExists = function(e) {
       return t.shimHost.directoryExists(e);
      };
     }
     if ("realpath" in this.shimHost) {
      this.realpath = function(e) {
       return t.shimHost.realpath(e);
      };
     }
    }
    e.prototype.readDirectory = function(e, n, r, i, a) {
     var o = t.getFileMatcherPatterns(e, r, i, this.shimHost.useCaseSensitiveFileNames(), this.shimHost.getCurrentDirectory());
     return JSON.parse(this.shimHost.readDirectory(e, JSON.stringify(n), JSON.stringify(o.basePaths), o.excludePattern, o.includeFilePattern, o.includeDirectoryPattern, a));
    };
    e.prototype.fileExists = function(e) {
     return this.shimHost.fileExists(e);
    };
    e.prototype.readFile = function(e) {
     return this.shimHost.readFile(e);
    };
    e.prototype.getDirectories = function(e) {
     return JSON.parse(this.shimHost.getDirectories(e));
    };
    return e;
   }();
   t.CoreServicesShimHostAdapter = a;
   function s(e, n, r, i) {
    var a;
    if (i) {
     e.log(n);
     a = t.timestamp();
    }
    var o = r();
    if (i) {
     var s = t.timestamp();
     e.log(n + " completed in " + (s - a) + " msec");
     if (t.isString(o)) {
      var c = o;
      if (c.length > 128) {
       c = c.substring(0, 128) + "...";
      }
      e.log("  result.length=" + c.length + ", result='" + JSON.stringify(c) + "'");
     }
    }
    return o;
   }
   function u(e, t, n, r) {
    return l(e, t, true, n, r);
   }
   function l(e, r, i, a, o) {
    try {
     var c = s(e, r, a, o);
     return i ? JSON.stringify({
      result: c
     }) : c;
    } catch (i) {
     if (i instanceof t.OperationCanceledException) {
      return JSON.stringify({
       canceled: true
      });
     }
     n(e, i);
     i.description = r;
     return JSON.stringify({
      error: i
     });
    }
   }
   var f = function() {
    function e(e) {
     this.factory = e;
     e.registerShim(this);
    }
    e.prototype.dispose = function(e) {
     this.factory.unregisterShim(this);
    };
    return e;
   }();
   function d(e, t) {
    return e.map(function(e) {
     return p(e, t);
    });
   }
   t.realizeDiagnostics = d;
   function p(e, n) {
    return {
     message: t.flattenDiagnosticMessageText(e.messageText, n),
     start: e.start,
     length: e.length,
     category: t.diagnosticCategoryName(e),
     code: e.code,
     reportsUnnecessary: e.reportsUnnecessary
    };
   }
   var m = function(e) {
    o(n, e);
    function n(t, n, r) {
     var i = e.call(this, t) || this;
     i.host = n;
     i.languageService = r;
     i.logPerformance = false;
     i.logger = i.host;
     return i;
    }
    n.prototype.forwardJSONCall = function(e, t) {
     return u(this.logger, e, t, this.logPerformance);
    };
    n.prototype.dispose = function(t) {
     this.logger.log("dispose()");
     this.languageService.dispose();
     this.languageService = null;
     if (c && c.CollectGarbage) {
      c.CollectGarbage();
      this.logger.log("CollectGarbage()");
     }
     this.logger = null;
     e.prototype.dispose.call(this, t);
    };
    n.prototype.refresh = function(e) {
     this.forwardJSONCall("refresh(" + e + ")", function() {
      return null;
     });
    };
    n.prototype.cleanupSemanticCache = function() {
     var e = this;
     this.forwardJSONCall("cleanupSemanticCache()", function() {
      e.languageService.cleanupSemanticCache();
      return null;
     });
    };
    n.prototype.realizeDiagnostics = function(e) {
     var n = t.getNewLineOrDefaultFromHost(this.host);
     return d(e, n);
    };
    n.prototype.getSyntacticClassifications = function(e, n, r) {
     var i = this;
     return this.forwardJSONCall("getSyntacticClassifications('" + e + "', " + n + ", " + r + ")", function() {
      return i.languageService.getSyntacticClassifications(e, t.createTextSpan(n, r));
     });
    };
    n.prototype.getSemanticClassifications = function(e, n, r) {
     var i = this;
     return this.forwardJSONCall("getSemanticClassifications('" + e + "', " + n + ", " + r + ")", function() {
      return i.languageService.getSemanticClassifications(e, t.createTextSpan(n, r));
     });
    };
    n.prototype.getEncodedSyntacticClassifications = function(e, n, r) {
     var i = this;
     return this.forwardJSONCall("getEncodedSyntacticClassifications('" + e + "', " + n + ", " + r + ")", function() {
      return _(i.languageService.getEncodedSyntacticClassifications(e, t.createTextSpan(n, r)));
     });
    };
    n.prototype.getEncodedSemanticClassifications = function(e, n, r) {
     var i = this;
     return this.forwardJSONCall("getEncodedSemanticClassifications('" + e + "', " + n + ", " + r + ")", function() {
      return _(i.languageService.getEncodedSemanticClassifications(e, t.createTextSpan(n, r)));
     });
    };
    n.prototype.getSyntacticDiagnostics = function(e) {
     var t = this;
     return this.forwardJSONCall("getSyntacticDiagnostics('" + e + "')", function() {
      var n = t.languageService.getSyntacticDiagnostics(e);
      return t.realizeDiagnostics(n);
     });
    };
    n.prototype.getSemanticDiagnostics = function(e) {
     var t = this;
     return this.forwardJSONCall("getSemanticDiagnostics('" + e + "')", function() {
      var n = t.languageService.getSemanticDiagnostics(e);
      return t.realizeDiagnostics(n);
     });
    };
    n.prototype.getSuggestionDiagnostics = function(e) {
     var t = this;
     return this.forwardJSONCall("getSuggestionDiagnostics('" + e + "')", function() {
      return t.realizeDiagnostics(t.languageService.getSuggestionDiagnostics(e));
     });
    };
    n.prototype.getCompilerOptionsDiagnostics = function() {
     var e = this;
     return this.forwardJSONCall("getCompilerOptionsDiagnostics()", function() {
      var t = e.languageService.getCompilerOptionsDiagnostics();
      return e.realizeDiagnostics(t);
     });
    };
    n.prototype.getQuickInfoAtPosition = function(e, t) {
     var n = this;
     return this.forwardJSONCall("getQuickInfoAtPosition('" + e + "', " + t + ")", function() {
      return n.languageService.getQuickInfoAtPosition(e, t);
     });
    };
    n.prototype.getNameOrDottedNameSpan = function(e, t, n) {
     var r = this;
     return this.forwardJSONCall("getNameOrDottedNameSpan('" + e + "', " + t + ", " + n + ")", function() {
      return r.languageService.getNameOrDottedNameSpan(e, t, n);
     });
    };
    n.prototype.getBreakpointStatementAtPosition = function(e, t) {
     var n = this;
     return this.forwardJSONCall("getBreakpointStatementAtPosition('" + e + "', " + t + ")", function() {
      return n.languageService.getBreakpointStatementAtPosition(e, t);
     });
    };
    n.prototype.getSignatureHelpItems = function(e, t, n) {
     var r = this;
     return this.forwardJSONCall("getSignatureHelpItems('" + e + "', " + t + ")", function() {
      return r.languageService.getSignatureHelpItems(e, t, n);
     });
    };
    n.prototype.getDefinitionAtPosition = function(e, t) {
     var n = this;
     return this.forwardJSONCall("getDefinitionAtPosition('" + e + "', " + t + ")", function() {
      return n.languageService.getDefinitionAtPosition(e, t);
     });
    };
    n.prototype.getDefinitionAndBoundSpan = function(e, t) {
     var n = this;
     return this.forwardJSONCall("getDefinitionAndBoundSpan('" + e + "', " + t + ")", function() {
      return n.languageService.getDefinitionAndBoundSpan(e, t);
     });
    };
    n.prototype.getTypeDefinitionAtPosition = function(e, t) {
     var n = this;
     return this.forwardJSONCall("getTypeDefinitionAtPosition('" + e + "', " + t + ")", function() {
      return n.languageService.getTypeDefinitionAtPosition(e, t);
     });
    };
    n.prototype.getImplementationAtPosition = function(e, t) {
     var n = this;
     return this.forwardJSONCall("getImplementationAtPosition('" + e + "', " + t + ")", function() {
      return n.languageService.getImplementationAtPosition(e, t);
     });
    };
    n.prototype.getRenameInfo = function(e, t) {
     var n = this;
     return this.forwardJSONCall("getRenameInfo('" + e + "', " + t + ")", function() {
      return n.languageService.getRenameInfo(e, t);
     });
    };
    n.prototype.findRenameLocations = function(e, t, n, r) {
     var i = this;
     return this.forwardJSONCall("findRenameLocations('" + e + "', " + t + ", " + n + ", " + r + ")", function() {
      return i.languageService.findRenameLocations(e, t, n, r);
     });
    };
    n.prototype.getBraceMatchingAtPosition = function(e, t) {
     var n = this;
     return this.forwardJSONCall("getBraceMatchingAtPosition('" + e + "', " + t + ")", function() {
      return n.languageService.getBraceMatchingAtPosition(e, t);
     });
    };
    n.prototype.isValidBraceCompletionAtPosition = function(e, t, n) {
     var r = this;
     return this.forwardJSONCall("isValidBraceCompletionAtPosition('" + e + "', " + t + ", " + n + ")", function() {
      return r.languageService.isValidBraceCompletionAtPosition(e, t, n);
     });
    };
    n.prototype.getSpanOfEnclosingComment = function(e, t, n) {
     var r = this;
     return this.forwardJSONCall("getSpanOfEnclosingComment('" + e + "', " + t + ")", function() {
      return r.languageService.getSpanOfEnclosingComment(e, t, n);
     });
    };
    n.prototype.getIndentationAtPosition = function(e, t, n) {
     var r = this;
     return this.forwardJSONCall("getIndentationAtPosition('" + e + "', " + t + ")", function() {
      var i = JSON.parse(n);
      return r.languageService.getIndentationAtPosition(e, t, i);
     });
    };
    n.prototype.getReferencesAtPosition = function(e, t) {
     var n = this;
     return this.forwardJSONCall("getReferencesAtPosition('" + e + "', " + t + ")", function() {
      return n.languageService.getReferencesAtPosition(e, t);
     });
    };
    n.prototype.findReferences = function(e, t) {
     var n = this;
     return this.forwardJSONCall("findReferences('" + e + "', " + t + ")", function() {
      return n.languageService.findReferences(e, t);
     });
    };
    n.prototype.getOccurrencesAtPosition = function(e, t) {
     var n = this;
     return this.forwardJSONCall("getOccurrencesAtPosition('" + e + "', " + t + ")", function() {
      return n.languageService.getOccurrencesAtPosition(e, t);
     });
    };
    n.prototype.getDocumentHighlights = function(e, n, r) {
     var i = this;
     return this.forwardJSONCall("getDocumentHighlights('" + e + "', " + n + ")", function() {
      var a = i.languageService.getDocumentHighlights(e, n, JSON.parse(r));
      var o = t.normalizeSlashes(e).toLowerCase();
      return t.filter(a, function(e) {
       return t.normalizeSlashes(e.fileName).toLowerCase() === o;
      });
     });
    };
    n.prototype.getCompletionsAtPosition = function(e, t, n) {
     var r = this;
     return this.forwardJSONCall("getCompletionsAtPosition('" + e + "', " + t + ", " + n + ")", function() {
      return r.languageService.getCompletionsAtPosition(e, t, n);
     });
    };
    n.prototype.getCompletionEntryDetails = function(e, t, n, r, i, a) {
     var o = this;
     return this.forwardJSONCall("getCompletionEntryDetails('" + e + "', " + t + ", '" + n + "')", function() {
      var s = r === undefined ? undefined : JSON.parse(r);
      return o.languageService.getCompletionEntryDetails(e, t, n, s, i, a);
     });
    };
    n.prototype.getFormattingEditsForRange = function(e, t, n, r) {
     var i = this;
     return this.forwardJSONCall("getFormattingEditsForRange('" + e + "', " + t + ", " + n + ")", function() {
      var a = JSON.parse(r);
      return i.languageService.getFormattingEditsForRange(e, t, n, a);
     });
    };
    n.prototype.getFormattingEditsForDocument = function(e, t) {
     var n = this;
     return this.forwardJSONCall("getFormattingEditsForDocument('" + e + "')", function() {
      var r = JSON.parse(t);
      return n.languageService.getFormattingEditsForDocument(e, r);
     });
    };
    n.prototype.getFormattingEditsAfterKeystroke = function(e, t, n, r) {
     var i = this;
     return this.forwardJSONCall("getFormattingEditsAfterKeystroke('" + e + "', " + t + ", '" + n + "')", function() {
      var a = JSON.parse(r);
      return i.languageService.getFormattingEditsAfterKeystroke(e, t, n, a);
     });
    };
    n.prototype.getDocCommentTemplateAtPosition = function(e, t) {
     var n = this;
     return this.forwardJSONCall("getDocCommentTemplateAtPosition('" + e + "', " + t + ")", function() {
      return n.languageService.getDocCommentTemplateAtPosition(e, t);
     });
    };
    n.prototype.getNavigateToItems = function(e, t, n) {
     var r = this;
     return this.forwardJSONCall("getNavigateToItems('" + e + "', " + t + ", " + n + ")", function() {
      return r.languageService.getNavigateToItems(e, t, n);
     });
    };
    n.prototype.getNavigationBarItems = function(e) {
     var t = this;
     return this.forwardJSONCall("getNavigationBarItems('" + e + "')", function() {
      return t.languageService.getNavigationBarItems(e);
     });
    };
    n.prototype.getNavigationTree = function(e) {
     var t = this;
     return this.forwardJSONCall("getNavigationTree('" + e + "')", function() {
      return t.languageService.getNavigationTree(e);
     });
    };
    n.prototype.getOutliningSpans = function(e) {
     var t = this;
     return this.forwardJSONCall("getOutliningSpans('" + e + "')", function() {
      return t.languageService.getOutliningSpans(e);
     });
    };
    n.prototype.getTodoComments = function(e, t) {
     var n = this;
     return this.forwardJSONCall("getTodoComments('" + e + "')", function() {
      return n.languageService.getTodoComments(e, JSON.parse(t));
     });
    };
    n.prototype.getEmitOutput = function(e) {
     var t = this;
     return this.forwardJSONCall("getEmitOutput('" + e + "')", function() {
      return t.languageService.getEmitOutput(e);
     });
    };
    n.prototype.getEmitOutputObject = function(e) {
     var t = this;
     return l(this.logger, "getEmitOutput('" + e + "')", false, function() {
      return t.languageService.getEmitOutput(e);
     }, this.logPerformance);
    };
    return n;
   }(f);
   function _(e) {
    return {
     spans: e.spans.join(","),
     endOfLineState: e.endOfLineState
    };
   }
   var g = function(e) {
    o(n, e);
    function n(n, r) {
     var i = e.call(this, n) || this;
     i.logger = r;
     i.logPerformance = false;
     i.classifier = t.createClassifier();
     return i;
    }
    n.prototype.getEncodedLexicalClassifications = function(e, t, n) {
     var r = this;
     if (n === void 0) {
      n = false;
     }
     return u(this.logger, "getEncodedLexicalClassifications", function() {
      return _(r.classifier.getEncodedLexicalClassifications(e, t, n));
     }, this.logPerformance);
    };
    n.prototype.getClassificationsForLine = function(e, t, n) {
     if (n === void 0) {
      n = false;
     }
     var r = this.classifier.getClassificationsForLine(e, t, n);
     var i = "";
     for (var a = 0, o = r.entries; a < o.length; a++) {
      var s = o[a];
      i += s.length + "\n";
      i += s.classification + "\n";
     }
     i += r.finalLexState;
     return i;
    };
    return n;
   }(f);
   var h = function(e) {
    o(n, e);
    function n(t, n, r) {
     var i = e.call(this, t) || this;
     i.logger = n;
     i.host = r;
     i.logPerformance = false;
     return i;
    }
    n.prototype.forwardJSONCall = function(e, t) {
     return u(this.logger, e, t, this.logPerformance);
    };
    n.prototype.resolveModuleName = function(e, n, r) {
     var i = this;
     return this.forwardJSONCall("resolveModuleName('" + e + "')", function() {
      var a = JSON.parse(r);
      var o = t.resolveModuleName(n, t.normalizeSlashes(e), a, i.host);
      var s = o.resolvedModule ? o.resolvedModule.resolvedFileName : undefined;
      if (o.resolvedModule && o.resolvedModule.extension !== ".ts" && o.resolvedModule.extension !== ".tsx" && o.resolvedModule.extension !== ".d.ts") {
       s = undefined;
      }
      return {
       resolvedFileName: s,
       failedLookupLocations: o.failedLookupLocations
      };
     });
    };
    n.prototype.resolveTypeReferenceDirective = function(e, n, r) {
     var i = this;
     return this.forwardJSONCall("resolveTypeReferenceDirective(" + e + ")", function() {
      var a = JSON.parse(r);
      var o = t.resolveTypeReferenceDirective(n, t.normalizeSlashes(e), a, i.host);
      return {
       resolvedFileName: o.resolvedTypeReferenceDirective ? o.resolvedTypeReferenceDirective.resolvedFileName : undefined,
       primary: o.resolvedTypeReferenceDirective ? o.resolvedTypeReferenceDirective.primary : true,
       failedLookupLocations: o.failedLookupLocations
      };
     });
    };
    n.prototype.getPreProcessedFileInfo = function(e, n) {
     var r = this;
     return this.forwardJSONCall("getPreProcessedFileInfo('" + e + "')", function() {
      var e = t.preProcessFile(t.getSnapshotText(n), true, true);
      return {
       referencedFiles: r.convertFileReferences(e.referencedFiles),
       importedFiles: r.convertFileReferences(e.importedFiles),
       ambientExternalModules: e.ambientExternalModules,
       isLibFile: e.isLibFile,
       typeReferenceDirectives: r.convertFileReferences(e.typeReferenceDirectives),
       libReferenceDirectives: r.convertFileReferences(e.libReferenceDirectives)
      };
     });
    };
    n.prototype.getAutomaticTypeDirectiveNames = function(e) {
     var n = this;
     return this.forwardJSONCall("getAutomaticTypeDirectiveNames('" + e + "')", function() {
      var r = JSON.parse(e);
      return t.getAutomaticTypeDirectiveNames(r, n.host);
     });
    };
    n.prototype.convertFileReferences = function(e) {
     if (!e) {
      return undefined;
     }
     var n = [];
     for (var r = 0, i = e; r < i.length; r++) {
      var a = i[r];
      n.push({
       path: t.normalizeSlashes(a.fileName),
       position: a.pos,
       length: a.end - a.pos
      });
     }
     return n;
    };
    n.prototype.getTSConfigFileInfo = function(e, n) {
     var r = this;
     return this.forwardJSONCall("getTSConfigFileInfo('" + e + "')", function() {
      var i = t.parseJsonText(e, t.getSnapshotText(n));
      var a = t.normalizeSlashes(e);
      var o = t.parseJsonSourceFileConfigFileContent(i, r.host, t.getDirectoryPath(a), {}, a);
      return {
       options: o.options,
       typeAcquisition: o.typeAcquisition,
       files: o.fileNames,
       raw: o.raw,
       errors: d(i.parseDiagnostics.concat(o.errors), "\r\n")
      };
     });
    };
    n.prototype.getDefaultCompilationSettings = function() {
     return this.forwardJSONCall("getDefaultCompilationSettings()", function() {
      return t.getDefaultCompilerOptions();
     });
    };
    n.prototype.discoverTypings = function(e) {
     var n = this;
     var r = t.createGetCanonicalFileName(false);
     return this.forwardJSONCall("discoverTypings()", function() {
      var i = JSON.parse(e);
      if (n.safeList === undefined) {
       n.safeList = t.JsTyping.loadSafeList(n.host, t.toPath(i.safeListPath, i.safeListPath, r));
      }
      return t.JsTyping.discoverTypings(n.host, function(e) {
       return n.logger.log(e);
      }, i.fileNames, t.toPath(i.projectRootPath, i.projectRootPath, r), n.safeList, i.packageNameToTypingLocation, i.typeAcquisition, i.unresolvedImports, i.typesRegistry);
     });
    };
    return n;
   }(f);
   var v = function() {
    function e() {
     this._shims = [];
    }
    e.prototype.getServicesVersion = function() {
     return t.servicesVersion;
    };
    e.prototype.createLanguageServiceShim = function(e) {
     try {
      if (this.documentRegistry === undefined) {
       this.documentRegistry = t.createDocumentRegistry(e.useCaseSensitiveFileNames && e.useCaseSensitiveFileNames(), e.getCurrentDirectory());
      }
      var r = new i(e);
      var a = t.createLanguageService(r, this.documentRegistry, false);
      return new m(this, e, a);
     } catch (t) {
      n(e, t);
      throw t;
     }
    };
    e.prototype.createClassifierShim = function(e) {
     try {
      return new g(this, e);
     } catch (t) {
      n(e, t);
      throw t;
     }
    };
    e.prototype.createCoreServicesShim = function(e) {
     try {
      var t = new a(e);
      return new h(this, e, t);
     } catch (t) {
      n(e, t);
      throw t;
     }
    };
    e.prototype.close = function() {
     t.clear(this._shims);
     this.documentRegistry = undefined;
    };
    e.prototype.registerShim = function(e) {
     this._shims.push(e);
    };
    e.prototype.unregisterShim = function(e) {
     for (var t = 0; t < this._shims.length; t++) {
      if (this._shims[t] === e) {
       delete this._shims[t];
       return;
      }
     }
     throw new Error("Invalid operation");
    };
    return e;
   }();
   t.TypeScriptServicesFactory = v;
   if (typeof e !== "undefined" && e.exports) {
    e.exports = t;
   }
  })(s || (s = {}));
  var u;
  (function(e) {
   var t;
   (function(e) {
    e.TypeScriptServicesFactory = s.TypeScriptServicesFactory;
   })(t = e.Services || (e.Services = {}));
  })(u || (u = {}));
  var l = s.versionMajorMinor;
 },
 VqZt: function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  const r = n("C+6V");
  var i;
  (function(e) {
   e.type = new r.RequestType0("workspace/workspaceFolders");
  })(i = t.WorkspaceFoldersRequest || (t.WorkspaceFoldersRequest = {}));
  var a;
  (function(e) {
   e.type = new r.NotificationType("workspace/didChangeWorkspaceFolders");
  })(a = t.DidChangeWorkspaceFoldersNotification || (t.DidChangeWorkspaceFoldersNotification = {}));
 },
 "Z/sS": function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  var r = n("0kUd");
  var i = n("kmEW");
  var a = n("D7GY");
  var o = n("ElcG");
  function s(e, t) {
   var n = a.getCSSLanguageService();
   var s = r.getLanguageModelCache(10, 60, function(t) {
    return e.get(t).getEmbeddedDocument("css");
   });
   var c = r.getLanguageModelCache(10, 60, function(e) {
    return n.parseStylesheet(e);
   });
   return {
    getId: function() {
     return "css";
    },
    doValidation: function(e, r) {
     if (r === void 0) {
      r = t.settings;
     }
     var i = s.get(e);
     return n.doValidation(i, c.get(i), r && r.css);
    },
    doComplete: function(e, r, a) {
     if (a === void 0) {
      a = t.settings;
     }
     var o = s.get(e);
     var u = c.get(o);
     return n.doComplete(o, r, u) || i.CompletionList.create();
    },
    doHover: function(e, t) {
     var r = s.get(e);
     return n.doHover(r, t, c.get(r));
    },
    findDocumentHighlight: function(e, t) {
     var r = s.get(e);
     return n.findDocumentHighlights(r, t, c.get(r));
    },
    findDocumentSymbols: function(e) {
     var t = s.get(e);
     return n.findDocumentSymbols(t, c.get(t)).filter(function(e) {
      return e.name !== o.CSS_STYLE_RULE;
     });
    },
    findDefinition: function(e, t) {
     var r = s.get(e);
     return n.findDefinition(r, t, c.get(r));
    },
    findReferences: function(e, t) {
     var r = s.get(e);
     return n.findReferences(r, t, c.get(r));
    },
    findDocumentColors: function(e) {
     var t = s.get(e);
     return n.findDocumentColors(t, c.get(t));
    },
    getColorPresentations: function(e, t, r) {
     var i = s.get(e);
     return n.getColorPresentations(i, c.get(i), t, r);
    },
    getFoldingRanges: function(e, t) {
     var r = s.get(e);
     var i = n.getFoldingRanges(r, {});
     return i.filter(function(e) {
      return e.startLine >= t.start.line && e.endLine < t.end.line;
     });
    },
    onDocumentRemoved: function(e) {
     s.onDocumentRemoved(e);
     c.onDocumentRemoved(e);
    },
    dispose: function() {
     s.dispose();
     c.dispose();
    }
   };
  }
  t.getCSSMode = s;
 },
 Z5Ki: function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  var r;
  (function(e) {
   function t(e) {
    return {
     dispose: e
    };
   }
   e.create = t;
  })(r = t.Disposable || (t.Disposable = {}));
  var i;
  (function(e) {
   var t = {
    dispose: function() {}
   };
   e.None = function() {
    return t;
   };
  })(i = t.Event || (t.Event = {}));
  var a = function() {
   function e() {}
   e.prototype.add = function(e, t, n) {
    var r = this;
    if (t === void 0) {
     t = null;
    }
    if (!this._callbacks) {
     this._callbacks = [];
     this._contexts = [];
    }
    this._callbacks.push(e);
    this._contexts.push(t);
    if (Array.isArray(n)) {
     n.push({
      dispose: function() {
       return r.remove(e, t);
      }
     });
    }
   };
   e.prototype.remove = function(e, t) {
    if (t === void 0) {
     t = null;
    }
    if (!this._callbacks) {
     return;
    }
    var n = false;
    for (var r = 0, i = this._callbacks.length; r < i; r++) {
     if (this._callbacks[r] === e) {
      if (this._contexts[r] === t) {
       this._callbacks.splice(r, 1);
       this._contexts.splice(r, 1);
       return;
      } else {
       n = true;
      }
     }
    }
    if (n) {
     throw new Error("When adding a listener with a context, you should remove it with the same context");
    }
   };
   e.prototype.invoke = function() {
    var e = [];
    for (var t = 0; t < arguments.length; t++) {
     e[t] = arguments[t];
    }
    if (!this._callbacks) {
     return [];
    }
    var n = [], r = this._callbacks.slice(0), i = this._contexts.slice(0);
    for (var a = 0, o = r.length; a < o; a++) {
     try {
      n.push(r[a].apply(i[a], e));
     } catch (e) {
      console.error(e);
     }
    }
    return n;
   };
   e.prototype.isEmpty = function() {
    return !this._callbacks || this._callbacks.length === 0;
   };
   e.prototype.dispose = function() {
    this._callbacks = undefined;
    this._contexts = undefined;
   };
   return e;
  }();
  var o = function() {
   function e(e) {
    this._options = e;
   }
   Object.defineProperty(e.prototype, "event", {
    get: function() {
     var t = this;
     if (!this._event) {
      this._event = function(n, r, i) {
       if (!t._callbacks) {
        t._callbacks = new a();
       }
       if (t._options && t._options.onFirstListenerAdd && t._callbacks.isEmpty()) {
        t._options.onFirstListenerAdd(t);
       }
       t._callbacks.add(n, r);
       var o;
       o = {
        dispose: function() {
         t._callbacks.remove(n, r);
         o.dispose = e._noop;
         if (t._options && t._options.onLastListenerRemove && t._callbacks.isEmpty()) {
          t._options.onLastListenerRemove(t);
         }
        }
       };
       if (Array.isArray(i)) {
        i.push(o);
       }
       return o;
      };
     }
     return this._event;
    },
    enumerable: true,
    configurable: true
   });
   e.prototype.fire = function(e) {
    if (this._callbacks) {
     this._callbacks.invoke.call(this._callbacks, e);
    }
   };
   e.prototype.dispose = function() {
    if (this._callbacks) {
     this._callbacks.dispose();
     this._callbacks = undefined;
    }
   };
   e._noop = function() {};
   return e;
  }();
  t.Emitter = o;
 },
 ZTF0: function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  const r = n("BOov");
  var i;
  (function(e) {
   e["Comment"] = "comment";
   e["Imports"] = "imports";
   e["Region"] = "region";
  })(i = t.FoldingRangeKind || (t.FoldingRangeKind = {}));
  var a;
  (function(e) {
   e.type = new r.RequestType("textDocument/foldingRange");
  })(a = t.FoldingRangeRequest || (t.FoldingRangeRequest = {}));
 },
 ZTxy: function(e, t) {
  var n = Object.prototype.toString;
  var r = typeof Buffer.alloc === "function" && typeof Buffer.allocUnsafe === "function" && typeof Buffer.from === "function";
  function i(e) {
   return n.call(e).slice(8, -1) === "ArrayBuffer";
  }
  function a(e, t, n) {
   t >>>= 0;
   var i = e.byteLength - t;
   if (i < 0) {
    throw new RangeError("'offset' is out of bounds");
   }
   if (n === undefined) {
    n = i;
   } else {
    n >>>= 0;
    if (n > i) {
     throw new RangeError("'length' is out of bounds");
    }
   }
   return r ? Buffer.from(e.slice(t, t + n)) : new Buffer(new Uint8Array(e.slice(t, t + n)));
  }
  function o(e, t) {
   if (typeof t !== "string" || t === "") {
    t = "utf8";
   }
   if (!Buffer.isEncoding(t)) {
    throw new TypeError('"encoding" must be a valid string encoding');
   }
   return r ? Buffer.from(e, t) : new Buffer(e, t);
  }
  function s(e, t, n) {
   if (typeof e === "number") {
    throw new TypeError('"value" argument must not be a number');
   }
   if (i(e)) {
    return a(e, t, n);
   }
   if (typeof e === "string") {
    return o(e, t);
   }
   return r ? Buffer.from(e) : new Buffer(e);
  }
  e.exports = s;
 },
 a2YK: function(e, t, n) {
  var r = n("toBv");
  var i = Object.prototype.hasOwnProperty;
  var a = typeof Map !== "undefined";
  function o() {
   this._array = [];
   this._set = a ? new Map() : Object.create(null);
  }
  o.fromArray = function e(t, n) {
   var r = new o();
   for (var i = 0, a = t.length; i < a; i++) {
    r.add(t[i], n);
   }
   return r;
  };
  o.prototype.size = function e() {
   return a ? this._set.size : Object.getOwnPropertyNames(this._set).length;
  };
  o.prototype.add = function e(t, n) {
   var o = a ? t : r.toSetString(t);
   var s = a ? this.has(t) : i.call(this._set, o);
   var c = this._array.length;
   if (!s || n) {
    this._array.push(t);
   }
   if (!s) {
    if (a) {
     this._set.set(t, c);
    } else {
     this._set[o] = c;
    }
   }
  };
  o.prototype.has = function e(t) {
   if (a) {
    return this._set.has(t);
   } else {
    var n = r.toSetString(t);
    return i.call(this._set, n);
   }
  };
  o.prototype.indexOf = function e(t) {
   if (a) {
    var n = this._set.get(t);
    if (n >= 0) {
     return n;
    }
   } else {
    var o = r.toSetString(t);
    if (i.call(this._set, o)) {
     return this._set[o];
    }
   }
   throw new Error('"' + t + '" is not in the set.');
  };
  o.prototype.at = function e(t) {
   if (t >= 0 && t < this._array.length) {
    return this._array[t];
   }
   throw new Error("No element indexed by " + t);
  };
  o.prototype.toArray = function e() {
   return this._array.slice();
  };
  t.ArraySet = o;
 },
 bc5S: function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  var r = n("0kUd");
  var i = n("kmEW");
  var a = n("+OJx");
  var o = n("SoUf");
  var s = n("oyvS");
  var c = n("ZTF0");
  var u = "vscode://javascript/1";
  var l = s.join(__dirname, "../../lib/jquery.d.ts");
  var f = /(-?\d*\.\d\w*)|([^\`\~\!\@\#\%\^\&\*\(\)\-\=\+\[\{\]\}\\\|\;\:\'\"\,\.\<\>\/\?\s]+)/g;
  function d(e, t) {
   var n = r.getLanguageModelCache(10, 60, function(t) {
    return e.get(t).getEmbeddedDocument("javascript");
   });
   var s = {
    allowNonTsExtensions: true,
    allowJs: true,
    lib: [ "lib.es6.d.ts" ],
    target: o.ScriptTarget.Latest,
    moduleResolution: o.ModuleResolutionKind.Classic
   };
   var d;
   var y = 0;
   function b(e) {
    if (!d || e.uri !== d.uri || e.version !== d.version) {
     d = n.get(e);
     y++;
    }
   }
   var x = {
    getCompilationSettings: function() {
     return s;
    },
    getScriptFileNames: function() {
     return [ u, l ];
    },
    getScriptKind: function() {
     return o.ScriptKind.JS;
    },
    getScriptVersion: function(e) {
     if (e === u) {
      return String(y);
     }
     return "1";
    },
    getScriptSnapshot: function(e) {
     var t = "";
     if (a.startsWith(e, "vscode:")) {
      if (e === u) {
       t = d.getText();
      }
     } else {
      t = o.sys.readFile(e) || "";
     }
     return {
      getText: function(e, n) {
       return t.substring(e, n);
      },
      getLength: function() {
       return t.length;
      },
      getChangeRange: function() {
       return void 0;
      }
     };
    },
    getCurrentDirectory: function() {
     return "";
    },
    getDefaultLibFileName: function(e) {
     return o.getDefaultLibFilePath(e);
    }
   };
   var k = o.createLanguageService(x);
   var S = {};
   return {
    getId: function() {
     return "javascript";
    },
    doValidation: function(e) {
     b(e);
     var t = k.getSyntacticDiagnostics(u);
     var n = k.getSemanticDiagnostics(u);
     return t.concat(n).map(function(e) {
      return {
       range: p(d, e),
       severity: i.DiagnosticSeverity.Error,
       source: "js",
       message: o.flattenDiagnosticMessageText(e.messageText, "\n")
      };
     });
    },
    doComplete: function(e, t) {
     b(e);
     var n = d.offsetAt(t);
     var r = k.getCompletionsAtPosition(u, n, {
      includeExternalModuleExports: false,
      includeInsertTextCompletions: false
     });
     if (!r) {
      return {
       isIncomplete: false,
       items: []
      };
     }
     var o = p(d, a.getWordAtText(d.getText(), n, f));
     return {
      isIncomplete: false,
      items: r.entries.map(function(r) {
       return {
        uri: e.uri,
        position: t,
        label: r.name,
        sortText: r.sortText,
        kind: m(r.kind),
        textEdit: i.TextEdit.replace(o, r.name),
        data: {
         languageId: "javascript",
         uri: e.uri,
         offset: n
        }
       };
      })
     };
    },
    doResolve: function(e, t) {
     b(e);
     var n = k.getCompletionEntryDetails(u, t.data.offset, t.label, undefined, undefined, undefined);
     if (n) {
      t.detail = o.displayPartsToString(n.displayParts);
      t.documentation = o.displayPartsToString(n.documentation);
      delete t.data;
     }
     return t;
    },
    doHover: function(e, t) {
     b(e);
     var n = k.getQuickInfoAtPosition(u, d.offsetAt(t));
     if (n) {
      var r = o.displayPartsToString(n.displayParts);
      return {
       range: p(d, n.textSpan),
       contents: i.MarkedString.fromPlainText(r)
      };
     }
     return null;
    },
    doSignatureHelp: function(e, t) {
     b(e);
     var n = k.getSignatureHelpItems(u, d.offsetAt(t));
     if (n) {
      var r = {
       activeSignature: n.selectedItemIndex,
       activeParameter: n.argumentIndex,
       signatures: []
      };
      n.items.forEach(function(e) {
       var t = {
        label: "",
        documentation: undefined,
        parameters: []
       };
       t.label += o.displayPartsToString(e.prefixDisplayParts);
       e.parameters.forEach(function(n, r, i) {
        var a = o.displayPartsToString(n.displayParts);
        var s = {
         label: a,
         documentation: o.displayPartsToString(n.documentation)
        };
        t.label += a;
        t.parameters.push(s);
        if (r < i.length - 1) {
         t.label += o.displayPartsToString(e.separatorDisplayParts);
        }
       });
       t.label += o.displayPartsToString(e.suffixDisplayParts);
       r.signatures.push(t);
      });
      return r;
     }
     return null;
    },
    findDocumentHighlight: function(e, t) {
     b(e);
     var n = k.getOccurrencesAtPosition(u, d.offsetAt(t));
     if (n) {
      return n.map(function(e) {
       return {
        range: p(d, e.textSpan),
        kind: e.isWriteAccess ? i.DocumentHighlightKind.Write : i.DocumentHighlightKind.Text
       };
      });
     }
     return [];
    },
    findDocumentSymbols: function(e) {
     b(e);
     var t = k.getNavigationBarItems(u);
     if (t) {
      var n = [];
      var r = Object.create(null);
      var i = function(t, a) {
       var o = t.text + t.kind + t.spans[0].start;
       if (t.kind !== "script" && !r[o]) {
        var s = {
         name: t.text,
         kind: _(t.kind),
         location: {
          uri: e.uri,
          range: p(d, t.spans[0])
         },
         containerName: a
        };
        r[o] = true;
        n.push(s);
        a = t.text;
       }
       if (t.childItems && t.childItems.length > 0) {
        for (var c = 0, u = t.childItems; c < u.length; c++) {
         var l = u[c];
         i(l, a);
        }
       }
      };
      t.forEach(function(e) {
       return i(e);
      });
      return n;
     }
     return [];
    },
    findDefinition: function(e, t) {
     b(e);
     var n = k.getDefinitionAtPosition(u, d.offsetAt(t));
     if (n) {
      return n.filter(function(e) {
       return e.fileName === u;
      }).map(function(t) {
       return {
        uri: e.uri,
        range: p(d, t.textSpan)
       };
      });
     }
     return null;
    },
    findReferences: function(e, t) {
     b(e);
     var n = k.getReferencesAtPosition(u, d.offsetAt(t));
     if (n) {
      return n.filter(function(e) {
       return e.fileName === u;
      }).map(function(t) {
       return {
        uri: e.uri,
        range: p(d, t.textSpan)
       };
      });
     }
     return [];
    },
    format: function(t, n, r, o) {
     if (o === void 0) {
      o = S;
     }
     d = e.get(t).getEmbeddedDocument("javascript", true);
     y++;
     var s = o && o.javascript && o.javascript.format;
     var c = h(t, n, r);
     var l = g(r, s, c + 1);
     var f = d.offsetAt(n.start);
     var m = d.offsetAt(n.end);
     var _ = null;
     if (n.end.line > n.start.line && (n.end.character === 0 || a.isWhitespaceOnly(d.getText().substr(m - n.end.character, n.end.character)))) {
      m -= n.end.character;
      _ = i.Range.create(i.Position.create(n.end.line, 0), n.end);
     }
     var b = k.getFormattingEditsForRange(u, f, m, l);
     if (b) {
      var x = [];
      for (var w = 0, C = b; w < C.length; w++) {
       var D = C[w];
       if (D.span.start >= f && D.span.start + D.span.length <= m) {
        x.push({
         range: p(d, D.span),
         newText: D.newText
        });
       }
      }
      if (_) {
       x.push({
        range: _,
        newText: v(c, r)
       });
      }
      return x;
     }
     return [];
    },
    getFoldingRanges: function(e, t) {
     b(e);
     var n = k.getOutliningSpans(u);
     var r = t.start.line;
     var i = t.end.line;
     var a = [];
     for (var o = 0, s = n; o < s.length; o++) {
      var l = s[o];
      var f = p(d, l.textSpan);
      var m = f.start.line;
      var _ = f.end.line;
      if (m < _ && m >= r && _ < i) {
       var g = {
        startLine: m,
        endLine: _
       };
       var h = e.getText(f).match(/^\s*\/(?:(\/\s*#(?:end)?region\b)|(\*|\/))/);
       if (h) {
        g.kind = h[1] ? c.FoldingRangeKind.Region : c.FoldingRangeKind.Comment;
       }
       a.push(g);
      }
     }
     return a;
    },
    onDocumentRemoved: function(e) {
     n.onDocumentRemoved(e);
    },
    dispose: function() {
     k.dispose();
     n.dispose();
    }
   };
  }
  t.getJavaScriptMode = d;
  function p(e, t) {
   if (typeof t.start === "undefined") {
    var n = e.positionAt(0);
    return i.Range.create(n, n);
   }
   var r = e.positionAt(t.start);
   var a = e.positionAt(t.start + (t.length || 0));
   return i.Range.create(r, a);
  }
  function m(e) {
   switch (e) {
   case "primitive type":
   case "keyword":
    return i.CompletionItemKind.Keyword;

   case "var":
   case "local var":
    return i.CompletionItemKind.Variable;

   case "property":
   case "getter":
   case "setter":
    return i.CompletionItemKind.Field;

   case "function":
   case "method":
   case "construct":
   case "call":
   case "index":
    return i.CompletionItemKind.Function;

   case "enum":
    return i.CompletionItemKind.Enum;

   case "module":
    return i.CompletionItemKind.Module;

   case "class":
    return i.CompletionItemKind.Class;

   case "interface":
    return i.CompletionItemKind.Interface;

   case "warning":
    return i.CompletionItemKind.File;
   }
   return i.CompletionItemKind.Property;
  }
  function _(e) {
   switch (e) {
   case "var":
   case "local var":
   case "const":
    return i.SymbolKind.Variable;

   case "function":
   case "local function":
    return i.SymbolKind.Function;

   case "enum":
    return i.SymbolKind.Enum;

   case "module":
    return i.SymbolKind.Module;

   case "class":
    return i.SymbolKind.Class;

   case "interface":
    return i.SymbolKind.Interface;

   case "method":
    return i.SymbolKind.Method;

   case "property":
   case "getter":
   case "setter":
    return i.SymbolKind.Property;
   }
   return i.SymbolKind.Variable;
  }
  function g(e, t, n) {
   return {
    ConvertTabsToSpaces: e.insertSpaces,
    TabSize: e.tabSize,
    IndentSize: e.tabSize,
    IndentStyle: o.IndentStyle.Smart,
    NewLineCharacter: "\n",
    BaseIndentSize: e.tabSize * n,
    InsertSpaceAfterCommaDelimiter: Boolean(!t || t.insertSpaceAfterCommaDelimiter),
    InsertSpaceAfterSemicolonInForStatements: Boolean(!t || t.insertSpaceAfterSemicolonInForStatements),
    InsertSpaceBeforeAndAfterBinaryOperators: Boolean(!t || t.insertSpaceBeforeAndAfterBinaryOperators),
    InsertSpaceAfterKeywordsInControlFlowStatements: Boolean(!t || t.insertSpaceAfterKeywordsInControlFlowStatements),
    InsertSpaceAfterFunctionKeywordForAnonymousFunctions: Boolean(!t || t.insertSpaceAfterFunctionKeywordForAnonymousFunctions),
    InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis: Boolean(t && t.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis),
    InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets: Boolean(t && t.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets),
    InsertSpaceAfterOpeningAndBeforeClosingNonemptyBraces: Boolean(t && t.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces),
    InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces: Boolean(t && t.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces),
    PlaceOpenBraceOnNewLineForControlBlocks: Boolean(t && t.placeOpenBraceOnNewLineForFunctions),
    PlaceOpenBraceOnNewLineForFunctions: Boolean(t && t.placeOpenBraceOnNewLineForControlBlocks)
   };
  }
  function h(e, t, n) {
   var r = e.offsetAt(i.Position.create(t.start.line, 0));
   var a = e.getText();
   var o = r;
   var s = 0;
   var c = n.tabSize || 4;
   while (o < a.length) {
    var u = a.charAt(o);
    if (u === " ") {
     s++;
    } else if (u === "\t") {
     s += c;
    } else {
     break;
    }
    o++;
   }
   return Math.floor(s / c);
  }
  function v(e, t) {
   if (t.insertSpaces) {
    return a.repeat(" ", e * t.tabSize);
   } else {
    return a.repeat("\t", e);
   }
  }
 },
 bzos: function(e, t) {
  e.exports = require("url");
 },
 eYlL: function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  var r = n("kmEW");
  var i = n("oyvS");
  var a = n("mw/K");
  var o = n("hde3");
  var s = n("+OJx");
  var c = n("5TYg");
  function u(e, t, n) {
   return {
    onHtmlAttributeValue: function(r) {
     var i = r.tag, a = r.position, s = r.attribute, c = r.value, u = r.range;
     var p = l(e.getText(u));
     if (f(i, s, p)) {
      if (t.length === 0) {
       return;
      }
      var g = _(e, t);
      var h = d(c, o.default.parse(e.uri).fsPath, g);
      n.push.apply(n, h.map(function(e) {
       return m(e, c, p, u);
      }));
     }
    }
   };
  }
  t.getPathCompletionParticipant = u;
  function l(e) {
   if (s.startsWith(e, "'") || s.startsWith(e, '"')) {
    return e.slice(1, -1);
   } else {
    return e;
   }
  }
  function f(e, t, n) {
   if (s.startsWith(n, "http") || s.startsWith(n, "https") || s.startsWith(n, "//")) {
    return false;
   }
   if (v[e]) {
    if (typeof v[e] === "string") {
     return v[e] === t;
    } else {
     return c.contains(v[e], t);
    }
   }
   return false;
  }
  function d(e, t, n) {
   if (s.startsWith(e, "/") && !n) {
    return [];
   }
   var r = e.lastIndexOf("/");
   var o = e.slice(0, r + 1);
   var c = s.startsWith(e, "/") ? i.resolve(n, "." + o) : i.resolve(t, "..", o);
   try {
    return a.readdirSync(c).map(function(e) {
     return p(i.resolve(c, e)) ? e + "/" : e;
    });
   } catch (e) {
    return [];
   }
  }
  function p(e) {
   try {
    return a.statSync(e).isDirectory();
   } catch (e) {
    return false;
   }
  }
  function m(e, t, n, i) {
   var a = e[e.length - 1] === "/";
   var o;
   var s = t.lastIndexOf("/");
   if (s === -1) {
    o = h(i, 1, -1);
   } else {
    var c = n.slice(s + 1);
    var u = g(i.end, -1 - c.length);
    var l = c.indexOf(" ");
    var f = void 0;
    if (l !== -1) {
     f = g(u, l);
    } else {
     f = g(i.end, -1);
    }
    o = r.Range.create(u, f);
   }
   if (a) {
    return {
     label: e,
     kind: r.CompletionItemKind.Folder,
     textEdit: r.TextEdit.replace(o, e),
     command: {
      title: "Suggest",
      command: "editor.action.triggerSuggest"
     }
    };
   } else {
    return {
     label: e,
     kind: r.CompletionItemKind.File,
     textEdit: r.TextEdit.replace(o, e)
    };
   }
  }
  function _(e, t) {
   for (var n = 0; n < t.length; n++) {
    if (s.startsWith(e.uri, t[n].uri)) {
     return i.resolve(o.default.parse(t[n].uri).fsPath);
    }
   }
  }
  function g(e, t) {
   return r.Position.create(e.line, e.character + t);
  }
  function h(e, t, n) {
   var i = g(e.start, t);
   var a = g(e.end, n);
   return r.Range.create(i, a);
  }
  var v = {
   a: "href",
   body: "background",
   del: "cite",
   form: "action",
   frame: [ "src", "longdesc" ],
   img: [ "src", "longdesc" ],
   ins: "cite",
   link: "href",
   object: "data",
   q: "cite",
   script: "src",
   audio: "src",
   button: "formaction",
   command: "icon",
   embed: "src",
   html: "manifest",
   input: "formaction",
   source: "src",
   track: "src",
   video: [ "src", "poster" ]
  };
 },
 hde3: function(e, t, n) {
  "use strict";
  n.r(t);
  var r = undefined && undefined.__extends || function() {
   var e = Object.setPrototypeOf || {
    __proto__: []
   } instanceof Array && function(e, t) {
    e.__proto__ = t;
   } || function(e, t) {
    for (var n in t) if (t.hasOwnProperty(n)) e[n] = t[n];
   };
   return function(t, n) {
    e(t, n);
    function r() {
     this.constructor = t;
    }
    t.prototype = n === null ? Object.create(n) : (r.prototype = n.prototype, new r());
   };
  }();
  var i;
  if (typeof process === "object") {
   i = process.platform === "win32";
  } else if (typeof navigator === "object") {
   var a = navigator.userAgent;
   i = a.indexOf("Windows") >= 0;
  }
  var o = /^\w[\w\d+.-]*$/;
  var s = /^\//;
  var c = /^\/\//;
  function u(e) {
   if (e.scheme && !o.test(e.scheme)) {
    throw new Error("[UriError]: Scheme contains illegal characters.");
   }
   if (e.path) {
    if (e.authority) {
     if (!s.test(e.path)) {
      throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash ("/") character');
     }
    } else {
     if (c.test(e.path)) {
      throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters ("//")');
     }
    }
   }
  }
  function l(e, t) {
   switch (e) {
   case "https":
   case "http":
   case "file":
    if (!t) {
     t = d;
    } else if (t[0] !== d) {
     t = d + t;
    }
    break;
   }
   return t;
  }
  var f = "";
  var d = "/";
  var p = /^(([^:/?#]+?):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/;
  var m = function() {
   function e(e, t, n, r, i) {
    if (typeof e === "object") {
     this.scheme = e.scheme || f;
     this.authority = e.authority || f;
     this.path = e.path || f;
     this.query = e.query || f;
     this.fragment = e.fragment || f;
    } else {
     this.scheme = e || f;
     this.authority = t || f;
     this.path = l(this.scheme, n || f);
     this.query = r || f;
     this.fragment = i || f;
     u(this);
    }
   }
   e.isUri = function(t) {
    if (t instanceof e) {
     return true;
    }
    if (!t) {
     return false;
    }
    return typeof t.authority === "string" && typeof t.fragment === "string" && typeof t.path === "string" && typeof t.query === "string" && typeof t.scheme === "string";
   };
   Object.defineProperty(e.prototype, "fsPath", {
    get: function() {
     return y(this);
    },
    enumerable: true,
    configurable: true
   });
   e.prototype.with = function(e) {
    if (!e) {
     return this;
    }
    var t = e.scheme, n = e.authority, r = e.path, i = e.query, a = e.fragment;
    if (t === void 0) {
     t = this.scheme;
    } else if (t === null) {
     t = f;
    }
    if (n === void 0) {
     n = this.authority;
    } else if (n === null) {
     n = f;
    }
    if (r === void 0) {
     r = this.path;
    } else if (r === null) {
     r = f;
    }
    if (i === void 0) {
     i = this.query;
    } else if (i === null) {
     i = f;
    }
    if (a === void 0) {
     a = this.fragment;
    } else if (a === null) {
     a = f;
    }
    if (t === this.scheme && n === this.authority && r === this.path && i === this.query && a === this.fragment) {
     return this;
    }
    return new _(t, n, r, i, a);
   };
   e.parse = function(e) {
    var t = p.exec(e);
    if (!t) {
     return new _(f, f, f, f, f);
    }
    return new _(t[2] || f, decodeURIComponent(t[4] || f), decodeURIComponent(t[5] || f), decodeURIComponent(t[7] || f), decodeURIComponent(t[9] || f));
   };
   e.file = function(e) {
    var t = f;
    if (i) {
     e = e.replace(/\\/g, d);
    }
    if (e[0] === d && e[1] === d) {
     var n = e.indexOf(d, 2);
     if (n === -1) {
      t = e.substring(2);
      e = d;
     } else {
      t = e.substring(2, n);
      e = e.substring(n) || d;
     }
    }
    return new _("file", t, e, f, f);
   };
   e.from = function(e) {
    return new _(e.scheme, e.authority, e.path, e.query, e.fragment);
   };
   e.prototype.toString = function(e) {
    if (e === void 0) {
     e = false;
    }
    return b(this, e);
   };
   e.prototype.toJSON = function() {
    return this;
   };
   e.revive = function(t) {
    if (!t) {
     return t;
    } else if (t instanceof e) {
     return t;
    } else {
     var n = new _(t);
     n._fsPath = t.fsPath;
     n._formatted = t.external;
     return n;
    }
   };
   return e;
  }();
  t["default"] = m;
  var _ = function(e) {
   r(t, e);
   function t() {
    var t = e !== null && e.apply(this, arguments) || this;
    t._formatted = null;
    t._fsPath = null;
    return t;
   }
   Object.defineProperty(t.prototype, "fsPath", {
    get: function() {
     if (!this._fsPath) {
      this._fsPath = y(this);
     }
     return this._fsPath;
    },
    enumerable: true,
    configurable: true
   });
   t.prototype.toString = function(e) {
    if (e === void 0) {
     e = false;
    }
    if (!e) {
     if (!this._formatted) {
      this._formatted = b(this, false);
     }
     return this._formatted;
    } else {
     return b(this, true);
    }
   };
   t.prototype.toJSON = function() {
    var e = {
     $mid: 1
    };
    if (this._fsPath) {
     e.fsPath = this._fsPath;
    }
    if (this._formatted) {
     e.external = this._formatted;
    }
    if (this.path) {
     e.path = this.path;
    }
    if (this.scheme) {
     e.scheme = this.scheme;
    }
    if (this.authority) {
     e.authority = this.authority;
    }
    if (this.query) {
     e.query = this.query;
    }
    if (this.fragment) {
     e.fragment = this.fragment;
    }
    return e;
   };
   return t;
  }(m);
  var g = (x = {}, x[58] = "%3A", x[47] = "%2F", x[63] = "%3F", x[35] = "%23", x[91] = "%5B", 
  x[93] = "%5D", x[64] = "%40", x[33] = "%21", x[36] = "%24", x[38] = "%26", x[39] = "%27", 
  x[40] = "%28", x[41] = "%29", x[42] = "%2A", x[43] = "%2B", x[44] = "%2C", x[59] = "%3B", 
  x[61] = "%3D", x[32] = "%20", x);
  function h(e, t) {
   var n = undefined;
   var r = -1;
   for (var i = 0; i < e.length; i++) {
    var a = e.charCodeAt(i);
    if (a >= 97 && a <= 122 || a >= 65 && a <= 90 || a >= 48 && a <= 57 || a === 45 || a === 46 || a === 95 || a === 126 || t && a === 47) {
     if (r !== -1) {
      n += encodeURIComponent(e.substring(r, i));
      r = -1;
     }
     if (n !== undefined) {
      n += e.charAt(i);
     }
    } else {
     if (n === undefined) {
      n = e.substr(0, i);
     }
     var o = g[a];
     if (o !== undefined) {
      if (r !== -1) {
       n += encodeURIComponent(e.substring(r, i));
       r = -1;
      }
      n += o;
     } else if (r === -1) {
      r = i;
     }
    }
   }
   if (r !== -1) {
    n += encodeURIComponent(e.substring(r));
   }
   return n !== undefined ? n : e;
  }
  function v(e) {
   var t = undefined;
   for (var n = 0; n < e.length; n++) {
    var r = e.charCodeAt(n);
    if (r === 35 || r === 63) {
     if (t === undefined) {
      t = e.substr(0, n);
     }
     t += g[r];
    } else {
     if (t !== undefined) {
      t += e[n];
     }
    }
   }
   return t !== undefined ? t : e;
  }
  function y(e) {
   var t;
   if (e.authority && e.path.length > 1 && e.scheme === "file") {
    t = "//" + e.authority + e.path;
   } else if (e.path.charCodeAt(0) === 47 && (e.path.charCodeAt(1) >= 65 && e.path.charCodeAt(1) <= 90 || e.path.charCodeAt(1) >= 97 && e.path.charCodeAt(1) <= 122) && e.path.charCodeAt(2) === 58) {
    t = e.path[1].toLowerCase() + e.path.substr(2);
   } else {
    t = e.path;
   }
   if (i) {
    t = t.replace(/\//g, "\\");
   }
   return t;
  }
  function b(e, t) {
   var n = !t ? h : v;
   var r = "";
   var i = e.scheme, a = e.authority, o = e.path, s = e.query, c = e.fragment;
   if (i) {
    r += i;
    r += ":";
   }
   if (a || i === "file") {
    r += d;
    r += d;
   }
   if (a) {
    var u = a.indexOf("@");
    if (u !== -1) {
     var l = a.substr(0, u);
     a = a.substr(u + 1);
     u = l.indexOf(":");
     if (u === -1) {
      r += n(l, false);
     } else {
      r += n(l.substr(0, u), false);
      r += ":";
      r += n(l.substr(u + 1), false);
     }
     r += "@";
    }
    a = a.toLowerCase();
    u = a.indexOf(":");
    if (u === -1) {
     r += n(a, false);
    } else {
     r += n(a.substr(0, u), false);
     r += a.substr(u);
    }
   }
   if (o) {
    if (o.length >= 3 && o.charCodeAt(0) === 47 && o.charCodeAt(2) === 58) {
     var f = o.charCodeAt(1);
     if (f >= 65 && f <= 90) {
      o = "/" + String.fromCharCode(f + 32) + ":" + o.substr(3);
     }
    } else if (o.length >= 2 && o.charCodeAt(1) === 58) {
     var f = o.charCodeAt(0);
     if (f >= 65 && f <= 90) {
      o = String.fromCharCode(f + 32) + ":" + o.substr(2);
     }
    }
    r += n(o, true);
   }
   if (s) {
    r += "?";
    r += n(s, false);
   }
   if (c) {
    r += "#";
    r += n(c, false);
   }
   return r;
  }
  var x;
 },
 "jle/": function(e, t) {
  e.exports = require("os");
 },
 kmEW: function(e, t, n) {
  "use strict";
  n.r(t);
  n.d(t, "Position", function() {
   return r;
  });
  n.d(t, "Range", function() {
   return i;
  });
  n.d(t, "Location", function() {
   return a;
  });
  n.d(t, "DiagnosticRelatedInformation", function() {
   return o;
  });
  n.d(t, "DiagnosticSeverity", function() {
   return s;
  });
  n.d(t, "Diagnostic", function() {
   return c;
  });
  n.d(t, "Command", function() {
   return u;
  });
  n.d(t, "TextEdit", function() {
   return l;
  });
  n.d(t, "TextDocumentEdit", function() {
   return f;
  });
  n.d(t, "WorkspaceEdit", function() {
   return d;
  });
  n.d(t, "WorkspaceChange", function() {
   return m;
  });
  n.d(t, "TextDocumentIdentifier", function() {
   return _;
  });
  n.d(t, "VersionedTextDocumentIdentifier", function() {
   return g;
  });
  n.d(t, "TextDocumentItem", function() {
   return h;
  });
  n.d(t, "MarkupKind", function() {
   return v;
  });
  n.d(t, "MarkupContent", function() {
   return y;
  });
  n.d(t, "CompletionItemKind", function() {
   return b;
  });
  n.d(t, "InsertTextFormat", function() {
   return x;
  });
  n.d(t, "CompletionItem", function() {
   return k;
  });
  n.d(t, "CompletionList", function() {
   return S;
  });
  n.d(t, "MarkedString", function() {
   return w;
  });
  n.d(t, "Hover", function() {
   return C;
  });
  n.d(t, "ParameterInformation", function() {
   return D;
  });
  n.d(t, "SignatureInformation", function() {
   return T;
  });
  n.d(t, "DocumentHighlightKind", function() {
   return E;
  });
  n.d(t, "DocumentHighlight", function() {
   return N;
  });
  n.d(t, "SymbolKind", function() {
   return A;
  });
  n.d(t, "SymbolInformation", function() {
   return F;
  });
  n.d(t, "CodeActionKind", function() {
   return P;
  });
  n.d(t, "CodeActionContext", function() {
   return I;
  });
  n.d(t, "CodeAction", function() {
   return O;
  });
  n.d(t, "CodeLens", function() {
   return M;
  });
  n.d(t, "FormattingOptions", function() {
   return L;
  });
  n.d(t, "DocumentLink", function() {
   return R;
  });
  n.d(t, "EOL", function() {
   return B;
  });
  n.d(t, "TextDocument", function() {
   return z;
  });
  n.d(t, "TextDocumentSaveReason", function() {
   return j;
  });
  var r;
  (function(e) {
   function t(e, t) {
    return {
     line: e,
     character: t
    };
   }
   e.create = t;
   function n(e) {
    var t = e;
    return U.objectLiteral(t) && U.number(t.line) && U.number(t.character);
   }
   e.is = n;
  })(r || (r = {}));
  var i;
  (function(e) {
   function t(e, t, n, i) {
    if (U.number(e) && U.number(t) && U.number(n) && U.number(i)) {
     return {
      start: r.create(e, t),
      end: r.create(n, i)
     };
    } else if (r.is(e) && r.is(t)) {
     return {
      start: e,
      end: t
     };
    } else {
     throw new Error("Range#create called with invalid arguments[" + e + ", " + t + ", " + n + ", " + i + "]");
    }
   }
   e.create = t;
   function n(e) {
    var t = e;
    return U.objectLiteral(t) && r.is(t.start) && r.is(t.end);
   }
   e.is = n;
  })(i || (i = {}));
  var a;
  (function(e) {
   function t(e, t) {
    return {
     uri: e,
     range: t
    };
   }
   e.create = t;
   function n(e) {
    var t = e;
    return U.defined(t) && i.is(t.range) && (U.string(t.uri) || U.undefined(t.uri));
   }
   e.is = n;
  })(a || (a = {}));
  var o;
  (function(e) {
   function t(e, t) {
    return {
     location: e,
     message: t
    };
   }
   e.create = t;
   function n(e) {
    var t = e;
    return U.defined(t) && a.is(t.location) && U.string(t.message);
   }
   e.is = n;
  })(o || (o = {}));
  var s;
  (function(e) {
   e.Error = 1;
   e.Warning = 2;
   e.Information = 3;
   e.Hint = 4;
  })(s || (s = {}));
  var c;
  (function(e) {
   function t(e, t, n, r, i, a) {
    var o = {
     range: e,
     message: t
    };
    if (U.defined(n)) {
     o.severity = n;
    }
    if (U.defined(r)) {
     o.code = r;
    }
    if (U.defined(i)) {
     o.source = i;
    }
    if (U.defined(a)) {
     o.relatedInformation = a;
    }
    return o;
   }
   e.create = t;
   function n(e) {
    var t = e;
    return U.defined(t) && i.is(t.range) && U.string(t.message) && (U.number(t.severity) || U.undefined(t.severity)) && (U.number(t.code) || U.string(t.code) || U.undefined(t.code)) && (U.string(t.source) || U.undefined(t.source)) && (U.undefined(t.relatedInformation) || U.typedArray(t.relatedInformation, o.is));
   }
   e.is = n;
  })(c || (c = {}));
  var u;
  (function(e) {
   function t(e, t) {
    var n = [];
    for (var r = 2; r < arguments.length; r++) {
     n[r - 2] = arguments[r];
    }
    var i = {
     title: e,
     command: t
    };
    if (U.defined(n) && n.length > 0) {
     i.arguments = n;
    }
    return i;
   }
   e.create = t;
   function n(e) {
    var t = e;
    return U.defined(t) && U.string(t.title) && U.string(t.command);
   }
   e.is = n;
  })(u || (u = {}));
  var l;
  (function(e) {
   function t(e, t) {
    return {
     range: e,
     newText: t
    };
   }
   e.replace = t;
   function n(e, t) {
    return {
     range: {
      start: e,
      end: e
     },
     newText: t
    };
   }
   e.insert = n;
   function r(e) {
    return {
     range: e,
     newText: ""
    };
   }
   e.del = r;
  })(l || (l = {}));
  var f;
  (function(e) {
   function t(e, t) {
    return {
     textDocument: e,
     edits: t
    };
   }
   e.create = t;
   function n(e) {
    var t = e;
    return U.defined(t) && g.is(t.textDocument) && Array.isArray(t.edits);
   }
   e.is = n;
  })(f || (f = {}));
  var d;
  (function(e) {
   function t(e) {
    var t = e;
    return t && (t.changes !== void 0 || t.documentChanges !== void 0) && (t.documentChanges === void 0 || U.typedArray(t.documentChanges, f.is));
   }
   e.is = t;
  })(d || (d = {}));
  var p = function() {
   function e(e) {
    this.edits = e;
   }
   e.prototype.insert = function(e, t) {
    this.edits.push(l.insert(e, t));
   };
   e.prototype.replace = function(e, t) {
    this.edits.push(l.replace(e, t));
   };
   e.prototype.delete = function(e) {
    this.edits.push(l.del(e));
   };
   e.prototype.add = function(e) {
    this.edits.push(e);
   };
   e.prototype.all = function() {
    return this.edits;
   };
   e.prototype.clear = function() {
    this.edits.splice(0, this.edits.length);
   };
   return e;
  }();
  var m = function() {
   function e(e) {
    var t = this;
    this._textEditChanges = Object.create(null);
    if (e) {
     this._workspaceEdit = e;
     if (e.documentChanges) {
      e.documentChanges.forEach(function(e) {
       var n = new p(e.edits);
       t._textEditChanges[e.textDocument.uri] = n;
      });
     } else if (e.changes) {
      Object.keys(e.changes).forEach(function(n) {
       var r = new p(e.changes[n]);
       t._textEditChanges[n] = r;
      });
     }
    }
   }
   Object.defineProperty(e.prototype, "edit", {
    get: function() {
     return this._workspaceEdit;
    },
    enumerable: true,
    configurable: true
   });
   e.prototype.getTextEditChange = function(e) {
    if (g.is(e)) {
     if (!this._workspaceEdit) {
      this._workspaceEdit = {
       documentChanges: []
      };
     }
     if (!this._workspaceEdit.documentChanges) {
      throw new Error("Workspace edit is not configured for versioned document changes.");
     }
     var t = e;
     var n = this._textEditChanges[t.uri];
     if (!n) {
      var r = [];
      var i = {
       textDocument: t,
       edits: r
      };
      this._workspaceEdit.documentChanges.push(i);
      n = new p(r);
      this._textEditChanges[t.uri] = n;
     }
     return n;
    } else {
     if (!this._workspaceEdit) {
      this._workspaceEdit = {
       changes: Object.create(null)
      };
     }
     if (!this._workspaceEdit.changes) {
      throw new Error("Workspace edit is not configured for normal text edit changes.");
     }
     var n = this._textEditChanges[e];
     if (!n) {
      var r = [];
      this._workspaceEdit.changes[e] = r;
      n = new p(r);
      this._textEditChanges[e] = n;
     }
     return n;
    }
   };
   return e;
  }();
  var _;
  (function(e) {
   function t(e) {
    return {
     uri: e
    };
   }
   e.create = t;
   function n(e) {
    var t = e;
    return U.defined(t) && U.string(t.uri);
   }
   e.is = n;
  })(_ || (_ = {}));
  var g;
  (function(e) {
   function t(e, t) {
    return {
     uri: e,
     version: t
    };
   }
   e.create = t;
   function n(e) {
    var t = e;
    return U.defined(t) && U.string(t.uri) && U.number(t.version);
   }
   e.is = n;
  })(g || (g = {}));
  var h;
  (function(e) {
   function t(e, t, n, r) {
    return {
     uri: e,
     languageId: t,
     version: n,
     text: r
    };
   }
   e.create = t;
   function n(e) {
    var t = e;
    return U.defined(t) && U.string(t.uri) && U.string(t.languageId) && U.number(t.version) && U.string(t.text);
   }
   e.is = n;
  })(h || (h = {}));
  var v;
  (function(e) {
   e.PlainText = "plaintext";
   e.Markdown = "markdown";
  })(v || (v = {}));
  (function(e) {
   function t(t) {
    var n = t;
    return n === e.PlainText || n === e.Markdown;
   }
   e.is = t;
  })(v || (v = {}));
  var y;
  (function(e) {
   function t(e) {
    var t = e;
    return U.objectLiteral(e) && v.is(t.kind) && U.string(t.value);
   }
   e.is = t;
  })(y || (y = {}));
  var b;
  (function(e) {
   e.Text = 1;
   e.Method = 2;
   e.Function = 3;
   e.Constructor = 4;
   e.Field = 5;
   e.Variable = 6;
   e.Class = 7;
   e.Interface = 8;
   e.Module = 9;
   e.Property = 10;
   e.Unit = 11;
   e.Value = 12;
   e.Enum = 13;
   e.Keyword = 14;
   e.Snippet = 15;
   e.Color = 16;
   e.File = 17;
   e.Reference = 18;
   e.Folder = 19;
   e.EnumMember = 20;
   e.Constant = 21;
   e.Struct = 22;
   e.Event = 23;
   e.Operator = 24;
   e.TypeParameter = 25;
  })(b || (b = {}));
  var x;
  (function(e) {
   e.PlainText = 1;
   e.Snippet = 2;
  })(x || (x = {}));
  var k;
  (function(e) {
   function t(e) {
    return {
     label: e
    };
   }
   e.create = t;
  })(k || (k = {}));
  var S;
  (function(e) {
   function t(e, t) {
    return {
     items: e ? e : [],
     isIncomplete: !!t
    };
   }
   e.create = t;
  })(S || (S = {}));
  var w;
  (function(e) {
   function t(e) {
    return e.replace(/[\\`*_{}[\]()#+\-.!]/g, "\\$&");
   }
   e.fromPlainText = t;
   function n(e) {
    var t = e;
    return U.string(t) || U.objectLiteral(t) && U.string(t.language) && U.string(t.value);
   }
   e.is = n;
  })(w || (w = {}));
  var C;
  (function(e) {
   function t(e) {
    var t = e;
    return U.objectLiteral(t) && (y.is(t.contents) || w.is(t.contents) || U.typedArray(t.contents, w.is)) && (e.range === void 0 || i.is(e.range));
   }
   e.is = t;
  })(C || (C = {}));
  var D;
  (function(e) {
   function t(e, t) {
    return t ? {
     label: e,
     documentation: t
    } : {
     label: e
    };
   }
   e.create = t;
  })(D || (D = {}));
  var T;
  (function(e) {
   function t(e, t) {
    var n = [];
    for (var r = 2; r < arguments.length; r++) {
     n[r - 2] = arguments[r];
    }
    var i = {
     label: e
    };
    if (U.defined(t)) {
     i.documentation = t;
    }
    if (U.defined(n)) {
     i.parameters = n;
    } else {
     i.parameters = [];
    }
    return i;
   }
   e.create = t;
  })(T || (T = {}));
  var E;
  (function(e) {
   e.Text = 1;
   e.Read = 2;
   e.Write = 3;
  })(E || (E = {}));
  var N;
  (function(e) {
   function t(e, t) {
    var n = {
     range: e
    };
    if (U.number(t)) {
     n.kind = t;
    }
    return n;
   }
   e.create = t;
  })(N || (N = {}));
  var A;
  (function(e) {
   e.File = 1;
   e.Module = 2;
   e.Namespace = 3;
   e.Package = 4;
   e.Class = 5;
   e.Method = 6;
   e.Property = 7;
   e.Field = 8;
   e.Constructor = 9;
   e.Enum = 10;
   e.Interface = 11;
   e.Function = 12;
   e.Variable = 13;
   e.Constant = 14;
   e.String = 15;
   e.Number = 16;
   e.Boolean = 17;
   e.Array = 18;
   e.Object = 19;
   e.Key = 20;
   e.Null = 21;
   e.EnumMember = 22;
   e.Struct = 23;
   e.Event = 24;
   e.Operator = 25;
   e.TypeParameter = 26;
  })(A || (A = {}));
  var F;
  (function(e) {
   function t(e, t, n, r, i) {
    var a = {
     name: e,
     kind: t,
     location: {
      uri: r,
      range: n
     }
    };
    if (i) {
     a.containerName = i;
    }
    return a;
   }
   e.create = t;
  })(F || (F = {}));
  var P;
  (function(e) {
   e.QuickFix = "quickfix";
   e.Refactor = "refactor";
   e.RefactorExtract = "refactor.extract";
   e.RefactorInline = "refactor.inline";
   e.RefactorRewrite = "refactor.rewrite";
   e.Source = "source";
   e.SourceOrganizeImports = "source.organizeImports";
  })(P || (P = {}));
  var I;
  (function(e) {
   function t(e, t) {
    var n = {
     diagnostics: e
    };
    if (t !== void 0 && t !== null) {
     n.only = t;
    }
    return n;
   }
   e.create = t;
   function n(e) {
    var t = e;
    return U.defined(t) && U.typedArray(t.diagnostics, c.is) && (t.only === void 0 || U.typedArray(t.only, U.string));
   }
   e.is = n;
  })(I || (I = {}));
  var O;
  (function(e) {
   function t(e, t, n) {
    var r = {
     title: e
    };
    if (u.is(t)) {
     r.command = t;
    } else {
     r.edit = t;
    }
    if (n !== void null) {
     r.kind = n;
    }
    return r;
   }
   e.create = t;
   function n(e) {
    var t = e;
    return t && U.string(t.title) && (t.diagnostics === void 0 || U.typedArray(t.diagnostics, c.is)) && (t.kind === void 0 || U.string(t.kind)) && (t.edit !== void 0 || t.command !== void 0) && (t.command === void 0 || u.is(t.command)) && (t.edit === void 0 || d.is(t.edit));
   }
   e.is = n;
  })(O || (O = {}));
  var M;
  (function(e) {
   function t(e, t) {
    var n = {
     range: e
    };
    if (U.defined(t)) n.data = t;
    return n;
   }
   e.create = t;
   function n(e) {
    var t = e;
    return U.defined(t) && i.is(t.range) && (U.undefined(t.command) || u.is(t.command));
   }
   e.is = n;
  })(M || (M = {}));
  var L;
  (function(e) {
   function t(e, t) {
    return {
     tabSize: e,
     insertSpaces: t
    };
   }
   e.create = t;
   function n(e) {
    var t = e;
    return U.defined(t) && U.number(t.tabSize) && U.boolean(t.insertSpaces);
   }
   e.is = n;
  })(L || (L = {}));
  var R = function() {
   function e() {}
   return e;
  }();
  (function(e) {
   function t(e, t, n) {
    return {
     range: e,
     target: t,
     data: n
    };
   }
   e.create = t;
   function n(e) {
    var t = e;
    return U.defined(t) && i.is(t.range) && (U.undefined(t.target) || U.string(t.target));
   }
   e.is = n;
  })(R || (R = {}));
  var B = [ "\n", "\r\n", "\r" ];
  var z;
  (function(e) {
   function t(e, t, n, r) {
    return new q(e, t, n, r);
   }
   e.create = t;
   function n(e) {
    var t = e;
    return U.defined(t) && U.string(t.uri) && (U.undefined(t.languageId) || U.string(t.languageId)) && U.number(t.lineCount) && U.func(t.getText) && U.func(t.positionAt) && U.func(t.offsetAt) ? true : false;
   }
   e.is = n;
   function r(e, t) {
    var n = e.getText();
    var r = i(t, function(e, t) {
     var n = e.range.start.line - t.range.start.line;
     if (n === 0) {
      return e.range.start.character - t.range.start.character;
     }
     return n;
    });
    var a = n.length;
    for (var o = r.length - 1; o >= 0; o--) {
     var s = r[o];
     var c = e.offsetAt(s.range.start);
     var u = e.offsetAt(s.range.end);
     if (u <= a) {
      n = n.substring(0, c) + s.newText + n.substring(u, n.length);
     } else {
      throw new Error("Ovelapping edit");
     }
     a = c;
    }
    return n;
   }
   e.applyEdits = r;
   function i(e, t) {
    if (e.length <= 1) {
     return e;
    }
    var n = e.length / 2 | 0;
    var r = e.slice(0, n);
    var a = e.slice(n);
    i(r, t);
    i(a, t);
    var o = 0;
    var s = 0;
    var c = 0;
    while (o < r.length && s < a.length) {
     var u = t(r[o], a[s]);
     if (u <= 0) {
      e[c++] = r[o++];
     } else {
      e[c++] = a[s++];
     }
    }
    while (o < r.length) {
     e[c++] = r[o++];
    }
    while (s < a.length) {
     e[c++] = a[s++];
    }
    return e;
   }
  })(z || (z = {}));
  var j;
  (function(e) {
   e.Manual = 1;
   e.AfterDelay = 2;
   e.FocusOut = 3;
  })(j || (j = {}));
  var q = function() {
   function e(e, t, n, r) {
    this._uri = e;
    this._languageId = t;
    this._version = n;
    this._content = r;
    this._lineOffsets = null;
   }
   Object.defineProperty(e.prototype, "uri", {
    get: function() {
     return this._uri;
    },
    enumerable: true,
    configurable: true
   });
   Object.defineProperty(e.prototype, "languageId", {
    get: function() {
     return this._languageId;
    },
    enumerable: true,
    configurable: true
   });
   Object.defineProperty(e.prototype, "version", {
    get: function() {
     return this._version;
    },
    enumerable: true,
    configurable: true
   });
   e.prototype.getText = function(e) {
    if (e) {
     var t = this.offsetAt(e.start);
     var n = this.offsetAt(e.end);
     return this._content.substring(t, n);
    }
    return this._content;
   };
   e.prototype.update = function(e, t) {
    this._content = e.text;
    this._version = t;
    this._lineOffsets = null;
   };
   e.prototype.getLineOffsets = function() {
    if (this._lineOffsets === null) {
     var e = [];
     var t = this._content;
     var n = true;
     for (var r = 0; r < t.length; r++) {
      if (n) {
       e.push(r);
       n = false;
      }
      var i = t.charAt(r);
      n = i === "\r" || i === "\n";
      if (i === "\r" && r + 1 < t.length && t.charAt(r + 1) === "\n") {
       r++;
      }
     }
     if (n && t.length > 0) {
      e.push(t.length);
     }
     this._lineOffsets = e;
    }
    return this._lineOffsets;
   };
   e.prototype.positionAt = function(e) {
    e = Math.max(Math.min(e, this._content.length), 0);
    var t = this.getLineOffsets();
    var n = 0, i = t.length;
    if (i === 0) {
     return r.create(0, e);
    }
    while (n < i) {
     var a = Math.floor((n + i) / 2);
     if (t[a] > e) {
      i = a;
     } else {
      n = a + 1;
     }
    }
    var o = n - 1;
    return r.create(o, e - t[o]);
   };
   e.prototype.offsetAt = function(e) {
    var t = this.getLineOffsets();
    if (e.line >= t.length) {
     return this._content.length;
    } else if (e.line < 0) {
     return 0;
    }
    var n = t[e.line];
    var r = e.line + 1 < t.length ? t[e.line + 1] : this._content.length;
    return Math.max(Math.min(n + e.character, r), n);
   };
   Object.defineProperty(e.prototype, "lineCount", {
    get: function() {
     return this.getLineOffsets().length;
    },
    enumerable: true,
    configurable: true
   });
   return e;
  }();
  var U;
  (function(e) {
   var t = Object.prototype.toString;
   function n(e) {
    return typeof e !== "undefined";
   }
   e.defined = n;
   function r(e) {
    return typeof e === "undefined";
   }
   e.undefined = r;
   function i(e) {
    return e === true || e === false;
   }
   e.boolean = i;
   function a(e) {
    return t.call(e) === "[object String]";
   }
   e.string = a;
   function o(e) {
    return t.call(e) === "[object Number]";
   }
   e.number = o;
   function s(e) {
    return t.call(e) === "[object Function]";
   }
   e.func = s;
   function c(e) {
    return e !== null && typeof e === "object";
   }
   e.objectLiteral = c;
   function u(e, t) {
    return Array.isArray(e) && e.every(t);
   }
   e.typedArray = u;
  })(U || (U = {}));
 },
 "mw/K": function(e, t) {
  e.exports = require("fs");
 },
 mz6j: function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  class r {
   constructor(e) {
    this._value = e;
   }
   asHex() {
    return this._value;
   }
   equals(e) {
    return this.asHex() === e.asHex();
   }
  }
  class i extends r {
   constructor() {
    super([ i._randomHex(), i._randomHex(), i._randomHex(), i._randomHex(), i._randomHex(), i._randomHex(), i._randomHex(), i._randomHex(), "-", i._randomHex(), i._randomHex(), i._randomHex(), i._randomHex(), "-", "4", i._randomHex(), i._randomHex(), i._randomHex(), "-", i._oneOf(i._timeHighBits), i._randomHex(), i._randomHex(), i._randomHex(), "-", i._randomHex(), i._randomHex(), i._randomHex(), i._randomHex(), i._randomHex(), i._randomHex(), i._randomHex(), i._randomHex(), i._randomHex(), i._randomHex(), i._randomHex(), i._randomHex() ].join(""));
   }
   static _oneOf(e) {
    return e[Math.floor(e.length * Math.random())];
   }
   static _randomHex() {
    return i._oneOf(i._chars);
   }
  }
  i._chars = [ "0", "1", "2", "3", "4", "5", "6", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f" ];
  i._timeHighBits = [ "8", "9", "a", "b" ];
  t.empty = new r("00000000-0000-0000-0000-000000000000");
  function a() {
   return new i();
  }
  t.v4 = a;
  const o = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;
  function s(e) {
   return o.test(e);
  }
  t.isUUID = s;
  function c(e) {
   if (!s(e)) {
    throw new Error("invalid uuid");
   }
   return new r(e);
  }
  t.parse = c;
  function u() {
   return a().asHex();
  }
  t.generateUuid = u;
 },
 owkM: function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  const r = Object.prototype.toString;
  function i(e) {
   return e === true || e === false;
  }
  t.boolean = i;
  function a(e) {
   return r.call(e) === "[object String]";
  }
  t.string = a;
  function o(e) {
   return r.call(e) === "[object Number]";
  }
  t.number = o;
  function s(e) {
   return r.call(e) === "[object Error]";
  }
  t.error = s;
  function c(e) {
   return r.call(e) === "[object Function]";
  }
  t.func = c;
  function u(e) {
   return Array.isArray(e);
  }
  t.array = u;
  function l(e) {
   return u(e) && e.every(e => a(e));
  }
  t.stringArray = l;
  function f(e, t) {
   return Array.isArray(e) && e.every(t);
  }
  t.typedArray = f;
  function d(e) {
   return e && c(e.then);
  }
  t.thenable = d;
 },
 oyvS: function(e, t) {
  e.exports = require("path");
 },
 qL5x: function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  var r = n("oyvS");
  var i = n("jle/");
  var a = n("PJMN");
  var o = n("Qs2e");
  var s = n("uWpP");
  var c = n("vIUA");
  function u() {
   var e = a.randomBytes(21).toString("hex");
   if (process.platform === "win32") {
    return "\\\\.\\pipe\\vscode-jsonrpc-" + e + "-sock";
   } else {
    return r.join(i.tmpdir(), "vscode-" + e + ".sock");
   }
  }
  t.generateRandomPipeName = u;
  function l(e, t) {
   if (t === void 0) {
    t = "utf-8";
   }
   var n;
   var r = new Promise(function(e, t) {
    n = e;
   });
   return new Promise(function(i, a) {
    var u = o.createServer(function(e) {
     u.close();
     n([ new s.SocketMessageReader(e, t), new c.SocketMessageWriter(e, t) ]);
    });
    u.on("error", a);
    u.listen(e, function() {
     u.removeListener("error", a);
     i({
      onConnected: function() {
       return r;
      }
     });
    });
   });
  }
  t.createClientPipeTransport = l;
  function f(e, t) {
   if (t === void 0) {
    t = "utf-8";
   }
   var n = o.createConnection(e);
   return [ new s.SocketMessageReader(n, t), new c.SocketMessageWriter(n, t) ];
  }
  t.createServerPipeTransport = f;
 },
 "qS/b": function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  var r = n("kmEW");
  var i = n("5TYg");
  var a = n("+OJx");
  function o(e, t, n, o, s, c) {
   var u = [];
   var l = n.end;
   var f = t.offsetAt(l);
   var d = t.getText();
   if (l.character === 0 && l.line > 0 && f !== d.length) {
    var p = t.offsetAt(r.Position.create(l.line - 1, 0));
    while (a.isEOL(d, f - 1) && f > p) {
     f--;
    }
    n = r.Range.create(n.start, t.positionAt(f));
   }
   var m = e.getModesInRange(t, n);
   var _ = 0;
   var g = n.start;
   var h = function(e) {
    return e.mode && e.mode.getId() === "html";
   };
   while (_ < m.length && !h(m[_])) {
    var v = m[_];
    if (!v.attributeValue && v.mode && v.mode.format) {
     var y = v.mode.format(t, r.Range.create(g, v.end), o, s);
     i.pushAll(u, y);
    }
    g = v.end;
    _++;
   }
   if (_ === m.length) {
    return u;
   }
   n = r.Range.create(g, n.end);
   var b = e.getMode("html");
   var x = b.format(t, n, o, s);
   var k = r.TextDocument.applyEdits(t, x);
   var S = r.TextDocument.create(t.uri + ".tmp", t.languageId, t.version, k);
   try {
    var w = t.getText().length - t.offsetAt(n.end);
    var C = r.Range.create(n.start, S.positionAt(k.length - w));
    var D = e.getModesInRange(S, C);
    var T = [];
    for (var E = 0, N = D; E < N.length; E++) {
     var A = N[E];
     var F = A.mode;
     if (F && F.format && c[F.getId()] && !A.attributeValue) {
      var y = F.format(S, A, o, s);
      for (var P = 0, I = y; P < I.length; P++) {
       var O = I[P];
       T.push(O);
      }
     }
    }
    if (T.length === 0) {
     i.pushAll(u, x);
     return u;
    }
    var M = r.TextDocument.applyEdits(S, T);
    var L = M.substring(t.offsetAt(n.start), M.length - w);
    u.push(r.TextEdit.replace(n, L));
    return u;
   } finally {
    e.onDocumentRemoved(S);
   }
  }
  t.format = o;
 },
 rQwE: function(e, t, n) {
  var r = n("toBv");
  var i = n("Q0UQ");
  var a = n("a2YK").ArraySet;
  var o = n("2kav");
  var s = n("60ax").quickSort;
  function c(e, t) {
   var n = e;
   if (typeof e === "string") {
    n = r.parseSourceMapInput(e);
   }
   return n.sections != null ? new f(n, t) : new u(n, t);
  }
  c.fromSourceMap = function(e, t) {
   return u.fromSourceMap(e, t);
  };
  c.prototype._version = 3;
  c.prototype.__generatedMappings = null;
  Object.defineProperty(c.prototype, "_generatedMappings", {
   configurable: true,
   enumerable: true,
   get: function() {
    if (!this.__generatedMappings) {
     this._parseMappings(this._mappings, this.sourceRoot);
    }
    return this.__generatedMappings;
   }
  });
  c.prototype.__originalMappings = null;
  Object.defineProperty(c.prototype, "_originalMappings", {
   configurable: true,
   enumerable: true,
   get: function() {
    if (!this.__originalMappings) {
     this._parseMappings(this._mappings, this.sourceRoot);
    }
    return this.__originalMappings;
   }
  });
  c.prototype._charIsMappingSeparator = function e(t, n) {
   var r = t.charAt(n);
   return r === ";" || r === ",";
  };
  c.prototype._parseMappings = function e(t, n) {
   throw new Error("Subclasses must implement _parseMappings");
  };
  c.GENERATED_ORDER = 1;
  c.ORIGINAL_ORDER = 2;
  c.GREATEST_LOWER_BOUND = 1;
  c.LEAST_UPPER_BOUND = 2;
  c.prototype.eachMapping = function e(t, n, i) {
   var a = n || null;
   var o = i || c.GENERATED_ORDER;
   var s;
   switch (o) {
   case c.GENERATED_ORDER:
    s = this._generatedMappings;
    break;

   case c.ORIGINAL_ORDER:
    s = this._originalMappings;
    break;

   default:
    throw new Error("Unknown order of iteration.");
   }
   var u = this.sourceRoot;
   s.map(function(e) {
    var t = e.source === null ? null : this._sources.at(e.source);
    t = r.computeSourceURL(u, t, this._sourceMapURL);
    return {
     source: t,
     generatedLine: e.generatedLine,
     generatedColumn: e.generatedColumn,
     originalLine: e.originalLine,
     originalColumn: e.originalColumn,
     name: e.name === null ? null : this._names.at(e.name)
    };
   }, this).forEach(t, a);
  };
  c.prototype.allGeneratedPositionsFor = function e(t) {
   var n = r.getArg(t, "line");
   var a = {
    source: r.getArg(t, "source"),
    originalLine: n,
    originalColumn: r.getArg(t, "column", 0)
   };
   a.source = this._findSourceIndex(a.source);
   if (a.source < 0) {
    return [];
   }
   var o = [];
   var s = this._findMapping(a, this._originalMappings, "originalLine", "originalColumn", r.compareByOriginalPositions, i.LEAST_UPPER_BOUND);
   if (s >= 0) {
    var c = this._originalMappings[s];
    if (t.column === undefined) {
     var u = c.originalLine;
     while (c && c.originalLine === u) {
      o.push({
       line: r.getArg(c, "generatedLine", null),
       column: r.getArg(c, "generatedColumn", null),
       lastColumn: r.getArg(c, "lastGeneratedColumn", null)
      });
      c = this._originalMappings[++s];
     }
    } else {
     var l = c.originalColumn;
     while (c && c.originalLine === n && c.originalColumn == l) {
      o.push({
       line: r.getArg(c, "generatedLine", null),
       column: r.getArg(c, "generatedColumn", null),
       lastColumn: r.getArg(c, "lastGeneratedColumn", null)
      });
      c = this._originalMappings[++s];
     }
    }
   }
   return o;
  };
  t.SourceMapConsumer = c;
  function u(e, t) {
   var n = e;
   if (typeof e === "string") {
    n = r.parseSourceMapInput(e);
   }
   var i = r.getArg(n, "version");
   var o = r.getArg(n, "sources");
   var s = r.getArg(n, "names", []);
   var c = r.getArg(n, "sourceRoot", null);
   var u = r.getArg(n, "sourcesContent", null);
   var l = r.getArg(n, "mappings");
   var f = r.getArg(n, "file", null);
   if (i != this._version) {
    throw new Error("Unsupported version: " + i);
   }
   if (c) {
    c = r.normalize(c);
   }
   o = o.map(String).map(r.normalize).map(function(e) {
    return c && r.isAbsolute(c) && r.isAbsolute(e) ? r.relative(c, e) : e;
   });
   this._names = a.fromArray(s.map(String), true);
   this._sources = a.fromArray(o, true);
   this._absoluteSources = this._sources.toArray().map(function(e) {
    return r.computeSourceURL(c, e, t);
   });
   this.sourceRoot = c;
   this.sourcesContent = u;
   this._mappings = l;
   this._sourceMapURL = t;
   this.file = f;
  }
  u.prototype = Object.create(c.prototype);
  u.prototype.consumer = c;
  u.prototype._findSourceIndex = function(e) {
   var t = e;
   if (this.sourceRoot != null) {
    t = r.relative(this.sourceRoot, t);
   }
   if (this._sources.has(t)) {
    return this._sources.indexOf(t);
   }
   var n;
   for (n = 0; n < this._absoluteSources.length; ++n) {
    if (this._absoluteSources[n] == e) {
     return n;
    }
   }
   return -1;
  };
  u.fromSourceMap = function e(t, n) {
   var i = Object.create(u.prototype);
   var o = i._names = a.fromArray(t._names.toArray(), true);
   var c = i._sources = a.fromArray(t._sources.toArray(), true);
   i.sourceRoot = t._sourceRoot;
   i.sourcesContent = t._generateSourcesContent(i._sources.toArray(), i.sourceRoot);
   i.file = t._file;
   i._sourceMapURL = n;
   i._absoluteSources = i._sources.toArray().map(function(e) {
    return r.computeSourceURL(i.sourceRoot, e, n);
   });
   var f = t._mappings.toArray().slice();
   var d = i.__generatedMappings = [];
   var p = i.__originalMappings = [];
   for (var m = 0, _ = f.length; m < _; m++) {
    var g = f[m];
    var h = new l();
    h.generatedLine = g.generatedLine;
    h.generatedColumn = g.generatedColumn;
    if (g.source) {
     h.source = c.indexOf(g.source);
     h.originalLine = g.originalLine;
     h.originalColumn = g.originalColumn;
     if (g.name) {
      h.name = o.indexOf(g.name);
     }
     p.push(h);
    }
    d.push(h);
   }
   s(i.__originalMappings, r.compareByOriginalPositions);
   return i;
  };
  u.prototype._version = 3;
  Object.defineProperty(u.prototype, "sources", {
   get: function() {
    return this._absoluteSources.slice();
   }
  });
  function l() {
   this.generatedLine = 0;
   this.generatedColumn = 0;
   this.source = null;
   this.originalLine = null;
   this.originalColumn = null;
   this.name = null;
  }
  u.prototype._parseMappings = function e(t, n) {
   var i = 1;
   var a = 0;
   var c = 0;
   var u = 0;
   var f = 0;
   var d = 0;
   var p = t.length;
   var m = 0;
   var _ = {};
   var g = {};
   var h = [];
   var v = [];
   var y, b, x, k, S;
   while (m < p) {
    if (t.charAt(m) === ";") {
     i++;
     m++;
     a = 0;
    } else if (t.charAt(m) === ",") {
     m++;
    } else {
     y = new l();
     y.generatedLine = i;
     for (k = m; k < p; k++) {
      if (this._charIsMappingSeparator(t, k)) {
       break;
      }
     }
     b = t.slice(m, k);
     x = _[b];
     if (x) {
      m += b.length;
     } else {
      x = [];
      while (m < k) {
       o.decode(t, m, g);
       S = g.value;
       m = g.rest;
       x.push(S);
      }
      if (x.length === 2) {
       throw new Error("Found a source, but no line and column");
      }
      if (x.length === 3) {
       throw new Error("Found a source and line, but no column");
      }
      _[b] = x;
     }
     y.generatedColumn = a + x[0];
     a = y.generatedColumn;
     if (x.length > 1) {
      y.source = f + x[1];
      f += x[1];
      y.originalLine = c + x[2];
      c = y.originalLine;
      y.originalLine += 1;
      y.originalColumn = u + x[3];
      u = y.originalColumn;
      if (x.length > 4) {
       y.name = d + x[4];
       d += x[4];
      }
     }
     v.push(y);
     if (typeof y.originalLine === "number") {
      h.push(y);
     }
    }
   }
   s(v, r.compareByGeneratedPositionsDeflated);
   this.__generatedMappings = v;
   s(h, r.compareByOriginalPositions);
   this.__originalMappings = h;
  };
  u.prototype._findMapping = function e(t, n, r, a, o, s) {
   if (t[r] <= 0) {
    throw new TypeError("Line must be greater than or equal to 1, got " + t[r]);
   }
   if (t[a] < 0) {
    throw new TypeError("Column must be greater than or equal to 0, got " + t[a]);
   }
   return i.search(t, n, o, s);
  };
  u.prototype.computeColumnSpans = function e() {
   for (var t = 0; t < this._generatedMappings.length; ++t) {
    var n = this._generatedMappings[t];
    if (t + 1 < this._generatedMappings.length) {
     var r = this._generatedMappings[t + 1];
     if (n.generatedLine === r.generatedLine) {
      n.lastGeneratedColumn = r.generatedColumn - 1;
      continue;
     }
    }
    n.lastGeneratedColumn = Infinity;
   }
  };
  u.prototype.originalPositionFor = function e(t) {
   var n = {
    generatedLine: r.getArg(t, "line"),
    generatedColumn: r.getArg(t, "column")
   };
   var i = this._findMapping(n, this._generatedMappings, "generatedLine", "generatedColumn", r.compareByGeneratedPositionsDeflated, r.getArg(t, "bias", c.GREATEST_LOWER_BOUND));
   if (i >= 0) {
    var a = this._generatedMappings[i];
    if (a.generatedLine === n.generatedLine) {
     var o = r.getArg(a, "source", null);
     if (o !== null) {
      o = this._sources.at(o);
      o = r.computeSourceURL(this.sourceRoot, o, this._sourceMapURL);
     }
     var s = r.getArg(a, "name", null);
     if (s !== null) {
      s = this._names.at(s);
     }
     return {
      source: o,
      line: r.getArg(a, "originalLine", null),
      column: r.getArg(a, "originalColumn", null),
      name: s
     };
    }
   }
   return {
    source: null,
    line: null,
    column: null,
    name: null
   };
  };
  u.prototype.hasContentsOfAllSources = function e() {
   if (!this.sourcesContent) {
    return false;
   }
   return this.sourcesContent.length >= this._sources.size() && !this.sourcesContent.some(function(e) {
    return e == null;
   });
  };
  u.prototype.sourceContentFor = function e(t, n) {
   if (!this.sourcesContent) {
    return null;
   }
   var i = this._findSourceIndex(t);
   if (i >= 0) {
    return this.sourcesContent[i];
   }
   var a = t;
   if (this.sourceRoot != null) {
    a = r.relative(this.sourceRoot, a);
   }
   var o;
   if (this.sourceRoot != null && (o = r.urlParse(this.sourceRoot))) {
    var s = a.replace(/^file:\/\//, "");
    if (o.scheme == "file" && this._sources.has(s)) {
     return this.sourcesContent[this._sources.indexOf(s)];
    }
    if ((!o.path || o.path == "/") && this._sources.has("/" + a)) {
     return this.sourcesContent[this._sources.indexOf("/" + a)];
    }
   }
   if (n) {
    return null;
   } else {
    throw new Error('"' + a + '" is not in the SourceMap.');
   }
  };
  u.prototype.generatedPositionFor = function e(t) {
   var n = r.getArg(t, "source");
   n = this._findSourceIndex(n);
   if (n < 0) {
    return {
     line: null,
     column: null,
     lastColumn: null
    };
   }
   var i = {
    source: n,
    originalLine: r.getArg(t, "line"),
    originalColumn: r.getArg(t, "column")
   };
   var a = this._findMapping(i, this._originalMappings, "originalLine", "originalColumn", r.compareByOriginalPositions, r.getArg(t, "bias", c.GREATEST_LOWER_BOUND));
   if (a >= 0) {
    var o = this._originalMappings[a];
    if (o.source === i.source) {
     return {
      line: r.getArg(o, "generatedLine", null),
      column: r.getArg(o, "generatedColumn", null),
      lastColumn: r.getArg(o, "lastGeneratedColumn", null)
     };
    }
   }
   return {
    line: null,
    column: null,
    lastColumn: null
   };
  };
  t.BasicSourceMapConsumer = u;
  function f(e, t) {
   var n = e;
   if (typeof e === "string") {
    n = r.parseSourceMapInput(e);
   }
   var i = r.getArg(n, "version");
   var o = r.getArg(n, "sections");
   if (i != this._version) {
    throw new Error("Unsupported version: " + i);
   }
   this._sources = new a();
   this._names = new a();
   var s = {
    line: -1,
    column: 0
   };
   this._sections = o.map(function(e) {
    if (e.url) {
     throw new Error("Support for url field in sections not implemented.");
    }
    var n = r.getArg(e, "offset");
    var i = r.getArg(n, "line");
    var a = r.getArg(n, "column");
    if (i < s.line || i === s.line && a < s.column) {
     throw new Error("Section offsets must be ordered and non-overlapping.");
    }
    s = n;
    return {
     generatedOffset: {
      generatedLine: i + 1,
      generatedColumn: a + 1
     },
     consumer: new c(r.getArg(e, "map"), t)
    };
   });
  }
  f.prototype = Object.create(c.prototype);
  f.prototype.constructor = c;
  f.prototype._version = 3;
  Object.defineProperty(f.prototype, "sources", {
   get: function() {
    var e = [];
    for (var t = 0; t < this._sections.length; t++) {
     for (var n = 0; n < this._sections[t].consumer.sources.length; n++) {
      e.push(this._sections[t].consumer.sources[n]);
     }
    }
    return e;
   }
  });
  f.prototype.originalPositionFor = function e(t) {
   var n = {
    generatedLine: r.getArg(t, "line"),
    generatedColumn: r.getArg(t, "column")
   };
   var a = i.search(n, this._sections, function(e, t) {
    var n = e.generatedLine - t.generatedOffset.generatedLine;
    if (n) {
     return n;
    }
    return e.generatedColumn - t.generatedOffset.generatedColumn;
   });
   var o = this._sections[a];
   if (!o) {
    return {
     source: null,
     line: null,
     column: null,
     name: null
    };
   }
   return o.consumer.originalPositionFor({
    line: n.generatedLine - (o.generatedOffset.generatedLine - 1),
    column: n.generatedColumn - (o.generatedOffset.generatedLine === n.generatedLine ? o.generatedOffset.generatedColumn - 1 : 0),
    bias: t.bias
   });
  };
  f.prototype.hasContentsOfAllSources = function e() {
   return this._sections.every(function(e) {
    return e.consumer.hasContentsOfAllSources();
   });
  };
  f.prototype.sourceContentFor = function e(t, n) {
   for (var r = 0; r < this._sections.length; r++) {
    var i = this._sections[r];
    var a = i.consumer.sourceContentFor(t, true);
    if (a) {
     return a;
    }
   }
   if (n) {
    return null;
   } else {
    throw new Error('"' + t + '" is not in the SourceMap.');
   }
  };
  f.prototype.generatedPositionFor = function e(t) {
   for (var n = 0; n < this._sections.length; n++) {
    var i = this._sections[n];
    if (i.consumer._findSourceIndex(r.getArg(t, "source")) === -1) {
     continue;
    }
    var a = i.consumer.generatedPositionFor(t);
    if (a) {
     var o = {
      line: a.line + (i.generatedOffset.generatedLine - 1),
      column: a.column + (i.generatedOffset.generatedLine === a.line ? i.generatedOffset.generatedColumn - 1 : 0)
     };
     return o;
    }
   }
   return {
    line: null,
    column: null
   };
  };
  f.prototype._parseMappings = function e(t, n) {
   this.__generatedMappings = [];
   this.__originalMappings = [];
   for (var i = 0; i < this._sections.length; i++) {
    var a = this._sections[i];
    var o = a.consumer._generatedMappings;
    for (var c = 0; c < o.length; c++) {
     var u = o[c];
     var l = a.consumer._sources.at(u.source);
     l = r.computeSourceURL(a.consumer.sourceRoot, l, this._sourceMapURL);
     this._sources.add(l);
     l = this._sources.indexOf(l);
     var f = null;
     if (u.name) {
      f = a.consumer._names.at(u.name);
      this._names.add(f);
      f = this._names.indexOf(f);
     }
     var d = {
      source: l,
      generatedLine: u.generatedLine + (a.generatedOffset.generatedLine - 1),
      generatedColumn: u.generatedColumn + (a.generatedOffset.generatedLine === u.generatedLine ? a.generatedOffset.generatedColumn - 1 : 0),
      originalLine: u.originalLine,
      originalColumn: u.originalColumn,
      name: f
     };
     this.__generatedMappings.push(d);
     if (typeof d.originalLine === "number") {
      this.__originalMappings.push(d);
     }
    }
   }
   s(this.__generatedMappings, r.compareByGeneratedPositionsDeflated);
   s(this.__originalMappings, r.compareByOriginalPositions);
  };
  t.IndexedSourceMapConsumer = f;
 },
 sKAq: function(e, t, n) {
  var r = n("9o2r").SourceMapGenerator;
  var i = n("toBv");
  var a = /(\r?\n)/;
  var o = 10;
  var s = "$$$isSourceNode$$$";
  function c(e, t, n, r, i) {
   this.children = [];
   this.sourceContents = {};
   this.line = e == null ? null : e;
   this.column = t == null ? null : t;
   this.source = n == null ? null : n;
   this.name = i == null ? null : i;
   this[s] = true;
   if (r != null) this.add(r);
  }
  c.fromStringWithSourceMap = function e(t, n, r) {
   var o = new c();
   var s = t.split(a);
   var u = 0;
   var l = function() {
    var e = n();
    var t = n() || "";
    return e + t;
    function n() {
     return u < s.length ? s[u++] : undefined;
    }
   };
   var f = 1, d = 0;
   var p = null;
   n.eachMapping(function(e) {
    if (p !== null) {
     if (f < e.generatedLine) {
      m(p, l());
      f++;
      d = 0;
     } else {
      var t = s[u] || "";
      var n = t.substr(0, e.generatedColumn - d);
      s[u] = t.substr(e.generatedColumn - d);
      d = e.generatedColumn;
      m(p, n);
      p = e;
      return;
     }
    }
    while (f < e.generatedLine) {
     o.add(l());
     f++;
    }
    if (d < e.generatedColumn) {
     var t = s[u] || "";
     o.add(t.substr(0, e.generatedColumn));
     s[u] = t.substr(e.generatedColumn);
     d = e.generatedColumn;
    }
    p = e;
   }, this);
   if (u < s.length) {
    if (p) {
     m(p, l());
    }
    o.add(s.splice(u).join(""));
   }
   n.sources.forEach(function(e) {
    var t = n.sourceContentFor(e);
    if (t != null) {
     if (r != null) {
      e = i.join(r, e);
     }
     o.setSourceContent(e, t);
    }
   });
   return o;
   function m(e, t) {
    if (e === null || e.source === undefined) {
     o.add(t);
    } else {
     var n = r ? i.join(r, e.source) : e.source;
     o.add(new c(e.originalLine, e.originalColumn, n, t, e.name));
    }
   }
  };
  c.prototype.add = function e(t) {
   if (Array.isArray(t)) {
    t.forEach(function(e) {
     this.add(e);
    }, this);
   } else if (t[s] || typeof t === "string") {
    if (t) {
     this.children.push(t);
    }
   } else {
    throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + t);
   }
   return this;
  };
  c.prototype.prepend = function e(t) {
   if (Array.isArray(t)) {
    for (var n = t.length - 1; n >= 0; n--) {
     this.prepend(t[n]);
    }
   } else if (t[s] || typeof t === "string") {
    this.children.unshift(t);
   } else {
    throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + t);
   }
   return this;
  };
  c.prototype.walk = function e(t) {
   var n;
   for (var r = 0, i = this.children.length; r < i; r++) {
    n = this.children[r];
    if (n[s]) {
     n.walk(t);
    } else {
     if (n !== "") {
      t(n, {
       source: this.source,
       line: this.line,
       column: this.column,
       name: this.name
      });
     }
    }
   }
  };
  c.prototype.join = function e(t) {
   var n;
   var r;
   var i = this.children.length;
   if (i > 0) {
    n = [];
    for (r = 0; r < i - 1; r++) {
     n.push(this.children[r]);
     n.push(t);
    }
    n.push(this.children[r]);
    this.children = n;
   }
   return this;
  };
  c.prototype.replaceRight = function e(t, n) {
   var r = this.children[this.children.length - 1];
   if (r[s]) {
    r.replaceRight(t, n);
   } else if (typeof r === "string") {
    this.children[this.children.length - 1] = r.replace(t, n);
   } else {
    this.children.push("".replace(t, n));
   }
   return this;
  };
  c.prototype.setSourceContent = function e(t, n) {
   this.sourceContents[i.toSetString(t)] = n;
  };
  c.prototype.walkSourceContents = function e(t) {
   for (var n = 0, r = this.children.length; n < r; n++) {
    if (this.children[n][s]) {
     this.children[n].walkSourceContents(t);
    }
   }
   var a = Object.keys(this.sourceContents);
   for (var n = 0, r = a.length; n < r; n++) {
    t(i.fromSetString(a[n]), this.sourceContents[a[n]]);
   }
  };
  c.prototype.toString = function e() {
   var t = "";
   this.walk(function(e) {
    t += e;
   });
   return t;
  };
  c.prototype.toStringWithSourceMap = function e(t) {
   var n = {
    code: "",
    line: 1,
    column: 0
   };
   var i = new r(t);
   var a = false;
   var s = null;
   var c = null;
   var u = null;
   var l = null;
   this.walk(function(e, t) {
    n.code += e;
    if (t.source !== null && t.line !== null && t.column !== null) {
     if (s !== t.source || c !== t.line || u !== t.column || l !== t.name) {
      i.addMapping({
       source: t.source,
       original: {
        line: t.line,
        column: t.column
       },
       generated: {
        line: n.line,
        column: n.column
       },
       name: t.name
      });
     }
     s = t.source;
     c = t.line;
     u = t.column;
     l = t.name;
     a = true;
    } else if (a) {
     i.addMapping({
      generated: {
       line: n.line,
       column: n.column
      }
     });
     s = null;
     a = false;
    }
    for (var r = 0, f = e.length; r < f; r++) {
     if (e.charCodeAt(r) === o) {
      n.line++;
      n.column = 0;
      if (r + 1 === f) {
       s = null;
       a = false;
      } else if (a) {
       i.addMapping({
        source: t.source,
        original: {
         line: t.line,
         column: t.column
        },
        generated: {
         line: n.line,
         column: n.column
        },
        name: t.name
       });
      }
     } else {
      n.column++;
     }
    }
   });
   this.walkSourceContents(function(e, t) {
    i.setSourceContent(e, t);
   });
   return {
    code: n.code,
    map: i
   };
  };
  t.SourceNode = c;
 },
 sKb1: function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  const r = n("C+6V");
  var i;
  (function(e) {
   e.type = new r.RequestType("workspace/configuration");
  })(i = t.ConfigurationRequest || (t.ConfigurationRequest = {}));
 },
 t2vm: function(e, t, n) {
  "use strict";
  n.r(t);
  var r = n("wpTr");
  var i = r["loadMessageBundle"]();
  var a = function() {
   function e(e, t) {
    this.source = e;
    this.len = e.length;
    this.position = t;
   }
   e.prototype.eos = function() {
    return this.len <= this.position;
   };
   e.prototype.getSource = function() {
    return this.source;
   };
   e.prototype.pos = function() {
    return this.position;
   };
   e.prototype.goBackTo = function(e) {
    this.position = e;
   };
   e.prototype.goBack = function(e) {
    this.position -= e;
   };
   e.prototype.advance = function(e) {
    this.position += e;
   };
   e.prototype.goToEnd = function() {
    this.position = this.source.length;
   };
   e.prototype.nextChar = function() {
    return this.source.charCodeAt(this.position++) || 0;
   };
   e.prototype.peekChar = function(e) {
    if (e === void 0) {
     e = 0;
    }
    return this.source.charCodeAt(this.position + e) || 0;
   };
   e.prototype.advanceIfChar = function(e) {
    if (e === this.source.charCodeAt(this.position)) {
     this.position++;
     return true;
    }
    return false;
   };
   e.prototype.advanceIfChars = function(e) {
    var t;
    if (this.position + e.length > this.source.length) {
     return false;
    }
    for (t = 0; t < e.length; t++) {
     if (this.source.charCodeAt(this.position + t) !== e[t]) {
      return false;
     }
    }
    this.advance(t);
    return true;
   };
   e.prototype.advanceIfRegExp = function(e) {
    var t = this.source.substr(this.position);
    var n = t.match(e);
    if (n) {
     this.position = this.position + n.index + n[0].length;
     return n[0];
    }
    return "";
   };
   e.prototype.advanceUntilRegExp = function(e) {
    var t = this.source.substr(this.position);
    var n = t.match(e);
    if (n) {
     this.position = this.position + n.index;
     return n[0];
    } else {
     this.goToEnd();
    }
    return "";
   };
   e.prototype.advanceUntilChar = function(e) {
    while (this.position < this.source.length) {
     if (this.source.charCodeAt(this.position) === e) {
      return true;
     }
     this.advance(1);
    }
    return false;
   };
   e.prototype.advanceUntilChars = function(e) {
    while (this.position + e.length <= this.source.length) {
     var t = 0;
     for (;t < e.length && this.source.charCodeAt(this.position + t) === e[t]; t++) {}
     if (t === e.length) {
      return true;
     }
     this.advance(1);
    }
    this.goToEnd();
    return false;
   };
   e.prototype.skipWhitespace = function() {
    var e = this.advanceWhileChar(function(e) {
     return e === h || e === v || e === m || e === g || e === _;
    });
    return e > 0;
   };
   e.prototype.advanceWhileChar = function(e) {
    var t = this.position;
    while (this.position < this.len && e(this.source.charCodeAt(this.position))) {
     this.position++;
    }
    return this.position - t;
   };
   return e;
  }();
  var o = "!".charCodeAt(0);
  var s = "-".charCodeAt(0);
  var c = "<".charCodeAt(0);
  var u = ">".charCodeAt(0);
  var l = "/".charCodeAt(0);
  var f = "=".charCodeAt(0);
  var d = '"'.charCodeAt(0);
  var p = "'".charCodeAt(0);
  var m = "\n".charCodeAt(0);
  var _ = "\r".charCodeAt(0);
  var g = "\f".charCodeAt(0);
  var h = " ".charCodeAt(0);
  var v = "\t".charCodeAt(0);
  var y = {
   "text/x-handlebars-template": true
  };
  function b(e, t, n) {
   if (t === void 0) {
    t = 0;
   }
   if (n === void 0) {
    n = H.WithinContent;
   }
   var r = new a(e, t);
   var m = n;
   var _ = 0;
   var g = W.Unknown;
   var h;
   var v;
   var b;
   var x;
   var k;
   function S() {
    return r.advanceIfRegExp(/^[_:\w][_:\w-.\d]*/).toLowerCase();
   }
   function w() {
    return r.advanceIfRegExp(/^[^\s"'>/=\x00-\x0F\x7F\x80-\x9F]*/).toLowerCase();
   }
   function C(e, t, n) {
    g = t;
    _ = e;
    h = n;
    return t;
   }
   function D() {
    var e = r.pos();
    var t = m;
    var n = T();
    if (n !== W.EOS && e === r.pos()) {
     console.log("Scanner.scan has not advanced at offset " + e + ", state before: " + t + " after: " + m);
     r.advance(1);
     return C(e, W.Unknown);
    }
    return n;
   }
   function T() {
    var e = r.pos();
    if (r.eos()) {
     return C(e, W.EOS);
    }
    var t;
    switch (m) {
    case H.WithinComment:
     if (r.advanceIfChars([ s, s, u ])) {
      m = H.WithinContent;
      return C(e, W.EndCommentTag);
     }
     r.advanceUntilChars([ s, s, u ]);
     return C(e, W.Comment);

    case H.WithinDoctype:
     if (r.advanceIfChar(u)) {
      m = H.WithinContent;
      return C(e, W.EndDoctypeTag);
     }
     r.advanceUntilChar(u);
     return C(e, W.Doctype);

    case H.WithinContent:
     if (r.advanceIfChar(c)) {
      if (!r.eos() && r.peekChar() === o) {
       if (r.advanceIfChars([ o, s, s ])) {
        m = H.WithinComment;
        return C(e, W.StartCommentTag);
       }
       if (r.advanceIfRegExp(/^!doctype/i)) {
        m = H.WithinDoctype;
        return C(e, W.StartDoctypeTag);
       }
      }
      if (r.advanceIfChar(l)) {
       m = H.AfterOpeningEndTag;
       return C(e, W.EndTagOpen);
      }
      m = H.AfterOpeningStartTag;
      return C(e, W.StartTagOpen);
     }
     r.advanceUntilChar(c);
     return C(e, W.Content);

    case H.AfterOpeningEndTag:
     var n = S();
     if (n.length > 0) {
      m = H.WithinEndTag;
      return C(e, W.EndTag);
     }
     if (r.skipWhitespace()) {
      return C(e, W.Whitespace, i("error.unexpectedWhitespace", "Tag name must directly follow the open bracket."));
     }
     m = H.WithinEndTag;
     r.advanceUntilChar(u);
     if (e < r.pos()) {
      return C(e, W.Unknown, i("error.endTagNameExpected", "End tag name expected."));
     }
     return T();

    case H.WithinEndTag:
     if (r.skipWhitespace()) {
      return C(e, W.Whitespace);
     }
     if (r.advanceIfChar(u)) {
      m = H.WithinContent;
      return C(e, W.EndTagClose);
     }
     t = i("error.tagNameExpected", "Closing bracket expected.");
     break;

    case H.AfterOpeningStartTag:
     b = S();
     k = void 0;
     x = void 0;
     if (b.length > 0) {
      v = false;
      m = H.WithinTag;
      return C(e, W.StartTag);
     }
     if (r.skipWhitespace()) {
      return C(e, W.Whitespace, i("error.unexpectedWhitespace", "Tag name must directly follow the open bracket."));
     }
     m = H.WithinTag;
     r.advanceUntilChar(u);
     if (e < r.pos()) {
      return C(e, W.Unknown, i("error.startTagNameExpected", "Start tag name expected."));
     }
     return T();

    case H.WithinTag:
     if (r.skipWhitespace()) {
      v = true;
      return C(e, W.Whitespace);
     }
     if (v) {
      x = w();
      if (x.length > 0) {
       m = H.AfterAttributeName;
       v = false;
       return C(e, W.AttributeName);
      }
     }
     if (r.advanceIfChars([ l, u ])) {
      m = H.WithinContent;
      return C(e, W.StartTagSelfClose);
     }
     if (r.advanceIfChar(u)) {
      if (b === "script") {
       if (k && y[k]) {
        m = H.WithinContent;
       } else {
        m = H.WithinScriptContent;
       }
      } else if (b === "style") {
       m = H.WithinStyleContent;
      } else {
       m = H.WithinContent;
      }
      return C(e, W.StartTagClose);
     }
     r.advance(1);
     return C(e, W.Unknown, i("error.unexpectedCharacterInTag", "Unexpected character in tag."));

    case H.AfterAttributeName:
     if (r.skipWhitespace()) {
      v = true;
      return C(e, W.Whitespace);
     }
     if (r.advanceIfChar(f)) {
      m = H.BeforeAttributeValue;
      return C(e, W.DelimiterAssign);
     }
     m = H.WithinTag;
     return T();

    case H.BeforeAttributeValue:
     if (r.skipWhitespace()) {
      return C(e, W.Whitespace);
     }
     var a = r.advanceIfRegExp(/^[^\s"'`=<>\/]+/);
     if (a.length > 0) {
      if (x === "type") {
       k = a;
      }
      m = H.WithinTag;
      v = false;
      return C(e, W.AttributeValue);
     }
     var _ = r.peekChar();
     if (_ === p || _ === d) {
      r.advance(1);
      if (r.advanceUntilChar(_)) {
       r.advance(1);
      }
      if (x === "type") {
       k = r.getSource().substring(e + 1, r.pos() - 1);
      }
      m = H.WithinTag;
      v = false;
      return C(e, W.AttributeValue);
     }
     m = H.WithinTag;
     v = false;
     return T();

    case H.WithinScriptContent:
     var g = 1;
     while (!r.eos()) {
      var h = r.advanceIfRegExp(/<!--|-->|<\/?script\s*\/?>?/i);
      if (h.length === 0) {
       r.goToEnd();
       return C(e, W.Script);
      } else if (h === "\x3c!--") {
       if (g === 1) {
        g = 2;
       }
      } else if (h === "--\x3e") {
       g = 1;
      } else if (h[1] !== "/") {
       if (g === 2) {
        g = 3;
       }
      } else {
       if (g === 3) {
        g = 2;
       } else {
        r.goBack(h.length);
        break;
       }
      }
     }
     m = H.WithinContent;
     if (e < r.pos()) {
      return C(e, W.Script);
     }
     return T();

    case H.WithinStyleContent:
     r.advanceUntilRegExp(/<\/style/i);
     m = H.WithinContent;
     if (e < r.pos()) {
      return C(e, W.Styles);
     }
     return T();
    }
    r.advance(1);
    m = H.WithinContent;
    return C(e, W.Unknown, t);
   }
   return {
    scan: D,
    getTokenType: function() {
     return g;
    },
    getTokenOffset: function() {
     return _;
    },
    getTokenLength: function() {
     return r.pos() - _;
    },
    getTokenEnd: function() {
     return r.pos();
    },
    getTokenText: function() {
     return r.getSource().substring(_, r.pos());
    },
    getScannerState: function() {
     return m;
    },
    getTokenError: function() {
     return h;
    }
   };
  }
  function x(e, t) {
   var n = 0, r = e.length;
   if (r === 0) {
    return 0;
   }
   while (n < r) {
    var i = Math.floor((n + r) / 2);
    if (t(e[i])) {
     r = i;
    } else {
     n = i + 1;
    }
   }
   return n;
  }
  function k(e, t, n) {
   var r = 0, i = e.length - 1;
   while (r <= i) {
    var a = (r + i) / 2 | 0;
    var o = n(e[a], t);
    if (o < 0) {
     r = a + 1;
    } else if (o > 0) {
     i = a - 1;
    } else {
     return a;
    }
   }
   return -(r + 1);
  }
  function S(e, t) {
   if (e.length < t.length) {
    return false;
   }
   for (var n = 0; n < t.length; n++) {
    if (e[n] !== t[n]) {
     return false;
    }
   }
   return true;
  }
  function w(e, t) {
   var n = e.length - t.length;
   if (n > 0) {
    return e.lastIndexOf(t) === n;
   } else if (n === 0) {
    return e === t;
   } else {
    return false;
   }
  }
  function C(e, t) {
   var n, r = Math.min(e.length, t.length);
   for (n = 0; n < r; n++) {
    if (e.charCodeAt(n) !== t.charCodeAt(n)) {
     return n;
    }
   }
   return r;
  }
  function D(e, t) {
   var n = "";
   while (t > 0) {
    if ((t & 1) === 1) {
     n += e;
    }
    e += e;
    t = t >>> 1;
   }
   return n;
  }
  var T = "a".charCodeAt(0);
  var E = "z".charCodeAt(0);
  var N = "A".charCodeAt(0);
  var A = "Z".charCodeAt(0);
  var F = "0".charCodeAt(0);
  var P = "9".charCodeAt(0);
  function I(e, t) {
   var n = e.charCodeAt(t);
   return T <= n && n <= E || N <= n && n <= A || F <= n && n <= P;
  }
  var O = r["loadMessageBundle"]();
  var M = [ "area", "base", "br", "col", "embed", "hr", "img", "input", "keygen", "link", "menuitem", "meta", "param", "source", "track", "wbr" ];
  function L(e) {
   return !!e && k(M, e.toLowerCase(), function(e, t) {
    return e.localeCompare(t);
   }) >= 0;
  }
  var R = function() {
   function e(e, t) {
    if (t === void 0) {
     t = [];
    }
    this.label = e;
    this.attributes = t;
   }
   return e;
  }();
  var B = {
   html: new R(O("tags.html", "The html element represents the root of an HTML document."), [ "manifest" ]),
   head: new R(O("tags.head", "The head element represents a collection of metadata for the Document.")),
   title: new R(O("tags.title", "The title element represents the document's title or name. Authors should use titles that identify their documents even when they are used out of context, for example in a user's history or bookmarks, or in search results. The document's title is often different from its first heading, since the first heading does not have to stand alone when taken out of context.")),
   base: new R(O("tags.base", "The base element allows authors to specify the document base URL for the purposes of resolving relative URLs, and the name of the default browsing context for the purposes of following hyperlinks. The element does not represent any content beyond this information."), [ "href", "target" ]),
   link: new R(O("tags.link", "The link element allows authors to link their document to other resources."), [ "href", "crossorigin:xo", "rel", "media", "hreflang", "type", "sizes" ]),
   meta: new R(O("tags.meta", "The meta element represents various kinds of metadata that cannot be expressed using the title, base, link, style, and script elements."), [ "name", "http-equiv", "content", "charset" ]),
   style: new R(O("tags.style", "The style element allows authors to embed style information in their documents. The style element is one of several inputs to the styling processing model. The element does not represent content for the user."), [ "media", "nonce", "type", "scoped:v" ]),
   body: new R(O("tags.body", "The body element represents the content of the document."), [ "onafterprint", "onbeforeprint", "onbeforeunload", "onhashchange", "onlanguagechange", "onmessage", "onoffline", "ononline", "onpagehide", "onpageshow", "onpopstate", "onstorage", "onunload" ]),
   article: new R(O("tags.article", "The article element represents a complete, or self-contained, composition in a document, page, application, or site and that is, in principle, independently distributable or reusable, e.g. in syndication. This could be a forum post, a magazine or newspaper article, a blog entry, a user-submitted comment, an interactive widget or gadget, or any other independent item of content. Each article should be identified, typically by including a heading (h1–h6 element) as a child of the article element.")),
   section: new R(O("tags.section", "The section element represents a generic section of a document or application. A section, in this context, is a thematic grouping of content. Each section should be identified, typically by including a heading ( h1- h6 element) as a child of the section element.")),
   nav: new R(O("tags.nav", "The nav element represents a section of a page that links to other pages or to parts within the page: a section with navigation links.")),
   aside: new R(O("tags.aside", "The aside element represents a section of a page that consists of content that is tangentially related to the content around the aside element, and which could be considered separate from that content. Such sections are often represented as sidebars in printed typography.")),
   h1: new R(O("tags.h1", "The h1 element represents a section heading.")),
   h2: new R(O("tags.h2", "The h2 element represents a section heading.")),
   h3: new R(O("tags.h3", "The h3 element represents a section heading.")),
   h4: new R(O("tags.h4", "The h4 element represents a section heading.")),
   h5: new R(O("tags.h5", "The h5 element represents a section heading.")),
   h6: new R(O("tags.h6", "The h6 element represents a section heading.")),
   header: new R(O("tags.header", "The header element represents introductory content for its nearest ancestor sectioning content or sectioning root element. A header typically contains a group of introductory or navigational aids. When the nearest ancestor sectioning content or sectioning root element is the body element, then it applies to the whole page.")),
   footer: new R(O("tags.footer", "The footer element represents a footer for its nearest ancestor sectioning content or sectioning root element. A footer typically contains information about its section such as who wrote it, links to related documents, copyright data, and the like.")),
   address: new R(O("tags.address", "The address element represents the contact information for its nearest article or body element ancestor. If that is the body element, then the contact information applies to the document as a whole.")),
   p: new R(O("tags.p", "The p element represents a paragraph.")),
   hr: new R(O("tags.hr", "The hr element represents a paragraph-level thematic break, e.g. a scene change in a story, or a transition to another topic within a section of a reference book.")),
   pre: new R(O("tags.pre", "The pre element represents a block of preformatted text, in which structure is represented by typographic conventions rather than by elements.")),
   blockquote: new R(O("tags.blockquote", "The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations."), [ "cite" ]),
   ol: new R(O("tags.ol", "The ol element represents a list of items, where the items have been intentionally ordered, such that changing the order would change the meaning of the document."), [ "reversed:v", "start", "type:lt" ]),
   ul: new R(O("tags.ul", "The ul element represents a list of items, where the order of the items is not important — that is, where changing the order would not materially change the meaning of the document.")),
   li: new R(O("tags.li", "The li element represents a list item. If its parent element is an ol, ul, or menu element, then the element is an item of the parent element's list, as defined for those elements. Otherwise, the list item has no defined list-related relationship to any other li element."), [ "value" ]),
   dl: new R(O("tags.dl", "The dl element represents an association list consisting of zero or more name-value groups (a description list). A name-value group consists of one or more names (dt elements) followed by one or more values (dd elements), ignoring any nodes other than dt and dd elements. Within a single dl element, there should not be more than one dt element for each name.")),
   dt: new R(O("tags.dt", "The dt element represents the term, or name, part of a term-description group in a description list (dl element).")),
   dd: new R(O("tags.dd", "The dd element represents the description, definition, or value, part of a term-description group in a description list (dl element).")),
   figure: new R(O("tags.figure", "The figure element represents some flow content, optionally with a caption, that is self-contained (like a complete sentence) and is typically referenced as a single unit from the main flow of the document.")),
   figcaption: new R(O("tags.figcaption", "The figcaption element represents a caption or legend for the rest of the contents of the figcaption element's parent figure element, if any.")),
   main: new R(O("tags.main", "The main element represents the main content of the body of a document or application. The main content area consists of content that is directly related to or expands upon the central topic of a document or central functionality of an application.")),
   div: new R(O("tags.div", "The div element has no special meaning at all. It represents its children. It can be used with the class, lang, and title attributes to mark up semantics common to a group of consecutive elements.")),
   a: new R(O("tags.a", "If the a element has an href attribute, then it represents a hyperlink (a hypertext anchor) labeled by its contents."), [ "href", "target", "download", "ping", "rel", "hreflang", "type" ]),
   em: new R(O("tags.em", "The em element represents stress emphasis of its contents.")),
   strong: new R(O("tags.strong", "The strong element represents strong importance, seriousness, or urgency for its contents.")),
   small: new R(O("tags.small", "The small element represents side comments such as small print.")),
   s: new R(O("tags.s", "The s element represents contents that are no longer accurate or no longer relevant.")),
   cite: new R(O("tags.cite", "The cite element represents a reference to a creative work. It must include the title of the work or the name of the author(person, people or organization) or an URL reference, or a reference in abbreviated form as per the conventions used for the addition of citation metadata.")),
   q: new R(O("tags.q", "The q element represents some phrasing content quoted from another source."), [ "cite" ]),
   dfn: new R(O("tags.dfn", "The dfn element represents the defining instance of a term. The paragraph, description list group, or section that is the nearest ancestor of the dfn element must also contain the definition(s) for the term given by the dfn element.")),
   abbr: new R(O("tags.abbr", "The abbr element represents an abbreviation or acronym, optionally with its expansion. The title attribute may be used to provide an expansion of the abbreviation. The attribute, if specified, must contain an expansion of the abbreviation, and nothing else.")),
   ruby: new R(O("tags.ruby", "The ruby element allows one or more spans of phrasing content to be marked with ruby annotations. Ruby annotations are short runs of text presented alongside base text, primarily used in East Asian typography as a guide for pronunciation or to include other annotations. In Japanese, this form of typography is also known as furigana. Ruby text can appear on either side, and sometimes both sides, of the base text, and it is possible to control its position using CSS. A more complete introduction to ruby can be found in the Use Cases & Exploratory Approaches for Ruby Markup document as well as in CSS Ruby Module Level 1. [RUBY-UC] [CSSRUBY]")),
   rb: new R(O("tags.rb", "The rb element marks the base text component of a ruby annotation. When it is the child of a ruby element, it doesn't represent anything itself, but its parent ruby element uses it as part of determining what it represents.")),
   rt: new R(O("tags.rt", "The rt element marks the ruby text component of a ruby annotation. When it is the child of a ruby element or of an rtc element that is itself the child of a ruby element, it doesn't represent anything itself, but its ancestor ruby element uses it as part of determining what it represents.")),
   rp: new R(O("tags.rp", "The rp element is used to provide fallback text to be shown by user agents that don't support ruby annotations. One widespread convention is to provide parentheses around the ruby text component of a ruby annotation.")),
   time: new R(O("tags.time", "The time element represents its contents, along with a machine-readable form of those contents in the datetime attribute. The kind of content is limited to various kinds of dates, times, time-zone offsets, and durations, as described below."), [ "datetime" ]),
   code: new R(O("tags.code", "The code element represents a fragment of computer code. This could be an XML element name, a file name, a computer program, or any other string that a computer would recognize.")),
   var: new R(O("tags.var", "The var element represents a variable. This could be an actual variable in a mathematical expression or programming context, an identifier representing a constant, a symbol identifying a physical quantity, a function parameter, or just be a term used as a placeholder in prose.")),
   samp: new R(O("tags.samp", "The samp element represents sample or quoted output from another program or computing system.")),
   kbd: new R(O("tags.kbd", "The kbd element represents user input (typically keyboard input, although it may also be used to represent other input, such as voice commands).")),
   sub: new R(O("tags.sub", "The sub element represents a subscript.")),
   sup: new R(O("tags.sup", "The sup element represents a superscript.")),
   i: new R(O("tags.i", "The i element represents a span of text in an alternate voice or mood, or otherwise offset from the normal prose in a manner indicating a different quality of text, such as a taxonomic designation, a technical term, an idiomatic phrase from another language, transliteration, a thought, or a ship name in Western texts.")),
   b: new R(O("tags.b", "The b element represents a span of text to which attention is being drawn for utilitarian purposes without conveying any extra importance and with no implication of an alternate voice or mood, such as key words in a document abstract, product names in a review, actionable words in interactive text-driven software, or an article lede.")),
   u: new R(O("tags.u", "The u element represents a span of text with an unarticulated, though explicitly rendered, non-textual annotation, such as labeling the text as being a proper name in Chinese text (a Chinese proper name mark), or labeling the text as being misspelt.")),
   mark: new R(O("tags.mark", "The mark element represents a run of text in one document marked or highlighted for reference purposes, due to its relevance in another context. When used in a quotation or other block of text referred to from the prose, it indicates a highlight that was not originally present but which has been added to bring the reader's attention to a part of the text that might not have been considered important by the original author when the block was originally written, but which is now under previously unexpected scrutiny. When used in the main prose of a document, it indicates a part of the document that has been highlighted due to its likely relevance to the user's current activity.")),
   bdi: new R(O("tags.bdi", "The bdi element represents a span of text that is to be isolated from its surroundings for the purposes of bidirectional text formatting. [BIDI]")),
   bdo: new R(O("tags.dbo", "The bdo element represents explicit text directionality formatting control for its children. It allows authors to override the Unicode bidirectional algorithm by explicitly specifying a direction override. [BIDI]")),
   span: new R(O("tags.span", "The span element doesn't mean anything on its own, but can be useful when used together with the global attributes, e.g. class, lang, or dir. It represents its children.")),
   br: new R(O("tags.br", "The br element represents a line break.")),
   wbr: new R(O("tags.wbr", "The wbr element represents a line break opportunity.")),
   ins: new R(O("tags.ins", "The ins element represents an addition to the document.")),
   del: new R(O("tags.del", "The del element represents a removal from the document."), [ "cite", "datetime" ]),
   picture: new R(O("tags.picture", "The picture element is a container which provides multiple sources to its contained img element to allow authors to declaratively control or give hints to the user agent about which image resource to use, based on the screen pixel density, viewport size, image format, and other factors. It represents its children.")),
   img: new R(O("tags.img", "An img element represents an image."), [ "alt", "src", "srcset", "crossorigin:xo", "usemap", "ismap:v", "width", "height" ]),
   iframe: new R(O("tags.iframe", "The iframe element represents a nested browsing context."), [ "src", "srcdoc", "name", "sandbox:sb", "seamless:v", "allowfullscreen:v", "width", "height" ]),
   embed: new R(O("tags.embed", "The embed element provides an integration point for an external (typically non-HTML) application or interactive content."), [ "src", "type", "width", "height" ]),
   object: new R(O("tags.object", "The object element can represent an external resource, which, depending on the type of the resource, will either be treated as an image, as a nested browsing context, or as an external resource to be processed by a plugin."), [ "data", "type", "typemustmatch:v", "name", "usemap", "form", "width", "height" ]),
   param: new R(O("tags.param", "The param element defines parameters for plugins invoked by object elements. It does not represent anything on its own."), [ "name", "value" ]),
   video: new R(O("tags.video", "A video element is used for playing videos or movies, and audio files with captions."), [ "src", "crossorigin:xo", "poster", "preload:pl", "autoplay:v", "mediagroup", "loop:v", "muted:v", "controls:v", "width", "height" ]),
   audio: new R(O("tags.audio", "An audio element represents a sound or audio stream."), [ "src", "crossorigin:xo", "preload:pl", "autoplay:v", "mediagroup", "loop:v", "muted:v", "controls:v" ]),
   source: new R(O("tags.source", "The source element allows authors to specify multiple alternative media resources for media elements. It does not represent anything on its own."), [ "src", "type" ]),
   track: new R(O("tags.track", "The track element allows authors to specify explicit external timed text tracks for media elements. It does not represent anything on its own."), [ "default:v", "kind:tk", "label", "src", "srclang" ]),
   map: new R(O("tags.map", "The map element, in conjunction with an img element and any area element descendants, defines an image map. The element represents its children."), [ "name" ]),
   area: new R(O("tags.area", "The area element represents either a hyperlink with some text and a corresponding area on an image map, or a dead area on an image map."), [ "alt", "coords", "shape:sh", "href", "target", "download", "ping", "rel", "hreflang", "type" ]),
   table: new R(O("tags.table", "The table element represents data with more than one dimension, in the form of a table."), [ "sortable:v", "border" ]),
   caption: new R(O("tags.caption", "The caption element represents the title of the table that is its parent, if it has a parent and that is a table element.")),
   colgroup: new R(O("tags.colgroup", "The colgroup element represents a group of one or more columns in the table that is its parent, if it has a parent and that is a table element."), [ "span" ]),
   col: new R(O("tags.col", "If a col element has a parent and that is a colgroup element that itself has a parent that is a table element, then the col element represents one or more columns in the column group represented by that colgroup."), [ "span" ]),
   tbody: new R(O("tags.tbody", "The tbody element represents a block of rows that consist of a body of data for the parent table element, if the tbody element has a parent and it is a table.")),
   thead: new R(O("tags.thead", "The thead element represents the block of rows that consist of the column labels (headers) for the parent table element, if the thead element has a parent and it is a table.")),
   tfoot: new R(O("tags.tfoot", "The tfoot element represents the block of rows that consist of the column summaries (footers) for the parent table element, if the tfoot element has a parent and it is a table.")),
   tr: new R(O("tags.tr", "The tr element represents a row of cells in a table.")),
   td: new R(O("tags.td", "The td element represents a data cell in a table."), [ "colspan", "rowspan", "headers" ]),
   th: new R(O("tags.th", "The th element represents a header cell in a table."), [ "colspan", "rowspan", "headers", "scope:s", "sorted", "abbr" ]),
   form: new R(O("tags.form", "The form element represents a collection of form-associated elements, some of which can represent editable values that can be submitted to a server for processing."), [ "accept-charset", "action", "autocomplete:o", "enctype:et", "method:m", "name", "novalidate:v", "target" ]),
   label: new R(O("tags.label", "The label element represents a caption in a user interface. The caption can be associated with a specific form control, known as the label element's labeled control, either using the for attribute, or by putting the form control inside the label element itself."), [ "form", "for" ]),
   input: new R(O("tags.input", "The input element represents a typed data field, usually with a form control to allow the user to edit the data."), [ "accept", "alt", "autocomplete:inputautocomplete", "autofocus:v", "checked:v", "dirname", "disabled:v", "form", "formaction", "formenctype:et", "formmethod:fm", "formnovalidate:v", "formtarget", "height", "inputmode:im", "list", "max", "maxlength", "min", "minlength", "multiple:v", "name", "pattern", "placeholder", "readonly:v", "required:v", "size", "src", "step", "type:t", "value", "width" ]),
   button: new R(O("tags.button", "The button element represents a button labeled by its contents."), [ "autofocus:v", "disabled:v", "form", "formaction", "formenctype:et", "formmethod:fm", "formnovalidate:v", "formtarget", "name", "type:bt", "value" ]),
   select: new R(O("tags.select", "The select element represents a control for selecting amongst a set of options."), [ "autocomplete:inputautocomplete", "autofocus:v", "disabled:v", "form", "multiple:v", "name", "required:v", "size" ]),
   datalist: new R(O("tags.datalist", "The datalist element represents a set of option elements that represent predefined options for other controls. In the rendering, the datalist element represents nothing and it, along with its children, should be hidden.")),
   optgroup: new R(O("tags.optgroup", "The optgroup element represents a group of option elements with a common label."), [ "disabled:v", "label" ]),
   option: new R(O("tags.option", "The option element represents an option in a select element or as part of a list of suggestions in a datalist element."), [ "disabled:v", "label", "selected:v", "value" ]),
   textarea: new R(O("tags.textarea", "The textarea element represents a multiline plain text edit control for the element's raw value. The contents of the control represent the control's default value."), [ "autocomplete:inputautocomplete", "autofocus:v", "cols", "dirname", "disabled:v", "form", "inputmode:im", "maxlength", "minlength", "name", "placeholder", "readonly:v", "required:v", "rows", "wrap:w" ]),
   output: new R(O("tags.output", "The output element represents the result of a calculation performed by the application, or the result of a user action."), [ "for", "form", "name" ]),
   progress: new R(O("tags.progress", "The progress element represents the completion progress of a task. The progress is either indeterminate, indicating that progress is being made but that it is not clear how much more work remains to be done before the task is complete (e.g. because the task is waiting for a remote host to respond), or the progress is a number in the range zero to a maximum, giving the fraction of work that has so far been completed."), [ "value", "max" ]),
   meter: new R(O("tags.meter", "The meter element represents a scalar measurement within a known range, or a fractional value; for example disk usage, the relevance of a query result, or the fraction of a voting population to have selected a particular candidate."), [ "value", "min", "max", "low", "high", "optimum" ]),
   fieldset: new R(O("tags.fieldset", "The fieldset element represents a set of form controls optionally grouped under a common name."), [ "disabled:v", "form", "name" ]),
   legend: new R(O("tags.legend", "The legend element represents a caption for the rest of the contents of the legend element's parent fieldset element, if any.")),
   details: new R(O("tags.details", "The details element represents a disclosure widget from which the user can obtain additional information or controls."), [ "open:v" ]),
   summary: new R(O("tags.summary", "The summary element represents a summary, caption, or legend for the rest of the contents of the summary element's parent details element, if any.")),
   dialog: new R(O("tags.dialog", "The dialog element represents a part of an application that a user interacts with to perform a task, for example a dialog box, inspector, or window.")),
   script: new R(O("tags.script", "The script element allows authors to include dynamic script and data blocks in their documents. The element does not represent content for the user."), [ "src", "type", "charset", "async:v", "defer:v", "crossorigin:xo", "nonce" ]),
   noscript: new R(O("tags.noscript", "The noscript element represents nothing if scripting is enabled, and represents its children if scripting is disabled. It is used to present different markup to user agents that support scripting and those that don't support scripting, by affecting how the document is parsed.")),
   template: new R(O("tags.template", "The template element is used to declare fragments of HTML that can be cloned and inserted in the document by script.")),
   canvas: new R(O("tags.canvas", "The canvas element provides scripts with a resolution-dependent bitmap canvas, which can be used for rendering graphs, game graphics, art, or other visual images on the fly."), [ "width", "height" ])
  };
  var z = {
   "ion-checkbox": new R(O("tags.ion.checkbox", "The checkbox is no different than the HTML checkbox input, except it's styled differently. The checkbox behaves like any AngularJS checkbox."), [ "name", "ng-false-value", "ng-model", "ng-true-value" ]),
   "ion-content": new R(O("tags.ion.content", "The ionContent directive provides an easy to use content area that can be configured to use Ionic's custom Scroll View, or the built-in overflow scrolling of the browser."), [ "delegate-handle", "direction:scrolldir", "has-bouncing:b", "locking:b", "on-scroll", "on-scroll-complete", "overflow-scroll:b", "padding:b", "scroll:b", "scrollbar-x:b", "scrollbar-y:b", "start-x", "start-y" ]),
   "ion-delete-button": new R(O("tags.ion.deletebutton", "Child of ionItem"), []),
   "ion-footer-bar": new R(O("tags.ion.footerbar", 'Adds a fixed footer bar below some content. Can also be a subfooter (higher up) if the "bar-subfooter" class is applied.'), [ "align-title:align", "keyboard-attach:v" ]),
   "ion-header-bar": new R(O("tags.ion.headerbar", 'Adds a fixed header bar above some content. Can also be a subheader (lower down) if the "bar-subheader" class is applied.'), [ "align-title:align", "no-tap-scroll:b" ]),
   "ion-infinite-scroll": new R(O("tags.ion.infinitescroll", "Child of ionContent or ionScroll. The ionInfiniteScroll directive allows you to call a function whenever the user gets to the bottom of the page or near the bottom of the page."), [ "distance", "icon", "immediate-check:b", "on-infinite", "spinner" ]),
   "ion-input": new R(O("tags.ion.input", 'ionInput is meant for text type inputs only. Ionic uses an actual <input type="text"> HTML element within the component, with Ionic wrapping to better handle the user experience and interactivity.'), [ "type:inputtype", "clearInput:v" ]),
   "ion-item": new R(O("tags.ion.item", "Child of ionList."), []),
   "ion-list": new R(O("tags.ion.list", "The List is a widely used interface element in almost any mobile app, and can include content ranging from basic text all the way to buttons, toggles, icons, and thumbnails."), [ "can-swipe:b", "delegate-handle", "show-delete:b", "show-reorder:b", "type:listtype" ]),
   "ion-modal-view": new R(O("tags.ion.modalview", "The Modal is a content pane that can go over the user's main view temporarily. Usually used for making a choice or editing an item."), []),
   "ion-nav-back-button": new R(O("tags.ion.navbackbutton", "Child of ionNavBar. Creates a back button inside an ionNavBar. The back button will appear when the user is able to go back in the current navigation stack."), []),
   "ion-nav-bar": new R(O("tags.ion.navbar", "If you have an ionNavView directive, you can also create an <ion-nav-bar>, which will create a topbar that updates as the application state changes."), [ "align-title:align", "delegate-handle", "no-tap-scroll:b" ]),
   "ion-nav-buttons": new R(O("tags.ion.navbuttons", "Child of ionNavView. Use ionNavButtons to set the buttons on your ionNavBar from within an ionView."), [ "side:navsides" ]),
   "ion-nav-title": new R(O("tags.ion.navtitle", "Child of ionNavView. The ionNavTitle directive replaces an ionNavBar title text with custom HTML from within an ionView template."), []),
   "ion-nav-view": new R(O("tags.ion.navview", "The ionNavView directive is used to render templates in your application. Each template is part of a state. States are usually mapped to a url, and are defined programatically using angular-ui-router."), [ "name" ]),
   "ion-option-button": new R(O("tags.ion.optionbutton", "Child of ionItem. Creates an option button inside a list item, that is visible when the item is swiped to the left by the user."), []),
   "ion-pane": new R(O("tags.ion.pane", 'A simple container that fits content, with no side effects. Adds the "pane" class to the element.'), []),
   "ion-popover-view": new R(O("tags.ion.popoverview", "The Popover is a view that floats above an app's content. Popovers provide an easy way to present or gather information from the user."), []),
   "ion-radio": new R(O("tags.ion.radio", "The radio ionRirective is no different than the HTML radio input, except it's styled differently. The ionRadio behaves like AngularJS radio input."), [ "disabled:b", "icon", "name", "ng-disabled:b", "ng-model", "ng-value", "value" ]),
   "ion-refresher": new R(O("tags.ion.refresher", "Child of ionContent or ionScroll. Allows you to add pull-to-refresh to a scrollView. Place it as the first child of your ionContent or ionScroll element."), [ "disable-pulling-rotation:b", "on-pulling", "on-refresh", "pulling-icon", "pulling-text", "refreshing-icon", "spinner" ]),
   "ion-reorder-button": new R(O("tags.ion.reorderbutton", "Child of ionItem."), [ "on-reorder" ]),
   "ion-scroll": new R(O("tags.ion.scroll", "Creates a scrollable container for all content inside."), [ "delegate-handle", "direction:scrolldir", "has-bouncing:b", "locking:b", "max-zoom", "min-zoom", "on-refresh", "on-scroll", "paging:b", "scrollbar-x:b", "scrollbar-y:b", "zooming:b" ]),
   "ion-side-menu": new R(O("tags.ion.sidemenu", "Child of ionSideMenus. A container for a side menu, sibling to an ionSideMenuContent directive."), [ "is-enabled:b", "expose-aside-when", "side:navsides", "width" ]),
   "ion-side-menu-content": new R(O("tags.ion.sidemenucontent", "Child of ionSideMenus. A container for the main visible content, sibling to one or more ionSideMenu directives."), [ "drag-content:b", "edge-drag-threshold" ]),
   "ion-side-menus": new R(O("tags.ion.sidemenus", "A container element for side menu(s) and the main content. Allows the left and/or right side menu to be toggled by dragging the main content area side to side."), [ "delegate-handle", "enable-menu-with-back-views:b" ]),
   "ion-slide": new R(O("tags.ion.slide", "Child of ionSlideBox. Displays a slide inside of a slidebox."), []),
   "ion-slide-box": new R(O("tags.ion.slidebox", "The Slide Box is a multi-page container where each page can be swiped or dragged between."), [ "active-slide", "auto-play:b", "delegate-handle", "does-continue:b", "on-slide-changed", "pager-click", "show-pager:b", "slide-interval" ]),
   "ion-spinner": new R(O("tags.ion.spinner", "The ionSpinner directive provides a variety of animated spinners."), [ "icon" ]),
   "ion-tab": new R(O("tags.ion.tab", "Child of ionTabs. Contains a tab's content. The content only exists while the given tab is selected."), [ "badge", "badge-style", "disabled", "hidden", "href", "icon", "icon-off", "icon-on", "ng-click", "on-deselect", "on-select", "title" ]),
   "ion-tabs": new R(O("tags.ion.tabs", 'Powers a multi-tabbed interface with a tab bar and a set of "pages" that can be tabbed through.'), [ "delegate-handle" ]),
   "ion-title": new R(O("tags.ion.title", "ion-title is a component that sets the title of the ionNavbar"), []),
   "ion-toggle": new R(O("tags.ion.toggle", "A toggle is an animated switch which binds a given model to a boolean. Allows dragging of the switch's nub. The toggle behaves like any AngularJS checkbox otherwise."), [ "name", "ng-false-value", "ng-model", "ng-true-value", "toggle-class" ]),
   "ion-view ": new R(O("tags.ion.view", "Child of ionNavView. A container for view content and any navigational and header bar information."), [ "cache-view:b", "can-swipe-back:b", "hide-back-button:b", "hide-nav-bar:b", "view-title" ])
  };
  function j() {
   var e = [ "aria-activedescendant", "aria-atomic:b", "aria-autocomplete:autocomplete", "aria-busy:b", "aria-checked:tristate", "aria-colcount", "aria-colindex", "aria-colspan", "aria-controls", "aria-current:current", "aria-describedat", "aria-describedby", "aria-disabled:b", "aria-dropeffect:dropeffect", "aria-errormessage", "aria-expanded:u", "aria-flowto", "aria-grabbed:u", "aria-haspopup:b", "aria-hidden:b", "aria-invalid:invalid", "aria-kbdshortcuts", "aria-label", "aria-labelledby", "aria-level", "aria-live:live", "aria-modal:b", "aria-multiline:b", "aria-multiselectable:b", "aria-orientation:orientation", "aria-owns", "aria-placeholder", "aria-posinset", "aria-pressed:tristate", "aria-readonly:b", "aria-relevant:relevant", "aria-required:b", "aria-roledescription", "aria-rowcount", "aria-rowindex", "aria-rowspan", "aria-selected:u", "aria-setsize", "aria-sort:sort", "aria-valuemax", "aria-valuemin", "aria-valuenow", "aria-valuetext", "accesskey", "class", "contenteditable:b", "contextmenu", "dir:d", "draggable:b", "dropzone", "hidden:v", "id", "itemid", "itemprop", "itemref", "itemscope:v", "itemtype", "lang", "role:roles", "spellcheck:b", "style", "tabindex", "title", "translate:y" ];
   var t = [ "onabort", "onblur", "oncanplay", "oncanplaythrough", "onchange", "onclick", "oncontextmenu", "ondblclick", "ondrag", "ondragend", "ondragenter", "ondragleave", "ondragover", "ondragstart", "ondrop", "ondurationchange", "onemptied", "onended", "onerror", "onfocus", "onformchange", "onforminput", "oninput", "oninvalid", "onkeydown", "onkeypress", "onkeyup", "onload", "onloadeddata", "onloadedmetadata", "onloadstart", "onmousedown", "onmousemove", "onmouseout", "onmouseover", "onmouseup", "onmousewheel", "onpause", "onplay", "onplaying", "onprogress", "onratechange", "onreset", "onresize", "onreadystatechange", "onscroll", "onseeked", "onseeking", "onselect", "onshow", "onstalled", "onsubmit", "onsuspend", "ontimeupdate", "onvolumechange", "onwaiting" ];
   var n = {
    b: [ "true", "false" ],
    u: [ "true", "false", "undefined" ],
    o: [ "on", "off" ],
    y: [ "yes", "no" ],
    w: [ "soft", "hard" ],
    d: [ "ltr", "rtl", "auto" ],
    m: [ "GET", "POST", "dialog" ],
    fm: [ "GET", "POST" ],
    s: [ "row", "col", "rowgroup", "colgroup" ],
    t: [ "hidden", "text", "search", "tel", "url", "email", "password", "datetime", "date", "month", "week", "time", "datetime-local", "number", "range", "color", "checkbox", "radio", "file", "submit", "image", "reset", "button" ],
    im: [ "verbatim", "latin", "latin-name", "latin-prose", "full-width-latin", "kana", "kana-name", "katakana", "numeric", "tel", "email", "url" ],
    bt: [ "button", "submit", "reset", "menu" ],
    lt: [ "1", "a", "A", "i", "I" ],
    mt: [ "context", "toolbar" ],
    mit: [ "command", "checkbox", "radio" ],
    et: [ "application/x-www-form-urlencoded", "multipart/form-data", "text/plain" ],
    tk: [ "subtitles", "captions", "descriptions", "chapters", "metadata" ],
    pl: [ "none", "metadata", "auto" ],
    sh: [ "circle", "default", "poly", "rect" ],
    xo: [ "anonymous", "use-credentials" ],
    sb: [ "allow-forms", "allow-modals", "allow-pointer-lock", "allow-popups", "allow-popups-to-escape-sandbox", "allow-same-origin", "allow-scripts", "allow-top-navigation" ],
    tristate: [ "true", "false", "mixed", "undefined" ],
    inputautocomplete: [ "additional-name", "address-level1", "address-level2", "address-level3", "address-level4", "address-line1", "address-line2", "address-line3", "bday", "bday-year", "bday-day", "bday-month", "billing", "cc-additional-name", "cc-csc", "cc-exp", "cc-exp-month", "cc-exp-year", "cc-family-name", "cc-given-name", "cc-name", "cc-number", "cc-type", "country", "country-name", "current-password", "email", "family-name", "fax", "given-name", "home", "honorific-prefix", "honorific-suffix", "impp", "language", "mobile", "name", "new-password", "nickname", "organization", "organization-title", "pager", "photo", "postal-code", "sex", "shipping", "street-address", "tel-area-code", "tel", "tel-country-code", "tel-extension", "tel-local", "tel-local-prefix", "tel-local-suffix", "tel-national", "transaction-amount", "transaction-currency", "url", "username", "work" ],
    autocomplete: [ "inline", "list", "both", "none" ],
    current: [ "page", "step", "location", "date", "time", "true", "false" ],
    dropeffect: [ "copy", "move", "link", "execute", "popup", "none" ],
    invalid: [ "grammar", "false", "spelling", "true" ],
    live: [ "off", "polite", "assertive" ],
    orientation: [ "vertical", "horizontal", "undefined" ],
    relevant: [ "additions", "removals", "text", "all", "additions text" ],
    sort: [ "ascending", "descending", "none", "other" ],
    roles: [ "alert", "alertdialog", "button", "checkbox", "dialog", "gridcell", "link", "log", "marquee", "menuitem", "menuitemcheckbox", "menuitemradio", "option", "progressbar", "radio", "scrollbar", "searchbox", "slider", "spinbutton", "status", "switch", "tab", "tabpanel", "textbox", "timer", "tooltip", "treeitem", "combobox", "grid", "listbox", "menu", "menubar", "radiogroup", "tablist", "tree", "treegrid", "application", "article", "cell", "columnheader", "definition", "directory", "document", "feed", "figure", "group", "heading", "img", "list", "listitem", "math", "none", "note", "presentation", "region", "row", "rowgroup", "rowheader", "separator", "table", "term", "text", "toolbar", "banner", "complementary", "contentinfo", "form", "main", "navigation", "region", "search", "doc-abstract", "doc-acknowledgments", "doc-afterword", "doc-appendix", "doc-backlink", "doc-biblioentry", "doc-bibliography", "doc-biblioref", "doc-chapter", "doc-colophon", "doc-conclusion", "doc-cover", "doc-credit", "doc-credits", "doc-dedication", "doc-endnote", "doc-endnotes", "doc-epigraph", "doc-epilogue", "doc-errata", "doc-example", "doc-footnote", "doc-foreword", "doc-glossary", "doc-glossref", "doc-index", "doc-introduction", "doc-noteref", "doc-notice", "doc-pagebreak", "doc-pagelist", "doc-part", "doc-preface", "doc-prologue", "doc-pullquote", "doc-qna", "doc-subtitle", "doc-tip", "doc-toc" ]
   };
   return {
    getId: function() {
     return "html5";
    },
    isApplicable: function() {
     return true;
    },
    collectTags: function(e) {
     return J(e, B);
    },
    collectAttributes: function(n, r) {
     K(n, r, B, e);
     t.forEach(function(e) {
      r(e, "event");
     });
    },
    collectValues: function(t, r, i) {
     return V(t, r, i, B, e, n);
    }
   };
  }
  function q() {
   var e = {
    input: [ "ng-model", "ng-required", "ng-minlength", "ng-maxlength", "ng-pattern", "ng-trim" ],
    select: [ "ng-model" ],
    textarea: [ "ng-model", "ng-required", "ng-minlength", "ng-maxlength", "ng-pattern", "ng-trim" ]
   };
   var t = [ "ng-app", "ng-strict-di", "ng-bind", "ng-bind-html", "ng-bind-template", "ng-blur", "ng-change", "ng-checked", "ng-class", "ng-class-even", "ng-class-odd", "ng-click", "ng-cloak", "ng-controller", "ng-copy", "ng-csp", "ng-cut", "ng-dblclick", "ng-disabled", "ng-focus", "ng-form", "ng-hide", "ng-href", "ng-if", "ng-include", "ng-init", "ng-jq", "ng-keydown", "ng-keypress", "ng-keyup", "ng-list", "ng-model-options", "ng-mousedown", "ng-mouseenter", "ng-mouseleave", "ng-mousemove", "ng-mouseover", "ng-mouseup", "ng-non-bindable", "ng-open", "ng-options", "ng-paste", "ng-pluralize", "ng-readonly", "ng-repeat", "ng-selected", "ng-show", "ng-src", "ng-srcset", "ng-style", "ng-submit", "ng-switch", "ng-transclude", "ng-value" ];
   return {
    getId: function() {
     return "angular1";
    },
    isApplicable: function(e) {
     return e === "html";
    },
    collectTags: function(e) {},
    collectAttributes: function(n, r) {
     if (n) {
      var i = e[n];
      if (i) {
       i.forEach(function(e) {
        r(e);
        r("data-" + e);
       });
      }
     }
     t.forEach(function(e) {
      r(e);
      r("data-" + e);
     });
    },
    collectValues: function(e, t, n) {}
   };
  }
  function U() {
   var e = {
    a: [ "nav-direction:navdir", "nav-transition:trans" ],
    button: [ "menu-toggle:menusides" ]
   };
   var t = [ "collection-repeat", "force-refresh-images:b", "ion-stop-event", "item-height", "item-render-buffer", "item-width", "menu-close:v", "on-double-tap", "on-drag", "on-drag-down", "on-drag-left", "on-drag-right", "on-drag-up", "on-hold", "on-release", "on-swipe", "on-swipe-down", "on-swipe-left", "on-swipe-right", "on-swipe-up", "on-tap", "on-touch" ];
   var n = {
    align: [ "center", "left", "right" ],
    b: [ "true", "false" ],
    inputtype: [ "email", "number", "password", "search", "tel", "text", "url" ],
    listtype: [ "card", "list-inset" ],
    menusides: [ "left", "right" ],
    navdir: [ "back", "enter", "exit", "forward", "swap" ],
    navsides: [ "left", "primary", "right", "secondary" ],
    scrolldir: [ "x", "xy", "y" ],
    trans: [ "android", "ios", "none" ]
   };
   return {
    getId: function() {
     return "ionic";
    },
    isApplicable: function(e) {
     return e === "html";
    },
    collectTags: function(e) {
     return J(e, z);
    },
    collectAttributes: function(n, r) {
     K(n, r, z, t);
     if (n) {
      var i = e[n];
      if (i) {
       i.forEach(function(e) {
        var t = e.split(":");
        r(t[0], t[1]);
       });
      }
     }
    },
    collectValues: function(r, i, a) {
     return V(r, i, a, z, t, n, e);
    }
   };
  }
  function J(e, t) {
   for (var n in t) {
    e(n, t[n].label);
   }
  }
  function K(e, t, n, r) {
   r.forEach(function(e) {
    var n = e.split(":");
    t(n[0], n[1]);
   });
   if (e) {
    var i = n[e];
    if (i) {
     var a = i.attributes;
     if (a) {
      a.forEach(function(e) {
       var n = e.split(":");
       t(n[0], n[1]);
      });
     }
    }
   }
  }
  function V(e, t, n, r, i, a, o) {
   var s = t + ":";
   var c = function(e) {
    e.forEach(function(e) {
     if (e.length > s.length && S(e, s)) {
      var r = e.substr(s.length);
      if (r === "v") {
       n(t);
      } else {
       var i = a[r];
       if (i) {
        i.forEach(n);
       }
      }
     }
    });
   };
   if (e) {
    var u = r[e];
    if (u) {
     var l = u.attributes;
     if (l) {
      c(l);
     }
    }
   }
   c(i);
   if (o) {
    var f = o[e];
    if (f) {
     c(f);
    }
   }
  }
  var W;
  (function(e) {
   e[e["StartCommentTag"] = 0] = "StartCommentTag";
   e[e["Comment"] = 1] = "Comment";
   e[e["EndCommentTag"] = 2] = "EndCommentTag";
   e[e["StartTagOpen"] = 3] = "StartTagOpen";
   e[e["StartTagClose"] = 4] = "StartTagClose";
   e[e["StartTagSelfClose"] = 5] = "StartTagSelfClose";
   e[e["StartTag"] = 6] = "StartTag";
   e[e["EndTagOpen"] = 7] = "EndTagOpen";
   e[e["EndTagClose"] = 8] = "EndTagClose";
   e[e["EndTag"] = 9] = "EndTag";
   e[e["DelimiterAssign"] = 10] = "DelimiterAssign";
   e[e["AttributeName"] = 11] = "AttributeName";
   e[e["AttributeValue"] = 12] = "AttributeValue";
   e[e["StartDoctypeTag"] = 13] = "StartDoctypeTag";
   e[e["Doctype"] = 14] = "Doctype";
   e[e["EndDoctypeTag"] = 15] = "EndDoctypeTag";
   e[e["Content"] = 16] = "Content";
   e[e["Whitespace"] = 17] = "Whitespace";
   e[e["Unknown"] = 18] = "Unknown";
   e[e["Script"] = 19] = "Script";
   e[e["Styles"] = 20] = "Styles";
   e[e["EOS"] = 21] = "EOS";
  })(W || (W = {}));
  var H;
  (function(e) {
   e[e["WithinContent"] = 0] = "WithinContent";
   e[e["AfterOpeningStartTag"] = 1] = "AfterOpeningStartTag";
   e[e["AfterOpeningEndTag"] = 2] = "AfterOpeningEndTag";
   e[e["WithinDoctype"] = 3] = "WithinDoctype";
   e[e["WithinTag"] = 4] = "WithinTag";
   e[e["WithinEndTag"] = 5] = "WithinEndTag";
   e[e["WithinComment"] = 6] = "WithinComment";
   e[e["WithinScriptContent"] = 7] = "WithinScriptContent";
   e[e["WithinStyleContent"] = 8] = "WithinStyleContent";
   e[e["AfterAttributeName"] = 9] = "AfterAttributeName";
   e[e["BeforeAttributeValue"] = 10] = "BeforeAttributeValue";
  })(H || (H = {}));
  var G;
  (function(e) {
   e["Comment"] = "comment";
   e["Imports"] = "imports";
   e["Region"] = "region";
  })(G || (G = {}));
  var $ = function() {
   function e(e, t, n, r) {
    this.start = e;
    this.end = t;
    this.children = n;
    this.parent = r;
    this.closed = false;
   }
   Object.defineProperty(e.prototype, "attributeNames", {
    get: function() {
     return this.attributes ? Object.keys(this.attributes) : [];
    },
    enumerable: true,
    configurable: true
   });
   e.prototype.isSameTag = function(e) {
    return this.tag && e && this.tag.length === e.length && this.tag.toLowerCase() === e;
   };
   Object.defineProperty(e.prototype, "firstChild", {
    get: function() {
     return this.children[0];
    },
    enumerable: true,
    configurable: true
   });
   Object.defineProperty(e.prototype, "lastChild", {
    get: function() {
     return this.children.length ? this.children[this.children.length - 1] : void 0;
    },
    enumerable: true,
    configurable: true
   });
   e.prototype.findNodeBefore = function(e) {
    var t = x(this.children, function(t) {
     return e <= t.start;
    }) - 1;
    if (t >= 0) {
     var n = this.children[t];
     if (e > n.start) {
      if (e < n.end) {
       return n.findNodeBefore(e);
      }
      var r = n.lastChild;
      if (r && r.end === n.end) {
       return n.findNodeBefore(e);
      }
      return n;
     }
    }
    return this;
   };
   e.prototype.findNodeAt = function(e) {
    var t = x(this.children, function(t) {
     return e <= t.start;
    }) - 1;
    if (t >= 0) {
     var n = this.children[t];
     if (e > n.start && e <= n.end) {
      return n.findNodeAt(e);
     }
    }
    return this;
   };
   return e;
  }();
  function X(e) {
   var t = b(e);
   var n = new $(0, e.length, [], void 0);
   var r = n;
   var i = -1;
   var a = null;
   var o = t.scan();
   while (o !== W.EOS) {
    switch (o) {
    case W.StartTagOpen:
     var s = new $(t.getTokenOffset(), e.length, [], r);
     r.children.push(s);
     r = s;
     break;

    case W.StartTag:
     r.tag = t.getTokenText();
     break;

    case W.StartTagClose:
     r.end = t.getTokenEnd();
     if (r.tag && L(r.tag) && r.parent) {
      r.closed = true;
      r = r.parent;
     }
     break;

    case W.EndTagOpen:
     i = t.getTokenOffset();
     break;

    case W.EndTag:
     var c = t.getTokenText().toLowerCase();
     while (!r.isSameTag(c) && r.parent) {
      r.end = i;
      r.closed = false;
      r = r.parent;
     }
     if (r !== n) {
      r.closed = true;
      r.endTagStart = i;
     }
     break;

    case W.StartTagSelfClose:
     if (r.parent) {
      r.closed = true;
      r.end = t.getTokenEnd();
      r = r.parent;
     }
     break;

    case W.EndTagClose:
     if (r.parent) {
      r.end = t.getTokenEnd();
      r = r.parent;
     }
     break;

    case W.AttributeName:
     {
      var u = a = t.getTokenText();
      var l = r.attributes;
      if (!l) {
       r.attributes = l = {};
      }
      l[a] = null;
      break;
     }

    case W.AttributeValue:
     {
      var f = t.getTokenText();
      var l = r.attributes;
      if (l && a) {
       l[a] = f;
       a = null;
      }
      break;
     }
    }
    o = t.scan();
   }
   while (r.parent) {
    r.end = e.length;
    r.closed = false;
    r = r.parent;
   }
   return {
    roots: n.children,
    findNodeBefore: n.findNodeBefore.bind(n),
    findNodeAt: n.findNodeAt.bind(n)
   };
  }
  var Q = n("kmEW");
  function Y() {
   var e = {
    a: [ "asp-action", "asp-controller", "asp-fragment", "asp-host", "asp-protocol", "asp-route" ],
    div: [ "asp-validation-summary" ],
    form: [ "asp-action", "asp-controller", "asp-anti-forgery" ],
    input: [ "asp-for", "asp-format" ],
    label: [ "asp-for" ],
    select: [ "asp-for", "asp-items" ],
    span: [ "asp-validation-for" ]
   };
   return {
    getId: function() {
     return "razor";
    },
    isApplicable: function(e) {
     return e === "razor";
    },
    collectTags: function(e) {},
    collectAttributes: function(t, n) {
     if (t) {
      var r = e[t];
      if (r) {
       r.forEach(function(e) {
        return n(e);
       });
      }
     }
    },
    collectValues: function(e, t, n) {}
   };
  }
  var Z = [ j(), q(), U(), Y() ];
  var ee = {
   "Aacute;": "Á",
   Aacute: "Á",
   "aacute;": "á",
   aacute: "á",
   "Abreve;": "Ă",
   "abreve;": "ă",
   "ac;": "∾",
   "acd;": "∿",
   "acE;": "∾̳",
   "Acirc;": "Â",
   Acirc: "Â",
   "acirc;": "â",
   acirc: "â",
   "acute;": "´",
   acute: "´",
   "Acy;": "А",
   "acy;": "а",
   "AElig;": "Æ",
   AElig: "Æ",
   "aelig;": "æ",
   aelig: "æ",
   "af;": "⁡",
   "Afr;": "𝔄",
   "afr;": "𝔞",
   "Agrave;": "À",
   Agrave: "À",
   "agrave;": "à",
   agrave: "à",
   "alefsym;": "ℵ",
   "aleph;": "ℵ",
   "Alpha;": "Α",
   "alpha;": "α",
   "Amacr;": "Ā",
   "amacr;": "ā",
   "amalg;": "⨿",
   "AMP;": "&",
   AMP: "&",
   "amp;": "&",
   amp: "&",
   "And;": "⩓",
   "and;": "∧",
   "andand;": "⩕",
   "andd;": "⩜",
   "andslope;": "⩘",
   "andv;": "⩚",
   "ang;": "∠",
   "ange;": "⦤",
   "angle;": "∠",
   "angmsd;": "∡",
   "angmsdaa;": "⦨",
   "angmsdab;": "⦩",
   "angmsdac;": "⦪",
   "angmsdad;": "⦫",
   "angmsdae;": "⦬",
   "angmsdaf;": "⦭",
   "angmsdag;": "⦮",
   "angmsdah;": "⦯",
   "angrt;": "∟",
   "angrtvb;": "⊾",
   "angrtvbd;": "⦝",
   "angsph;": "∢",
   "angst;": "Å",
   "angzarr;": "⍼",
   "Aogon;": "Ą",
   "aogon;": "ą",
   "Aopf;": "𝔸",
   "aopf;": "𝕒",
   "ap;": "≈",
   "apacir;": "⩯",
   "apE;": "⩰",
   "ape;": "≊",
   "apid;": "≋",
   "apos;": "'",
   "ApplyFunction;": "⁡",
   "approx;": "≈",
   "approxeq;": "≊",
   "Aring;": "Å",
   Aring: "Å",
   "aring;": "å",
   aring: "å",
   "Ascr;": "𝒜",
   "ascr;": "𝒶",
   "Assign;": "≔",
   "ast;": "*",
   "asymp;": "≈",
   "asympeq;": "≍",
   "Atilde;": "Ã",
   Atilde: "Ã",
   "atilde;": "ã",
   atilde: "ã",
   "Auml;": "Ä",
   Auml: "Ä",
   "auml;": "ä",
   auml: "ä",
   "awconint;": "∳",
   "awint;": "⨑",
   "backcong;": "≌",
   "backepsilon;": "϶",
   "backprime;": "‵",
   "backsim;": "∽",
   "backsimeq;": "⋍",
   "Backslash;": "∖",
   "Barv;": "⫧",
   "barvee;": "⊽",
   "Barwed;": "⌆",
   "barwed;": "⌅",
   "barwedge;": "⌅",
   "bbrk;": "⎵",
   "bbrktbrk;": "⎶",
   "bcong;": "≌",
   "Bcy;": "Б",
   "bcy;": "б",
   "bdquo;": "„",
   "becaus;": "∵",
   "Because;": "∵",
   "because;": "∵",
   "bemptyv;": "⦰",
   "bepsi;": "϶",
   "bernou;": "ℬ",
   "Bernoullis;": "ℬ",
   "Beta;": "Β",
   "beta;": "β",
   "beth;": "ℶ",
   "between;": "≬",
   "Bfr;": "𝔅",
   "bfr;": "𝔟",
   "bigcap;": "⋂",
   "bigcirc;": "◯",
   "bigcup;": "⋃",
   "bigodot;": "⨀",
   "bigoplus;": "⨁",
   "bigotimes;": "⨂",
   "bigsqcup;": "⨆",
   "bigstar;": "★",
   "bigtriangledown;": "▽",
   "bigtriangleup;": "△",
   "biguplus;": "⨄",
   "bigvee;": "⋁",
   "bigwedge;": "⋀",
   "bkarow;": "⤍",
   "blacklozenge;": "⧫",
   "blacksquare;": "▪",
   "blacktriangle;": "▴",
   "blacktriangledown;": "▾",
   "blacktriangleleft;": "◂",
   "blacktriangleright;": "▸",
   "blank;": "␣",
   "blk12;": "▒",
   "blk14;": "░",
   "blk34;": "▓",
   "block;": "█",
   "bne;": "=⃥",
   "bnequiv;": "≡⃥",
   "bNot;": "⫭",
   "bnot;": "⌐",
   "Bopf;": "𝔹",
   "bopf;": "𝕓",
   "bot;": "⊥",
   "bottom;": "⊥",
   "bowtie;": "⋈",
   "boxbox;": "⧉",
   "boxDL;": "╗",
   "boxDl;": "╖",
   "boxdL;": "╕",
   "boxdl;": "┐",
   "boxDR;": "╔",
   "boxDr;": "╓",
   "boxdR;": "╒",
   "boxdr;": "┌",
   "boxH;": "═",
   "boxh;": "─",
   "boxHD;": "╦",
   "boxHd;": "╤",
   "boxhD;": "╥",
   "boxhd;": "┬",
   "boxHU;": "╩",
   "boxHu;": "╧",
   "boxhU;": "╨",
   "boxhu;": "┴",
   "boxminus;": "⊟",
   "boxplus;": "⊞",
   "boxtimes;": "⊠",
   "boxUL;": "╝",
   "boxUl;": "╜",
   "boxuL;": "╛",
   "boxul;": "┘",
   "boxUR;": "╚",
   "boxUr;": "╙",
   "boxuR;": "╘",
   "boxur;": "└",
   "boxV;": "║",
   "boxv;": "│",
   "boxVH;": "╬",
   "boxVh;": "╫",
   "boxvH;": "╪",
   "boxvh;": "┼",
   "boxVL;": "╣",
   "boxVl;": "╢",
   "boxvL;": "╡",
   "boxvl;": "┤",
   "boxVR;": "╠",
   "boxVr;": "╟",
   "boxvR;": "╞",
   "boxvr;": "├",
   "bprime;": "‵",
   "Breve;": "˘",
   "breve;": "˘",
   "brvbar;": "¦",
   brvbar: "¦",
   "Bscr;": "ℬ",
   "bscr;": "𝒷",
   "bsemi;": "⁏",
   "bsim;": "∽",
   "bsime;": "⋍",
   "bsol;": "\\",
   "bsolb;": "⧅",
   "bsolhsub;": "⟈",
   "bull;": "•",
   "bullet;": "•",
   "bump;": "≎",
   "bumpE;": "⪮",
   "bumpe;": "≏",
   "Bumpeq;": "≎",
   "bumpeq;": "≏",
   "Cacute;": "Ć",
   "cacute;": "ć",
   "Cap;": "⋒",
   "cap;": "∩",
   "capand;": "⩄",
   "capbrcup;": "⩉",
   "capcap;": "⩋",
   "capcup;": "⩇",
   "capdot;": "⩀",
   "CapitalDifferentialD;": "ⅅ",
   "caps;": "∩︀",
   "caret;": "⁁",
   "caron;": "ˇ",
   "Cayleys;": "ℭ",
   "ccaps;": "⩍",
   "Ccaron;": "Č",
   "ccaron;": "č",
   "Ccedil;": "Ç",
   Ccedil: "Ç",
   "ccedil;": "ç",
   ccedil: "ç",
   "Ccirc;": "Ĉ",
   "ccirc;": "ĉ",
   "Cconint;": "∰",
   "ccups;": "⩌",
   "ccupssm;": "⩐",
   "Cdot;": "Ċ",
   "cdot;": "ċ",
   "cedil;": "¸",
   cedil: "¸",
   "Cedilla;": "¸",
   "cemptyv;": "⦲",
   "cent;": "¢",
   cent: "¢",
   "CenterDot;": "·",
   "centerdot;": "·",
   "Cfr;": "ℭ",
   "cfr;": "𝔠",
   "CHcy;": "Ч",
   "chcy;": "ч",
   "check;": "✓",
   "checkmark;": "✓",
   "Chi;": "Χ",
   "chi;": "χ",
   "cir;": "○",
   "circ;": "ˆ",
   "circeq;": "≗",
   "circlearrowleft;": "↺",
   "circlearrowright;": "↻",
   "circledast;": "⊛",
   "circledcirc;": "⊚",
   "circleddash;": "⊝",
   "CircleDot;": "⊙",
   "circledR;": "®",
   "circledS;": "Ⓢ",
   "CircleMinus;": "⊖",
   "CirclePlus;": "⊕",
   "CircleTimes;": "⊗",
   "cirE;": "⧃",
   "cire;": "≗",
   "cirfnint;": "⨐",
   "cirmid;": "⫯",
   "cirscir;": "⧂",
   "ClockwiseContourIntegral;": "∲",
   "CloseCurlyDoubleQuote;": "”",
   "CloseCurlyQuote;": "’",
   "clubs;": "♣",
   "clubsuit;": "♣",
   "Colon;": "∷",
   "colon;": ":",
   "Colone;": "⩴",
   "colone;": "≔",
   "coloneq;": "≔",
   "comma;": ",",
   "commat;": "@",
   "comp;": "∁",
   "compfn;": "∘",
   "complement;": "∁",
   "complexes;": "ℂ",
   "cong;": "≅",
   "congdot;": "⩭",
   "Congruent;": "≡",
   "Conint;": "∯",
   "conint;": "∮",
   "ContourIntegral;": "∮",
   "Copf;": "ℂ",
   "copf;": "𝕔",
   "coprod;": "∐",
   "Coproduct;": "∐",
   "COPY;": "©",
   COPY: "©",
   "copy;": "©",
   copy: "©",
   "copysr;": "℗",
   "CounterClockwiseContourIntegral;": "∳",
   "crarr;": "↵",
   "Cross;": "⨯",
   "cross;": "✗",
   "Cscr;": "𝒞",
   "cscr;": "𝒸",
   "csub;": "⫏",
   "csube;": "⫑",
   "csup;": "⫐",
   "csupe;": "⫒",
   "ctdot;": "⋯",
   "cudarrl;": "⤸",
   "cudarrr;": "⤵",
   "cuepr;": "⋞",
   "cuesc;": "⋟",
   "cularr;": "↶",
   "cularrp;": "⤽",
   "Cup;": "⋓",
   "cup;": "∪",
   "cupbrcap;": "⩈",
   "CupCap;": "≍",
   "cupcap;": "⩆",
   "cupcup;": "⩊",
   "cupdot;": "⊍",
   "cupor;": "⩅",
   "cups;": "∪︀",
   "curarr;": "↷",
   "curarrm;": "⤼",
   "curlyeqprec;": "⋞",
   "curlyeqsucc;": "⋟",
   "curlyvee;": "⋎",
   "curlywedge;": "⋏",
   "curren;": "¤",
   curren: "¤",
   "curvearrowleft;": "↶",
   "curvearrowright;": "↷",
   "cuvee;": "⋎",
   "cuwed;": "⋏",
   "cwconint;": "∲",
   "cwint;": "∱",
   "cylcty;": "⌭",
   "Dagger;": "‡",
   "dagger;": "†",
   "daleth;": "ℸ",
   "Darr;": "↡",
   "dArr;": "⇓",
   "darr;": "↓",
   "dash;": "‐",
   "Dashv;": "⫤",
   "dashv;": "⊣",
   "dbkarow;": "⤏",
   "dblac;": "˝",
   "Dcaron;": "Ď",
   "dcaron;": "ď",
   "Dcy;": "Д",
   "dcy;": "д",
   "DD;": "ⅅ",
   "dd;": "ⅆ",
   "ddagger;": "‡",
   "ddarr;": "⇊",
   "DDotrahd;": "⤑",
   "ddotseq;": "⩷",
   "deg;": "°",
   deg: "°",
   "Del;": "∇",
   "Delta;": "Δ",
   "delta;": "δ",
   "demptyv;": "⦱",
   "dfisht;": "⥿",
   "Dfr;": "𝔇",
   "dfr;": "𝔡",
   "dHar;": "⥥",
   "dharl;": "⇃",
   "dharr;": "⇂",
   "DiacriticalAcute;": "´",
   "DiacriticalDot;": "˙",
   "DiacriticalDoubleAcute;": "˝",
   "DiacriticalGrave;": "`",
   "DiacriticalTilde;": "˜",
   "diam;": "⋄",
   "Diamond;": "⋄",
   "diamond;": "⋄",
   "diamondsuit;": "♦",
   "diams;": "♦",
   "die;": "¨",
   "DifferentialD;": "ⅆ",
   "digamma;": "ϝ",
   "disin;": "⋲",
   "div;": "÷",
   "divide;": "÷",
   divide: "÷",
   "divideontimes;": "⋇",
   "divonx;": "⋇",
   "DJcy;": "Ђ",
   "djcy;": "ђ",
   "dlcorn;": "⌞",
   "dlcrop;": "⌍",
   "dollar;": "$",
   "Dopf;": "𝔻",
   "dopf;": "𝕕",
   "Dot;": "¨",
   "dot;": "˙",
   "DotDot;": "⃜",
   "doteq;": "≐",
   "doteqdot;": "≑",
   "DotEqual;": "≐",
   "dotminus;": "∸",
   "dotplus;": "∔",
   "dotsquare;": "⊡",
   "doublebarwedge;": "⌆",
   "DoubleContourIntegral;": "∯",
   "DoubleDot;": "¨",
   "DoubleDownArrow;": "⇓",
   "DoubleLeftArrow;": "⇐",
   "DoubleLeftRightArrow;": "⇔",
   "DoubleLeftTee;": "⫤",
   "DoubleLongLeftArrow;": "⟸",
   "DoubleLongLeftRightArrow;": "⟺",
   "DoubleLongRightArrow;": "⟹",
   "DoubleRightArrow;": "⇒",
   "DoubleRightTee;": "⊨",
   "DoubleUpArrow;": "⇑",
   "DoubleUpDownArrow;": "⇕",
   "DoubleVerticalBar;": "∥",
   "DownArrow;": "↓",
   "Downarrow;": "⇓",
   "downarrow;": "↓",
   "DownArrowBar;": "⤓",
   "DownArrowUpArrow;": "⇵",
   "DownBreve;": "̑",
   "downdownarrows;": "⇊",
   "downharpoonleft;": "⇃",
   "downharpoonright;": "⇂",
   "DownLeftRightVector;": "⥐",
   "DownLeftTeeVector;": "⥞",
   "DownLeftVector;": "↽",
   "DownLeftVectorBar;": "⥖",
   "DownRightTeeVector;": "⥟",
   "DownRightVector;": "⇁",
   "DownRightVectorBar;": "⥗",
   "DownTee;": "⊤",
   "DownTeeArrow;": "↧",
   "drbkarow;": "⤐",
   "drcorn;": "⌟",
   "drcrop;": "⌌",
   "Dscr;": "𝒟",
   "dscr;": "𝒹",
   "DScy;": "Ѕ",
   "dscy;": "ѕ",
   "dsol;": "⧶",
   "Dstrok;": "Đ",
   "dstrok;": "đ",
   "dtdot;": "⋱",
   "dtri;": "▿",
   "dtrif;": "▾",
   "duarr;": "⇵",
   "duhar;": "⥯",
   "dwangle;": "⦦",
   "DZcy;": "Џ",
   "dzcy;": "џ",
   "dzigrarr;": "⟿",
   "Eacute;": "É",
   Eacute: "É",
   "eacute;": "é",
   eacute: "é",
   "easter;": "⩮",
   "Ecaron;": "Ě",
   "ecaron;": "ě",
   "ecir;": "≖",
   "Ecirc;": "Ê",
   Ecirc: "Ê",
   "ecirc;": "ê",
   ecirc: "ê",
   "ecolon;": "≕",
   "Ecy;": "Э",
   "ecy;": "э",
   "eDDot;": "⩷",
   "Edot;": "Ė",
   "eDot;": "≑",
   "edot;": "ė",
   "ee;": "ⅇ",
   "efDot;": "≒",
   "Efr;": "𝔈",
   "efr;": "𝔢",
   "eg;": "⪚",
   "Egrave;": "È",
   Egrave: "È",
   "egrave;": "è",
   egrave: "è",
   "egs;": "⪖",
   "egsdot;": "⪘",
   "el;": "⪙",
   "Element;": "∈",
   "elinters;": "⏧",
   "ell;": "ℓ",
   "els;": "⪕",
   "elsdot;": "⪗",
   "Emacr;": "Ē",
   "emacr;": "ē",
   "empty;": "∅",
   "emptyset;": "∅",
   "EmptySmallSquare;": "◻",
   "emptyv;": "∅",
   "EmptyVerySmallSquare;": "▫",
   "emsp;": " ",
   "emsp13;": " ",
   "emsp14;": " ",
   "ENG;": "Ŋ",
   "eng;": "ŋ",
   "ensp;": " ",
   "Eogon;": "Ę",
   "eogon;": "ę",
   "Eopf;": "𝔼",
   "eopf;": "𝕖",
   "epar;": "⋕",
   "eparsl;": "⧣",
   "eplus;": "⩱",
   "epsi;": "ε",
   "Epsilon;": "Ε",
   "epsilon;": "ε",
   "epsiv;": "ϵ",
   "eqcirc;": "≖",
   "eqcolon;": "≕",
   "eqsim;": "≂",
   "eqslantgtr;": "⪖",
   "eqslantless;": "⪕",
   "Equal;": "⩵",
   "equals;": "=",
   "EqualTilde;": "≂",
   "equest;": "≟",
   "Equilibrium;": "⇌",
   "equiv;": "≡",
   "equivDD;": "⩸",
   "eqvparsl;": "⧥",
   "erarr;": "⥱",
   "erDot;": "≓",
   "Escr;": "ℰ",
   "escr;": "ℯ",
   "esdot;": "≐",
   "Esim;": "⩳",
   "esim;": "≂",
   "Eta;": "Η",
   "eta;": "η",
   "ETH;": "Ð",
   ETH: "Ð",
   "eth;": "ð",
   eth: "ð",
   "Euml;": "Ë",
   Euml: "Ë",
   "euml;": "ë",
   euml: "ë",
   "euro;": "€",
   "excl;": "!",
   "exist;": "∃",
   "Exists;": "∃",
   "expectation;": "ℰ",
   "ExponentialE;": "ⅇ",
   "exponentiale;": "ⅇ",
   "fallingdotseq;": "≒",
   "Fcy;": "Ф",
   "fcy;": "ф",
   "female;": "♀",
   "ffilig;": "ﬃ",
   "fflig;": "ﬀ",
   "ffllig;": "ﬄ",
   "Ffr;": "𝔉",
   "ffr;": "𝔣",
   "filig;": "ﬁ",
   "FilledSmallSquare;": "◼",
   "FilledVerySmallSquare;": "▪",
   "fjlig;": "fj",
   "flat;": "♭",
   "fllig;": "ﬂ",
   "fltns;": "▱",
   "fnof;": "ƒ",
   "Fopf;": "𝔽",
   "fopf;": "𝕗",
   "ForAll;": "∀",
   "forall;": "∀",
   "fork;": "⋔",
   "forkv;": "⫙",
   "Fouriertrf;": "ℱ",
   "fpartint;": "⨍",
   "frac12;": "½",
   frac12: "½",
   "frac13;": "⅓",
   "frac14;": "¼",
   frac14: "¼",
   "frac15;": "⅕",
   "frac16;": "⅙",
   "frac18;": "⅛",
   "frac23;": "⅔",
   "frac25;": "⅖",
   "frac34;": "¾",
   frac34: "¾",
   "frac35;": "⅗",
   "frac38;": "⅜",
   "frac45;": "⅘",
   "frac56;": "⅚",
   "frac58;": "⅝",
   "frac78;": "⅞",
   "frasl;": "⁄",
   "frown;": "⌢",
   "Fscr;": "ℱ",
   "fscr;": "𝒻",
   "gacute;": "ǵ",
   "Gamma;": "Γ",
   "gamma;": "γ",
   "Gammad;": "Ϝ",
   "gammad;": "ϝ",
   "gap;": "⪆",
   "Gbreve;": "Ğ",
   "gbreve;": "ğ",
   "Gcedil;": "Ģ",
   "Gcirc;": "Ĝ",
   "gcirc;": "ĝ",
   "Gcy;": "Г",
   "gcy;": "г",
   "Gdot;": "Ġ",
   "gdot;": "ġ",
   "gE;": "≧",
   "ge;": "≥",
   "gEl;": "⪌",
   "gel;": "⋛",
   "geq;": "≥",
   "geqq;": "≧",
   "geqslant;": "⩾",
   "ges;": "⩾",
   "gescc;": "⪩",
   "gesdot;": "⪀",
   "gesdoto;": "⪂",
   "gesdotol;": "⪄",
   "gesl;": "⋛︀",
   "gesles;": "⪔",
   "Gfr;": "𝔊",
   "gfr;": "𝔤",
   "Gg;": "⋙",
   "gg;": "≫",
   "ggg;": "⋙",
   "gimel;": "ℷ",
   "GJcy;": "Ѓ",
   "gjcy;": "ѓ",
   "gl;": "≷",
   "gla;": "⪥",
   "glE;": "⪒",
   "glj;": "⪤",
   "gnap;": "⪊",
   "gnapprox;": "⪊",
   "gnE;": "≩",
   "gne;": "⪈",
   "gneq;": "⪈",
   "gneqq;": "≩",
   "gnsim;": "⋧",
   "Gopf;": "𝔾",
   "gopf;": "𝕘",
   "grave;": "`",
   "GreaterEqual;": "≥",
   "GreaterEqualLess;": "⋛",
   "GreaterFullEqual;": "≧",
   "GreaterGreater;": "⪢",
   "GreaterLess;": "≷",
   "GreaterSlantEqual;": "⩾",
   "GreaterTilde;": "≳",
   "Gscr;": "𝒢",
   "gscr;": "ℊ",
   "gsim;": "≳",
   "gsime;": "⪎",
   "gsiml;": "⪐",
   "GT;": ">",
   GT: ">",
   "Gt;": "≫",
   "gt;": ">",
   gt: ">",
   "gtcc;": "⪧",
   "gtcir;": "⩺",
   "gtdot;": "⋗",
   "gtlPar;": "⦕",
   "gtquest;": "⩼",
   "gtrapprox;": "⪆",
   "gtrarr;": "⥸",
   "gtrdot;": "⋗",
   "gtreqless;": "⋛",
   "gtreqqless;": "⪌",
   "gtrless;": "≷",
   "gtrsim;": "≳",
   "gvertneqq;": "≩︀",
   "gvnE;": "≩︀",
   "Hacek;": "ˇ",
   "hairsp;": " ",
   "half;": "½",
   "hamilt;": "ℋ",
   "HARDcy;": "Ъ",
   "hardcy;": "ъ",
   "hArr;": "⇔",
   "harr;": "↔",
   "harrcir;": "⥈",
   "harrw;": "↭",
   "Hat;": "^",
   "hbar;": "ℏ",
   "Hcirc;": "Ĥ",
   "hcirc;": "ĥ",
   "hearts;": "♥",
   "heartsuit;": "♥",
   "hellip;": "…",
   "hercon;": "⊹",
   "Hfr;": "ℌ",
   "hfr;": "𝔥",
   "HilbertSpace;": "ℋ",
   "hksearow;": "⤥",
   "hkswarow;": "⤦",
   "hoarr;": "⇿",
   "homtht;": "∻",
   "hookleftarrow;": "↩",
   "hookrightarrow;": "↪",
   "Hopf;": "ℍ",
   "hopf;": "𝕙",
   "horbar;": "―",
   "HorizontalLine;": "─",
   "Hscr;": "ℋ",
   "hscr;": "𝒽",
   "hslash;": "ℏ",
   "Hstrok;": "Ħ",
   "hstrok;": "ħ",
   "HumpDownHump;": "≎",
   "HumpEqual;": "≏",
   "hybull;": "⁃",
   "hyphen;": "‐",
   "Iacute;": "Í",
   Iacute: "Í",
   "iacute;": "í",
   iacute: "í",
   "ic;": "⁣",
   "Icirc;": "Î",
   Icirc: "Î",
   "icirc;": "î",
   icirc: "î",
   "Icy;": "И",
   "icy;": "и",
   "Idot;": "İ",
   "IEcy;": "Е",
   "iecy;": "е",
   "iexcl;": "¡",
   iexcl: "¡",
   "iff;": "⇔",
   "Ifr;": "ℑ",
   "ifr;": "𝔦",
   "Igrave;": "Ì",
   Igrave: "Ì",
   "igrave;": "ì",
   igrave: "ì",
   "ii;": "ⅈ",
   "iiiint;": "⨌",
   "iiint;": "∭",
   "iinfin;": "⧜",
   "iiota;": "℩",
   "IJlig;": "Ĳ",
   "ijlig;": "ĳ",
   "Im;": "ℑ",
   "Imacr;": "Ī",
   "imacr;": "ī",
   "image;": "ℑ",
   "ImaginaryI;": "ⅈ",
   "imagline;": "ℐ",
   "imagpart;": "ℑ",
   "imath;": "ı",
   "imof;": "⊷",
   "imped;": "Ƶ",
   "Implies;": "⇒",
   "in;": "∈",
   "incare;": "℅",
   "infin;": "∞",
   "infintie;": "⧝",
   "inodot;": "ı",
   "Int;": "∬",
   "int;": "∫",
   "intcal;": "⊺",
   "integers;": "ℤ",
   "Integral;": "∫",
   "intercal;": "⊺",
   "Intersection;": "⋂",
   "intlarhk;": "⨗",
   "intprod;": "⨼",
   "InvisibleComma;": "⁣",
   "InvisibleTimes;": "⁢",
   "IOcy;": "Ё",
   "iocy;": "ё",
   "Iogon;": "Į",
   "iogon;": "į",
   "Iopf;": "𝕀",
   "iopf;": "𝕚",
   "Iota;": "Ι",
   "iota;": "ι",
   "iprod;": "⨼",
   "iquest;": "¿",
   iquest: "¿",
   "Iscr;": "ℐ",
   "iscr;": "𝒾",
   "isin;": "∈",
   "isindot;": "⋵",
   "isinE;": "⋹",
   "isins;": "⋴",
   "isinsv;": "⋳",
   "isinv;": "∈",
   "it;": "⁢",
   "Itilde;": "Ĩ",
   "itilde;": "ĩ",
   "Iukcy;": "І",
   "iukcy;": "і",
   "Iuml;": "Ï",
   Iuml: "Ï",
   "iuml;": "ï",
   iuml: "ï",
   "Jcirc;": "Ĵ",
   "jcirc;": "ĵ",
   "Jcy;": "Й",
   "jcy;": "й",
   "Jfr;": "𝔍",
   "jfr;": "𝔧",
   "jmath;": "ȷ",
   "Jopf;": "𝕁",
   "jopf;": "𝕛",
   "Jscr;": "𝒥",
   "jscr;": "𝒿",
   "Jsercy;": "Ј",
   "jsercy;": "ј",
   "Jukcy;": "Є",
   "jukcy;": "є",
   "Kappa;": "Κ",
   "kappa;": "κ",
   "kappav;": "ϰ",
   "Kcedil;": "Ķ",
   "kcedil;": "ķ",
   "Kcy;": "К",
   "kcy;": "к",
   "Kfr;": "𝔎",
   "kfr;": "𝔨",
   "kgreen;": "ĸ",
   "KHcy;": "Х",
   "khcy;": "х",
   "KJcy;": "Ќ",
   "kjcy;": "ќ",
   "Kopf;": "𝕂",
   "kopf;": "𝕜",
   "Kscr;": "𝒦",
   "kscr;": "𝓀",
   "lAarr;": "⇚",
   "Lacute;": "Ĺ",
   "lacute;": "ĺ",
   "laemptyv;": "⦴",
   "lagran;": "ℒ",
   "Lambda;": "Λ",
   "lambda;": "λ",
   "Lang;": "⟪",
   "lang;": "⟨",
   "langd;": "⦑",
   "langle;": "⟨",
   "lap;": "⪅",
   "Laplacetrf;": "ℒ",
   "laquo;": "«",
   laquo: "«",
   "Larr;": "↞",
   "lArr;": "⇐",
   "larr;": "←",
   "larrb;": "⇤",
   "larrbfs;": "⤟",
   "larrfs;": "⤝",
   "larrhk;": "↩",
   "larrlp;": "↫",
   "larrpl;": "⤹",
   "larrsim;": "⥳",
   "larrtl;": "↢",
   "lat;": "⪫",
   "lAtail;": "⤛",
   "latail;": "⤙",
   "late;": "⪭",
   "lates;": "⪭︀",
   "lBarr;": "⤎",
   "lbarr;": "⤌",
   "lbbrk;": "❲",
   "lbrace;": "{",
   "lbrack;": "[",
   "lbrke;": "⦋",
   "lbrksld;": "⦏",
   "lbrkslu;": "⦍",
   "Lcaron;": "Ľ",
   "lcaron;": "ľ",
   "Lcedil;": "Ļ",
   "lcedil;": "ļ",
   "lceil;": "⌈",
   "lcub;": "{",
   "Lcy;": "Л",
   "lcy;": "л",
   "ldca;": "⤶",
   "ldquo;": "“",
   "ldquor;": "„",
   "ldrdhar;": "⥧",
   "ldrushar;": "⥋",
   "ldsh;": "↲",
   "lE;": "≦",
   "le;": "≤",
   "LeftAngleBracket;": "⟨",
   "LeftArrow;": "←",
   "Leftarrow;": "⇐",
   "leftarrow;": "←",
   "LeftArrowBar;": "⇤",
   "LeftArrowRightArrow;": "⇆",
   "leftarrowtail;": "↢",
   "LeftCeiling;": "⌈",
   "LeftDoubleBracket;": "⟦",
   "LeftDownTeeVector;": "⥡",
   "LeftDownVector;": "⇃",
   "LeftDownVectorBar;": "⥙",
   "LeftFloor;": "⌊",
   "leftharpoondown;": "↽",
   "leftharpoonup;": "↼",
   "leftleftarrows;": "⇇",
   "LeftRightArrow;": "↔",
   "Leftrightarrow;": "⇔",
   "leftrightarrow;": "↔",
   "leftrightarrows;": "⇆",
   "leftrightharpoons;": "⇋",
   "leftrightsquigarrow;": "↭",
   "LeftRightVector;": "⥎",
   "LeftTee;": "⊣",
   "LeftTeeArrow;": "↤",
   "LeftTeeVector;": "⥚",
   "leftthreetimes;": "⋋",
   "LeftTriangle;": "⊲",
   "LeftTriangleBar;": "⧏",
   "LeftTriangleEqual;": "⊴",
   "LeftUpDownVector;": "⥑",
   "LeftUpTeeVector;": "⥠",
   "LeftUpVector;": "↿",
   "LeftUpVectorBar;": "⥘",
   "LeftVector;": "↼",
   "LeftVectorBar;": "⥒",
   "lEg;": "⪋",
   "leg;": "⋚",
   "leq;": "≤",
   "leqq;": "≦",
   "leqslant;": "⩽",
   "les;": "⩽",
   "lescc;": "⪨",
   "lesdot;": "⩿",
   "lesdoto;": "⪁",
   "lesdotor;": "⪃",
   "lesg;": "⋚︀",
   "lesges;": "⪓",
   "lessapprox;": "⪅",
   "lessdot;": "⋖",
   "lesseqgtr;": "⋚",
   "lesseqqgtr;": "⪋",
   "LessEqualGreater;": "⋚",
   "LessFullEqual;": "≦",
   "LessGreater;": "≶",
   "lessgtr;": "≶",
   "LessLess;": "⪡",
   "lesssim;": "≲",
   "LessSlantEqual;": "⩽",
   "LessTilde;": "≲",
   "lfisht;": "⥼",
   "lfloor;": "⌊",
   "Lfr;": "𝔏",
   "lfr;": "𝔩",
   "lg;": "≶",
   "lgE;": "⪑",
   "lHar;": "⥢",
   "lhard;": "↽",
   "lharu;": "↼",
   "lharul;": "⥪",
   "lhblk;": "▄",
   "LJcy;": "Љ",
   "ljcy;": "љ",
   "Ll;": "⋘",
   "ll;": "≪",
   "llarr;": "⇇",
   "llcorner;": "⌞",
   "Lleftarrow;": "⇚",
   "llhard;": "⥫",
   "lltri;": "◺",
   "Lmidot;": "Ŀ",
   "lmidot;": "ŀ",
   "lmoust;": "⎰",
   "lmoustache;": "⎰",
   "lnap;": "⪉",
   "lnapprox;": "⪉",
   "lnE;": "≨",
   "lne;": "⪇",
   "lneq;": "⪇",
   "lneqq;": "≨",
   "lnsim;": "⋦",
   "loang;": "⟬",
   "loarr;": "⇽",
   "lobrk;": "⟦",
   "LongLeftArrow;": "⟵",
   "Longleftarrow;": "⟸",
   "longleftarrow;": "⟵",
   "LongLeftRightArrow;": "⟷",
   "Longleftrightarrow;": "⟺",
   "longleftrightarrow;": "⟷",
   "longmapsto;": "⟼",
   "LongRightArrow;": "⟶",
   "Longrightarrow;": "⟹",
   "longrightarrow;": "⟶",
   "looparrowleft;": "↫",
   "looparrowright;": "↬",
   "lopar;": "⦅",
   "Lopf;": "𝕃",
   "lopf;": "𝕝",
   "loplus;": "⨭",
   "lotimes;": "⨴",
   "lowast;": "∗",
   "lowbar;": "_",
   "LowerLeftArrow;": "↙",
   "LowerRightArrow;": "↘",
   "loz;": "◊",
   "lozenge;": "◊",
   "lozf;": "⧫",
   "lpar;": "(",
   "lparlt;": "⦓",
   "lrarr;": "⇆",
   "lrcorner;": "⌟",
   "lrhar;": "⇋",
   "lrhard;": "⥭",
   "lrm;": "‎",
   "lrtri;": "⊿",
   "lsaquo;": "‹",
   "Lscr;": "ℒ",
   "lscr;": "𝓁",
   "Lsh;": "↰",
   "lsh;": "↰",
   "lsim;": "≲",
   "lsime;": "⪍",
   "lsimg;": "⪏",
   "lsqb;": "[",
   "lsquo;": "‘",
   "lsquor;": "‚",
   "Lstrok;": "Ł",
   "lstrok;": "ł",
   "LT;": "<",
   LT: "<",
   "Lt;": "≪",
   "lt;": "<",
   lt: "<",
   "ltcc;": "⪦",
   "ltcir;": "⩹",
   "ltdot;": "⋖",
   "lthree;": "⋋",
   "ltimes;": "⋉",
   "ltlarr;": "⥶",
   "ltquest;": "⩻",
   "ltri;": "◃",
   "ltrie;": "⊴",
   "ltrif;": "◂",
   "ltrPar;": "⦖",
   "lurdshar;": "⥊",
   "luruhar;": "⥦",
   "lvertneqq;": "≨︀",
   "lvnE;": "≨︀",
   "macr;": "¯",
   macr: "¯",
   "male;": "♂",
   "malt;": "✠",
   "maltese;": "✠",
   "Map;": "⤅",
   "map;": "↦",
   "mapsto;": "↦",
   "mapstodown;": "↧",
   "mapstoleft;": "↤",
   "mapstoup;": "↥",
   "marker;": "▮",
   "mcomma;": "⨩",
   "Mcy;": "М",
   "mcy;": "м",
   "mdash;": "—",
   "mDDot;": "∺",
   "measuredangle;": "∡",
   "MediumSpace;": " ",
   "Mellintrf;": "ℳ",
   "Mfr;": "𝔐",
   "mfr;": "𝔪",
   "mho;": "℧",
   "micro;": "µ",
   micro: "µ",
   "mid;": "∣",
   "midast;": "*",
   "midcir;": "⫰",
   "middot;": "·",
   middot: "·",
   "minus;": "−",
   "minusb;": "⊟",
   "minusd;": "∸",
   "minusdu;": "⨪",
   "MinusPlus;": "∓",
   "mlcp;": "⫛",
   "mldr;": "…",
   "mnplus;": "∓",
   "models;": "⊧",
   "Mopf;": "𝕄",
   "mopf;": "𝕞",
   "mp;": "∓",
   "Mscr;": "ℳ",
   "mscr;": "𝓂",
   "mstpos;": "∾",
   "Mu;": "Μ",
   "mu;": "μ",
   "multimap;": "⊸",
   "mumap;": "⊸",
   "nabla;": "∇",
   "Nacute;": "Ń",
   "nacute;": "ń",
   "nang;": "∠⃒",
   "nap;": "≉",
   "napE;": "⩰̸",
   "napid;": "≋̸",
   "napos;": "ŉ",
   "napprox;": "≉",
   "natur;": "♮",
   "natural;": "♮",
   "naturals;": "ℕ",
   "nbsp;": " ",
   nbsp: " ",
   "nbump;": "≎̸",
   "nbumpe;": "≏̸",
   "ncap;": "⩃",
   "Ncaron;": "Ň",
   "ncaron;": "ň",
   "Ncedil;": "Ņ",
   "ncedil;": "ņ",
   "ncong;": "≇",
   "ncongdot;": "⩭̸",
   "ncup;": "⩂",
   "Ncy;": "Н",
   "ncy;": "н",
   "ndash;": "–",
   "ne;": "≠",
   "nearhk;": "⤤",
   "neArr;": "⇗",
   "nearr;": "↗",
   "nearrow;": "↗",
   "nedot;": "≐̸",
   "NegativeMediumSpace;": "​",
   "NegativeThickSpace;": "​",
   "NegativeThinSpace;": "​",
   "NegativeVeryThinSpace;": "​",
   "nequiv;": "≢",
   "nesear;": "⤨",
   "nesim;": "≂̸",
   "NestedGreaterGreater;": "≫",
   "NestedLessLess;": "≪",
   "NewLine;": "\n",
   "nexist;": "∄",
   "nexists;": "∄",
   "Nfr;": "𝔑",
   "nfr;": "𝔫",
   "ngE;": "≧̸",
   "nge;": "≱",
   "ngeq;": "≱",
   "ngeqq;": "≧̸",
   "ngeqslant;": "⩾̸",
   "nges;": "⩾̸",
   "nGg;": "⋙̸",
   "ngsim;": "≵",
   "nGt;": "≫⃒",
   "ngt;": "≯",
   "ngtr;": "≯",
   "nGtv;": "≫̸",
   "nhArr;": "⇎",
   "nharr;": "↮",
   "nhpar;": "⫲",
   "ni;": "∋",
   "nis;": "⋼",
   "nisd;": "⋺",
   "niv;": "∋",
   "NJcy;": "Њ",
   "njcy;": "њ",
   "nlArr;": "⇍",
   "nlarr;": "↚",
   "nldr;": "‥",
   "nlE;": "≦̸",
   "nle;": "≰",
   "nLeftarrow;": "⇍",
   "nleftarrow;": "↚",
   "nLeftrightarrow;": "⇎",
   "nleftrightarrow;": "↮",
   "nleq;": "≰",
   "nleqq;": "≦̸",
   "nleqslant;": "⩽̸",
   "nles;": "⩽̸",
   "nless;": "≮",
   "nLl;": "⋘̸",
   "nlsim;": "≴",
   "nLt;": "≪⃒",
   "nlt;": "≮",
   "nltri;": "⋪",
   "nltrie;": "⋬",
   "nLtv;": "≪̸",
   "nmid;": "∤",
   "NoBreak;": "⁠",
   "NonBreakingSpace;": " ",
   "Nopf;": "ℕ",
   "nopf;": "𝕟",
   "Not;": "⫬",
   "not;": "¬",
   not: "¬",
   "NotCongruent;": "≢",
   "NotCupCap;": "≭",
   "NotDoubleVerticalBar;": "∦",
   "NotElement;": "∉",
   "NotEqual;": "≠",
   "NotEqualTilde;": "≂̸",
   "NotExists;": "∄",
   "NotGreater;": "≯",
   "NotGreaterEqual;": "≱",
   "NotGreaterFullEqual;": "≧̸",
   "NotGreaterGreater;": "≫̸",
   "NotGreaterLess;": "≹",
   "NotGreaterSlantEqual;": "⩾̸",
   "NotGreaterTilde;": "≵",
   "NotHumpDownHump;": "≎̸",
   "NotHumpEqual;": "≏̸",
   "notin;": "∉",
   "notindot;": "⋵̸",
   "notinE;": "⋹̸",
   "notinva;": "∉",
   "notinvb;": "⋷",
   "notinvc;": "⋶",
   "NotLeftTriangle;": "⋪",
   "NotLeftTriangleBar;": "⧏̸",
   "NotLeftTriangleEqual;": "⋬",
   "NotLess;": "≮",
   "NotLessEqual;": "≰",
   "NotLessGreater;": "≸",
   "NotLessLess;": "≪̸",
   "NotLessSlantEqual;": "⩽̸",
   "NotLessTilde;": "≴",
   "NotNestedGreaterGreater;": "⪢̸",
   "NotNestedLessLess;": "⪡̸",
   "notni;": "∌",
   "notniva;": "∌",
   "notnivb;": "⋾",
   "notnivc;": "⋽",
   "NotPrecedes;": "⊀",
   "NotPrecedesEqual;": "⪯̸",
   "NotPrecedesSlantEqual;": "⋠",
   "NotReverseElement;": "∌",
   "NotRightTriangle;": "⋫",
   "NotRightTriangleBar;": "⧐̸",
   "NotRightTriangleEqual;": "⋭",
   "NotSquareSubset;": "⊏̸",
   "NotSquareSubsetEqual;": "⋢",
   "NotSquareSuperset;": "⊐̸",
   "NotSquareSupersetEqual;": "⋣",
   "NotSubset;": "⊂⃒",
   "NotSubsetEqual;": "⊈",
   "NotSucceeds;": "⊁",
   "NotSucceedsEqual;": "⪰̸",
   "NotSucceedsSlantEqual;": "⋡",
   "NotSucceedsTilde;": "≿̸",
   "NotSuperset;": "⊃⃒",
   "NotSupersetEqual;": "⊉",
   "NotTilde;": "≁",
   "NotTildeEqual;": "≄",
   "NotTildeFullEqual;": "≇",
   "NotTildeTilde;": "≉",
   "NotVerticalBar;": "∤",
   "npar;": "∦",
   "nparallel;": "∦",
   "nparsl;": "⫽⃥",
   "npart;": "∂̸",
   "npolint;": "⨔",
   "npr;": "⊀",
   "nprcue;": "⋠",
   "npre;": "⪯̸",
   "nprec;": "⊀",
   "npreceq;": "⪯̸",
   "nrArr;": "⇏",
   "nrarr;": "↛",
   "nrarrc;": "⤳̸",
   "nrarrw;": "↝̸",
   "nRightarrow;": "⇏",
   "nrightarrow;": "↛",
   "nrtri;": "⋫",
   "nrtrie;": "⋭",
   "nsc;": "⊁",
   "nsccue;": "⋡",
   "nsce;": "⪰̸",
   "Nscr;": "𝒩",
   "nscr;": "𝓃",
   "nshortmid;": "∤",
   "nshortparallel;": "∦",
   "nsim;": "≁",
   "nsime;": "≄",
   "nsimeq;": "≄",
   "nsmid;": "∤",
   "nspar;": "∦",
   "nsqsube;": "⋢",
   "nsqsupe;": "⋣",
   "nsub;": "⊄",
   "nsubE;": "⫅̸",
   "nsube;": "⊈",
   "nsubset;": "⊂⃒",
   "nsubseteq;": "⊈",
   "nsubseteqq;": "⫅̸",
   "nsucc;": "⊁",
   "nsucceq;": "⪰̸",
   "nsup;": "⊅",
   "nsupE;": "⫆̸",
   "nsupe;": "⊉",
   "nsupset;": "⊃⃒",
   "nsupseteq;": "⊉",
   "nsupseteqq;": "⫆̸",
   "ntgl;": "≹",
   "Ntilde;": "Ñ",
   Ntilde: "Ñ",
   "ntilde;": "ñ",
   ntilde: "ñ",
   "ntlg;": "≸",
   "ntriangleleft;": "⋪",
   "ntrianglelefteq;": "⋬",
   "ntriangleright;": "⋫",
   "ntrianglerighteq;": "⋭",
   "Nu;": "Ν",
   "nu;": "ν",
   "num;": "#",
   "numero;": "№",
   "numsp;": " ",
   "nvap;": "≍⃒",
   "nVDash;": "⊯",
   "nVdash;": "⊮",
   "nvDash;": "⊭",
   "nvdash;": "⊬",
   "nvge;": "≥⃒",
   "nvgt;": ">⃒",
   "nvHarr;": "⤄",
   "nvinfin;": "⧞",
   "nvlArr;": "⤂",
   "nvle;": "≤⃒",
   "nvlt;": "<⃒",
   "nvltrie;": "⊴⃒",
   "nvrArr;": "⤃",
   "nvrtrie;": "⊵⃒",
   "nvsim;": "∼⃒",
   "nwarhk;": "⤣",
   "nwArr;": "⇖",
   "nwarr;": "↖",
   "nwarrow;": "↖",
   "nwnear;": "⤧",
   "Oacute;": "Ó",
   Oacute: "Ó",
   "oacute;": "ó",
   oacute: "ó",
   "oast;": "⊛",
   "ocir;": "⊚",
   "Ocirc;": "Ô",
   Ocirc: "Ô",
   "ocirc;": "ô",
   ocirc: "ô",
   "Ocy;": "О",
   "ocy;": "о",
   "odash;": "⊝",
   "Odblac;": "Ő",
   "odblac;": "ő",
   "odiv;": "⨸",
   "odot;": "⊙",
   "odsold;": "⦼",
   "OElig;": "Œ",
   "oelig;": "œ",
   "ofcir;": "⦿",
   "Ofr;": "𝔒",
   "ofr;": "𝔬",
   "ogon;": "˛",
   "Ograve;": "Ò",
   Ograve: "Ò",
   "ograve;": "ò",
   ograve: "ò",
   "ogt;": "⧁",
   "ohbar;": "⦵",
   "ohm;": "Ω",
   "oint;": "∮",
   "olarr;": "↺",
   "olcir;": "⦾",
   "olcross;": "⦻",
   "oline;": "‾",
   "olt;": "⧀",
   "Omacr;": "Ō",
   "omacr;": "ō",
   "Omega;": "Ω",
   "omega;": "ω",
   "Omicron;": "Ο",
   "omicron;": "ο",
   "omid;": "⦶",
   "ominus;": "⊖",
   "Oopf;": "𝕆",
   "oopf;": "𝕠",
   "opar;": "⦷",
   "OpenCurlyDoubleQuote;": "“",
   "OpenCurlyQuote;": "‘",
   "operp;": "⦹",
   "oplus;": "⊕",
   "Or;": "⩔",
   "or;": "∨",
   "orarr;": "↻",
   "ord;": "⩝",
   "order;": "ℴ",
   "orderof;": "ℴ",
   "ordf;": "ª",
   ordf: "ª",
   "ordm;": "º",
   ordm: "º",
   "origof;": "⊶",
   "oror;": "⩖",
   "orslope;": "⩗",
   "orv;": "⩛",
   "oS;": "Ⓢ",
   "Oscr;": "𝒪",
   "oscr;": "ℴ",
   "Oslash;": "Ø",
   Oslash: "Ø",
   "oslash;": "ø",
   oslash: "ø",
   "osol;": "⊘",
   "Otilde;": "Õ",
   Otilde: "Õ",
   "otilde;": "õ",
   otilde: "õ",
   "Otimes;": "⨷",
   "otimes;": "⊗",
   "otimesas;": "⨶",
   "Ouml;": "Ö",
   Ouml: "Ö",
   "ouml;": "ö",
   ouml: "ö",
   "ovbar;": "⌽",
   "OverBar;": "‾",
   "OverBrace;": "⏞",
   "OverBracket;": "⎴",
   "OverParenthesis;": "⏜",
   "par;": "∥",
   "para;": "¶",
   para: "¶",
   "parallel;": "∥",
   "parsim;": "⫳",
   "parsl;": "⫽",
   "part;": "∂",
   "PartialD;": "∂",
   "Pcy;": "П",
   "pcy;": "п",
   "percnt;": "%",
   "period;": ".",
   "permil;": "‰",
   "perp;": "⊥",
   "pertenk;": "‱",
   "Pfr;": "𝔓",
   "pfr;": "𝔭",
   "Phi;": "Φ",
   "phi;": "φ",
   "phiv;": "ϕ",
   "phmmat;": "ℳ",
   "phone;": "☎",
   "Pi;": "Π",
   "pi;": "π",
   "pitchfork;": "⋔",
   "piv;": "ϖ",
   "planck;": "ℏ",
   "planckh;": "ℎ",
   "plankv;": "ℏ",
   "plus;": "+",
   "plusacir;": "⨣",
   "plusb;": "⊞",
   "pluscir;": "⨢",
   "plusdo;": "∔",
   "plusdu;": "⨥",
   "pluse;": "⩲",
   "PlusMinus;": "±",
   "plusmn;": "±",
   plusmn: "±",
   "plussim;": "⨦",
   "plustwo;": "⨧",
   "pm;": "±",
   "Poincareplane;": "ℌ",
   "pointint;": "⨕",
   "Popf;": "ℙ",
   "popf;": "𝕡",
   "pound;": "£",
   pound: "£",
   "Pr;": "⪻",
   "pr;": "≺",
   "prap;": "⪷",
   "prcue;": "≼",
   "prE;": "⪳",
   "pre;": "⪯",
   "prec;": "≺",
   "precapprox;": "⪷",
   "preccurlyeq;": "≼",
   "Precedes;": "≺",
   "PrecedesEqual;": "⪯",
   "PrecedesSlantEqual;": "≼",
   "PrecedesTilde;": "≾",
   "preceq;": "⪯",
   "precnapprox;": "⪹",
   "precneqq;": "⪵",
   "precnsim;": "⋨",
   "precsim;": "≾",
   "Prime;": "″",
   "prime;": "′",
   "primes;": "ℙ",
   "prnap;": "⪹",
   "prnE;": "⪵",
   "prnsim;": "⋨",
   "prod;": "∏",
   "Product;": "∏",
   "profalar;": "⌮",
   "profline;": "⌒",
   "profsurf;": "⌓",
   "prop;": "∝",
   "Proportion;": "∷",
   "Proportional;": "∝",
   "propto;": "∝",
   "prsim;": "≾",
   "prurel;": "⊰",
   "Pscr;": "𝒫",
   "pscr;": "𝓅",
   "Psi;": "Ψ",
   "psi;": "ψ",
   "puncsp;": " ",
   "Qfr;": "𝔔",
   "qfr;": "𝔮",
   "qint;": "⨌",
   "Qopf;": "ℚ",
   "qopf;": "𝕢",
   "qprime;": "⁗",
   "Qscr;": "𝒬",
   "qscr;": "𝓆",
   "quaternions;": "ℍ",
   "quatint;": "⨖",
   "quest;": "?",
   "questeq;": "≟",
   "QUOT;": '"',
   QUOT: '"',
   "quot;": '"',
   quot: '"',
   "rAarr;": "⇛",
   "race;": "∽̱",
   "Racute;": "Ŕ",
   "racute;": "ŕ",
   "radic;": "√",
   "raemptyv;": "⦳",
   "Rang;": "⟫",
   "rang;": "⟩",
   "rangd;": "⦒",
   "range;": "⦥",
   "rangle;": "⟩",
   "raquo;": "»",
   raquo: "»",
   "Rarr;": "↠",
   "rArr;": "⇒",
   "rarr;": "→",
   "rarrap;": "⥵",
   "rarrb;": "⇥",
   "rarrbfs;": "⤠",
   "rarrc;": "⤳",
   "rarrfs;": "⤞",
   "rarrhk;": "↪",
   "rarrlp;": "↬",
   "rarrpl;": "⥅",
   "rarrsim;": "⥴",
   "Rarrtl;": "⤖",
   "rarrtl;": "↣",
   "rarrw;": "↝",
   "rAtail;": "⤜",
   "ratail;": "⤚",
   "ratio;": "∶",
   "rationals;": "ℚ",
   "RBarr;": "⤐",
   "rBarr;": "⤏",
   "rbarr;": "⤍",
   "rbbrk;": "❳",
   "rbrace;": "}",
   "rbrack;": "]",
   "rbrke;": "⦌",
   "rbrksld;": "⦎",
   "rbrkslu;": "⦐",
   "Rcaron;": "Ř",
   "rcaron;": "ř",
   "Rcedil;": "Ŗ",
   "rcedil;": "ŗ",
   "rceil;": "⌉",
   "rcub;": "}",
   "Rcy;": "Р",
   "rcy;": "р",
   "rdca;": "⤷",
   "rdldhar;": "⥩",
   "rdquo;": "”",
   "rdquor;": "”",
   "rdsh;": "↳",
   "Re;": "ℜ",
   "real;": "ℜ",
   "realine;": "ℛ",
   "realpart;": "ℜ",
   "reals;": "ℝ",
   "rect;": "▭",
   "REG;": "®",
   REG: "®",
   "reg;": "®",
   reg: "®",
   "ReverseElement;": "∋",
   "ReverseEquilibrium;": "⇋",
   "ReverseUpEquilibrium;": "⥯",
   "rfisht;": "⥽",
   "rfloor;": "⌋",
   "Rfr;": "ℜ",
   "rfr;": "𝔯",
   "rHar;": "⥤",
   "rhard;": "⇁",
   "rharu;": "⇀",
   "rharul;": "⥬",
   "Rho;": "Ρ",
   "rho;": "ρ",
   "rhov;": "ϱ",
   "RightAngleBracket;": "⟩",
   "RightArrow;": "→",
   "Rightarrow;": "⇒",
   "rightarrow;": "→",
   "RightArrowBar;": "⇥",
   "RightArrowLeftArrow;": "⇄",
   "rightarrowtail;": "↣",
   "RightCeiling;": "⌉",
   "RightDoubleBracket;": "⟧",
   "RightDownTeeVector;": "⥝",
   "RightDownVector;": "⇂",
   "RightDownVectorBar;": "⥕",
   "RightFloor;": "⌋",
   "rightharpoondown;": "⇁",
   "rightharpoonup;": "⇀",
   "rightleftarrows;": "⇄",
   "rightleftharpoons;": "⇌",
   "rightrightarrows;": "⇉",
   "rightsquigarrow;": "↝",
   "RightTee;": "⊢",
   "RightTeeArrow;": "↦",
   "RightTeeVector;": "⥛",
   "rightthreetimes;": "⋌",
   "RightTriangle;": "⊳",
   "RightTriangleBar;": "⧐",
   "RightTriangleEqual;": "⊵",
   "RightUpDownVector;": "⥏",
   "RightUpTeeVector;": "⥜",
   "RightUpVector;": "↾",
   "RightUpVectorBar;": "⥔",
   "RightVector;": "⇀",
   "RightVectorBar;": "⥓",
   "ring;": "˚",
   "risingdotseq;": "≓",
   "rlarr;": "⇄",
   "rlhar;": "⇌",
   "rlm;": "‏",
   "rmoust;": "⎱",
   "rmoustache;": "⎱",
   "rnmid;": "⫮",
   "roang;": "⟭",
   "roarr;": "⇾",
   "robrk;": "⟧",
   "ropar;": "⦆",
   "Ropf;": "ℝ",
   "ropf;": "𝕣",
   "roplus;": "⨮",
   "rotimes;": "⨵",
   "RoundImplies;": "⥰",
   "rpar;": ")",
   "rpargt;": "⦔",
   "rppolint;": "⨒",
   "rrarr;": "⇉",
   "Rrightarrow;": "⇛",
   "rsaquo;": "›",
   "Rscr;": "ℛ",
   "rscr;": "𝓇",
   "Rsh;": "↱",
   "rsh;": "↱",
   "rsqb;": "]",
   "rsquo;": "’",
   "rsquor;": "’",
   "rthree;": "⋌",
   "rtimes;": "⋊",
   "rtri;": "▹",
   "rtrie;": "⊵",
   "rtrif;": "▸",
   "rtriltri;": "⧎",
   "RuleDelayed;": "⧴",
   "ruluhar;": "⥨",
   "rx;": "℞",
   "Sacute;": "Ś",
   "sacute;": "ś",
   "sbquo;": "‚",
   "Sc;": "⪼",
   "sc;": "≻",
   "scap;": "⪸",
   "Scaron;": "Š",
   "scaron;": "š",
   "sccue;": "≽",
   "scE;": "⪴",
   "sce;": "⪰",
   "Scedil;": "Ş",
   "scedil;": "ş",
   "Scirc;": "Ŝ",
   "scirc;": "ŝ",
   "scnap;": "⪺",
   "scnE;": "⪶",
   "scnsim;": "⋩",
   "scpolint;": "⨓",
   "scsim;": "≿",
   "Scy;": "С",
   "scy;": "с",
   "sdot;": "⋅",
   "sdotb;": "⊡",
   "sdote;": "⩦",
   "searhk;": "⤥",
   "seArr;": "⇘",
   "searr;": "↘",
   "searrow;": "↘",
   "sect;": "§",
   sect: "§",
   "semi;": ";",
   "seswar;": "⤩",
   "setminus;": "∖",
   "setmn;": "∖",
   "sext;": "✶",
   "Sfr;": "𝔖",
   "sfr;": "𝔰",
   "sfrown;": "⌢",
   "sharp;": "♯",
   "SHCHcy;": "Щ",
   "shchcy;": "щ",
   "SHcy;": "Ш",
   "shcy;": "ш",
   "ShortDownArrow;": "↓",
   "ShortLeftArrow;": "←",
   "shortmid;": "∣",
   "shortparallel;": "∥",
   "ShortRightArrow;": "→",
   "ShortUpArrow;": "↑",
   "shy;": "­",
   shy: "­",
   "Sigma;": "Σ",
   "sigma;": "σ",
   "sigmaf;": "ς",
   "sigmav;": "ς",
   "sim;": "∼",
   "simdot;": "⩪",
   "sime;": "≃",
   "simeq;": "≃",
   "simg;": "⪞",
   "simgE;": "⪠",
   "siml;": "⪝",
   "simlE;": "⪟",
   "simne;": "≆",
   "simplus;": "⨤",
   "simrarr;": "⥲",
   "slarr;": "←",
   "SmallCircle;": "∘",
   "smallsetminus;": "∖",
   "smashp;": "⨳",
   "smeparsl;": "⧤",
   "smid;": "∣",
   "smile;": "⌣",
   "smt;": "⪪",
   "smte;": "⪬",
   "smtes;": "⪬︀",
   "SOFTcy;": "Ь",
   "softcy;": "ь",
   "sol;": "/",
   "solb;": "⧄",
   "solbar;": "⌿",
   "Sopf;": "𝕊",
   "sopf;": "𝕤",
   "spades;": "♠",
   "spadesuit;": "♠",
   "spar;": "∥",
   "sqcap;": "⊓",
   "sqcaps;": "⊓︀",
   "sqcup;": "⊔",
   "sqcups;": "⊔︀",
   "Sqrt;": "√",
   "sqsub;": "⊏",
   "sqsube;": "⊑",
   "sqsubset;": "⊏",
   "sqsubseteq;": "⊑",
   "sqsup;": "⊐",
   "sqsupe;": "⊒",
   "sqsupset;": "⊐",
   "sqsupseteq;": "⊒",
   "squ;": "□",
   "Square;": "□",
   "square;": "□",
   "SquareIntersection;": "⊓",
   "SquareSubset;": "⊏",
   "SquareSubsetEqual;": "⊑",
   "SquareSuperset;": "⊐",
   "SquareSupersetEqual;": "⊒",
   "SquareUnion;": "⊔",
   "squarf;": "▪",
   "squf;": "▪",
   "srarr;": "→",
   "Sscr;": "𝒮",
   "sscr;": "𝓈",
   "ssetmn;": "∖",
   "ssmile;": "⌣",
   "sstarf;": "⋆",
   "Star;": "⋆",
   "star;": "☆",
   "starf;": "★",
   "straightepsilon;": "ϵ",
   "straightphi;": "ϕ",
   "strns;": "¯",
   "Sub;": "⋐",
   "sub;": "⊂",
   "subdot;": "⪽",
   "subE;": "⫅",
   "sube;": "⊆",
   "subedot;": "⫃",
   "submult;": "⫁",
   "subnE;": "⫋",
   "subne;": "⊊",
   "subplus;": "⪿",
   "subrarr;": "⥹",
   "Subset;": "⋐",
   "subset;": "⊂",
   "subseteq;": "⊆",
   "subseteqq;": "⫅",
   "SubsetEqual;": "⊆",
   "subsetneq;": "⊊",
   "subsetneqq;": "⫋",
   "subsim;": "⫇",
   "subsub;": "⫕",
   "subsup;": "⫓",
   "succ;": "≻",
   "succapprox;": "⪸",
   "succcurlyeq;": "≽",
   "Succeeds;": "≻",
   "SucceedsEqual;": "⪰",
   "SucceedsSlantEqual;": "≽",
   "SucceedsTilde;": "≿",
   "succeq;": "⪰",
   "succnapprox;": "⪺",
   "succneqq;": "⪶",
   "succnsim;": "⋩",
   "succsim;": "≿",
   "SuchThat;": "∋",
   "Sum;": "∑",
   "sum;": "∑",
   "sung;": "♪",
   "Sup;": "⋑",
   "sup;": "⊃",
   "sup1;": "¹",
   sup1: "¹",
   "sup2;": "²",
   sup2: "²",
   "sup3;": "³",
   sup3: "³",
   "supdot;": "⪾",
   "supdsub;": "⫘",
   "supE;": "⫆",
   "supe;": "⊇",
   "supedot;": "⫄",
   "Superset;": "⊃",
   "SupersetEqual;": "⊇",
   "suphsol;": "⟉",
   "suphsub;": "⫗",
   "suplarr;": "⥻",
   "supmult;": "⫂",
   "supnE;": "⫌",
   "supne;": "⊋",
   "supplus;": "⫀",
   "Supset;": "⋑",
   "supset;": "⊃",
   "supseteq;": "⊇",
   "supseteqq;": "⫆",
   "supsetneq;": "⊋",
   "supsetneqq;": "⫌",
   "supsim;": "⫈",
   "supsub;": "⫔",
   "supsup;": "⫖",
   "swarhk;": "⤦",
   "swArr;": "⇙",
   "swarr;": "↙",
   "swarrow;": "↙",
   "swnwar;": "⤪",
   "szlig;": "ß",
   szlig: "ß",
   "Tab;": "\t",
   "target;": "⌖",
   "Tau;": "Τ",
   "tau;": "τ",
   "tbrk;": "⎴",
   "Tcaron;": "Ť",
   "tcaron;": "ť",
   "Tcedil;": "Ţ",
   "tcedil;": "ţ",
   "Tcy;": "Т",
   "tcy;": "т",
   "tdot;": "⃛",
   "telrec;": "⌕",
   "Tfr;": "𝔗",
   "tfr;": "𝔱",
   "there4;": "∴",
   "Therefore;": "∴",
   "therefore;": "∴",
   "Theta;": "Θ",
   "theta;": "θ",
   "thetasym;": "ϑ",
   "thetav;": "ϑ",
   "thickapprox;": "≈",
   "thicksim;": "∼",
   "ThickSpace;": "  ",
   "thinsp;": " ",
   "ThinSpace;": " ",
   "thkap;": "≈",
   "thksim;": "∼",
   "THORN;": "Þ",
   THORN: "Þ",
   "thorn;": "þ",
   thorn: "þ",
   "Tilde;": "∼",
   "tilde;": "˜",
   "TildeEqual;": "≃",
   "TildeFullEqual;": "≅",
   "TildeTilde;": "≈",
   "times;": "×",
   times: "×",
   "timesb;": "⊠",
   "timesbar;": "⨱",
   "timesd;": "⨰",
   "tint;": "∭",
   "toea;": "⤨",
   "top;": "⊤",
   "topbot;": "⌶",
   "topcir;": "⫱",
   "Topf;": "𝕋",
   "topf;": "𝕥",
   "topfork;": "⫚",
   "tosa;": "⤩",
   "tprime;": "‴",
   "TRADE;": "™",
   "trade;": "™",
   "triangle;": "▵",
   "triangledown;": "▿",
   "triangleleft;": "◃",
   "trianglelefteq;": "⊴",
   "triangleq;": "≜",
   "triangleright;": "▹",
   "trianglerighteq;": "⊵",
   "tridot;": "◬",
   "trie;": "≜",
   "triminus;": "⨺",
   "TripleDot;": "⃛",
   "triplus;": "⨹",
   "trisb;": "⧍",
   "tritime;": "⨻",
   "trpezium;": "⏢",
   "Tscr;": "𝒯",
   "tscr;": "𝓉",
   "TScy;": "Ц",
   "tscy;": "ц",
   "TSHcy;": "Ћ",
   "tshcy;": "ћ",
   "Tstrok;": "Ŧ",
   "tstrok;": "ŧ",
   "twixt;": "≬",
   "twoheadleftarrow;": "↞",
   "twoheadrightarrow;": "↠",
   "Uacute;": "Ú",
   Uacute: "Ú",
   "uacute;": "ú",
   uacute: "ú",
   "Uarr;": "↟",
   "uArr;": "⇑",
   "uarr;": "↑",
   "Uarrocir;": "⥉",
   "Ubrcy;": "Ў",
   "ubrcy;": "ў",
   "Ubreve;": "Ŭ",
   "ubreve;": "ŭ",
   "Ucirc;": "Û",
   Ucirc: "Û",
   "ucirc;": "û",
   ucirc: "û",
   "Ucy;": "У",
   "ucy;": "у",
   "udarr;": "⇅",
   "Udblac;": "Ű",
   "udblac;": "ű",
   "udhar;": "⥮",
   "ufisht;": "⥾",
   "Ufr;": "𝔘",
   "ufr;": "𝔲",
   "Ugrave;": "Ù",
   Ugrave: "Ù",
   "ugrave;": "ù",
   ugrave: "ù",
   "uHar;": "⥣",
   "uharl;": "↿",
   "uharr;": "↾",
   "uhblk;": "▀",
   "ulcorn;": "⌜",
   "ulcorner;": "⌜",
   "ulcrop;": "⌏",
   "ultri;": "◸",
   "Umacr;": "Ū",
   "umacr;": "ū",
   "uml;": "¨",
   uml: "¨",
   "UnderBar;": "_",
   "UnderBrace;": "⏟",
   "UnderBracket;": "⎵",
   "UnderParenthesis;": "⏝",
   "Union;": "⋃",
   "UnionPlus;": "⊎",
   "Uogon;": "Ų",
   "uogon;": "ų",
   "Uopf;": "𝕌",
   "uopf;": "𝕦",
   "UpArrow;": "↑",
   "Uparrow;": "⇑",
   "uparrow;": "↑",
   "UpArrowBar;": "⤒",
   "UpArrowDownArrow;": "⇅",
   "UpDownArrow;": "↕",
   "Updownarrow;": "⇕",
   "updownarrow;": "↕",
   "UpEquilibrium;": "⥮",
   "upharpoonleft;": "↿",
   "upharpoonright;": "↾",
   "uplus;": "⊎",
   "UpperLeftArrow;": "↖",
   "UpperRightArrow;": "↗",
   "Upsi;": "ϒ",
   "upsi;": "υ",
   "upsih;": "ϒ",
   "Upsilon;": "Υ",
   "upsilon;": "υ",
   "UpTee;": "⊥",
   "UpTeeArrow;": "↥",
   "upuparrows;": "⇈",
   "urcorn;": "⌝",
   "urcorner;": "⌝",
   "urcrop;": "⌎",
   "Uring;": "Ů",
   "uring;": "ů",
   "urtri;": "◹",
   "Uscr;": "𝒰",
   "uscr;": "𝓊",
   "utdot;": "⋰",
   "Utilde;": "Ũ",
   "utilde;": "ũ",
   "utri;": "▵",
   "utrif;": "▴",
   "uuarr;": "⇈",
   "Uuml;": "Ü",
   Uuml: "Ü",
   "uuml;": "ü",
   uuml: "ü",
   "uwangle;": "⦧",
   "vangrt;": "⦜",
   "varepsilon;": "ϵ",
   "varkappa;": "ϰ",
   "varnothing;": "∅",
   "varphi;": "ϕ",
   "varpi;": "ϖ",
   "varpropto;": "∝",
   "vArr;": "⇕",
   "varr;": "↕",
   "varrho;": "ϱ",
   "varsigma;": "ς",
   "varsubsetneq;": "⊊︀",
   "varsubsetneqq;": "⫋︀",
   "varsupsetneq;": "⊋︀",
   "varsupsetneqq;": "⫌︀",
   "vartheta;": "ϑ",
   "vartriangleleft;": "⊲",
   "vartriangleright;": "⊳",
   "Vbar;": "⫫",
   "vBar;": "⫨",
   "vBarv;": "⫩",
   "Vcy;": "В",
   "vcy;": "в",
   "VDash;": "⊫",
   "Vdash;": "⊩",
   "vDash;": "⊨",
   "vdash;": "⊢",
   "Vdashl;": "⫦",
   "Vee;": "⋁",
   "vee;": "∨",
   "veebar;": "⊻",
   "veeeq;": "≚",
   "vellip;": "⋮",
   "Verbar;": "‖",
   "verbar;": "|",
   "Vert;": "‖",
   "vert;": "|",
   "VerticalBar;": "∣",
   "VerticalLine;": "|",
   "VerticalSeparator;": "❘",
   "VerticalTilde;": "≀",
   "VeryThinSpace;": " ",
   "Vfr;": "𝔙",
   "vfr;": "𝔳",
   "vltri;": "⊲",
   "vnsub;": "⊂⃒",
   "vnsup;": "⊃⃒",
   "Vopf;": "𝕍",
   "vopf;": "𝕧",
   "vprop;": "∝",
   "vrtri;": "⊳",
   "Vscr;": "𝒱",
   "vscr;": "𝓋",
   "vsubnE;": "⫋︀",
   "vsubne;": "⊊︀",
   "vsupnE;": "⫌︀",
   "vsupne;": "⊋︀",
   "Vvdash;": "⊪",
   "vzigzag;": "⦚",
   "Wcirc;": "Ŵ",
   "wcirc;": "ŵ",
   "wedbar;": "⩟",
   "Wedge;": "⋀",
   "wedge;": "∧",
   "wedgeq;": "≙",
   "weierp;": "℘",
   "Wfr;": "𝔚",
   "wfr;": "𝔴",
   "Wopf;": "𝕎",
   "wopf;": "𝕨",
   "wp;": "℘",
   "wr;": "≀",
   "wreath;": "≀",
   "Wscr;": "𝒲",
   "wscr;": "𝓌",
   "xcap;": "⋂",
   "xcirc;": "◯",
   "xcup;": "⋃",
   "xdtri;": "▽",
   "Xfr;": "𝔛",
   "xfr;": "𝔵",
   "xhArr;": "⟺",
   "xharr;": "⟷",
   "Xi;": "Ξ",
   "xi;": "ξ",
   "xlArr;": "⟸",
   "xlarr;": "⟵",
   "xmap;": "⟼",
   "xnis;": "⋻",
   "xodot;": "⨀",
   "Xopf;": "𝕏",
   "xopf;": "𝕩",
   "xoplus;": "⨁",
   "xotime;": "⨂",
   "xrArr;": "⟹",
   "xrarr;": "⟶",
   "Xscr;": "𝒳",
   "xscr;": "𝓍",
   "xsqcup;": "⨆",
   "xuplus;": "⨄",
   "xutri;": "△",
   "xvee;": "⋁",
   "xwedge;": "⋀",
   "Yacute;": "Ý",
   Yacute: "Ý",
   "yacute;": "ý",
   yacute: "ý",
   "YAcy;": "Я",
   "yacy;": "я",
   "Ycirc;": "Ŷ",
   "ycirc;": "ŷ",
   "Ycy;": "Ы",
   "ycy;": "ы",
   "yen;": "¥",
   yen: "¥",
   "Yfr;": "𝔜",
   "yfr;": "𝔶",
   "YIcy;": "Ї",
   "yicy;": "ї",
   "Yopf;": "𝕐",
   "yopf;": "𝕪",
   "Yscr;": "𝒴",
   "yscr;": "𝓎",
   "YUcy;": "Ю",
   "yucy;": "ю",
   "Yuml;": "Ÿ",
   "yuml;": "ÿ",
   yuml: "ÿ",
   "Zacute;": "Ź",
   "zacute;": "ź",
   "Zcaron;": "Ž",
   "zcaron;": "ž",
   "Zcy;": "З",
   "zcy;": "з",
   "Zdot;": "Ż",
   "zdot;": "ż",
   "zeetrf;": "ℨ",
   "ZeroWidthSpace;": "​",
   "Zeta;": "Ζ",
   "zeta;": "ζ",
   "Zfr;": "ℨ",
   "zfr;": "𝔷",
   "ZHcy;": "Ж",
   "zhcy;": "ж",
   "zigrarr;": "⇝",
   "Zopf;": "ℤ",
   "zopf;": "𝕫",
   "Zscr;": "𝒵",
   "zscr;": "𝓏",
   "zwj;": "‍",
   "zwnj;": "‌"
  };
  var te = r["loadMessageBundle"]();
  var ne = function() {
   function e() {
    this.completionParticipants = [];
   }
   e.prototype.setCompletionParticipants = function(e) {
    this.completionParticipants = e || [];
   };
   e.prototype.doComplete = function(e, t, n, r) {
    var i = {
     isIncomplete: false,
     items: []
    };
    var a = this.completionParticipants;
    var o = Z.filter(function(t) {
     return t.isApplicable(e.languageId) && (!r || r[t.getId()] !== false);
    });
    var s = e.getText();
    var c = e.offsetAt(t);
    var u = n.findNodeBefore(c);
    if (!u) {
     return i;
    }
    var l = b(s, u.start);
    var f = "";
    var d;
    function p(t, n) {
     if (n === void 0) {
      n = c;
     }
     if (t > c) {
      t = c;
     }
     return {
      start: e.positionAt(t),
      end: e.positionAt(n)
     };
    }
    function m(e, t) {
     var n = p(e, t);
     o.forEach(function(e) {
      e.collectTags(function(e, t) {
       i.items.push({
        label: e,
        kind: Q["CompletionItemKind"].Property,
        documentation: t,
        textEdit: Q["TextEdit"].replace(n, e),
        insertTextFormat: Q["InsertTextFormat"].PlainText
       });
      });
     });
     return i;
    }
    function _(e) {
     var t = e;
     while (t > 0) {
      var n = s.charAt(t - 1);
      if ("\n\r".indexOf(n) >= 0) {
       return s.substring(t, e);
      }
      if (!ie(n)) {
       return null;
      }
      t--;
     }
     return s.substring(0, e);
    }
    function g(e, t, n) {
     if (n === void 0) {
      n = c;
     }
     var r = p(e, n);
     var a = ae(s, n, H.WithinEndTag, W.EndTagClose) ? "" : ">";
     var l = u;
     if (t) {
      l = l.parent;
     }
     while (l) {
      var f = l.tag;
      if (f && (!l.closed || l.endTagStart && l.endTagStart > c)) {
       var d = {
        label: "/" + f,
        kind: Q["CompletionItemKind"].Property,
        filterText: "/" + f + a,
        textEdit: Q["TextEdit"].replace(r, "/" + f + a),
        insertTextFormat: Q["InsertTextFormat"].PlainText
       };
       var m = _(l.start);
       var g = _(e - 1);
       if (m !== null && g !== null && m !== g) {
        var h = m + "</" + f + a;
        d.textEdit = Q["TextEdit"].replace(p(e - 1 - g.length), h);
        d.filterText = g + "</" + f + a;
       }
       i.items.push(d);
       return i;
      }
      l = l.parent;
     }
     if (t) {
      return i;
     }
     o.forEach(function(e) {
      e.collectTags(function(e, t) {
       i.items.push({
        label: "/" + e,
        kind: Q["CompletionItemKind"].Property,
        documentation: t,
        filterText: "/" + e + a,
        textEdit: Q["TextEdit"].replace(r, "/" + e + a),
        insertTextFormat: Q["InsertTextFormat"].PlainText
       });
      });
     });
     return i;
    }
    function h(t, n) {
     if (r && r.hideAutoCompleteProposals) {
      return i;
     }
     if (!L(n)) {
      var a = e.positionAt(t);
      i.items.push({
       label: "</" + n + ">",
       kind: Q["CompletionItemKind"].Property,
       filterText: "</" + n + ">",
       textEdit: Q["TextEdit"].insert(a, "$0</" + n + ">"),
       insertTextFormat: Q["InsertTextFormat"].Snippet
      });
     }
     return i;
    }
    function v(e, t) {
     m(e, t);
     g(e, true, t);
     return i;
    }
    function y(e, t) {
     if (t === void 0) {
      t = c;
     }
     var n = c;
     while (n < t && s[n] !== "<") {
      n++;
     }
     var r = p(e, n);
     var a = ae(s, t, H.AfterAttributeName, W.DelimiterAssign) ? "" : '="$1"';
     var u = f.toLowerCase();
     var l = Object.create(null);
     o.forEach(function(e) {
      e.collectAttributes(u, function(e, t) {
       if (l[e]) {
        return;
       }
       l[e] = true;
       var n = e;
       var o;
       if (t !== "v" && a.length) {
        n = n + a;
        if (t) {
         o = {
          title: "Suggest",
          command: "editor.action.triggerSuggest"
         };
        }
       }
       i.items.push({
        label: e,
        kind: t === "handler" ? Q["CompletionItemKind"].Function : Q["CompletionItemKind"].Value,
        textEdit: Q["TextEdit"].replace(r, n),
        insertTextFormat: Q["InsertTextFormat"].Snippet,
        command: o
       });
      });
     });
     x(r, l);
     return i;
    }
    function x(e, t) {
     var r = "data-";
     var a = {};
     a[r] = r + '$1="$2"';
     function o(e) {
      e.attributeNames.forEach(function(e) {
       if (S(e, r) && !a[e] && !t[e]) {
        a[e] = e + '="$1"';
       }
      });
      e.children.forEach(function(e) {
       return o(e);
      });
     }
     if (n) {
      n.roots.forEach(function(e) {
       return o(e);
      });
     }
     Object.keys(a).forEach(function(t) {
      return i.items.push({
       label: t,
       kind: Q["CompletionItemKind"].Value,
       textEdit: Q["TextEdit"].replace(e, a[t]),
       insertTextFormat: Q["InsertTextFormat"].Snippet
      });
     });
    }
    function k(n, r) {
     if (r === void 0) {
      r = c;
     }
     var u;
     var m;
     var _;
     if (c > n && c <= r && re(s[n])) {
      var g = n + 1;
      var h = r;
      if (r > n && s[r - 1] === s[n]) {
       h--;
      }
      var v = oe(s, c, g);
      var y = se(s, c, h);
      u = p(v, y);
      _ = c >= g && c <= h ? s.substring(g, c) : "";
      m = false;
     } else {
      u = p(n, r);
      _ = s.substring(n, c);
      m = true;
     }
     var b = f.toLowerCase();
     var x = d.toLowerCase();
     if (a.length > 0) {
      var k = p(n, r);
      for (var S = 0, w = a; S < w.length; S++) {
       var C = w[S];
       if (C.onHtmlAttributeValue) {
        C.onHtmlAttributeValue({
         document: e,
         position: t,
         tag: b,
         attribute: x,
         value: _,
         range: k
        });
       }
      }
     }
     var D = l.getTokenText();
     o.forEach(function(e) {
      e.collectValues(b, x, function(e) {
       var t = m ? '"' + e + '"' : e;
       i.items.push({
        label: e,
        filterText: t,
        kind: Q["CompletionItemKind"].Unit,
        textEdit: Q["TextEdit"].replace(u, t),
        insertTextFormat: Q["InsertTextFormat"].PlainText
       });
      });
     });
     T();
     return i;
    }
    function C(e) {
     if (c === l.getTokenEnd()) {
      E = l.scan();
      if (E === e && l.getTokenOffset() === c) {
       return l.getTokenEnd();
      }
     }
     return c;
    }
    function D() {
     for (var n = 0, r = a; n < r.length; n++) {
      var i = r[n];
      if (i.onHtmlContent) {
       i.onHtmlContent({
        document: e,
        position: t
       });
      }
     }
     return T();
    }
    function T() {
     var e = c - 1;
     var n = t.character;
     while (e >= 0 && I(s, e)) {
      e--;
      n--;
     }
     if (e >= 0 && s[e] === "&") {
      var r = Q["Range"].create(Q["Position"].create(t.line, n - 1), t);
      for (var a in ee) {
       if (w(a, ";")) {
        var o = "&" + a;
        i.items.push({
         label: o,
         kind: Q["CompletionItemKind"].Keyword,
         documentation: te("entity.propose", "Character entity representing '" + ee[a] + "'"),
         textEdit: Q["TextEdit"].replace(r, o),
         insertTextFormat: Q["InsertTextFormat"].PlainText
        });
       }
      }
     }
     return i;
    }
    var E = l.scan();
    while (E !== W.EOS && l.getTokenOffset() <= c) {
     switch (E) {
     case W.StartTagOpen:
      if (l.getTokenEnd() === c) {
       var N = C(W.StartTag);
       return v(c, N);
      }
      break;

     case W.StartTag:
      if (l.getTokenOffset() <= c && c <= l.getTokenEnd()) {
       return m(l.getTokenOffset(), l.getTokenEnd());
      }
      f = l.getTokenText();
      break;

     case W.AttributeName:
      if (l.getTokenOffset() <= c && c <= l.getTokenEnd()) {
       return y(l.getTokenOffset(), l.getTokenEnd());
      }
      d = l.getTokenText();
      break;

     case W.DelimiterAssign:
      if (l.getTokenEnd() === c) {
       var N = C(W.AttributeValue);
       return k(c, N);
      }
      break;

     case W.AttributeValue:
      if (l.getTokenOffset() <= c && c <= l.getTokenEnd()) {
       return k(l.getTokenOffset(), l.getTokenEnd());
      }
      break;

     case W.Whitespace:
      if (c <= l.getTokenEnd()) {
       switch (l.getScannerState()) {
       case H.AfterOpeningStartTag:
        var A = l.getTokenOffset();
        var F = C(W.StartTag);
        return v(A, F);

       case H.WithinTag:
       case H.AfterAttributeName:
        return y(l.getTokenEnd());

       case H.BeforeAttributeValue:
        return k(l.getTokenEnd());

       case H.AfterOpeningEndTag:
        return g(l.getTokenOffset() - 1, false);

       case H.WithinContent:
        return D();
       }
      }
      break;

     case W.EndTagOpen:
      if (c <= l.getTokenEnd()) {
       var P = l.getTokenOffset() + 1;
       var O = C(W.EndTag);
       return g(P, false, O);
      }
      break;

     case W.EndTag:
      if (c <= l.getTokenEnd()) {
       var M = l.getTokenOffset() - 1;
       while (M >= 0) {
        var R = s.charAt(M);
        if (R === "/") {
         return g(M, false, l.getTokenEnd());
        } else if (!ie(R)) {
         break;
        }
        M--;
       }
      }
      break;

     case W.StartTagClose:
      if (c <= l.getTokenEnd()) {
       if (f) {
        return h(l.getTokenEnd(), f);
       }
      }
      break;

     case W.Content:
      if (c <= l.getTokenEnd()) {
       return D();
      }
      break;

     default:
      if (c <= l.getTokenEnd()) {
       return i;
      }
      break;
     }
     E = l.scan();
    }
    return i;
   };
   e.prototype.doTagComplete = function(e, t, n) {
    var r = e.offsetAt(t);
    if (r <= 0) {
     return null;
    }
    var i = e.getText().charAt(r - 1);
    if (i === ">") {
     var a = n.findNodeBefore(r);
     if (a && a.tag && !L(a.tag) && a.start < r && (!a.endTagStart || a.endTagStart > r)) {
      var o = b(e.getText(), a.start);
      var s = o.scan();
      while (s !== W.EOS && o.getTokenEnd() <= r) {
       if (s === W.StartTagClose && o.getTokenEnd() === r) {
        return "$0</" + a.tag + ">";
       }
       s = o.scan();
      }
     }
    } else if (i === "/") {
     var a = n.findNodeBefore(r);
     while (a && a.closed) {
      a = a.parent;
     }
     if (a && a.tag) {
      var o = b(e.getText(), a.start);
      var s = o.scan();
      while (s !== W.EOS && o.getTokenEnd() <= r) {
       if (s === W.EndTagOpen && o.getTokenEnd() === r) {
        return a.tag + ">";
       }
       s = o.scan();
      }
     }
    }
    return null;
   };
   return e;
  }();
  function re(e) {
   return /^["']*$/.test(e);
  }
  function ie(e) {
   return /^\s*$/.test(e);
  }
  function ae(e, t, n, r) {
   var i = b(e, t, n);
   var a = i.scan();
   while (a === W.Whitespace) {
    a = i.scan();
   }
   return a === r;
  }
  function oe(e, t, n) {
   while (t > n && !ie(e[t - 1])) {
    t--;
   }
   return t;
  }
  function se(e, t, n) {
   while (t < n && !ie(e[t])) {
    t++;
   }
   return t;
  }
  function ce(e, t, n) {
   var r = e.offsetAt(t);
   var i = n.findNodeAt(r);
   if (!i || !i.tag) {
    return null;
   }
   var a = Z.filter(function(t) {
    return t.isApplicable(e.languageId);
   });
   function o(e, t, n) {
    e = e.toLowerCase();
    var r = function(r) {
     var i = null;
     r.collectTags(function(r, a) {
      if (r === e) {
       var o = n ? "<" + e + ">" : "</" + e + ">";
       i = {
        contents: [ {
         language: "html",
         value: o
        }, Q["MarkedString"].fromPlainText(a) ],
        range: t
       };
      }
     });
     if (i) {
      return {
       value: i
      };
     }
    };
    for (var i = 0, o = a; i < o.length; i++) {
     var s = o[i];
     var c = r(s);
     if (typeof c === "object") return c.value;
    }
    return null;
   }
   function s(t, n) {
    var i = b(e.getText(), n);
    var a = i.scan();
    while (a !== W.EOS && (i.getTokenEnd() < r || i.getTokenEnd() === r && a !== t)) {
     a = i.scan();
    }
    if (a === t && r <= i.getTokenEnd()) {
     return {
      start: e.positionAt(i.getTokenOffset()),
      end: e.positionAt(i.getTokenEnd())
     };
    }
    return null;
   }
   if (i.endTagStart && r >= i.endTagStart) {
    var c = s(W.EndTag, i.endTagStart);
    if (c) {
     return o(i.tag, c, false);
    }
    return null;
   }
   var u = s(W.StartTag, i.start);
   if (u) {
    return o(i.tag, u, true);
   }
   return null;
  }
  function ue(e, t) {
   return e;
  }
  const le = function(e) {
   var t = {};
   function n(r) {
    if (t[r]) {
     return t[r].exports;
    }
    var i = t[r] = {
     i: r,
     l: false,
     exports: {}
    };
    e[r].call(i.exports, i, i.exports, n);
    i.l = true;
    return i.exports;
   }
   n.m = e;
   n.c = t;
   n.i = function(e) {
    return e;
   };
   n.d = function(e, t, r) {
    if (!n.o(e, t)) {
     Object.defineProperty(e, t, {
      configurable: false,
      enumerable: true,
      get: r
     });
    }
   };
   n.n = function(e) {
    var t = e && e.__esModule ? function t() {
     return e["default"];
    } : function t() {
     return e;
    };
    n.d(t, "a", t);
    return t;
   };
   n.o = function(e, t) {
    return Object.prototype.hasOwnProperty.call(e, t);
   };
   n.p = "";
   return n(n.s = 4);
  }([ function(e, t, n) {
   var r = n(2).mergeOpts;
   var i = n(1);
   var a = n(3).Output;
   var o = i.lineBreak;
   var s = i.allLineBreaks;
   function c(e, t) {
    t = t || {};
    t = r(t, "css");
    e = e || "";
    var n = 0;
    var i = t.indent_size ? parseInt(t.indent_size, 10) : 4;
    var c = t.indent_char || " ";
    var u = t.preserve_newlines === undefined ? false : t.preserve_newlines;
    var l = t.selector_separator_newline === undefined ? true : t.selector_separator_newline;
    var f = t.end_with_newline === undefined ? false : t.end_with_newline;
    var d = t.newline_between_rules === undefined ? true : t.newline_between_rules;
    var p = t.space_around_combinator === undefined ? false : t.space_around_combinator;
    p = p || (t.space_around_selector_separator === undefined ? false : t.space_around_selector_separator);
    var m = t.eol ? t.eol : "auto";
    if (t.indent_with_tabs) {
     c = "\t";
     i = 1;
    }
    if (m === "auto") {
     m = "\n";
     if (e && o.test(e || "")) {
      m = e.match(o)[0];
     }
    }
    m = m.replace(/\\r/, "\r").replace(/\\n/, "\n");
    e = e.replace(s, "\n");
    var _ = /^\s+$/;
    var g = -1, h;
    var v = 0;
    function y() {
     h = e.charAt(++g);
     return h || "";
    }
    function b(t) {
     var n = "";
     var r = g;
     if (t) {
      S();
     }
     n = e.charAt(g + 1) || "";
     g = r - 1;
     y();
     return n;
    }
    function x(t) {
     var n = g;
     while (y()) {
      if (h === "\\") {
       y();
      } else if (t.indexOf(h) !== -1) {
       break;
      } else if (h === "\n") {
       break;
      }
     }
     return e.substring(n, g + 1);
    }
    function k(e) {
     var t = g;
     var n = x(e);
     g = t - 1;
     y();
     return n;
    }
    function S(e) {
     var t = 0;
     while (_.test(b())) {
      y();
      if (h === "\n" && e && u) {
       I.add_new_line(true);
       t++;
      }
     }
     n = t;
     return t;
    }
    function w() {
     var e = "";
     if (h && _.test(h)) {
      e = h;
     }
     while (_.test(y())) {
      e += h;
     }
     return e;
    }
    function C() {
     var t = g;
     var n = b() === "/";
     y();
     while (y()) {
      if (!n && h === "*" && b() === "/") {
       y();
       break;
      } else if (n && h === "\n") {
       return e.substring(t, g);
      }
     }
     return e.substring(t, g) + h;
    }
    function D(t) {
     return e.substring(g - t.length, g).toLowerCase() === t;
    }
    function T() {
     var t = 0;
     for (var n = g + 1; n < e.length; n++) {
      var r = e.charAt(n);
      if (r === "{") {
       return true;
      } else if (r === "(") {
       t += 1;
      } else if (r === ")") {
       if (t === 0) {
        return false;
       }
       t -= 1;
      } else if (r === ";" || r === "}") {
       return false;
      }
     }
     return false;
    }
    var E = "";
    var N = 0;
    if (e && e.length) {
     while (e.charAt(N) === " " || e.charAt(N) === "\t") {
      N += 1;
     }
     E = e.substring(0, N);
     e = e.substring(N);
    }
    var A = new Array(i + 1).join(c);
    var F;
    var P;
    var I;
    function O(e) {
     if (I.just_added_newline()) {
      I.set_indent(F);
     }
     I.add_token(e);
    }
    function M(e) {
     if (e) {
      I.space_before_token = true;
     }
    }
    function L() {
     F++;
    }
    function R() {
     if (F > 0) {
      F--;
     }
    }
    this.beautify = function() {
     I = new a(A, E);
     F = 0;
     P = 0;
     g = -1;
     h = null;
     v = 0;
     var e = false;
     var t = false;
     var r = false;
     var i = "";
     var o = "";
     while (true) {
      var s = w();
      var c = s !== "";
      var u = s.indexOf("\n") !== -1;
      o = i;
      i = h;
      if (!h) {
       break;
      } else if (h === "/" && b() === "*") {
       var N = F === 0;
       if (u || N) {
        I.add_new_line();
       }
       O(C());
       I.add_new_line();
       if (N) {
        I.add_new_line(true);
       }
      } else if (h === "/" && b() === "/") {
       if (!u && o !== "{") {
        I.trim(true);
       }
       I.space_before_token = true;
       O(C());
       I.add_new_line();
      } else if (h === "@") {
       M(c);
       if (b() === "{") {
        O(x("}"));
       } else {
        O(h);
        var B = k(": ,;{}()[]/='\"");
        if (B.match(/[ :]$/)) {
         y();
         B = x(": ").replace(/\s$/, "");
         O(B);
         I.space_before_token = true;
        }
        B = B.replace(/\s$/, "");
        if (B in this.NESTED_AT_RULE) {
         P += 1;
         if (B in this.CONDITIONAL_GROUP_RULE) {
          r = true;
         }
        }
       }
      } else if (h === "#" && b() === "{") {
       M(c);
       O(x("}"));
      } else if (h === "{") {
       if (b(true) === "}") {
        S();
        y();
        I.space_before_token = true;
        O("{}");
        if (!S(true)) {
         I.add_new_line();
        }
        if (n < 2 && d && F === 0) {
         I.add_new_line(true);
        }
       } else {
        L();
        I.space_before_token = true;
        O(h);
        if (!S(true)) {
         I.add_new_line();
        }
        if (r) {
         r = false;
         e = F > P;
        } else {
         e = F >= P;
        }
       }
      } else if (h === "}") {
       R();
       I.add_new_line();
       O(h);
       e = false;
       t = false;
       if (P) {
        P--;
       }
       if (!S(true)) {
        I.add_new_line();
       }
       if (n < 2 && d && F === 0) {
        I.add_new_line(true);
       }
      } else if (h === ":") {
       S();
       if ((e || r) && !(D("&") || T()) && !D("(")) {
        O(":");
        if (!t) {
         t = true;
         I.space_before_token = true;
        }
       } else {
        if (D(" ")) {
         I.space_before_token = true;
        }
        if (b() === ":") {
         y();
         O("::");
        } else {
         O(":");
        }
       }
      } else if (h === '"' || h === "'") {
       M(c);
       O(x(h));
      } else if (h === ";") {
       t = false;
       O(h);
       if (!S(true)) {
        I.add_new_line();
       }
      } else if (h === "(") {
       if (D("url")) {
        O(h);
        S();
        if (y()) {
         if (h !== ")" && h !== '"' && h !== "'") {
          O(x(")"));
         } else {
          g--;
          v++;
         }
        }
       } else {
        v++;
        M(c);
        O(h);
        S();
       }
      } else if (h === ")") {
       O(h);
       v--;
      } else if (h === ",") {
       O(h);
       if (!S(true) && l && !t && v < 1) {
        I.add_new_line();
       } else {
        I.space_before_token = true;
       }
      } else if ((h === ">" || h === "+" || h === "~") && !t && v < 1) {
       if (p) {
        I.space_before_token = true;
        O(h);
        I.space_before_token = true;
       } else {
        O(h);
        S();
        if (h && _.test(h)) {
         h = "";
        }
       }
      } else if (h === "]") {
       O(h);
      } else if (h === "[") {
       M(c);
       O(h);
      } else if (h === "=") {
       S();
       O("=");
       if (_.test(h)) {
        h = "";
       }
      } else if (h === "!") {
       O(" ");
       O(h);
      } else {
       M(c);
       O(h);
      }
     }
     var z = I.get_code(f, m);
     return z;
    };
    this.NESTED_AT_RULE = {
     "@page": true,
     "@font-face": true,
     "@keyframes": true,
     "@media": true,
     "@supports": true,
     "@document": true
    };
    this.CONDITIONAL_GROUP_RULE = {
     "@media": true,
     "@supports": true,
     "@document": true
    };
   }
   e.exports.Beautifier = c;
  }, function(e, t) {
   var n = /[\u1680\u180e\u2000-\u200a\u202f\u205f\u3000\ufeff]/;
   var r = "ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԧԱ-Ֆՙա-ևא-תװ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࢠࢢ-ࢬऄ-हऽॐक़-ॡॱ-ॷॹ-ॿঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-ళవ-హఽౘౙౠౡಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൠൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛰᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡷᢀ-ᢨᢪᢰ-ᣵᤀ-ᤜᥐ-ᥭᥰ-ᥴᦀ-ᦫᧁ-ᧇᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᳩ-ᳬᳮ-ᳱᳵᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⸯ々-〇〡-〩〱-〵〸-〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚗꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞓꞠ-Ɦꟸ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꪀ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ";
   var i = "̀-ͯ҃-֑҇-ׇֽֿׁׂׅׄؐ-ؚؠ-ىٲ-ۓۧ-ۨۻ-ۼܰ-݊ࠀ-ࠔࠛ-ࠣࠥ-ࠧࠩ-࠭ࡀ-ࡗࣤ-ࣾऀ-ःऺ-़ा-ॏ॑-ॗॢ-ॣ०-९ঁ-ঃ়া-ৄেৈৗয়-ৠਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢ-ૣ૦-૯ଁ-ଃ଼ା-ୄେୈୋ-୍ୖୗୟ-ୠ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఁ-ఃె-ైొ-్ౕౖౢ-ౣ౦-౯ಂಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢ-ೣ೦-೯ംഃെ-ൈൗൢ-ൣ൦-൯ංඃ්ා-ුූෘ-ෟෲෳิ-ฺเ-ๅ๐-๙ິ-ູ່-ໍ໐-໙༘༙༠-༩༹༵༷ཁ-ཇཱ-྄྆-྇ྍ-ྗྙ-ྼ࿆က-ဩ၀-၉ၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟ᜎ-ᜐᜠ-ᜰᝀ-ᝐᝲᝳក-ឲ៝០-៩᠋-᠍᠐-᠙ᤠ-ᤫᤰ-᤻ᥑ-ᥭᦰ-ᧀᧈ-ᧉ᧐-᧙ᨀ-ᨕᨠ-ᩓ᩠-᩿᩼-᪉᪐-᪙ᭆ-ᭋ᭐-᭙᭫-᭳᮰-᮹᯦-᯳ᰀ-ᰢ᱀-᱉ᱛ-ᱽ᳐-᳒ᴀ-ᶾḁ-ἕ‌‍‿⁀⁔⃐-⃥⃜⃡-⃰ⶁ-ⶖⷠ-ⷿ〡-〨゙゚Ꙁ-ꙭꙴ-꙽ꚟ꛰-꛱ꟸ-ꠀ꠆ꠋꠣ-ꠧꢀ-ꢁꢴ-꣄꣐-꣙ꣳ-ꣷ꤀-꤉ꤦ-꤭ꤰ-ꥅꦀ-ꦃ꦳-꧀ꨀ-ꨧꩀ-ꩁꩌ-ꩍ꩐-꩙ꩻꫠ-ꫩꫲ-ꫳꯀ-ꯡ꯬꯭꯰-꯹ﬠ-ﬨ︀-️︠-︦︳︴﹍-﹏０-９＿";
   var a = new RegExp("[" + r + "]");
   var o = new RegExp("[" + r + i + "]");
   t.newline = /[\n\r\u2028\u2029]/;
   t.lineBreak = new RegExp("\r\n|" + t.newline.source);
   t.allLineBreaks = new RegExp(t.lineBreak.source, "g");
   t.isIdentifierStart = function(e) {
    if (e < 65) return e === 36 || e === 64;
    if (e < 91) return true;
    if (e < 97) return e === 95;
    if (e < 123) return true;
    return e >= 170 && a.test(String.fromCharCode(e));
   };
   t.isIdentifierChar = function(e) {
    if (e < 48) return e === 36;
    if (e < 58) return true;
    if (e < 65) return false;
    if (e < 91) return true;
    if (e < 97) return e === 95;
    if (e < 123) return true;
    return e >= 170 && o.test(String.fromCharCode(e));
   };
  }, function(e, t) {
   function n(e, t) {
    var n = {};
    var r;
    for (r in e) {
     if (r !== t) {
      n[r] = e[r];
     }
    }
    if (t in e) {
     for (r in e[t]) {
      n[r] = e[t][r];
     }
    }
    return n;
   }
   e.exports.mergeOpts = n;
  }, function(e, t) {
   function n(e) {
    var t = 0;
    var n = -1;
    var r = [];
    var i = true;
    this.set_indent = function(r) {
     t = e.baseIndentLength + r * e.indent_length;
     n = r;
    };
    this.get_character_count = function() {
     return t;
    };
    this.is_empty = function() {
     return i;
    };
    this.last = function() {
     if (!this._empty) {
      return r[r.length - 1];
     } else {
      return null;
     }
    };
    this.push = function(e) {
     r.push(e);
     t += e.length;
     i = false;
    };
    this.pop = function() {
     var e = null;
     if (!i) {
      e = r.pop();
      t -= e.length;
      i = r.length === 0;
     }
     return e;
    };
    this.remove_indent = function() {
     if (n > 0) {
      n -= 1;
      t -= e.indent_length;
     }
    };
    this.trim = function() {
     while (this.last() === " ") {
      r.pop();
      t -= 1;
     }
     i = r.length === 0;
    };
    this.toString = function() {
     var t = "";
     if (!this._empty) {
      if (n >= 0) {
       t = e.indent_cache[n];
      }
      t += r.join("");
     }
     return t;
    };
   }
   function r(e, t) {
    t = t || "";
    this.indent_cache = [ t ];
    this.baseIndentLength = t.length;
    this.indent_length = e.length;
    this.raw = false;
    var r = [];
    this.baseIndentString = t;
    this.indent_string = e;
    this.previous_line = null;
    this.current_line = null;
    this.space_before_token = false;
    this.add_outputline = function() {
     this.previous_line = this.current_line;
     this.current_line = new n(this);
     r.push(this.current_line);
    };
    this.add_outputline();
    this.get_line_number = function() {
     return r.length;
    };
    this.add_new_line = function(e) {
     if (this.get_line_number() === 1 && this.just_added_newline()) {
      return false;
     }
     if (e || !this.just_added_newline()) {
      if (!this.raw) {
       this.add_outputline();
      }
      return true;
     }
     return false;
    };
    this.get_code = function(e, t) {
     var n = r.join("\n").replace(/[\r\n\t ]+$/, "");
     if (e) {
      n += "\n";
     }
     if (t !== "\n") {
      n = n.replace(/[\n]/g, t);
     }
     return n;
    };
    this.set_indent = function(e) {
     if (r.length > 1) {
      while (e >= this.indent_cache.length) {
       this.indent_cache.push(this.indent_cache[this.indent_cache.length - 1] + this.indent_string);
      }
      this.current_line.set_indent(e);
      return true;
     }
     this.current_line.set_indent(0);
     return false;
    };
    this.add_raw_token = function(e) {
     for (var t = 0; t < e.newlines; t++) {
      this.add_outputline();
     }
     this.current_line.push(e.whitespace_before);
     this.current_line.push(e.text);
     this.space_before_token = false;
    };
    this.add_token = function(e) {
     this.add_space_before_token();
     this.current_line.push(e);
    };
    this.add_space_before_token = function() {
     if (this.space_before_token && !this.just_added_newline()) {
      this.current_line.push(" ");
     }
     this.space_before_token = false;
    };
    this.remove_indent = function(e) {
     var t = r.length;
     while (e < t) {
      r[e].remove_indent();
      e++;
     }
    };
    this.trim = function(n) {
     n = n === undefined ? false : n;
     this.current_line.trim(e, t);
     while (n && r.length > 1 && this.current_line.is_empty()) {
      r.pop();
      this.current_line = r[r.length - 1];
      this.current_line.trim();
     }
     this.previous_line = r.length > 1 ? r[r.length - 2] : null;
    };
    this.just_added_newline = function() {
     return this.current_line.is_empty();
    };
    this.just_added_blankline = function() {
     if (this.just_added_newline()) {
      if (r.length === 1) {
       return true;
      }
      var e = r[r.length - 2];
      return e.is_empty();
     }
     return false;
    };
   }
   e.exports.Output = r;
  }, function(e, t, n) {
   var r = n(0).Beautifier;
   function i(e, t) {
    var n = new r(e, t);
    return n.beautify();
   }
   e.exports = i;
  } ]);
  var fe = function(e) {
   var t = {};
   function n(r) {
    if (t[r]) {
     return t[r].exports;
    }
    var i = t[r] = {
     i: r,
     l: false,
     exports: {}
    };
    e[r].call(i.exports, i, i.exports, n);
    i.l = true;
    return i.exports;
   }
   n.m = e;
   n.c = t;
   n.i = function(e) {
    return e;
   };
   n.d = function(e, t, r) {
    if (!n.o(e, t)) {
     Object.defineProperty(e, t, {
      configurable: false,
      enumerable: true,
      get: r
     });
    }
   };
   n.n = function(e) {
    var t = e && e.__esModule ? function t() {
     return e["default"];
    } : function t() {
     return e;
    };
    n.d(t, "a", t);
    return t;
   };
   n.o = function(e, t) {
    return Object.prototype.hasOwnProperty.call(e, t);
   };
   n.p = "";
   return n(n.s = 3);
  }([ function(e, t, n) {
   var r = n(2).mergeOpts;
   var i = n(1);
   var a = i.lineBreak;
   var o = i.allLineBreaks;
   function s(e) {
    return e.replace(/^\s+/g, "");
   }
   function c(e) {
    return e.replace(/\s+$/g, "");
   }
   function u(e, t, n, i) {
    e = e || "";
    var u, l, f, d, p, m, _, g, h, v, y, b, x, k, S, w, C, D, T, E, N;
    t = t || {};
    t = r(t, "html");
    if ((t.wrap_line_length === undefined || parseInt(t.wrap_line_length, 10) === 0) && (t.max_char !== undefined && parseInt(t.max_char, 10) !== 0)) {
     t.wrap_line_length = t.max_char;
    }
    l = t.indent_inner_html === undefined ? false : t.indent_inner_html;
    f = t.indent_body_inner_html === undefined ? true : t.indent_body_inner_html;
    d = t.indent_head_inner_html === undefined ? true : t.indent_head_inner_html;
    p = t.indent_size === undefined ? 4 : parseInt(t.indent_size, 10);
    m = t.indent_char === undefined ? " " : t.indent_char;
    g = t.brace_style === undefined ? "collapse" : t.brace_style;
    _ = parseInt(t.wrap_line_length, 10) === 0 ? 32786 : parseInt(t.wrap_line_length || 250, 10);
    h = t.unformatted || [ "a", "abbr", "area", "audio", "b", "bdi", "bdo", "br", "button", "canvas", "cite", "code", "data", "datalist", "del", "dfn", "em", "embed", "i", "iframe", "img", "input", "ins", "kbd", "keygen", "label", "map", "mark", "math", "meter", "noscript", "object", "output", "progress", "q", "ruby", "s", "samp", "select", "small", "span", "strong", "sub", "sup", "svg", "template", "textarea", "time", "u", "var", "video", "wbr", "text", "acronym", "address", "big", "dt", "ins", "strike", "tt" ];
    v = t.content_unformatted || [ "pre" ];
    y = t.preserve_newlines === undefined ? true : t.preserve_newlines;
    b = y ? isNaN(parseInt(t.max_preserve_newlines, 10)) ? 32786 : parseInt(t.max_preserve_newlines, 10) : 0;
    x = t.indent_handlebars === undefined ? false : t.indent_handlebars;
    k = t.wrap_attributes === undefined ? "auto" : t.wrap_attributes;
    S = isNaN(parseInt(t.wrap_attributes_indent_size, 10)) ? p : parseInt(t.wrap_attributes_indent_size, 10);
    w = k.substr(0, "force".length) === "force";
    C = k === "force-expand-multiline";
    D = k === "force-aligned";
    T = t.end_with_newline === undefined ? false : t.end_with_newline;
    E = typeof t.extra_liners === "object" && t.extra_liners ? t.extra_liners.concat() : typeof t.extra_liners === "string" ? t.extra_liners.split(",") : "head,body,/html".split(",");
    N = t.eol ? t.eol : "auto";
    if (t.indent_with_tabs) {
     m = "\t";
     p = 1;
    }
    if (N === "auto") {
     N = "\n";
     if (e && a.test(e || "")) {
      N = e.match(a)[0];
     }
    }
    N = N.replace(/\\r/, "\r").replace(/\\n/, "\n");
    e = e.replace(o, "\n");
    function A() {
     this.pos = 0;
     this.token = "";
     this.current_mode = "CONTENT";
     this.tags = {
      parent: "parent1",
      parentcount: 1,
      parent1: ""
     };
     this.tag_type = "";
     this.token_text = this.last_token = this.last_text = this.token_type = "";
     this.newlines = 0;
     this.indent_content = l;
     this.indent_body_inner_html = f;
     this.indent_head_inner_html = d;
     this.Utils = {
      whitespace: "\n\r\t ".split(""),
      single_token: t.void_elements || [ "area", "base", "br", "col", "embed", "hr", "img", "input", "keygen", "link", "menuitem", "meta", "param", "source", "track", "wbr", "!doctype", "?xml", "?php", "?=", "basefont", "isindex" ],
      extra_liners: E,
      in_array: function(e, t) {
       for (var n = 0; n < t.length; n++) {
        if (e === t[n]) {
         return true;
        }
       }
       return false;
      }
     };
     this.is_whitespace = function(e) {
      for (var t = 0; t < e.length; t++) {
       if (!this.Utils.in_array(e.charAt(t), this.Utils.whitespace)) {
        return false;
       }
      }
      return true;
     };
     this.traverse_whitespace = function() {
      var e = "";
      e = this.input.charAt(this.pos);
      if (this.Utils.in_array(e, this.Utils.whitespace)) {
       this.newlines = 0;
       while (this.Utils.in_array(e, this.Utils.whitespace)) {
        if (y && e === "\n" && this.newlines <= b) {
         this.newlines += 1;
        }
        this.pos++;
        e = this.input.charAt(this.pos);
       }
       return true;
      }
      return false;
     };
     this.space_or_wrap = function(e) {
      if (this.line_char_count >= this.wrap_line_length) {
       this.print_newline(false, e);
       this.print_indentation(e);
       return true;
      } else {
       this.line_char_count++;
       e.push(" ");
       return false;
      }
     };
     this.get_content = function() {
      var e = "", t = [], n = 0;
      while (this.input.charAt(this.pos) !== "<" || n === 2) {
       if (this.pos >= this.input.length) {
        return t.length ? t.join("") : [ "", "TK_EOF" ];
       }
       if (n < 2 && this.traverse_whitespace()) {
        this.space_or_wrap(t);
        continue;
       }
       e = this.input.charAt(this.pos);
       if (x) {
        if (e === "{") {
         n += 1;
        } else if (n < 2) {
         n = 0;
        }
        if (e === "}" && n > 0) {
         if (n-- === 0) {
          break;
         }
        }
        var r = this.input.substr(this.pos, 3);
        if (r === "{{#" || r === "{{/") {
         break;
        } else if (r === "{{!") {
         return [ this.get_tag(), "TK_TAG_HANDLEBARS_COMMENT" ];
        } else if (this.input.substr(this.pos, 2) === "{{") {
         if (this.get_tag(true) === "{{else}}") {
          break;
         }
        }
       }
       this.pos++;
       this.line_char_count++;
       t.push(e);
      }
      return t.length ? t.join("") : "";
     };
     this.get_contents_to = function(e) {
      if (this.pos === this.input.length) {
       return [ "", "TK_EOF" ];
      }
      var t = "";
      var n = new RegExp("</" + e + "\\s*>", "igm");
      n.lastIndex = this.pos;
      var r = n.exec(this.input);
      var i = r ? r.index : this.input.length;
      if (this.pos < i) {
       t = this.input.substring(this.pos, i);
       this.pos = i;
      }
      return t;
     };
     this.record_tag = function(e) {
      if (this.tags[e + "count"]) {
       this.tags[e + "count"]++;
       this.tags[e + this.tags[e + "count"]] = this.indent_level;
      } else {
       this.tags[e + "count"] = 1;
       this.tags[e + this.tags[e + "count"]] = this.indent_level;
      }
      this.tags[e + this.tags[e + "count"] + "parent"] = this.tags.parent;
      this.tags.parent = e + this.tags[e + "count"];
     };
     this.retrieve_tag = function(e) {
      if (this.tags[e + "count"]) {
       var t = this.tags.parent;
       while (t) {
        if (e + this.tags[e + "count"] === t) {
         break;
        }
        t = this.tags[t + "parent"];
       }
       if (t) {
        this.indent_level = this.tags[e + this.tags[e + "count"]];
        this.tags.parent = this.tags[t + "parent"];
       }
       delete this.tags[e + this.tags[e + "count"] + "parent"];
       delete this.tags[e + this.tags[e + "count"]];
       if (this.tags[e + "count"] === 1) {
        delete this.tags[e + "count"];
       } else {
        this.tags[e + "count"]--;
       }
      }
     };
     this.indent_to_tag = function(e) {
      if (!this.tags[e + "count"]) {
       return;
      }
      var t = this.tags.parent;
      while (t) {
       if (e + this.tags[e + "count"] === t) {
        break;
       }
       t = this.tags[t + "parent"];
      }
      if (t) {
       this.indent_level = this.tags[e + this.tags[e + "count"]];
      }
     };
     this.get_tag = function(e) {
      var t = "", n = [], r = "", i = false, a = true, o = false, s, c, u, l = this.pos, f = this.line_char_count, d = false, p;
      e = e !== undefined ? e : false;
      do {
       if (this.pos >= this.input.length) {
        if (e) {
         this.pos = l;
         this.line_char_count = f;
        }
        return n.length ? n.join("") : [ "", "TK_EOF" ];
       }
       t = this.input.charAt(this.pos);
       this.pos++;
       if (this.Utils.in_array(t, this.Utils.whitespace)) {
        i = true;
        continue;
       }
       if (t === "'" || t === '"') {
        t += this.get_unformatted(t);
        i = true;
       }
       if (t === "=") {
        i = false;
       }
       p = this.input.substr(this.pos - 1);
       if (C && o && !d && (t === ">" || t === "/")) {
        if (p.match(/^\/?\s*>/)) {
         i = false;
         d = true;
         this.print_newline(false, n);
         this.print_indentation(n);
        }
       }
       if (n.length && n[n.length - 1] !== "=" && t !== ">" && i) {
        var m = this.space_or_wrap(n);
        var _ = m && t !== "/" && !w;
        i = false;
        if (w && t !== "/") {
         var g = false;
         if (C && a) {
          var y = p.match(/^\S*(="([^"]|\\")*")?\s*\/?\s*>/) !== null;
          g = !y;
         }
         if (!a || g) {
          this.print_newline(false, n);
          this.print_indentation(n);
          _ = true;
         }
        }
        if (_) {
         o = true;
         var b = S;
         if (D) {
          b = n.indexOf(" ") + 1;
         }
         for (var k = 0; k < b; k++) {
          n.push(" ");
         }
        }
        if (a) {
         for (var T = 0; T < n.length; T++) {
          if (n[T] === " ") {
           a = false;
           break;
          }
         }
        }
       }
       if (x && u === "<") {
        if (t + this.input.charAt(this.pos) === "{{") {
         t += this.get_unformatted("}}");
         if (n.length && n[n.length - 1] !== " " && n[n.length - 1] !== "<") {
          t = " " + t;
         }
         i = true;
        }
       }
       if (t === "<" && !u) {
        s = this.pos - 1;
        u = "<";
       }
       if (x && !u) {
        if (n.length >= 2 && n[n.length - 1] === "{" && n[n.length - 2] === "{") {
         if (t === "#" || t === "/" || t === "!") {
          s = this.pos - 3;
         } else {
          s = this.pos - 2;
         }
         u = "{";
        }
       }
       this.line_char_count++;
       n.push(t);
       if (n[1] && (n[1] === "!" || n[1] === "?" || n[1] === "%")) {
        n = [ this.get_comment(s) ];
        break;
       }
       if (x && n[1] && n[1] === "{" && n[2] && n[2] === "!") {
        n = [ this.get_comment(s) ];
        break;
       }
       if (x && u === "{" && n.length > 2 && n[n.length - 2] === "}" && n[n.length - 1] === "}") {
        break;
       }
      } while (t !== ">");
      var E = n.join("");
      var N;
      var A;
      if (E.search(/\s/) !== -1) {
       N = E.search(/\s/);
      } else if (E.charAt(0) === "{") {
       N = E.indexOf("}");
      } else {
       N = E.indexOf(">");
      }
      if (E.charAt(0) === "<" || !x) {
       A = 1;
      } else {
       A = E.charAt(2) === "#" ? 3 : 2;
      }
      var F = E.substring(A, N).toLowerCase();
      if (E.charAt(E.length - 2) === "/" || this.Utils.in_array(F, this.Utils.single_token)) {
       if (!e) {
        this.tag_type = "SINGLE";
       }
      } else if (x && E.charAt(0) === "{" && F === "else") {
       if (!e) {
        this.indent_to_tag("if");
        this.tag_type = "HANDLEBARS_ELSE";
        this.indent_content = true;
        this.traverse_whitespace();
       }
      } else if (this.is_unformatted(F, h) || this.is_unformatted(F, v)) {
       r = this.get_unformatted("</" + F + ">", E);
       n.push(r);
       c = this.pos - 1;
       this.tag_type = "SINGLE";
      } else if (F === "script" && (E.search("type") === -1 || E.search("type") > -1 && E.search(/\b(text|application|dojo)\/(x-)?(javascript|ecmascript|jscript|livescript|(ld\+)?json|method|aspect)/) > -1)) {
       if (!e) {
        this.record_tag(F);
        this.tag_type = "SCRIPT";
       }
      } else if (F === "style" && (E.search("type") === -1 || E.search("type") > -1 && E.search("text/css") > -1)) {
       if (!e) {
        this.record_tag(F);
        this.tag_type = "STYLE";
       }
      } else if (F.charAt(0) === "!") {
       if (!e) {
        this.tag_type = "SINGLE";
        this.traverse_whitespace();
       }
      } else if (!e) {
       if (F.charAt(0) === "/") {
        this.retrieve_tag(F.substring(1));
        this.tag_type = "END";
       } else {
        this.record_tag(F);
        if (F.toLowerCase() !== "html") {
         this.indent_content = true;
        }
        this.tag_type = "START";
       }
       if (this.traverse_whitespace()) {
        this.space_or_wrap(n);
       }
       if (this.Utils.in_array(F, this.Utils.extra_liners)) {
        this.print_newline(false, this.output);
        if (this.output.length && this.output[this.output.length - 2] !== "\n") {
         this.print_newline(true, this.output);
        }
       }
      }
      if (e) {
       this.pos = l;
       this.line_char_count = f;
      }
      return n.join("");
     };
     this.get_comment = function(e) {
      var t = "", n = ">", r = false;
      this.pos = e;
      var i = this.input.charAt(this.pos);
      this.pos++;
      while (this.pos <= this.input.length) {
       t += i;
       if (t.charAt(t.length - 1) === n.charAt(n.length - 1) && t.indexOf(n) !== -1) {
        break;
       }
       if (!r && t.length < 10) {
        if (t.indexOf("<![if") === 0) {
         n = "<![endif]>";
         r = true;
        } else if (t.indexOf("<![cdata[") === 0) {
         n = "]]>";
         r = true;
        } else if (t.indexOf("<![") === 0) {
         n = "]>";
         r = true;
        } else if (t.indexOf("\x3c!--") === 0) {
         n = "--\x3e";
         r = true;
        } else if (t.indexOf("{{!--") === 0) {
         n = "--}}";
         r = true;
        } else if (t.indexOf("{{!") === 0) {
         if (t.length === 5 && t.indexOf("{{!--") === -1) {
          n = "}}";
          r = true;
         }
        } else if (t.indexOf("<?") === 0) {
         n = "?>";
         r = true;
        } else if (t.indexOf("<%") === 0) {
         n = "%>";
         r = true;
        }
       }
       i = this.input.charAt(this.pos);
       this.pos++;
      }
      return t;
     };
     function e(e) {
      var t = "";
      var n = function(n) {
       var r = t + n.toLowerCase();
       t = r.length <= e.length ? r : r.substr(r.length - e.length, e.length);
      };
      var r = function() {
       return t.indexOf(e) === -1;
      };
      return {
       add: n,
       doesNotMatch: r
      };
     }
     this.get_unformatted = function(t, n) {
      if (n && n.toLowerCase().indexOf(t) !== -1) {
       return "";
      }
      var r = "";
      var i = "";
      var a = true;
      var o = e(t);
      do {
       if (this.pos >= this.input.length) {
        return i;
       }
       r = this.input.charAt(this.pos);
       this.pos++;
       if (this.Utils.in_array(r, this.Utils.whitespace)) {
        if (!a) {
         this.line_char_count--;
         continue;
        }
        if (r === "\n" || r === "\r") {
         i += "\n";
         this.line_char_count = 0;
         continue;
        }
       }
       i += r;
       o.add(r);
       this.line_char_count++;
       a = true;
       if (x && r === "{" && i.length && i.charAt(i.length - 2) === "{") {
        i += this.get_unformatted("}}");
       }
      } while (o.doesNotMatch());
      return i;
     };
     this.get_token = function() {
      var e;
      if (this.last_token === "TK_TAG_SCRIPT" || this.last_token === "TK_TAG_STYLE") {
       var t = this.last_token.substr(7);
       e = this.get_contents_to(t);
       if (typeof e !== "string") {
        return e;
       }
       return [ e, "TK_" + t ];
      }
      if (this.current_mode === "CONTENT") {
       e = this.get_content();
       if (typeof e !== "string") {
        return e;
       } else {
        return [ e, "TK_CONTENT" ];
       }
      }
      if (this.current_mode === "TAG") {
       e = this.get_tag();
       if (typeof e !== "string") {
        return e;
       } else {
        var n = "TK_TAG_" + this.tag_type;
        return [ e, n ];
       }
      }
     };
     this.get_full_indent = function(e) {
      e = this.indent_level + e || 0;
      if (e < 1) {
       return "";
      }
      return Array(e + 1).join(this.indent_string);
     };
     this.is_unformatted = function(e, t) {
      if (!this.Utils.in_array(e, t)) {
       return false;
      }
      if (e.toLowerCase() !== "a" || !this.Utils.in_array("a", t)) {
       return true;
      }
      var n = this.get_tag(true);
      n = n || "";
      if (typeof n !== "string") {
       n = n[0];
      }
      var r = (n || "").match(/^\s*<\s*\/?([a-z]*)\s*[^>]*>\s*$/);
      if (!r || this.Utils.in_array(r[1], t)) {
       return true;
      } else {
       return false;
      }
     };
     this.printer = function(e, t, n, r, i) {
      this.input = e || "";
      this.input = this.input.replace(/\r\n|[\r\u2028\u2029]/g, "\n");
      this.output = [];
      this.indent_character = t;
      this.indent_string = "";
      this.indent_size = n;
      this.brace_style = i;
      this.indent_level = 0;
      this.wrap_line_length = r;
      this.line_char_count = 0;
      for (var a = 0; a < this.indent_size; a++) {
       this.indent_string += this.indent_character;
      }
      this.print_newline = function(e, t) {
       this.line_char_count = 0;
       if (!t || !t.length) {
        return;
       }
       if (e || t[t.length - 1] !== "\n") {
        if (t[t.length - 1] !== "\n") {
         t[t.length - 1] = c(t[t.length - 1]);
        }
        t.push("\n");
       }
      };
      this.print_indentation = function(e) {
       for (var t = 0; t < this.indent_level; t++) {
        e.push(this.indent_string);
        this.line_char_count += this.indent_string.length;
       }
      };
      this.print_token = function(e) {
       if (this.is_whitespace(e) && !this.output.length) {
        return;
       }
       if (e || e !== "") {
        if (this.output.length && this.output[this.output.length - 1] === "\n") {
         this.print_indentation(this.output);
         e = s(e);
        }
       }
       this.print_token_raw(e);
      };
      this.print_token_raw = function(e) {
       if (this.newlines > 0) {
        e = c(e);
       }
       if (e && e !== "") {
        if (e.length > 1 && e.charAt(e.length - 1) === "\n") {
         this.output.push(e.slice(0, -1));
         this.print_newline(false, this.output);
        } else {
         this.output.push(e);
        }
       }
       for (var t = 0; t < this.newlines; t++) {
        this.print_newline(t > 0, this.output);
       }
       this.newlines = 0;
      };
      this.indent = function() {
       this.indent_level++;
      };
      this.unindent = function() {
       if (this.indent_level > 0) {
        this.indent_level--;
       }
      };
     };
     return this;
    }
    this.beautify = function() {
     u = new A();
     u.printer(e, m, p, _, g);
     while (true) {
      var r = u.get_token();
      u.token_text = r[0];
      u.token_type = r[1];
      if (u.token_type === "TK_EOF") {
       break;
      }
      switch (u.token_type) {
      case "TK_TAG_START":
       u.print_newline(false, u.output);
       u.print_token(u.token_text);
       if (u.indent_content) {
        if ((u.indent_body_inner_html || !u.token_text.match(/<body(?:.*)>/)) && (u.indent_head_inner_html || !u.token_text.match(/<head(?:.*)>/))) {
         u.indent();
        }
        u.indent_content = false;
       }
       u.current_mode = "CONTENT";
       break;

      case "TK_TAG_STYLE":
      case "TK_TAG_SCRIPT":
       u.print_newline(false, u.output);
       u.print_token(u.token_text);
       u.current_mode = "CONTENT";
       break;

      case "TK_TAG_END":
       if (u.last_token === "TK_CONTENT" && u.last_text === "") {
        var a = (u.token_text.match(/\w+/) || [])[0];
        var o = null;
        if (u.output.length) {
         o = u.output[u.output.length - 1].match(/(?:<|{{#)\s*(\w+)/);
        }
        if (o === null || o[1] !== a && !u.Utils.in_array(o[1], h)) {
         u.print_newline(false, u.output);
        }
       }
       u.print_token(u.token_text);
       u.current_mode = "CONTENT";
       break;

      case "TK_TAG_SINGLE":
       var s = u.token_text.match(/^\s*<([a-z-]+)/i);
       if (!s || !u.Utils.in_array(s[1], h)) {
        u.print_newline(false, u.output);
       }
       u.print_token(u.token_text);
       u.current_mode = "CONTENT";
       break;

      case "TK_TAG_HANDLEBARS_ELSE":
       var c = false;
       for (var l = u.output.length - 1; l >= 0; l--) {
        if (u.output[l] === "\n") {
         break;
        } else {
         if (u.output[l].match(/{{#if/)) {
          c = true;
          break;
         }
        }
       }
       if (!c) {
        u.print_newline(false, u.output);
       }
       u.print_token(u.token_text);
       if (u.indent_content) {
        u.indent();
        u.indent_content = false;
       }
       u.current_mode = "CONTENT";
       break;

      case "TK_TAG_HANDLEBARS_COMMENT":
       u.print_token(u.token_text);
       u.current_mode = "TAG";
       break;

      case "TK_CONTENT":
       u.print_token(u.token_text);
       u.current_mode = "TAG";
       break;

      case "TK_STYLE":
      case "TK_SCRIPT":
       if (u.token_text !== "") {
        u.print_newline(false, u.output);
        var f = u.token_text, d, v = 1;
        if (u.token_type === "TK_SCRIPT") {
         d = typeof n === "function" && n;
        } else if (u.token_type === "TK_STYLE") {
         d = typeof i === "function" && i;
        }
        if (t.indent_scripts === "keep") {
         v = 0;
        } else if (t.indent_scripts === "separate") {
         v = -u.indent_level;
        }
        var y = u.get_full_indent(v);
        if (d) {
         var b = function() {
          this.eol = "\n";
         };
         b.prototype = t;
         var x = new b();
         f = d(f.replace(/^\s*/, y), x);
        } else {
         var k = f.match(/^\s*/)[0];
         var S = k.match(/[^\n\r]*$/)[0].split(u.indent_string).length - 1;
         var w = u.get_full_indent(v - S);
         f = f.replace(/^\s*/, y).replace(/\r\n|\r|\n/g, "\n" + w).replace(/\s+$/, "");
        }
        if (f) {
         u.print_token_raw(f);
         u.print_newline(true, u.output);
        }
       }
       u.current_mode = "TAG";
       break;

      default:
       if (u.token_text !== "") {
        u.print_token(u.token_text);
       }
       break;
      }
      u.last_token = u.token_type;
      u.last_text = u.token_text;
     }
     var C = u.output.join("").replace(/[\r\n\t ]+$/, "");
     if (T) {
      C += "\n";
     }
     if (N !== "\n") {
      C = C.replace(/[\n]/g, N);
     }
     return C;
    };
   }
   e.exports.Beautifier = u;
  }, function(e, t) {
   var n = /[\u1680\u180e\u2000-\u200a\u202f\u205f\u3000\ufeff]/;
   var r = "ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԧԱ-Ֆՙա-ևא-תװ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࢠࢢ-ࢬऄ-हऽॐक़-ॡॱ-ॷॹ-ॿঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-ళవ-హఽౘౙౠౡಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൠൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛰᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡷᢀ-ᢨᢪᢰ-ᣵᤀ-ᤜᥐ-ᥭᥰ-ᥴᦀ-ᦫᧁ-ᧇᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᳩ-ᳬᳮ-ᳱᳵᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⸯ々-〇〡-〩〱-〵〸-〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚗꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞓꞠ-Ɦꟸ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꪀ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ";
   var i = "̀-ͯ҃-֑҇-ׇֽֿׁׂׅׄؐ-ؚؠ-ىٲ-ۓۧ-ۨۻ-ۼܰ-݊ࠀ-ࠔࠛ-ࠣࠥ-ࠧࠩ-࠭ࡀ-ࡗࣤ-ࣾऀ-ःऺ-़ा-ॏ॑-ॗॢ-ॣ०-९ঁ-ঃ়া-ৄেৈৗয়-ৠਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢ-ૣ૦-૯ଁ-ଃ଼ା-ୄେୈୋ-୍ୖୗୟ-ୠ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఁ-ఃె-ైొ-్ౕౖౢ-ౣ౦-౯ಂಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢ-ೣ೦-೯ംഃെ-ൈൗൢ-ൣ൦-൯ංඃ්ා-ුූෘ-ෟෲෳิ-ฺเ-ๅ๐-๙ິ-ູ່-ໍ໐-໙༘༙༠-༩༹༵༷ཁ-ཇཱ-྄྆-྇ྍ-ྗྙ-ྼ࿆က-ဩ၀-၉ၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟ᜎ-ᜐᜠ-ᜰᝀ-ᝐᝲᝳក-ឲ៝០-៩᠋-᠍᠐-᠙ᤠ-ᤫᤰ-᤻ᥑ-ᥭᦰ-ᧀᧈ-ᧉ᧐-᧙ᨀ-ᨕᨠ-ᩓ᩠-᩿᩼-᪉᪐-᪙ᭆ-ᭋ᭐-᭙᭫-᭳᮰-᮹᯦-᯳ᰀ-ᰢ᱀-᱉ᱛ-ᱽ᳐-᳒ᴀ-ᶾḁ-ἕ‌‍‿⁀⁔⃐-⃥⃜⃡-⃰ⶁ-ⶖⷠ-ⷿ〡-〨゙゚Ꙁ-ꙭꙴ-꙽ꚟ꛰-꛱ꟸ-ꠀ꠆ꠋꠣ-ꠧꢀ-ꢁꢴ-꣄꣐-꣙ꣳ-ꣷ꤀-꤉ꤦ-꤭ꤰ-ꥅꦀ-ꦃ꦳-꧀ꨀ-ꨧꩀ-ꩁꩌ-ꩍ꩐-꩙ꩻꫠ-ꫩꫲ-ꫳꯀ-ꯡ꯬꯭꯰-꯹ﬠ-ﬨ︀-️︠-︦︳︴﹍-﹏０-９＿";
   var a = new RegExp("[" + r + "]");
   var o = new RegExp("[" + r + i + "]");
   t.newline = /[\n\r\u2028\u2029]/;
   t.lineBreak = new RegExp("\r\n|" + t.newline.source);
   t.allLineBreaks = new RegExp(t.lineBreak.source, "g");
   t.isIdentifierStart = function(e) {
    if (e < 65) return e === 36 || e === 64;
    if (e < 91) return true;
    if (e < 97) return e === 95;
    if (e < 123) return true;
    return e >= 170 && a.test(String.fromCharCode(e));
   };
   t.isIdentifierChar = function(e) {
    if (e < 48) return e === 36;
    if (e < 58) return true;
    if (e < 65) return false;
    if (e < 91) return true;
    if (e < 97) return e === 95;
    if (e < 123) return true;
    return e >= 170 && o.test(String.fromCharCode(e));
   };
  }, function(e, t) {
   function n(e, t) {
    var n = {};
    var r;
    for (r in e) {
     if (r !== t) {
      n[r] = e[r];
     }
    }
    if (t in e) {
     for (r in e[t]) {
      n[r] = e[t][r];
     }
    }
    return n;
   }
   e.exports.mergeOpts = n;
  }, function(e, t, n) {
   var r = n(0).Beautifier;
   function i(e, t, n, i) {
    var a = new r(e, t, n, i);
    return a.beautify();
   }
   e.exports = i;
  } ]);
  function de(e, t) {
   return fe(e, t, ue, le);
  }
  function pe(e, t, n) {
   var r = e.getText();
   var i = true;
   var a = 0;
   var o = n.tabSize || 4;
   if (t) {
    var s = e.offsetAt(t.start);
    var c = s;
    while (c > 0 && ye(r, c - 1)) {
     c--;
    }
    if (c === 0 || ve(r, c - 1)) {
     s = c;
    } else {
     if (c < s) {
      s = c + 1;
     }
    }
    var u = e.offsetAt(t.end);
    var l = u;
    while (l < r.length && ye(r, l)) {
     l++;
    }
    if (l === r.length || ve(r, l)) {
     u = l;
    }
    t = Q["Range"].create(e.positionAt(s), e.positionAt(u));
    i = u === r.length;
    r = r.substring(s, u);
    if (s !== 0) {
     var f = e.offsetAt(Q["Position"].create(t.start.line, 0));
     a = ge(e.getText(), f, n);
    }
   } else {
    t = Q["Range"].create(Q["Position"].create(0, 0), e.positionAt(r.length));
   }
   var d = {
    indent_size: n.insertSpaces ? o : 1,
    indent_char: n.insertSpaces ? " " : "\t",
    wrap_line_length: me(n, "wrapLineLength", 120),
    unformatted: _e(n, "unformatted", void 0),
    content_unformatted: _e(n, "contentUnformatted", void 0),
    indent_inner_html: me(n, "indentInnerHtml", false),
    preserve_newlines: me(n, "preserveNewLines", true),
    max_preserve_newlines: me(n, "maxPreserveNewLines", 32786),
    indent_handlebars: me(n, "indentHandlebars", false),
    end_with_newline: i && me(n, "endWithNewline", false),
    extra_liners: _e(n, "extraLiners", void 0),
    wrap_attributes: me(n, "wrapAttributes", "auto"),
    eol: "\n"
   };
   var p = de(r, d);
   if (a > 0) {
    var m = n.insertSpaces ? D(" ", o * a) : D("\t", a);
    p = p.split("\n").join("\n" + m);
    if (t.start.character === 0) {
     p = m + p;
    }
   }
   return [ {
    range: t,
    newText: p
   } ];
  }
  function me(e, t, n) {
   if (e && e.hasOwnProperty(t)) {
    var r = e[t];
    if (r !== null) {
     return r;
    }
   }
   return n;
  }
  function _e(e, t, n) {
   var r = me(e, t, null);
   if (typeof r === "string") {
    if (r.length > 0) {
     return r.split(",").map(function(e) {
      return e.trim().toLowerCase();
     });
    }
    return [];
   }
   return n;
  }
  function ge(e, t, n) {
   var r = t;
   var i = 0;
   var a = n.tabSize || 4;
   while (r < e.length) {
    var o = e.charAt(r);
    if (o === " ") {
     i++;
    } else if (o === "\t") {
     i += a;
    } else {
     break;
    }
    r++;
   }
   return Math.floor(i / a);
  }
  function he(e) {
   var t = e.getText();
   if (e.lineCount > 1) {
    var n = e.offsetAt(Q["Position"].create(1, 0));
    var r = n;
    while (r > 0 && ve(t, r - 1)) {
     r--;
    }
    return t.substr(r, n - r);
   }
   return "\n";
  }
  function ve(e, t) {
   return "\r\n".indexOf(e.charAt(t)) !== -1;
  }
  function ye(e, t) {
   return " \t".indexOf(e.charAt(t)) !== -1;
  }
  var be = n("hde3");
  function xe(e, t) {
   var n = e[0];
   var r = e[e.length - 1];
   if (n === r && (n === "'" || n === '"')) {
    e = e.substr(1, e.length - 2);
   }
   if (t === "razor" && e[0] === "~") {
    e = e.substr(1);
   }
   return e;
  }
  function ke(e, t) {
   if (!e.length) {
    return false;
   }
   if (t === "handlebars" && /{{.*}}/.test(e)) {
    return false;
   }
   if (t === "razor" && /@/.test(e)) {
    return false;
   }
   try {
    return !!be["default"].parse(e);
   } catch (e) {
    return false;
   }
  }
  function Se(e, t, n, r) {
   if (/^\s*javascript\:/i.test(t) || /^\s*\#/i.test(t) || /[\n\r]/.test(t)) {
    return null;
   }
   t = t.replace(/^\s*/g, "");
   if (/^https?:\/\//i.test(t) || /^file:\/\//i.test(t)) {
    return t;
   }
   if (/^\/\//i.test(t)) {
    var i = S(e, "https://") ? "https" : "http";
    return i + ":" + t.replace(/^\s*/g, "");
   }
   if (n) {
    return n.resolveReference(t, r || e);
   }
   return t;
  }
  function we(e, t, n, r, i, a) {
   var o = xe(n, e.languageId);
   if (!ke(o, e.languageId)) {
    return null;
   }
   if (o.length < n.length) {
    r++;
    i--;
   }
   var s = Se(e.uri, o, t, a);
   if (!s || !Ce(s)) {
    return null;
   }
   return {
    range: Q["Range"].create(e.positionAt(r), e.positionAt(i)),
    target: s
   };
  }
  function Ce(e) {
   try {
    be["default"].parse(e);
    return true;
   } catch (e) {
    return false;
   }
  }
  function De(e, t) {
   var n = [];
   var r = null;
   var i = b(e.getText(), 0);
   var a = i.scan();
   var o = false;
   var s = false;
   var c = void 0;
   while (a !== W.EOS) {
    switch (a) {
    case W.StartTag:
     if (!c) {
      var u = i.getTokenText().toLowerCase();
      s = u === "base";
     }
     break;

    case W.AttributeName:
     var l = i.getTokenText().toLowerCase();
     o = l === "src" || l === "href";
     break;

    case W.AttributeValue:
     if (o) {
      var f = i.getTokenText();
      if (!s) {
       var d = we(e, t, f, i.getTokenOffset(), i.getTokenEnd(), c);
       if (d) {
        n.push(d);
       }
      }
      if (s && typeof c === "undefined") {
       c = xe(f, e.languageId);
       if (c && t) {
        c = t.resolveReference(c, e.uri);
       }
      }
      s = false;
      o = false;
     }
     break;
    }
    a = i.scan();
   }
   return n;
  }
  function Te(e, t, n) {
   var r = e.offsetAt(t);
   var i = n.findNodeAt(r);
   if (!i.tag) {
    return [];
   }
   var a = [];
   var o = Ae(W.StartTag, e, i.start);
   var s = typeof i.endTagStart === "number" && Ae(W.EndTag, e, i.endTagStart);
   if (o && Ne(o, t) || s && Ne(s, t)) {
    if (o) {
     a.push({
      kind: Q["DocumentHighlightKind"].Read,
      range: o
     });
    }
    if (s) {
     a.push({
      kind: Q["DocumentHighlightKind"].Read,
      range: s
     });
    }
   }
   return a;
  }
  function Ee(e, t) {
   return e.line < t.line || e.line === t.line && e.character <= t.character;
  }
  function Ne(e, t) {
   return Ee(e.start, t) && Ee(t, e.end);
  }
  function Ae(e, t, n) {
   var r = b(t.getText(), n);
   var i = r.scan();
   while (i !== W.EOS && i !== e) {
    i = r.scan();
   }
   if (i !== W.EOS) {
    return {
     start: t.positionAt(r.getTokenOffset()),
     end: t.positionAt(r.getTokenEnd())
    };
   }
   return null;
  }
  function Fe(e, t) {
   var n = [];
   t.roots.forEach(function(t) {
    Pe(e, t, "", n);
   });
   return n;
  }
  function Pe(e, t, n, r) {
   var i = Ie(t);
   var a = Q["Location"].create(e.uri, Q["Range"].create(e.positionAt(t.start), e.positionAt(t.end)));
   var o = {
    name: i,
    location: a,
    containerName: n,
    kind: Q["SymbolKind"].Field
   };
   r.push(o);
   t.children.forEach(function(t) {
    Pe(e, t, i, r);
   });
  }
  function Ie(e) {
   var t = e.tag;
   if (e.attributes) {
    var n = e.attributes["id"];
    var r = e.attributes["class"];
    if (n) {
     t += "#" + n.replace(/[\"\']/g, "");
    }
    if (r) {
     t += r.replace(/[\"\']/g, "").split(/\s+/).map(function(e) {
      return "." + e;
     }).join("");
    }
   }
   return t || "?";
  }
  function Oe(e, t) {
   e = e.sort(function(e, t) {
    var n = e.startLine - t.startLine;
    if (n === 0) {
     n = e.endLine - t.endLine;
    }
    return n;
   });
   var n = void 0;
   var r = [];
   var i = [];
   var a = [];
   var o = function(e, t) {
    i[e] = t;
    if (t < 30) {
     a[t] = (a[t] || 0) + 1;
    }
   };
   for (var s = 0; s < e.length; s++) {
    var c = e[s];
    if (!n) {
     n = c;
     o(s, 0);
    } else {
     if (c.startLine > n.startLine) {
      if (c.endLine <= n.endLine) {
       r.push(n);
       n = c;
       o(s, r.length);
      } else if (c.startLine > n.endLine) {
       do {
        n = r.pop();
       } while (n && c.startLine > n.endLine);
       if (n) {
        r.push(n);
       }
       n = c;
       o(s, r.length);
      }
     }
    }
   }
   var u = 0;
   var l = 0;
   for (var s = 0; s < a.length; s++) {
    var f = a[s];
    if (f) {
     if (f + u > t) {
      l = s;
      break;
     }
     u += f;
    }
   }
   var d = [];
   for (var s = 0; s < e.length; s++) {
    var p = i[s];
    if (typeof p === "number") {
     if (p < l || p === l && u++ < t) {
      d.push(e[s]);
     }
    }
   }
   return d;
  }
  function Me(e, t) {
   var n = b(e.getText());
   var r = n.scan();
   var i = [];
   var a = [];
   var o = null;
   var s = -1;
   function c(e) {
    i.push(e);
    s = e.startLine;
   }
   while (r !== W.EOS) {
    switch (r) {
    case W.StartTag:
     {
      var u = n.getTokenText();
      var l = e.positionAt(n.getTokenOffset()).line;
      a.push({
       startLine: l,
       tagName: u
      });
      o = u;
      break;
     }

    case W.EndTag:
     {
      o = n.getTokenText();
      break;
     }

    case W.StartTagClose:
     if (!o || !L(o)) {
      break;
     }

    case W.EndTagClose:
    case W.StartTagSelfClose:
     {
      var f = a.length - 1;
      while (f >= 0 && a[f].tagName !== o) {
       f--;
      }
      if (f >= 0) {
       var d = a[f];
       a.length = f;
       var p = e.positionAt(n.getTokenOffset()).line;
       var l = d.startLine;
       var m = p - 1;
       if (m > l && s !== l) {
        c({
         startLine: l,
         endLine: m
        });
       }
      }
      break;
     }

    case W.Comment:
     {
      var l = e.positionAt(n.getTokenOffset()).line;
      var _ = n.getTokenText();
      var g = _.match(/^\s*#(region\b)|(endregion\b)/);
      if (g) {
       if (g[1]) {
        a.push({
         startLine: l,
         tagName: ""
        });
       } else {
        var f = a.length - 1;
        while (f >= 0 && a[f].tagName.length) {
         f--;
        }
        if (f >= 0) {
         var d = a[f];
         a.length = f;
         var m = l;
         l = d.startLine;
         if (m > l && s !== l) {
          c({
           startLine: l,
           endLine: m,
           kind: G.Region
          });
         }
        }
       }
      } else {
       var m = e.positionAt(n.getTokenOffset() + n.getTokenLength()).line;
       if (l < m) {
        c({
         startLine: l,
         endLine: m,
         kind: G.Comment
        });
       }
      }
      break;
     }
    }
    r = n.scan();
   }
   var h = t && t.rangeLimit || Number.MAX_VALUE;
   if (i.length > h) {
    i = Oe(i, h);
   }
   return i;
  }
  n.d(t, "getLanguageService", function() {
   return Le;
  });
  n.d(t, "TokenType", function() {
   return W;
  });
  n.d(t, "ScannerState", function() {
   return H;
  });
  n.d(t, "FoldingRangeKind", function() {
   return G;
  });
  n.d(t, "Position", function() {
   return Q["Position"];
  });
  n.d(t, "Range", function() {
   return Q["Range"];
  });
  n.d(t, "Location", function() {
   return Q["Location"];
  });
  n.d(t, "DiagnosticRelatedInformation", function() {
   return Q["DiagnosticRelatedInformation"];
  });
  n.d(t, "DiagnosticSeverity", function() {
   return Q["DiagnosticSeverity"];
  });
  n.d(t, "Diagnostic", function() {
   return Q["Diagnostic"];
  });
  n.d(t, "Command", function() {
   return Q["Command"];
  });
  n.d(t, "TextEdit", function() {
   return Q["TextEdit"];
  });
  n.d(t, "TextDocumentEdit", function() {
   return Q["TextDocumentEdit"];
  });
  n.d(t, "WorkspaceEdit", function() {
   return Q["WorkspaceEdit"];
  });
  n.d(t, "WorkspaceChange", function() {
   return Q["WorkspaceChange"];
  });
  n.d(t, "TextDocumentIdentifier", function() {
   return Q["TextDocumentIdentifier"];
  });
  n.d(t, "VersionedTextDocumentIdentifier", function() {
   return Q["VersionedTextDocumentIdentifier"];
  });
  n.d(t, "TextDocumentItem", function() {
   return Q["TextDocumentItem"];
  });
  n.d(t, "MarkupKind", function() {
   return Q["MarkupKind"];
  });
  n.d(t, "MarkupContent", function() {
   return Q["MarkupContent"];
  });
  n.d(t, "CompletionItemKind", function() {
   return Q["CompletionItemKind"];
  });
  n.d(t, "InsertTextFormat", function() {
   return Q["InsertTextFormat"];
  });
  n.d(t, "CompletionItem", function() {
   return Q["CompletionItem"];
  });
  n.d(t, "CompletionList", function() {
   return Q["CompletionList"];
  });
  n.d(t, "MarkedString", function() {
   return Q["MarkedString"];
  });
  n.d(t, "Hover", function() {
   return Q["Hover"];
  });
  n.d(t, "ParameterInformation", function() {
   return Q["ParameterInformation"];
  });
  n.d(t, "SignatureInformation", function() {
   return Q["SignatureInformation"];
  });
  n.d(t, "DocumentHighlightKind", function() {
   return Q["DocumentHighlightKind"];
  });
  n.d(t, "DocumentHighlight", function() {
   return Q["DocumentHighlight"];
  });
  n.d(t, "SymbolKind", function() {
   return Q["SymbolKind"];
  });
  n.d(t, "SymbolInformation", function() {
   return Q["SymbolInformation"];
  });
  n.d(t, "CodeActionKind", function() {
   return Q["CodeActionKind"];
  });
  n.d(t, "CodeActionContext", function() {
   return Q["CodeActionContext"];
  });
  n.d(t, "CodeAction", function() {
   return Q["CodeAction"];
  });
  n.d(t, "CodeLens", function() {
   return Q["CodeLens"];
  });
  n.d(t, "FormattingOptions", function() {
   return Q["FormattingOptions"];
  });
  n.d(t, "DocumentLink", function() {
   return Q["DocumentLink"];
  });
  n.d(t, "EOL", function() {
   return Q["EOL"];
  });
  n.d(t, "TextDocument", function() {
   return Q["TextDocument"];
  });
  n.d(t, "TextDocumentSaveReason", function() {
   return Q["TextDocumentSaveReason"];
  });
  function Le() {
   var e = new ne();
   return {
    createScanner: b,
    parseHTMLDocument: function(e) {
     return X(e.getText());
    },
    doComplete: e.doComplete.bind(e),
    setCompletionParticipants: e.setCompletionParticipants.bind(e),
    doHover: ce,
    format: pe,
    findDocumentHighlights: Te,
    findDocumentLinks: De,
    findDocumentSymbols: Fe,
    getFoldingRanges: Me,
    doTagComplete: e.doTagComplete.bind(e)
   };
  }
 },
 tGke: function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  const r = n("bzos");
  const i = n("oyvS");
  const a = n("mw/K");
  const o = n("QduZ");
  function s(e) {
   let t = r.parse(e);
   if (t.protocol !== "file:" || !t.path) {
    return undefined;
   }
   let n = t.path.split("/");
   for (var a = 0, o = n.length; a < o; a++) {
    n[a] = decodeURIComponent(n[a]);
   }
   if (process.platform === "win32" && n.length > 1) {
    let e = n[0];
    let t = n[1];
    if (e.length === 0 && t.length > 1 && t[1] === ":") {
     n.shift();
    }
   }
   return i.normalize(n.join("/"));
  }
  t.uriToFilePath = s;
  function c() {
   return process.platform === "win32";
  }
  function u(e, t) {
   let r = "NODE_PATH";
   return new Promise((a, s) => {
    let u = [];
    if (e) {
     u.push(i.join(e, "node_modules"));
    }
    o.exec("npm config get prefix", (e, l, f) => {
     if (!e) {
      let e = l.replace(/[\s\r\n]+$/, "");
      if (e.length > 0) {
       if (c()) {
        u.push(i.join(e, "node_modules"));
       } else {
        u.push(i.join(e, "lib", "node_modules"));
       }
      }
     }
     let d = c() ? ";" : ":";
     let p = process.env;
     let m = Object.create(null);
     Object.keys(p).forEach(e => m[e] = p[e]);
     if (m[r]) {
      m[r] = u.join(d) + d + m[r];
     } else {
      m[r] = u.join(d);
     }
     try {
      let r = o.fork(i.join(__dirname, "resolve.js"), [], {
       env: m,
       execArgv: []
      });
      r.on("message", e => {
       if (e.command === "resolve") {
        let i = t;
        if (e.success) {
         i = e.result;
        }
        r.send({
         command: "exit"
        });
        try {
         a(n("tduj")(i));
        } catch (e) {
         s(e);
        }
       }
      });
      let c = {
       command: "resolve",
       args: t
      };
      r.send(c);
     } catch (e) {
      s(e);
     }
    });
   });
  }
  t.resolveModule = u;
  function l(e, t, n, r) {
   const a = "NODE_PATH";
   const s = [ "var p = process;", "p.on('message',function(m){", "if(m.c==='e'){", "p.exit(0);", "}", "else if(m.c==='rs'){", "try{", "var r=require.resolve(m.a);", "p.send({c:'r',s:true,r:r});", "}", "catch(err){", "p.send({c:'r',s:false});", "}", "}", "});" ].join("");
   return new Promise((c, u) => {
    let l = process.env;
    let f = Object.create(null);
    Object.keys(l).forEach(e => f[e] = l[e]);
    if (t) {
     if (f[a]) {
      f[a] = t + i.delimiter + f[a];
     } else {
      f[a] = t;
     }
     if (r) {
      r(`NODE_PATH value is: ${f[a]}`);
     }
    }
    f["ATOM_SHELL_INTERNAL_RUN_AS_NODE"] = "1";
    try {
     let t = o.fork("", [], {
      cwd: n,
      env: f,
      execArgv: [ "-e", s ]
     });
     t.on("error", e => {
      u(e);
     });
     t.on("message", n => {
      if (n.c === "r") {
       t.send({
        c: "e"
       });
       if (n.s) {
        c(n.r);
       } else {
        u(new Error(`Failed to resolve module: ${e}`));
       }
      }
     });
     let r = {
      c: "rs",
      a: e
     };
     t.send(r);
    } catch (e) {
     u(e);
    }
   });
  }
  t.resolve = l;
  function f(e) {
   let t = "npm";
   let n = {
    encoding: "utf8"
   };
   if (c()) {
    t = "npm.cmd";
    n.shell = true;
   }
   let r = o.spawnSync(t, [ "config", "get", "prefix" ], n).stdout;
   if (!r) {
    if (e) {
     e(`'npm config get prefix' didn't return a value.`);
    }
    return undefined;
   }
   let a = r.trim();
   if (e) {
    e(`'npm config get prefix' value is: ${a}`);
   }
   if (a.length > 0) {
    if (c()) {
     return i.join(a, "node_modules");
    } else {
     return i.join(a, "lib", "node_modules");
    }
   }
   return undefined;
  }
  t.resolveGlobalNodePath = f;
  function d(e) {
   let t = "yarn";
   let n = {
    encoding: "utf8"
   };
   if (c()) {
    t = "yarn.cmd";
    n.shell = true;
   }
   let r = o.spawnSync(t, [ "global", "dir", "--json" ], n);
   let a = r.stdout;
   if (!a) {
    if (e) {
     e(`'yarn global dir' didn't return a value.`);
     if (r.stderr) {
      e(r.stderr);
     }
    }
    return undefined;
   }
   let s = a.trim().split(/\r?\n/);
   for (let e of s) {
    try {
     let t = JSON.parse(e);
     if (t.type === "log") {
      return i.join(t.data, "node_modules");
     }
    } catch (e) {}
   }
   return undefined;
  }
  t.resolveGlobalYarnPath = d;
  var p;
  (function(e) {
   let t = undefined;
   function n() {
    if (t !== void 0) {
     return t;
    }
    if (process.platform === "win32") {
     t = false;
    } else {
     t = !a.existsSync(__filename.toUpperCase()) || !a.existsSync(__filename.toLowerCase());
    }
    return t;
   }
   e.isCaseSensitive = n;
   function r(e, t) {
    if (n()) {
     return i.normalize(t).indexOf(i.normalize(e)) === 0;
    } else {
     return i.normalize(t).toLowerCase().indexOf(i.normalize(e).toLowerCase()) == 0;
    }
   }
   e.isParent = r;
  })(p = t.FileSystem || (t.FileSystem = {}));
  function m(e, t, n, r) {
   if (n) {
    if (!i.isAbsolute(n)) {
     n = i.join(e, n);
    }
    return l(t, n, n, r).then(e => {
     if (p.isParent(n, e)) {
      return e;
     } else {
      return Promise.reject(new Error(`Failed to load ${t} from node path location.`));
     }
    }).then(undefined, n => {
     return l(t, f(r), e, r);
    });
   } else {
    return l(t, f(r), e, r);
   }
  }
  t.resolveModulePath = m;
  function _(e, t, r, i) {
   return m(e, t, r, i).then(e => {
    if (i) {
     i(`Module ${t} got resolved to ${e}`);
    }
    return n("tduj")(e);
   });
  }
  t.resolveModule2 = _;
 },
 tNlX: function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  var r = n("0kUd");
  var i = n("eYlL");
  function a(e, t) {
   var n = r.getLanguageModelCache(10, 60, function(t) {
    return e.parseHTMLDocument(t);
   });
   return {
    getId: function() {
     return "html";
    },
    doComplete: function(r, a, o) {
     var s;
     if (o === void 0) {
      o = t.settings;
     }
     var c = o && o.html && o.html.suggest;
     var u = o && o.html && o.html.autoClosingTags;
     if (u) {
      c.hideAutoCompleteProposals = true;
     }
     var l = [];
     var f = [ i.getPathCompletionParticipant(r, t.folders, l) ];
     e.setCompletionParticipants(f);
     var d = n.get(r);
     var p = e.doComplete(r, a, d, c);
     (s = p.items).push.apply(s, l);
     return p;
    },
    doHover: function(t, r) {
     return e.doHover(t, r, n.get(t));
    },
    findDocumentHighlight: function(t, r) {
     return e.findDocumentHighlights(t, r, n.get(t));
    },
    findDocumentLinks: function(t, n) {
     return e.findDocumentLinks(t, n);
    },
    findDocumentSymbols: function(t) {
     return e.findDocumentSymbols(t, n.get(t));
    },
    format: function(n, r, i, a) {
     if (a === void 0) {
      a = t.settings;
     }
     var s = a && a.html && a.html.format;
     if (s) {
      s = o(s, {});
     } else {
      s = {};
     }
     if (s.contentUnformatted) {
      s.contentUnformatted = s.contentUnformatted + ",script";
     } else {
      s.contentUnformatted = "script";
     }
     s = o(i, s);
     return e.format(n, r, s);
    },
    getFoldingRanges: function(t, n) {
     var r = e.getFoldingRanges(t);
     return r.filter(function(e) {
      return e.startLine >= n.start.line && e.endLine < n.end.line;
     });
    },
    doAutoClose: function(t, r) {
     var i = t.offsetAt(r);
     var a = t.getText();
     if (i > 0 && a.charAt(i - 1).match(/[>\/]/g)) {
      return e.doTagComplete(t, r, n.get(t));
     }
     return null;
    },
    onDocumentRemoved: function(e) {
     n.onDocumentRemoved(e);
    },
    dispose: function() {
     n.dispose();
    }
   };
  }
  t.getHTMLMode = a;
  function o(e, t) {
   for (var n in e) {
    if (e.hasOwnProperty(n)) {
     t[n] = e[n];
    }
   }
   return t;
  }
 },
 taON: function(e, t, n) {
  "use strict";
  var r = this && this.__awaiter || function(e, t, n, r) {
   return new (n || (n = Promise))(function(i, a) {
    function o(e) {
     try {
      c(r.next(e));
     } catch (e) {
      a(e);
     }
    }
    function s(e) {
     try {
      c(r["throw"](e));
     } catch (e) {
      a(e);
     }
    }
    function c(e) {
     e.done ? i(e.value) : new n(function(t) {
      t(e.value);
     }).then(o, s);
    }
    c((r = r.apply(e, t || [])).next());
   });
  };
  var i = this && this.__generator || function(e, t) {
   var n = {
    label: 0,
    sent: function() {
     if (a[0] & 1) throw a[1];
     return a[1];
    },
    trys: [],
    ops: []
   }, r, i, a, o;
   return o = {
    next: s(0),
    throw: s(1),
    return: s(2)
   }, typeof Symbol === "function" && (o[Symbol.iterator] = function() {
    return this;
   }), o;
   function s(e) {
    return function(t) {
     return c([ e, t ]);
    };
   }
   function c(o) {
    if (r) throw new TypeError("Generator is already executing.");
    while (n) try {
     if (r = 1, i && (a = i[o[0] & 2 ? "return" : o[0] ? "throw" : "next"]) && !(a = a.call(i, o[1])).done) return a;
     if (i = 0, a) o = [ 0, a.value ];
     switch (o[0]) {
     case 0:
     case 1:
      a = o;
      break;

     case 4:
      n.label++;
      return {
       value: o[1],
       done: false
      };

     case 5:
      n.label++;
      i = o[1];
      o = [ 0 ];
      continue;

     case 7:
      o = n.ops.pop();
      n.trys.pop();
      continue;

     default:
      if (!(a = n.trys, a = a.length > 0 && a[a.length - 1]) && (o[0] === 6 || o[0] === 2)) {
       n = 0;
       continue;
      }
      if (o[0] === 3 && (!a || o[1] > a[0] && o[1] < a[3])) {
       n.label = o[1];
       break;
      }
      if (o[0] === 6 && n.label < a[1]) {
       n.label = a[1];
       a = o;
       break;
      }
      if (a && n.label < a[2]) {
       n.label = a[2];
       n.ops.push(o);
       break;
      }
      if (a[2]) n.ops.pop();
      n.trys.pop();
      continue;
     }
     o = t.call(e, n);
    } catch (e) {
     o = [ 6, e ];
     i = 0;
    } finally {
     r = a = 0;
    }
    if (o[0] & 5) throw o[1];
    return {
     value: o[0] ? o[1] : void 0,
     done: true
    };
   }
  };
  var a = this;
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  var o = n("COhr");
  var s = n("1nW0");
  var c = n("qS/b");
  var u = n("5TYg");
  var l = n("vwnf");
  var f = n("hde3");
  var d = n("xLcF");
  var p = n("ZTF0");
  var m = n("9i2F");
  var _;
  (function(e) {
   e.type = new o.RequestType("html/tag");
  })(_ || (_ = {}));
  var g = o.createConnection();
  console.log = g.console.log.bind(g.console);
  console.error = g.console.error.bind(g.console);
  process.on("unhandledRejection", function(e) {
   console.error(d.formatError("Unhandled exception", e));
  });
  process.on("uncaughtException", function(e) {
   console.error(d.formatError("Unhandled exception", e));
  });
  var h = new o.TextDocuments();
  h.listen(g);
  var v = [];
  var y;
  var b = false;
  var x = false;
  var k = false;
  var S = false;
  var w = Number.MAX_VALUE;
  var C = {};
  var D = {};
  h.onDidClose(function(e) {
   delete D[e.document.uri];
  });
  function T(e, t) {
   if (k && t()) {
    var n = D[e.uri];
    if (!n) {
     var r = e.uri;
     var i = {
      items: [ {
       scopeUri: r,
       section: "css"
      }, {
       scopeUri: r,
       section: "html"
      }, {
       scopeUri: r,
       section: "javascript"
      } ]
     };
     n = g.sendRequest(o.ConfigurationRequest.type, i).then(function(e) {
      return {
       css: e[0],
       html: e[1],
       javascript: e[2]
      };
     });
     D[e.uri] = n;
    }
    return n;
   }
   return Promise.resolve(void 0);
  }
  g.onInitialize(function(e) {
   var t = e.initializationOptions;
   v = e.workspaceFolders;
   if (!Array.isArray(v)) {
    v = [];
    if (e.rootPath) {
     v.push({
      name: "",
      uri: f.default.file(e.rootPath).toString()
     });
    }
   }
   var n = {
    get settings() {
     return C;
    },
    get folders() {
     return v;
    }
   };
   y = s.getLanguageModes(t ? t.embeddedLanguages : {
    css: true,
    javascript: true
   }, n);
   h.onDidClose(function(e) {
    y.onDocumentRemoved(e.document);
   });
   g.onShutdown(function() {
    y.dispose();
   });
   function r(t, n) {
    var r = t.split(".");
    var i = e.capabilities;
    for (var a = 0; i && a < r.length; a++) {
     if (!i.hasOwnProperty(r[a])) {
      return n;
     }
     i = i[r[a]];
    }
    return i;
   }
   b = r("textDocument.completion.completionItem.snippetSupport", false);
   x = r("workspace.symbol.dynamicRegistration", false);
   k = r("workspace.configuration", false);
   S = r("workspace.workspaceFolders", false);
   w = r("textDocument.foldingRange.rangeLimit", Number.MAX_VALUE);
   var i = {
    textDocumentSync: h.syncKind,
    completionProvider: b ? {
     resolveProvider: true,
     triggerCharacters: [ ".", ":", "<", '"', "=", "/" ]
    } : undefined,
    hoverProvider: true,
    documentHighlightProvider: true,
    documentRangeFormattingProvider: false,
    documentLinkProvider: {
     resolveProvider: false
    },
    documentSymbolProvider: true,
    definitionProvider: true,
    signatureHelpProvider: {
     triggerCharacters: [ "(" ]
    },
    referencesProvider: true,
    colorProvider: {},
    foldingRangeProvider: true
   };
   return {
    capabilities: i
   };
  });
  g.onInitialized(function(e) {
   if (S) {
    g.client.register(o.DidChangeWorkspaceFoldersNotification.type);
    g.onNotification(o.DidChangeWorkspaceFoldersNotification.type, function(e) {
     var t = e.event.added;
     var n = e.event.removed;
     var r = [];
     if (v) {
      var i = function(e) {
       if (!n.some(function(t) {
        return t.uri === e.uri;
       }) && !t.some(function(t) {
        return t.uri === e.uri;
       })) {
        r.push(e);
       }
      };
      for (var a = 0, o = v; a < o.length; a++) {
       var s = o[a];
       i(s);
      }
     }
     v = r.concat(t);
     h.all().forEach(P);
    });
   }
  });
  var E = null;
  g.onDidChangeConfiguration(function(e) {
   C = e.settings;
   D = {};
   h.all().forEach(P);
   if (x) {
    var t = C && C.html && C.html.format && C.html.format.enable;
    if (t) {
     if (!E) {
      var n = [ {
       language: "html"
      }, {
       language: "handlebars"
      } ];
      E = g.client.register(o.DocumentRangeFormattingRequest.type, {
       documentSelector: n
      });
     }
    } else if (E) {
     E.then(function(e) {
      return e.dispose();
     });
     E = null;
    }
   }
  });
  var N = {};
  var A = 500;
  h.onDidChangeContent(function(e) {
   P(e.document);
  });
  h.onDidClose(function(e) {
   F(e.document);
   g.sendDiagnostics({
    uri: e.document.uri,
    diagnostics: []
   });
  });
  function F(e) {
   var t = N[e.uri];
   if (t) {
    clearTimeout(t);
    delete N[e.uri];
   }
  }
  function P(e) {
   F(e);
   N[e.uri] = setTimeout(function() {
    delete N[e.uri];
    O(e);
   }, A);
  }
  function I(e, t) {
   if (t === void 0) {
    t = C;
   }
   var n = t && t.html && t.html.validate;
   if (n) {
    return e === "css" && n.styles !== false || e === "javascript" && n.scripts !== false;
   }
   return true;
  }
  function O(e) {
   return r(this, void 0, void 0, function() {
    var t, n, r, a, o, s;
    return i(this, function(i) {
     switch (i.label) {
     case 0:
      i.trys.push([ 0, 3, , 4 ]);
      t = e.version;
      n = [];
      if (!(e.languageId === "html")) return [ 3, 2 ];
      r = y.getAllModesInDocument(e);
      return [ 4, T(e, function() {
       return r.some(function(e) {
        return !!e.doValidation;
       });
      }) ];

     case 1:
      a = i.sent();
      o = h.get(e.uri);
      if (o && o.version === t) {
       r.forEach(function(e) {
        if (e.doValidation && I(e.getId(), a)) {
         u.pushAll(n, e.doValidation(o, a));
        }
       });
       g.sendDiagnostics({
        uri: o.uri,
        diagnostics: n
       });
      }
      i.label = 2;

     case 2:
      return [ 3, 4 ];

     case 3:
      s = i.sent();
      g.console.error(d.formatError("Error while validating " + e.uri, s));
      return [ 3, 4 ];

     case 4:
      return [ 2 ];
     }
    });
   });
  }
  g.onCompletion(function(e, t) {
   return r(a, void 0, void 0, function() {
    var n = this;
    return i(this, function(a) {
     return [ 2, d.runSafeAsync(function() {
      return r(n, void 0, void 0, function() {
       var t, n, r, a, o;
       return i(this, function(i) {
        switch (i.label) {
        case 0:
         t = h.get(e.textDocument.uri);
         if (!t) {
          return [ 2, null ];
         }
         n = y.getModeAtPosition(t, e.position);
         if (!n || !n.doComplete) {
          return [ 2, {
           isIncomplete: true,
           items: []
          } ];
         }
         r = n.doComplete;
         if (n.getId() !== "html") {
          g.telemetry.logEvent({
           key: "html.embbedded.complete",
           value: {
            languageId: n.getId()
           }
          });
         }
         return [ 4, T(t, function() {
          return r.length > 2;
         }) ];

        case 1:
         a = i.sent();
         o = r(t, e.position, a);
         return [ 2, o ];
        }
       });
      });
     }, null, "Error while computing completions for " + e.textDocument.uri, t) ];
    });
   });
  });
  g.onCompletionResolve(function(e, t) {
   return d.runSafe(function() {
    var t = e.data;
    if (t && t.languageId && t.uri) {
     var n = y.getMode(t.languageId);
     var r = h.get(t.uri);
     if (n && n.doResolve && r) {
      return n.doResolve(r, e);
     }
    }
    return e;
   }, e, "Error while resolving completion proposal", t);
  });
  g.onHover(function(e, t) {
   return d.runSafe(function() {
    var t = h.get(e.textDocument.uri);
    if (t) {
     var n = y.getModeAtPosition(t, e.position);
     if (n && n.doHover) {
      return n.doHover(t, e.position);
     }
    }
    return null;
   }, null, "Error while computing hover for " + e.textDocument.uri, t);
  });
  g.onDocumentHighlight(function(e, t) {
   return d.runSafe(function() {
    var t = h.get(e.textDocument.uri);
    if (t) {
     var n = y.getModeAtPosition(t, e.position);
     if (n && n.findDocumentHighlight) {
      return n.findDocumentHighlight(t, e.position);
     }
    }
    return [];
   }, [], "Error while computing document highlights for " + e.textDocument.uri, t);
  });
  g.onDefinition(function(e, t) {
   return d.runSafe(function() {
    var t = h.get(e.textDocument.uri);
    if (t) {
     var n = y.getModeAtPosition(t, e.position);
     if (n && n.findDefinition) {
      return n.findDefinition(t, e.position);
     }
    }
    return [];
   }, null, "Error while computing definitions for " + e.textDocument.uri, t);
  });
  g.onReferences(function(e, t) {
   return d.runSafe(function() {
    var t = h.get(e.textDocument.uri);
    if (t) {
     var n = y.getModeAtPosition(t, e.position);
     if (n && n.findReferences) {
      return n.findReferences(t, e.position);
     }
    }
    return [];
   }, [], "Error while computing references for " + e.textDocument.uri, t);
  });
  g.onSignatureHelp(function(e, t) {
   return d.runSafe(function() {
    var t = h.get(e.textDocument.uri);
    if (t) {
     var n = y.getModeAtPosition(t, e.position);
     if (n && n.doSignatureHelp) {
      return n.doSignatureHelp(t, e.position);
     }
    }
    return null;
   }, null, "Error while computing signature help for " + e.textDocument.uri, t);
  });
  g.onDocumentRangeFormatting(function(e, t) {
   return r(a, void 0, void 0, function() {
    var n = this;
    return i(this, function(a) {
     return [ 2, d.runSafeAsync(function() {
      return r(n, void 0, void 0, function() {
       var t, n, r, a;
       return i(this, function(i) {
        switch (i.label) {
        case 0:
         t = h.get(e.textDocument.uri);
         if (!t) return [ 3, 2 ];
         return [ 4, T(t, function() {
          return true;
         }) ];

        case 1:
         n = i.sent();
         if (!n) {
          n = C;
         }
         r = n && n.html && n.html.format && n.html.format.unformatted || "";
         a = {
          css: !r.match(/\bstyle\b/),
          javascript: !r.match(/\bscript\b/)
         };
         return [ 2, c.format(y, t, e.range, e.options, n, a) ];

        case 2:
         return [ 2, [] ];
        }
       });
      });
     }, [], "Error while formatting range for " + e.textDocument.uri, t) ];
    });
   });
  });
  g.onDocumentLinks(function(e, t) {
   return d.runSafe(function() {
    var t = h.get(e.textDocument.uri);
    var n = [];
    if (t) {
     var r = l.getDocumentContext(t.uri, v);
     y.getAllModesInDocument(t).forEach(function(e) {
      if (e.findDocumentLinks) {
       u.pushAll(n, e.findDocumentLinks(t, r));
      }
     });
    }
    return n;
   }, [], "Error while document links for " + e.textDocument.uri, t);
  });
  g.onDocumentSymbol(function(e, t) {
   return d.runSafe(function() {
    var t = h.get(e.textDocument.uri);
    var n = [];
    if (t) {
     y.getAllModesInDocument(t).forEach(function(e) {
      if (e.findDocumentSymbols) {
       u.pushAll(n, e.findDocumentSymbols(t));
      }
     });
    }
    return n;
   }, [], "Error while computing document symbols for " + e.textDocument.uri, t);
  });
  g.onRequest(o.DocumentColorRequest.type, function(e, t) {
   return d.runSafe(function() {
    var t = [];
    var n = h.get(e.textDocument.uri);
    if (n) {
     y.getAllModesInDocument(n).forEach(function(e) {
      if (e.findDocumentColors) {
       u.pushAll(t, e.findDocumentColors(n));
      }
     });
    }
    return t;
   }, [], "Error while computing document colors for " + e.textDocument.uri, t);
  });
  g.onRequest(o.ColorPresentationRequest.type, function(e, t) {
   return d.runSafe(function() {
    var t = h.get(e.textDocument.uri);
    if (t) {
     var n = y.getModeAtPosition(t, e.range.start);
     if (n && n.getColorPresentations) {
      return n.getColorPresentations(t, e.color, e.range);
     }
    }
    return [];
   }, [], "Error while computing color presentations for " + e.textDocument.uri, t);
  });
  g.onRequest(_.type, function(e, t) {
   return d.runSafe(function() {
    var t = h.get(e.textDocument.uri);
    if (t) {
     var n = e.position;
     if (n.character > 0) {
      var r = y.getModeAtPosition(t, o.Position.create(n.line, n.character - 1));
      if (r && r.doAutoClose) {
       return r.doAutoClose(t, n);
      }
     }
    }
    return null;
   }, null, "Error while computing tag close actions for " + e.textDocument.uri, t);
  });
  g.onRequest(p.FoldingRangeRequest.type, function(e, t) {
   return d.runSafe(function() {
    var n = h.get(e.textDocument.uri);
    if (n) {
     return m.getFoldingRanges(y, n, w, t);
    }
    return null;
   }, null, "Error while computing folding regions for " + e.textDocument.uri, t);
  });
  g.listen();
 },
 tduj: function(e, t) {
  function n(e) {
   return require(e);
  }
  n.keys = function() {
   return [];
  };
  n.resolve = require.resolve;
  e.exports = n;
  n.id = "tduj";
 },
 toBv: function(e, t) {
  function n(e, t, n) {
   if (t in e) {
    return e[t];
   } else if (arguments.length === 3) {
    return n;
   } else {
    throw new Error('"' + t + '" is a required argument.');
   }
  }
  t.getArg = n;
  var r = /^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.-]*)(?::(\d+))?(.*)$/;
  var i = /^data:.+\,.+$/;
  function a(e) {
   var t = e.match(r);
   if (!t) {
    return null;
   }
   return {
    scheme: t[1],
    auth: t[2],
    host: t[3],
    port: t[4],
    path: t[5]
   };
  }
  t.urlParse = a;
  function o(e) {
   var t = "";
   if (e.scheme) {
    t += e.scheme + ":";
   }
   t += "//";
   if (e.auth) {
    t += e.auth + "@";
   }
   if (e.host) {
    t += e.host;
   }
   if (e.port) {
    t += ":" + e.port;
   }
   if (e.path) {
    t += e.path;
   }
   return t;
  }
  t.urlGenerate = o;
  function s(e) {
   var n = e;
   var r = a(e);
   if (r) {
    if (!r.path) {
     return e;
    }
    n = r.path;
   }
   var i = t.isAbsolute(n);
   var s = n.split(/\/+/);
   for (var c, u = 0, l = s.length - 1; l >= 0; l--) {
    c = s[l];
    if (c === ".") {
     s.splice(l, 1);
    } else if (c === "..") {
     u++;
    } else if (u > 0) {
     if (c === "") {
      s.splice(l + 1, u);
      u = 0;
     } else {
      s.splice(l, 2);
      u--;
     }
    }
   }
   n = s.join("/");
   if (n === "") {
    n = i ? "/" : ".";
   }
   if (r) {
    r.path = n;
    return o(r);
   }
   return n;
  }
  t.normalize = s;
  function c(e, t) {
   if (e === "") {
    e = ".";
   }
   if (t === "") {
    t = ".";
   }
   var n = a(t);
   var r = a(e);
   if (r) {
    e = r.path || "/";
   }
   if (n && !n.scheme) {
    if (r) {
     n.scheme = r.scheme;
    }
    return o(n);
   }
   if (n || t.match(i)) {
    return t;
   }
   if (r && !r.host && !r.path) {
    r.host = t;
    return o(r);
   }
   var c = t.charAt(0) === "/" ? t : s(e.replace(/\/+$/, "") + "/" + t);
   if (r) {
    r.path = c;
    return o(r);
   }
   return c;
  }
  t.join = c;
  t.isAbsolute = function(e) {
   return e.charAt(0) === "/" || r.test(e);
  };
  function u(e, t) {
   if (e === "") {
    e = ".";
   }
   e = e.replace(/\/$/, "");
   var n = 0;
   while (t.indexOf(e + "/") !== 0) {
    var r = e.lastIndexOf("/");
    if (r < 0) {
     return t;
    }
    e = e.slice(0, r);
    if (e.match(/^([^\/]+:\/)?\/*$/)) {
     return t;
    }
    ++n;
   }
   return Array(n + 1).join("../") + t.substr(e.length + 1);
  }
  t.relative = u;
  var l = function() {
   var e = Object.create(null);
   return !("__proto__" in e);
  }();
  function f(e) {
   return e;
  }
  function d(e) {
   if (m(e)) {
    return "$" + e;
   }
   return e;
  }
  t.toSetString = l ? f : d;
  function p(e) {
   if (m(e)) {
    return e.slice(1);
   }
   return e;
  }
  t.fromSetString = l ? f : p;
  function m(e) {
   if (!e) {
    return false;
   }
   var t = e.length;
   if (t < 9) {
    return false;
   }
   if (e.charCodeAt(t - 1) !== 95 || e.charCodeAt(t - 2) !== 95 || e.charCodeAt(t - 3) !== 111 || e.charCodeAt(t - 4) !== 116 || e.charCodeAt(t - 5) !== 111 || e.charCodeAt(t - 6) !== 114 || e.charCodeAt(t - 7) !== 112 || e.charCodeAt(t - 8) !== 95 || e.charCodeAt(t - 9) !== 95) {
    return false;
   }
   for (var n = t - 10; n >= 0; n--) {
    if (e.charCodeAt(n) !== 36) {
     return false;
    }
   }
   return true;
  }
  function _(e, t, n) {
   var r = h(e.source, t.source);
   if (r !== 0) {
    return r;
   }
   r = e.originalLine - t.originalLine;
   if (r !== 0) {
    return r;
   }
   r = e.originalColumn - t.originalColumn;
   if (r !== 0 || n) {
    return r;
   }
   r = e.generatedColumn - t.generatedColumn;
   if (r !== 0) {
    return r;
   }
   r = e.generatedLine - t.generatedLine;
   if (r !== 0) {
    return r;
   }
   return h(e.name, t.name);
  }
  t.compareByOriginalPositions = _;
  function g(e, t, n) {
   var r = e.generatedLine - t.generatedLine;
   if (r !== 0) {
    return r;
   }
   r = e.generatedColumn - t.generatedColumn;
   if (r !== 0 || n) {
    return r;
   }
   r = h(e.source, t.source);
   if (r !== 0) {
    return r;
   }
   r = e.originalLine - t.originalLine;
   if (r !== 0) {
    return r;
   }
   r = e.originalColumn - t.originalColumn;
   if (r !== 0) {
    return r;
   }
   return h(e.name, t.name);
  }
  t.compareByGeneratedPositionsDeflated = g;
  function h(e, t) {
   if (e === t) {
    return 0;
   }
   if (e === null) {
    return 1;
   }
   if (t === null) {
    return -1;
   }
   if (e > t) {
    return 1;
   }
   return -1;
  }
  function v(e, t) {
   var n = e.generatedLine - t.generatedLine;
   if (n !== 0) {
    return n;
   }
   n = e.generatedColumn - t.generatedColumn;
   if (n !== 0) {
    return n;
   }
   n = h(e.source, t.source);
   if (n !== 0) {
    return n;
   }
   n = e.originalLine - t.originalLine;
   if (n !== 0) {
    return n;
   }
   n = e.originalColumn - t.originalColumn;
   if (n !== 0) {
    return n;
   }
   return h(e.name, t.name);
  }
  t.compareByGeneratedPositionsInflated = v;
  function y(e) {
   return JSON.parse(e.replace(/^\)]}'[^\n]*\n/, ""));
  }
  t.parseSourceMapInput = y;
  function b(e, t, n) {
   t = t || "";
   if (e) {
    if (e[e.length - 1] !== "/" && t[0] !== "/") {
     e += "/";
    }
    t = e + t;
   }
   if (n) {
    var r = a(n);
    if (!r) {
     throw new Error("sourceMapURL could not be parsed");
    }
    if (r.path) {
     var i = r.path.lastIndexOf("/");
     if (i >= 0) {
      r.path = r.path.substring(0, i + 1);
     }
    }
    t = c(o(r), t);
   }
   return s(t);
  }
  t.computeSourceURL = b;
 },
 uWpP: function(e, t, n) {
  "use strict";
  var r = this && this.__extends || function() {
   var e = Object.setPrototypeOf || {
    __proto__: []
   } instanceof Array && function(e, t) {
    e.__proto__ = t;
   } || function(e, t) {
    for (var n in t) if (t.hasOwnProperty(n)) e[n] = t[n];
   };
   return function(t, n) {
    e(t, n);
    function r() {
     this.constructor = t;
    }
    t.prototype = n === null ? Object.create(n) : (r.prototype = n.prototype, new r());
   };
  }();
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  var i = n("Z5Ki");
  var a = n("1vg8");
  var o = 8192;
  var s = new Buffer("\r", "ascii")[0];
  var c = new Buffer("\n", "ascii")[0];
  var u = "\r\n";
  var l = function() {
   function e(e) {
    if (e === void 0) {
     e = "utf8";
    }
    this.encoding = e;
    this.index = 0;
    this.buffer = new Buffer(o);
   }
   e.prototype.append = function(e) {
    var t = e;
    if (typeof e === "string") {
     var n = e;
     var r = Buffer.byteLength(n, this.encoding);
     t = new Buffer(r);
     t.write(n, 0, r, this.encoding);
    }
    if (this.buffer.length - this.index >= t.length) {
     t.copy(this.buffer, this.index, 0, t.length);
    } else {
     var i = (Math.ceil((this.index + t.length) / o) + 1) * o;
     if (this.index === 0) {
      this.buffer = new Buffer(i);
      t.copy(this.buffer, 0, 0, t.length);
     } else {
      this.buffer = Buffer.concat([ this.buffer.slice(0, this.index), t ], i);
     }
    }
    this.index += t.length;
   };
   e.prototype.tryReadHeaders = function() {
    var e = undefined;
    var t = 0;
    while (t + 3 < this.index && (this.buffer[t] !== s || this.buffer[t + 1] !== c || this.buffer[t + 2] !== s || this.buffer[t + 3] !== c)) {
     t++;
    }
    if (t + 3 >= this.index) {
     return e;
    }
    e = Object.create(null);
    var n = this.buffer.toString("ascii", 0, t).split(u);
    n.forEach(function(t) {
     var n = t.indexOf(":");
     if (n === -1) {
      throw new Error("Message header must separate key and value using :");
     }
     var r = t.substr(0, n);
     var i = t.substr(n + 1).trim();
     e[r] = i;
    });
    var r = t + 4;
    this.buffer = this.buffer.slice(r);
    this.index = this.index - r;
    return e;
   };
   e.prototype.tryReadContent = function(e) {
    if (this.index < e) {
     return null;
    }
    var t = this.buffer.toString(this.encoding, 0, e);
    var n = e;
    this.buffer.copy(this.buffer, 0, n);
    this.index = this.index - n;
    return t;
   };
   Object.defineProperty(e.prototype, "numberOfBytes", {
    get: function() {
     return this.index;
    },
    enumerable: true,
    configurable: true
   });
   return e;
  }();
  var f;
  (function(e) {
   function t(e) {
    var t = e;
    return t && a.func(t.listen) && a.func(t.dispose) && a.func(t.onError) && a.func(t.onClose) && a.func(t.onPartialMessage);
   }
   e.is = t;
  })(f = t.MessageReader || (t.MessageReader = {}));
  var d = function() {
   function e() {
    this.errorEmitter = new i.Emitter();
    this.closeEmitter = new i.Emitter();
    this.partialMessageEmitter = new i.Emitter();
   }
   e.prototype.dispose = function() {
    this.errorEmitter.dispose();
    this.closeEmitter.dispose();
   };
   Object.defineProperty(e.prototype, "onError", {
    get: function() {
     return this.errorEmitter.event;
    },
    enumerable: true,
    configurable: true
   });
   e.prototype.fireError = function(e) {
    this.errorEmitter.fire(this.asError(e));
   };
   Object.defineProperty(e.prototype, "onClose", {
    get: function() {
     return this.closeEmitter.event;
    },
    enumerable: true,
    configurable: true
   });
   e.prototype.fireClose = function() {
    this.closeEmitter.fire(undefined);
   };
   Object.defineProperty(e.prototype, "onPartialMessage", {
    get: function() {
     return this.partialMessageEmitter.event;
    },
    enumerable: true,
    configurable: true
   });
   e.prototype.firePartialMessage = function(e) {
    this.partialMessageEmitter.fire(e);
   };
   e.prototype.asError = function(e) {
    if (e instanceof Error) {
     return e;
    } else {
     return new Error("Reader recevied error. Reason: " + (a.string(e.message) ? e.message : "unknown"));
    }
   };
   return e;
  }();
  t.AbstractMessageReader = d;
  var p = function(e) {
   r(t, e);
   function t(t, n) {
    if (n === void 0) {
     n = "utf8";
    }
    var r = e.call(this) || this;
    r.readable = t;
    r.buffer = new l(n);
    r._partialMessageTimeout = 1e4;
    return r;
   }
   Object.defineProperty(t.prototype, "partialMessageTimeout", {
    get: function() {
     return this._partialMessageTimeout;
    },
    set: function(e) {
     this._partialMessageTimeout = e;
    },
    enumerable: true,
    configurable: true
   });
   t.prototype.listen = function(e) {
    var t = this;
    this.nextMessageLength = -1;
    this.messageToken = 0;
    this.partialMessageTimer = undefined;
    this.callback = e;
    this.readable.on("data", function(e) {
     t.onData(e);
    });
    this.readable.on("error", function(e) {
     return t.fireError(e);
    });
    this.readable.on("close", function() {
     return t.fireClose();
    });
   };
   t.prototype.onData = function(e) {
    this.buffer.append(e);
    while (true) {
     if (this.nextMessageLength === -1) {
      var t = this.buffer.tryReadHeaders();
      if (!t) {
       return;
      }
      var n = t["Content-Length"];
      if (!n) {
       throw new Error("Header must provide a Content-Length property.");
      }
      var r = parseInt(n);
      if (isNaN(r)) {
       throw new Error("Content-Length value must be a number.");
      }
      this.nextMessageLength = r;
     }
     var i = this.buffer.tryReadContent(this.nextMessageLength);
     if (i === null) {
      this.setPartialMessageTimer();
      return;
     }
     this.clearPartialMessageTimer();
     this.nextMessageLength = -1;
     this.messageToken++;
     var a = JSON.parse(i);
     this.callback(a);
    }
   };
   t.prototype.clearPartialMessageTimer = function() {
    if (this.partialMessageTimer) {
     clearTimeout(this.partialMessageTimer);
     this.partialMessageTimer = undefined;
    }
   };
   t.prototype.setPartialMessageTimer = function() {
    var e = this;
    this.clearPartialMessageTimer();
    if (this._partialMessageTimeout <= 0) {
     return;
    }
    this.partialMessageTimer = setTimeout(function(t, n) {
     e.partialMessageTimer = undefined;
     if (t === e.messageToken) {
      e.firePartialMessage({
       messageToken: t,
       waitingTime: n
      });
      e.setPartialMessageTimer();
     }
    }, this._partialMessageTimeout, this.messageToken, this._partialMessageTimeout);
   };
   return t;
  }(d);
  t.StreamMessageReader = p;
  var m = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this) || this;
    n.process = t;
    var r = n.process;
    r.on("error", function(e) {
     return n.fireError(e);
    });
    r.on("close", function() {
     return n.fireClose();
    });
    return n;
   }
   t.prototype.listen = function(e) {
    this.process.on("message", e);
   };
   return t;
  }(d);
  t.IPCMessageReader = m;
  var _ = function(e) {
   r(t, e);
   function t(t, n) {
    if (n === void 0) {
     n = "utf-8";
    }
    return e.call(this, t, n) || this;
   }
   return t;
  }(p);
  t.SocketMessageReader = _;
 },
 vIUA: function(e, t, n) {
  "use strict";
  var r = this && this.__extends || function() {
   var e = Object.setPrototypeOf || {
    __proto__: []
   } instanceof Array && function(e, t) {
    e.__proto__ = t;
   } || function(e, t) {
    for (var n in t) if (t.hasOwnProperty(n)) e[n] = t[n];
   };
   return function(t, n) {
    e(t, n);
    function r() {
     this.constructor = t;
    }
    t.prototype = n === null ? Object.create(n) : (r.prototype = n.prototype, new r());
   };
  }();
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  var i = n("Z5Ki");
  var a = n("1vg8");
  var o = "Content-Length: ";
  var s = "\r\n";
  var c;
  (function(e) {
   function t(e) {
    var t = e;
    return t && a.func(t.dispose) && a.func(t.onClose) && a.func(t.onError) && a.func(t.write);
   }
   e.is = t;
  })(c = t.MessageWriter || (t.MessageWriter = {}));
  var u = function() {
   function e() {
    this.errorEmitter = new i.Emitter();
    this.closeEmitter = new i.Emitter();
   }
   e.prototype.dispose = function() {
    this.errorEmitter.dispose();
    this.closeEmitter.dispose();
   };
   Object.defineProperty(e.prototype, "onError", {
    get: function() {
     return this.errorEmitter.event;
    },
    enumerable: true,
    configurable: true
   });
   e.prototype.fireError = function(e, t, n) {
    this.errorEmitter.fire([ this.asError(e), t, n ]);
   };
   Object.defineProperty(e.prototype, "onClose", {
    get: function() {
     return this.closeEmitter.event;
    },
    enumerable: true,
    configurable: true
   });
   e.prototype.fireClose = function() {
    this.closeEmitter.fire(undefined);
   };
   e.prototype.asError = function(e) {
    if (e instanceof Error) {
     return e;
    } else {
     return new Error("Writer recevied error. Reason: " + (a.string(e.message) ? e.message : "unknown"));
    }
   };
   return e;
  }();
  t.AbstractMessageWriter = u;
  var l = function(e) {
   r(t, e);
   function t(t, n) {
    if (n === void 0) {
     n = "utf8";
    }
    var r = e.call(this) || this;
    r.writable = t;
    r.encoding = n;
    r.errorCount = 0;
    r.writable.on("error", function(e) {
     return r.fireError(e);
    });
    r.writable.on("close", function() {
     return r.fireClose();
    });
    return r;
   }
   t.prototype.write = function(e) {
    var t = JSON.stringify(e);
    var n = Buffer.byteLength(t, this.encoding);
    var r = [ o, n.toString(), s, s ];
    try {
     this.writable.write(r.join(""), "ascii");
     this.writable.write(t, this.encoding);
     this.errorCount = 0;
    } catch (t) {
     this.errorCount++;
     this.fireError(t, e, this.errorCount);
    }
   };
   return t;
  }(u);
  t.StreamMessageWriter = l;
  var f = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this) || this;
    n.process = t;
    n.errorCount = 0;
    n.queue = [];
    n.sending = false;
    var r = n.process;
    r.on("error", function(e) {
     return n.fireError(e);
    });
    r.on("close", function() {
     return n.fireClose;
    });
    return n;
   }
   t.prototype.write = function(e) {
    if (!this.sending && this.queue.length === 0) {
     this.doWriteMessage(e);
    } else {
     this.queue.push(e);
    }
   };
   t.prototype.doWriteMessage = function(e) {
    var t = this;
    try {
     if (this.process.send) {
      this.sending = true;
      this.process.send(e, undefined, undefined, function(n) {
       t.sending = false;
       if (n) {
        t.errorCount++;
        t.fireError(n, e, t.errorCount);
       } else {
        t.errorCount = 0;
       }
       if (t.queue.length > 0) {
        t.doWriteMessage(t.queue.shift());
       }
      });
     }
    } catch (t) {
     this.errorCount++;
     this.fireError(t, e, this.errorCount);
    }
   };
   return t;
  }(u);
  t.IPCMessageWriter = f;
  var d = function(e) {
   r(t, e);
   function t(t, n) {
    if (n === void 0) {
     n = "utf8";
    }
    var r = e.call(this) || this;
    r.socket = t;
    r.queue = [];
    r.sending = false;
    r.encoding = n;
    r.errorCount = 0;
    r.socket.on("error", function(e) {
     return r.fireError(e);
    });
    r.socket.on("close", function() {
     return r.fireClose();
    });
    return r;
   }
   t.prototype.write = function(e) {
    if (!this.sending && this.queue.length === 0) {
     this.doWriteMessage(e);
    } else {
     this.queue.push(e);
    }
   };
   t.prototype.doWriteMessage = function(e) {
    var t = this;
    var n = JSON.stringify(e);
    var r = Buffer.byteLength(n, this.encoding);
    var i = [ o, r.toString(), s, s ];
    try {
     this.sending = true;
     this.socket.write(i.join(""), "ascii", function(r) {
      if (r) {
       t.handleError(r, e);
      }
      try {
       t.socket.write(n, t.encoding, function(n) {
        t.sending = false;
        if (n) {
         t.handleError(n, e);
        } else {
         t.errorCount = 0;
        }
        if (t.queue.length > 0) {
         t.doWriteMessage(t.queue.shift());
        }
       });
      } catch (r) {
       t.handleError(r, e);
      }
     });
    } catch (t) {
     this.handleError(t, e);
    }
   };
   t.prototype.handleError = function(e, t) {
    this.errorCount++;
    this.fireError(e, t, this.errorCount);
   };
   return t;
  }(u);
  t.SocketMessageWriter = d;
 },
 vwnf: function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  var r = n("+OJx");
  var i = n("bzos");
  function a(e, t) {
   function n() {
    for (var n = 0, i = t; n < i.length; n++) {
     var a = i[n];
     var o = a.uri;
     if (!r.endsWith(o, "/")) {
      o = o + "/";
     }
     if (r.startsWith(e, o)) {
      return o;
     }
    }
    return void 0;
   }
   return {
    resolveReference: function(t, a) {
     if (a === void 0) {
      a = e;
     }
     if (t[0] === "/") {
      if (r.startsWith(a, "file://")) {
       var o = n();
       if (o) {
        return o + t.substr(1);
       }
      }
     }
     return i.resolve(a, t);
    }
   };
  }
  t.getDocumentContext = a;
 },
 wpTr: function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  var r = n("oyvS");
  var i = n("mw/K");
  var a = Object.prototype.toString;
  function o(e) {
   return typeof e !== "undefined";
  }
  function s(e) {
   return a.call(e) === "[object Number]";
  }
  function c(e) {
   return a.call(e) === "[object String]";
  }
  function u(e) {
   return e === true || e === false;
  }
  var l;
  (function(e) {
   e["file"] = "file";
   e["bundle"] = "bundle";
   e["both"] = "both";
  })(l = t.MessageFormat || (t.MessageFormat = {}));
  var f;
  (function(e) {
   function t(e) {
    var t = e;
    return t && o(t.key) && o(t.comment);
   }
   e.is = t;
  })(f || (f = {}));
  var d;
  var p;
  var m;
  var _;
  function g() {
   m = {
    locale: undefined,
    cacheLanguageResolution: true,
    messageFormat: l.bundle
   };
   if (c(process.env.VSCODE_NLS_CONFIG)) {
    try {
     var e = JSON.parse(process.env.VSCODE_NLS_CONFIG);
     if (c(e.locale)) {
      m.locale = e.locale.toLowerCase();
     }
     if (c(e._cacheRoot)) {
      m.cacheRoot = e._cacheRoot;
     }
     if (c(e._languagePackId)) {
      m.languagePackId = e._languagePackId;
     }
     if (c(e._translationsConfigFile)) {
      m.translationsConfigFile = e._translationsConfigFile;
      try {
       m.translationsConfig = n("MxNS")(m.translationsConfigFile);
      } catch (e) {}
     }
    } catch (e) {}
   }
   _ = m.locale === "pseudo";
   d = undefined;
   p = Object.create(null);
  }
  g();
  function h() {
   return m.cacheRoot !== undefined && m.languagePackId !== undefined && m.translationsConfigFile !== undefined && m.translationsConfig !== undefined;
  }
  function v(e, t) {
   var n;
   if (_) {
    e = "［" + e.replace(/[aouei]/g, "$&$&") + "］";
   }
   if (t.length === 0) {
    n = e;
   } else {
    n = e.replace(/\{(\d+)\}/g, function(e, n) {
     var r = n[0];
     return typeof t[r] !== "undefined" ? t[r] : e;
    });
   }
   return n;
  }
  function y(e) {
   return function(t, n) {
    var r = [];
    for (var i = 2; i < arguments.length; i++) {
     r[i - 2] = arguments[i];
    }
    if (s(t)) {
     if (t >= e.length) {
      console.error("Broken localize call found. Index out of bounds. Stacktrace is\n: " + new Error("").stack);
      return;
     }
     return v(e[t], r);
    } else {
     if (c(n)) {
      console.warn("Message " + n + " didn't get externalized correctly.");
      return v(n, r);
     } else {
      console.error("Broken localize call found. Stacktrace is\n: " + new Error("").stack);
     }
    }
   };
  }
  function b(e, t) {
   var n = [];
   for (var r = 2; r < arguments.length; r++) {
    n[r - 2] = arguments[r];
   }
   return v(t, n);
  }
  function x(e) {
   var t;
   if (m.cacheLanguageResolution && t) {
    t = t;
   } else {
    if (_ || !m.locale) {
     t = ".nls.json";
    } else {
     var n = m.locale;
     while (n) {
      var r = ".nls." + n + ".json";
      if (i.existsSync(e + r)) {
       t = r;
       break;
      } else {
       var a = n.lastIndexOf("-");
       if (a > 0) {
        n = n.substring(0, a);
       } else {
        t = ".nls.json";
        n = null;
       }
      }
     }
    }
    if (m.cacheLanguageResolution) {
     t = t;
    }
   }
   return e + t;
  }
  function k(e) {
   var t = m.locale;
   while (t) {
    var n = r.join(e, "nls.bundle." + t + ".json");
    if (i.existsSync(n)) {
     return n;
    } else {
     var a = t.lastIndexOf("-");
     if (a > 0) {
      t = t.substring(0, a);
     } else {
      t = undefined;
     }
    }
   }
   if (t === undefined) {
    var n = r.join(e, "nls.bundle.json");
    if (i.existsSync(n)) {
     return n;
    }
   }
   return undefined;
  }
  function S(e) {
   try {
    i.mkdirSync(e);
   } catch (n) {
    if (n.code === "EEXIST") {
     return;
    } else if (n.code === "ENOENT") {
     var t = r.dirname(e);
     if (t !== e) {
      S(t);
      i.mkdirSync(e);
     }
    } else {
     throw n;
    }
   }
  }
  function w(e) {
   var t = n("MxNS")(r.join(e, "nls.metadata.json"));
   var i = Object.create(null);
   for (var a in t) {
    var o = t[a];
    i[a] = o.messages;
   }
   return i;
  }
  function C(e, t) {
   var i = m.translationsConfig[e.id];
   if (!i) {
    return undefined;
   }
   var a = n("MxNS")(i).contents;
   var o = n("MxNS")(r.join(t, "nls.metadata.json"));
   var s = Object.create(null);
   for (var u in o) {
    var l = o[u];
    var f = a[e.outDir + "/" + u];
    if (f) {
     var d = [];
     for (var p = 0; p < l.keys.length; p++) {
      var _ = l.keys[p];
      var g = c(_) ? _ : _.key;
      var h = f[g];
      if (h === undefined) {
       h = l.messages[p];
      }
      d.push(h);
     }
     s[u] = d;
    } else {
     s[u] = l.messages;
    }
   }
   return s;
  }
  function D(e) {
   var t = new Date();
   i.utimes(e, t, t, function() {});
  }
  function T(e, t) {
   p[e] = t;
   return t;
  }
  function E(e, t) {
   var n;
   var a = r.join(m.cacheRoot, e.id + "-" + e.hash + ".json");
   var o = false;
   var s = false;
   try {
    n = JSON.parse(i.readFileSync(a, {
     encoding: "utf8",
     flag: "r"
    }));
    D(a);
    return n;
   } catch (e) {
    if (e.code === "ENOENT") {
     s = true;
    } else if (e instanceof SyntaxError) {
     console.log("Syntax error parsing message bundle: " + e.message);
     o = true;
    } else {
     throw e;
    }
   }
   n = C(e, t);
   if (!n || o) {
    return n;
   }
   if (s) {
    try {
     i.writeFileSync(a, JSON.stringify(n), {
      encoding: "utf8",
      flag: "wx"
     });
    } catch (e) {
     if (e.code === "EEXIST") {
      return n;
     }
     throw e;
    }
   }
   return n;
  }
  function N(e, t) {
   var r;
   if (h()) {
    try {
     r = E(e, t);
    } catch (e) {
     console.log("Load or create bundle failed ", e);
    }
   }
   if (!r) {
    var i = k(t);
    if (i) {
     try {
      return n("MxNS")(i);
     } catch (e) {
      console.log("Loading in the box message bundle failed.", e);
     }
    }
    try {
     r = w(t);
    } catch (e) {
     console.log("Generating default bundle from meta data failed.", e);
     r = undefined;
    }
   }
   return r;
  }
  function A(e) {
   var t;
   var n = r.dirname(e);
   while (true) {
    t = r.join(n, "nls.metadata.header.json");
    if (i.existsSync(t)) {
     break;
    }
    var a = r.dirname(n);
    if (a === n) {
     t = undefined;
     break;
    } else {
     n = a;
    }
   }
   return t;
  }
  function F(e) {
   if (!e) {
    return b;
   }
   var t = r.extname(e);
   if (t) {
    e = e.substr(0, e.length - t.length);
   }
   if (m.messageFormat === l.both || m.messageFormat === l.bundle) {
    var a = A(e);
    if (a) {
     var s = r.dirname(a);
     var c = p[s];
     if (c === undefined) {
      try {
       var u = JSON.parse(i.readFileSync(a, "utf8"));
       try {
        var f = N(u, s);
        c = T(s, f ? {
         header: u,
         nlsBundle: f
        } : null);
       } catch (e) {
        console.error("Failed to load nls bundle", e);
        c = T(s, null);
       }
      } catch (e) {
       console.error("Failed to read header file", e);
       c = T(s, null);
      }
     }
     if (c) {
      var d = e.substr(s.length + 1).replace(/\\/g, "/");
      var _ = c.nlsBundle[d];
      if (_ === undefined) {
       console.error("Messages for file " + e + " not found. See console for details.");
       return function() {
        return "Messages not found.";
       };
      }
      return y(_);
     }
    }
   }
   if (m.messageFormat === l.both || m.messageFormat === l.file) {
    try {
     var g = n("MxNS")(x(e));
     if (Array.isArray(g)) {
      return y(g);
     } else {
      if (o(g.messages) && o(g.keys)) {
       return y(g.messages);
      } else {
       console.error("String bundle '" + e + "' uses an unsupported format.");
       return function() {
        return "File bundle has unsupported format. See console for details";
       };
      }
     }
    } catch (e) {
     if (e.code !== "ENOENT") {
      console.error("Failed to load single file bundle", e);
     }
    }
   }
   console.error("Failed to load message bundle for file " + e);
   return function() {
    return "Failed to load message bundle. See console for details.";
   };
  }
  t.loadMessageBundle = F;
  function P(e) {
   if (e) {
    if (c(e.locale)) {
     m.locale = e.locale.toLowerCase();
     d = undefined;
     p = Object.create(null);
    }
    if (e.messageFormat !== undefined) {
     m.messageFormat = e.messageFormat;
    }
   }
   _ = m.locale === "pseudo";
   return F;
  }
  t.config = P;
 },
 xLcF: function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  var r = n("COhr");
  function i(e, t) {
   if (t instanceof Error) {
    var n = t;
    return e + ": " + n.message + "\n" + n.stack;
   } else if (typeof t === "string") {
    return e + ": " + t;
   } else if (t) {
    return e + ": " + t.toString();
   }
   return e;
  }
  t.formatError = i;
  function a(e, t, n, r) {
   return new Promise(function(a, o) {
    setImmediate(function() {
     if (r.isCancellationRequested) {
      a(s());
     }
     return e().then(function(e) {
      if (r.isCancellationRequested) {
       a(s());
       return;
      } else {
       a(e);
      }
     }, function(e) {
      console.error(i(n, e));
      a(t);
     });
    });
   });
  }
  t.runSafeAsync = a;
  function o(e, t, n, r) {
   return new Promise(function(a, o) {
    setImmediate(function() {
     if (r.isCancellationRequested) {
      a(s());
     } else {
      try {
       var o = e();
       if (r.isCancellationRequested) {
        a(s());
        return;
       } else {
        a(o);
       }
      } catch (e) {
       console.error(i(n, e));
       a(t);
      }
     }
    });
   });
  }
  t.runSafe = o;
  function s() {
   return new r.ResponseError(r.ErrorCodes.RequestCancelled, "Request cancelled");
  }
 },
 yLgJ: function(e, t) {
  e.exports = require("module");
 },
 yyD5: function(e, t, n) {
  t.SourceMapGenerator = n("9o2r").SourceMapGenerator;
  t.SourceMapConsumer = n("rQwE").SourceMapConsumer;
  t.SourceNode = n("sKAq").SourceNode;
 },
 zZpG: function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  const r = n("C+6V");
  var i;
  (function(e) {
   e.type = new r.RequestType("textDocument/documentColor");
  })(i = t.DocumentColorRequest || (t.DocumentColorRequest = {}));
  var a;
  (function(e) {
   e.type = new r.RequestType("textDocument/colorPresentation");
  })(a = t.ColorPresentationRequest || (t.ColorPresentationRequest = {}));
 }
});